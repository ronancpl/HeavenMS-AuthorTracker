{"fetchDate": "2019-12-19", "content": [{"sha": "8afbff9db94505cc0583a2544ed7147dc337cdd3", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6OGFmYmZmOWRiOTQ1MDVjYzA1ODNhMjU0NGVkNzE0N2RjMzM3Y2RkMw==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-12-07T06:05:26Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-12-07T06:05:26Z"}, "message": "Stat pool & Skills on change field Patch + Elemental Charge broadcast\n\nPatched account storages not getting cached properly at login time.\nReviewed item acquisition at the Cash Shop happening before point transaction.\nEXP toggle flag now also works on equipment gains.\nFactored several skills (Energy Charge, Wind Walk, Dash) not updating properly other players when changing maps.\nRefactored stat pool system, which wasn't working properly on limit scenarios.\nFixed \"untradeable at wear\"equipments losing flags upon equipping.\nReviewed Inventory Sort, now sorting projectiles at descending order on damage.\nImplemented support for visibility of effects on weapons imbued with Charge skill (e.g. Paladin's Holy Charge) for other players.", "tree": {"sha": "893998db6d49af09799eb69bc59f619422ca6000", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/893998db6d49af09799eb69bc59f619422ca6000"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/8afbff9db94505cc0583a2544ed7147dc337cdd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/8afbff9db94505cc0583a2544ed7147dc337cdd3", "html_url": "https://github.com/ronancpl/HeavenMS/commit/8afbff9db94505cc0583a2544ed7147dc337cdd3", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/8afbff9db94505cc0583a2544ed7147dc337cdd3/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06b43d9e078bbba38f95e67db160dc79b18669b0", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/06b43d9e078bbba38f95e67db160dc79b18669b0", "html_url": "https://github.com/ronancpl/HeavenMS/commit/06b43d9e078bbba38f95e67db160dc79b18669b0"}], "stats": {"total": 587, "additions": 353, "deletions": 234}, "files": [{"sha": "3b787ea089b8f50c753425efa53fa4baf56c3427", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -2305,4 +2305,27 @@ Corrigido buff Final Attack de Cygnus sendo reaplicado a todo acerto de skill.\n 24 - 25 Novembro 2019,\n Corrigido caso n\u00e3o sendo checado devidamente com Maker.\n Corrigido contagem de proj\u00e9teis nos stats de skill usando tipo de dados de tamanho insuficiente.\n-Refatorado acesso a membros relativos a Dojo em canais de forma a buscar melhorar efetividade dos ingressos e libera\u00e7\u00f5es de lobby.\n\\ No newline at end of file\n+Refatorado acesso a membros relativos a Dojo em canais de forma a buscar melhorar efetividade dos ingressos e libera\u00e7\u00f5es de lobby.\n+Revisado exce\u00e7\u00e3o inutiliz\u00e1vel na classe geradora de \u00e1reas do jogo.\n+\n+27 Novembro 2019,\n+Revisado carregamento de storage da DB ocorrendo a cada login realizado.\n+Revisado aquisi\u00e7\u00e3o de itens no CS ocorrendo antes de utilizar os pontos dispon\u00edveis.\n+\n+28 Novembro 2019,\n+Revisado intera\u00e7\u00e3o de flag de permiss\u00e3o de ganho de EXP em equipamentos.\n+\n+29 - 30 Novembro 2019,\n+Fatorado diversas habilidades (Energy Charge, Wind Walk, Dash) n\u00e3o transcorrendo como esperado na vis\u00e3o de outros jogadores ao trocar de mapas.\n+\n+02 - 03 Dezembro 2019,\n+Revisado uso de locks compartilhados em MapleClient.\n+Refatorado cria\u00e7\u00e3o de conjunto durante checagem de slots, que seria de fato efetivo em cen\u00e1rios muito raros (melhor deixar inser\u00e7\u00e3o de itens limitados dar fail-fast nas r\u00e9plicas).\n+Refatorado sistema de pool de stats, que estava atuando erroneamente em casos-limite.\n+Corrigido Item Guard inconsistentemente levando a NPE ao utilizar o mesmo.\n+Corrigido itens perdendo flags ao equipar aqueles tidos como \"untradeable ap\u00f3s equipar\".\n+Revisado Inventory Sort, agora ordenando proj\u00e9teis por b\u00f4nus de dano.\n+\n+06 Dezembro 2019,\n+Implementado pacote para vis\u00e3o de buffs de efeito imbu\u00eddo em armas para outros jogadores.\n+Corrigido casos de exce\u00e7\u00e3o devido a portais nulos na fun\u00e7\u00e3o que troca jogador de mapas interferindo com pr\u00f3ximas trocas de mapa (jogador fica preso at\u00e9 relogar).\n\\ No newline at end of file"}, {"sha": "fcf7833e05d57c9f7829b16cd6defdbfb8ef5829", "filename": "scripts/npc/9977777.js", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/scripts/npc/9977777.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/scripts/npc/9977777.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9977777.js?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -1,6 +1,6 @@\n /*\n     This file is part of the HeavenMS MapleStory Server\n-    Copyleft (L) 2016 - 2018 RonanLana\n+    Copyleft (L) 2016 - 2019 RonanLana\n \n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU Affero General Public License as\n@@ -61,8 +61,9 @@ function writeFeatureTab_Skills() {\n         addFeature(\"Maker skill features developed - pckts thanks Arnah.\");\n         addFeature(\"Chair Mastery - map chair boosts HP/MP rec.\");\n         addFeature(\"Mu Lung Dojo skills functional.\");\n-        addFeature(\"Monster Magnet skill no longer crashes players.\");\n+        addFeature(\"Monster Magnet skill on bosses no longer crash.\");\n         addFeature(\"HP/MP consumption from skills triggers pet autopot.\");\n+        addFeature(\"Elemental weapon imbue visibility for other players.\");\n }\n \n function writeFeatureTab_Quests() {"}, {"sha": "205d0535e156ece5145950ef5c2f0a4762239e84", "filename": "src/client/AbstractMapleCharacterObject.java", "status": "modified", "additions": 48, "deletions": 31, "changes": 79, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/AbstractMapleCharacterObject.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/AbstractMapleCharacterObject.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/AbstractMapleCharacterObject.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -277,17 +277,22 @@ protected void setMaxMp(int mp_) {\n         this.clientmaxmp = Math.min(30000, mp_);\n     }\n     \n-    private static long calcStatPoolNode(long v, int displacement) {\n-        if (v > Short.MAX_VALUE) {\n-            v = Short.MAX_VALUE;\n-        } else if (v < Short.MIN_VALUE) {\n-            v = Short.MIN_VALUE;\n+    private static long clampStat(int v, int min, int max) {\n+        return (v < min) ? min : ((v > max) ? max : v);\n+    }\n+    \n+    private static long calcStatPoolNode(Integer v, int displacement) {\n+        long r;\n+        if (v == null) {\n+            r = -32768;\n+        } else {\n+            r = clampStat(v, -32767, 32767);\n         }\n         \n-        return ((v & 0x0FFFF) << displacement);\n+        return ((r & 0x0FFFF) << displacement);\n     }\n     \n-    private static long calcStatPoolLong(int v1, int v2, int v3, int v4) {\n+    private static long calcStatPoolLong(Integer v1, Integer v2, Integer v3, Integer v4) {\n         long ret = 0;\n         \n         ret |= calcStatPoolNode(v1, 48);\n@@ -419,40 +424,48 @@ public void updateHpMp(int newhp, int newmp) {\n     }\n     \n     protected void changeHpMp(int newhp, int newmp, boolean silent) {\n-        changeHpMpPool(newhp, newmp, Short.MIN_VALUE, Short.MIN_VALUE, silent);\n+        changeHpMpPool(newhp, newmp, null, null, silent);\n     }\n     \n-    private void changeHpMpPool(int hp, int mp, int maxhp, int maxmp, boolean silent) {\n+    private void changeHpMpPool(Integer hp, Integer mp, Integer maxhp, Integer maxmp, boolean silent) {\n         long hpMpPool = calcStatPoolLong(hp, mp, maxhp, maxmp);\n         changeStatPool(hpMpPool, null, null, -1, silent);\n     }\n     \n     public void updateHp(int hp) {\n-        updateHpMaxHp(hp, Short.MIN_VALUE);\n+        updateHpMaxHp(hp, null);\n     }\n     \n     public void updateMaxHp(int maxhp) {\n-        updateHpMaxHp(Short.MIN_VALUE, maxhp);\n+        updateHpMaxHp(null, maxhp);\n     }\n     \n     public void updateHpMaxHp(int hp, int maxhp) {\n-        changeHpMpPool(hp, Short.MIN_VALUE, maxhp, Short.MIN_VALUE, false);\n+        updateHpMaxHp(Integer.valueOf(hp), Integer.valueOf(maxhp));\n+    }\n+    \n+    private void updateHpMaxHp(Integer hp, Integer maxhp) {\n+        changeHpMpPool(hp, null, maxhp, null, false);\n     }\n     \n     public void updateMp(int mp) {\n-        updateMpMaxMp(mp, Short.MIN_VALUE);\n+        updateMpMaxMp(mp, null);\n     }\n     \n     public void updateMaxMp(int maxmp) {\n-        updateMpMaxMp(Short.MIN_VALUE, maxmp);\n+        updateMpMaxMp(null, maxmp);\n     }\n     \n     public void updateMpMaxMp(int mp, int maxmp) {\n-        changeHpMpPool(Short.MIN_VALUE, mp, Short.MIN_VALUE, maxmp, false);\n+        updateMpMaxMp(Integer.valueOf(mp), Integer.valueOf(maxmp));\n+    }\n+    \n+    private void updateMpMaxMp(Integer mp, Integer maxmp) {\n+        changeHpMpPool(null, mp, null, maxmp, false);\n     }\n     \n     public void updateMaxHpMaxMp(int maxhp, int maxmp) {\n-        changeHpMpPool(Short.MIN_VALUE, Short.MIN_VALUE, maxhp, maxmp, false);\n+        changeHpMpPool(null, null, maxhp, maxmp, false);\n     }\n     \n     protected void enforceMaxHpMp() {\n@@ -521,7 +534,7 @@ protected void addMaxMPMaxHP(int hpdelta, int mpdelta, boolean silent) {\n         effLock.lock();\n         statWlock.lock();\n         try {\n-            changeHpMpPool(Short.MIN_VALUE, Short.MIN_VALUE, maxhp + hpdelta, maxmp + mpdelta, silent);\n+            changeHpMpPool(null, null, maxhp + hpdelta, maxmp + mpdelta, silent);\n         } finally {\n             statWlock.unlock();\n             effLock.unlock();\n@@ -567,19 +580,19 @@ private void setLuk(int luk) {\n     }\n     \n     public boolean assignStr(int x) {\n-        return assignStrDexIntLuk(x, Short.MIN_VALUE, Short.MIN_VALUE, Short.MIN_VALUE);\n+        return assignStrDexIntLuk(x, null, null, null);\n     }\n     \n     public boolean assignDex(int x) {\n-        return assignStrDexIntLuk(Short.MIN_VALUE, x, Short.MIN_VALUE, Short.MIN_VALUE);\n+        return assignStrDexIntLuk(null, x, null, null);\n     }\n     \n     public boolean assignInt(int x) {\n-        return assignStrDexIntLuk(Short.MIN_VALUE, Short.MIN_VALUE, x, Short.MIN_VALUE);\n+        return assignStrDexIntLuk(null, null, x, null);\n     }\n     \n     public boolean assignLuk(int x) {\n-        return assignStrDexIntLuk(Short.MIN_VALUE, Short.MIN_VALUE, Short.MIN_VALUE, x);\n+        return assignStrDexIntLuk(null, null, null, x);\n     }\n     \n     public boolean assignHP(int deltaHP, int deltaAp) {\n@@ -590,7 +603,7 @@ public boolean assignHP(int deltaHP, int deltaAp) {\n                 return false;\n             }\n             \n-            long hpMpPool = calcStatPoolLong(Short.MIN_VALUE, Short.MIN_VALUE, maxhp + deltaHP, maxmp);\n+            long hpMpPool = calcStatPoolLong(null, null, maxhp + deltaHP, maxmp);\n             long strDexIntLuk = calcStatPoolLong(str, dex, int_, luk);\n \n             changeStatPool(hpMpPool, strDexIntLuk, null, remainingAp - deltaAp, false);\n@@ -610,7 +623,7 @@ public boolean assignMP(int deltaMP, int deltaAp) {\n                 return false;\n             }\n \n-            long hpMpPool = calcStatPoolLong(Short.MIN_VALUE, Short.MIN_VALUE, maxhp, maxmp + deltaMP);\n+            long hpMpPool = calcStatPoolLong(null, null, maxhp, maxmp + deltaMP);\n             long strDexIntLuk = calcStatPoolLong(str, dex, int_, luk);\n \n             changeStatPool(hpMpPool, strDexIntLuk, null, remainingAp - deltaAp, false);\n@@ -622,11 +635,15 @@ public boolean assignMP(int deltaMP, int deltaAp) {\n         }\n     }\n     \n-    private static int apAssigned(int x) {\n-        return x != Short.MIN_VALUE ? x : 0;\n+    private static int apAssigned(Integer x) {\n+        return x != null ? x : 0;\n     }\n     \n     public boolean assignStrDexIntLuk(int deltaStr, int deltaDex, int deltaInt, int deltaLuk) {\n+        return assignStrDexIntLuk(Integer.valueOf(deltaStr), Integer.valueOf(deltaDex), Integer.valueOf(deltaInt), Integer.valueOf(deltaLuk));\n+    }\n+    \n+    private boolean assignStrDexIntLuk(Integer deltaStr, Integer deltaDex, Integer deltaInt, Integer deltaLuk) {\n         effLock.lock();\n         statWlock.lock();\n         try {\n@@ -636,19 +653,19 @@ public boolean assignStrDexIntLuk(int deltaStr, int deltaDex, int deltaInt, int\n             }\n \n             int newStr = str + deltaStr, newDex = dex + deltaDex, newInt = int_ + deltaInt, newLuk = luk + deltaLuk;\n-            if (newStr < 4 && deltaStr != Short.MIN_VALUE || newStr > YamlConfig.config.server.MAX_AP) {\n+            if (newStr < 4 && deltaStr != null || newStr > YamlConfig.config.server.MAX_AP) {\n                 return false;\n             }\n \n-            if (newDex < 4 && deltaDex != Short.MIN_VALUE || newDex > YamlConfig.config.server.MAX_AP) {\n+            if (newDex < 4 && deltaDex != null || newDex > YamlConfig.config.server.MAX_AP) {\n                 return false;\n             }\n \n-            if (newInt < 4 && deltaInt != Short.MIN_VALUE || newInt > YamlConfig.config.server.MAX_AP) {\n+            if (newInt < 4 && deltaInt != null || newInt > YamlConfig.config.server.MAX_AP) {\n                 return false;\n             }\n \n-            if (newLuk < 4 && deltaLuk != Short.MIN_VALUE || newLuk > YamlConfig.config.server.MAX_AP) {\n+            if (newLuk < 4 && deltaLuk != null || newLuk > YamlConfig.config.server.MAX_AP) {\n                 return false;\n             }\n \n@@ -691,12 +708,12 @@ protected void updateStrDexIntLuk(int str, int dex, int int_, int luk, int remai\n         changeStrDexIntLuk(str, dex, int_, luk, remainingAp, false);\n     }\n     \n-    private void changeStrDexIntLuk(int str, int dex, int int_, int luk, int remainingAp, boolean silent) {\n+    private void changeStrDexIntLuk(Integer str, Integer dex, Integer int_, Integer luk, int remainingAp, boolean silent) {\n         long strDexIntLuk = calcStatPoolLong(str, dex, int_, luk);\n         changeStatPool(null, strDexIntLuk, null, remainingAp, silent);\n     }\n     \n-    private void changeStrDexIntLukSp(int str, int dex, int int_, int luk, int remainingAp, int remainingSp, int skillbook, boolean silent) {\n+    private void changeStrDexIntLukSp(Integer str, Integer dex, Integer int_, Integer luk, int remainingAp, int remainingSp, int skillbook, boolean silent) {\n         long strDexIntLuk = calcStatPoolLong(str, dex, int_, luk);\n         long sp = calcStatPoolLong(0, 0, remainingSp, skillbook);\n         changeStatPool(null, strDexIntLuk, sp, remainingAp, silent);"}, {"sha": "7284964a6bc5460fe2a0343541abe15fe5346831", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 47, "deletions": 23, "changes": 70, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -1472,11 +1472,14 @@ public void changeMap(MapleMap to, int portal) {\n         changeMap(to, to.getPortal(portal));\n     }\n     \n-    public void changeMap(final MapleMap target, final MaplePortal pto) {\n+    public void changeMap(final MapleMap target, MaplePortal pto) {\n         canWarpCounter++;\n         \n         eventChangedMap(target.getId());    // player can be dropped from an event here, hence the new warping target.\n         MapleMap to = getWarpMap(target.getId());\n+        if (pto == null) {\n+            pto = to.getPortal(0);\n+        }\n         changeMapInternal(to, pto.getPosition(), MaplePacketCreator.getWarpToMap(to, pto.getId(), this));\n         canWarpMap = false;\n         \n@@ -1504,7 +1507,7 @@ public void changeMap(final MapleMap target, final Point pos) {\n         eventAfterChangedMap(this.getMapId());\n     }\n     \n-    public void forceChangeMap(final MapleMap target, final MaplePortal pto) {\n+    public void forceChangeMap(final MapleMap target, MaplePortal pto) {\n         // will actually enter the map given as parameter, regardless of being an eventmap or whatnot\n         \n         canWarpCounter++;\n@@ -1525,6 +1528,9 @@ public void forceChangeMap(final MapleMap target, final MaplePortal pto) {\n         }\n         \n         MapleMap to = target; // warps directly to the target intead of the target's map id, this allows GMs to patrol players inside instances.\n+        if (pto == null) {\n+            pto = to.getPortal(0);\n+        }\n         changeMapInternal(to, pto.getPosition(), MaplePacketCreator.getWarpToMap(to, pto.getId(), this));\n         canWarpMap = false;\n         \n@@ -6102,7 +6108,7 @@ public void run() {\n                     List<Pair<MapleBuffStat, Integer>> stat = Collections.singletonList(new Pair<>(MapleBuffStat.ENERGY_CHARGE, energybar));\n                     setBuffedValue(MapleBuffStat.ENERGY_CHARGE, energybar);\n                     client.announce(MaplePacketCreator.giveBuff(energybar, 0, stat));\n-                    getMap().broadcastMessage(chr, MaplePacketCreator.giveForeignBuff(energybar, stat));\n+                    getMap().broadcastMessage(chr, MaplePacketCreator.cancelForeignFirstDebuff(id, ((long) 1) << 50));\n                 }\n             }, ceffect.getDuration());\n         }\n@@ -9403,25 +9409,41 @@ public void setSkinColor(MapleSkinColor skinColor) {\n     public byte getSlots(int type) {\n         return type == MapleInventoryType.CASH.getType() ? 96 : inventory[type].getSlotLimit();\n     }\n-\n+    \n+    public boolean canGainSlots(int type, int slots) {\n+        slots += inventory[type].getSlotLimit();\n+        return slots <= 96;\n+    }\n+    \n     public boolean gainSlots(int type, int slots) {\n         return gainSlots(type, slots, true);\n     }\n \n     public boolean gainSlots(int type, int slots, boolean update) {\n-        slots += inventory[type].getSlotLimit();\n-        if (slots <= 96) {\n-            inventory[type].setSlotLimit(slots);\n-\n+        boolean ret = gainSlotsInternal(type, slots, update);\n+        if (ret) {\n             this.saveCharToDB();\n             if (update) {\n                 client.announce(MaplePacketCreator.updateInventorySlotLimit(type, slots));\n             }\n-\n-            return true;\n         }\n-\n-        return false;\n+        \n+        return ret;\n+    }\n+    \n+    private boolean gainSlotsInternal(int type, int slots, boolean update) {\n+        inventory[type].lockInventory();\n+        try {\n+            if (canGainSlots(type, slots)) {\n+                slots += inventory[type].getSlotLimit();\n+                inventory[type].setSlotLimit(slots);\n+                return true;\n+            } else {\n+                return false;\n+            }\n+        } finally {\n+            inventory[type].unlockInventory();\n+        }\n     }\n     \n     public int sellAllItemsFromName(byte invTypeId, String name) {\n@@ -10487,18 +10509,20 @@ private void unequipPendantOfSpirit() {\n     }\n     \n     public void increaseEquipExp(int expGain) {\n-        if(expGain < 0) {\n-            expGain = Integer.MAX_VALUE;\n-        }\n-        \n-        for (Item item : getUpgradeableEquipList()) {\n-            Equip nEquip = (Equip) item;\n-            String itemName = ii.getName(nEquip.getItemId());\n-            if (itemName == null) {\n-                continue;\n+        if (allowExpGain) {     // thanks Vcoc for suggesting equip EXP gain conditionally\n+            if(expGain < 0) {\n+                expGain = Integer.MAX_VALUE;\n+            }\n+\n+            for (Item item : getUpgradeableEquipList()) {\n+                Equip nEquip = (Equip) item;\n+                String itemName = ii.getName(nEquip.getItemId());\n+                if (itemName == null) {\n+                    continue;\n+                }\n+\n+                nEquip.gainItemExp(client, expGain);\n             }\n-            \n-            nEquip.gainItemExp(client, expGain);\n         }\n     }\n     "}, {"sha": "bd8b34e7732cc78cd9f963725339279744cfc431", "filename": "src/client/MapleClient.java", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/MapleClient.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/MapleClient.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleClient.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -118,8 +118,7 @@\n \tprivate final Lock lock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT, true);\n         private final Lock encoderLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_ENCODER, true);\n         private final Lock announcerLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_ANNOUNCER, true);\n-        private static final int lockCount = 200;\n-        private static final Lock loginLocks[] = new Lock[lockCount];  // thanks Masterrulax & try2hack for pointing out a bottleneck issue here\n+        // thanks Masterrulax & try2hack for pointing out a bottleneck issue with shared locks, shavit for noticing an opportunity for improvement\n         private Calendar tempBanCalendar;\n \tprivate int votePoints;\n \tprivate int voteTime = -1;\n@@ -129,12 +128,6 @@\n         private long lastPacket = System.currentTimeMillis();\n         private int lang = 0;\n         \n-        static {\n-            for (int i = 0; i < lockCount; i++) {\n-                loginLocks[i] = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_LOGIN, true);\n-            }\n-        }\n-        \n \tpublic void updateLastPacket() {\n \t\tlastPacket = System.currentTimeMillis();\n \t}\n@@ -453,16 +446,15 @@ public void banMacs() {\n \t}\n \n \tpublic int finishLogin() {\n-                Lock loginLock = loginLocks[this.getAccID() % lockCount];\n-                loginLock.lock();\n+                encoderLock.lock();\n                 try {\n                     if (getLoginState() > LOGIN_NOTLOGGEDIN) { // 0 = LOGIN_NOTLOGGEDIN, 1= LOGIN_SERVER_TRANSITION, 2 = LOGIN_LOGGEDIN\n                         loggedIn = false;\n                         return 7;\n                     }\n                     updateLoginState(MapleClient.LOGIN_LOGGEDIN);\n                 } finally {\n-                    loginLock.unlock();\n+                    encoderLock.unlock();\n                 }\n             \n \t\treturn 0;\n@@ -1379,8 +1371,12 @@ public void setCharacterSlots(byte slots) {\n                 characterSlots = slots;\n \t}\n         \n+        public boolean canGainCharacterSlot() {\n+                return characterSlots < 15;\n+        }\n+        \n         public synchronized boolean gainCharacterSlot() {\n-\t\tif (characterSlots < 15) {\n+\t\tif (canGainCharacterSlot()) {\n \t\t\tConnection con = null;\n \t\t\ttry {\n                                 con = DatabaseConnection.getConnection();"}, {"sha": "b37a17c8a3453817dceac920a175066bd51b398d", "filename": "src/client/command/commands/gm0/DisposeCommand.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/command/commands/gm0/DisposeCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/command/commands/gm0/DisposeCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm0/DisposeCommand.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -41,5 +41,5 @@ public void execute(MapleClient c, String[] params) {\n         c.announce(MaplePacketCreator.enableActions());\n         c.removeClickedNPC();\n         c.getPlayer().message(\"You've been disposed.\");\n+        }\n     }\n-}"}, {"sha": "a2ce3a7f16f211f063c672d3d19c4e2a930782ff", "filename": "src/client/inventory/MapleInventory.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/inventory/MapleInventory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/inventory/MapleInventory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/MapleInventory.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -453,10 +453,10 @@ public short getNumFreeSlot() {\n     private static boolean checkItemRestricted(List<Pair<Item, MapleInventoryType>> items) {\n         MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n         \n-        Set<Integer> itemids = new HashSet<>();\n+        // thanks Shavit for noticing set creation that would be only effective in rare situations\n         for (Pair<Item, MapleInventoryType> p : items) {\n             int itemid = p.getLeft().getItemId();\n-            if (ii.isPickupRestricted(itemid) && (p.getLeft().getQuantity() > 1 || !itemids.add(itemid))) {\n+            if (ii.isPickupRestricted(itemid) && p.getLeft().getQuantity() > 1) {\n                 return false;\n             }\n         }"}, {"sha": "682affe2853e68094002bd757e0673637fc8b935", "filename": "src/client/inventory/manipulator/MapleInventoryManipulator.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/inventory/manipulator/MapleInventoryManipulator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/client/inventory/manipulator/MapleInventoryManipulator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/manipulator/MapleInventoryManipulator.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -523,7 +523,10 @@ public static void equip(MapleClient c, short src, short dst) {\n         }\n         boolean itemChanged = false;\n         if (ii.isUntradeableOnEquip(source.getItemId())) {\n-            source.setFlag((byte) ItemConstants.UNTRADEABLE);\n+            short flag = source.getFlag();      // thanks BHB for noticing flags missing after equipping these\n+            flag |= ItemConstants.UNTRADEABLE;\n+            source.setFlag(flag);\n+            \n             itemChanged = true;\n         }\n         if (dst == -6) { // unequip the overall"}, {"sha": "c7b73f781e58f9e4a41d3eb8f90d7708685fc1ac", "filename": "src/constants/inventory/ItemConstants.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/constants/inventory/ItemConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/constants/inventory/ItemConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/inventory/ItemConstants.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -21,7 +21,6 @@\n */\n package constants.inventory;\n \n-import constants.net.ServerConstants;\n import client.inventory.MapleInventoryType;\n import config.YamlConfig;\n "}, {"sha": "00472b326260d5b85e5941734a814af321559f72", "filename": "src/net/server/Server.java", "status": "modified", "additions": 30, "deletions": 27, "changes": 57, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/Server.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/Server.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/Server.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -894,33 +894,8 @@ public void init() {\n         //MaplePet.clearMissingPetsFromDb();    // thanks Optimist for noticing this taking too long to run\n         MapleCashidGenerator.loadExistentCashIdsFromDb();\n         \n-        IoBuffer.setUseDirectBuffer(false);\n-        IoBuffer.setAllocator(new SimpleBufferAllocator());\n-        acceptor = new NioSocketAcceptor();\n-        acceptor.getFilterChain().addLast(\"codec\", (IoFilter) new ProtocolCodecFilter(new MapleCodecFactory()));\n-        \n         ThreadManager.getInstance().start();\n-        TimerManager tMan = TimerManager.getInstance();\n-        tMan.start();\n-        tMan.register(tMan.purge(), YamlConfig.config.server.PURGING_INTERVAL);//Purging ftw...\n-        disconnectIdlesOnLoginTask();\n-        \n-        long timeLeft = getTimeLeftForNextHour();\n-        tMan.register(new CharacterDiseaseTask(), YamlConfig.config.server.UPDATE_INTERVAL, YamlConfig.config.server.UPDATE_INTERVAL);\n-        tMan.register(new ReleaseLockTask(), 2 * 60 * 1000, 2 * 60 * 1000);\n-        tMan.register(new CouponTask(), YamlConfig.config.server.COUPON_INTERVAL, timeLeft);\n-        tMan.register(new RankingCommandTask(), 5 * 60 * 1000, 5 * 60 * 1000);\n-        tMan.register(new RankingLoginTask(), YamlConfig.config.server.RANKING_INTERVAL, timeLeft);\n-        tMan.register(new LoginCoordinatorTask(), 60 * 60 * 1000, timeLeft);\n-        tMan.register(new EventRecallCoordinatorTask(), 60 * 60 * 1000, timeLeft);\n-        tMan.register(new LoginStorageTask(), 2 * 60 * 1000, 2 * 60 * 1000);\n-        tMan.register(new DueyFredrickTask(), 60 * 60 * 1000, timeLeft);\n-        tMan.register(new InvitationTask(), 30 * 1000, 30 * 1000);\n-        tMan.register(new RespawnTask(), YamlConfig.config.server.RESPAWN_INTERVAL, YamlConfig.config.server.RESPAWN_INTERVAL);\n-        \n-        timeLeft = getTimeLeftForNextDay();\n-        MapleExpeditionBossLog.resetBossLogTable();\n-        tMan.register(new BossLogTask(), 24 * 60 * 60 * 1000, timeLeft);\n+        initializeTimelyTasks();    // aggregated method for timely tasks thanks to lxconan\n         \n         long timeToTake = System.currentTimeMillis();\n         SkillFactory.loadAllSkills();\n@@ -965,6 +940,10 @@ public void init() {\n         \n         System.out.println();\n         \n+        IoBuffer.setUseDirectBuffer(false);     // join IO operations performed by lxconan\n+        IoBuffer.setAllocator(new SimpleBufferAllocator());\n+        acceptor = new NioSocketAcceptor();\n+        acceptor.getFilterChain().addLast(\"codec\", (IoFilter) new ProtocolCodecFilter(new MapleCodecFactory()));\n         acceptor.getSessionConfig().setIdleTime(IdleStatus.BOTH_IDLE, 30);\n         acceptor.setHandler(new MapleServerHandler());\n         try {\n@@ -986,6 +965,30 @@ public void init() {\n             ch.reloadEventScriptManager();\n         }\n     }\n+    \n+    private void initializeTimelyTasks() {\n+        TimerManager tMan = TimerManager.getInstance();\n+        tMan.start();\n+        tMan.register(tMan.purge(), YamlConfig.config.server.PURGING_INTERVAL);//Purging ftw...\n+        disconnectIdlesOnLoginTask();\n+        \n+        long timeLeft = getTimeLeftForNextHour();\n+        tMan.register(new CharacterDiseaseTask(), YamlConfig.config.server.UPDATE_INTERVAL, YamlConfig.config.server.UPDATE_INTERVAL);\n+        tMan.register(new ReleaseLockTask(), 2 * 60 * 1000, 2 * 60 * 1000);\n+        tMan.register(new CouponTask(), YamlConfig.config.server.COUPON_INTERVAL, timeLeft);\n+        tMan.register(new RankingCommandTask(), 5 * 60 * 1000, 5 * 60 * 1000);\n+        tMan.register(new RankingLoginTask(), YamlConfig.config.server.RANKING_INTERVAL, timeLeft);\n+        tMan.register(new LoginCoordinatorTask(), 60 * 60 * 1000, timeLeft);\n+        tMan.register(new EventRecallCoordinatorTask(), 60 * 60 * 1000, timeLeft);\n+        tMan.register(new LoginStorageTask(), 2 * 60 * 1000, 2 * 60 * 1000);\n+        tMan.register(new DueyFredrickTask(), 60 * 60 * 1000, timeLeft);\n+        tMan.register(new InvitationTask(), 30 * 1000, 30 * 1000);\n+        tMan.register(new RespawnTask(), YamlConfig.config.server.RESPAWN_INTERVAL, YamlConfig.config.server.RESPAWN_INTERVAL);\n+        \n+        timeLeft = getTimeLeftForNextDay();\n+        MapleExpeditionBossLog.resetBossLogTable();\n+        tMan.register(new BossLogTask(), 24 * 60 * 60 * 1000, timeLeft);\n+    }\n \n     public static void main(String args[]) {\n         System.setProperty(\"wzpath\", \"wz\");\n@@ -1755,7 +1758,7 @@ public void loadAccountStorages(MapleClient c) {\n         for (Integer worldid : accWorlds) {\n             if (worldid < worldList.size()) {\n                 World wserv = worldList.get(worldid);\n-                wserv.registerAccountStorage(accountId);\n+                wserv.loadAccountStorage(accountId);\n             }\n         }\n     }"}, {"sha": "ca81b5af1948ae663bd9cd8b7d22777d4d908107", "filename": "src/net/server/audit/locks/empty/AbstractEmptyLock.java", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/audit/locks/empty/AbstractEmptyLock.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/audit/locks/empty/AbstractEmptyLock.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/audit/locks/empty/AbstractEmptyLock.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -0,0 +1,24 @@\n+package net.server.audit.locks.empty;\n+\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import java.util.TimeZone;\n+\n+public abstract class AbstractEmptyLock {\n+    \n+    protected static String printThreadStack(StackTraceElement[] list) {\n+        DateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");    // DRY-code opportunity performed by jtumidanski\n+        dateFormat.setTimeZone(TimeZone.getDefault());\n+        String df = dateFormat.format(new Date());\n+        \n+        String s = \"\\r\\n\" + df + \"\\r\\n\";\n+        for(int i = 0; i < list.length; i++) {\n+            s += (\"    \" + list[i].toString() + \"\\r\\n\");\n+        }\n+        s += \"----------------------------\\r\\n\\r\\n\";\n+        \n+        return s;\n+    }\n+    \n+}"}, {"sha": "9010dc5ec81d16d676806592415337b863603b60", "filename": "src/net/server/audit/locks/empty/EmptyReadLock.java", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/audit/locks/empty/EmptyReadLock.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/audit/locks/empty/EmptyReadLock.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/audit/locks/empty/EmptyReadLock.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -19,11 +19,6 @@\n */\n package net.server.audit.locks.empty;\n \n-import constants.net.ServerConstants;\n-import java.text.DateFormat;\n-import java.text.SimpleDateFormat;\n-import java.util.Date;\n-import java.util.TimeZone;\n import net.server.audit.locks.MonitoredLockType;\n import net.server.audit.locks.MonitoredReadLock;\n import tools.FilePrinter;\n@@ -32,27 +27,13 @@\n  *\n  * @author RonanLana\n  */\n-public class EmptyReadLock implements MonitoredReadLock {\n+public class EmptyReadLock extends AbstractEmptyLock implements MonitoredReadLock {\n     private final MonitoredLockType id;\n     \n     public EmptyReadLock(MonitoredLockType type) {\n         this.id = type;\n     }\n     \n-    private static String printThreadStack(StackTraceElement[] list) {\n-        DateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");\n-        dateFormat.setTimeZone(TimeZone.getDefault());\n-        String df = dateFormat.format(new Date());\n-        \n-        String s = \"\\r\\n\" + df + \"\\r\\n\";\n-        for(int i = 0; i < list.length; i++) {\n-            s += (\"    \" + list[i].toString() + \"\\r\\n\");\n-        }\n-        s += \"----------------------------\\r\\n\\r\\n\";\n-        \n-        return s;\n-    }\n-    \n     @Override\n     public void lock() {\n         FilePrinter.printError(FilePrinter.DISPOSED_LOCKS, \"Captured locking tentative on disposed lock \" + id + \":\" + printThreadStack(Thread.currentThread().getStackTrace()));"}, {"sha": "354b9528b86cecb910b69a8cff9ccddd3c020b5a", "filename": "src/net/server/audit/locks/empty/EmptyReentrantLock.java", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/audit/locks/empty/EmptyReentrantLock.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/audit/locks/empty/EmptyReentrantLock.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/audit/locks/empty/EmptyReentrantLock.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -19,11 +19,6 @@\n */\n package net.server.audit.locks.empty;\n \n-import constants.net.ServerConstants;\n-import java.text.DateFormat;\n-import java.text.SimpleDateFormat;\n-import java.util.Date;\n-import java.util.TimeZone;\n import net.server.audit.locks.MonitoredLockType;\n import net.server.audit.locks.MonitoredReentrantLock;\n import tools.FilePrinter;\n@@ -32,27 +27,13 @@\n  *\n  * @author RonanLana\n  */\n-public class EmptyReentrantLock implements MonitoredReentrantLock {\n+public class EmptyReentrantLock extends AbstractEmptyLock implements MonitoredReentrantLock {\n     private final MonitoredLockType id;\n     \n     public EmptyReentrantLock(MonitoredLockType type) {\n         this.id = type;\n     }\n     \n-    private static String printThreadStack(StackTraceElement[] list) {\n-        DateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");\n-        dateFormat.setTimeZone(TimeZone.getDefault());\n-        String df = dateFormat.format(new Date());\n-        \n-        String s = \"\\r\\n\" + df + \"\\r\\n\";\n-        for(int i = 0; i < list.length; i++) {\n-            s += (\"    \" + list[i].toString() + \"\\r\\n\");\n-        }\n-        s += \"----------------------------\\r\\n\\r\\n\";\n-        \n-        return s;\n-    }\n-    \n     @Override\n     public void lock() {\n         FilePrinter.printError(FilePrinter.DISPOSED_LOCKS, \"Captured locking tentative on disposed lock \" + id + \":\" + printThreadStack(Thread.currentThread().getStackTrace()));"}, {"sha": "c9006899505c355e495eb605280d279f0688f5ac", "filename": "src/net/server/audit/locks/empty/EmptyWriteLock.java", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/audit/locks/empty/EmptyWriteLock.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/audit/locks/empty/EmptyWriteLock.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/audit/locks/empty/EmptyWriteLock.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -19,11 +19,6 @@\n */\n package net.server.audit.locks.empty;\n \n-import constants.net.ServerConstants;\n-import java.text.DateFormat;\n-import java.text.SimpleDateFormat;\n-import java.util.Date;\n-import java.util.TimeZone;\n import net.server.audit.locks.MonitoredLockType;\n import net.server.audit.locks.MonitoredWriteLock;\n import tools.FilePrinter;\n@@ -32,27 +27,13 @@\n  *\n  * @author RonanLana\n  */\n-public class EmptyWriteLock implements MonitoredWriteLock {\n+public class EmptyWriteLock extends AbstractEmptyLock implements MonitoredWriteLock {\n     private final MonitoredLockType id;\n     \n     public EmptyWriteLock(MonitoredLockType type) {\n         this.id = type;\n     }\n     \n-    private static String printThreadStack(StackTraceElement[] list) {\n-        DateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");\n-        dateFormat.setTimeZone(TimeZone.getDefault());\n-        String df = dateFormat.format(new Date());\n-        \n-        String s = \"\\r\\n\" + df + \"\\r\\n\";\n-        for(int i = 0; i < list.length; i++) {\n-            s += (\"    \" + list[i].toString() + \"\\r\\n\");\n-        }\n-        s += \"----------------------------\\r\\n\\r\\n\";\n-        \n-        return s;\n-    }\n-    \n     @Override\n     public void lock() {\n         FilePrinter.printError(FilePrinter.DISPOSED_LOCKS, \"Captured locking tentative on disposed lock \" + id + \":\" + printThreadStack(Thread.currentThread().getStackTrace()));"}, {"sha": "39a56c61f0f5180bcb4e65a32cc1f66fa6cbc5c5", "filename": "src/net/server/channel/handlers/CashOperationHandler.java", "status": "modified", "additions": 53, "deletions": 19, "changes": 72, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/channel/handlers/CashOperationHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/channel/handlers/CashOperationHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/CashOperationHandler.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -86,16 +86,18 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                         }\n \n                         Item item = cItem.toItem();\n+                        cs.gainCash(useNX, cItem, chr.getWorld());  // thanks Rohenn for noticing cash operations after item acquisition\n                         cs.addToInventory(item);\n                         c.announce(MaplePacketCreator.showBoughtCashItem(item, c.getAccID()));\n                     } else { // Package\n+                        cs.gainCash(useNX, cItem, chr.getWorld());\n+                        \n                         List<Item> cashPackage = CashItemFactory.getPackage(cItem.getItemId());\n                         for (Item item : cashPackage) {\n                             cs.addToInventory(item);\n                         }\n                         c.announce(MaplePacketCreator.showBoughtCashPackage(cashPackage, c.getAccID()));\n                     }\n-                    cs.gainCash(useNX, cItem, chr.getWorld());\n                     c.announce(MaplePacketCreator.showCash(chr));\n                 } else if (action == 0x04) {//TODO check for gender\n                     int birthday = slea.readInt();\n@@ -116,9 +118,9 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                         c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xA8));\n                         return;\n                     }\n+                    cs.gainCash(4, cItem, chr.getWorld());\n                     cs.gift(Integer.parseInt(recipient.get(\"id\")), chr.getName(), message, cItem.getSN());\n                     c.announce(MaplePacketCreator.showGiftSucceed(recipient.get(\"name\"), cItem));\n-                    cs.gainCash(4, cItem, chr.getWorld());\n                     c.announce(MaplePacketCreator.showCash(chr));\n                     try {\n                         chr.sendNote(recipient.get(\"name\"), chr.getName() + \" has sent you a gift! Go check out the Cash Shop.\", (byte) 0); //fame or not\n@@ -147,10 +149,17 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                             c.enableCSActions();\n                             return;\n                         }\n-                        if (chr.gainSlots(type, 4, false)) {\n+                        int qty = 4;\n+                        if (!chr.canGainSlots(type, qty)) {\n+                            c.enableCSActions();\n+                            return;\n+                        }\n+                        cs.gainCash(cash, -4000);\n+                        if (chr.gainSlots(type, qty, false)) {\n                             c.announce(MaplePacketCreator.showBoughtInventorySlots(type, chr.getSlots(type)));\n-                            cs.gainCash(cash, -4000);\n                             c.announce(MaplePacketCreator.showCash(chr));\n+                        } else {\n+                            FilePrinter.printError(FilePrinter.CASHITEM_BOUGHT, \"Could not add \" + qty + \" slots of type \" + type + \" for player \" + MapleCharacter.makeMapleReadable(chr.getName()));\n                         }\n                     } else {\n                         CashItem cItem = CashItemFactory.getItem(slea.readInt());\n@@ -159,10 +168,17 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                             c.enableCSActions();\n                             return;\n                         }\n-                        if (chr.gainSlots(type, 8, false)) {\n+                        int qty = 8;\n+                        if (!chr.canGainSlots(type, qty)) {\n+                            c.enableCSActions();\n+                            return;\n+                        }\n+                        cs.gainCash(cash, cItem, chr.getWorld());\n+                        if (chr.gainSlots(type, qty, false)) {\n                             c.announce(MaplePacketCreator.showBoughtInventorySlots(type, chr.getSlots(type)));\n-                            cs.gainCash(cash, cItem, chr.getWorld());\n                             c.announce(MaplePacketCreator.showCash(chr));\n+                        } else {\n+                            FilePrinter.printError(FilePrinter.CASHITEM_BOUGHT, \"Could not add \" + qty + \" slots of type \" + type + \" for player \" + MapleCharacter.makeMapleReadable(chr.getName()));\n                         }\n                     }\n                 } else if (action == 0x07) { // Increase Storage Slots\n@@ -174,13 +190,20 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                             c.enableCSActions();\n                             return;\n                         }\n-                        if (chr.getStorage().gainSlots(4)) {\n-                            FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" bought 4 slots to their account storage.\");\n+                        int qty = 4;\n+                        if (!chr.getStorage().canGainSlots(qty)) {\n+                            c.enableCSActions();\n+                            return;\n+                        }\n+                        cs.gainCash(cash, -4000);\n+                        if (chr.getStorage().gainSlots(qty)) {\n+                            FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" bought \" + qty + \" slots to their account storage.\");\n                             chr.setUsedStorage();\n \n                             c.announce(MaplePacketCreator.showBoughtStorageSlots(chr.getStorage().getSlots()));\n-                            cs.gainCash(cash, -4000);\n                             c.announce(MaplePacketCreator.showCash(chr));\n+                        } else {\n+                            FilePrinter.printError(FilePrinter.CASHITEM_BOUGHT, \"Could not add \" + qty + \" slots to \" + MapleCharacter.makeMapleReadable(chr.getName()) + \"'s account.\");\n                         }\n                     } else {\n                         CashItem cItem = CashItemFactory.getItem(slea.readInt());\n@@ -189,13 +212,20 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                             c.enableCSActions();\n                             return;\n                         }\n-                        if (chr.getStorage().gainSlots(8)) {    // thanks ABaldParrot & Thora for detecting storage issues here\n-                            FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" bought 8 slots to their account storage.\");\n+                        int qty = 8;\n+                        if (!chr.getStorage().canGainSlots(qty)) {\n+                            c.enableCSActions();\n+                            return;\n+                        }\n+                        cs.gainCash(cash, cItem, chr.getWorld());\n+                        if (chr.getStorage().gainSlots(qty)) {    // thanks ABaldParrot & Thora for detecting storage issues here\n+                            FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" bought \" + qty + \" slots to their account storage.\");\n                             chr.setUsedStorage();\n \n                             c.announce(MaplePacketCreator.showBoughtStorageSlots(chr.getStorage().getSlots()));\n-                            cs.gainCash(cash, cItem, chr.getWorld());\n                             c.announce(MaplePacketCreator.showCash(chr));\n+                        } else {\n+                            FilePrinter.printError(FilePrinter.CASHITEM_BOUGHT, \"Could not add \" + qty + \" slots to \" + MapleCharacter.makeMapleReadable(chr.getName()) + \"'s account.\");\n                         }\n                     }\n                 } else if (action == 0x08) { // Increase Character Slots\n@@ -207,13 +237,17 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                         c.enableCSActions();\n                         return;\n                     }\n-\n+                    if (!c.canGainCharacterSlot()) {\n+                        chr.dropMessage(1, \"You have already used up all 12 extra character slots.\");\n+                        c.enableCSActions();\n+                        return;\n+                    }\n+                    cs.gainCash(cash, cItem, chr.getWorld());\n                     if (c.gainCharacterSlot()) {\n                         c.announce(MaplePacketCreator.showBoughtCharacterSlot(c.getCharacterSlots()));\n-                        cs.gainCash(cash, cItem, chr.getWorld());\n                         c.announce(MaplePacketCreator.showCash(chr));\n                     } else {\n-                        chr.dropMessage(1, \"You have already used up all 12 extra character slots.\");\n+                        FilePrinter.printError(FilePrinter.CASHITEM_BOUGHT, \"Could not add a character slot to \" + MapleCharacter.makeMapleReadable(chr.getName()) + \"'s account.\");\n                         c.enableCSActions();\n                         return;\n                     }\n@@ -287,8 +321,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                                 eqp.setRingId(rings.getLeft());\n                                 cs.addToInventory(eqp);\n                                 c.announce(MaplePacketCreator.showBoughtCashItem(eqp, c.getAccID()));\n-                                cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), rings.getRight());\n                                 cs.gainCash(toCharge, itemRing, chr.getWorld());\n+                                cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), rings.getRight());\n                                 chr.addCrushRing(MapleRing.loadFromDb(rings.getLeft()));\n                                 try {\n                                     chr.sendNote(partner.getName(), text, (byte) 1);\n@@ -353,8 +387,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                                 eqp.setRingId(rings.getLeft());\n                                 cs.addToInventory(eqp);\n                                 c.announce(MaplePacketCreator.showBoughtCashRing(eqp, partner.getName(), c.getAccID()));\n-                                cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), rings.getRight());\n                                 cs.gainCash(payment, -itemRing.getPrice());\n+                                cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), rings.getRight());\n                                 chr.addFriendshipRing(MapleRing.loadFromDb(rings.getLeft()));\n                                 try {\n                                     chr.sendNote(partner.getName(), text, (byte) 1);\n@@ -391,8 +425,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                         if(chr.registerNameChange(newName)) { //success\n                             Item item = cItem.toItem();\n                             c.announce(MaplePacketCreator.showNameChangeSuccess(item, c.getAccID()));\n-                            cs.addToInventory(item);\n                             cs.gainCash(4, cItem, chr.getWorld());\n+                            cs.addToInventory(item);\n                         } else {\n                             c.announce(MaplePacketCreator.showCashShopMessage((byte)0));\n                         }\n@@ -421,8 +455,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                         } else if(chr.registerWorldTransfer(newWorldSelection)) {\n                             Item item = cItem.toItem();\n                             c.announce(MaplePacketCreator.showWorldTransferSuccess(item, c.getAccID()));\n-                            cs.addToInventory(item);\n                             cs.gainCash(4, cItem, chr.getWorld());\n+                            cs.addToInventory(item);\n                         } else {\n                             c.announce(MaplePacketCreator.showCashShopMessage((byte)0));\n                         }"}, {"sha": "63b00ba038a820d7e13f8e4c60b9e1db5cf3e751", "filename": "src/net/server/channel/handlers/InventorySortHandler.java", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/channel/handlers/InventorySortHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/channel/handlers/InventorySortHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/InventorySortHandler.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -35,7 +35,6 @@\n import client.inventory.MapleInventory;\n import client.inventory.MapleInventoryType;\n import client.inventory.ModifyInventory;\n-import constants.net.ServerConstants;\n import server.MapleItemInformationProvider;\n import net.server.Server;\n \n@@ -73,16 +72,21 @@ private void PartitionByItemId(int Esq, int Dir, ArrayList<Item> A) {\n         } while (i <= j);\n     }\n     \n-    private void PartitionByItemIdReverse(int Esq, int Dir, ArrayList<Item> A) {\n+    private int getWatkForProjectile(Item item) {\n+        return ii.getWatkForProjectile(item.getItemId());\n+    }\n+    \n+    private void PartitionByProjectileAtk(int Esq, int Dir, ArrayList<Item> A) {\n         Item x, w;\n \n         i = Esq;\n         j = Dir;\n         \n         x = A.get((i + j) / 2);\n         do {\n-            while (x.getItemId() < A.get(i).getItemId()) i++;\n-            while (x.getItemId() > A.get(j).getItemId()) j--;\n+            int watk = getWatkForProjectile(x);\n+            while (watk < getWatkForProjectile(A.get(i))) i++;\n+            while (watk > getWatkForProjectile(A.get(j))) j--;\n             \n             if (i <= j) {\n                 w = A.get(i);\n@@ -228,7 +232,7 @@ private static int getItemSubtype(Item it) {\n     \n     public void reverseSortSublist(ArrayList<Item> A, int[] range) {\n         if (range != null) {\n-            PartitionByItemIdReverse(range[0], range[1], A);\n+            PartitionByProjectileAtk(range[0], range[1], A);\n         }\n     }\n     "}, {"sha": "5c8a207a79d83c006f0f2b21fbfe1932667e445e", "filename": "src/net/server/channel/handlers/UseCashItemHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/channel/handlers/UseCashItemHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/channel/handlers/UseCashItemHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/UseCashItemHandler.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -244,7 +244,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     eq.setExpiration(currentServerTime() + (period * 60 * 60 * 24 * 1000));\n                 }\n \n-                remove(c, position, itemId);\n+                // double-remove found thanks to BHB\n             } else if (itemId == 5060002) { // Incubator\n                 byte inventory2 = (byte) slea.readInt();\n                 short slot2 = (short) slea.readInt();"}, {"sha": "f1ebaf43d11a183b7c837d5c2bfb1c5379e084a9", "filename": "src/net/server/world/World.java", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/world/World.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/net/server/world/World.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/World.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -467,7 +467,13 @@ public void clearAccountCharacterView(Integer accountId) {\n         }\n     }\n     \n-    public void registerAccountStorage(Integer accountId) {\n+    public void loadAccountStorage(Integer accountId) {\n+        if (getAccountStorage(accountId) == null) {\n+            registerAccountStorage(accountId);\n+        }\n+    }\n+    \n+    private void registerAccountStorage(Integer accountId) {\n         MapleStorage storage = MapleStorage.loadOrCreateFromDB(accountId, this.id);\n         accountCharsLock.lock();\n         try {\n@@ -572,7 +578,7 @@ public void removePlayer(MapleCharacter chr) {\n         \n         if(cserv != null) {\n             if(!cserv.removePlayer(chr)) {\n-                // oy the player is not where it should be, find this mf\n+                // oy the player is not where they should be, find this mf\n \n                 for(Channel ch : getChannels()) {\n                     if(ch.removePlayer(chr)) {"}, {"sha": "08b1b0291651ca2469bb5521246ccc99db2b42a3", "filename": "src/server/MapleStatEffect.java", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/server/MapleStatEffect.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/server/MapleStatEffect.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleStatEffect.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -27,7 +27,6 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n-import java.util.HashMap;\n import java.util.Map;\n \n import config.YamlConfig;\n@@ -640,7 +639,7 @@ private static MapleStatEffect loadFromData(MapleData source, int sourceid, bool\n                     break;\n                 case WindArcher.WIND_WALK:\n                     statups.add(new Pair<>(MapleBuffStat.WIND_WALK, Integer.valueOf(x)));\n-                    break;\n+                    //break;    thanks Vcoc for noticing WW not showing for other players when changing maps\n                 case Rogue.DARK_SIGHT:\n                 case NightWalker.DARK_SIGHT:\n                     statups.add(new Pair<>(MapleBuffStat.DARKSIGHT, Integer.valueOf(x)));\n@@ -1343,6 +1342,8 @@ private void applyBuffEffect(MapleCharacter applyfrom, MapleCharacter applyto, b\n             if (isDash()) {\n                 buff = MaplePacketCreator.givePirateBuff(statups, sourceid, seconds);\n                 mbuff = MaplePacketCreator.giveForeignPirateBuff(applyto.getId(), sourceid, seconds, localstatups);\n+            } else if (isWkCharge()) {\n+                mbuff = MaplePacketCreator.giveForeignWKChargeEffect(applyto.getId(), sourceid, localstatups);\n             } else if (isInfusion()) {\n                 buff = MaplePacketCreator.givePirateBuff(localstatups, sourceid, seconds);\n                 mbuff = MaplePacketCreator.giveForeignPirateBuff(applyto.getId(), sourceid, seconds, localstatups);\n@@ -1746,6 +1747,20 @@ public static boolean isHerosWill(int skillid) {\n                 return false;\n         }\n     }\n+    \n+    private boolean isWkCharge() {\n+        if (!skill) {\n+            return false;\n+        }\n+        \n+        for (Pair<MapleBuffStat, Integer> p : statups) {\n+            if (p.getLeft().equals(MapleBuffStat.WK_CHARGE)) {\n+                return true;\n+            }\n+        }\n+        \n+        return false;\n+    }\n \n     private boolean isDash() {\n         return skill && (sourceid == Pirate.DASH || sourceid == ThunderBreaker.DASH || sourceid == Beginner.SPACE_DASH || sourceid == Noblesse.SPACE_DASH);"}, {"sha": "f1dd374fb83c84a47a6f2fa65c4734c1c307d6a5", "filename": "src/server/MapleStorage.java", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/server/MapleStorage.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/server/MapleStorage.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleStorage.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -114,12 +114,16 @@ public byte getSlots() {\n         return slots;\n     }\n \n+    public boolean canGainSlots(int slots) {\n+        slots += this.slots;\n+        return slots <= 48;\n+    }\n+    \n     public boolean gainSlots(int slots) {\n         lock.lock();\n         try {\n-            slots += this.slots;\n-            \n-            if (slots <= 48) {\n+            if (canGainSlots(slots)) {\n+                slots += this.slots;\n                 this.slots = (byte) slots;\n                 return true;\n             }"}, {"sha": "3b7ab48db3dff9f2b63307934cc75d45583d6787", "filename": "src/server/maps/MapleMapFactory.java", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/server/maps/MapleMapFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/server/maps/MapleMapFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMapFactory.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -310,19 +310,9 @@ public static MapleMap loadMapFromWz(int mapid, int world, int channel, EventIns\n             }\n         }\n         \n-        try {\n-            map.setMapName(loadPlaceName(mapid));\n-            map.setStreetName(loadStreetName(mapid));\n-        } catch (Exception e) {\n-            if (mapid / 1000 != 1020) {     // explorer job introduction scenes\n-                e.printStackTrace();\n-                System.err.println(\"Not found mapid \" + mapid);\n-            }\n-\n-            map.setMapName(\"\");\n-            map.setStreetName(\"\");\n-        }\n-\n+        map.setMapName(loadPlaceName(mapid));\n+        map.setStreetName(loadStreetName(mapid));\n+        \n         map.setClock(mapData.getChildByPath(\"clock\") != null);\n         map.setEverlast(MapleDataTool.getIntConvert(\"everlast\", infoData, 0) != 0); // thanks davidlafriniere for noticing value 0 accounting as true\n         map.setTown(MapleDataTool.getIntConvert(\"town\", infoData, 0) != 0);\n@@ -435,15 +425,15 @@ private static String getMapStringName(int mapid) {\n         return builder.toString();\n     }\n     \n-    public static String loadPlaceName(int mapid) throws Exception {\n+    public static String loadPlaceName(int mapid) {\n         try {\n             return MapleDataTool.getString(\"mapName\", nameData.getChildByPath(getMapStringName(mapid)), \"\");\n         } catch (Exception e) {\n             return \"\";\n         }\n     }\n     \n-    public static String loadStreetName(int mapid) throws Exception {\n+    public static String loadStreetName(int mapid) {\n         try {\n             return MapleDataTool.getString(\"streetName\", nameData.getChildByPath(getMapStringName(mapid)), \"\");\n         } catch (Exception e) {"}, {"sha": "0b180c19cd1692eef9be48b1954473615cc6b37a", "filename": "src/tools/MaplePacketCreator.java", "status": "modified", "additions": 49, "deletions": 16, "changes": 65, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/tools/MaplePacketCreator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/src/tools/MaplePacketCreator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MaplePacketCreator.java?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -1890,7 +1890,7 @@ private static void writeForeignBuffs(MaplePacketLittleEndianWriter mplew, Maple\n                 }\n                 long buffmask = 0;\n                 Integer buffvalue = null;\n-                if (chr.getBuffedValue(MapleBuffStat.DARKSIGHT) != null && !chr.isHidden()) {\n+                if ((chr.getBuffedValue(MapleBuffStat.DARKSIGHT) != null || chr.getBuffedValue(MapleBuffStat.WIND_WALK) != null) && !chr.isHidden()) {\n                         buffmask |= MapleBuffStat.DARKSIGHT.getValue();\n                 }\n                 if (chr.getBuffedValue(MapleBuffStat.COMBO) != null) {\n@@ -1906,10 +1906,6 @@ private static void writeForeignBuffs(MaplePacketLittleEndianWriter mplew, Maple\n                 if (chr.getBuffedValue(MapleBuffStat.MORPH) != null) {\n                         buffvalue = Integer.valueOf(chr.getBuffedValue(MapleBuffStat.MORPH).intValue());\n                 }\n-                if (chr.getBuffedValue(MapleBuffStat.ENERGY_CHARGE) != null) {\n-                        buffmask |= MapleBuffStat.ENERGY_CHARGE.getValue();\n-                        buffvalue = Integer.valueOf(chr.getBuffedValue(MapleBuffStat.ENERGY_CHARGE).intValue());\n-                }//AREN'T THESE \n                 mplew.writeInt((int) ((buffmask >> 32) & 0xffffffffL));\n                 if (buffvalue != null) {\n                         if (chr.getBuffedValue(MapleBuffStat.MORPH) != null) { //TEST\n@@ -1919,16 +1915,24 @@ private static void writeForeignBuffs(MaplePacketLittleEndianWriter mplew, Maple\n                         }\n                 }\n                 mplew.writeInt((int) (buffmask & 0xffffffffL));\n-                int CHAR_MAGIC_SPAWN = Randomizer.nextInt();\n-                mplew.skip(6);\n-                mplew.writeInt(CHAR_MAGIC_SPAWN);\n-                mplew.skip(11);\n-                mplew.writeInt(CHAR_MAGIC_SPAWN);//v74\n+                \n+                // Energy Charge\n+                mplew.writeInt(chr.getEnergyBar() == 15000 ? 1 : 0);\n+                mplew.writeShort(0);\n+                mplew.skip(4);\n+                \n+                boolean dashBuff = chr.getBuffedValue(MapleBuffStat.DASH) != null;\n+                // Dash Speed\n+                mplew.writeInt(dashBuff ? 1 << 24 : 0);\n                 mplew.skip(11);\n-                mplew.writeInt(CHAR_MAGIC_SPAWN);\n+                mplew.writeShort(0);\n+                // Dash Jump\n+                mplew.skip(9);\n+                mplew.writeInt(dashBuff ? 1 << 24 : 0);\n                 mplew.writeShort(0);\n                 mplew.write(0);\n                 \n+                // Monster Riding\n                 Integer bv = chr.getBuffedValue(MapleBuffStat.MONSTER_RIDING);\n                 if (bv != null) {\n                         MapleMount mount = chr.getMount();\n@@ -1942,17 +1946,23 @@ private static void writeForeignBuffs(MaplePacketLittleEndianWriter mplew, Maple\n                         mplew.writeLong(0);\n                 }\n                 \n+                int CHAR_MAGIC_SPAWN = Randomizer.nextInt();    // skill references found thanks to Rien dev team\n                 mplew.writeInt(CHAR_MAGIC_SPAWN);\n-                mplew.skip(9);\n+                // Speed Infusion\n+                mplew.skip(8);\n+                mplew.writeInt(CHAR_MAGIC_SPAWN);\n+                mplew.write(0);\n                 mplew.writeInt(CHAR_MAGIC_SPAWN);\n                 mplew.writeShort(0);\n-                mplew.writeInt(0); // actually not 0, why is it 0 then?\n-                mplew.skip(10);\n+                // Homing Beacon\n+                mplew.skip(9);\n                 mplew.writeInt(CHAR_MAGIC_SPAWN);\n-                mplew.skip(13);\n+                mplew.writeInt(0);\n+                // Zombify\n+                mplew.skip(9);\n                 mplew.writeInt(CHAR_MAGIC_SPAWN);\n                 mplew.writeShort(0);\n-                mplew.write(0);\n+                mplew.writeShort(0);\n         }\n         \n         /**\n@@ -3067,6 +3077,15 @@ private static void writeLongMaskD(final MaplePacketLittleEndianWriter mplew, Li\n                 return mplew.getPacket();\n         }\n \n+        public static byte[] cancelForeignFirstDebuff(int cid, long mask) {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.CANCEL_FOREIGN_BUFF.getValue());\n+                mplew.writeInt(cid);\n+                mplew.writeLong(mask);\n+                mplew.writeLong(0);\n+                return mplew.getPacket();\n+        }\n+        \n         public static byte[] cancelForeignDebuff(int cid, long mask) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.CANCEL_FOREIGN_BUFF.getValue());\n@@ -3198,6 +3217,20 @@ private static void writeLongMaskChair(final MaplePacketLittleEndianWriter mplew\n                 return mplew.getPacket();\n         }\n         \n+        // packet found thanks to Ronan\n+        public static byte[] giveForeignWKChargeEffect(int cid, int buffid, List<Pair<MapleBuffStat, Integer>> statups) {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter(19);\n+                mplew.writeShort(SendOpcode.GIVE_FOREIGN_BUFF.getValue());\n+                mplew.writeInt(cid);\n+                writeLongMask(mplew, statups);\n+                mplew.writeInt(buffid);\n+                mplew.writeShort(600);\n+                mplew.writeShort(1000);//Delay\n+                mplew.write(1);\n+                \n+                return mplew.getPacket();\n+        }\n+        \n         public static byte[] cancelForeignChairSkillEffect(int cid) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter(19);\n                 mplew.writeShort(SendOpcode.CANCEL_FOREIGN_BUFF.getValue());"}, {"sha": "3a4a74fc316b71a2f7ba9dd4ce304d902da87ab2", "filename": "wz/String.wz/Consume.img.xml", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/8afbff9db94505cc0583a2544ed7147dc337cdd3/wz/String.wz/Consume.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/8afbff9db94505cc0583a2544ed7147dc337cdd3/wz/String.wz/Consume.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/String.wz/Consume.img.xml?ref=8afbff9db94505cc0583a2544ed7147dc337cdd3", "patch": "@@ -230,7 +230,7 @@\n   </imgdir>\n   <imgdir name=\"2010007\">\n     <string name=\"name\" value=\"Roger&apos;s Apple\"/>\n-    <string name=\"desc\" value=\"A ripe, red apple.\\nRecovers HP 30.nn#cTo eat Roger&apos;s Apple, simply double-click on it in your use inventory#.\"/>\n+    <string name=\"desc\" value=\"A ripe, red apple.\\nRecovers HP 30.\\n\\n#cTo eat Roger&apos;s Apple, simply double-click on it in your use inventory#.\"/>\n   </imgdir>\n   <imgdir name=\"2010009\">\n     <string name=\"name\" value=\"Green Apple\"/>\n@@ -1445,31 +1445,31 @@\n   </imgdir>\n   <imgdir name=\"2030001\">\n     <string name=\"name\" value=\"Return Scroll to Lith Harbor\"/>\n-    <string name=\"desc\" value=\"Returns you to Lith Harbor. It disappears once it's used.\"/>\n+    <string name=\"desc\" value=\"Returns you to Lith Harbor. It disappears once it&apos;s used.\"/>\n   </imgdir>\n   <imgdir name=\"2030002\">\n     <string name=\"name\" value=\"Return Scroll to Ellinia\"/>\n-    <string name=\"desc\" value=\"Returns you to Ellinia. It disappears once it's used.\"/>\n+    <string name=\"desc\" value=\"Returns you to Ellinia. It disappears once it&apos;s used.\"/>\n   </imgdir>\n   <imgdir name=\"2030003\">\n     <string name=\"name\" value=\"Return Scroll to Perion\"/>\n-    <string name=\"desc\" value=\"Returns you to Perion. It disappears once it's used.\"/>\n+    <string name=\"desc\" value=\"Returns you to Perion. It disappears once it&apos;s used.\"/>\n   </imgdir>\n   <imgdir name=\"2030004\">\n     <string name=\"name\" value=\"Return Scroll to Henesys\"/>\n-    <string name=\"desc\" value=\"Returns you to Henesys, the peaceful town. It disappears once it's used.\"/>\n+    <string name=\"desc\" value=\"Returns you to Henesys, the peaceful town. It disappears once it&apos;s used.\"/>\n   </imgdir>\n   <imgdir name=\"2030005\">\n     <string name=\"name\" value=\"Return Scroll to Kerning City\"/>\n-    <string name=\"desc\" value=\"Returns you to the dark Kerning City. It disappears once it's used.\"/>\n+    <string name=\"desc\" value=\"Returns you to the dark Kerning City. It disappears once it&apos;s used.\"/>\n   </imgdir>\n   <imgdir name=\"2030006\">\n     <string name=\"name\" value=\"Return Scroll to Sleepywood\"/>\n-    <string name=\"desc\" value=\"Returns you to Sleepywood, a quiet and dark forest-town. It disappears once it's used.\"/>\n+    <string name=\"desc\" value=\"Returns you to Sleepywood, a quiet and dark forest-town. It disappears once it&apos;s used.\"/>\n   </imgdir>\n   <imgdir name=\"2030007\">\n     <string name=\"name\" value=\"Return Scroll to Dead Mine\"/>\n-    <string name=\"desc\" value=\"Returns you to the dead mine at the higher ground of El Nath. It disappears once it's used.\\nCan only be used in Orbis and El Nath.\"/>\n+    <string name=\"desc\" value=\"Returns you to the dead mine at the higher ground of El Nath. It disappears once it&apos;s used.\\nCan only be used in Orbis and El Nath.\"/>\n   </imgdir>\n   <imgdir name=\"2030008\">\n     <string name=\"name\" value=\"Coffee Milk\"/>\n@@ -3689,7 +3689,7 @@\n   </imgdir>\n   <imgdir name=\"2060004\">\n     <string name=\"name\" value=\"Diamond Arrow for Bow\"/>\n-    <string name=\"desc\" value=\"A case full of arrows. Can only be used with a bow.nAttack+4.\"/>\n+    <string name=\"desc\" value=\"A case full of arrows. Can only be used with a bow.\\nAttack+4.\"/>\n   </imgdir>\n   <imgdir name=\"2060005\">\n     <string name=\"name\" value=\"Snowball\"/>\n@@ -8305,7 +8305,7 @@\n   </imgdir>\n   <imgdir name=\"2049203\">\n     <string name=\"name\" value=\"Dark Scroll for Accessory for DEX 30%\"/>\n-    <string name=\"desc\" value=\"Improves DEX on accessories (pendants, belts, rings).\\nSuccess rate:30%, DEX+3\\.nIf failed, the item will be destroyed at a 50% rate.\"/>\n+    <string name=\"desc\" value=\"Improves DEX on accessories (pendants, belts, rings).\\nSuccess rate:30%, DEX+3.\\nIf failed, the item will be destroyed at a 50% rate.\"/>\n   </imgdir>\n   <imgdir name=\"2049204\">\n     <string name=\"name\" value=\"Dark Scroll for Accessory for INT 70%\"/>"}]}]},
