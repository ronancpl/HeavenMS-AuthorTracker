{"fetchDate": "2019-12-19", "content": [{"sha": "a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6YTFmY2YyMWFjOWQyZmIyNTQxMWIxZjY1YTlhNjkyODM1OTAyNGEyOQ==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2018-04-20T01:03:12Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2018-04-20T01:03:12Z"}, "message": "Experimental AutoJCE & Reactor's incorrect parameter\n\n[EXPERIMENTAL] Added the AutoJCE feature to the server source. This is expected to solve the encryption size issue without resorting to overwrite the JCE files on the system.\nLMPQ now sends players to random starting rooms, GMS-like.\nAdded a server flag for the free market item sold announcement.\nTweaked the reactor-hitting system, expecting to solve the incorrect parameter issue on the \"multiple players hitting\" scenario.", "tree": {"sha": "4f1a6a02ab4c00436ed59cebd75328751ede8335", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/4f1a6a02ab4c00436ed59cebd75328751ede8335"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "html_url": "https://github.com/ronancpl/HeavenMS/commit/a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "134c34fa5867580b2d33a7221118315993d5ff65", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/134c34fa5867580b2d33a7221118315993d5ff65", "html_url": "https://github.com/ronancpl/HeavenMS/commit/134c34fa5867580b2d33a7221118315993d5ff65"}], "stats": {"total": 317, "additions": 243, "deletions": 74}, "files": [{"sha": "0c3f27b31c4db2d8a228842bfbf7419a11b5a3a9", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -868,4 +868,8 @@ Adicionado feature de an\u00fancio de mudan\u00e7a de classe.\n Adicionado drops faltando da questline Puppeteer de Aran.\n Movimenta\u00e7\u00e3o de GM rank para alguns comandos.\n Corrigido autoassigner inesperadamente desconectando jogadores, quando o autoassigner do cliente est\u00e1 sendo utilizado.\n-Adicionado scripts para a questline de Full Swing de Aran.\n\\ No newline at end of file\n+Adicionado scripts para a questline de Full Swing de Aran.\n+\n+19 Mar\u00e7o 2018,\n+Tentativa de corre\u00e7\u00e3o em reactors desconectando jogadores que tentam ativ\u00e1-los com ataque b\u00e1sico ao mesmo tempo.\n+Adicionado feature de AutoJCE (cr\u00e9ditos ao Kradi-a).\n\\ No newline at end of file"}, {"sha": "185df6d10618db57a5d9218d01df55fe5a6d8be2", "filename": "docs/todo.txt", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/docs/todo.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/docs/todo.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/todo.txt?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -3,6 +3,12 @@ Credits:\n Ronan - Freelance Developer\n Vcoc - Freelance Developer\n \n+---------------------------\n+Known issues:\n+- Everytime two people click on an npc at the same time, one of them dcs and the other needs to @dispose to talk to the npc.\n+- If multiple people hit boxes/reactors at the same time, they both dc with invalid pointer error.\n+---------------------------\n+\n ---------------------------\n ToDo / Missing features list:\n ---------------------------"}, {"sha": "66db27bb102f4d95a4110c05e144fa4805436457", "filename": "scripts/event/LudiMazePQ.js", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/scripts/event/LudiMazePQ.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/scripts/event/LudiMazePQ.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/event/LudiMazePQ.js?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -102,7 +102,9 @@ function afterSetup(eim) {}\n function respawnStages(eim) {}\n \n function playerEntry(eim, player) {\n-        var map = eim.getMapInstance(entryMap);\n+        var rand = Math.floor(Math.random() * 15);\n+    \n+        var map = eim.getMapInstance(entryMap + rand);\n         player.changeMap(map, map.getPortal(0));\n }\n "}, {"sha": "e423faa57dcade01e455d77508dca82e88a9fad8", "filename": "scripts/quest/21735.js", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/scripts/quest/21735.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/scripts/quest/21735.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/21735.js?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -0,0 +1,81 @@\n+/*\n+    This file is part of the HeavenMS (MapleSolaxiaV2) MapleStory Server\n+    Copyleft (L) 2017 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+\n+var status = -1;\n+\n+function start(mode, type, selection) {\n+    if (mode == -1) {\n+        qm.dispose();\n+    } else {\n+        if(mode == 0 && type > 0) {\n+            qm.dispose();\n+            return;\n+        }\n+        \n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        \n+        if (status == 0) {\n+            qm.sendNext(\"Aran, ever since the Puppeteer's ambush on me, I've been thinking it is dangerous to have the #b#t4032323##k around here by myself. So, I need you to deliver the gem to #r#p1201000##k, in Rien, she will know what to do with it.\");\n+        } else if (status == 1) {\n+            if(!qm.canHold(4032323, 1)) {\n+                qm.sendNext(\"Please free a slot on your ETC inventory before receiving the item.\");\n+                qm.dispose();\n+                return;\n+            }\n+            \n+            if(!qm.haveItem(4032323, 1)) qm.gainItem(4032323, 1);\n+            qm.forceStartQuest();\n+            qm.dispose();\n+        }\n+    }\n+}\n+\n+function end(mode, type, selection) {\n+    if (mode == -1) {\n+        qm.dispose();\n+    } else {\n+        if(mode == 0 && type > 0) {\n+            qm.dispose();\n+            return;\n+        }\n+        \n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        \n+        if (status == 0) {\n+            if(qm.haveItem(4032323, 1)) {\n+                qm.sendNext(\"#r#p1002104##k sent the #b#t4032323##k here for safety? Thank goodness, indeed here the gem will be safer than anywhere on Victoria Island. Thank you, #b#h0##k.\");\n+            } else {\n+                qm.dispose();\n+            }\n+        } else if (status == 1) {\n+            qm.gainItem(4032323, -1);\n+            qm.gainExp(6037 * qm.getPlayer().getExpRate());\n+            qm.forceCompleteQuest();\n+            \n+            qm.dispose();\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "3aaebdeb48529a78566ad83bad8cb849c500b528", "filename": "scripts/quest/21766.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/scripts/quest/21766.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/scripts/quest/21766.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/21766.js?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -9,7 +9,7 @@ function start(mode, type, selection) {\n \t} else if (status == 2) {\n \t\tqm.sendNext(\"I have a feeling there is a secret behind that wooden box. Could you stealthily look into the wooden box next to #p20000#?\");\n \t} else if (status == 3) {\n-\t\tqm.sendNext(\"You know where #p20000# is, right? Hes to the right. Just keep going until you see where Vikin is, then head down past the hanging shark and octopus, and you''ll see John. The box should be right next to him.\");\n+\t\tqm.sendNext(\"You know where #p20000# is, right? He's to the right. Just keep going until you see where Vikin is, then head down past the hanging shark and octopus, and you''ll see John. The box should be right next to him.\");\n \t} else {\n                 qm.forceStartQuest();\n \t\tqm.dispose();"}, {"sha": "5fb8e21f26a680e5f70386c2cd5a1cad5c1ab7d2", "filename": "scripts/quest/3314.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/scripts/quest/3314.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/scripts/quest/3314.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3314.js?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -58,7 +58,7 @@ function end(mode, type, selection) {\n             } else {\n                 qm.sendNext(\"You seem pretty normal, don't you? I can't detect any possible effect from my experiment on you. Go take the pill I asked you to take and show me the effects, will you?\");\n             }\n-            \n+        } else {\n             qm.dispose();\n         }\n     }"}, {"sha": "c21b097229cf3686207d33e03a6b175130c673e4", "filename": "sql/db_drops.sql", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/sql/db_drops.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/sql/db_drops.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_drops.sql?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -19767,7 +19767,7 @@ USE `heavenms`;\n (2230110, 4032146, 1, 1, 20722, 40000),\n (2230111, 4032147, 1, 1, 20723, 40000),\n (9300347, 4001272, 1, 1, 0, 400000),\n-(9300347, 4032324, 1, 1, 21736, 40000),\n+(9300347, 4032324, 1, 1, 21737, 40000),\n (9300344, 4032322, 1, 1, 21731, 999999),\n (3400008, 1302008, 1, 1, 0, 4200),\n (3400008, 1412004, 1, 1, 0, 4200),"}, {"sha": "6774c043f7afc15d15390b2fbb76dc3c5cfa04a1", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -73,9 +73,9 @@\n     public static final boolean USE_QUEST_RATE = false;             //Exp/Meso gained by quests uses fixed server exp/meso rate times quest rate as multiplier, instead of player rates.\n     public static final boolean USE_MULTIPLE_SAME_EQUIP_DROP = true;//Enables multiple drops by mobs of the same equipment, number of possible drops based on the quantities provided at the drop data.\n     \n-    \n     //Announcement Configuration\n-    public static final boolean USE_ANNOUNCE_CHANGEJOB = true;     //Automatic message sent to acquantainces when changing jobs.\n+    public static final boolean USE_ANNOUNCE_SHOPITEMSOLD = false;  //Automatic message sent to owner when an item from the Player Shop or Hired Merchant is sold.\n+    public static final boolean USE_ANNOUNCE_CHANGEJOB = false;     //Automatic message sent to acquantainces when changing jobs.\n     \n     //Server Rates And Experience\n     public static final int EXP_RATE = 10;"}, {"sha": "94d4b6d1f3e12e36241b2e4df41d1abd23747f13", "filename": "src/net/MapleServerHandler.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/net/MapleServerHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/net/MapleServerHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/MapleServerHandler.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -112,13 +112,12 @@ public void sessionOpened(IoSession session) {\n             FilePrinter.print(FilePrinter.SESSION, \"IoSession with \" + session.getRemoteAddress() + \" opened on \" + sdf.format(Calendar.getInstance().getTime()), false);\n         }\n \n-        byte key[] = {0x13, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, (byte) 0xB4, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00};\n         byte ivRecv[] = {70, 114, 122, 82};\n         byte ivSend[] = {82, 48, 120, 115};\n         ivRecv[3] = (byte) (Math.random() * 255);\n         ivSend[3] = (byte) (Math.random() * 255);\n-        MapleAESOFB sendCypher = new MapleAESOFB(key, ivSend, (short) (0xFFFF - ServerConstants.VERSION));\n-        MapleAESOFB recvCypher = new MapleAESOFB(key, ivRecv, (short) ServerConstants.VERSION);\n+        MapleAESOFB sendCypher = new MapleAESOFB(ivSend, (short) (0xFFFF - ServerConstants.VERSION));\n+        MapleAESOFB recvCypher = new MapleAESOFB(ivRecv, (short) ServerConstants.VERSION);\n         MapleClient client = new MapleClient(sendCypher, recvCypher, session);\n         client.setWorld(world);\n         client.setChannel(channel);"}, {"sha": "25ed9b47d094c8c2b3f741ceb975901edd0b5b6f", "filename": "src/net/server/Server.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/net/server/Server.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/net/server/Server.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/Server.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -71,10 +71,12 @@\n import client.newyear.NewYearCardRecord;\n import constants.ItemConstants;\n import constants.ServerConstants;\n+import java.security.Security;\n import java.util.Calendar;\n import net.server.audit.ThreadTracker;\n import server.quest.MapleQuest;\n import tools.locks.MonitoredLockType;\n+import tools.AutoJCE;\n \n public class Server implements Runnable {\n     private static final Set<Integer> activeFly = new HashSet<>();\n@@ -382,6 +384,8 @@ public void shutdown() {\n \n     public static void main(String args[]) {\n         System.setProperty(\"wzpath\", \"wz\");\n+        Security.setProperty(\"crypto.policy\", \"unlimited\");\n+        AutoJCE.removeCryptographyRestrictions();\n         Server.getInstance().run();\n     }\n "}, {"sha": "33ceb3e3b2b2f8453a1eb30d01c708c455f76f66", "filename": "src/net/server/channel/handlers/ReactorHitHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/net/server/channel/handlers/ReactorHitHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/net/server/channel/handlers/ReactorHitHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/ReactorHitHandler.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -41,7 +41,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         slea.skip(4);\n         int skillid = slea.readInt();\n         MapleReactor reactor = c.getPlayer().getMap().getReactorByOid(oid);\n-        if (reactor != null && reactor.isAlive()) {\n+        if (reactor != null) {\n             reactor.hitReactor(true, charPos, stance, skillid, c);\n         }\n     }"}, {"sha": "851b777b184502003142b712ffcb306aed11bda4", "filename": "src/net/server/handlers/login/CharSelectedHandler.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/net/server/handlers/login/CharSelectedHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/net/server/handlers/login/CharSelectedHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/CharSelectedHandler.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -43,6 +43,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n \n         Server.getInstance().unregisterLoginState(c);\n         c.updateLoginState(MapleClient.LOGIN_SERVER_TRANSITION);\n+        \n         String[] socket = Server.getInstance().getIP(c.getWorld(), c.getChannel()).split(\":\");\n         try {\n             c.announce(MaplePacketCreator.getServerIP(InetAddress.getByName(socket[0]), Integer.parseInt(socket[1]), charId));"}, {"sha": "df5b8b07bb6671a95b3a368fd8126892ab66c727", "filename": "src/net/server/handlers/login/CharSelectedWithPicHandler.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/net/server/handlers/login/CharSelectedWithPicHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/net/server/handlers/login/CharSelectedWithPicHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/CharSelectedWithPicHandler.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -17,9 +17,9 @@ public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         String pic = slea.readMapleAsciiString();\n         int charId = slea.readInt();\n         String macs = slea.readMapleAsciiString();\n-\t\tString hwid = slea.readMapleAsciiString();\n+        String hwid = slea.readMapleAsciiString();\n         c.updateMacs(macs);\n-\t\tc.updateHWID(hwid);\n+        c.updateHWID(hwid);\n \n         if (c.hasBannedMac() || c.hasBannedHWID()) {\n             c.getSession().close(true);"}, {"sha": "20b84102760354b0b72eefaf2657c7b8c5fa5c92", "filename": "src/scripting/npc/NPCScriptManager.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/scripting/npc/NPCScriptManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/scripting/npc/NPCScriptManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/npc/NPCScriptManager.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -45,7 +45,7 @@\n     private Map<MapleClient, Invocable> scripts = new HashMap<>();\n     private static NPCScriptManager instance = new NPCScriptManager();\n \n-    public synchronized static NPCScriptManager getInstance() {\n+    public static NPCScriptManager getInstance() {\n         return instance;\n     }\n \n@@ -140,8 +140,9 @@ public void dispose(NPCConversationManager cm) {\n     }\n \n     public void dispose(MapleClient c) {\n-        if (cms.get(c) != null) {\n-            dispose(cms.get(c));\n+        NPCConversationManager cm = cms.get(c);\n+        if (cm != null) {\n+            dispose(cm);\n         }\n     }\n "}, {"sha": "2a5e9353428330a536c885c7baaa1fdd8dd7e586", "filename": "src/server/maps/MapleHiredMerchant.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/server/maps/MapleHiredMerchant.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/server/maps/MapleHiredMerchant.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleHiredMerchant.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -29,6 +29,7 @@\n import client.inventory.MapleInventoryType;\n import com.mysql.jdbc.Statement;\n import constants.ItemConstants;\n+import constants.ServerConstants;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n@@ -192,7 +193,7 @@ public void buy(MapleClient c, int item, short quantity) {\n             if (c.getPlayer().getMeso() >= price) {\n                 if (canBuy(c, newItem)) {\n                     c.getPlayer().gainMeso(-price, false);\n-                    announceItemSold(newItem, price);   // idea thanks to vcoc\n+                    if(ServerConstants.USE_ANNOUNCE_SHOPITEMSOLD) announceItemSold(newItem, price);   // idea thanks to vcoc\n                     \n                     synchronized (sold) {\n                         sold.add(new SoldItem(c.getPlayer().getName(), pItem.getItem().getItemId(), quantity, price));"}, {"sha": "b65d5e6a779137b703cf9efd17e9314248698546", "filename": "src/server/maps/MaplePlayerShop.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/server/maps/MaplePlayerShop.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/server/maps/MaplePlayerShop.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MaplePlayerShop.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -25,6 +25,7 @@\n import client.MapleClient;\n import client.inventory.Item;\n import client.inventory.MapleInventoryType;\n+import constants.ServerConstants;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.LinkedList;\n@@ -35,7 +36,6 @@\n import java.util.concurrent.locks.Lock;\n import tools.locks.MonitoredReentrantLock;\n import net.SendOpcode;\n-import net.server.Server;\n import server.MapleInventoryManipulator;\n import server.MapleItemInformationProvider;\n import tools.MaplePacketCreator;\n@@ -216,7 +216,7 @@ public void buy(MapleClient c, int item, short quantity) {\n                         if (canBuy(c, newItem)) {\n                             c.getPlayer().gainMeso(-price, false);\n                             \n-                            announceItemSold(newItem, price);   // idea thanks to vcoc\n+                            if(ServerConstants.USE_ANNOUNCE_SHOPITEMSOLD) announceItemSold(newItem, price);   // idea thanks to vcoc\n                             owner.gainMeso(price, true);\n                             \n                             pItem.setBundles((short) (pItem.getBundles() - quantity));"}, {"sha": "56fd2cd22930f4071a906ae51fd6ce0337d0895e", "filename": "src/server/maps/MapleReactor.java", "status": "modified", "additions": 58, "deletions": 49, "changes": 107, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/server/maps/MapleReactor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/server/maps/MapleReactor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleReactor.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -55,6 +55,7 @@\n     private boolean attackHit;\n     private ScheduledFuture<?> timeoutTask = null;\n     private Lock reactorLock = new MonitoredReentrantLock(MonitoredLockType.REACTOR, true);\n+    private Lock hitLock = new MonitoredReentrantLock(MonitoredLockType.REACTOR, true);\n \n     public MapleReactor(MapleReactorStats stats, int rid) {\n         this.evstate = (byte)0;\n@@ -139,6 +140,10 @@ public MapleMap getMap() {\n     public boolean isAlive() {\n         return alive;\n     }\n+    \n+    public boolean isActive() {\n+        return alive && stats.getType(state) != -1;\n+    }\n \n     public void setAlive(boolean alive) {\n         this.alive = alive;\n@@ -227,69 +232,73 @@ public void hitReactor(MapleClient c) {\n         hitReactor(false, 0, (short) 0, 0, c);\n     }\n     \n-    public synchronized void hitReactor(boolean wHit, int charPos, short stance, int skillid, MapleClient c) {\n+    public void hitReactor(boolean wHit, int charPos, short stance, int skillid, MapleClient c) {\n         try {\n-            if(!this.isAlive()) {\n+            if(!this.isActive()) {\n                 return;\n             }\n             \n-            this.lockReactor();\n-            try {\n-                cancelReactorTimeout();\n-                attackHit = wHit;\n-\n-                if(ServerConstants.USE_DEBUG == true) c.getPlayer().dropMessage(5, \"Hitted REACTOR \" + this.getId() + \" with POS \" + charPos + \" , STANCE \" + stance + \" , SkillID \" + skillid + \" , STATE \" + stats.getType(state) + \" STATESIZE \" + stats.getStateSize(state));\n-                ReactorScriptManager.getInstance().onHit(c, this);\n-\n-                int reactorType = stats.getType(state);\n-                if (reactorType < 999 && reactorType != -1) {//type 2 = only hit from right (kerning swamp plants), 00 is air left 02 is ground left\n-                    if (!(reactorType == 2 && (stance == 0 || stance == 2))) { //get next state\n-                        for (byte b = 0; b < stats.getStateSize(state); b++) {//YAY?\n-                            List<Integer> activeSkills = stats.getActiveSkills(state, b);\n-                            if (activeSkills != null) {\n-                                if (!activeSkills.contains(skillid)) continue;\n-                            }\n-                            state = stats.getNextState(state, b);\n-                            if (stats.getNextState(state, b) == -1) {//end of reactor\n-                                if (reactorType < 100) {//reactor broken\n-                                    if (delay > 0) {\n-                                        map.destroyReactor(getObjectId());\n-                                    } else {//trigger as normal\n+            if(hitLock.tryLock()) {\n+                this.lockReactor();\n+                try {\n+                    cancelReactorTimeout();\n+                    attackHit = wHit;\n+\n+                    if(ServerConstants.USE_DEBUG == true) c.getPlayer().dropMessage(5, \"Hitted REACTOR \" + this.getId() + \" with POS \" + charPos + \" , STANCE \" + stance + \" , SkillID \" + skillid + \" , STATE \" + stats.getType(state) + \" STATESIZE \" + stats.getStateSize(state));\n+                    ReactorScriptManager.getInstance().onHit(c, this);\n+\n+                    int reactorType = stats.getType(state);\n+                    if (reactorType < 999 && reactorType != -1) {//type 2 = only hit from right (kerning swamp plants), 00 is air left 02 is ground left\n+                        if (!(reactorType == 2 && (stance == 0 || stance == 2))) { //get next state\n+                            for (byte b = 0; b < stats.getStateSize(state); b++) {//YAY?\n+                                List<Integer> activeSkills = stats.getActiveSkills(state, b);\n+                                if (activeSkills != null) {\n+                                    if (!activeSkills.contains(skillid)) continue;\n+                                }\n+                                state = stats.getNextState(state, b);\n+                                if (stats.getNextState(state, b) == -1) {//end of reactor\n+                                    if (reactorType < 100) {//reactor broken\n+                                        if (delay > 0) {\n+                                            map.destroyReactor(getObjectId());\n+                                        } else {//trigger as normal\n+                                            map.broadcastMessage(MaplePacketCreator.triggerReactor(this, stance));\n+                                        }\n+                                    } else {//item-triggered on final step\n                                         map.broadcastMessage(MaplePacketCreator.triggerReactor(this, stance));\n                                     }\n-                                } else {//item-triggered on final step\n-                                    map.broadcastMessage(MaplePacketCreator.triggerReactor(this, stance));\n-                                }\n \n-                                ReactorScriptManager.getInstance().act(c, this);\n-                            } else { //reactor not broken yet\n-                                map.broadcastMessage(MaplePacketCreator.triggerReactor(this, stance));\n-                                if (state == stats.getNextState(state, b)) {//current state = next state, looping reactor\n                                     ReactorScriptManager.getInstance().act(c, this);\n-                                }\n+                                } else { //reactor not broken yet\n+                                    map.broadcastMessage(MaplePacketCreator.triggerReactor(this, stance));\n+                                    if (state == stats.getNextState(state, b)) {//current state = next state, looping reactor\n+                                        ReactorScriptManager.getInstance().act(c, this);\n+                                    }\n \n-                                setShouldCollect(true);     // refresh collectability on item drop-based reactors\n-                                refreshReactorTimeout();\n-                                if(stats.getType(state) == 100) {\n-                                    map.searchItemReactors(this);\n+                                    setShouldCollect(true);     // refresh collectability on item drop-based reactors\n+                                    refreshReactorTimeout();\n+                                    if(stats.getType(state) == 100) {\n+                                        map.searchItemReactors(this);\n+                                    }\n                                 }\n+                                break;\n                             }\n-                            break;\n+                        }\n+                    } else {\n+                        state++;\n+                        map.broadcastMessage(MaplePacketCreator.triggerReactor(this, stance));\n+                        ReactorScriptManager.getInstance().act(c, this);\n+\n+                        setShouldCollect(true);\n+                        refreshReactorTimeout();\n+                        if(stats.getType(state) == 100) {\n+                            map.searchItemReactors(this);\n                         }\n                     }\n-                } else {\n-                    state++;\n-                    map.broadcastMessage(MaplePacketCreator.triggerReactor(this, stance));\n-                    ReactorScriptManager.getInstance().act(c, this);\n-\n-                    setShouldCollect(true);\n-                    refreshReactorTimeout();\n-                    if(stats.getType(state) == 100) {\n-                        map.searchItemReactors(this);\n-                    }\n+                } finally {\n+                    this.unlockReactor();\n                 }\n-            } finally {\n-                this.unlockReactor();\n+                \n+                hitLock.unlock();\n             }\n         } catch(Exception e) {\n             e.printStackTrace();"}, {"sha": "d84b0e6fe6b2f5ed6642e74e5aebf218fcb24d48", "filename": "src/tools/AutoJCE.java", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/tools/AutoJCE.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/tools/AutoJCE.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/AutoJCE.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -0,0 +1,61 @@\n+package tools;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+import java.security.Permission;\n+import java.security.PermissionCollection;\n+import java.util.Map;\n+\n+public class AutoJCE{   // AutoJCE into server source thanks to Kradi-a\n+\n+\t/**\n+\t * Credits: ntoskrnl of StackOverflow\n+\t * http://stackoverflow.com/questions/1179672/\n+\t */\n+\tpublic static byte removeCryptographyRestrictions(){\n+\t\tif(!isRestrictedCryptography()){\n+\t\t\t//System.out.println(\"Cryptography restrictions removal not needed\");\n+\t\t\treturn 0;\n+\t\t}\n+\t\ttry{\n+\t\t\t/*\n+\t\t\t * Do the following, but with reflection to bypass access checks:\n+\t\t\t *\n+\t\t\t * JceSecurity.isRestricted = false;\n+\t\t\t * JceSecurity.defaultPolicy.perms.clear();\n+\t\t\t * JceSecurity.defaultPolicy.add(CryptoAllPermission.INSTANCE);\n+\t\t\t */\n+\t\t\tfinal Class<?> jceSecurity = Class.forName(\"javax.crypto.JceSecurity\");\n+\t\t\tfinal Class<?> cryptoPermissions = Class.forName(\"javax.crypto.CryptoPermissions\");\n+\t\t\tfinal Class<?> cryptoAllPermission = Class.forName(\"javax.crypto.CryptoAllPermission\");\n+\t\t\tfinal Field isRestrictedField = jceSecurity.getDeclaredField(\"isRestricted\");// was set to final in Java 8 Update 112. Requires you to remove the final modifier.\n+\t\t\tField modifiersField = Field.class.getDeclaredField(\"modifiers\");\n+\t\t\tmodifiersField.setAccessible(true);\n+\t\t\tmodifiersField.setInt(isRestrictedField, isRestrictedField.getModifiers() & ~Modifier.FINAL);\n+\t\t\tisRestrictedField.setAccessible(true);\n+\t\t\tisRestrictedField.set(null, false);\n+\t\t\tfinal Field defaultPolicyField = jceSecurity.getDeclaredField(\"defaultPolicy\");\n+\t\t\tdefaultPolicyField.setAccessible(true);\n+\t\t\tfinal PermissionCollection defaultPolicy = (PermissionCollection) defaultPolicyField.get(null);\n+\t\t\tfinal Field perms = cryptoPermissions.getDeclaredField(\"perms\");\n+\t\t\tperms.setAccessible(true);\n+\t\t\t((Map<?, ?>) perms.get(defaultPolicy)).clear();\n+\t\t\tfinal Field instance = cryptoAllPermission.getDeclaredField(\"INSTANCE\");\n+\t\t\tinstance.setAccessible(true);\n+\t\t\tdefaultPolicy.add((Permission) instance.get(null));\n+                        \n+\t\t\t//System.out.println(\"Successfully removed cryptography restrictions\");\n+                        return 1;\n+\t\t}catch(final Exception e){\n+\t\t\te.printStackTrace();\n+                        \n+                        System.err.println(\"Failed to remove cryptography restrictions\");\n+                        return -1;\n+\t\t}\n+\t}\n+\n+\tprivate static boolean isRestrictedCryptography(){\n+\t\t// This simply matches the Oracle JRE, but not OpenJDK.\n+\t\treturn \"Java(TM) SE Runtime Environment\".equals(System.getProperty(\"java.runtime.name\"));\n+\t}\n+}\n\\ No newline at end of file"}, {"sha": "28ccbe53702093de57ac2880afadbb19c46e4255", "filename": "src/tools/MapleAESOFB.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/tools/MapleAESOFB.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/a1fcf21ac9d2fb25411b1f65a9a6928359024a29/src/tools/MapleAESOFB.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MapleAESOFB.java?ref=a1fcf21ac9d2fb25411b1f65a9a6928359024a29", "patch": "@@ -33,6 +33,9 @@\n     private byte iv[];\n     private Cipher cipher;\n     private short mapleVersion;\n+    private final static SecretKeySpec skey = new SecretKeySpec(\n+        new byte[]{0x13, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, (byte) 0xB4, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00}, \"AES\");\n+\n     private static final byte[] funnyBytes = new byte[]{(byte) 0xEC, (byte) 0x3F, (byte) 0x77, (byte) 0xA4, (byte) 0x45, (byte) 0xD0, (byte) 0x71, (byte) 0xBF, (byte) 0xB7, (byte) 0x98, (byte) 0x20, (byte) 0xFC,\n         (byte) 0x4B, (byte) 0xE9, (byte) 0xB3, (byte) 0xE1, (byte) 0x5C, (byte) 0x22, (byte) 0xF7, (byte) 0x0C, (byte) 0x44, (byte) 0x1B, (byte) 0x81, (byte) 0xBD, (byte) 0x63, (byte) 0x8D, (byte) 0xD4, (byte) 0xC3,\n         (byte) 0xF2, (byte) 0x10, (byte) 0x19, (byte) 0xE0, (byte) 0xFB, (byte) 0xA1, (byte) 0x6E, (byte) 0x66, (byte) 0xEA, (byte) 0xAE, (byte) 0xD6, (byte) 0xCE, (byte) 0x06, (byte) 0x18, (byte) 0x4E, (byte) 0xEB,\n@@ -51,19 +54,16 @@\n         (byte) 0xD3, (byte) 0xAB, (byte) 0x91, (byte) 0xB9, (byte) 0x84, (byte) 0x7F, (byte) 0x61, (byte) 0x1E, (byte) 0xCF, (byte) 0xC5, (byte) 0xD1, (byte) 0x56, (byte) 0x3D, (byte) 0xCA, (byte) 0xF4, (byte) 0x05,\n         (byte) 0xC6, (byte) 0xE5, (byte) 0x08, (byte) 0x49};\n \n-    public MapleAESOFB(byte key[], byte iv[], short mapleVersion) {\n-        SecretKeySpec skeySpec = new SecretKeySpec(key, \"AES\");\n+    public MapleAESOFB(byte iv[], short mapleVersion) {\n         try {\n             cipher = Cipher.getInstance(\"AES\");\n+            cipher.init(Cipher.ENCRYPT_MODE, skey);\n         } catch (NoSuchAlgorithmException e) {\n             System.out.println(\"ERROR \" + e);\n         } catch (NoSuchPaddingException e) {\n             System.out.println(\"ERROR \" + e);\n-        }\n-        try {\n-            cipher.init(Cipher.ENCRYPT_MODE, skeySpec);\n         } catch (InvalidKeyException e) {\n-            e.printStackTrace();\n+            System.out.println(\"Error initalizing the encryption cipher.  Make sure you're using the Unlimited Strength cryptography jar files.\");\n         }\n         this.setIv(iv);\n         this.mapleVersion = (short) (((mapleVersion >> 8) & 0xFF) | ((mapleVersion << 8) & 0xFF00));"}]}]},
