{"fetchDate": "2019-12-19", "content": [{"sha": "5dc16d0cabe3ccf695be6ed17807258d3a36267c", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6NWRjMTZkMGNhYmUzY2NmNjk1YmU2ZWQxNzgwNzI1OGQzYTM2MjY3Yw==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2018-07-08T21:25:48Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2018-07-08T21:25:48Z"}, "message": "Abstract channel schedulers + Mob animation track + More portal SFX\n\nImplemented an improved scheduler system for channels, on where Runnables objects are \"registered in\" to run on a scheduled future time (effective run time will depend on the proc time of the worker acting under-the-hood).\nImplemented a channel scheduler for detecting \"mobs currently on animation state\". This allows the server to send info to the client about whether a mob should cast a skill or not at that moment.\nImproved concurrent protection on MapleMonster listeners registry.\nImproved resource deallocation when destroying a monster object.\nAdded a server flag to allow clean slates to be used on equipments even on the \"only successfully used scroll slots\" case.\nFixed a critical deadlock case with MapleServerHandler.\nAdded the portal SFX for many scripted portals that still lacked the sound effect.", "tree": {"sha": "749506de008a9db2cc00221cb53978958184aa48", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/749506de008a9db2cc00221cb53978958184aa48"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/5dc16d0cabe3ccf695be6ed17807258d3a36267c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/5dc16d0cabe3ccf695be6ed17807258d3a36267c", "html_url": "https://github.com/ronancpl/HeavenMS/commit/5dc16d0cabe3ccf695be6ed17807258d3a36267c", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/5dc16d0cabe3ccf695be6ed17807258d3a36267c/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94425ba616dacf61b156044ac3993e2d06584c8f", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/94425ba616dacf61b156044ac3993e2d06584c8f", "html_url": "https://github.com/ronancpl/HeavenMS/commit/94425ba616dacf61b156044ac3993e2d06584c8f"}], "stats": {"total": 1383, "additions": 1224, "deletions": 159}, "files": [{"sha": "73a827c0035c278ffe08b80ebeb56ec5d1beb808", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -1093,4 +1093,18 @@ Refatorado MonitoredLockTypes para agora dar um label espec\u00edfico a cada lock do\n 29 - 30 Junho 2018,\n Corrigido quest Milk Jug com NPCs trocados.\n Adicionado um delay na aplica\u00e7\u00e3o de efeitos dos skills de mobs, buffs e demais efeitos agora s\u00e3o registrados ap\u00f3s o tempo da anima\u00e7\u00e3o.\n-Corrigido Flame Thrower atuando passivamente quando o jogador usa uma skill de ataque.\n\\ No newline at end of file\n+Corrigido Flame Thrower atuando passivamente quando o jogador usa uma skill de ataque.\n+\n+01 Julho 2018,\n+Implementado um sistema abstrato de temporizador para channels (otimizado para rodar numa \u00fanica thread). A ideia \u00e9 que quaisquer temporizadores a ser instalado num canal use uma extens\u00e3o dessa classe.\n+Implementado sistema de detec\u00e7\u00e3o de anima\u00e7\u00e3o-em-andamento de mobs, buscando evitar assim spam de uso de habilidades pelos mobs.\n+Server agora verifica se o mob est\u00e1 com alguma anima\u00e7\u00e3o sendo rodada e baseado nisso informa ao cliente se o mob pode ou n\u00e3o enviar requisi\u00e7\u00f5es de mob skill a ser ativada juntamente ao MoveLifeHandler.\n+\n+02 Julho 2018,\n+Melhorado prote\u00e7\u00e3o contra acesso concorrente nos registros de listeners de MapleMonster.\n+Melhorado libera\u00e7\u00e3o de recursos ao finalizar objeto MapleMonster.\n+\n+03 - 04 Julho 2018,\n+Adicionado server flag que permite usar clean slates mesmo em equipamentos sem slots vazios (onde falhou o scroll).\n+Corrigido um poss\u00edvel ponto cr\u00edtico de deadlock com MapleServerHandler.\n+Adicionado portal SFX para v\u00e1rios portais scriptados que ainda faltavam o efeito.\n\\ No newline at end of file"}, {"sha": "b250ad800915880ebb6ffd46cd53d6af0caa7713", "filename": "nbproject/project.properties", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/nbproject/project.properties", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/nbproject/project.properties", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/nbproject/project.properties?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -93,7 +93,7 @@ run.classpath=\\\n # Space-separated list of JVM arguments used when running the project.\n # You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.\n # To set system properties for unit tests define test-sys-prop.name=value:\n-run.jvmargs=\n+run.jvmargs=-Xmx2048m -Dwzpath=wz/\n run.test.classpath=\\\n     ${javac.test.classpath}:\\\n     ${build.test.classes.dir}"}, {"sha": "35eb969995df31dd5a13c69b3fc766df1909baed", "filename": "scripts/npc/9270043.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/npc/9270043.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/npc/9270043.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9270043.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -19,7 +19,7 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-//Gachaphon\n+//Gachapon\n \n var ids = [2000004,2020012,2000005,2030007,2022027,2040001,2041002, 2040805, 2040702, 2043802, 2040402, 2043702, 1302022, 1322021, 1322026, 1302026, 1442017, 1082147, 1102043, 1442016, 1402012, 1302027, 1322027, 1322025, 1312012, 1062000, 1332020, 1302028, 1372002, 1002033, 1092022, 1302021, 1102041, 1102042, 1322024, 1082148, 1002012, 1322012, 1322022, 1002020, 1302013, 1082146, 1442014, 1002096, 1302017, 1442012, 1322010, 1442011, 1442018, 1092011, 1092014, 1302003, 1432001, 1312011, 1002088, 1041020, 1322015, 1442004, 1422008, 1302056, 1432000, 1382001, 1041053, 1060014, 1050053, 1051032, 1050073, 1061036, 1002253, 1002034, 1051025, 1050067, 1051052, 1002072, 1002144, 1051054, 1050069, 1372007, 1050056, 1050074, 1002254, 1002274, 1002218, 1051055, 1382010, 1002246, 1050039, 1382007, 1372000, 1002013, 1050072, 1002036, 1002243, 1372008, 1382008, 1382011, 1092021, 1051034, 1050047, 1040019, 1041031, 1051033, 1002153, 1002252, 1051024, 1002153, 1050068, 1382003, 1382006, 1050055, 1051031, 1050025, 1002155, 1002245, 1452004, 1452023, 1060057, 1040071, 1002137, 1462009, 1452017, 1040025, 1041027, 1452005, 1452007, 1061057, 1472006, 1472019, 1060084, 1472028, 1002179, 1082074, 1332015, 1432001, 1060071, 1472007, 1472002, 1051009, 1061037, 1332016, 1332034, 1472020, 1102084, 1102086, 1102042, 1032026, 1082149];\n var status = 0;"}, {"sha": "f7baa36cbd1bc4a136b79bdfb2c8313cca5f9089", "filename": "scripts/npc/9977777.js", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/npc/9977777.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/npc/9977777.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9977777.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -116,6 +116,7 @@ function writeFeatureTab_MonstersMapsReactors() {\n         addFeature(\"C. Balrog's boat approaching visual effect functional.\");\n         addFeature(\"Maps having everlasting items no longer expires them.\");\n         addFeature(\"PQs, Taxis and events warps players to random SPs.\");\n+        addFeature(\"Uncovered missing portal SFX on scripted portals.\");\n         addFeature(\"PQ boxes sprays items when opened, GMS-like.\");\n         addFeature(\"Reactors pick items up smartly from the field.\");\n         addFeature(\"Reviewed Masteria, W. Tour, N. Desert and Neo City.\");\n@@ -199,8 +200,9 @@ function writeFeatureTab_Project() {\n         addFeature(\"Reviewed many Java aspects that needed attention.\");\n         addFeature(\"Reviewed SQL data, eliminating duplicated entries.\");\n         addFeature(\"Protected many flaws with login management system.\");\n-        addFeature(\"Developed many survey tools for content management.\");\n+        addFeature(\"Developed many survey tools for content profiling.\");\n         addFeature(\"ThreadTracker: runtime tool for deadlock detection.\");\n+        addFeature(\"Channel, World and Server-wide timer management.\");\n         addFeature(\"Heavily reviewed future task management, spawning much less threads and relieving task overload on the TimerManager.\");\n }\n \n@@ -240,7 +242,7 @@ function action(mode, type, selection) {\n                         status--;\n     \n                 if (status == 0) {\n-                        var sendStr = \"HeavenMS was developed on the timespan of 3 years, based on where Solaxia left. On the meantime many nice features emerged, development aimed to get back the old GMS experience. Now many of these so-long missing features are gracefully presented to you in the shape of this server. Long live MapleStory!!\\r\\n\\r\\nThese are the features of #bHeavenMS#k:\\r\\n\\r\\n\";\n+                        var sendStr = \"HeavenMS was developed on the timespan of 3 years, based on where Solaxia left. On the meantime many nice features emerged, development aimed to get back the old GMS experience. Now many of these so-long missing features are gracefully presented to you in the shape of this server. Long live MapleStory!!\\r\\n\\r\\nThese are the features from #bHeavenMS#k:\\r\\n\\r\\n\";\n                         for(var i = 0; i < tabs.length; i++) {\n                             sendStr += \"#L\" + i + \"##b\" + tabs[i] + \"#k#l\\r\\n\";\n                         }"}, {"sha": "2ca2ce3b7e923a5df51a1b9befca2358d18b27e7", "filename": "scripts/portal/hontale_Bopen.js", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/hontale_Bopen.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/hontale_Bopen.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/hontale_Bopen.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -40,7 +40,8 @@ function enter(pi) {\n             // do nothing; send message to player\n             pi.getPlayer().dropMessage(6, \"Horntail\\'s Seal is Blocking this Door.\");\n             return false;\n-        }else {\n+        } else {\n+            pi.playPortalSound();\n             pi.getPlayer().changeMap(target, targetPortal);\n             return true;\n         }\n@@ -56,7 +57,8 @@ function enter(pi) {\n             // do nothing; send message to player\n             pi.getPlayer().dropMessage(6, \"Horntail\\'s Seal is Blocking this Door.\");\n             return false;\n-        }else {\n+        } else {\n+            pi.playPortalSound();\n             pi.getPlayer().changeMap(target, targetPortal);\n             return true;\n         }\n@@ -72,7 +74,8 @@ function enter(pi) {\n             // do nothing; send message to player\n             pi.getPlayer().dropMessage(6, \"Horntail\\'s Seal is Blocking this Door.\");\n             return false;\n-        }else {\n+        } else {\n+            pi.playPortalSound();\n             pi.getPlayer().changeMap(target, targetPortal);\n             return true;\n         }\n@@ -88,7 +91,8 @@ function enter(pi) {\n             // do nothing; send message to player\n             pi.getPlayer().dropMessage(6, \"Horntail\\'s Seal is Blocking this Door.\");\n             return false;\n-        }else {\n+        } else {\n+            pi.playPortalSound();\n             pi.getPlayer().changeMap(target, targetPortal);\n             return true;\n         }\n@@ -104,14 +108,16 @@ function enter(pi) {\n             if (pi.haveItem(4001092) && pi.isEventLeader()) {\n                 eim.showClearEffect();\n                 pi.getPlayer().dropMessage(6, \"The leader's key break the seal for a flash...\");\n+                pi.playPortalSound();\n                 pi.getPlayer().changeMap(target, targetPortal);\n                 eim.setIntProperty(\"5stageclear\", 1);\n                 return true;\n             } else {\n                 pi.getPlayer().dropMessage(6, \"Horntail\\'s Seal is blocking this door. Only the leader with the key can lift this seal.\");\n                 return false;\n             }\n-        }else {\n+        } else {\n+            pi.playPortalSound();\n             pi.getPlayer().changeMap(target, targetPortal);\n             return true;\n         }"}, {"sha": "3f6f08795be6a546c3aa5e4bbe92ce0c25ef1757", "filename": "scripts/portal/hontale_C.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/hontale_C.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/hontale_C.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/hontale_C.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -39,6 +39,7 @@ function enter(pi) {\n             return false;\n         }\n         \n+        pi.playPortalSound();\n         eim.warpEventTeam(target);\n         return true;\n     } else {"}, {"sha": "18112930d3d723ebc4e6b8ee71ac55dbdc87b4ce", "filename": "scripts/portal/kpq0.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/kpq0.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/kpq0.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/kpq0.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -28,6 +28,7 @@ function enter(pi) {\n     var target = eim.getMapInstance(103000801);\n \n     if (eim.getProperty(\"1stageclear\") != null) {\n+        pi.playPortalSound();\n         pi.getPlayer().changeMap(target, target.getPortal(\"st00\"));\n         return true;\n     }"}, {"sha": "b41259baf60a358b19747806b18649c3ef9bd2f6", "filename": "scripts/portal/kpq1.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/kpq1.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/kpq1.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/kpq1.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -28,6 +28,7 @@ function enter(pi) {\n     var eim = pi.getPlayer().getEventInstance();\n     var target = eim.getMapInstance(103000802);\n     if (eim.getProperty(\"2stageclear\") != null) {\n+        pi.playPortalSound();\n         pi.getPlayer().changeMap(target, target.getPortal(\"st00\"));\n         return true;\n     }"}, {"sha": "9e95c3bfb77a3eabdaf925d43e8eceb81e28200f", "filename": "scripts/portal/kpq2.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/kpq2.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/kpq2.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/kpq2.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -27,6 +27,7 @@ function enter(pi) {\n     var eim = pi.getPlayer().getEventInstance();\n     var target = eim.getMapInstance(103000803);\n     if (eim.getProperty(\"3stageclear\") != null) {\n+        pi.playPortalSound();\n         pi.getPlayer().changeMap(target, target.getPortal(\"st00\"));\n         return true;\n     }"}, {"sha": "9a57b8357386a5d1e4c6aa584c109d8ce0dead05", "filename": "scripts/portal/kpq3.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/kpq3.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/kpq3.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/kpq3.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -28,6 +28,7 @@ function enter(pi) {\n     var eim = pi.getPlayer().getEventInstance();\n     var target = eim.getMapInstance(103000804);\n     if (eim.getProperty(\"4stageclear\") != null) {\n+        pi.playPortalSound();\n         pi.getPlayer().changeMap(target, target.getPortal(\"st00\"));\n         return true;\n     }"}, {"sha": "940f3c388d8e8b1ca4fd382cba5e3c7d84ac61dc", "filename": "scripts/portal/kpq4.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/kpq4.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/kpq4.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/kpq4.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -27,6 +27,7 @@ function enter(pi) {\n     var eim = pi.getPlayer().getEventInstance();\n     var target = eim.getMapInstance(103000805);\n     if (eim.getProperty(\"5stageclear\") != null) {\n+        pi.playPortalSound();\n         pi.getPlayer().changeMap(target, target.getPortal(\"st00\"));\n         return true;\n     }"}, {"sha": "1d0ee1c6e29c082453b2ea5dd28f4a0d7209c99f", "filename": "scripts/portal/lpq0.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq0.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq0.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/lpq0.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -35,6 +35,7 @@ function enter(pi) {\n         return false;\n     }\n     else {\n+        pi.playPortalSound();\n         pi.getPlayer().changeMap(target, targetPortal);\n         return true;\n     }"}, {"sha": "3ad14c4a3d95cefa38bbb62e161b133a3b15da45", "filename": "scripts/portal/lpq1.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq1.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq1.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/lpq1.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -35,6 +35,7 @@ function enter(pi) {\n         return false;\n     }\n     else {\n+        pi.playPortalSound();\n         pi.getPlayer().changeMap(target, targetPortal);\n         return true;\n     }"}, {"sha": "7833a350957b5b70443c1d367b118d8260e47e4f", "filename": "scripts/portal/lpq2.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq2.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq2.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/lpq2.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -36,6 +36,7 @@ function enter(pi) {\n \t\treturn false;\n         }\n \telse {\n+                pi.playPortalSound();\n \t\tpi.getPlayer().changeMap(target, targetPortal);\n \t\treturn true;\n \t}"}, {"sha": "7182a41bbac19cdb3e54a40d678394597d1c0842", "filename": "scripts/portal/lpq3.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq3.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq3.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/lpq3.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -36,6 +36,7 @@ function enter(pi) {\n \t\treturn false;\n         }\n \telse {\n+                pi.playPortalSound();\n \t\tpi.getPlayer().changeMap(target, targetPortal);\n \t\treturn true;\n \t}"}, {"sha": "3ac0e0256ea7a9d26d99105d221d82e6900df543", "filename": "scripts/portal/lpq4.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq4.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq4.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/lpq4.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -36,6 +36,7 @@ function enter(pi) {\n \t\treturn false;\n         }\n \telse {\n+                pi.playPortalSound();\n \t\tpi.getPlayer().changeMap(target, targetPortal);\n \t\treturn true;\n \t}"}, {"sha": "2320535d2c52f8daa160a0ee0642b156c21b282c", "filename": "scripts/portal/lpq5.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq5.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq5.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/lpq5.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -40,6 +40,7 @@ function enter(pi) {\n \t\tif(eim.getProperty(\"6stageclear\") == null) {\n \t\t\teim.setProperty(\"6stageclear\", \"true\");\n \t\t}\n+                pi.playPortalSound();\n \t\tpi.getPlayer().changeMap(target, targetPortal);\n \t\treturn true;\n \t}"}, {"sha": "0d80d7a111f014f73509012ce1fba8529e4496f8", "filename": "scripts/portal/lpq6.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq6.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq6.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/lpq6.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -27,6 +27,7 @@ function enter(pi) {\n \tvar eim = pi.getPlayer().getEventInstance();\n \tvar target = eim.getMapInstance(922010800);\n \tif (eim.getProperty(\"7stageclear\") != null) {\n+                pi.playPortalSound();\n \t\tpi.getPlayer().changeMap(target, target.getPortal(\"st00\"));\n \t\treturn true;\n \t} else"}, {"sha": "4d37be40c2bf4996841aeb49cdc64d1b8437bebf", "filename": "scripts/portal/lpq7.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq7.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/lpq7.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/lpq7.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -37,6 +37,7 @@ function enter(pi) {\n \t\treturn false;\n         }\n \telse {\n+                pi.playPortalSound();\n \t\tpi.getPlayer().changeMap(target, targetPortal);\n \t\treturn true;\n \t}"}, {"sha": "1f2148a2eae2393388c0cb934bece9c57c66dc64", "filename": "scripts/portal/party3_gardenin.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/party3_gardenin.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/party3_gardenin.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/party3_gardenin.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -1,5 +1,6 @@\n function enter(pi) {\n \tif (pi.getPlayer().getParty() != null && pi.isEventLeader() && pi.haveItem(4001055,1)) {\n+                pi.playPortalSound();\n                 pi.getEventInstance().warpEventTeam(920010100);\n                 return true;\n \t} else {"}, {"sha": "cd0ca2aef5b97e00cf903d71b65bd495d9e3692e", "filename": "scripts/portal/party6_out.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/party6_out.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/scripts/portal/party6_out.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/party6_out.js?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -3,6 +3,7 @@ function enter(pi) {\n     \n         if (eim.isEventCleared()) {\n                 if(pi.isEventLeader()) {\n+                        pi.playPortalSound();\n                         eim.warpEventTeam(930000800);\n                         return true;\n                 } else {"}, {"sha": "c3cbd70cda563b967f365ba467394f54bd897971", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -133,12 +133,13 @@\n     public static final boolean USE_PERFECT_SCROLLING = true;   //Scrolls doesn't use slots upon failure.\n     public static final boolean USE_ENHANCED_CHSCROLL = true;   //Equips even more powerful with chaos upgrade.\n     public static final boolean USE_ENHANCED_CRAFTING = true;   //Apply chaos scroll on every equip crafted.\n+    public static final boolean USE_ENHANCED_CLNSLATE = true;   //Clean slates can be applied to recover successfully used slots as well.\n     public static final int SCROLL_CHANCE_RATE = 10;            //Number of rolls for success on a scroll, set 0 for default.\n     public static final int CHSCROLL_STAT_RATE = 3;             //Number of rolls of stat upgrade on a successfully applied chaos scroll, set 1 for default.\n     public static final int CHSCROLL_STAT_RANGE = 6;            //Stat upgrade range (-N, N) on chaos scrolls.\n     \n     //Beginner Skills Configuration\n-    public static final boolean USE_ULTRA_NIMBLE_FEET = true;   //Haste-like speed & jump upgrade.\n+    public static final boolean USE_ULTRA_NIMBLE_FEET = true;   //Massive speed & jump upgrade.\n     public static final boolean USE_ULTRA_RECOVERY = true;      //Massive recovery amounts overtime.\n     public static final boolean USE_ULTRA_THREE_SNAILS = true;  //Massive damage on shell toss.\n     "}, {"sha": "b8ffcac68805dd060c4229661d8972b5e9c34e67", "filename": "src/net/MapleServerHandler.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/MapleServerHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/MapleServerHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/MapleServerHandler.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -189,10 +189,12 @@ public void sessionIdle(final IoSession session, final IdleStatus status) throws\n     \n     private void registerIdleSession(MapleClient c) {\n         if(idleLock.tryLock()) {\n-            idleSessions.put(c, System.currentTimeMillis());\n-            c.announce(MaplePacketCreator.getPing());\n-            \n-            idleLock.unlock();\n+            try {\n+                idleSessions.put(c, System.currentTimeMillis());\n+                c.announce(MaplePacketCreator.getPing());\n+            } finally {\n+                idleLock.unlock();\n+            }\n         } else {\n             tempLock.lock();\n             try {"}, {"sha": "9ae7c78f5b4ea5ed3d69bb707b8a9bdf08f10ac3", "filename": "src/net/server/channel/Channel.java", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/Channel.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/Channel.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/Channel.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -21,7 +21,6 @@\n  */\n package net.server.channel;\n \n-import net.server.channel.worker.MobStatusScheduler;\n import java.io.File;\n import java.net.InetSocketAddress;\n import java.util.ArrayList;\n@@ -43,9 +42,12 @@\n \n import net.MapleServerHandler;\n import net.mina.MapleCodecFactory;\n+\n+import net.server.PlayerStorage;\n import net.server.Server;\n+import net.server.channel.worker.*;\n+\n import net.server.world.World;\n-import net.server.PlayerStorage;\n import net.server.world.MapleParty;\n import net.server.world.MaplePartyCharacter;\n \n@@ -86,6 +88,8 @@\n     private MapleMapFactory mapFactory;\n     private EventScriptManager eventSM;\n     private MobStatusScheduler mobStatusSchedulers[] = new MobStatusScheduler[4];\n+    private MobAnimationScheduler mobAnimationSchedulers[] = new MobAnimationScheduler[4];\n+    private OverallScheduler channelSchedulers[] = new OverallScheduler[4];\n     private Map<Integer, MapleHiredMerchant> hiredMerchants = new HashMap<>();\n     private final Map<Integer, Integer> storedVars = new HashMap<>();\n     private List<MapleExpedition> expeditions = new ArrayList<>();\n@@ -154,6 +158,8 @@ public Channel(final int world, final int channel, long startTime) {\n             \n             for(int i = 0; i < 4; i++) {\n                 mobStatusSchedulers[i] = new MobStatusScheduler();\n+                mobAnimationSchedulers[i] = new MobAnimationScheduler();\n+                channelSchedulers[i] = new OverallScheduler();\n             }\n             \n             System.out.println(\"    Channel \" + getId() + \": Listening on port \" + port);\n@@ -824,7 +830,7 @@ public void dropMessage(int type, String message) {\n         }\n     }\n     \n-    private static int getMobStatusSchedulerIndex(int mapid) {\n+    private static int getChannelSchedulerIndex(int mapid) {\n         if(mapid >= 250000000) {\n             if(mapid >= 900000000) {\n                 return 3;\n@@ -845,11 +851,23 @@ public void registerMobStatus(int mapid, MonsterStatusEffect mse, Runnable cance\n     }\n     \n     public void registerMobStatus(int mapid, MonsterStatusEffect mse, Runnable cancelAction, long duration, Runnable overtimeAction, int overtimeDelay) {\n-        mobStatusSchedulers[getMobStatusSchedulerIndex(mapid)].registerMobStatus(mse, cancelAction, duration, overtimeAction, overtimeDelay);\n+        mobStatusSchedulers[getChannelSchedulerIndex(mapid)].registerMobStatus(mse, cancelAction, duration, overtimeAction, overtimeDelay);\n     }\n     \n     public void interruptMobStatus(int mapid, MonsterStatusEffect mse) {\n-        mobStatusSchedulers[getMobStatusSchedulerIndex(mapid)].interruptMobStatus(mse);\n+        mobStatusSchedulers[getChannelSchedulerIndex(mapid)].interruptMobStatus(mse);\n+    }\n+    \n+    public boolean registerMobOnAnimationEffect(int mapid, int mobHash, long delay) {\n+        return mobAnimationSchedulers[getChannelSchedulerIndex(mapid)].registerAnimationMode(mobHash, delay);\n+    }\n+    \n+    public void registerOverallAction(int mapid, Runnable runAction, long delay) {\n+        channelSchedulers[getChannelSchedulerIndex(mapid)].registerDelayedAction(runAction, delay);\n+    }\n+    \n+    public void forceRunOverallAction(int mapid, Runnable runAction) {\n+        channelSchedulers[getChannelSchedulerIndex(mapid)].forceRunDelayedAction(runAction);\n     }\n     \n     public void debugMarriageStatus() {"}, {"sha": "81732586911830014d0b79873374a4ef571d1bac", "filename": "src/net/server/channel/handlers/MoveLifeHandler.java", "status": "modified", "additions": 50, "deletions": 36, "changes": 86, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/handlers/MoveLifeHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/handlers/MoveLifeHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MoveLifeHandler.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -43,6 +43,7 @@\n /**\n  * @author Danny (Leifde)\n  * @author ExtremeDevilz\n+ * @author Ronan (HeavenMS)\n  */\n public final class MoveLifeHandler extends AbstractMovementPacketHandler {\n \t@Override\n@@ -76,49 +77,62 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n \n \t\tint nextCastSkill = useSkillId;\n \t\tint nextCastSkillLevel = useSkillLevel;\n-\t\t\n+                \n \t\tMobSkill toUse = null;\n-\t\t\n-\t\tint percHpLeft = (int) (((float) monster.getHp() / monster.getMaxHp()) * 100);\n+                int rndSkill = -1;\n                 \n-\t\tif (nextMovementCouldBeSkill && monster.getNoSkills() > 0) {\n-\t\t\tint Random = Randomizer.nextInt(monster.getNoSkills());\n-\t\t\tPair<Integer, Integer> skillToUse = monster.getSkills().get(Random);\n-\t\t\tnextCastSkill = skillToUse.getLeft();\n-\t\t\tnextCastSkillLevel = skillToUse.getRight();\n-\t\t\ttoUse = MobSkillFactory.getMobSkill(nextCastSkill, nextCastSkillLevel);\n+                if(monster.getNoSkills() > 0) {\n+                        if(nextMovementCouldBeSkill) {\n+                                rndSkill = Randomizer.nextInt(monster.getNoSkills());\n+                        }\n+                } else {\n+                        nextMovementCouldBeSkill = false;\n+                }\n+\t\t\n+                if(monster.applyAnimationIfRoaming((attackId - 13) / 2, rndSkill)) {\n+                        if (rndSkill > -1) {\n+                                Pair<Integer, Integer> skillToUse = monster.getSkills().get(rndSkill);\n+                                nextCastSkill = skillToUse.getLeft();\n+                                nextCastSkillLevel = skillToUse.getRight();\n+                                toUse = MobSkillFactory.getMobSkill(nextCastSkill, nextCastSkillLevel);\n \n-\t\t\tif (isSkill || isAttack) {\n-\t\t\t\tif (nextCastSkill != toUse.getSkillId() || nextCastSkillLevel != toUse.getSkillLevel()) {\n-\t\t\t\t\t//toUse.resetAnticipatedSkill();\n-\t\t\t\t\treturn;\n-\t\t\t\t} else if (toUse.getHP() < percHpLeft) {\n-\t\t\t\t\ttoUse = null;\n-\t\t\t\t} else if (monster.canUseSkill(toUse)) {\n-                                        int animationTime = MapleMonsterInformationProvider.getInstance().getMobSkillAnimationTime(monster.getId(), Random);\n-                                        if(animationTime > 0) {\n-                                                toUse.applyDelayedEffect(c.getPlayer(), monster, true, banishPlayers, animationTime);\n+                                if (isSkill || isAttack) {\n+                                        int percHpLeft = (int) (((float) monster.getHp() / monster.getMaxHp()) * 100);\n+                                        if (nextCastSkill != toUse.getSkillId() || nextCastSkillLevel != toUse.getSkillLevel()) {\n+                                                //toUse.resetAnticipatedSkill();\n+                                                return;\n+                                        } else if (toUse.getHP() < percHpLeft) {\n+                                                toUse = null;\n+                                        } else if (monster.canUseSkill(toUse)) {\n+                                                int animationTime = MapleMonsterInformationProvider.getInstance().getMobSkillAnimationTime(monster.getId(), rndSkill);\n+                                                if(animationTime > 0) {\n+                                                        toUse.applyDelayedEffect(c.getPlayer(), monster, true, banishPlayers, animationTime);\n+                                                } else {\n+                                                        toUse.applyEffect(c.getPlayer(), monster, true, banishPlayers);\n+                                                }\n                                         } else {\n-                                                toUse.applyEffect(c.getPlayer(), monster, true, banishPlayers);\n+                                                toUse = null;\n                                         }\n-\t\t\t\t} else {\n-                                        toUse = null;\n-                                }\n-\t\t\t} else {\n-                                toUse = null; // paliative measure for suspicious mob movement\n-                            \n-                                /*\n-                                long curtime = System.currentTimeMillis();\n-                                if(curtime >= monster.getNextBasicSkillTime()) {  // dont use the special attack too often, chase the player f3\n-                                        MobAttackInfo mobAttack = MobAttackInfoFactory.getMobAttackInfo(monster, attackId);\n-                                        monster.setNextBasicSkillTime(curtime);\n                                 } else {\n-                                        toUse = null;\n-                                }\n-                                */\n-\t\t\t}\n-\t\t}\n+                                        toUse = null; // paliative measure for suspicious mob movement\n \n+                                        /*\n+                                        long curtime = System.currentTimeMillis();\n+                                        if(curtime >= monster.getNextBasicSkillTime()) {  // dont use the special attack too often, chase the player f3\n+                                                MobAttackInfo mobAttack = MobAttackInfoFactory.getMobAttackInfo(monster, attackId);\n+                                                monster.setNextBasicSkillTime(curtime);\n+                                        } else {\n+                                                toUse = null;\n+                                        }\n+                                        */\n+                                }\n+                        }\n+                } else {\n+                        if(rndSkill > -1) {\n+                                nextMovementCouldBeSkill = false;\n+                        }\n+                }\n+                \n \t\tslea.readByte();\n \t\tslea.readInt(); // whatever\n \t\tshort start_x = slea.readShort(); // hmm.. startpos?"}, {"sha": "b246fb9f6af4aef6c85656c74f647a2da1933900", "filename": "src/net/server/channel/handlers/ScrollHandler.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/handlers/ScrollHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/handlers/ScrollHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/ScrollHandler.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -35,6 +35,7 @@\n import java.util.List;\n import net.AbstractMaplePacketHandler;\n import client.inventory.manipulator.MapleInventoryManipulator;\n+import constants.ServerConstants;\n import server.MapleItemInformationProvider;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n@@ -91,9 +92,10 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             }\n         }\n         \n-        if (ItemConstants.isCleanSlate(scroll.getItemId()) && !(toScroll.getLevel() + toScroll.getUpgradeSlots() < ii.getEquipStats(toScroll.getItemId()).get(\"tuc\"))) { //upgrade slots can be over because of hammers\n+        if (ItemConstants.isCleanSlate(scroll.getItemId()) && !ii.canUseCleanSlate(toScroll)) {\n             return;\n         }\n+        \n         Equip scrolled = (Equip) ii.scrollEquipWithId(toScroll, scroll.getItemId(), whiteScroll, 0, c.getPlayer().isGM());\n         ScrollResult scrollSuccess = Equip.ScrollResult.FAIL; // fail\n         if (scrolled == null) {"}, {"sha": "9a1f88ba5b022efca89ea886a08337f9f16f728a", "filename": "src/net/server/channel/worker/BaseScheduler.java", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/worker/BaseScheduler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/worker/BaseScheduler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/worker/BaseScheduler.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -0,0 +1,131 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.worker;\n+\n+import constants.ServerConstants;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.locks.Lock;\n+import server.TimerManager;\n+import tools.Pair;\n+import tools.locks.MonitoredLockType;\n+import tools.locks.MonitoredReentrantLock;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public abstract class BaseScheduler {\n+    private int idleProcs = 0;\n+    private List<SchedulerListener> listeners = new LinkedList<>();\n+    private Map<Object, Pair<Runnable, Long>> registeredEntries = new HashMap<>();\n+    \n+    private ScheduledFuture<?> schedulerTask = null;\n+    private Lock schedulerLock;\n+    private Runnable monitorTask = new Runnable() {\n+                                        @Override\n+                                        public void run() {\n+                                            runBaseSchedule();\n+                                        }\n+                                    };\n+    \n+    protected BaseScheduler(MonitoredLockType lockType) {\n+        schedulerLock = new MonitoredReentrantLock(lockType, true);\n+    }\n+    \n+    protected void addListener(SchedulerListener listener) {\n+        listeners.add(listener);\n+    }\n+    \n+    private void runBaseSchedule() {\n+        schedulerLock.lock();\n+        try {\n+            if(registeredEntries.isEmpty()) {\n+                idleProcs++;\n+                \n+                if(idleProcs >= ServerConstants.MOB_STATUS_MONITOR_LIFE) {\n+                    if(schedulerTask != null) {\n+                        schedulerTask.cancel(false);\n+                        schedulerTask = null;\n+                    }\n+                }\n+                \n+                return;\n+            }\n+            idleProcs = 0;\n+            \n+            long timeNow = System.currentTimeMillis();\n+            List<Object> toRemove = new LinkedList<>();\n+            for(Entry<Object, Pair<Runnable, Long>> rmd : registeredEntries.entrySet()) {\n+                Pair<Runnable, Long> r = rmd.getValue();\n+                \n+                if(r.getRight() < timeNow) {\n+                    r.getLeft().run();  // runs the cancel action\n+                    toRemove.add(rmd.getKey());\n+                }\n+            }\n+            \n+            for(Object mse : toRemove) {\n+                registeredEntries.remove(mse);\n+            }\n+            \n+            dispatchRemovedEntries(toRemove, true);\n+        } finally {\n+            schedulerLock.unlock();\n+        }\n+    }\n+    \n+    private void dispatchRemovedEntries(List<Object> toRemove, boolean fromUpdate) {\n+        for (SchedulerListener listener : listeners.toArray(new SchedulerListener[listeners.size()])) {\n+            listener.removedScheduledEntries(toRemove, fromUpdate);\n+        }\n+    }\n+    \n+    protected void registerEntry(Object key, Runnable removalAction, long duration) {\n+        schedulerLock.lock();\n+        try {\n+            idleProcs = 0;\n+            if(schedulerTask == null) {\n+                schedulerTask = TimerManager.getInstance().register(monitorTask, ServerConstants.MOB_STATUS_MONITOR_PROC, ServerConstants.MOB_STATUS_MONITOR_PROC);\n+            }\n+            \n+            registeredEntries.put(key, new Pair<>(removalAction, System.currentTimeMillis() + duration));\n+        } finally {\n+            schedulerLock.unlock();\n+        }\n+    }\n+    \n+    protected void interruptEntry(Object key) {\n+        schedulerLock.lock();\n+        try {\n+            Pair<Runnable, Long> rm = registeredEntries.remove(key);\n+            if(rm != null) rm.getLeft().run();\n+            \n+            dispatchRemovedEntries(Collections.singletonList(key), false);\n+        } finally {\n+            schedulerLock.unlock();\n+        }\n+    }\n+}"}, {"sha": "887d71d9e6b461a036aebbeac756599c2f191cd7", "filename": "src/net/server/channel/worker/MobAnimationScheduler.java", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/worker/MobAnimationScheduler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/worker/MobAnimationScheduler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/worker/MobAnimationScheduler.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -0,0 +1,74 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.worker;\n+\n+import tools.locks.MonitoredLockType;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.concurrent.locks.Lock;\n+import tools.locks.MonitoredReentrantLock;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class MobAnimationScheduler extends BaseScheduler {\n+    Set<Integer> onAnimationMobs = new HashSet<>(1000);\n+    private Lock animationLock = new MonitoredReentrantLock(MonitoredLockType.CHANNEL_MOBANIMAT, true);\n+    \n+    private static Runnable r = new Runnable() {\n+        @Override\n+        public void run() {}    // do nothing\n+    };\n+    \n+    public MobAnimationScheduler() {\n+        super(MonitoredLockType.CHANNEL_MOBACTION);\n+        \n+        super.addListener(new SchedulerListener() {\n+            @Override\n+            public void removedScheduledEntries(List<Object> toRemove, boolean update) {\n+                animationLock.lock();\n+                try {\n+                    for(Object hashObj : toRemove) {\n+                        Integer mobHash = (Integer) hashObj;\n+                        onAnimationMobs.remove(mobHash);\n+                    }\n+                } finally {\n+                    animationLock.unlock();\n+                }\n+            }\n+        });\n+    }\n+    \n+    public boolean registerAnimationMode(Integer mobHash, long animationTime) {\n+        animationLock.lock();\n+        try {\n+            if(onAnimationMobs.contains(mobHash)) return false;\n+            \n+            registerEntry(mobHash, r, animationTime);\n+            onAnimationMobs.add(mobHash);\n+            return true;\n+        } finally {\n+            animationLock.unlock();\n+        }\n+    }\n+}"}, {"sha": "d4774670b6469fe83f2b9f0a75a5896dc020c7d6", "filename": "src/net/server/channel/worker/MobStatusScheduler.java", "status": "modified", "additions": 33, "deletions": 76, "changes": 109, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/worker/MobStatusScheduler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/worker/MobStatusScheduler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/worker/MobStatusScheduler.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -23,25 +23,19 @@\n import constants.ServerConstants;\n import java.util.HashMap;\n import java.util.ArrayList;\n-import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n-import java.util.Map.Entry;\n-import java.util.concurrent.ScheduledFuture;\n import java.util.concurrent.locks.Lock;\n-import server.TimerManager;\n-import tools.Pair;\n import tools.locks.MonitoredLockType;\n import tools.locks.MonitoredReentrantLock;\n \n /**\n  *\n  * @author Ronan\n  */\n-public class MobStatusScheduler {\n-    private int idleProcs = 0;\n-    private Map<MonsterStatusEffect, Pair<Runnable, Long>> registeredMobStatus = new HashMap<>();\n+public class MobStatusScheduler extends BaseScheduler {\n     private Map<MonsterStatusEffect, MobStatusOvertimeEntry> registeredMobStatusOvertime = new HashMap<>();\n+    private Lock overtimeStatusLock = new MonitoredReentrantLock(MonitoredLockType.CHANNEL_OVTSTATUS, true);\n     \n     private class MobStatusOvertimeEntry {\n         private int procCount;\n@@ -63,86 +57,49 @@ protected void update() {\n         }\n     }\n     \n-    private ScheduledFuture<?> mobStatusSchedule = null;\n-    private Lock mobStatusLock = new MonitoredReentrantLock(MonitoredLockType.CHANNEL_MOBSTATUS, true);\n-    private Runnable monitorTask = new Runnable() {\n-                                        @Override\n-                                        public void run() {\n-                                            runMobStatusSchedule();\n-                                        }\n-                                    };\n-    \n-    private void runMobStatusSchedule() {\n-        mobStatusLock.lock();\n-        try {\n-            if(registeredMobStatus.isEmpty()) {\n-                idleProcs++;\n-                \n-                if(idleProcs >= ServerConstants.MOB_STATUS_MONITOR_LIFE) {\n-                    if(mobStatusSchedule != null) {\n-                        mobStatusSchedule.cancel(false);\n-                        mobStatusSchedule = null;\n+    public MobStatusScheduler() {\n+        super(MonitoredLockType.CHANNEL_MOBSTATUS);\n+        \n+        super.addListener(new SchedulerListener() {\n+            @Override\n+            public void removedScheduledEntries(List<Object> toRemove, boolean update) {\n+                overtimeStatusLock.lock();\n+                try {\n+                    for(Object mseo : toRemove) {\n+                        MonsterStatusEffect mse = (MonsterStatusEffect) mseo;\n+                        registeredMobStatusOvertime.remove(mse);\n                     }\n+                    \n+                    if(update) {\n+                        // it's probably ok to use one thread for both management & overtime actions\n+                        List<MobStatusOvertimeEntry> mdoeList = new ArrayList<>(registeredMobStatusOvertime.values());\n+                        for(MobStatusOvertimeEntry mdoe : mdoeList) {\n+                            mdoe.update();\n+                        }\n+                    }\n+                } finally {\n+                    overtimeStatusLock.unlock();\n                 }\n-                \n-                return;\n-            }\n-            idleProcs = 0;\n-            \n-            long timeNow = System.currentTimeMillis();\n-            List<MonsterStatusEffect> toRemove = new LinkedList<>();\n-            for(Entry<MonsterStatusEffect, Pair<Runnable, Long>> rmd : registeredMobStatus.entrySet()) {\n-                Pair<Runnable, Long> r = rmd.getValue();\n-                \n-                if(r.getRight() < timeNow) {\n-                    r.getLeft().run();  // runs the cancel action\n-                    toRemove.add(rmd.getKey());\n-                }\n-            }\n-            \n-            for(MonsterStatusEffect mse : toRemove) {\n-                registeredMobStatus.remove(mse);\n-                registeredMobStatusOvertime.remove(mse);\n             }\n-            \n-            // it's probably ok to use one thread for both management & overtime actions\n-            List<MobStatusOvertimeEntry> mdoeList = new ArrayList<>(registeredMobStatusOvertime.values());\n-            for(MobStatusOvertimeEntry mdoe : mdoeList) {\n-                mdoe.update();\n-            }\n-        } finally {\n-            mobStatusLock.unlock();\n-        }\n+        });\n     }\n     \n     public void registerMobStatus(MonsterStatusEffect mse, Runnable cancelStatus, long duration, Runnable overtimeStatus, int overtimeDelay) {\n-        mobStatusLock.lock();\n-        try {\n-            idleProcs = 0;\n-            if(mobStatusSchedule == null) {\n-                mobStatusSchedule = TimerManager.getInstance().register(monitorTask, ServerConstants.MOB_STATUS_MONITOR_PROC, ServerConstants.MOB_STATUS_MONITOR_PROC);\n-            }\n+        if(overtimeStatus != null) {\n+            MobStatusOvertimeEntry mdoe = new MobStatusOvertimeEntry(overtimeDelay, overtimeStatus);\n             \n-            registeredMobStatus.put(mse, new Pair<>(cancelStatus, System.currentTimeMillis() + duration));\n-            \n-            if(overtimeStatus != null) {\n-                MobStatusOvertimeEntry mdoe = new MobStatusOvertimeEntry(overtimeDelay, overtimeStatus);\n+            overtimeStatusLock.lock();\n+            try {\n                 registeredMobStatusOvertime.put(mse, mdoe);\n+            } finally {\n+                overtimeStatusLock.unlock();\n             }\n-        } finally {\n-            mobStatusLock.unlock();\n         }\n+        \n+        registerEntry(mse, cancelStatus, duration);\n     }\n     \n     public void interruptMobStatus(MonsterStatusEffect mse) {\n-        mobStatusLock.lock();\n-        try {\n-            Pair<Runnable, Long> rmd = registeredMobStatus.remove(mse);\n-            if(rmd != null) rmd.getLeft().run();\n-            \n-            registeredMobStatusOvertime.remove(mse);\n-        } finally {\n-            mobStatusLock.unlock();\n-        }\n+        interruptEntry(mse);\n     }\n }"}, {"sha": "444566fbf9b553891ce34257537ba177385f2e81", "filename": "src/net/server/channel/worker/OverallScheduler.java", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/worker/OverallScheduler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/worker/OverallScheduler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/worker/OverallScheduler.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -0,0 +1,40 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.worker;\n+\n+import tools.locks.MonitoredLockType;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class OverallScheduler extends BaseScheduler {\n+    public OverallScheduler() {\n+        super(MonitoredLockType.CHANNEL_OVERALL);\n+    }\n+    \n+    public void registerDelayedAction(Runnable runAction, long delay) {\n+        registerEntry(runAction, runAction, delay);\n+    }\n+    \n+    public void forceRunDelayedAction(Runnable runAction) {\n+        interruptEntry(runAction);\n+    }\n+}"}, {"sha": "d1149a8f5cf6251c8680dd970513132785a278e6", "filename": "src/net/server/channel/worker/SchedulerListener.java", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/worker/SchedulerListener.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/net/server/channel/worker/SchedulerListener.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/worker/SchedulerListener.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -0,0 +1,30 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.worker;\n+\n+import java.util.List;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public interface SchedulerListener {\n+    public void removedScheduledEntries(List<Object> entries, boolean update);\n+}"}, {"sha": "2379f79afffeeb3265d6273baeb8e5f5fe2756ed", "filename": "src/server/MapleItemInformationProvider.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/MapleItemInformationProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/MapleItemInformationProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleItemInformationProvider.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -929,14 +929,17 @@ private void scrollEquipWithChaos(Equip nEquip, int range) {\n         }\n     }\n     \n+    public boolean canUseCleanSlate(Equip nEquip) {\n+        Map<String, Integer> eqstats = this.getEquipStats(nEquip.getItemId());\n+        return ServerConstants.USE_ENHANCED_CLNSLATE || nEquip.getLevel() + nEquip.getUpgradeSlots() < eqstats.get(\"tuc\");\n+    }\n+    \n     public Item scrollEquipWithId(Item equip, int scrollId, boolean usingWhiteScroll, int vegaItemId, boolean isGM) {\n         boolean assertGM = (isGM && ServerConstants.USE_PERFECT_GM_SCROLL);\n         \n         if (equip instanceof Equip) {\n             Equip nEquip = (Equip) equip;\n-            \n             Map<String, Integer> stats = this.getEquipStats(scrollId);\n-            Map<String, Integer> eqstats = this.getEquipStats(equip.getItemId());\n             \n             if (((nEquip.getUpgradeSlots() > 0 || ItemConstants.isCleanSlate(scrollId))) || assertGM) {\n                 double prop = (double)stats.get(\"success\");\n@@ -963,7 +966,7 @@ public Item scrollEquipWithId(Item equip, int scrollId, boolean usingWhiteScroll\n                         case 2049001:\n                         case 2049002:\n                         case 2049003:\n-                            if (nEquip.getLevel() + nEquip.getUpgradeSlots() < eqstats.get(\"tuc\")) {\n+                            if (canUseCleanSlate(nEquip)) {\n                                 nEquip.setUpgradeSlots((byte) (nEquip.getUpgradeSlots() + 1));\n                             }\n                             break;"}, {"sha": "c9f2de66a96e96b2041b0b609f9a6a302e609408", "filename": "src/server/life/MapleLifeFactory.java", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/life/MapleLifeFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/life/MapleLifeFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleLifeFactory.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -139,10 +139,10 @@ public static MapleMonster getMonster(int mid) {\n                     while (monsterSkillInfoData.getChildByPath(Integer.toString(i)) != null) {\n                         skills.add(new Pair<>(Integer.valueOf(MapleDataTool.getInt(i + \"/skill\", monsterSkillInfoData, 0)), Integer.valueOf(MapleDataTool.getInt(i + \"/level\", monsterSkillInfoData, 0))));\n                         \n-                        MapleData monsterSkillData = monsterData.getChildByPath(\"skill\" + i);\n-                        if(monsterSkillData != null) {\n+                        MapleData monsterSkillData = monsterData.getChildByPath(\"skill\" + (i + 1));\n+                        if (monsterSkillData != null) {\n                             int animationTime = 0;\n-                            for(MapleData effectEntry : monsterSkillData.getChildren()) {\n+                            for (MapleData effectEntry : monsterSkillData.getChildren()) {\n                                 animationTime += MapleDataTool.getIntConvert(\"delay\", effectEntry, 0);\n                             }\n                             \n@@ -153,6 +153,19 @@ public static MapleMonster getMonster(int mid) {\n                     }\n                     stats.setSkills(skills);\n                 }\n+                \n+                int i = 0;\n+                MapleData monsterAttackData;\n+                while ((monsterAttackData = monsterData.getChildByPath(\"attack\" + (i + 1))) != null) {\n+                    int animationTime = 0;\n+                    for (MapleData effectEntry : monsterAttackData.getChildren()) {\n+                        animationTime += MapleDataTool.getIntConvert(\"delay\", effectEntry, 0);\n+                    }\n+\n+                    MapleMonsterInformationProvider.getInstance().setMobAttackAnimationTime(mid, i, animationTime);\n+                    i++;\n+                }\n+                \n                 MapleData banishData = monsterInfoData.getChildByPath(\"ban\");\n                 if (banishData != null) {\n                     stats.setBanishInfo(new BanishInfo(MapleDataTool.getString(\"banMsg\", banishData), MapleDataTool.getInt(\"banMap/0/field\", banishData, -1), MapleDataTool.getString(\"banMap/0/portal\", banishData, \"sp\")));"}, {"sha": "0898a15026f0d74488fb2647f91821f38884f2d7", "filename": "src/server/life/MapleMonster.java", "status": "modified", "additions": 71, "deletions": 10, "changes": 81, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/life/MapleMonster.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/life/MapleMonster.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleMonster.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -95,6 +95,7 @@\n     private Lock externalLock = new MonitoredReentrantLock(MonitoredLockType.MOB_EXT);\n     private Lock monsterLock = new MonitoredReentrantLock(MonitoredLockType.MOB, true);\n     private Lock statiLock = new MonitoredReentrantLock(MonitoredLockType.MOB_STATI);\n+    private Lock animationLock = new MonitoredReentrantLock(MonitoredLockType.MOB_ANI);\n \n     public MapleMonster(int id, MapleMonsterStats stats) {\n         super(id);\n@@ -230,6 +231,28 @@ public void setHpZero() {     // force HP = 0\n         applyAndGetHpDamage(Integer.MAX_VALUE, false);\n     }\n     \n+    public boolean applyAnimationIfRoaming(int attackPos, int skillPos) {   // roam: not casting attack or skill animations\n+        if(!animationLock.tryLock()) return false;\n+        \n+        try {\n+            long animationTime;\n+        \n+            if(skillPos < 0) {\n+                animationTime = MapleMonsterInformationProvider.getInstance().getMobAttackAnimationTime(this.getId(), attackPos);\n+            } else {\n+                animationTime = MapleMonsterInformationProvider.getInstance().getMobSkillAnimationTime(this.getId(), skillPos);\n+            }\n+\n+            if(animationTime > 0) {\n+                return map.getChannelServer().registerMobOnAnimationEffect(map.getId(), this.hashCode(), animationTime);\n+            } else {\n+                return true;\n+            }\n+        } finally {\n+            animationLock.unlock();\n+        }\n+    }\n+    \n     public synchronized Integer applyAndGetHpDamage(int delta, boolean stayAlive) {\n         int curHp = hp.get();\n         if (curHp <= 0) {       // this monster is already dead\n@@ -469,15 +492,15 @@ public void giveExpToCharacter(MapleCharacter attacker, float exp, boolean isKil\n     public MapleCharacter killBy(final MapleCharacter killer) {\n         distributeExperience(killer != null ? killer.getId() : 0);\n \n-        MapleCharacter controller = getController();\n-        if (controller != null) { // this can/should only happen when a hidden gm attacks the monster\n-            controller.announce(MaplePacketCreator.stopControllingMonster(this.getObjectId()));\n-            controller.stopControllingMonster(this);\n+        MapleCharacter chrController = getController();\n+        if (chrController != null) { // this can/should only happen when a hidden gm attacks the monster\n+            chrController.announce(MaplePacketCreator.stopControllingMonster(this.getObjectId()));\n+            chrController.stopControllingMonster(this);\n         }\n \n         final List<Integer> toSpawn = this.getRevives(); // this doesn't work (?)\n         if (toSpawn != null) {\n-            final MapleMap reviveMap = killer.getMap();\n+            final MapleMap reviveMap = map;\n             if (toSpawn.contains(9300216) && reviveMap.getId() > 925000000 && reviveMap.getId() < 926000000) {\n                 reviveMap.broadcastMessage(MaplePacketCreator.playSound(\"Dojang/clear\"));\n                 reviveMap.broadcastMessage(MaplePacketCreator.showEffect(\"dojang/end/clear\"));\n@@ -571,7 +594,7 @@ private void dispatchUpdateQuestMobCount() {\n         }\n     }\n     \n-    public void dispatchMonsterKilled(boolean hasKiller) {\n+    public synchronized void dispatchMonsterKilled(boolean hasKiller) {\n         if(!hasKiller) {\n             dispatchUpdateQuestMobCount();\n         }\n@@ -584,19 +607,52 @@ public void dispatchMonsterKilled(boolean hasKiller) {\n             }\n         }\n         \n-        for (MonsterListener listener : listeners.toArray(new MonsterListener[listeners.size()])) {\n+        MonsterListener[] listenersList;\n+        statiLock.lock();\n+        try {\n+            listenersList = listeners.toArray(new MonsterListener[listeners.size()]);\n+        } finally {\n+            statiLock.unlock();\n+        }\n+        \n+        for (MonsterListener listener : listenersList) {\n             listener.monsterKilled(getAnimationTime(\"die1\"));\n         }\n+        \n+        statiLock.lock();\n+        try {\n+            stati.clear();\n+            alreadyBuffed.clear();\n+            listeners.clear();\n+        } finally {\n+            statiLock.unlock();\n+        }\n     }\n     \n     private void dispatchMonsterDamaged(MapleCharacter from, int trueDmg) {\n-        for (MonsterListener listener : listeners.toArray(new MonsterListener[listeners.size()])) {\n+        MonsterListener[] listenersList;\n+        statiLock.lock();\n+        try {\n+            listenersList = listeners.toArray(new MonsterListener[listeners.size()]);\n+        } finally {\n+            statiLock.unlock();\n+        }\n+        \n+        for (MonsterListener listener : listenersList) {\n             listener.monsterDamaged(from, trueDmg);\n         }\n     }\n     \n     private void dispatchMonsterHealed(int trueHeal) {\n-        for (MonsterListener listener : listeners.toArray(new MonsterListener[listeners.size()])) {\n+        MonsterListener[] listenersList;\n+        statiLock.lock();\n+        try {\n+            listenersList = listeners.toArray(new MonsterListener[listeners.size()]);\n+        } finally {\n+            statiLock.unlock();\n+        }\n+        \n+        for (MonsterListener listener : listenersList) {\n             listener.monsterHealed(trueHeal);\n         }\n     }\n@@ -653,7 +709,12 @@ public void switchController(MapleCharacter newController, boolean immediateAggr\n     }\n \n     public void addListener(MonsterListener listener) {\n-        listeners.add(listener);\n+        statiLock.lock();\n+        try {\n+            listeners.add(listener);\n+        } finally {\n+            statiLock.unlock();\n+        }\n     }\n \n     public boolean isControllerHasAggro() {"}, {"sha": "7e4325e8981238fac6cf5b24782c5c8bd0409078", "filename": "src/server/life/MapleMonsterInformationProvider.java", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/life/MapleMonsterInformationProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/life/MapleMonsterInformationProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleMonsterInformationProvider.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -54,6 +54,7 @@\n         private final Set<Integer> hasNoMultiEquipDrops = new HashSet<>();\n         private final Map<Integer, List<MonsterDropEntry>> extraMultiEquipDrops = new HashMap<>();\n         \n+        private final Map<Pair<Integer, Integer>, Integer> mobAttackAnimationTime = new HashMap<>();\n         private final Map<Pair<Integer, Integer>, Integer> mobSkillAnimationTime = new HashMap<>();\n \n \tprotected MapleMonsterInformationProvider() {\n@@ -226,6 +227,15 @@ private void retrieveGlobal() {\n \t\treturn ret;\n \t}\n         \n+        public final void setMobAttackAnimationTime(int monsterId, int attackPos, int animationTime) {\n+                mobAttackAnimationTime.put(new Pair<>(monsterId, attackPos), animationTime);\n+        }\n+        \n+        public final Integer getMobAttackAnimationTime(int monsterId, int attackPos) {\n+                Integer time = mobAttackAnimationTime.get(new Pair<>(monsterId, attackPos));\n+                return time == null ? 0 : time;\n+        }\n+        \n         public final void setMobSkillAnimationTime(int monsterId, int skillPos, int animationTime) {\n                 mobSkillAnimationTime.put(new Pair<>(monsterId, skillPos), animationTime);\n         }"}, {"sha": "91ef97293cba2a2300b989f0f14079409c959a42", "filename": "src/server/life/MobSkill.java", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/life/MobSkill.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/life/MobSkill.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MobSkill.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -105,14 +105,16 @@ public void setLimit(int limit) {\n     }\n \n     public void applyDelayedEffect(final MapleCharacter player, final MapleMonster monster, final boolean skill, final List<MapleCharacter> banishPlayers, int animationTime) {\n-        TimerManager.getInstance().schedule(new Runnable() {\n-                                                @Override\n-                                                public void run() {\n-                                                    if(monster.isAlive()) {\n-                                                        applyEffect(player, monster, skill, banishPlayers);\n-                                                    }\n-                                                }\n-                                            }, animationTime);\n+        Runnable toRun = new Runnable() {\n+                            @Override\n+                            public void run() {\n+                                if(monster.isAlive()) {\n+                                    applyEffect(player, monster, skill, banishPlayers);\n+                                }\n+                            }\n+                        };\n+        \n+        monster.getMap().getChannelServer().registerOverallAction(monster.getMap().getId(), toRun, animationTime);\n     }\n     \n     public void applyEffect(MapleCharacter player, MapleMonster monster, boolean skill, List<MapleCharacter> banishPlayers) {"}, {"sha": "786762b6503fae0ce82ef31db51784585d8fa79f", "filename": "src/server/maps/MapleReactor.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/maps/MapleReactor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/server/maps/MapleReactor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleReactor.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -193,7 +193,7 @@ private void tryForceHitReactor(final byte newState) {  // weak hit state signal\n             this.resetReactorActions(newState);\n             map.broadcastMessage(MaplePacketCreator.triggerReactor(this, (short) 0));\n         } finally {\n-            this.unlockReactor();\n+            this.reactorLock.unlock();\n         }\n     }\n     "}, {"sha": "b412da3c693b94e6de69dadf4b49e3ba8b91011c", "filename": "src/tools/dropspider/DataTool.java", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/tools/dropspider/DataTool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/tools/dropspider/DataTool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/dropspider/DataTool.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -0,0 +1,129 @@\n+/*\n+ * To change this template, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package tools.dropspider;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import provider.MapleData;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataFileEntry;\n+import provider.MapleDataProvider;\n+import provider.MapleDataProviderFactory;\n+import provider.MapleDataTool;\n+import server.MapleItemInformationProvider;\n+import tools.Pair;\n+\n+/**\n+ *\n+ * @author Simon\n+ */\n+public class DataTool {\n+    private static Map<String, Integer> hardcodedMobs = new HashMap<>();\n+    \n+    private static ArrayList<Pair<Integer, String>> npc_list = null;\n+    private static LinkedList<Pair<Integer, String>> mob_pairs = null;\n+    private static MapleDataProvider data = MapleDataProviderFactory.getDataProvider(MapleDataProviderFactory.fileInWZPath(\"Mob.wz\"));\n+    private static HashSet<Integer> bosses = null;\n+\n+    public static void setHardcodedMobNames() {\n+        hardcodedMobs.put(\"Red Slime [2]\", 7120103);\n+        hardcodedMobs.put(\"Gold Slime\", 7120105);\n+        hardcodedMobs.put(\"Nibelung [3]\", 8220015);\n+    }\n+    \n+    public static void addMonsterIdsFromHardcodedName(List<Integer> monster_ids, String monster_name) {\n+        Integer id = hardcodedMobs.get(monster_name);\n+        if(id != null) {\n+            monster_ids.add(id);\n+        }\n+    }\n+    \n+    public static ArrayList<Integer> monsterIdsFromName(String name) {\n+        MapleData data = null;\n+        MapleDataProvider dataProvider = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/\" + \"String.wz\"));\n+        ArrayList<Integer> ret = new ArrayList<>();\n+        data = dataProvider.getData(\"Mob.img\");\n+        if (mob_pairs == null) {\n+            mob_pairs = new LinkedList<>();\n+            for (MapleData mobIdData : data.getChildren()) {\n+                int mobIdFromData = Integer.parseInt(mobIdData.getName());\n+                String mobNameFromData = MapleDataTool.getString(mobIdData.getChildByPath(\"name\"), \"NO-NAME\");\n+                mob_pairs.add(new Pair<>(mobIdFromData, mobNameFromData));\n+            }\n+        }\n+        for (Pair<Integer, String> mobPair : mob_pairs) {\n+            if (mobPair.getRight().toLowerCase().equals(name.toLowerCase())) {\n+                ret.add(mobPair.getLeft());\n+            }\n+        }\n+        return ret;\n+    }\n+\n+    private static void populateBossList() {\n+        bosses = new HashSet<>();\n+        MapleDataDirectoryEntry mob_data = data.getRoot();\n+        for (MapleDataFileEntry mdfe : mob_data.getFiles()) {\n+            MapleData boss_candidate = data.getData(mdfe.getName());\n+            MapleData monsterInfoData = boss_candidate.getChildByPath(\"info\");\n+            int mid = Integer.valueOf(boss_candidate.getName().replaceAll(\"[^0-9]\", \"\"));\n+            boolean boss = MapleDataTool.getIntConvert(\"boss\", monsterInfoData, 0) > 0 || mid == 8810018 || mid == 9410066;\n+            if (boss) {\n+                bosses.add(mid);\n+            }\n+        }\n+    }\n+\n+    public static boolean isBoss(int mid) {\n+        if (bosses == null) {\n+            populateBossList();\n+        }\n+        return bosses.contains(mid);\n+    }\n+\n+    public static ArrayList<Integer> itemIdsFromName(String name) {\n+\n+        ArrayList<Integer> ret = new ArrayList<>();\n+        for (Pair<Integer, String> itemPair : MapleItemInformationProvider.getInstance().getAllItems()) {\n+            String item_name = itemPair.getRight().toLowerCase().replaceAll(\"\\\\&quot;\", \"\");\n+            item_name = item_name.replaceAll(\"'\", \"\");\n+            item_name = item_name.replaceAll(\"\\\\'\", \"\");\n+\n+            name = name.toLowerCase().replaceAll(\"\\\\&quot;\", \"\");\n+            name = name.replaceAll(\"'\", \"\");\n+            name = name.replaceAll(\"\\\\'\", \"\");\n+\n+            if (item_name.equals(name)) {\n+                ret.add(itemPair.getLeft());\n+                return ret;\n+            }\n+        }\n+        return ret;\n+    }\n+\n+    public static ArrayList<Integer> npcIdsFromName(String name) {\n+        MapleDataProvider dataProvider = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/\" + \"String.wz\"));\n+        ArrayList<Integer> ret = new ArrayList<>();\n+        if (npc_list == null) {\n+            ArrayList<Pair<Integer, String>> searchList = new ArrayList<>();\n+            for (MapleData searchData : dataProvider.getData(\"Npc.img\").getChildren()) {\n+                int searchFromData = Integer.parseInt(searchData.getName());\n+                String infoFromData = MapleDataTool.getString(searchData.getChildByPath(\"name\"), \"NO-NAME\");\n+                searchList.add(new Pair<>(searchFromData, infoFromData));\n+            }\n+            npc_list = searchList;\n+        }\n+        for (Pair<Integer, String> searched : npc_list) {\n+            if (searched.getRight().toLowerCase().contains(name.toLowerCase())) {\n+                ret.add(searched.getLeft());\n+            }\n+        }\n+        return ret;\n+    }\n+}"}, {"sha": "63caf8f9f92d1746d38eaf9effb6ac93487cf467", "filename": "src/tools/dropspider/DropEntry.java", "status": "added", "additions": 177, "deletions": 0, "changes": 177, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/tools/dropspider/DropEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/tools/dropspider/DropEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/dropspider/DropEntry.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -0,0 +1,177 @@\n+/*\n+ * To change this template, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package tools.dropspider;\n+\n+import client.inventory.MapleInventoryType;\n+import constants.ItemConstants;\n+\n+/**\n+ *\n+ * @author Simon\n+ */\n+public class DropEntry {\n+    private int version;\n+    private int item_id;\n+    private int monster_id;\n+    private int chance;\n+    private int mindrop;\n+    private int maxdrop;\n+\n+    public DropEntry(int item_id, int monster_id, int version) {\n+        this.item_id = item_id;\n+        this.monster_id = monster_id;\n+        mindrop = 1;\n+        maxdrop = 1;\n+        chance = calculateChance(item_id);\n+        this.version = version;\n+    }\n+\n+    private int calculateChance(int item_id) {\n+        MapleInventoryType mit = ItemConstants.getInventoryType(item_id);\n+        boolean boss = DataTool.isBoss(monster_id);\n+        int number = (item_id / 1000) % 1000;\n+        switch (mit) {\n+            case EQUIP:\n+                if (boss) {\n+                    return 40000;\n+                }\n+                return 700;\n+            case USE:\n+                if (boss) {\n+                    mindrop = 1;\n+                    maxdrop = 4;\n+                }\n+                switch (number) {\n+                    case 0: // normal potions\n+                        mindrop = 1;\n+                        if (version > 98) {\n+                            maxdrop = 5;\n+                        }\n+                        return 40000;\n+                    case 1: // watermelons, pills, speed potions, etc\n+                    case 2: // same thing\n+                        return 10000;\n+                    case 3: // advanced potions from crafting (should not drop)\n+                    case 4: // same thing\n+                    case 11: // poison mushroom\n+                    case 28: // cool items\n+                    case 30: // return scrolls\n+                    case 46: // gallant scrolls\n+                        return 0;\n+                    case 10: // strange potions like apples, eggs\n+                    case 12: // drakes blood, sap of ancient tree (rare use)\n+                    case 20: // salad, fried chicken, dews\n+                    case 22: // air bubbles and stuff. ALSO nependeath honey but oh well\n+                    case 50: // antidotes and stuff\n+                        return 3000;\n+                    case 290: // mastery books\n+                        if(boss)\n+                            return 40000;\n+                        else\n+                            return 1000;\n+                    case 40: // Scrolls\n+                    case 41: // Scrolls\n+                    case 43: // Scrolls\n+                    case 44: // Scrolls\n+                    case 48: // pet scrolls\n+                        if(boss)\n+                            return 10000;\n+                        else\n+                            return 750;\n+                    case 100: // summon bags\n+                    case 101: // summon bags\n+                    case 102: // summon bags\n+                    case 109: // summon bags\n+                    case 120: // pet food\n+                    case 211: // cliffs special potion\n+                    case 240: // rings\n+                    case 270: // pheromone, additional weird stuff\n+                    case 310: // teleport rock\n+                    case 320: // weird drops\n+                    case 390: // weird\n+                    case 430: // Scripted items\n+                    case 440: // jukebox\n+                    case 460: // magnifying glass\n+                    case 470: // golden hammer\n+                    case 490: // crystanol\n+                    case 500: // sp reset\n+                        return 0;\n+                    case 47: // tablets from dragon rider\n+                        return 220000;\n+                    case 49: // clean slats, potential scroll, ees\n+                    case 70: // throwing stars\n+                    case 210: // rare monster piece drops\n+                    case 330: // bullets\n+                        if(boss)\n+                            return 2500;\n+                        else\n+                            return 400;\n+                    case 60: // bow arrows\n+                    case 61: // crossbow arrows\n+                        mindrop = 10;\n+                        maxdrop = 50;\n+                        return 10000;\n+                    case 213: // boss transfrom\n+                        return 100000;\n+                    case 280: // skill books\n+                        if(boss)\n+                            return 20000;\n+                        else\n+                            return 1000;\n+                    case 381: // monster book things\n+                    case 382:\n+                    case 383:\n+                    case 384:\n+                    case 385:\n+                    case 386:\n+                    case 387:\n+                    case 388:\n+                        return 20000;\n+                    case 510: // recipes\n+                    case 511:\n+                    case 512:\n+                        return 10000;\n+                    default:\n+                        return 0;\n+\n+                }\n+            case ETC:\n+                switch (number) {\n+                    case 0: // monster pieces\n+                        return 200000;\n+                    case 4: // crystal ores\n+                    case 130: // simulators\n+                    case 131: // manuals\n+                        return 3000;\n+                    case 30: // game pieces\n+                        return 10000;\n+                    case 32: // misc items\n+                        return 10000;\n+                    default:\n+                        return 7000;\n+                }\n+            default:\n+                return 7000;\n+        }\n+    }\n+\n+    public String getQuerySegment() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"(\");\n+        sb.append(monster_id);\n+        sb.append(\", \");\n+        sb.append(item_id);\n+        sb.append(\", \");\n+        sb.append(mindrop);//min\n+        sb.append(\", \");\n+        sb.append(maxdrop);//max\n+        sb.append(\", \");\n+        sb.append(0);//quest\n+        sb.append(\", \");\n+        sb.append(chance);\n+        sb.append(\")\");\n+        return sb.toString();\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "887607791eb4050f398ea5fdb941a5d94307570c", "filename": "src/tools/dropspider/Errors.java", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/tools/dropspider/Errors.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/tools/dropspider/Errors.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/dropspider/Errors.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -0,0 +1,19 @@\n+package tools.dropspider;\n+\n+import java.util.LinkedList;\n+\n+public class Errors {\n+    \n+    public String mobName;\n+    public LinkedList<String> wrong = new LinkedList<>();\n+    \n+    public String createErrorLog() {\n+        StringBuilder sb = new StringBuilder();\n+        \n+        for (String w : wrong) {\n+            sb.append(mobName).append(\" : \").append(w).append(\"\\r\\n\");\n+        }\n+        \n+        return sb.toString();\n+    }\n+}"}, {"sha": "3b28fd60d37734716897ca8db54a92fd932babad", "filename": "src/tools/dropspider/Main.java", "status": "added", "additions": 339, "deletions": 0, "changes": 339, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/tools/dropspider/Main.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/tools/dropspider/Main.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/dropspider/Main.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -0,0 +1,339 @@\n+/*\n+ * To change this template, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package tools.dropspider;\n+\n+import java.io.BufferedWriter;\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.PrintWriter;\n+import java.net.Authenticator;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Scanner;\n+import javax.net.ssl.HttpsURLConnection;\n+\n+/**\n+ *\n+ * @author Simon\n+ */\n+\n+//NOTE: this tool is currently unsupported since HS started using HTTPS. Missing proper SSL certificates to access Hidden-Street's website.\n+public class Main {\n+\n+    private static ArrayList<DropEntry> drop_entries = new ArrayList<>();\n+    private static HashMap<String, Errors> problems = new HashMap<>();\n+//    private static final String TEST_STRING = \" <a href=\\\"/items/leftover/ligator-skin\\\" alt=\\\"/tip.php?nid=2138\\\">Ligator Skin</a>, <a href=\\\"/items/leftover/the-magic-rock\\\" alt=\\\"/tip.php?nid=3954\\\">The Magic Rock</a>, <a href=\\\"/items/quest/witch-grass-leaves\\\" alt=\\\"/tip.php?nid=6129\\\">Witch Grass Leaves</a>    </td> \";\n+    private static final String BASE_URL = \"https://bbb.hidden-street.net\";\n+    private static final int VERSION = 83;\n+    private static String[] pages = {\"1-10\", \"11-20\", \"21-30\", \"31-40\", \"41-50\", \"51-60\", \"61-70\", \"71-80\", \"81-90\", \"91-100\"};\n+    private static String[] additionalPages88 = {\"101-150\", \"151-200\"};\n+    private static String[] additionalPagesBB = {\"101-120,\", \"121-140\", \"141-160\", \"161-180\", \"181-200\"};\n+\n+    public static void main(String[] args) {\n+        System.setProperty(\"wzpath\", \"wz\");\n+        \n+        //DataTool.setHardcodedMobNames();\n+        //parsePage(\"https://bbb.hidden-street.net/monster/nibelung-3\");\n+        \n+        crawlProgram();\n+        \n+        dumpQuery();\n+        dumpErrors();\n+    }\n+    \n+    private static void crawlProgram() {\n+        //parseMonsterSection(TEST_STRING);\n+        for (String s : pages) {\n+            crawlPage(\"https://bbb.hidden-street.net/monster/\" + s);\n+        }\n+        if (VERSION > 92) { // big bang\n+            for (String s : additionalPagesBB) {\n+                crawlPage(\"https://bbb.hidden-street.net/monster/\" + s);\n+            }\n+            crawlPage(\"https://bbb.hidden-street.net/monster/101-120?page=1\"); //page 1's bugged\n+        } else {\n+            for (String s : additionalPages88) {\n+                crawlPage(\"https://bbb.hidden-street.net/monster/\" + s);\n+            }\n+        }\n+    }\n+\n+    private static void crawlPage(String url) { //recursive method\n+        try {\n+            URL page = new URL(url);\n+            //Authenticator.setDefault( new MyAuthenticator());   // todo keystore/truststore pass\n+            HttpsURLConnection http = (HttpsURLConnection)page.openConnection();\n+            http.setAllowUserInteraction(true);\n+            http.setRequestMethod(\"GET\");\n+            http.connect();\n+\n+            InputStream is = http.getInputStream();\n+            Scanner s = new Scanner(is);\n+            String temp_data = \"\";\n+            while (s.hasNext()) {\n+                temp_data += s.nextLine() + \"\\n\";\n+            }\n+            s.close();\n+            is.close();\n+            while (temp_data.contains(\"class=\\\"monster\\\">\")) {\n+                String monster_section = getStringBetween(temp_data, \"class=\\\"monster\\\">\", \"</table>\");\n+                parseMonsterSection(monster_section);\n+                temp_data = trimUntil(temp_data, \"</table>\");\n+            }\n+            if (temp_data.contains(\"Go to next page\")) {\n+                String next_url_segment = getStringBetween(temp_data, \"<li class=\\\"pager-next\\\"><a href=\\\"\", \"\\\" title=\\\"Go to next page\");\n+                String next_url = BASE_URL + next_url_segment;\n+                crawlPage(next_url);\n+            } else {\n+                System.out.println(\"Finished crawling section.\");\n+            }\n+        } catch (MalformedURLException mue) {\n+            mue.printStackTrace();\n+            System.out.println(\"Error parsing URL: \" + url);\n+            return;\n+        } catch (IOException ioe) {\n+            ioe.printStackTrace();\n+            System.out.println(\"Error reading from URL: \" + ioe.getLocalizedMessage());\n+            return;\n+        }\n+    }\n+    \n+    private static void parsePage(String url) { //unit method\n+        try {\n+            URL page = new URL(url);\n+            InputStream is = page.openStream();\n+            Scanner s = new Scanner(is);\n+            String temp_data = \"\";\n+            while (s.hasNext()) {\n+                temp_data += s.nextLine() + \"\\n\";\n+            }\n+            s.close();\n+            is.close();\n+            while (temp_data.contains(\"class=\\\"monster\\\">\")) {\n+                String monster_section = getStringBetween(temp_data, \"class=\\\"monster\\\">\", \"</table>\");\n+                parseMonsterSection(monster_section);\n+                temp_data = trimUntil(temp_data, \"</table>\");\n+            }\n+            if (temp_data.contains(\"Go to next page\")) {\n+                String next_url_segment = getStringBetween(temp_data, \"<li class=\\\"pager-next\\\"><a href=\\\"\", \"\\\" title=\\\"Go to next page\");\n+                String next_url = BASE_URL + next_url_segment;\n+                //crawlPage(next_url);\n+            } else {\n+                System.out.println(\"Finished parsing section.\");\n+            }\n+        } catch (MalformedURLException mue) {\n+            mue.printStackTrace();\n+            System.out.println(\"Error parsing URL: \" + url);\n+            return;\n+        } catch (IOException ioe) {\n+            ioe.printStackTrace();\n+            System.out.println(\"Error reading from URL: \" + ioe.getLocalizedMessage());\n+            return;\n+        }\n+    }\n+\n+    private static void parseMonsterSection(String html_data) {\n+        String monster_name = getStringBetween(html_data, \"alt=\\\"\", \"\\\" title=\");\n+        System.out.println(monster_name);\n+        //  System.out.println(html_data);\n+        //parse etc drop\n+        parseItemSection(getStringBetween(html_data, \"Etc. drop:</strong>\", \"</td>\"), monster_name);\n+\n+        //parse useable drop\n+        parseItemSection(getStringBetween(html_data, \"Useable drop:</strong>\", \"</td>\"), monster_name);\n+\n+        //parse ore drop\n+        parseItemSection(getStringBetween(html_data, \"Ore drop:</strong>\", \"</td>\"), monster_name);\n+\n+        //parse equips\n+        parseItemSection(getStringBetween(html_data, \"Common equipment:</strong>\", \"</div>\"), monster_name);\n+        parseItemSection(getStringBetween(html_data, \"Warrior equipment:</strong>\", \"</div>\"), monster_name);\n+        parseItemSection(getStringBetween(html_data, \"Magician equipment:</strong>\", \"</div>\"), monster_name);\n+        parseItemSection(getStringBetween(html_data, \"Bowman equipment:</strong>\", \"</div>\"), monster_name);\n+        parseItemSection(getStringBetween(html_data, \"Thief equipment:</strong>\", \"</div>\"), monster_name);\n+        parseItemSection(getStringBetween(html_data, \"Pirate equipment:</strong>\", \"</div>\"), monster_name);\n+\n+        //System.out.println(monster_name);\n+    }\n+\n+    private static void parseItemSection(String html_data, String monster_name) {\n+        String temp_data = html_data;\n+        while (temp_data.contains(\"<a href\")) {\n+            //  System.out.println(\"Temp_data: \" + temp_data);\n+            String s1 = trimUntil(temp_data, \">\");\n+            String item_name = getStringBetween(s1, \"\", \"</a>\");\n+            temp_data = trimUntil(temp_data, \"</a>\");\n+\n+            boolean gender_equip = false;\n+            if (item_name.contains(\"(M)\") || item_name.contains(\"(F)\")) {\n+                item_name = item_name.replaceAll(\"(\\\\(M\\\\))|(\\\\(F\\\\))\", \"\");\n+                gender_equip = true;\n+            }\n+            item_name = item_name.replaceAll(\"Throwing-Star\", \"Throwing-Stars\").trim();\n+            item_name = item_name.replaceAll(\"for Magic Attack\", \"for Magic Att.\").trim();\n+            item_name = item_name.replaceAll(\"\\\\(50%\\\\)\", \"\").trim();\n+            item_name = item_name.replaceAll(\"\\\\(70%\\\\)\", \"\").trim();\n+            item_name = item_name.replaceAll(\"\\\\'s\", \"\").trim();\n+            \n+            \n+            monster_name = monster_name.replaceAll(\"Horntail\\\\'s Head B\", \"Horntail\");\n+            // Process scrolls, nexon doesn't have the % on most of the scrolls. So we need to remove it\n+            // Unfortunately they do for some, so we have to handle that too.\n+            boolean scroll = false;\n+            int scrollType = 0;\n+            \n+            if(item_name.contains(\"100%\")) {\n+                scroll = true;\n+                item_name = item_name.replaceAll(\"100%\", \"\").trim();\n+                item_name = item_name.replaceAll(\"\\\\(\\\\)\", \"\").trim(); // Hidden Street has a few scroll %'s with ()s around them.. sigh\n+            } else if(item_name.contains(\"60%\")) {\n+                scroll = true;\n+                scrollType = 1;\n+                item_name = item_name.replaceAll(\"60%\", \"\").trim();\n+                item_name = item_name.replaceAll(\"\\\\(\\\\)\", \"\").trim();\n+            } else if(item_name.contains(\"10%\")) {\n+                scroll = true;\n+                scrollType = 2;\n+                item_name = item_name.replaceAll(\"10%\", \"\").trim();\n+                item_name = item_name.replaceAll(\"\\\\(\\\\)\", \"\").trim();\n+                //f(item_name.contains(\" ()\")) item_name = item_name.substring(0, item_name.lastIndexOf(\" (\"));\n+            } else if(item_name.contains(\"70%\")) {\n+                scroll = true;\n+                scrollType = 4;\n+                item_name = item_name.replaceAll(\"70%\", \"\").trim();\n+                item_name = item_name.replaceAll(\"\\\\(\\\\)\", \"\").trim();\n+            } else if(item_name.contains(\"30%\")) {\n+                scroll = true;\n+                scrollType = 5;\n+                item_name = item_name.replaceAll(\"30%\", \"\").trim();\n+                item_name = item_name.replaceAll(\"\\\\(\\\\)\", \"\").trim();\n+            }\n+                \n+            \n+//            System.out.println(\"Item name: \" + item_name);\n+\n+            //drop entry\n+            ArrayList<Integer> monster_ids = DataTool.monsterIdsFromName(monster_name);\n+            //DataTool.addMonsterIdsFromHardcodedName(monster_ids, monster_name);\n+            \n+            ArrayList<Integer> item_ids = DataTool.itemIdsFromName(item_name);\n+            \n+            if(scroll && item_ids.isEmpty()) {\n+                // Try adding on the % again. Thanks nexon...\n+                if(scrollType == 0) item_name += \" 100%\";\n+                if(scrollType == 1) item_name += \" 60%\";\n+                if(scrollType == 2) item_name += \" 10%\";\n+                if(scrollType == 4) item_name += \" 70%\";\n+                if(scrollType == 5) item_name += \" 30%\";\n+                \n+                item_ids = DataTool.itemIdsFromName(item_name);\n+            }\n+\n+            if (!monster_ids.isEmpty() && !item_ids.isEmpty()) {\n+                int item_id = item_ids.get(0);\n+                if(scroll) {\n+                    item_id += scrollType;\n+                }\n+                int item_id_2 = -1;\n+                for (Integer mob_id : monster_ids) {\n+                    System.out.println(\"Monster ID: \" + mob_id + \", Item ID: \" + item_id);\n+                    drop_entries.add(new DropEntry(item_id, mob_id, VERSION));\n+                    if (gender_equip && item_ids.size() > 1) {\n+                        item_id_2 = item_ids.get(1);\n+                        drop_entries.add(new DropEntry(item_id_2, mob_id, VERSION));\n+\n+                    }\n+                }\n+            } else {\n+                System.out.println(\"Error parsing item \" + item_name + \" dropped by \" + monster_name + \".\");\n+\n+                if (!monster_ids.isEmpty()) {\n+                    if (!problems.containsKey(monster_name)) {\n+                        Errors e = new Errors();\n+                        e.mobName = monster_name;\n+\n+                        problems.put(monster_name, e);\n+                    }\n+\n+                    problems.get(monster_name).wrong.add(item_name);\n+                }\n+                //System.out.println(\"Monster ids size: \" + monster_ids.size() + \", Item IDs size: \" + item_ids.size());\n+            }\n+\n+        }\n+    }\n+\n+    /**\n+     * Returns the string lying between the two specified strings.\n+     *\n+     * @param line The string to parse\n+     * @param start The first string\n+     * @param end The last string\n+     * @return The string between the two specified strings\n+     */\n+    public static String getStringBetween(String line, String start, String end) {\n+        int start_offset = line.indexOf(start) + start.length();\n+        return line.substring(start_offset, line.substring(start_offset).indexOf(end) + start_offset);\n+    }\n+\n+    public static String trimUntil(String line, String until) {\n+        int until_pos = line.indexOf(until);\n+        if (until_pos == -1) {\n+            return null;\n+        } else {\n+            return line.substring(until_pos + until.length());\n+        }\n+    }\n+\n+    public static void dumpErrors() {\n+        String file = \"errors.txt\";\n+        try {\n+            File f = new File(file);\n+            BufferedWriter bw = new BufferedWriter(new FileWriter(f));\n+            PrintWriter pw = new PrintWriter(bw);\n+\n+            for (Errors err : problems.values()) {\n+                pw.write(err.createErrorLog());\n+            }\n+\n+            pw.flush();\n+\n+            pw.close();\n+            bw.close();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public static void dumpQuery() {\n+        String filename = \"drops.sql\";\n+        try {\n+            File output = new File(filename);\n+            BufferedWriter bw = new BufferedWriter(new FileWriter(output));\n+            PrintWriter pw = new PrintWriter(bw);\n+            StringBuilder sb = new StringBuilder();\n+            pw.write(\"TRUNCATE TABLE `drop_data`;\\r\\n\");\n+            pw.write(\"INSERT INTO `drop_data` (`dropperid`, `itemid`, `minimum_quantity`, `maximum_quantity`, `questid`, `chance`) VALUES \");\n+            for (Iterator<DropEntry> i = drop_entries.iterator(); i.hasNext();) {\n+                DropEntry de = i.next();\n+                pw.write(de.getQuerySegment());\n+                if (i.hasNext()) {\n+                    pw.write(\", \\r\\n\");\n+                }\n+            }\n+            pw.write(sb.toString());\n+            pw.close();\n+            bw.close();\n+        } catch (IOException ioe) {\n+            ioe.printStackTrace();\n+            System.out.println(\"Error writing to file: \" + ioe.getLocalizedMessage());\n+        }\n+    }\n+}"}, {"sha": "78fa594622a47f6670119053d77d3ab682d3fed5", "filename": "src/tools/locks/MonitoredLockType.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/tools/locks/MonitoredLockType.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5dc16d0cabe3ccf695be6ed17807258d3a36267c/src/tools/locks/MonitoredLockType.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/locks/MonitoredLockType.java?ref=5dc16d0cabe3ccf695be6ed17807258d3a36267c", "patch": "@@ -45,7 +45,11 @@\n     SERVER_DISEASES,\n     MERCHANT,\n     CHANNEL,\n+    CHANNEL_MOBACTION,\n+    CHANNEL_MOBANIMAT,\n     CHANNEL_MOBSTATUS,\n+    CHANNEL_OVTSTATUS,\n+    CHANNEL_OVERALL,\n     GUILD,\n     PARTY,\n     WORLD_PARTY,\n@@ -63,8 +67,9 @@\n     CASHSHOP,\n     VISITOR_PSHOP,\n     STORAGE,\n-    MOB_EXT,\n     MOB,\n+    MOB_ANI,\n+    MOB_EXT,\n     MOB_STATI,\n     MOBSKILL_FACTORY,\n     PORTAL,"}]}]},
