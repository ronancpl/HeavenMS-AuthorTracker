{"fetchDate": "2019-12-19", "content": [{"sha": "1383efd6c36a63b493645eff1e9c4b00443216f2", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6MTM4M2VmZDZjMzZhNjNiNDkzNjQ1ZWZmMWU5YzRiMDA0NDMyMTZmMg==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-03-13T00:20:40Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-03-13T00:20:40Z"}, "message": "Merge branch 'pr/427'", "tree": {"sha": "6d253b5001c7dcbf4e0c86145c39d3599b105f00", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/6d253b5001c7dcbf4e0c86145c39d3599b105f00"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/1383efd6c36a63b493645eff1e9c4b00443216f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/1383efd6c36a63b493645eff1e9c4b00443216f2", "html_url": "https://github.com/ronancpl/HeavenMS/commit/1383efd6c36a63b493645eff1e9c4b00443216f2", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/1383efd6c36a63b493645eff1e9c4b00443216f2/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9538c415e1c70eee5da68289d82e12e6abd8a856", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/9538c415e1c70eee5da68289d82e12e6abd8a856", "html_url": "https://github.com/ronancpl/HeavenMS/commit/9538c415e1c70eee5da68289d82e12e6abd8a856"}, {"sha": "0a8efa42384c54ca26546c881d10b7fe4b881064", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/0a8efa42384c54ca26546c881d10b7fe4b881064", "html_url": "https://github.com/ronancpl/HeavenMS/commit/0a8efa42384c54ca26546c881d10b7fe4b881064"}], "stats": {"total": 7300, "additions": 4821, "deletions": 2479}, "files": [{"sha": "ca0f753f7e1144c1b52824a6ebab7bd88cc6e998", "filename": "scripts/npc/1012112.js", "status": "modified", "additions": 111, "deletions": 111, "changes": 222, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/1012112.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/1012112.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1012112.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,24 +1,24 @@\n /*\n-\tThis file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n-\t\t       Matthias Butz <matze@odinms.de>\n-\t\t       Jan Christian Meyer <vimes@odinms.de>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n+ This file is part of the OdinMS Maple Story Server\n+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+ Matthias Butz <matze@odinms.de>\n+ Jan Christian Meyer <vimes@odinms.de>\n+ \n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n+ \n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+ \n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n /**\n  * @author BubblesDev\n  * @author Ronan\n@@ -29,104 +29,104 @@ var status = 0;\n var em = null;\n \n function start() {\n-\tstatus = -1;\n-\taction(1, 0, 0);\n+    status = -1;\n+    action(1, 0, 0);\n }\n \n function action(mode, type, selection) {\n-        if (mode == -1) {\n-                cm.dispose();\n-        } else {\n-                if (mode == 0 && status == 0) {\n-                        cm.dispose();\n-                        return;\n-                }\n-                if (mode == 1)\n-                        status++;\n-                else\n-                        status--;\n-                \n-                if(cm.getMapId() == 100000200) {\n-                        if (status == 0) {\n-                                em = cm.getEventManager(\"HenesysPQ\");\n-                                if(em == null) {\n-                                        cm.sendOk(\"The Henesys PQ has encountered an error.\");\n-                                        cm.dispose();\n-                                        return;\n-                                } else if(cm.isUsingOldPqNpcStyle()) {\n-                                        action(1, 0, 0);\n-                                        return;\n-                                }\n+    if (mode == -1) {\n+        cm.dispose();\n+    } else {\n+        if (mode == 0 && status == 0) {\n+            cm.dispose();\n+            return;\n+        }\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n \n-                                cm.sendSimple(\"#e#b<Party Quest: Primrose Hill>\\r\\n#k#n\" + em.getProperty(\"party\") + \"\\r\\n\\r\\nI'm Tory. Inside here is a beautiful hill where the primrose blooms. There's a tiger that lives in the hill, Growlie, and he seems to be looking for something to eat. Would you like to head over to the hill of primrose and join forces with your party members to help Growlie out?#b\\r\\n#L0#I want to participate in the party quest.\\r\\n#L1#I want to find party members.\\r\\n#L2#I would like to hear more details.\\r\\n#L3#I would like to redeem an instance hat.\");\n-                        } else if (status == 1) {\n-                                if (selection == 0) {\n-                                        if (cm.getParty() == null) {\n-                                                cm.sendOk(\"Hi there! I'm Tory. This place is covered with mysterious aura of the full moon, and no one person can enter here by him/herself.\");\n-                                                cm.dispose();\n-                                        } else if(!cm.isLeader()) {\n-                                                cm.sendOk(\"If you'd like to enter here, the leader of your party will have to talk to me. Talk to your party leader about this.\");\n-                                                cm.dispose();\n-                                        } else {\n-                                                var eli = em.getEligibleParty(cm.getParty());\n-                                                if(eli.size() > 0) {\n-                                                        if(!em.startInstance(cm.getParty(), cm.getPlayer().getMap(), 1)) {\n-                                                                cm.sendOk(\"Someone is already attempting the PQ. Please wait for them to finish, or find another channel.\");\n-                                                        }\n-                                                }\n-                                                else {\n-                                                        cm.sendOk(\"You cannot start this party quest yet, because either your party is not in the range size, some of your party members are not eligible to attempt it or they are not in this map. If you're having trouble finding party members, try Party Search.\");\n-                                                }\n+        if (cm.getMapId() == 100000200) {\n+            if (status == 0) {\n+                em = cm.getEventManager(\"HenesysPQ\");\n+                if (em == null) {\n+                    cm.sendOk(\"The Henesys PQ has encountered an error.\");\n+                    cm.dispose();\n+                    return;\n+                } else if (cm.isUsingOldPqNpcStyle()) {\n+                    action(1, 0, 0);\n+                    return;\n+                }\n \n-                                                cm.dispose();\n-                                        }\n-                                } else if (selection == 1) {\n-                                        cm.sendOk(\"Try using a Super Megaphone or asking your buddies or guild to join!\");\n-                                        cm.dispose();\n-                                } else if (selection == 2) {\n-                                        cm.sendOk(\"#e#b<Party Quest: Primrose Hill>#k#n\\r\\nCollect primrose seeds from the flowers at the bottom part of the map and drop them by the platforms above the stage. Primrose seed color must match to grow the seeds, so test until you find the correct combination. When all the seeds have been planted, that is, starting second part of the mission, scout the Moon Bunny while it prepares Rice Cakes for the hungry Growlie. Once Growlie becomes satisfied, your mission is complete.\");\n-                                        cm.dispose();\n-                                } else {\n-                                        cm.sendYesNo(\"So you want to exchange #b20 #b#t4001158##k for the instance-designed hat?\");\n-                                }\n-                        } else {\n-                                if(cm.hasItem(4001158, 20)) {\n-                                        if(cm.canHold(1002798)) {\n-                                                cm.gainItem(4001158, -20);\n-                                                cm.gainItem(1002798, 20);\n-                                                cm.sendNext(\"Here it is. Enjoy!\");\n-                                        }\n-                                } else {\n-                                        cm.sendNext(\"You don't have enough #t4001158# to buy it yet!\");\n-                                }\n-                                \n-                                cm.dispose();\n-                        }\n-                } else if (cm.getMapId() == 910010100) {\n-                        if (status == 0) {\n-                                cm.sendYesNo(\"Thank you for aiding in the effort of feeding the Growlie. As a matter of fact, your team has already been rewarded for reaching this far. With this problem now solved, there is another issue happening right now, if you are interessed check #bTommy#k there for the info. So, are you returning straight to Henesys now?\");\n-                        } else if (status == 1) {\n-                                if(cm.getEventInstance().giveEventReward(cm.getPlayer())) {\n-                                        cm.warp(100000200);\n-                                }\n-                                else {\n-                                        cm.sendOk(\"It seems you are short on space in one of your inventories. Please check that first to get rewarded properly.\");\n-                                }\n-                                cm.dispose();\n+                cm.sendSimple(\"#e#b<Party Quest: Primrose Hill>\\r\\n#k#n\" + em.getProperty(\"party\") + \"\\r\\n\\r\\nI'm Tory. Inside here is a beautiful hill where the primrose blooms. There's a tiger that lives in the hill, Growlie, and he seems to be looking for something to eat. Would you like to head over to the hill of primrose and join forces with your party members to help Growlie out?#b\\r\\n#L0#I want to participate in the party quest.\\r\\n#L1#I want to find party members.\\r\\n#L2#I would like to hear more details.\\r\\n#L3#I would like to redeem an instance hat.\");\n+            } else if (status == 1) {\n+                if (selection == 0) {\n+                    if (cm.getParty() == null) {\n+                        cm.sendOk(\"Hi there! I'm Tory. This place is covered with mysterious aura of the full moon, and no one person can enter here by him/herself.\");\n+                        cm.dispose();\n+                    } else if (!cm.isLeader()) {\n+                        cm.sendOk(\"If you'd like to enter here, the leader of your party will have to talk to me. Talk to your party leader about this.\");\n+                        cm.dispose();\n+                    } else {\n+                        var eli = em.getEligibleParty(cm.getParty());\n+                        if (eli.size() > 0) {\n+                            if (!em.startInstance(cm.getParty(), cm.getPlayer().getMap(), 1)) {\n+                                cm.sendOk(\"Someone is already attempting the PQ. Please wait for them to finish, or find another channel.\");\n+                            }\n                         }\n-                } else if (cm.getMapId() == 910010400) {\n-                        if (status == 0) {\n-                                cm.sendYesNo(\"So, are you returning to Henesys now?\");\n-                        } else if (status == 1) {\n-                                if(cm.getEventInstance() == null) {\n-                                        cm.warp(100000200);\n-                                } else if(cm.getEventInstance().giveEventReward(cm.getPlayer())) {\n-                                        cm.warp(100000200);\n-                                } else {\n-                                        cm.sendOk(\"It seems you are short on space in one of your inventories. Please check that first to get rewarded properly.\");\n-                                }\n-                                cm.dispose();\n+                        else {\n+                            cm.sendOk(\"You cannot start this party quest yet, because either your party is not in the range size, some of your party members are not eligible to attempt it or they are not in this map. If you're having trouble finding party members, try Party Search.\");\n                         }\n+\n+                        cm.dispose();\n+                    }\n+                } else if (selection == 1) {\n+                    cm.sendOk(\"Try using a Super Megaphone or asking your buddies or guild to join!\");\n+                    cm.dispose();\n+                } else if (selection == 2) {\n+                    cm.sendOk(\"#e#b<Party Quest: Primrose Hill>#k#n\\r\\nCollect primrose seeds from the flowers at the bottom part of the map and drop them by the platforms above the stage. Primrose seed color must match to grow the seeds, so test until you find the correct combination. When all the seeds have been planted, that is, starting second part of the mission, scout the Moon Bunny while it prepares Rice Cakes for the hungry Growlie. Once Growlie becomes satisfied, your mission is complete.\");\n+                    cm.dispose();\n+                } else {\n+                    cm.sendYesNo(\"So you want to exchange #b20 #b#t4001158##k for the instance-designed hat?\");\n                 }\n+            } else {\n+                if (cm.hasItem(4001158, 20)) {\n+                    if (cm.canHold(1002798)) {\n+                        cm.gainItem(4001158, -20);\n+                        cm.gainItem(1002798, 20);\n+                        cm.sendNext(\"Here it is. Enjoy!\");\n+                    }\n+                } else {\n+                    cm.sendNext(\"You don't have enough #t4001158# to buy it yet!\");\n+                }\n+\n+                cm.dispose();\n+            }\n+        } else if (cm.getMapId() == 910010100) {\n+            if (status == 0) {\n+                cm.sendYesNo(\"Thank you for aiding in the effort of feeding the Growlie. As a matter of fact, your team has already been rewarded for reaching this far. With this problem now solved, there is another issue happening right now, if you are interessed check #bTommy#k there for the info. So, are you returning straight to Henesys now?\");\n+            } else if (status == 1) {\n+                if (cm.getEventInstance().giveEventReward(cm.getPlayer())) {\n+                    cm.warp(100000200);\n+                }\n+                else {\n+                    cm.sendOk(\"It seems you are short on space in one of your inventories. Please check that first to get rewarded properly.\");\n+                }\n+                cm.dispose();\n+            }\n+        } else if (cm.getMapId() == 910010400) {\n+            if (status == 0) {\n+                cm.sendYesNo(\"So, are you returning to Henesys now?\");\n+            } else if (status == 1) {\n+                if (cm.getEventInstance() == null) {\n+                    cm.warp(100000200);\n+                } else if (cm.getEventInstance().giveEventReward(cm.getPlayer())) {\n+                    cm.warp(100000200);\n+                } else {\n+                    cm.sendOk(\"It seems you are short on space in one of your inventories. Please check that first to get rewarded properly.\");\n+                }\n+                cm.dispose();\n+            }\n         }\n+    }\n }\n\\ No newline at end of file"}, {"sha": "d07fdd6504d8d17315782d10880b115eb2b7bd15", "filename": "scripts/npc/1012113.js", "status": "modified", "additions": 59, "deletions": 59, "changes": 118, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/1012113.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/1012113.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1012113.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,24 +1,24 @@\n /*\n-\tThis file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n-\t\t       Matthias Butz <matze@odinms.de>\n-\t\t       Jan Christian Meyer <vimes@odinms.de>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n+ This file is part of the OdinMS Maple Story Server\n+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+ Matthias Butz <matze@odinms.de>\n+ Jan Christian Meyer <vimes@odinms.de>\n+ \n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n+ \n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+ \n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n /**\n  * @author BubblesDev\n  * @author Ronan\n@@ -31,45 +31,45 @@ function start() {\n }\n \n function action(mode, type, selection) {\n-        if (mode < 1) {\n-                cm.dispose();\n-        } else {\n-                status++;\n-                if (cm.getPlayer().getMap().getId() == 910010100) { //Clear map\n-                        if (status == 0) {\n-                                cm.sendNext(\"Hello, there! I'm Tommy. There's a Pig Town nearby where we're standing. The pigs there are rowdy and uncontrollable to the point where they have stolen numerous weapons from travelers. They were kicked out from their towns, and are currently hiding out at the Pig Town.\");\n-                        } else if (status == 1) {\n-                                if(cm.isEventLeader()) {\n-                                        cm.sendYesNo(\"What do you think about making your way there with your party members and teach those rowdy pigs a lesson?\");\n-                                }\n-                                else {\n-                                        cm.sendOk(\"Interessed? Tell your party leader to talk to me to head there!\");\n-                                        cm.dispose();\n-                                        return;\n-                                }\n-                        } else if (status == 2) {\n-                                cm.getEventInstance().startEventTimer(5 * 60000);                \n-                                cm.getEventInstance().warpEventTeam(910010200);\n-                                \n-                                cm.dispose();\n-                                return;\n-                        }\n-                } else if (cm.getPlayer().getMap().getId() == 910010200) { //Bonus map\n-                        if (status == 0) {\n-                                cm.sendYesNo(\"Would you like to exit the bonus now?\");\n-                        } else {\n-                                cm.warp(910010400);\n-                                cm.dispose();\n-                                return;\n-                        }\n-                } else if (cm.getPlayer().getMap().getId() == 910010300) { //Exit map\n-                        if (status == 0) {\n-                                cm.sendOk(\"You will now be warped out, thank you for helping us!\");\n-                        } else {\n-                                cm.warp(100000200);\n-                                cm.dispose();\n-                                return;\n-                        }\n+    if (mode < 1) {\n+        cm.dispose();\n+    } else {\n+        status++;\n+        if (cm.getPlayer().getMap().getId() == 910010100) { //Clear map\n+            if (status == 0) {\n+                cm.sendNext(\"Hello, there! I'm Tommy. There's a Pig Town nearby where we're standing. The pigs there are rowdy and uncontrollable to the point where they have stolen numerous weapons from travelers. They were kicked out from their towns, and are currently hiding out at the Pig Town.\");\n+            } else if (status == 1) {\n+                if (cm.isEventLeader()) {\n+                    cm.sendYesNo(\"What do you think about making your way there with your party members and teach those rowdy pigs a lesson?\");\n                 }\n+                else {\n+                    cm.sendOk(\"Interessed? Tell your party leader to talk to me to head there!\");\n+                    cm.dispose();\n+                    return;\n+                }\n+            } else if (status == 2) {\n+                cm.getEventInstance().startEventTimer(5 * 60000);\n+                cm.getEventInstance().warpEventTeam(910010200);\n+\n+                cm.dispose();\n+                return;\n+            }\n+        } else if (cm.getPlayer().getMap().getId() == 910010200) { //Bonus map\n+            if (status == 0) {\n+                cm.sendYesNo(\"Would you like to exit the bonus now?\");\n+            } else {\n+                cm.warp(910010400);\n+                cm.dispose();\n+                return;\n+            }\n+        } else if (cm.getPlayer().getMap().getId() == 910010300) { //Exit map\n+            if (status == 0) {\n+                cm.sendOk(\"You will now be warped out, thank you for helping us!\");\n+            } else {\n+                cm.warp(100000200);\n+                cm.dispose();\n+                return;\n+            }\n         }\n+    }\n }"}, {"sha": "726519e0b7bfc35d063151976cf369b181808a7c", "filename": "scripts/npc/2042000.js", "status": "modified", "additions": 69, "deletions": 217, "changes": 286, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042000.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042000.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2042000.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,232 +1,84 @@\n-/*\n-    This file is part of the HeavenMS MapleStory Server\n-    Copyleft (L) 2016 - 2018 RonanLana\n+var map = 980000000;\n+var minLvl = 0;\n+var maxLvl = 255;\n+var minAmt = 0;\n+var maxAmt = 6;\n \n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n-/* Spiegelmann\n-        Refining NPC: \n-\t* Auto ore refiner\n-        * \n-        * @author RonanLana\n-*/\n-\n-var status;\n-var refineRocks = true;     // enables moon rock, star rock\n-var refineCrystals = true;  // enables common crystals\n-var refineSpecials = true;  // enables lithium, special crystals\n-var feeMultiplier = 7.0;\n- \n function start() {\n-        status = -1;\n-        action(1, 0, 0);\n+    status = -1;\n+    action(1, 0, 0);\n }\n \n function action(mode, type, selection) {\n-        if (mode == -1) {\n-                cm.dispose();\n-        } else {\n-                if (mode == 0 && type > 0) {\n-                        cm.dispose();\n-                        return;\n-                }\n-                if (mode == 1)\n-                        status++;\n-                else\n-                        status--;\n-    \n-                if(status == 0) {\n-                        if (!Packages.constants.ServerConstants.USE_ENABLE_CUSTOM_NPC_SCRIPT) {\n-                                cm.sendOk(\"The Monster Carnival is currently unavailable.\");\n-                                cm.dispose();\n-                                return;\n-                        }\n-                    \n-                        var selStr = \"The Monster Carnival is currently unavailable, but instead I offer a steadfast #bore refining#k service for you, taxing #r\" + ((feeMultiplier * 100) | 0) + \"%#k over the usual fee to synthetize them. What will you do?#b\";\n-                        \n-                        var options = new Array(\"Refine mineral ores\",\"Refine jewel ores\");\n-                        if(refineCrystals) {\n-                                options.push(\"Refine crystal ores\");\n-                        }\n-                        if(refineRocks) {\n-                                options.push(\"Refine plates/jewels\");\n-                        }\n-                        \n-                        for (var i = 0; i < options.length; i++){\n-                                selStr += \"\\r\\n#L\" + i + \"# \" + options[i] + \"#l\";\n-                        }\n-                        \n-                        cm.sendSimple(selStr);\n-                } else if(status == 1) {\n-                        var allDone;\n-                        \n-                        if (selection == 0) {\n-                                allDone = refineItems(0); // minerals\n-                        } else if (selection == 1) {\n-                                allDone = refineItems(1); // jewels\n-                        } else if (selection == 2 && refineCrystals) {\n-                                allDone = refineItems(2); // crystals\n-                        } else if (selection == 2 && !refineCrystals || selection == 3) {\n-                                allDone = refineRockItems(); // moon/star rock\n-                        }\n-                        \n-                        if(allDone) {\n-                            cm.sendOk(\"Done. Thanks for showing up~.\");\n-                        } else {\n-                            cm.sendOk(\"Done. Be aware some of the items #rcould not be synthetized#k because either you have a lack of space on your ETC inventory or there's not enough mesos to cover the fee.\");\n-                        }\n-                        cm.dispose();\n-                }\n-        }\n-}\n-\n-function getRefineFee(fee) {\n-    return ((feeMultiplier * fee) | 0);\n-}\n-\n-function isRefineTarget(refineType, refineItemid) {\n-    if(refineType == 0) { //mineral refine\n-        return refineItemid >= 4010000 && refineItemid <= 4010007 && !(refineItemid == 4010007 && !refineSpecials);\n-    } else if(refineType == 1) { //jewel refine\n-        return refineItemid >= 4020000 && refineItemid <= 4020008 && !(refineItemid == 4020008 && !refineSpecials);\n-    } else if(refineType == 2) { //crystal refine\n-        return refineItemid >= 4004000 && refineItemid <= 4004004 && !(refineItemid == 4004004 && !refineSpecials);\n-    }\n-    \n-    return false;\n-}\n-\n-function getRockRefineTarget(refineItemid) {\n-    if(refineItemid >= 4011000 && refineItemid <= 4011006) {\n-        return 0;\n-    } else if(refineItemid >= 4021000 && refineItemid <= 4021008) {\n-        return 1;\n-    }\n-    \n-    return -1;\n-}\n-\n-function refineItems(refineType) {\n-    var allDone = true;\n-    \n-    var refineFees = [[300,300,300,500,500,500,800,270],[500,500,500,500,500,500,500,1000,3000],[5000,5000,5000,5000,1000000]];\n-    var itemCount = {};\n-    \n-    var iter = cm.getPlayer().getInventory(Packages.client.inventory.MapleInventoryType.ETC).iterator();\n-    while (iter.hasNext()) {\n-        var it = iter.next();\n-        var itemid = it.getItemId();\n-\n-        if(isRefineTarget(refineType, itemid)) {\n-            var ic = itemCount[itemid];\n-            \n-            if(ic != undefined) {\n-                itemCount[itemid] += it.getQuantity();\n-            } else {\n-                itemCount[itemid] = it.getQuantity();\n-            }\n+    if (mode == -1) {\n+        cm.dispose();\n+    } else {\n+        if (mode == 0 && status == 0) {\n+            cm.dispose();\n+            return;\n         }\n-    }\n-    \n-    for(var key in itemCount) {\n-        var itemqty = itemCount[key];\n-        var itemid = parseInt(key);\n-        \n-        var refineQty = ((itemqty / 10) | 0);\n-        if(refineQty <= 0) continue;\n-        \n-        while(true) {\n-            itemqty = refineQty * 10;\n-        \n-            var fee = getRefineFee(refineFees[refineType][(itemid % 100) | 0] * refineQty);\n-            if(cm.canHold(itemid + 1000, refineQty, itemid, itemqty) && cm.getMeso() >= fee) {\n-                cm.gainMeso(-fee);\n-                cm.gainItem(itemid, -itemqty);\n-                cm.gainItem(itemid + (itemid != 4010007 ? 1000 : 1001), refineQty);\n-                \n-                break;\n-            } else if(refineQty <= 1) {\n-                allDone = false;\n-                break;\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        if (status == 0) {\n+            if (cm.getParty() == null) {\n+                status = 10;\n+                cm.sendOk(\"#e\ufffd necess\ufffdrio criar um grupo antes de come\ufffdar o Festival de Monstros!#k\");\n+            } else if (!cm.isLeader()) {\n+                status = 10;\n+                cm.sendOk(\"Se voc\ufffd quer come\ufffdar o Festival, avise o #bl\ufffdder do grupo#k para falar comigo.\");\n             } else {\n-                refineQty--;\n-            }\n-        }\n-    }\n-    \n-    return allDone;\n-}\n-\n-function refineRockItems() {\n-    var allDone = true;\n-    var minItems = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n-    var minRocks = [2147483647, 2147483647];\n-    \n-    var rockItems = [4011007, 4021009];\n-    var rockFees = [10000, 15000];\n+                var party = cm.getParty().getMembers();\n+                var inMap = cm.partyMembersInMap();\n+                var lvlOk = 0;\n+                var isInMap = 0;\n+                for (var i = 0; i < party.size(); i++) {\n+                    if (party.get(i).getLevel() >= minLvl && party.get(i).getLevel() <= maxLvl) {\n+                        lvlOk++;\n+                    }\n+                    if (party.get(i).getPlayer().getMapId() != 980000000) {\n+                        //isInMap = false;\n+                        isInMap++\n+                    }\n+                }\n \n-    var iter = cm.getPlayer().getInventory(Packages.client.inventory.MapleInventoryType.ETC).iterator();\n-    while (iter.hasNext()) {\n-        var it = iter.next();\n-        var itemid = it.getItemId();\n-        var rockRefine = getRockRefineTarget(itemid);\n-        if(rockRefine >= 0) {\n-            var rockItem = ((itemid % 100) | 0);\n-            var itemqty = it.getQuantity();\n-            \n-            minItems[rockRefine][rockItem] += itemqty;\n-        }\n-    }\n-    \n-    for(var i = 0; i < minRocks.length; i++) {\n-        for(var j = 0; j < minItems[i].length; j++) {\n-            if(minRocks[i] > minItems[i][j]) {\n-                minRocks[i] = minItems[i][j];\n+                if (party >= 1) {\n+                    status = 10;\n+                    cm.sendOk(\"Voc\ufffd n\ufffdo tem n\ufffdmero suficiente de pessoas em seu grupo. Voc\ufffd precisa de um grupo com #b\" + minAmt + \"#k - #r\" + maxAmt + \"#k membros e eles devem estar no mapa com voc\ufffd.\");\n+                } else if (lvlOk != inMap) {\n+                    status = 10;\n+                    cm.sendOk(\"Certifique se todos em seu grupo est\ufffdo dentre os n\ufffdveis corretos (\" + minLvl + \"~\" + maxLvl + \")!\");\n+                } else if (isInMap > 0) {\n+                    status = 10;\n+                    cm.sendOk(\"Existe algu\ufffdm do grupo que n\ufffdo esta no mapa!\");\n+                } else {\n+                    cm.sendCPQMapLists();\n+                }\n             }\n-        }\n-        if(minRocks[i] <= 0 || minRocks[i] == 2147483647) continue;\n-        \n-        var refineQty = minRocks[i];\n-        while(true) {\n-            var fee = getRefineFee(rockFees[i] * refineQty);\n-            if(cm.canHold(rockItems[i], refineQty) && cm.getMeso() >= fee) {\n-                cm.gainMeso(-fee);\n-\n-                var j;\n-                if(i == 0) {\n-                    for(j = 4011000; j < 4011007; j++) {\n-                        cm.gainItem(j, -refineQty);\n-                    }\n-                    cm.gainItem(j, refineQty);\n+        } else if (status == 1) {\n+            \n+            if (cm.fieldTaken(selection)) {\n+                if (cm.fieldLobbied(selection)) {\n+                    cm.challengeParty(selection);\n+                    cm.dispose();\n                 } else {\n-                    for(j = 4021000; j < 4021009; j++) {\n-                        cm.gainItem(j, -refineQty);\n-                    }\n-                    cm.gainItem(j, refineQty);\n+                    cm.sendOk(\"A sala esta cheia.\");\n+                    cm.dispose();\n                 }\n-                \n-                break;\n-            } else if(refineQty <= 1) {\n-                allDone = false;\n-                break;\n             } else {\n-                refineQty--;\n+                var party = cm.getParty().getMembers();\n+                if ((selection === 0 || selection === 1 || selection === 2 || selection === 3) && party.size() < 2) {\n+                    cm.sendOk(\"Voc\ufffd precisa de no m\ufffdnimo 2 player para entrar na competi\ufffd\ufffdo.\");\n+                } else if ((selection === 4 || selection === 5) && party.size() < 3) {\n+                    cm.sendOk(\"Voc\ufffd precisa de no m\ufffdnimo 3 player para entrar na competi\ufffd\ufffdo.\");\n+                } else {\n+                    cm.cpqLobby(selection);\n+                }\n+                cm.dispose();\n             }\n+        } else if (status == 11) {\n+            cm.dispose();\n         }\n     }\n-    \n-    return allDone;\n-}\n+}\n\\ No newline at end of file"}, {"sha": "4f7ae7d9c39f8ff5168990326a3773e9329ff99d", "filename": "scripts/npc/2042002.js", "status": "modified", "additions": 300, "deletions": 206, "changes": 506, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042002.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042002.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2042002.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,226 +1,320 @@\n-/*\n-    This file is part of the HeavenMS MapleStory Server\n-    Copyleft (L) 2016 - 2018 RonanLana\n+importPackage(Packages.server.maps);\n \n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n+var status = 0;\n+var rnk = -1;\n+var n1 = 50; //???\n+var n2 = 40; //??? ???\n+var n3 = 7; //35\n+var n4 = 10; //40\n+var n5 = 20; //50\n \n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n-/* Spiegelmann\n-        Refining NPC: \n-\t* Auto ore refiner\n-        * \n-        * @author RonanLana\n-*/\n-\n-var status;\n-var refineRocks = true;     // enables moon rock, star rock\n-var refineCrystals = true;  // enables common crystals\n-var refineSpecials = true;  // enables lithium, special crystals\n-var feeMultiplier = 7.0;\n- \n function start() {\n-        status = -1;\n-        action(1, 0, 0);\n+    status = -1;\n+    action(1, 0, 0);\n }\n \n function action(mode, type, selection) {\n-        if (mode == -1) {\n+    if (mode == -1) {\n+        cm.dispose();\n+    } else {\n+        if (status >= 0 && mode == 0) {\n+            cm.dispose();\n+            return;\n+        }\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        if (cm.getPlayer().getMapId() == 980000010) {\n+            if (status == 0) {\n+                cm.sendNext(\"Eu espero que voc\ufffd tinha divertido na Folia dos Monstros!\");\n+            } else if (status > 0) {\n+                cm.warp(980000000, 0);\n                 cm.dispose();\n-        } else {\n-                if (mode == 0 && type > 0) {\n-                        cm.dispose();\n-                        return;\n+            }\n+        } else if (cm.getChar().getMap().isCPQLoserMap()) {\n+            if (status == 0) {\n+                if (cm.getChar().getParty() != null) {\n+                    var shiu = \"\";\n+                    if (cm.getPlayer().getFestivalPoints() >= 100) {\n+                        shiu += \"#rA#k\";\n+                        cm.sendOk(\"Infelizmente, voc\ufffd ou empatou ou perdeu a batalha, apesar da sua excelente performance. A vit\ufffdria pode ser sua da pr\ufffdxima vez.\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shiu);\n+                        rnk = 10;\n+                    } else if (cm.getPlayer().getFestivalPoints() >= 50 && cm.getPlayer().getFestivalPoints() < 100) {\n+                        shiu += \"#rB#k\";\n+                        rnk = 20;\n+                        cm.sendOk(\"Infelizmente, voc\ufffd ou empatou ou perdeu a batalha, mesmo com sua \ufffdtima performance. S\ufffd mais um pouquinho, e a vit\ufffdria poderia ter sido sua.\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shiu);\n+                    } else if (cm.getPlayer().getFestivalPoints() >= 30 && cm.getPlayer().getFestivalPoints() < 50) {\n+                        shiu += \"#rC#k\";\n+                        rnk = 30;\n+                        cm.sendOk(\"Infelizmente, voc\ufffd ou empatou ou perdeu a batalha. A vit\ufffdria est\ufffd para aqueles que se esfor\ufffdam. Vejo seus esfor\ufffdos, ent\ufffdo a vit\ufffdria n\ufffdo est\ufffd t\ufffdo longe do seu alcance. Continue assim!\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shiu);\n+                    } else {\n+                        shiu += \"#rD#k\";\n+                        rnk = 40;\n+                        cm.sendOk(\"Infelizmente, voc\ufffd ou empatou ou perdeu a batalha, e sua performance claramente reflete nisso. Espero mais de voc\ufffd da pr\ufffdxima vez.\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shiu);\n+                    }\n+                } else {\n+                    cm.warp(980000000, 0);\n+                    cm.dispose();\n                 }\n-                if (mode == 1)\n-                        status++;\n-                else\n-                        status--;\n-    \n-                if(status == 0) {\n-                        var selStr = \"The Monster Carnival is currently unavailable, but instead I offer a steadfast #bore refining#k service for you, taxing #r\" + ((feeMultiplier * 100) | 0) + \"%#k over the usual fee to synthetize them. What will you do?#b\";\n-                        \n-                        var options = new Array(\"Refine mineral ores\",\"Refine jewel ores\");\n-                        if(refineCrystals) {\n-                            options.push(\"Refine crystal ores\");\n-                        }\n-                        if(refineRocks) {\n-                            options.push(\"Refine plates/jewels\");\n-                        }\n-                        \n-                        for (var i = 0; i < options.length; i++){\n-                            selStr += \"\\r\\n#L\" + i + \"# \" + options[i] + \"#l\";\n-                        }\n-                        \n-                        cm.sendSimple(selStr);\n-                } else if(status == 1) {\n-                        var allDone;\n-                        \n-                        if (selection == 0) {\n-                                allDone = refineItems(0); // minerals\n-                        } else if (selection == 1) {\n-                                allDone = refineItems(1); // jewels\n-                        } else if (selection == 2 && refineCrystals) {\n-                                allDone = refineItems(2); // crystals\n-                        } else if (selection == 2 && !refineCrystals || selection == 3) {\n-                                allDone = refineRockItems(); // moon/star rock\n-                        }\n-                        \n-                        if(allDone) {\n-                            cm.sendOk(\"Done. Thanks for showing up~.\");\n-                        } else {\n-                            cm.sendOk(\"Done. Be aware some of the items could not be synthetized because either you have a lack of space on your ETC inventory or there's not enough mesos to cover the fee.\");\n-                        }\n+            } else if (status == 1) {\n+                switch (rnk) {\n+                    case 10:\n+                        cm.warp(980000000, 0);\n+                        cm.gainExp(17500);\n+                        cm.dispose();\n+                        break;\n+                    case 20:\n+                        cm.warp(980000000, 0);\n+                        cm.gainExp(1200);\n+                        cm.dispose();\n+                        break;\n+                    case 30:\n+                        cm.warp(980000000, 0);\n+                        cm.gainExp(5000);\n                         cm.dispose();\n+                        break;\n+                    case 40:\n+                        cm.warp(980000000, 0);\n+                        cm.gainExp(2500);\n+                        cm.dispose();\n+                        break;\n+                    default:\n+                        cm.warp(980000000, 0);\n+                        cm.dispose();\n+                        break;\n                 }\n-        }\n-}\n-\n-function getRefineFee(fee) {\n-    return ((feeMultiplier * fee) | 0);\n-}\n-\n-function isRefineTarget(refineType, refineItemid) {\n-    if(refineType == 0) { //mineral refine\n-        return refineItemid >= 4010000 && refineItemid <= 4010007 && !(refineItemid == 4010007 && !refineSpecials);\n-    } else if(refineType == 1) { //jewel refine\n-        return refineItemid >= 4020000 && refineItemid <= 4020008 && !(refineItemid == 4020008 && !refineSpecials);\n-    } else if(refineType == 2) { //crystal refine\n-        return refineItemid >= 4004000 && refineItemid <= 4004004 && !(refineItemid == 4004004 && !refineSpecials);\n-    }\n-    \n-    return false;\n-}\n-\n-function getRockRefineTarget(refineItemid) {\n-    if(refineItemid >= 4011000 && refineItemid <= 4011006) {\n-        return 0;\n-    } else if(refineItemid >= 4021000 && refineItemid <= 4021008) {\n-        return 1;\n-    }\n-    \n-    return -1;\n-}\n-\n-function refineItems(refineType) {\n-    var allDone = true;\n-    \n-    var refineFees = [[300,300,300,500,500,500,800,270],[500,500,500,500,500,500,500,1000,3000],[5000,5000,5000,5000,1000000]];\n-    var itemCount = {};\n-    \n-    var iter = cm.getPlayer().getInventory(Packages.client.inventory.MapleInventoryType.ETC).iterator();\n-    while (iter.hasNext()) {\n-        var it = iter.next();\n-        var itemid = it.getItemId();\n-\n-        if(isRefineTarget(refineType, itemid)) {\n-            var ic = itemCount[itemid];\n-            \n-            if(ic != undefined) {\n-                itemCount[itemid] += it.getQuantity();\n-            } else {\n-                itemCount[itemid] = it.getQuantity();\n-            }\n-        }\n-    }\n-    \n-    for(var key in itemCount) {\n-        var itemqty = itemCount[key];\n-        var itemid = parseInt(key);\n-        \n-        var refineQty = ((itemqty / 10) | 0);\n-        if(refineQty <= 0) continue;\n-        \n-        while(true) {\n-            itemqty = refineQty * 10;\n-        \n-            var fee = getRefineFee(refineFees[refineType][(itemid % 100) | 0] * refineQty);\n-            if(cm.canHold(itemid + 1000, refineQty, itemid, itemqty) && cm.getMeso() >= fee) {\n-                cm.gainMeso(-fee);\n-                cm.gainItem(itemid, -itemqty);\n-                cm.gainItem(itemid + (itemid != 4010007 ? 1000 : 1001), refineQty);\n-                \n-                break;\n-            } else if(refineQty <= 1) {\n-                allDone = false;\n-                break;\n-            } else {\n-                refineQty--;\n             }\n-        }\n-    }\n-    \n-    return allDone;\n-}\n-\n-function refineRockItems() {\n-    var allDone = true;\n-    var minItems = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n-    var minRocks = [2147483647, 2147483647];\n-    \n-    var rockItems = [4011007, 4021009];\n-    var rockFees = [10000, 15000];\n-\n-    var iter = cm.getPlayer().getInventory(Packages.client.inventory.MapleInventoryType.ETC).iterator();\n-    while (iter.hasNext()) {\n-        var it = iter.next();\n-        var itemid = it.getItemId();\n-        var rockRefine = getRockRefineTarget(itemid);\n-        if(rockRefine >= 0) {\n-            var rockItem = ((itemid % 100) | 0);\n-            var itemqty = it.getQuantity();\n-            \n-            minItems[rockRefine][rockItem] += itemqty;\n-        }\n-    }\n-    \n-    for(var i = 0; i < minRocks.length; i++) {\n-        for(var j = 0; j < minItems[i].length; j++) {\n-            if(minRocks[i] > minItems[i][j]) {\n-                minRocks[i] = minItems[i][j];\n+        } else if (cm.getChar().getMap().isCPQWinnerMap()) {\n+            if (status == 0) {\n+                if (cm.getChar().getParty() != null) {\n+                    var shi = \"\";\n+                    if (cm.getPlayer().getFestivalPoints() >= 300) {\n+                        shi += \"#rA#k\";\n+                        rnk = 1;\n+                        cm.sendOk(\"Parab\ufffdns pela sua vit\ufffdria!!! Que \ufffdtima performance! O grupo advers\ufffdrio n\ufffdo p\ufffdde fazer nada! Espero o mesmo bom trabalho da pr\ufffdxima vez!\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shi);\n+                    } else if (cm.getPlayer().getFestivalPoints() >= 100 && cm.getPlayer().getFestivalPoints() < 300) {\n+                        shi += \"#rB#k\";\n+                        rnk = 2;\n+                        cm.sendOk(\"Parab\ufffdns pela sua vit\ufffdria! Isso foi impressionante! Voc\ufffd fez um bom trabalho contra o grupo advers\ufffdrio! S\ufffd mais um pouco, e voc\ufffd definitivamente vai conseguir um A na pr\ufffdxima vez. \\r\\n\\r\\n#bNota da Folia de Monstros : \" + shi);\n+                    } else if (cm.getPlayer().getFestivalPoints() >= 50 && cm.getPlayer().getFestivalPoints() < 100) {\n+                        shi += \"#rC#k\";\n+                        rnk = 3;\n+                        cm.sendOk(\"Parab\ufffdns pela sua vit\ufffdria. Voc\ufffd fez algumas coisas c\ufffd e l\ufffd, mas essa n\ufffdo pode ser considerada uma boa vit\ufffdria. Espero mais de ti da pr\ufffdxima vez.\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shi);\n+                    } else {\n+                        shi += \"#rD#k\";\n+                        rnk = 4;\n+                        cm.sendOk(\"Parab\ufffdns pela sua vit\ufffdria, entretanto sua performance n\ufffdo refletiu muito bem isso. Seja mais ativo na sua pr\ufffdxima participa\ufffd\ufffdo da Folia de Monstros!\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shi);\n+                    }\n+                } else {\n+                    cm.warp(980000000, 0);\n+                    cm.dispose();\n+                }\n+            } else if (status == 1) {\n+                switch (rnk) {\n+                    case 1:\n+                        cm.warp(980000000, 0);\n+                        cm.gainExp(50000);\n+                        cm.dispose();\n+                        break;\n+                    case 2:\n+                        cm.warp(980000000, 0);\n+                        cm.gainExp(25500);\n+                        cm.dispose();\n+                        break;\n+                    case 3:\n+                        cm.warp(980000000, 0);\n+                        cm.gainExp(21000);\n+                        cm.dispose();\n+                        break;\n+                    case 4:\n+                        cm.warp(980000000, 0);\n+                        cm.gainExp(19505);\n+                        cm.dispose();\n+                        break;\n+                    default:\n+                        cm.warp(980000000, 0);\n+                        cm.dispose();\n+                        break;\n+                }\n             }\n-        }\n-        if(minRocks[i] <= 0 || minRocks[i] == 2147483647) continue;\n-        \n-        var refineQty = minRocks[i];\n-        while(true) {\n-            var fee = getRefineFee(rockFees[i] * refineQty);\n-            if(cm.canHold(rockItems[i], refineQty) && cm.getMeso() >= fee) {\n-                cm.gainMeso(-fee);\n+        } else {\n+            if (status == 0) {\n+               // cm.sendSimple(\"O que gostaria de fazer? Se voc\ufffd nunca participou da Folia de Monstros, voc\ufffd precisar\ufffd saber de algumas coisas antes de participar.\\r\\n#b#L0# Ir para o campo da Folia de Monstros 1.#l\\r\\n#L1# Aprender sobre a Folia de Monstros.#l\\r\\n#L2# Trocar #t4001129#.#l\");\n+                cm.sendSimple(\"O que gostaria de fazer? Se voc\ufffd nunca participou da Folia de Monstros, voc\ufffd precisar\ufffd saber de algumas coisas antes de participar.\\r\\n#b#L0# Ir para o campo da Folia de Monstros 1.#l\\r\\n#L3# Ir para o campo da Folia de Monstros 2.#l\\r\\n#L1# Aprender sobre a Folia de Monstros.#l\\r\\n#L2# Trocar #t4001129#.#l\");\n+            } else if (status == 1) {\n+                if (selection == 0) {\n+                    if ((cm.getLevel() > 29 && cm.getLevel() < 51) || cm.getPlayer().isGM()) {\n+                        cm.getChar().saveLocation(\"MONSTER_CARNIVAL\");\n+                        cm.warp(980000000, 0);\n+                        cm.dispose();\n+                        return;\n+                    } else if (cm.getLevel() < 30) {\n+                        cm.sendOk(\"Voc\ufffd precisa ser no m\ufffdnimo n\ufffdvel 30 para participar da Folia de Monstros. Fale comigo quando for forte o bastante.\");\n+                        cm.dispose();\n+                        return;\n+                    } else {\n+                        cm.sendOk(\"Sinto muito, mas apenas os jogadores de n\ufffdvel 30~50 podem participar da Folia de Monstros.\");\n+                        cm.dispose();\n+                        return;\n+                    }\n+                } else if (selection == 1) {\n+                    status = 60;\n+                    cm.sendSimple(\"O que gostaria de fazer?\\r\\n#b#L0# O que \ufffd a Folia de Monstros?#l\\r\\n#L1# Vis\ufffdo geral sobre a Folia de Monstros#l\\r\\n#L2# Informa\ufffd\ufffdes detalhadas sobre a Folia de Monstros#l\\r\\n#L3# Nada, de verdade. Mudei de ideia.#l\");\n+                } else if (selection == 2) {\n+                    cm.sendSimple(\"Lembre-se se voc\ufffd possui #t4001129#, voc\ufffd pode troc\ufffd-las por itens. Tenha certeza que voc\ufffd possui #t4001129# suficientes para o item que voc\ufffd deseja. Selecione o item que voc\ufffd gostaria de troc\ufffd-las! \\r\\n#b#L0# #t1122007#(\" + n1 + \" moedas)#l\\r\\n#L1# #t2041211#(\" + n2 + \" moedas)#l\\r\\n#L2# Armas para Guerreiros#l\\r\\n#L3# Armas para Bruxos#l\\r\\n#L4# Armas para Arqueiros#l\\r\\n#L5# Armas para Gatunos#l\");\n+                } else if (selection == 3) {\n+                    cm.getChar().saveLocation(\"MONSTER_CARNIVAL\");\n+                    cm.warp(980030000, 0);\n+                    cm.dispose();\n+                    return;\n+                }\n \n-                var j;\n-                if(i == 0) {\n-                    for(j = 4011000; j < 4011007; j++) {\n-                        cm.gainItem(j, -refineQty);\n+            } else if (status == 2) {\n+                select = selection;\n+                if (select == 0) {\n+                    if (cm.haveItem(4001129, n1) && cm.canHold(4001129)) {\n+                        cm.gainItem(1122007, 1);\n+                        cm.gainItem(4001129, -n1);\n+                        cm.dispose();\n+                    } else {\n+                        cm.sendOk(\"Verifique e veja se est\ufffdo faltando #b#t4001129##k ou se seu invent\ufffdrio de Equipamentos est\ufffd cheio.\");\n+                        cm.dispose();\n+                    }\n+                } else if (select == 1) {\n+                    if (cm.haveItem(4001129, n2) && cm.canHold(2041211)) {\n+                        cm.gainItem(2041211, 1);\n+                        cm.gainItem(4001129, -n2);\n+                        cm.dispose();\n+                    } else {\n+                        cm.sendOk(\"Verifique e veja se est\ufffdo faltando #b#t4001129##k ou se seu invent\ufffdrio de Uso est\ufffd cheio.\");\n+                        cm.dispose();\n                     }\n-                    cm.gainItem(j, refineQty);\n+                } else if (select == 2) {//S2 Warrior 26 S3 Magician 6 S4 Bowman 6 S5 Thief 8\n+                    status = 10;\n+                    cm.sendSimple(\"Por favor tenha certeza que voc\ufffd possui #t4001129# para a arma que voc\ufffd deseja. Selecione a arma que voc\ufffd gostaria de trocar #t4001129# por. As op\ufffd\ufffdes que tenho s\ufffdo realmente boas, e eu n\ufffdo sou eu que falo \ufffd o povo que diz! \\r\\n#b#L0# #z1302004#(\" + n3 + \" moedas)#l\\r\\n#L1# #z1402006#(\" + n3 + \" moedas)#l\\r\\n#L2# #z1302009#(\" + n4 + \" moedas)#l\\r\\n#L3# #z1402007#(\" + n4 + \" moedas)#l\\r\\n#L4# #z1302010#(\" + n5 + \" moedas)#l\\r\\n#L5# #z1402003#(\" + n5 + \" moedas)#l\\r\\n#L6# #z1312006#(\" + n3 + \" moedas)#l\\r\\n#L7# #z1412004#(\" + n3 + \" moedas)#l\\r\\n#L8# #z1312007#(\" + n4 + \" moedas)#l\\r\\n#L9# #z1412005#(\" + n4 + \" moedas)#l\\r\\n#L10# #z1312008#(\" + n5 + \" moedas)#l\\r\\n#L11# #z1412003#(\" + n5 + \" moedas)#l\\r\\n#L12# Ir para a pr\ufffdxima p\ufffdgina(1/2)#l\");\n+                } else if (select == 3) {\n+                    status = 20;\n+                    cm.sendSimple(\"Selecione a arma que voc\ufffd gostaria de trocar. As armas que eu tenho aqui s\ufffdo extremamente atraentes. Veja voc\ufffd mesmo! \\r\\n#b#L0# #z1372001#(\" + n3 + \" moedas)#l\\r\\n#L1# #z1382018#(\" + n3 + \" moedas)#l\\r\\n#L2# #z1372012#(\" + n4 + \"moedas)#l\\r\\n#L3# #z1382019#(\" + n4 + \"moedas)#l\\r\\n#L4# #z1382001#(\" + n5 + \" moedas)#l\\r\\n#L5# #z1372007#(\" + n5 + \" moedas)#l\");\n+                } else if (select == 4) {\n+                    status = 30;\n+                    cm.sendSimple(\"Selecione a arma que voc\ufffd gostaria de trocar. As armas que eu tenho aqui s\ufffdo extremamente atraentes. Veja voc\ufffd mesmo! \\r\\n#b#L0# #z1452006#(\" + n3 + \" moedas)#l\\r\\n#L1# #z1452007#(\" + n4 + \" moedas)#l\\r\\n#L2# #z1452008#(\" + n5 + \" moedas)#l\\r\\n#L3# #z1462005#(\" + n3 + \" moedas)#l\\r\\n#L4# #z1462006#(\" + n4 + \" moedas)#l\\r\\n#L5# #z1462007#(\" + n5 + \" moedas)#l\");\n+                } else if (select == 5) {\n+                    status = 40;\n+                    cm.sendSimple(\"Selecione a arma que voc\ufffd gostaria de trocar por. As armas que eu tenho s\ufffdo da maior qualidade. Seleciona a mais atraente para voc\ufffd! \\r\\n#b#L0# #z1472013#(\" + n3 + \" moedas)#l\\r\\n#L1# #z1472017#(\" + n4 + \"moedas)#l\\r\\n#L2# #z1472021#(\" + n5 + \" moedas)#l\\r\\n#L3# #z1332014#(\" + n3 + \" moedas)#l\\r\\n#L4# #z1332031#(\" + n4 + \"moedas)#l\\r\\n#L5# #z1332011#(\" + n4 + \"moedas)#l\\r\\n#L6# #z1332016#(\" + n5 + \" moedas)#l\\r\\n#L7# #z1332003#(\" + n5 + \" moedas)#l\");\n+                }\n+            } else if (status == 11) {\n+                if (selection == 12) {\n+                    cm.sendSimple(\"Selecione a arma que voc\ufffd gostaria de trocar. As armas que eu tenho aqui s\ufffdo extremamente \ufffdteis. D\ufffd uma olhada! \\r\\n#b#L0# #z1322015#(\" + n3 + \" moedas)#l\\r\\n#L1# #z1422008#(\" + n3 + \" moedas)#l\\r\\n#L2# #z1322016#(\" + n4 + \"moedas)#l\\r\\n#L3# #z1422007#(\" + n4 + \"moedas)#l\\r\\n#L4# #z1322017#(\" + n5 + \" moedas)#l\\r\\n#L5# #z1422005#(\" + n5 + \" moedas)#l\\r\\n#L6# #z1432003#(\" + n3 + \" moedas)#l\\r\\n#L7# #z1442003#(\" + n3 + \" moedas)#l\\r\\n#L8# #z1432005#(\" + n4 + \"moedas)#l\\r\\n#L9# #z1442009#(\" + n4 + \"moedas)#l\\r\\n#L10# #z1442005#(\" + n5 + \" moedas)#l\\r\\n#L11# #z1432004#(\" + n5 + \" moedas)#l\\r\\n#L12# Voltar para a p\ufffdgina inicial(2/2)#l\");\n                 } else {\n-                    for(j = 4021000; j < 4021009; j++) {\n-                        cm.gainItem(j, -refineQty);\n+                    var item = new Array(1302004, 1402006, 1302009, 1402007, 1302010, 1402003, 1312006, 1412004, 1312007, 1412005, 1312008, 1412003);\n+                    var cost = new Array(n3, n3, n4, n4, n5, n5, n3, n3, n4, n4, n5);\n+                    if (cm.haveItem(4001129, cost[selection]) && cm.canHold(item[selection])) {\n+                        cm.gainItem(item[selection], 1);\n+                        cm.gainItem(4001129, -cost[selection]);\n+                        cm.dispose();\n+                    } else {\n+                        cm.sendOk(\"Voc\ufffd ou n\ufffdo possui #b#t4001129##k suficientes, ou seu invent\ufffdrio est\ufffd cheio. Verifique novamente.\");\n+                        cm.dispose();\n                     }\n-                    cm.gainItem(j, refineQty);\n-                }\n-                \n-                break;\n-            } else if(refineQty <= 1) {\n-                allDone = false;\n-                break;\n-            } else {\n-                refineQty--;\n+                }\n+            } else if (status == 12) {\n+                if (selection == 12) {\n+                    status = 10;\n+                    cm.sendSimple(\"Por favor tenha certeza que voc\ufffd possui #t4001129# para a arma que voc\ufffd deseja. Selecione a arma que voc\ufffd gostaria de trocar #t4001129# por. As op\ufffd\ufffdes que tenho s\ufffdo realmente boas, e eu n\ufffdo sou eu que falo \ufffd o povo que diz! \\r\\n#b#L0# #z1302004#(\" + n3 + \" moedas)#l\\r\\n#L1# #z1402006#(\" + n3 + \" moedas)#l\\r\\n#L2# #z1302009#(\" + n4 + \" moedas)#l\\r\\n#L3# #z1402007#(\" + n4 + \" moedas)#l\\r\\n#L4# #z1302010#(\" + n5 + \" moedas)#l\\r\\n#L5# #z1402003#(\" + n5 + \" moedas)#l\\r\\n#L6# #z1312006#(\" + n3 + \" moedas)#l\\r\\n#L7# #z1412004#(\" + n3 + \" moedas)#l\\r\\n#L8# #z1312007#(\" + n4 + \" moedas)#l\\r\\n#L9# #z1412005#(\" + n4 + \" moedas)#l\\r\\n#L10# #z1312008#(\" + n5 + \" moedas)#l\\r\\n#L11# #z1412003#(\" + n5 + \" moedas)#l\\r\\n#L12# Ir para a pr\ufffdxima p\ufffdgina(1/2)#l\");\n+                } else {\n+                    var item = new Array(1322015, 1422008, 1322016, 1422007, 1322017, 1422005, 1432003, 1442003, 1432005, 1442009, 1442005, 1432004);\n+                    var cost = new Array(n3, n3, n4, n4, n5, n5, n3, n3, n4, n4, n5, n5);\n+                    if (cm.haveItem(4001129, cost[selection]) && cm.canHold(item[selection])) {\n+                        cm.gainItem(item[selection], 1);\n+                        cm.gainItem(4001129, -cost[selection]);\n+                        cm.dispose();\n+                    } else {\n+                        cm.sendOk(\"Voc\ufffd ou n\ufffdo possui #b#t4001129##k suficientes, ou seu invent\ufffdrio est\ufffd cheio. Verifique novamente.\");\n+                        cm.dispose();\n+                    }\n+                }\n+            } else if (status == 21) {\n+                var item = new Array(1372001, 1382018, 1372012, 1382019, 1382001, 1372007);\n+                var cost = new Array(n3, n3, n4, n4, n5, n5);\n+                if (cm.haveItem(4001129, cost[selection]) && cm.canHold(item[selection])) {\n+                    cm.gainItem(item[selection], 1);\n+                    cm.gainItem(4001129, -cost[selection]);\n+                    cm.dispose();\n+                } else {\n+                    cm.sendOk(\"Ou voc\ufffd n\ufffdo possui #b#t4001129##k suficientes, ou seu invent\ufffdrio est\ufffd cheio. Verifique novamente.\");\n+                    cm.dispose();\n+                }\n+            } else if (status == 31) {\n+                var item = new Array(1452006, 1452007, 1452008, 1462005, 1462006, 1462007);\n+                var cost = new Array(n3, n4, n5, n3, n4, n5);\n+                if (cm.haveItem(4001129, cost[selection]) && cm.canHold(item[selection])) {\n+                    cm.gainItem(item[selection], 1);\n+                    cm.gainItem(4001129, -cost[selection]);\n+                    cm.dispose();\n+                } else {\n+                    cm.sendOk(\"Ou voc\ufffd n\ufffdo possui #b#t4001129##k suficientes, ou seu invent\ufffdrio est\ufffd cheio. Verifique novamente.\");\n+                    cm.dispose();\n+                }\n+            } else if (status == 41) {\n+                var item = new Array(1472013, 1472017, 1472021, 1332014, 1332031, 1332011, 1332016, 1332003);\n+                var cost = new Array(n3, n4, n5, n3, n4, n4, n5, n5);\n+                if (cm.haveItem(4001129, cost[selection]) && cm.canHold(item[selection])) {\n+                    cm.gainItem(item[selection], 1);\n+                    cm.gainItem(4001129, -cost[selection]);\n+                    cm.dispose();\n+                } else {\n+                    cm.sendOk(\"Ou voc\ufffd n\ufffdo possui #b#t4001129##k suficientes, ou seu invent\ufffdrio est\ufffd cheio. Verifique novamente.\");\n+                    cm.dispose();\n+                }\n+            } else if (status == 61) {\n+                select = selection;\n+                if (selection == 0) {\n+                    cm.sendNext(\"Haha! Eu sou Spiegelmann, o l\ufffdder dessa Folia. Eu comecei a primeira #bFolia de Monstros#k aqui, aguardando por viajantes como voc\ufffd para participar dessa extravaganza!\");\n+                } else if (selection == 1) {\n+                    cm.sendNext(\"#bFolia de Monstros#k consiste em 2 grupos entrando no campo de batalha, e ca\ufffdando os monstros invocados pelo outro grupo. \ufffd uma #bmiss\ufffdo de combate que determina o vitorioso pela quantia de Pontos de Folia (CP) recebidos#k.\");\n+                } else if (selection == 2) {\n+                    cm.sendNext(\"Quando entrar no Campo da Folia, voc\ufffd ver\ufffd a janela da Folia de Monstros aparecer. Tudo que precisa fazer \ufffd #bselecionar o que voc\ufffde quer usar, e pressionar OK#k. Muito f\ufffdcil, n\ufffd?\");\n+                } else {\n+                    cm.dispose();\n+                }\n+            } else if (status == 62) {\n+                if (select == 0) {\n+                    cm.sendNext(\"O que \ufffd a #bFolia de Monstros#k? Hahaha! Vamos dizer que \ufffd uma experi\ufffdncia que jamais esquecer\ufffd! \ufffd uma #bbatalha contra outros viajantes assim como voc\ufffd!#k\");\n+                } else if (select == 1) {\n+                    cm.sendNext(\"Quando entrar no Campo da Folia, sua tarefa \ufffd #breceber CP ca\ufffdando os monstros do grupo oposto, e usar estes CP's para distrair o grupo oposto de ca\ufffdar monstros.#k.\");\n+                } else if (select == 2) {\n+                    cm.sendNext(\"Assim que se acostumar com os comandos, tente usar #bas teclas TAB e F1 ~ F12#k. #bTAB alterna entre Invoca\ufffd\ufffdo de Monstros/Habilidades/Protetor,#k e, #bF1~ F12 possibilita-o de acessar uma das janelas diretamente#k.\");\n+                }\n+            } else if (status == 63) {\n+                if (select == 0) {\n+                    cm.sendNext(\"Eu sei que \ufffd muito perigoso para voc\ufffds lutarem uns com os outros usando armas de verdade; e eu n\ufffdo sugeriria um ato t\ufffdo barb\ufffdrico. N\ufffdo meu amigo, o que eu ofere\ufffdo \ufffd competi\ufffd\ufffdo. A emo\ufffd\ufffdo da batalha e a emo\ufffd\ufffdo de competir contra pessoas t\ufffdo fortes e motivadas. Eu ofere\ufffdo a premissa de que seu grupo e o grupo oposto ambos #binvoquem os monstros, e derrote os monstros invocados pelo grupo advers\ufffdrio. Essa \ufffd a ess\ufffdncia da Folia de Monstros. Al\ufffdm disso, voc\ufffd pode usar Maple Coins ganhos durante a Folia de Monstros para obter novos itens e armas! #k\");\n+                } else if (select == 1) {\n+                    cm.sendNext(\"Existem 3 maneiras de distrair o grupo advers\ufffdrio: #bInvodar um monstro, Habilidade, and Protetor#k. Vou dar-lhe um olhar mais aprofundado, se voc\ufffd quiser saber mais sobre 'Instru\ufffd\ufffdes detalhadas'.\");\n+                } else if (select == 2) {\n+                    cm.sendNext(\"#bInvocar um Monstro#k chama um monstro que ataca o grupo advers\ufffdrio, sob seu controle. Use CP para trazer um Monstro Invocado, e ele ir\ufffd aparecer na mesma \ufffdrea, atacando o grupo oposto.\");\n+                }\n+            } else if (status == 64) {\n+                if (select == 0) {\n+                    cm.sendNext(\"Claro, n\ufffdo \ufffd t\ufffdo simples assim. Existem outras maneiras de prevenir o outro grupo de ca\ufffdar monstros, e cabe a voc\ufffd descobrir como faz\ufffd-lo. O que acha? Interessado em uma competi\ufffd\ufffdo amig\ufffdvel?\");\n+                    cm.dispose();\n+                } else if (select == 1) {\n+                    cm.sendNext(\"Por favor lembre-se. Nunca \ufffd uma boa ideia guardar seus CP's. #bOs CP's que voc\ufffd usou ir\ufffdo ajudar a determinar o vencedor e o perdedor da Folia.\");\n+                } else if (select == 2) {\n+                    cm.sendNext(\"#bHabilidade#k \ufffd uma op\ufffd\ufffdo de usar habilidades tais como Escurid\ufffdo, Fraqueza, e outras para prevenir o grupo oposto de matar outros monstros. S\ufffdo necess\ufffdrios muitos CP's, mas vale muito a pena. O \ufffdnico problema \ufffd que eles n\ufffdo duram muito. Use essa t\ufffdtica com sabedoria!\");\n+                }\n+            } else if (status == 65) {\n+                if (select == 1) {\n+                    cm.sendNext(\"Oh, e n\ufffdo se preocupe em tranformar-se em um fantasma. Na Folia de Monstros, #bvoc\ufffd n\ufffdo perder\ufffd EXP ap\ufffds a morte#k. \ufffd realmente uma exper\ufffdncia como nenhuma outra!\");\n+                    cm.dispose();\n+                } else if (select == 2) {\n+                    cm.sendNext(\"#bProtetor#k \ufffd basicamente um item invocado que aumenta dr\ufffdsticamente as habilidades dos monstros invocados pelo seu grupo. Protetor funciona enquanto n\ufffdo for demolido pelo grupo oposto, ent\ufffdo eu surigo que voc\ufffd invoque v\ufffdrios monstros primeiro, e ent\ufffdo traga o Protetor.\");\n+                }\n+            } else if (status == 66) {\n+                cm.sendNext(\"Por \ufffdltimo, enquanto estiver na Folia de Monstros, #bvoc\ufffd n\ufffdo pode usar items/po\ufffd\ufffdes de recupera\ufffd\ufffdo que voc\ufffd leva por ai contigo.#k Entretanto, os monstros deixam esses items cair de vez em quando, e #bassim que peg\ufffd-los, o item ativar\ufffd imediatamente#k. \ufffd por isso que \ufffd importante saber quando pegar estes items.\");\n+                cm.dispose();\n             }\n         }\n     }\n-    \n-    return allDone;\n }\n+"}, {"sha": "4a475a35ffcb2fbcda181e7da7d6ac7627632a6f", "filename": "scripts/npc/2042003.js", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042003.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042003.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2042003.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,30 @@\n+var status = 0;\n+var request;\n+\n+function start() {\n+    status = -1;\n+    action(1, 0, 0);\n+}\n+\n+\n+function action(mode, type, selection) {\n+    if (mode == -1) {\n+        cm.dispose();\n+    } else {\n+        if (mode == 0 && status == 0) {\n+            cm.dispose();\n+            return;\n+        }\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        if (status == 0) {\n+            cm.warpParty(980000000);\n+            cm.cancelarSaida();\n+            cm.dispose();\n+        }\n+    }\n+}\n+\n+"}, {"sha": "fa5965c5bf785205f75b43e216f7fce9ef844d17", "filename": "scripts/npc/2042004.js", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042004.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042004.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2042004.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,16 @@\n+var status = 0;\n+var request;\n+\n+function start() {\n+    status = -1;\n+    action(1, 0, 0);\n+}\n+\n+\n+function action(mode, type, selection) {\n+    cm.warpParty(980000000);\n+    cm.cancelarSaida();\n+    cm.dispose();\n+}\n+\n+"}, {"sha": "0cf77cbf77e931b0ce3d406a274403c2377c692d", "filename": "scripts/npc/2042005.js", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042005.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042005.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2042005.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,83 @@\n+var map = 980030000;\n+var minLvl = 30;\n+var maxLvl = 255;\n+var minAmt = 0;\n+var maxAmt = 6;\n+\n+function start() {\n+    status = -1;\n+    action(1, 0, 0);\n+}\n+\n+function action(mode, type, selection) {\n+    if (mode == -1) {\n+        cm.dispose();\n+    } else {\n+        if (mode == 0 && status == 0) {\n+            cm.dispose();\n+            return;\n+        }\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        if (status == 0) {\n+            if (cm.getParty() == null) {\n+                status = 10;\n+                cm.sendOk(\"#e\ufffd necess\ufffdrio criar um grupo antes de come\ufffdar o Festival de Monstros!#k\");\n+            } else if (!cm.isLeader()) {\n+                status = 10;\n+                cm.sendOk(\"Se voc\ufffd quer come\ufffdar o Festival, avise o #bl\ufffdder do grupo#k para falar comigo.\");\n+            } else {\n+                var party = cm.getParty().getMembers();\n+                var inMap = cm.partyMembersInMap();\n+                var lvlOk = 0;\n+                var isInMap = 0;\n+                for (var i = 0; i < party.size(); i++) {\n+                    if (party.get(i).getLevel() >= minLvl && party.get(i).getLevel() <= maxLvl) {\n+                        lvlOk++;\n+                    }\n+                    if (party.get(i).getPlayer().getMapId()!= 980030000) {\n+                        //isInMap = false;\n+                        isInMap++\n+                    }\n+                }\n+\n+                if (party >= 1) {\n+                    status = 10;\n+                    cm.sendOk(\"Voc\ufffd n\ufffdo tem n\ufffdmero suficiente de pessoas em seu grupo. Voc\ufffd precisa de um grupo com #b\" + minAmt + \"#k - #r\" + maxAmt + \"#k membros e eles devem estar no mapa com voc\ufffd.\");\n+                } else if (lvlOk != inMap) {\n+                    status = 10;\n+                    cm.sendOk(\"Certifique se todos em seu grupo est\ufffdo dentre os n\ufffdveis corretos (\" + minLvl + \"~\" + maxLvl + \")!\");\n+                } else if (isInMap > 0) {\n+                    status = 10;\n+                    cm.sendOk(\"Existe algu\ufffdm do grupo que n\ufffdo esta no mapa!\");\n+                } else {\n+                    cm.sendCPQMapLists2();\n+                }\n+            }\n+        } else if (status == 1) {\n+            if (cm.fieldTaken2(selection)) {\n+                if (cm.fieldLobbied2(selection)) {\n+                    cm.challengeParty2(selection);\n+                    cm.dispose();\n+                } else {\n+                    cm.sendOk(\"A sala esta cheia.\");\n+                    cm.dispose();\n+                }\n+            } else {\n+                var party = cm.getParty().getMembers();\n+                if ((selection === 0 || selection === 1 ) && party.size() < 2) {\n+                    cm.sendOk(\"Voc\ufffd precisa de no m\ufffdnimo 2 player para entrar na competi\ufffd\ufffdo.\");\n+                } else if ((selection === 2 ) && party.size() < 3) {\n+                    cm.sendOk(\"Voc\ufffd precisa de no m\ufffdnimo 3 player para entrar na competi\ufffd\ufffdo.\");\n+                } else {\n+                    cm.cpqLobby2(selection);\n+                }\n+                cm.dispose();\n+            }\n+        } else if (status == 11) {\n+            cm.dispose();\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "722f0229dc5fc825ab9a55c177ca65fddfb016b4", "filename": "scripts/npc/2042007.js", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042007.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042007.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2042007.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,132 @@\n+importPackage(net.sf.odinms.server.maps);\n+\n+var status = 0;\n+var rnk = -1;\n+\n+function start() {\n+    status = -1;\n+    action(1, 0, 0);\n+}\n+\n+function action(mode, type, selection) {\n+    if (mode == -1) {\n+        cm.dispose();\n+    } else {\n+        if (status >= 0 && mode == 0) {\n+            cm.sendOk(\"Alright then, I hope we can chat later next time.\");\n+            cm.dispose();\n+            return;\n+        }\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        if (cm.getChar().getMap().isCPQLoserMap()) {\n+            if (status == 0) {\n+                if (cm.getChar().getParty() != null) {\n+                    var shiu = \"\";\n+                    if (cm.getPlayer().getFestivalPoints() >= 100) {\n+                        shiu += \"#rA#k\";\n+                        cm.sendOk(\"Infelizmente, voc\ufffd ou empatou ou perdeu a batalha, apesar da sua excelente performance. A vit\ufffdria pode ser sua da pr\ufffdxima vez.\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shiu);\n+                        rnk = 10;\n+                    } else if (cm.getPlayer().getFestivalPoints() >= 50 && cm.getPlayer().getFestivalPoints() < 100) {\n+                        shiu += \"#rB#k\";\n+                        rnk = 20;\n+                        cm.sendOk(\"Infelizmente, voc\ufffd ou empatou ou perdeu a batalha, mesmo com sua \ufffdtima performance. S\ufffd mais um pouquinho, e a vit\ufffdria poderia ter sido sua.\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shiu);\n+                    } else if (cm.getPlayer().getFestivalPoints() >= 30 && cm.getPlayer().getFestivalPoints() < 50) {\n+                        shiu += \"#rC#k\";\n+                        rnk = 30;\n+                        cm.sendOk(\"Infelizmente, voc\ufffd ou empatou ou perdeu a batalha. A vit\ufffdria est\ufffd para aqueles que se esfor\ufffdam. Vejo seus esfor\ufffdos, ent\ufffdo a vit\ufffdria n\ufffdo est\ufffd t\ufffdo longe do seu alcance. Continue assim!\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shiu);\n+                    } else {\n+                        shiu += \"#rD#k\";\n+                        rnk = 40;\n+                        cm.sendOk(\"Infelizmente, voc\ufffd ou empatou ou perdeu a batalha, e sua performance claramente reflete nisso. Espero mais de voc\ufffd da pr\ufffdxima vez.\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shiu);\n+                    }\n+                } else {\n+                    cm.warp(980030000, 0);\n+                    cm.dispose();\n+                }\n+            } else if (status == 1) {\n+                switch (rnk) {\n+                    case 10:\n+                        cm.warp(980030000, 0);\n+                        cm.gainExp(35000);\n+                        cm.dispose();\n+                        break;\n+                    case 20:\n+                        cm.warp(980030000, 0);\n+                        cm.gainExp(25000);\n+                        cm.dispose();\n+                        break;\n+                    case 30:\n+                        cm.warp(980030000, 0);\n+                        cm.gainExp(12500);\n+                        cm.dispose();\n+                        break;\n+                    case 40:\n+                        cm.warp(980030000, 0);\n+                        cm.gainExp(3500);\n+                        cm.dispose();\n+                        break;\n+                    default:\n+                        cm.warp(980030000, 0);\n+                        cm.dispose();\n+                        break;\n+                }\n+            }\n+        } else if (cm.getChar().getMap().isCPQWinnerMap()) {\n+            if (status == 0) {\n+                if (cm.getChar().getParty() != null) {\n+                    var shi = \"\";\n+                    if (cm.getPlayer().getFestivalPoints() >= 300) {\n+                        shi += \"#rA#k\";\n+                        rnk = 1;\n+                        cm.sendOk(\"Parab\ufffdns pela sua vit\ufffdria!!! Que \ufffdtima performance! O grupo advers\ufffdrio n\ufffdo p\ufffdde fazer nada! Espero o mesmo bom trabalho da pr\ufffdxima vez!\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shi);\n+                    } else if (cm.getPlayer().getFestivalPoints() >= 100 && cm.getPlayer().getFestivalPoints() < 300) {\n+                        shi += \"#rB#k\";\n+                        rnk = 2;\n+                        cm.sendOk(\"Parab\ufffdns pela sua vit\ufffdria! Isso foi impressionante! Voc\ufffd fez um bom trabalho contra o grupo advers\ufffdrio! S\ufffd mais um pouco, e voc\ufffd definitivamente vai conseguir um A na pr\ufffdxima vez. \\r\\n\\r\\n#bNota da Folia de Monstros : \" + shi);\n+                    } else if (cm.getPlayer().getFestivalPoints() >= 50 && cm.getPlayer().getFestivalPoints() < 100) {\n+                        shi += \"#rC#k\";\n+                        rnk = 3;\n+                        cm.sendOk(\"Parab\ufffdns pela sua vit\ufffdria. Voc\ufffd fez algumas coisas c\ufffd e l\ufffd, mas essa n\ufffdo pode ser considerada uma boa vit\ufffdria. Espero mais de ti da pr\ufffdxima vez.\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shi);\n+                    } else {\n+                        shi += \"#rD#k\";\n+                        rnk = 4;\n+                        cm.sendOk(\"Parab\ufffdns pela sua vit\ufffdria, entretanto sua performance n\ufffdo refletiu muito bem isso. Seja mais ativo na sua pr\ufffdxima participa\ufffd\ufffdo da Folia de Monstros!\\r\\n\\r\\n#bNota da Folia de Monstros : \" + shi);\n+                    }\n+                } else {\n+                    cm.warp(980030000, 0);\n+                    cm.dispose();\n+                }\n+            } else if (status == 1) {\n+                switch (rnk) {\n+                    case 1:\n+                        cm.warp(980030000, 0);\n+                        cm.gainExp(875000);\n+                        cm.dispose();\n+                        break;\n+                    case 2:\n+                        cm.warp(980030000, 0);\n+                        cm.gainExp(700000);\n+                        cm.dispose();\n+                        break;\n+                    case 3:\n+                        cm.warp(980030000, 0);\n+                        cm.gainExp(555000);\n+                        cm.dispose();\n+                        break;\n+                    case 4:\n+                        cm.warp(980030000, 0);\n+                        cm.gainExp(100000);\n+                        cm.dispose();\n+                        break;\n+                    default:\n+                        cm.warp(980030000, 0);\n+                        cm.dispose();\n+                        break;\n+                }\n+            }\n+        }\n+    }\n+}  \n\\ No newline at end of file"}, {"sha": "d8ec8d846561cf6e6d76c9d3da8b36fb6be55c7a", "filename": "scripts/npc/2042008.js", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042008.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042008.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2042008.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,30 @@\n+var status = 0;\n+var request;\n+\n+function start() {\n+    status = -1;\n+    action(1, 0, 0);\n+}\n+\n+\n+function action(mode, type, selection) {\n+    if (mode == -1) {\n+        cm.dispose();\n+    } else {\n+        if (mode == 0 && status == 0) {\n+            cm.dispose();\n+            return;\n+        }\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        if (status == 0) {\n+            cm.warpParty(980030000, 4);\n+            cm.cancelarSaida();\n+            cm.dispose();\n+        }\n+    }\n+}\n+\n+"}, {"sha": "d8ec8d846561cf6e6d76c9d3da8b36fb6be55c7a", "filename": "scripts/npc/2042009.js", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042009.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/2042009.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2042009.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,30 @@\n+var status = 0;\n+var request;\n+\n+function start() {\n+    status = -1;\n+    action(1, 0, 0);\n+}\n+\n+\n+function action(mode, type, selection) {\n+    if (mode == -1) {\n+        cm.dispose();\n+    } else {\n+        if (mode == 0 && status == 0) {\n+            cm.dispose();\n+            return;\n+        }\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        if (status == 0) {\n+            cm.warpParty(980030000, 4);\n+            cm.cancelarSaida();\n+            cm.dispose();\n+        }\n+    }\n+}\n+\n+"}, {"sha": "aa7e970fee49fc10ac3cd0493f6f103673096c88", "filename": "scripts/npc/9201002.js", "status": "modified", "additions": 97, "deletions": 88, "changes": 185, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/9201002.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/9201002.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9201002.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,24 +1,24 @@\n /*\n-    This file is part of the HeavenMS MapleStory Server\n-    Copyleft (L) 2017 RonanLana\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n+ This file is part of the HeavenMS MapleStory Server\n+ Copyleft (L) 2017 RonanLana\n+ \n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n+ \n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+ \n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n /* High Priest John\n-\tMarriage NPC\n+ Marriage NPC\n  */\n \n importPackage(Packages.constants);\n@@ -40,14 +40,14 @@ function isWeddingIndoors(mapid) {\n \n function getMarriageInstance(player) {\n     var em = cm.getEventManager(weddingEventName);\n-    \n-    for (var iterator = em.getInstances().iterator(); iterator.hasNext();) {\n+\n+    for (var iterator = em.getInstances().iterator(); iterator.hasNext(); ) {\n         var eim = iterator.next();\n-        if(eim.isEventLeader(player)) {\n+        if (eim.isEventLeader(player)) {\n             return eim;\n         }\n     }\n-    \n+\n     return null;\n }\n \n@@ -57,7 +57,7 @@ function detectPlayerItemid(player) {\n             return x;\n         }\n     }\n-    \n+\n     return -1;\n }\n \n@@ -67,39 +67,44 @@ function getRingId(boxItemId) {\n \n function isSuitedForWedding(player, equipped) {\n     var baseid = (player.getGender() == 0) ? 1050131 : 1051150;\n-    \n-    if(equipped) {\n-        for(var i = 0; i < 4; i++) {\n-            if(player.haveItemEquipped(baseid + i)) {\n+\n+    if (equipped) {\n+        for (var i = 0; i < 4; i++) {\n+            if (player.haveItemEquipped(baseid + i)) {\n                 return true;\n             }\n         }\n     } else {\n-        for(var i = 0; i < 4; i++) {\n-            if(player.haveItemWithId(baseid + i, true)) {\n+        for (var i = 0; i < 4; i++) {\n+            if (player.haveItemWithId(baseid + i, true)) {\n                 return true;\n             }\n         }\n     }\n-    \n+\n     return false;\n }\n \n function getWeddingPreparationStatus(player, partner) {\n-    if(!player.haveItem(4000313)) return -3;\n-    if(!partner.haveItem(4000313)) return 3;\n-    \n-    if(!isSuitedForWedding(player, true)) return -4;\n-    if(!isSuitedForWedding(partner, true)) return 4;\n-    \n+    if (!player.haveItem(4000313))\n+        return -3;\n+    if (!partner.haveItem(4000313))\n+        return 3;\n+\n+    if (!isSuitedForWedding(player, true))\n+        return -4;\n+    if (!isSuitedForWedding(partner, true))\n+        return 4;\n+\n     var hasEngagement = false;\n     for (var x = 4031357; x <= 4031364; x++) {\n         if (player.haveItem(x)) {\n             hasEngagement = true;\n             break;\n         }\n     }\n-    if(!hasEngagement) return -1;\n+    if (!hasEngagement)\n+        return -1;\n \n     hasEngagement = false;\n     for (var x = 4031357; x <= 4031364; x++) {\n@@ -108,24 +113,28 @@ function getWeddingPreparationStatus(player, partner) {\n             break;\n         }\n     }\n-    if(!hasEngagement) return -2;\n+    if (!hasEngagement)\n+        return -2;\n \n-    if(!player.canHold(1112803)) return 1;\n-    if(!partner.canHold(1112803)) return 2;\n+    if (!player.canHold(1112803))\n+        return 1;\n+    if (!partner.canHold(1112803))\n+        return 2;\n \n     return 0;\n }\n \n function giveCoupleBlessings(eim, player, partner) {\n     var blessCount = eim.gridSize();\n-    \n+\n     player.gainExp(blessCount * weddingBlessingExp);\n     partner.gainExp(blessCount * weddingBlessingExp);\n }\n \n-function start() {  \n+function start() {\n     weddingIndoors = isWeddingIndoors(cm.getMapId());\n-    if(weddingIndoors) eim = cm.getEventInstance();\n+    if (weddingIndoors)\n+        eim = cm.getEventInstance();\n \n     status = -1;\n     action(1, 0, 0);\n@@ -144,8 +153,8 @@ function action(mode, type, selection) {\n         else\n             status--;\n \n-        if(!weddingIndoors) {\n-            if(status == 0) {\n+        if (!weddingIndoors) {\n+            if (status == 0) {\n                 var hasEngagement = false;\n                 for (var x = 4031357; x <= 4031364; x++) {\n                     if (cm.haveItem(x, 1)) {\n@@ -154,7 +163,7 @@ function action(mode, type, selection) {\n                     }\n                 }\n \n-                if(hasEngagement) {\n+                if (hasEngagement) {\n                     var text = \"Hi there. How can I help you?\";\n                     var choice = new Array(\"We're ready to get married.\");\n                     for (x = 0; x < choice.length; x++) {\n@@ -165,32 +174,32 @@ function action(mode, type, selection) {\n                     cm.sendOk(\"Hmm, today two fluttering hearts are about to be joined together by the blessings of love!\");\n                     cm.dispose();\n                 }\n-            } else if(status == 1) {\n+            } else if (status == 1) {\n                 var wid = cm.getClient().getWorldServer().getRelationshipId(cm.getPlayer().getId());\n                 var cserv = cm.getClient().getChannelServer();\n \n-                if(cserv.isWeddingReserved(wid)) {\n-                    if(wid == cserv.getOngoingWedding(cathedralWedding)) {\n+                if (cserv.isWeddingReserved(wid)) {\n+                    if (wid == cserv.getOngoingWedding(cathedralWedding)) {\n                         var partner = cserv.getPlayerStorage().getCharacterById(cm.getPlayer().getPartnerId());\n-                        if(!(partner == null || !cm.getMap().equals(partner.getMap()))) {\n-                            if(!cm.canHold(4000313)) {\n+                        if (!(partner == null || !cm.getMap().equals(partner.getMap()))) {\n+                            if (!cm.canHold(4000313)) {\n                                 cm.sendOk(\"Please have a free ETC slot available to get the #b#t4000313##k.\");\n                                 cm.dispose();\n                                 return;\n-                            } else if(!partner.canHold(4000313)) {\n+                            } else if (!partner.canHold(4000313)) {\n                                 cm.sendOk(\"Please let your partner know they must have a free ETC slot available to get the #b#t4000313##k.\");\n                                 cm.dispose();\n                                 return;\n-                            } else if(!isSuitedForWedding(cm.getPlayer(), false)) {\n+                            } else if (!isSuitedForWedding(cm.getPlayer(), false)) {\n                                 cm.sendOk(\"Please purchase a #rwedding garment#k for the ceremony, quickly! Without it I am not able to marry you.\");\n                                 cm.dispose();\n                                 return;\n-                            } else if(!isSuitedForWedding(partner, false)) {\n+                            } else if (!isSuitedForWedding(partner, false)) {\n                                 cm.sendOk(\"Please let your partner know they must have a #rwedding garment#k ready for the ceremony.\");\n                                 cm.dispose();\n                                 return;\n                             }\n-                            \n+\n                             cm.sendOk(\"Very well, the preparatives here are finished too. This indeed is a beautiful day, you two are truly blessed to marry on such a day. Let us begin the marriage!!\");\n                         } else {\n                             cm.sendOk(\"Hmm, it seems your partner is elsewhere... Please let them come here before starting the ceremony.\");\n@@ -206,19 +215,19 @@ function action(mode, type, selection) {\n                     cm.sendOk(\"Hmm, I'm sorry but there are no reservations made for you at this channel for the time being.\");\n                     cm.dispose();\n                 }\n-            } else if(status == 2) {\n+            } else if (status == 2) {\n                 var cserv = cm.getClient().getChannelServer();\n                 var wtype = cserv.getOngoingWeddingType(cathedralWedding);\n-                \n+\n                 var partner = cserv.getPlayerStorage().getCharacterById(cm.getPlayer().getPartnerId());\n-                if(!(partner == null || !cm.getMap().equals(partner.getMap()))) {\n-                    if(cserv.acceptOngoingWedding(cathedralWedding)) {\n+                if (!(partner == null || !cm.getMap().equals(partner.getMap()))) {\n+                    if (cserv.acceptOngoingWedding(cathedralWedding)) {\n                         var wid = cm.getClient().getWorldServer().getRelationshipId(cm.getPlayer().getId());\n-                        if(wid > 0) {\n+                        if (wid > 0) {\n                             var em = cm.getEventManager(weddingEventName);\n-                            if(em.startInstance(cm.getPlayer())) {\n+                            if (em.startInstance(cm.getPlayer())) {\n                                 eim = getMarriageInstance(cm.getPlayer());\n-                                if(eim != null) {\n+                                if (eim != null) {\n                                     eim.setIntProperty(\"weddingId\", wid);\n                                     eim.setIntProperty(\"groomId\", cm.getPlayer().getId());\n                                     eim.setIntProperty(\"brideId\", cm.getPlayer().getPartnerId());\n@@ -248,20 +257,20 @@ function action(mode, type, selection) {\n             }\n         } else {\n             if (status == 0) {\n-                if(eim == null) {\n-                    cm.warp(680000000,0);\n+                if (eim == null) {\n+                    cm.warp(680000000, 0);\n                     cm.dispose();\n                     return;\n                 }\n-                \n+\n                 var playerId = cm.getPlayer().getId();\n-                if(playerId == eim.getIntProperty(\"groomId\") || playerId == eim.getIntProperty(\"brideId\")) {\n+                if (playerId == eim.getIntProperty(\"groomId\") || playerId == eim.getIntProperty(\"brideId\")) {\n                     var wstg = eim.getIntProperty(\"weddingStage\");\n-                    \n-                    if(wstg == 2) {\n+\n+                    if (wstg == 2) {\n                         cm.sendYesNo(\"Very well, the guests has bestowed all their blessings to you now. The time has come, #rshould I make you Husband and Wife#k?\");\n                         state = 1;\n-                    } else if(wstg == 1) {\n+                    } else if (wstg == 1) {\n                         cm.sendOk(\"While you two are making your wedding vows to each other, your guests are currently giving their blessings to you. This is a time of happiness for both of you, please rejoice the ceremony.\");\n                         cm.dispose();\n                     } else {\n@@ -270,20 +279,20 @@ function action(mode, type, selection) {\n                     }\n                 } else {\n                     var wstg = eim.getIntProperty(\"weddingStage\");\n-                    if(wstg == 1) {\n-                        if(eim.gridCheck(cm.getPlayer()) != -1) {\n+                    if (wstg == 1) {\n+                        if (eim.gridCheck(cm.getPlayer()) != -1) {\n                             cm.sendOk(\"Everyone give your blessings to this lovely couple!\");\n                             cm.dispose();\n                         } else {\n-                            if(eim.getIntProperty(\"guestBlessings\") == 1) {\n+                            if (eim.getIntProperty(\"guestBlessings\") == 1) {\n                                 cm.sendYesNo(\"Do you want to bless this couple?\");\n                                 state = 0;\n                             } else {\n                                 cm.sendOk(\"Today we are gathered here to reunite this lively couple in matrimony!\");\n                                 cm.dispose();\n                             }\n                         }\n-                    } else if(wstg == 3) {\n+                    } else if (wstg == 3) {\n                         cm.sendOk(\"The two loving birds are now married. What a lively day! Please #rget ready for the afterparty#k, it should start soon. Follow the married couple's lead.\");\n                         cm.dispose();\n                     } else {\n@@ -292,10 +301,10 @@ function action(mode, type, selection) {\n                     }\n                 }\n             } else if (status == 1) {\n-                if(state == 0) {    // give player blessings\n+                if (state == 0) {    // give player blessings\n                     eim.gridInsert(cm.getPlayer(), 1);\n-                    \n-                    if(ServerConstants.WEDDING_BLESSER_SHOWFX) {\n+\n+                    if (ServerConstants.WEDDING_BLESSER_SHOWFX) {\n                         var target = cm.getPlayer();\n                         target.announce(MaplePacketCreator.showSpecialEffect(9));\n                         target.getMap().broadcastMessage(target, MaplePacketCreator.showForeignEffect(target.getId(), 9), false);\n@@ -308,30 +317,30 @@ function action(mode, type, selection) {\n                         target.announce(MaplePacketCreator.showSpecialEffect(9));\n                         target.getMap().broadcastMessage(target, MaplePacketCreator.showForeignEffect(target.getId(), 9), false);\n                     }\n-                    \n+\n                     cm.sendOk(\"Your blessings have been added to their love. What a noble act for a lovely couple!\");\n                     cm.dispose();\n                 } else {            // couple wants to complete the wedding\n                     var wstg = eim.getIntProperty(\"weddingStage\");\n-                    \n-                    if(wstg == 2) {\n+\n+                    if (wstg == 2) {\n                         var pid = cm.getPlayer().getPartnerId();\n-                        if(pid <= 0) {\n+                        if (pid <= 0) {\n                             cm.sendOk(\"It seems you are no longer engaged to your partner, just before the altar... Where did all that happiness you two had sported a while ago went?\");\n                             cm.dispose();\n                             return;\n                         }\n \n                         var player = cm.getPlayer();\n                         var partner = cm.getMap().getCharacterById(cm.getPlayer().getPartnerId());\n-                        if(partner != null) {\n+                        if (partner != null) {\n                             state = getWeddingPreparationStatus(player, partner);\n \n-                            switch(state) {\n+                            switch (state) {\n                                 case 0:\n                                     var pid = eim.getIntProperty(\"confirmedVows\");\n-                                    if(pid != -1) {\n-                                        if(pid == player.getId()) {\n+                                    if (pid != -1) {\n+                                        if (pid == player.getId()) {\n                                             cm.sendOk(\"You have already confirmed your vows. All that is left is for your partner to confirm now.\");\n                                         } else {\n                                             eim.setIntProperty(\"weddingStage\", 3);\n@@ -362,7 +371,7 @@ function action(mode, type, selection) {\n                                         eim.setIntProperty(\"confirmedVows\", player.getId());\n                                         cm.getMap().dropMessage(6, \"Wedding Assistant: \" + player.getName() + \" has confirmed vows! Alright, one step away to make it official. Tighten your seatbelts!\");\n                                     }\n-                                    \n+\n                                     break;\n \n                                 case -1:\n@@ -376,7 +385,7 @@ function action(mode, type, selection) {\n                                 case -3:\n                                     cm.sendOk(\"It seems you don't have the #r#t4000313##k given at the entrance... Please find it, I can't marry you without that item in hands.\");\n                                     break;\n-                                    \n+\n                                 case -4:\n                                     cm.sendOk(\"Pardon my rudiness, but the garments are a essential part of the ceremony. Please #rsuit yourself properly#k for a wedding.\");\n                                     break;\n@@ -392,7 +401,7 @@ function action(mode, type, selection) {\n                                 case 3:\n                                     cm.sendOk(\"It seems your partner don't have the #r#t4000313##k given at the entrance... Please find it, I can't marry you without that item in hands.\");\n                                     break;\n-                                \n+\n                                 case 4:\n                                     cm.sendOk(\"It seems your partner is not properly dressed for the wedding... Pardon my rudiness, but the garments are a essential part of the ceremony.\");\n                                     break;"}, {"sha": "ec23bcf5fb7c3a38137346008b3c49cdb17287a1", "filename": "scripts/npc/9201006.js", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/9201006.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/9201006.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9201006.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -50,6 +50,7 @@ function action(mode, type, selection) {\n     var eim = cm.getEventInstance();\n     if(eim == null) {\n         cm.warp(680000000,0);\n+        //cm.criarLista();\n         cm.dispose();\n         return;\n     }\n@@ -71,7 +72,7 @@ function action(mode, type, selection) {\n                     cm.sendOk(\"Congratulations on your wedding. Please talk to #b#p9201007##k to start the afterparty.\");\n                     cm.dispose();\n                 } else if(hasEngagement) {\n-                    cm.sendOk(\"Please continue with the wedding.\");\n+                    cm.criarLista();\n                     cm.dispose();\n                 } else {\n                     cm.sendOk(\"You do not have the required item to continue through this wedding. Unfortunately, it's over...\");"}, {"sha": "7d1bc9da2f7e0545e9bcd2c771dc40e734005d38", "filename": "scripts/npc/9201014.js", "status": "modified", "additions": 9, "deletions": 59, "changes": 68, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/9201014.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/9201014.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9201014.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -27,75 +27,25 @@\n \t1.0 - First Version by Angel\n         2.0 - Second Version by happydud3 & XotiCraze\n         3.0 - Third Version by RonanLana (HeavenMS)\n+        4.0 - Four Version bby Drago(MapleStorySA)\n ---------------------------------------------------------------------------------------------------\n **/\n-\n-var bgPrizes = [[2022179,10], [2022282,10], [2210005,5], [2210003,5]];\n-var cmPrizes = [[2022011,10], [2000005,50], [2022273,10], [2022179,3]];\n-\n-var status;\n+var status = -1;\n \n function start() {\n     status = -1;\n     action(1, 0, 0);\n }\n \n-function action(mode, type, selection) { \n-    if (mode == -1 || mode == 0) {\n-        cm.sendOk(\"Goodbye then.\"); \n-        cm.dispose();\n-        return;\n-    } else if (mode == 1) {\n+function action(mode, type, selection) {\n+    if (mode == 1) {\n         status++;\n     } else {\n-        status--;\n+        cm.dispose();\n+        return;\n     }\n-\t\t\n     if (status == 0) {\n-        var msg = \"Hello I exchange Onyx Chest for Bride and Groom and the Onyx Chest for prizes!#b\";\n-        var choice1 = new Array(\"I have an Onyx Chest for Bride and Groom\", \"I have an Onyx Chest\");\n-        for (var i = 0; i < choice1.length; i++) {\n-            msg += \"\\r\\n#L\" + i + \"#\" + choice1[i] + \"#l\";\n-        }\n-        cm.sendSimple(msg);\n-    } else if (status == 1) {\n-        if (selection == 0) {\n-            if (cm.haveItem(4031424)) {\n-                if (cm.getPlayer().isMarried()) {   // thanks MedicOP for solving an issue here\n-                    if(cm.getInventory(2).getNextFreeSlot() >= 0) {\n-                        var rand = Math.floor(Math.random() * bgPrizes.length);\n-                        cm.gainItem(bgPrizes[rand][0], bgPrizes[rand][1]);\n-\n-                        cm.gainItem(4031424,-1);\n-                        cm.dispose();\n-                    } else {\n-                        cm.sendOk(\"You don't have a free USE slot right now.\");\n-                        cm.dispose();\n-                    }\n-                } else {\n-                    cm.sendOk(\"You must be married to claim the prize for this box.\");\n-                    cm.dispose();\n-                }\n-            } else {\n-                cm.sendOk(\"You don't have an Onyx Chest for Bride and Groom.\");\n-                cm.dispose();\n-            }\n-        } else if (selection == 1) {\n-            if (cm.haveItem(4031423)) {\n-                if(cm.getInventory(2).getNextFreeSlot() >= 0) {\n-                    var rand = Math.floor(Math.random() * cmPrizes.length);\n-                    cm.gainItem(cmPrizes[rand][0], cmPrizes[rand][1]);\n-\n-                    cm.gainItem(4031423,-1);\n-                    cm.dispose();\n-                } else {\n-                    cm.sendOk(\"You don't have a free USE slot right now.\");\n-                    cm.dispose();\n-                }\n-            } else {\n-                cm.sendOk(\"You don't have an Onyx Chest.\");\n-                cm.dispose();\n-            }\n-        }\n+        cm.enviarLista();\n+        cm.dispose();\n     }\n-} \n+}\n\\ No newline at end of file"}, {"sha": "2a1fe89c04efab92dc663fddebdebe987e7d700f", "filename": "scripts/npc/cpqchallenge.js", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/cpqchallenge.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/cpqchallenge.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/cpqchallenge.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,54 @@\n+/* global cm */\n+\n+var status = 0;\n+var party;\n+\n+function start(chrs) {\n+    status = -1;\n+    party = chrs;\n+    action(1, 0, 0);\n+}\n+\n+function action(mode, type, selection) {\n+    if (mode == -1) {\n+        cm.getChar().setChallenged(false);\n+        cm.dispose();\n+    } else {\n+        if (mode == 0) {\n+            cm.sendOk(\"Come back once you have thought about it some more.\");\n+            cm.getChar().setChallenged(false);\n+            cm.dispose();\n+            return;\n+        }\n+    }\n+    if (mode == -1)\n+        cm.dispose();\n+    else {\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        if (status == 0) {\n+            if (cm.getParty().getMembers().size() == party.size()) {\n+                cm.getPlayer().setChallenged(true);\n+                var snd = \"\";\n+                for (var i = 0; i < party.size(); i++)\n+                    snd += \"#bNome: \" + party.get(i).getName() + \" / (Level: \" + party.get(i).getLevel() + \") / \" + party.get(i).getJobNameById(party.get(i).getJobId()) + \"#k\\r\\n\\r\\n\";\n+                cm.sendAcceptDecline(snd + \"Gostaria de lutar contra este grupo no Festival de Monstros?\");\n+            } else {\n+                return;\n+            }\n+        } else if (status == 1) {\n+            var ch = cm.getChrById(party.get(0).getId());\n+            if (party.size() == cm.getParty().getMembers().size()) {\n+                cm.startCPQ(ch, ch.getMapId() + 1);\n+                ch.getParty().setEnemy(cm.getPlayer().getParty());\n+                cm.getChar().getParty().setEnemy(ch.getParty());\n+                cm.getChar().setChallenged(false);\n+            } else {\n+                cm.sendOk(\"O numero de players entre os times n\ufffdo esta igual.\");\n+            }\n+            cm.dispose();\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "8795e8467acfcf081d9fc5988d3de9ee205781a0", "filename": "scripts/npc/cpqchallenge2.js", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/cpqchallenge2.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/npc/cpqchallenge2.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/cpqchallenge2.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,48 @@\n+var status = 0;\n+var party;\n+\n+function start(chrs) {\n+    status = -1;\n+    party = chrs;\n+    action(1, 0, 0);\n+}\n+\n+function action(mode, type, selection) {\n+    if (mode == -1) {\n+        cm.getChar().setChallenged(false);\n+        cm.dispose();\n+    } else {\n+        if (mode == 0) {\n+            cm.sendOk(\"Come back once you have thought about it some more.\");\n+            cm.getChar().setChallenged(false);\n+            cm.dispose();\n+            return;\n+        }\n+    }\n+    if (mode == -1)\n+        cm.dispose();\n+    else {\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        if (status == 0) {\n+            if (cm.getParty().getMembers().size() == party.size()) {\n+                cm.getPlayer().setChallenged(true);\n+                var snd = \"\";\n+                for (var i = 0; i < party.size(); i++)\n+                    snd += \"#bNome: \" + party.get(i).getName() + \" / (Level: \" + party.get(i).getLevel() + \") / \" + party.get(i).getJobNameById(party.get(i).getJobId()) + \"#k\\r\\n\\r\\n\";\n+                cm.sendAcceptDecline(snd + \"Gostaria de lutar contra este grupo no Festival de Monstros?\");\n+            } else {\n+                return;\n+            }\n+        } else if (status == 1) {\n+            var ch = cm.getChrById(party.get(0).getId());\n+            cm.startCPQ2(ch, ch.getMapId() + 1);\n+            ch.getParty().setEnemy(cm.getPlayer().getParty());\n+            cm.getChar().getParty().setEnemy(ch.getParty());\n+            cm.getChar().setChallenged(false);\n+            cm.dispose();\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "07e40027291b44e88768414000fff27004a755cb", "filename": "scripts/portal/MC2revive.js", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MC2revive.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MC2revive.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/MC2revive.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,8 @@\n+function enter(pi) {\n+    if ( pi.getPlayer().getTeam() == 0 ) {\n+\tpi.warp( pi.getMapId() - 100);\n+    } else {\n+\tpi.warp( pi.getMapId() - 100);\n+    }\n+    return true;\n+}\n\\ No newline at end of file"}, {"sha": "6b83b15910eb472dc9845cd4933a2e54347dc6d2", "filename": "scripts/portal/MCRevive1.js", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive1.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive1.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/MCRevive1.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,10 @@\n+importPackage(Packages.server.maps);\n+\n+/*\n+ [CelticMS] Monster Carnival Reviving Field 1\n+ */\n+\n+function enter(pi) {\n+    pi.warp(980000101, 0);\n+    return true;\n+}"}, {"sha": "333958c6d2f774d70871095bd44aa55b2c933f9f", "filename": "scripts/portal/MCRevive2.js", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive2.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive2.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/MCRevive2.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,10 @@\n+importPackage(Packages.server.maps);\n+\n+/*\n+ [CelticMS] Monster Carnival Reviving Field 1\n+ */\n+\n+function enter(pi) {\n+    pi.warp(980000201, 0);\n+    return true;\n+}"}, {"sha": "2ec50bacda94f2240e1c95982201c66a91387396", "filename": "scripts/portal/MCRevive3.js", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive3.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive3.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/MCRevive3.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,19 @@\n+importPackage(Packages.server.maps);\n+\n+/*\n+[CelticMS] Monster Carnival Reviving Field 1\n+*/\n+\n+function enter(pi) {\n+\tvar portal = 0;\n+\tswitch (pi.getPlayer().getTeam()) {\n+\t\tcase 0:\n+\t\t\tportal = 4;\n+\t\t\tbreak;\n+\t\tcase 1:\n+\t\t\tportal = 3;\n+\t\t\tbreak;\n+\t}\n+\tpi.warp(980000301, portal);\n+\treturn true;\n+}"}, {"sha": "95fc0f1ad7eda6090637fee7b2a57476fc68ba4f", "filename": "scripts/portal/MCRevive4.js", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive4.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive4.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/MCRevive4.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,19 @@\n+importPackage(Packages.server.maps);\n+\n+/*\n+[CelticMS] Monster Carnival Reviving Field 1\n+*/\n+\n+function enter(pi) {\n+\tvar portal = 0;\n+\tswitch (pi.getPlayer().getTeam()) {\n+\t\tcase 0:\n+\t\t\tportal = 4;\n+\t\t\tbreak;\n+\t\tcase 1:\n+\t\t\tportal = 3;\n+\t\t\tbreak;\n+\t}\n+\tpi.warp(980000401, portal);\n+\treturn true;\n+}"}, {"sha": "7ced4ab4beafe71be9545c44fabfcae2363020ee", "filename": "scripts/portal/MCRevive5.js", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive5.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive5.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/MCRevive5.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,10 @@\n+importPackage(Packages.server.maps);\n+\n+/*\n+[CelticMS] Monster Carnival Reviving Field 1\n+*/\n+\n+function enter(pi) {\n+\tpi.warp(980000501, 0);\n+\treturn true;\n+}"}, {"sha": "26c1a63ca06b5c758b1d3a48a321d6007212300f", "filename": "scripts/portal/MCRevive6.js", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive6.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/MCRevive6.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/MCRevive6.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,10 @@\n+importPackage(Packages.server.maps);\n+\n+/*\n+[CelticMS] Monster Carnival Reviving Field 1\n+*/\n+\n+function enter(pi) {\n+\tpi.warp(980000601, 0);\n+\treturn true;\n+}"}, {"sha": "cc38a8f14b2861fde7d0c32083a606bd87c2262d", "filename": "scripts/portal/mc_out.js", "status": "modified", "additions": 27, "deletions": 20, "changes": 47, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/mc_out.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/portal/mc_out.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/mc_out.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,28 +1,35 @@\n /*\n-\tThis file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc> \n-                       Matthias Butz <matze@odinms.de>\n-                       Jan Christian Meyer <vimes@odinms.de>\n+ This file is part of the OdinMS Maple Story Server\n+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc> \n+ Matthias Butz <matze@odinms.de>\n+ Jan Christian Meyer <vimes@odinms.de>\n+ \n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License version 3\n+ as published by the Free Software Foundation. You may not use, modify\n+ or distribute this program under any other version of the\n+ GNU Affero General Public License.\n+ \n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+ \n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n \n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License version 3\n-    as published by the Free Software Foundation. You may not use, modify\n-    or distribute this program under any other version of the\n-    GNU Affero General Public License.\n+importPackage(Packages.server.maps);\n \n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n /*\n-Author: kevintjuh93\n-*/ \n+ */\n \n function enter(pi) {\n-    pi.playPortalSound(); pi.warp(pi.getPlayer().getSavedLocation(\"MIRROR\"));\n+    var returnMap = pi.getPlayer().getSavedLocation(\"MONSTER_CARNIVAL\");\n+    if (returnMap < 0) {\n+        returnMap = 102000000; // Just Incase there is no saved location.\n+    }\n+    var target = pi.getPlayer().getClient().getChannelServer().getMapFactory().getMap(returnMap);\n+    pi.getPlayer().changeMap(target);\n     return true;\n }\n\\ No newline at end of file"}, {"sha": "278c67dfea33c044c8a364f4ddaad26a92f31626", "filename": "scripts/reactor/9980000.js", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/reactor/9980000.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/reactor/9980000.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/reactor/9980000.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,28 +1,3 @@\n-/* \n- * This file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc> \n-                       Matthias Butz <matze@odinms.de>\n-                       Jan Christian Meyer <vimes@odinms.de>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License version 3\n-    as published by the Free Software Foundation. You may not use, modify\n-    or distribute this program under any other version of the\n-    GNU Affero General Public License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n- */\n-\n-/*\n-@Author kevintjuh93\n-*/\n-\n function act() {\n-        rm.getReactor().removeMonsterStatus();\n+    rm.dispelAllMonsters(parseInt(rm.getReactor().getName().substring(1,2)), parseInt(rm.getReactor().getName().substring(0,1)));\n }\n\\ No newline at end of file"}, {"sha": "278c67dfea33c044c8a364f4ddaad26a92f31626", "filename": "scripts/reactor/9980001.js", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/reactor/9980001.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/scripts/reactor/9980001.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/reactor/9980001.js?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,28 +1,3 @@\n-/* \n- * This file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc> \n-                       Matthias Butz <matze@odinms.de>\n-                       Jan Christian Meyer <vimes@odinms.de>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License version 3\n-    as published by the Free Software Foundation. You may not use, modify\n-    or distribute this program under any other version of the\n-    GNU Affero General Public License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n- */\n-\n-/*\n-@Author kevintjuh93\n-*/\n-\n function act() {\n-        rm.getReactor().removeMonsterStatus();\n+    rm.dispelAllMonsters(parseInt(rm.getReactor().getName().substring(1,2)), parseInt(rm.getReactor().getName().substring(0,1)));\n }\n\\ No newline at end of file"}, {"sha": "cba5708fd741b178ac23be3131ce95f0360bef31", "filename": "sql/db_database.sql", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/sql/db_database.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/sql/db_database.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_database.sql?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -42,6 +42,7 @@ CREATE TABLE IF NOT EXISTS `accounts` (\n   `rewardpoints` int(11) NOT NULL DEFAULT '0',\n   `votepoints` int(11) NOT NULL DEFAULT '0',\n   `hwid` varchar(12) NOT NULL DEFAULT '',\n+  `lingua` int(1) NOT NULL DEFAULT '2',\n   PRIMARY KEY (`id`),\n   UNIQUE KEY `name` (`name`),\n   KEY `ranking1` (`id`,`banned`),\n@@ -17452,7 +17453,7 @@ CREATE TABLE IF NOT EXISTS `rings` (\n CREATE TABLE IF NOT EXISTS `savedlocations` (\n   `id` int(11) NOT NULL AUTO_INCREMENT,\n   `characterid` int(11) NOT NULL,\n-  `locationtype` enum('FREE_MARKET','WORLDTOUR','FLORINA','INTRO','SUNDAY_MARKET','MIRROR','EVENT','BOSSPQ','HAPPYVILLE','DEVELOPER') NOT NULL,\n+  `locationtype` enum('FREE_MARKET','WORLDTOUR','FLORINA','INTRO','SUNDAY_MARKET','MIRROR','EVENT','BOSSPQ','HAPPYVILLE','DEVELOPER','MONSTER_CARNIVAL') NOT NULL,\n   `map` int(11) NOT NULL,\n   `portal` int(11) NOT NULL,\n   PRIMARY KEY (`id`)"}, {"sha": "818514ab6902cdab58a4f2040ba223e1ac444f93", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 483, "deletions": 210, "changes": 693, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -130,6 +130,7 @@\n import constants.ExpTable;\n import constants.GameConstants;\n import constants.ItemConstants;\n+import constants.LinguaConstants;\n import constants.ServerConstants;\n import constants.skills.Aran;\n import constants.skills.Beginner;\n@@ -276,6 +277,7 @@\n     private ScheduledFuture<?> extraRecoveryTask = null;\n     private ScheduledFuture<?> chairRecoveryTask = null;\n     private ScheduledFuture<?> pendantOfSpirit = null; //1122017\n+    public ScheduledFuture<?> timer;\n     private Lock chrLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHARACTER_CHR, true);\n     private Lock evtLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHARACTER_EVT, true);\n     private Lock petLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHARACTER_PET, true);\n@@ -387,24 +389,22 @@ private static MapleJob getJobStyleInternal(int jobid, byte opt) {\n         \n         if(jobtype == MapleJob.WARRIOR.getId() / 100 || jobtype == MapleJob.DAWNWARRIOR1.getId() / 100 || jobtype == MapleJob.ARAN1.getId() / 100) {\n             return(MapleJob.WARRIOR);\n-        }\n-        \n-        else if(jobtype == MapleJob.MAGICIAN.getId() / 100 || jobtype == MapleJob.BLAZEWIZARD1.getId() / 100 || jobtype == MapleJob.EVAN1.getId() / 100) {\n+        } else if(jobtype == MapleJob.MAGICIAN.getId() / 100 || jobtype == MapleJob.BLAZEWIZARD1.getId() / 100 || jobtype == MapleJob.EVAN1.getId() / 100) {\n             return(MapleJob.MAGICIAN);\n-        }\n-        \n-        else if(jobtype == MapleJob.BOWMAN.getId() / 100 || jobtype == MapleJob.WINDARCHER1.getId() / 100) {\n-            if(jobid / 10 == MapleJob.CROSSBOWMAN.getId() / 10) return(MapleJob.CROSSBOWMAN);\n-            else return(MapleJob.BOWMAN);\n-        }\n-        \n-        else if(jobtype == MapleJob.THIEF.getId() / 100 || jobtype == MapleJob.NIGHTWALKER1.getId() / 100) {\n+        } else if(jobtype == MapleJob.BOWMAN.getId() / 100 || jobtype == MapleJob.WINDARCHER1.getId() / 100) {\n+            if(jobid / 10 == MapleJob.CROSSBOWMAN.getId() / 10) {\n+                return(MapleJob.CROSSBOWMAN);\n+            } else {\n+                return(MapleJob.BOWMAN);\n+            }\n+        } else if(jobtype == MapleJob.THIEF.getId() / 100 || jobtype == MapleJob.NIGHTWALKER1.getId() / 100) {\n             return(MapleJob.THIEF);\n-        }\n-        \n-        else if(jobtype == MapleJob.PIRATE.getId() / 100 || jobtype == MapleJob.THUNDERBREAKER1.getId() / 100) {\n-            if(opt == (byte) 0x80) return(MapleJob.BRAWLER);\n-            else return(MapleJob.GUNSLINGER);\n+        } else if(jobtype == MapleJob.PIRATE.getId() / 100 || jobtype == MapleJob.THUNDERBREAKER1.getId() / 100) {\n+            if(opt == (byte) 0x80) {\n+                return(MapleJob.BRAWLER);\n+            } else {\n+                return(MapleJob.GUNSLINGER);\n+            }\n         }\n         \n         return(MapleJob.BEGINNER);\n@@ -450,8 +450,7 @@ public static MapleCharacter getDefault(MapleClient c) {\n             selectedKey = GameConstants.getCustomKey(true);\n             selectedType = GameConstants.getCustomType(true);\n             selectedAction = GameConstants.getCustomAction(true);\n-        }\n-        else {\n+        } else {\n             selectedKey = GameConstants.getCustomKey(false);\n             selectedType = GameConstants.getCustomType(false);\n             selectedAction = GameConstants.getCustomAction(false);\n@@ -919,7 +918,9 @@ public void setHasSandboxItem() {\n     }\n     \n     public void removeSandboxItems() {  // sandbox idea thanks to Morty\n-        if(!hasSandboxItem) return;\n+        if (!hasSandboxItem) {\n+            return;\n+        }\n         \n         MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n         for(MapleInventoryType invType : MapleInventoryType.values()) {\n@@ -1027,7 +1028,9 @@ public void setMasteries(int jobId) {\n             if (skillId != 0) {\n                 Skill skill = SkillFactory.getSkill(skillId);\n                 final int skilllevel = getSkillLevel(skill);\n-                if(skilllevel > 0) continue;\n+                if (skilllevel > 0) {\n+                    continue;\n+                }\n                 \n                 changeSkillLevel(skill, (byte) 0, 10, -1);\n             }\n@@ -1211,12 +1214,16 @@ public void warpAhead(int map) {\n     \n     private void eventChangedMap(int map) {\n         EventInstanceManager eim = getEventInstance();\n-        if (eim != null) eim.changedMap(this, map);\n+        if (eim != null) {\n+            eim.changedMap(this, map);\n+        }\n     }\n     \n     private void eventAfterChangedMap(int map) {\n         EventInstanceManager eim = getEventInstance();\n-        if (eim != null) eim.afterChangedMap(this, map);\n+        if (eim != null) {\n+            eim.afterChangedMap(this, map);\n+        }\n     }\n     \n     public boolean canRecoverLastBanish() {\n@@ -1242,15 +1249,19 @@ public void setBanishPlayerData(int banishMap, int banishSp, long banishTime) {\n     public void changeMapBanish(int mapid, String portal, String msg) {\n         if(ServerConstants.USE_SPIKES_AVOID_BANISH) {\n             for(Item it: this.getInventory(MapleInventoryType.EQUIPPED).list()) {\n-                if((it.getFlag() & ItemConstants.SPIKES) == ItemConstants.SPIKES) return;\n+                if((it.getFlag() & ItemConstants.SPIKES) == ItemConstants.SPIKES) {\n+                    return;\n+                }\n             }\n         }\n         \n         int banMap = this.getMapId();\n         int banSp = this.getMap().findClosestPlayerSpawnpoint(this.getPosition()).getId();\n         long banTime = System.currentTimeMillis();\n         \n-        if (msg != null) dropMessage(5, msg);\n+        if (msg != null) {\n+            dropMessage(5, msg);\n+        }\n         \n         MapleMap map_ = getWarpMap(mapid);\n         MaplePortal portal_ = map_.getPortal(portal);\n@@ -1328,7 +1339,9 @@ public void changeMap(final MapleMap target, final MaplePortal pto) {\n         canWarpMap = false;\n         \n         canWarpCounter--;\n-        if(canWarpCounter == 0) canWarpMap = true;\n+        if(canWarpCounter == 0) {\n+            canWarpMap = true;\n+        }\n         \n         eventAfterChangedMap(this.getMapId());\n     }\n@@ -1342,7 +1355,9 @@ public void changeMap(final MapleMap target, final Point pos) {\n         canWarpMap = false;\n         \n         canWarpCounter--;\n-        if(canWarpCounter == 0) canWarpMap = true;\n+        if(canWarpCounter == 0) {\n+            canWarpMap = true;\n+        }\n         \n         eventAfterChangedMap(this.getMapId());\n     }\n@@ -1372,7 +1387,9 @@ public void forceChangeMap(final MapleMap target, final MaplePortal pto) {\n         canWarpMap = false;\n         \n         canWarpCounter--;\n-        if(canWarpCounter == 0) canWarpMap = true;\n+        if(canWarpCounter == 0) {\n+            canWarpMap = true;\n+        }\n         \n         eventAfterChangedMap(this.getMapId());\n     }\n@@ -1590,7 +1607,9 @@ public void removeIncomingInvites() {\n     }\n \n     private void changeMapInternal(final MapleMap to, final Point pos, final byte[] warpPacket) {\n-        if(!canWarpMap) return;\n+        if (!canWarpMap) {\n+            return;\n+        }\n         \n         this.mapTransitioning.set(true);\n         \n@@ -1599,6 +1618,12 @@ private void changeMapInternal(final MapleMap to, final Point pos, final byte[]\n         MapleTrade.cancelTrade(this, MapleTrade.TradeResult.UNSUCCESSFUL_ANOTHER_MAP);\n         this.closePlayerInteractions();\n         \n+        MapleParty e = null;\n+        if (this.getParty() != null && this.getParty().getEnemy() != null) {\n+            e = this.getParty().getEnemy();\n+        }\n+        final MapleParty k = e;\n+        \n         client.announce(warpPacket);\n         map.removePlayer(this);\n         if (client.getChannelServer().getPlayerStorage().getCharacterById(getId()) != null) {\n@@ -1617,9 +1642,14 @@ private void changeMapInternal(final MapleMap to, final Point pos, final byte[]\n             } finally {\n                 prtLock.unlock();\n             }\n+            if (MapleCharacter.this.getParty() != null) {\n+                MapleCharacter.this.getParty().setEnemy(k);\n+            }\n             silentPartyUpdateInternal(getParty());  // EIM script calls inside\n             \n-            if (getMap().getHPDec() > 0) resetHpDecreaseTask();\n+            if (getMap().getHPDec() > 0) {\n+                resetHpDecreaseTask();\n+            }\n         } else {\n             FilePrinter.printError(FilePrinter.MAPLE_MAP, \"Character \" + this.getName() + \" got stuck when moving to map \" + map.getId() + \".\");\n         }\n@@ -1702,11 +1732,16 @@ public void checkBerserk(final boolean isHidden) {\n                 berserkSchedule = TimerManager.getInstance().register(new Runnable() {\n                     @Override\n                     public void run() {\n-                        if(awayFromWorld.get()) return;\n+                        if (awayFromWorld.get()) {\n+                            return;\n+                        }\n                         \n                         client.announce(MaplePacketCreator.showOwnBerserk(skilllevel, berserk));\n-                        if(!isHidden) getMap().broadcastMessage(MapleCharacter.this, MaplePacketCreator.showBerserk(getId(), skilllevel, berserk), false);\n-                        else getMap().broadcastGMMessage(MapleCharacter.this, MaplePacketCreator.showBerserk(getId(), skilllevel, berserk), false);\n+                        if (!isHidden) {\n+                            getMap().broadcastMessage(MapleCharacter.this, MaplePacketCreator.showBerserk(getId(), skilllevel, berserk), false);\n+                        } else {\n+                            getMap().broadcastGMMessage(MapleCharacter.this, MaplePacketCreator.showBerserk(getId(), skilllevel, berserk), false);\n+                        }\n                     }\n                 }, 5000, 3000);\n             }\n@@ -2111,7 +2146,9 @@ public static boolean deleteCharFromDB(MapleCharacter player, int senderAccId) {\n                             }\n                     }\n                     \n-                    if(con.isClosed()) con = DatabaseConnection.getConnection();    //wtf tho\n+                    if (con.isClosed()) {   //wtf tho\n+                        con = DatabaseConnection.getConnection();\n+                    }\n \n                     try (PreparedStatement ps = con.prepareStatement(\"DELETE FROM wishlists WHERE charid = ?\")) {\n                             ps.setInt(1, cid);\n@@ -2323,7 +2360,9 @@ private void updateChairHealStats() {\n     }\n     \n     private void startChairTask() {\n-        if (chair.get() == 0) return;\n+        if (chair.get() == 0) {\n+            return;\n+        }\n         \n         int healInterval;\n         effLock.lock();\n@@ -2504,7 +2543,9 @@ public void announceDiseases() {\n         chrLock.lock();\n         try {\n             // Poison damage visibility and diseases status visibility, extended through map transitions thanks to Ronan\n-            if(!this.isLoggedinWorld()) return;\n+            if (!this.isLoggedinWorld()) {\n+                return;\n+            }\n             \n             chrDiseases = new LinkedHashSet<>(diseases.entrySet());\n         } finally {\n@@ -2516,8 +2557,11 @@ public void announceDiseases() {\n             MobSkill skill = di.getValue().getRight();\n             final List<Pair<MapleDisease, Integer>> debuff = Collections.singletonList(new Pair<>(disease, Integer.valueOf(skill.getX())));\n \n-            if(disease != MapleDisease.SLOW) map.broadcastMessage(MaplePacketCreator.giveForeignDebuff(id, debuff, skill));\n-            else map.broadcastMessage(MaplePacketCreator.giveForeignSlowDebuff(id, debuff, skill));\n+            if (disease != MapleDisease.SLOW) {\n+                map.broadcastMessage(MaplePacketCreator.giveForeignDebuff(id, debuff, skill));\n+            } else {\n+                map.broadcastMessage(MaplePacketCreator.giveForeignSlowDebuff(id, debuff, skill));\n+            }\n         }\n     }\n     \n@@ -2545,8 +2589,11 @@ public void giveDebuff(final MapleDisease disease, MobSkill skill) {\n             final List<Pair<MapleDisease, Integer>> debuff = Collections.singletonList(new Pair<>(disease, Integer.valueOf(skill.getX())));\n             client.announce(MaplePacketCreator.giveDebuff(debuff, skill));\n             \n-            if(disease != MapleDisease.SLOW) map.broadcastMessage(this, MaplePacketCreator.giveForeignDebuff(id, debuff, skill), false);\n-            else map.broadcastMessage(this, MaplePacketCreator.giveForeignSlowDebuff(id, debuff, skill), false);\n+            if (disease != MapleDisease.SLOW) {\n+                map.broadcastMessage(this, MaplePacketCreator.giveForeignDebuff(id, debuff, skill), false);\n+            } else {\n+                map.broadcastMessage(this, MaplePacketCreator.giveForeignSlowDebuff(id, debuff, skill), false);\n+            }\n         }\n     }\n \n@@ -2555,8 +2602,11 @@ public void dispelDebuff(MapleDisease debuff) {\n             long mask = debuff.getValue();\n             announce(MaplePacketCreator.cancelDebuff(mask));\n             \n-            if(debuff != MapleDisease.SLOW) map.broadcastMessage(this, MaplePacketCreator.cancelForeignDebuff(id, mask), false);\n-            else map.broadcastMessage(this, MaplePacketCreator.cancelForeignSlowDebuff(id), false);\n+            if (debuff != MapleDisease.SLOW) {\n+                map.broadcastMessage(this, MaplePacketCreator.cancelForeignDebuff(id, mask), false);\n+            } else {\n+                map.broadcastMessage(this, MaplePacketCreator.cancelForeignSlowDebuff(id), false);\n+            }\n \n             chrLock.lock();\n             try {\n@@ -2871,6 +2921,7 @@ public void run() {\n     }\n \n     public enum FameStatus {\n+        \n         OK, NOT_TODAY, NOT_THIS_MONTH\n     }\n \n@@ -2920,8 +2971,14 @@ public void gainExp(int gain, int party, boolean show, boolean inChat, boolean w\n             party *= 0.5;\n         }\n \t\n-        if(gain < 0) gain = Integer.MAX_VALUE;   // integer overflow, heh.\n-        if(party < 0) party = Integer.MAX_VALUE;   // integer overflow, heh.\n+        if(gain < 0) {\n+            gain = Integer.MAX_VALUE;   // integer overflow, heh.\n+        }\n+        \n+        if(party < 0) {\n+            party = Integer.MAX_VALUE;  // integer overflow, heh.\n+        }\n+        \n         int equip = (int) Math.min((long)(gain / 10) * pendantExp, Integer.MAX_VALUE);\n         \n         long total = (long) gain + equip + party;\n@@ -3348,7 +3405,9 @@ private MapleBuffStatValueHolder fetchBestEffectFromItemEffectHolder(MapleBuffSt\n             }\n         }\n         \n-        if(mbsvh != null) effects.put(mbs, mbsvh);\n+        if(mbsvh != null) {\n+            effects.put(mbs, mbsvh);\n+        }\n         return mbsvh;\n     }\n     \n@@ -3576,7 +3635,9 @@ private void updateEffects(Set<MapleBuffStat> removedStats) {\n             Map<Integer, Pair<MapleStatEffect, Long>> bestEffects = new LinkedHashMap<>();\n             Set<MapleBuffStat> retrievedStats = new LinkedHashSet<>();\n             for(Entry<MapleBuffStat, Pair<Integer, Integer>> lmsee: maxStatups.entrySet()) {\n-                if(isSingletonStatup(lmsee.getKey())) continue;\n+                if(isSingletonStatup(lmsee.getKey())) {\n+                    continue;\n+                }\n                 \n                 Integer srcid = lmsee.getValue().getLeft();\n                 if(!bestEffects.containsKey(srcid)) {\n@@ -3668,7 +3729,9 @@ private boolean cancelEffect(MapleStatEffect effect, boolean overwrite, long sta\n                 chrLock.unlock();\n             }\n             \n-            for(MapleBuffStat mbs : cancelStats) removedStats.add(mbs);\n+            for(MapleBuffStat mbs : cancelStats) {\n+                removedStats.add(mbs);\n+            }\n             cancelPlayerBuffs(cancelStats);\n         }\n         \n@@ -3755,7 +3818,9 @@ public void cancelBuffStats(MapleBuffStat stat) {\n                     \n                     if(b != null) {\n                         stats.put(mbs, (byte) (b + 1));\n-                        if(mbsvhe.getValue().value < minStatBuffs.get(mbs).value) minStatBuffs.put(mbs, mbsvhe.getValue());\n+                        if(mbsvhe.getValue().value < minStatBuffs.get(mbs).value) {\n+                            minStatBuffs.put(mbs, mbsvhe.getValue());\n+                        }\n                     } else {\n                         stats.put(mbs, (byte) 1);\n                         minStatBuffs.put(mbs, mbsvhe.getValue());\n@@ -3778,7 +3843,9 @@ public void cancelBuffStats(MapleBuffStat stat) {\n                     lpbe.remove(it.getKey());\n                     buffEffectsCount.put(it.getKey(), (byte)(buffEffectsCount.get(it.getKey()) - 1));\n                     \n-                    if(lpbe.isEmpty()) buffEffects.remove(mbsvh.effect.getBuffSourceId());\n+                    if(lpbe.isEmpty()) {\n+                        buffEffects.remove(mbsvh.effect.getBuffSourceId());\n+                    }\n                     extractedStatBuffs.put(it.getKey(), mbsvh);\n                 }\n             }\n@@ -3790,7 +3857,9 @@ public void cancelBuffStats(MapleBuffStat stat) {\n     }\n     \n     private void propagateBuffEffectUpdates(Map<Integer, Pair<MapleStatEffect, Long>> retrievedEffects, Set<MapleBuffStat> retrievedStats) {\n-        if(retrievedStats.isEmpty()) return;\n+        if (retrievedStats.isEmpty()) {\n+            return;\n+        }\n         \n         Map<MapleBuffStat, Pair<Integer, MapleStatEffect>> maxBuffValue = new LinkedHashMap<>();\n         for(MapleBuffStat mbs : retrievedStats) {\n@@ -3822,9 +3891,13 @@ private void propagateBuffEffectUpdates(Map<Integer, Pair<MapleStatEffect, Long>\n                     \n                     boolean relevantStatup = true;\n                     if(mbs == MapleBuffStat.WATK) {  // not relevant for mages\n-                        if(mageJob) relevantStatup = false;\n+                        if(mageJob) {\n+                            relevantStatup = false;\n+                        }\n                     } else if(mbs == MapleBuffStat.MATK) { // not relevant for non-mages\n-                        if(!mageJob) relevantStatup = false;\n+                        if(!mageJob) {\n+                            relevantStatup = false;\n+                        }\n                     }\n                     \n                     Pair<Integer, MapleStatEffect> mbv = maxBuffValue.get(mbs);\n@@ -3861,18 +3934,17 @@ private void propagateBuffEffectUpdates(Map<Integer, Pair<MapleStatEffect, Long>\n             updateEffectsList.add(new Pair<>(ue.getKey(), ue.getValue()));\n         }\n         \n-        Collections.sort(updateEffectsList, new Comparator<Pair<MapleStatEffect, Pair<Integer, Integer>>>()\n+        Collections.sort(updateEffectsList, new Comparator<Pair<MapleStatEffect, Pair<Integer, Integer>>>() {\n+            @Override\n+            public int compare(Pair<MapleStatEffect, Pair<Integer, Integer>> o1, Pair<MapleStatEffect, Pair<Integer, Integer>> o2)\n             {\n-                @Override\n-                public int compare( Pair<MapleStatEffect, Pair<Integer, Integer>> o1, Pair<MapleStatEffect, Pair<Integer, Integer>> o2 )\n-                {\n-                    if(o1.getRight().getLeft().equals(o2.getRight().getLeft())) {\n-                        return o1.getRight().getRight().compareTo(o2.getRight().getRight());\n-                    } else {\n-                        return o1.getRight().getLeft().compareTo(o2.getRight().getLeft());\n-                    }\n+                if(o1.getRight().getLeft().equals(o2.getRight().getLeft())) {\n+                    return o1.getRight().getRight().compareTo(o2.getRight().getRight());\n+                } else {\n+                    return o1.getRight().getLeft().compareTo(o2.getRight().getLeft());\n                 }\n-            });\n+            }\n+        });\n         \n         List<Pair<Integer, Pair<MapleStatEffect, Long>>> toUpdateEffects = new LinkedList<>();\n         for(Pair<MapleStatEffect, Pair<Integer, Integer>> msep : updateEffectsList) {\n@@ -3957,7 +4029,9 @@ public void registerEffect(MapleStatEffect effect, long starttime, long expirati\n                 beholderHealingSchedule = TimerManager.getInstance().register(new Runnable() {\n                     @Override\n                     public void run() {\n-                        if(awayFromWorld.get()) return;\n+                        if (awayFromWorld.get()) {\n+                            return;\n+                        }\n                         \n                         addHP(healEffect.getHp());\n                         client.announce(MaplePacketCreator.showOwnBuffEffect(beholder, 2));\n@@ -3973,7 +4047,9 @@ public void run() {\n                 beholderBuffSchedule = TimerManager.getInstance().register(new Runnable() {\n                     @Override\n                     public void run() {\n-                        if(awayFromWorld.get()) return;\n+                        if (awayFromWorld.get()) {\n+                            return;\n+                        }\n                         \n                         buffEffect.applyTo(MapleCharacter.this);\n                         client.announce(MaplePacketCreator.showOwnBuffEffect(beholder, 2));\n@@ -4072,8 +4148,11 @@ public void run() {\n                     }\n                     \n                     Byte val = buffEffectsCount.get(statup.getKey());\n-                    if(val != null) val = (byte)(val + 1);\n-                    else val = (byte) 1;\n+                    if (val != null) {\n+                        val = (byte) (val + 1);\n+                    } else {\n+                        val = (byte) 1;\n+                    }\n                     \n                     buffEffectsCount.put(statup.getKey(), val);\n                 }\n@@ -4090,8 +4169,11 @@ public void run() {\n             } else {\n                 for (Entry<MapleBuffStat, MapleBuffStatValueHolder> statup : appliedStatups.entrySet()) {\n                     Byte val = buffEffectsCount.get(statup.getKey());\n-                    if(val != null) val = (byte)(val + 1);\n-                    else val = (byte) 1;\n+                    if (val != null) {\n+                        val = (byte) (val + 1);\n+                    } else {\n+                        val = (byte) 1;\n+                    }\n                     \n                     buffEffectsCount.put(statup.getKey(), val);\n                 }\n@@ -4123,7 +4205,9 @@ private static int getJobMapChair(MapleJob job) {\n     }\n     \n     public boolean unregisterChairBuff() {\n-        if(!ServerConstants.USE_CHAIR_EXTRAHEAL) return false;\n+        if (!ServerConstants.USE_CHAIR_EXTRAHEAL) {\n+            return false;\n+        }\n         \n         int skillId = getJobMapChair(job);\n         int skillLv = getSkillLevel(skillId);\n@@ -4136,7 +4220,9 @@ public boolean unregisterChairBuff() {\n     }\n     \n     public boolean registerChairBuff() {\n-        if(!ServerConstants.USE_CHAIR_EXTRAHEAL) return false;\n+        if (!ServerConstants.USE_CHAIR_EXTRAHEAL) {\n+            return false;\n+        }\n         \n         int skillId = getJobMapChair(job);\n         int skillLv = getSkillLevel(skillId);\n@@ -4303,8 +4389,11 @@ public void resetExcluded(int petId) {\n         try {\n             Set<Integer> petExclude = excluded.get(petId);\n         \n-            if(petExclude != null) petExclude.clear();\n-            else excluded.put(petId, new LinkedHashSet<Integer>());\n+            if (petExclude != null) {\n+                petExclude.clear();\n+            } else {\n+                excluded.put(petId, new LinkedHashSet<Integer>());\n+            }\n         } finally {\n             chrLock.unlock();\n         }\n@@ -4331,7 +4420,9 @@ public void commitExcludedItems() {\n         \n         for(Map.Entry<Integer, Set<Integer>> pe : petExcluded.entrySet()) {\n             byte petIndex = this.getPetIndex(pe.getKey());\n-            if(petIndex < 0) continue;\n+            if (petIndex < 0) {\n+                continue;\n+            }\n \n             Set<Integer> exclItems = pe.getValue();\n             if (!exclItems.isEmpty()) {\n@@ -4353,7 +4444,9 @@ public void exportExcludedItems(MapleClient c) {\n         Map<Integer, Set<Integer>> petExcluded = this.getExcluded();\n         for(Map.Entry<Integer, Set<Integer>> pe : petExcluded.entrySet()) {\n             byte petIndex = this.getPetIndex(pe.getKey());\n-            if(petIndex < 0) continue;\n+            if (petIndex < 0) {\n+                continue;\n+            }\n \n             Set<Integer> exclItems = pe.getValue();\n             if (!exclItems.isEmpty()) {\n@@ -4615,8 +4708,8 @@ public int getItemEffect() {\n     }\n \n     public boolean haveItemWithId(int itemid, boolean checkEquipped) {\n-        return (inventory[ItemConstants.getInventoryType(itemid).ordinal()].findById(itemid) != null) ||\n-        (checkEquipped && inventory[MapleInventoryType.EQUIPPED.ordinal()].findById(itemid) != null);\n+        return (inventory[ItemConstants.getInventoryType(itemid).ordinal()].findById(itemid) != null)\n+                || (checkEquipped && inventory[MapleInventoryType.EQUIPPED.ordinal()].findById(itemid) != null);\n     }\n     \n     public boolean haveItemEquipped(int itemid) {\n@@ -4997,7 +5090,9 @@ public boolean isPartyMember(int cid) {\n             }\n         }\n         \n-        if(pchars.isEmpty()) pchars.add(this);\n+        if (pchars.isEmpty()) {\n+            pchars.add(this);\n+        }\n         return MapleLootManager.retrieveRelevantDrops(monsterId, pchars);\n     }\n \n@@ -5032,7 +5127,9 @@ public void closeTrade() {\n     \n     public void closePlayerShop() {\n         MaplePlayerShop mps = this.getPlayerShop();\n-        if(mps == null) return;\n+        if (mps == null) {\n+            return;\n+        }\n         \n         if (mps.isOwner(this)) {\n             mps.setOpen(false);\n@@ -5056,7 +5153,9 @@ public void closePlayerShop() {\n     \n     public void closeMiniGame() {\n         MapleMiniGame game = this.getMiniGame();\n-        if(game == null) return;\n+        if (game == null) {\n+            return;\n+        }\n         \n         this.setMiniGame(null);\n         if (game.isOwner(this)) {\n@@ -5069,7 +5168,9 @@ public void closeMiniGame() {\n     \n     public void closeHiredMerchant(boolean closeMerchant) {\n         MapleHiredMerchant merchant = this.getHiredMerchant();\n-        if(merchant == null) return;\n+        if (merchant == null) {\n+            return;\n+        }\n         \n         if (closeMerchant) {\n             if (merchant.isOwner(this) && merchant.getItems().isEmpty()) {\n@@ -5095,7 +5196,9 @@ public void closeHiredMerchant(boolean closeMerchant) {\n     \n     public void closePlayerMessenger() {\n         MapleMessenger m = this.getMessenger();\n-        if(m == null) return;\n+        if (m == null) {\n+            return;\n+        }\n         \n         World w = getWorldServer();\n         MapleMessengerCharacter messengerplayer = new MapleMessengerCharacter(this, this.getMessengerPosition());\n@@ -5115,7 +5218,9 @@ public void closePlayerMessenger() {\n     }\n \n     public MaplePet getPet(int index) {\n-        if(index < 0) return null;\n+        if (index < 0) {\n+            return null;\n+        }\n         \n         petLock.lock();\n         try {\n@@ -5230,7 +5335,9 @@ public final MapleQuestStatus getQuestRemove(final MapleQuest quest) {\n     //---- /\\ /\\ /\\ /\\ /\\ /\\ /\\  NOT TESTED  /\\ /\\ /\\ /\\ /\\ /\\ /\\ /\\ /\\ ----\n     \n     public boolean needQuestItem(int questid, int itemid) {\n-        if (questid <= 0) return true; //For non quest items :3\n+        if (questid <= 0) { //For non quest items :3\n+            return true;\n+        }\n         \n         int amountNeeded, questStatus = this.getQuestStatus(questid);\n         if (questStatus == 0) {\n@@ -5603,7 +5710,9 @@ private int getBuybackFee() {\n         int grade = Math.min(Math.max(level, 30), 120) - 30;\n         \n         fee += (grade * ServerConstants.BUYBACK_LEVEL_STACK_FEE);\n-        if (ServerConstants.USE_BUYBACK_WITH_MESOS) fee *= ServerConstants.BUYBACK_MESO_MULTIPLIER;\n+        if (ServerConstants.USE_BUYBACK_WITH_MESOS) {\n+            fee *= ServerConstants.BUYBACK_MESO_MULTIPLIER;\n+        }\n         \n         return (int) Math.floor(fee);\n     }\n@@ -6010,7 +6119,9 @@ public void run() {\n                     }\n                     \n                     if (party != null) {\n-                        if(partyLeader) party.assignNewLeader(client);\n+                        if(partyLeader) {\n+                            party.assignNewLeader(client);\n+                        }\n                         PartyOperationHandler.leaveParty(party, mpc, client);\n \n                         showHint(\"You have reached #blevel 10#k, therefore you must leave your #rstarter party#k.\");\n@@ -6230,11 +6341,13 @@ private void revertCouponsEffects() {\n \n                 toCommitEffect.add(couponId);\n                 \n-                if(ItemConstants.isExpCoupon(couponId)) setExpCouponRate(couponId, couponQty);\n-                else setDropCouponRate(couponId, couponQty);\n+                if (ItemConstants.isExpCoupon(couponId)) {\n+                    setExpCouponRate(couponId, couponQty);\n+                } else {\n+                    setDropCouponRate(couponId, couponQty);\n+                }\n             }\n-        }\n-        else {\n+        } else {\n             int maxExpRate = 1, maxDropRate = 1, maxExpCouponId = -1, maxDropCouponId = -1;\n             \n             for(Entry<Integer,Integer> coupon: activeCoupons.entrySet()) {\n@@ -6254,8 +6367,12 @@ private void revertCouponsEffects() {\n                 }\n             }\n             \n-            if(maxExpCouponId > -1) toCommitEffect.add(maxExpCouponId);\n-            if(maxDropCouponId > -1) toCommitEffect.add(maxDropCouponId);\n+            if (maxExpCouponId > -1) {\n+                toCommitEffect.add(maxExpCouponId);\n+            }\n+            if (maxDropCouponId > -1) {\n+                toCommitEffect.add(maxDropCouponId);\n+            }\n             \n             this.expCoupon = maxExpRate;\n             this.dropCoupon = maxDropRate;\n@@ -6280,8 +6397,9 @@ private void setActiveCoupons(Collection<Item> cashItems) {\n             if (ItemConstants.isRateCoupon(it.getItemId()) && active.contains(it.getItemId())) {\n                 Integer count = activeCoupons.get(it.getItemId());\n \n-                if(count != null) activeCoupons.put(it.getItemId(), count + 1);\n-                else {\n+                if(count != null) {\n+                    activeCoupons.put(it.getItemId(), count + 1);\n+                } else {\n                     activeCoupons.put(it.getItemId(), 1);\n                     activeCouponRates.put(it.getItemId(), coupons.get(it.getItemId()));\n                 }\n@@ -6290,7 +6408,9 @@ private void setActiveCoupons(Collection<Item> cashItems) {\n     }\n     \n     private void commitBuffCoupon(int couponid) {\n-        if (!isLoggedin() || getCashShop().isOpened()) return;\n+        if (!isLoggedin() || getCashShop().isOpened()) {\n+            return;\n+        }\n         \n         MapleStatEffect mse = ii.getItemEffect(couponid);\n         mse.applyTo(this);\n@@ -6547,7 +6667,9 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool\n                     }\n                 }\n             }\n-            if((sandboxCheck & ItemConstants.SANDBOX) == ItemConstants.SANDBOX) ret.setHasSandboxItem();\n+            if ((sandboxCheck & ItemConstants.SANDBOX) == ItemConstants.SANDBOX) {\n+                ret.setHasSandboxItem();\n+            }\n             \n             World wserv = Server.getInstance().getWorld(ret.world);\n             \n@@ -6775,7 +6897,9 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool\n                 rs = ps.executeQuery();\n                 while (rs.next()) {\n                     final MapleDisease disease = MapleDisease.ordinal(rs.getInt(\"disease\"));\n-                    if(disease == MapleDisease.NULL) continue;\n+                    if (disease == MapleDisease.NULL) {\n+                        continue;\n+                    }\n                     \n                     final int skillid = rs.getInt(\"mobskillid\"), skilllv = rs.getInt(\"mobskilllv\");\n                     final long length = rs.getInt(\"length\");\n@@ -6791,7 +6915,9 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool\n                 ps.setInt(1, ret.getId());\n                 ps.executeUpdate();\n                 ps.close();\n-                if(!loadedDiseases.isEmpty()) Server.getInstance().getPlayerBuffStorage().addDiseasesToStorage(ret.id, loadedDiseases);\n+                if (!loadedDiseases.isEmpty()) {\n+                    Server.getInstance().getPlayerBuffStorage().addDiseasesToStorage(ret.id, loadedDiseases);\n+                }\n                 ps = con.prepareStatement(\"SELECT * FROM skillmacros WHERE characterid = ?\");\n                 ps.setInt(1, charid);\n                 rs = ps.executeQuery();\n@@ -6894,6 +7020,7 @@ public MapleBuffStatValueHolder(MapleStatEffect effect, long startTime, int valu\n     }\n \n     public static class MapleCoolDownValueHolder {\n+        \n         public int skillId;\n         public long startTime, length;\n \n@@ -6951,6 +7078,16 @@ public void mount(int id, int skillid) {\n     }\n \n     private void playerDead() {\n+        if (this.getMap().isCPQMap()) {\n+            int lost = getCP();\n+            if (lost > 6) {\n+                lost = 6;\n+            }\n+            getMap().broadcastMessage(MaplePacketCreator.playerDiedMessage(getName(), lost, getTeam()));\n+            gainCP(-lost);\n+            return;\n+        }\n+        \n         cancelAllBuffs(false);\n         dispelDebuffs();\n         lastDeathtime = Server.getInstance().getCurrentTime();\n@@ -6974,8 +7111,6 @@ private void playerDead() {\n             MapleInventoryManipulator.removeById(client, ItemConstants.getInventoryType(charmID[i]), charmID[i], 1, true, false);\n         } else if (mapid > 925020000 && mapid < 925030000) {\n             this.dojoStage = 0;\n-        } else if (mapid > 980000100 && mapid < 980000700) {\n-            getMap().broadcastMessage(this, MaplePacketCreator.CPQDied(this));\n         } else if (getJob() != MapleJob.BEGINNER) { //Hmm...\n             int XPdummy = ExpTable.getExpNeededForLevel(getLevel());\n             if (getMap().isTown()) {\n@@ -7061,7 +7196,9 @@ public void respawn(int returnMap) {\n     }\n     \n     public void respawn(EventInstanceManager eim, int returnMap) {\n-        if (eim != null) eim.unregisterPlayer(this);    // some event scripts uses this...\n+        if (eim != null) {\n+            eim.unregisterPlayer(this);    // some event scripts uses this...\n+        }\n         changeMap(returnMap);\n         \n         cancelAllBuffs(false);  // thanks Oblivium91 for finding out players still could revive in area and take damage before returning to town\n@@ -7076,7 +7213,9 @@ private void prepareDragonBlood(final MapleStatEffect bloodEffect) {\n         dragonBloodSchedule = TimerManager.getInstance().register(new Runnable() {\n             @Override\n             public void run() {\n-                if(awayFromWorld.get()) return;\n+                if (awayFromWorld.get()) {\n+                    return;\n+                }\n                 \n                 addHP(-bloodEffect.getX());\n                 announce(MaplePacketCreator.showOwnBuffEffect(bloodEffect.getSourceId(), 5));\n@@ -7655,8 +7794,7 @@ public final boolean insertNewChar(CharacterFactoryRecipe recipe) {\n                 selectedKey = GameConstants.getCustomKey(true);\n                 selectedType = GameConstants.getCustomType(true);\n                 selectedAction = GameConstants.getCustomAction(true);\n-            }\n-            else {\n+            } else {\n                 selectedKey = GameConstants.getCustomKey(false);\n                 selectedType = GameConstants.getCustomType(false);\n                 selectedAction = GameConstants.getCustomAction(false);\n@@ -7736,12 +7874,17 @@ public void run() {\n     \n     //ItemFactory saveItems and monsterbook.saveCards are the most time consuming here.\n     public synchronized void saveCharToDB(boolean notAutosave) {\n-        if(!loggedIn) return;\n+        if (!loggedIn) {\n+            return;\n+        }\n         \n         Calendar c = Calendar.getInstance();\n         \n-        if(notAutosave) FilePrinter.print(FilePrinter.SAVING_CHARACTER, \"Attempting to save \" + name + \" at \" + c.getTime().toString());\n-        else FilePrinter.print(FilePrinter.AUTOSAVING_CHARACTER, \"Attempting to autosave \" + name + \" at \" + c.getTime().toString());\n+        if(notAutosave) {\n+            FilePrinter.print(FilePrinter.SAVING_CHARACTER, \"Attempting to save \" + name + \" at \" + c.getTime().toString());\n+        } else {\n+            FilePrinter.print(FilePrinter.AUTOSAVING_CHARACTER, \"Attempting to autosave \" + name + \" at \" + c.getTime().toString());\n+        }\n         \n         Server.getInstance().updateCharacterEntry(this);\n         \n@@ -8450,7 +8593,9 @@ public boolean applyHpMpChange(int hpCon, int hpchange, int mpchange) {\n                     return false;\n                 }\n \n-                if (cannotApplyHp) nextHp = 1;\n+                if (cannotApplyHp) {\n+                    nextHp = 1;\n+                }\n             }\n \n             updateHpMp(nextHp, nextMp);\n@@ -8557,7 +8702,9 @@ public void changeName(String name) {\n     }\n     \n     public int getDoorSlot() {\n-        if(doorSlot != -1) return doorSlot;\n+        if(doorSlot != -1) {\n+            return doorSlot;\n+        }\n         return fetchDoorSlot();\n     }\n     \n@@ -8648,7 +8795,9 @@ public int sellAllItemsFromPosition(MapleItemInformationProvider ii, MapleInvent\n         inv.lockInventory();\n         try {\n             for(short i = pos; i <= inv.getSlotLimit(); i++) {\n-                if(inv.getItem(i) == null) continue;\n+                if (inv.getItem(i) == null) {\n+                    continue;\n+                }\n                 mesoGain += standaloneSell(getClient(), ii, type, i, inv.getItem(i).getQuantity());\n             }\n         } finally {\n@@ -9015,7 +9164,9 @@ public boolean skillIsCooling(int skillId) {\n \n     public void runFullnessSchedule(int petSlot) {\n         MaplePet pet = getPet(petSlot);\n-        if(pet == null) return;\n+        if (pet == null) {\n+            return;\n+        }\n         \n         int newFullness = pet.getFullness() - PetDataFactory.getHunger(pet.getItemId());\n         if (newFullness <= 5) {\n@@ -9141,7 +9292,9 @@ public void updateQuestInfo(int quest, String info) {\n     }\n     \n     public void awardQuestPoint(int awardedPoints) {\n-        if (ServerConstants.QUEST_POINT_REQUIREMENT < 1 || awardedPoints < 1) return;\n+        if (ServerConstants.QUEST_POINT_REQUIREMENT < 1 || awardedPoints < 1) {\n+            return;\n+        }\n         \n         int delta;\n         synchronized (quests) {\n@@ -9183,8 +9336,12 @@ public void updateQuest(MapleQuestStatus quest) {\n     }\n \n     private void expireQuest(MapleQuest quest) {\n-        if(getQuestStatus(quest.getId()) == MapleQuestStatus.Status.COMPLETED.getId()) return;\n-        if(System.currentTimeMillis() < getMapleQuestStatus(quest.getId()).getExpirationTime()) return;\n+        if(getQuestStatus(quest.getId()) == MapleQuestStatus.Status.COMPLETED.getId()) {\n+            return;\n+        }\n+        if(System.currentTimeMillis() < getMapleQuestStatus(quest.getId()).getExpirationTime()) {\n+            return;\n+        }\n         \n         announce(MaplePacketCreator.questExpire(quest.getId()));\n         MapleQuestStatus newStatus = new MapleQuestStatus(quest, MapleQuestStatus.Status.NOT_STARTED);\n@@ -9242,7 +9399,9 @@ private void runQuestExpireTask() {\n             List<MapleQuest> expireList = new LinkedList<>();\n             \n             for(Entry<MapleQuest, Long> qe : questExpirations.entrySet()) {\n-                if(qe.getValue() <= timeNow) expireList.add(qe.getKey());\n+                if(qe.getValue() <= timeNow) {\n+                    expireList.add(qe.getKey());\n+                }\n             }\n             \n             if(!expireList.isEmpty()) {\n@@ -9547,99 +9706,6 @@ public boolean isVipTrockMap(int id) {\n         return false;\n     }\n     \n-    //EVENTS\n-    private byte team = 0;\n-    private MapleFitness fitness;\n-    private MapleOla ola;\n-    private long snowballattack;\n-\n-    public byte getTeam() {\n-        return team;\n-    }\n-\n-    public void setTeam(int team) {\n-        this.team = (byte) team;\n-    }\n-\n-    public MapleOla getOla() {\n-        return ola;\n-    }\n-\n-    public void setOla(MapleOla ola) {\n-        this.ola = ola;\n-    }\n-\n-    public MapleFitness getFitness() {\n-        return fitness;\n-    }\n-\n-    public void setFitness(MapleFitness fit) {\n-        this.fitness = fit;\n-    }\n-\n-    public long getLastSnowballAttack() {\n-        return snowballattack;\n-    }\n-\n-    public void setLastSnowballAttack(long time) {\n-        this.snowballattack = time;\n-    }\n-    \n-    //Monster Carnival\n-    private int cp = 0;\n-    private int obtainedcp = 0;\n-    private MonsterCarnivalParty carnivalparty;\n-    private MonsterCarnival carnival;\n-\n-    public MonsterCarnivalParty getCarnivalParty() {\n-        return carnivalparty;\n-    }\n-\n-    public void setCarnivalParty(MonsterCarnivalParty party) {\n-        this.carnivalparty = party;\n-    }\n-\n-    public MonsterCarnival getCarnival() {\n-        return carnival;\n-    }\n-\n-    public void setCarnival(MonsterCarnival car) {\n-        this.carnival = car;\n-    }\n-\n-    public int getCP() {\n-        return cp;\n-    }\n-\n-    public int getObtainedCP() {\n-        return obtainedcp;\n-    }\n-\n-    public void addCP(int cp) {\n-        this.cp += cp;\n-        this.obtainedcp += cp;\n-    }\n-\n-    public void useCP(int cp) {\n-        this.cp -= cp;\n-    }\n-\n-    public void setObtainedCP(int cp) {\n-        this.obtainedcp = cp;\n-    }\n-\n-    public int getAndRemoveCP() {\n-        int rCP = 10;\n-        if (cp < 9) {\n-            rCP = cp;\n-            cp = 0;\n-        } else {\n-            cp -= 10;\n-        }\n-\n-        return rCP;\n-    }\n-\n     public AutobanManager getAutobanManager() {\n         return autoban;\n     }\n@@ -9725,7 +9791,9 @@ private void unequipPendantOfSpirit() {\n     }\n     \n     public void increaseEquipExp(int expGain) {\n-        if(expGain < 0) expGain = Integer.MAX_VALUE;\n+        if(expGain < 0) {\n+            expGain = Integer.MAX_VALUE;\n+        }\n         \n         for (Item item : getUpgradeableEquipList()) {\n             Equip nEquip = (Equip) item;\n@@ -9818,6 +9886,9 @@ public final void empty(final boolean remove) {\n         if (pendantOfSpirit != null) { pendantOfSpirit.cancel(true); }\n         pendantOfSpirit = null;\n         \n+        if (timer != null) { timer.cancel(true); }\n+        timer = null;\n+        \n         evtLock.lock();\n         try {\n             if (questExpireTask != null) {\n@@ -9934,8 +10005,11 @@ private void setFutureJailExpiration(long time) {\n     public void addJailExpirationTime(long time) {\n         long timeLeft = getJailExpirationTimeLeft();\n \n-        if(timeLeft <= 0) setFutureJailExpiration(time);\n-        else setFutureJailExpiration(timeLeft + time);\n+        if(timeLeft <= 0) {\n+            setFutureJailExpiration(time);\n+        } else {\n+            setFutureJailExpiration(timeLeft + time);\n+        }\n     }\n     \n     public void removeJailExpirationTime() {\n@@ -10050,4 +10124,203 @@ public void executeReborn() {\n         setLevel(0);\n         levelUp(true);\n     }\n-}\n+    \n+    //EVENTS\n+    private byte team = 0;\n+    private MapleFitness fitness;\n+    private MapleOla ola;\n+    private long snowballattack;\n+    public static final List<String> itens = new ArrayList();\n+    public static final List<Item> item = new ArrayList();\n+\n+    public byte getTeam() {\n+        return team;\n+    }\n+\n+    public void setTeam(int team) {\n+        this.team = (byte) team;\n+    }\n+\n+    public MapleOla getOla() {\n+        return ola;\n+    }\n+\n+    public void setOla(MapleOla ola) {\n+        this.ola = ola;\n+    }\n+\n+    public MapleFitness getFitness() {\n+        return fitness;\n+    }\n+\n+    public void setFitness(MapleFitness fit) {\n+        this.fitness = fit;\n+    }\n+\n+    public long getLastSnowballAttack() {\n+        return snowballattack;\n+    }\n+\n+    public void setLastSnowballAttack(long time) {\n+        this.snowballattack = time;\n+    }\n+    \n+    // MCPQ\n+    \n+    private int cp = 0;\n+    private int totCP = 0;\n+    private MonsterCarnival monsterCarnival;\n+    private MonsterCarnivalParty monsterCarnivalParty = null;\n+    private int FestivalPoints;\n+    private boolean challenged = false;\n+\n+    public void gainFestivalPoints(int gain) {\n+        this.FestivalPoints += gain;\n+    }\n+\n+    public int getFestivalPoints() {\n+        return this.FestivalPoints;\n+    }\n+\n+    public void setFestivalPoints(int pontos) {\n+        this.FestivalPoints = pontos;\n+    }\n+\n+    public int getCP() {\n+        return cp;\n+    }\n+\n+    public short totalCP, availableCP;\n+\n+    public void addCP(int ammount) {\n+        totalCP += ammount;\n+        availableCP += ammount;\n+    }\n+\n+    public void useCP(int ammount) {\n+        availableCP -= ammount;\n+    }\n+\n+    public void gainCP(int gain) {\n+        if (this.getMonsterCarnival() != null) {\n+            if (gain > 0) {\n+                this.setTotalCP(this.getTotalCP() + gain);\n+            }\n+            this.setCP(this.getCP() + gain);\n+            if (this.getParty() != null) {\n+                this.getMonsterCarnival().setCP(this.getMonsterCarnival().getCP(team) + gain, team);\n+                if (gain > 0) {\n+                    this.getMonsterCarnival().setTotalCP(this.getMonsterCarnival().getTotalCP(team) + gain, team);\n+                }\n+            }\n+            if (this.getCP() > this.getTotalCP()) {\n+                this.setTotalCP(this.getCP());\n+            }\n+            this.getClient().announce(MaplePacketCreator.CPUpdate(false, this.getCP(), this.getTotalCP(), getTeam()));\n+            if (this.getParty() != null && getTeam() != -1) {\n+                this.getMap().broadcastMessage(MaplePacketCreator.CPUpdate(true, this.getMonsterCarnival().getCP(team), this.getMonsterCarnival().getTotalCP(team), getTeam()));\n+            } else {\n+            }\n+        }\n+    }\n+\n+    public void setTotalCP(int a) {\n+        this.totCP = a;\n+    }\n+\n+    public void setCP(int a) {\n+        this.cp = a;\n+    }\n+\n+    public int getTotalCP() {\n+        return totCP;\n+    }\n+\n+    public int getAvailableCP() {\n+        return availableCP;\n+    }\n+\n+    public void resetCP() {\n+        this.cp = 0;\n+        this.totCP = 0;\n+        this.monsterCarnival = null;\n+    }\n+\n+    public MonsterCarnival getMonsterCarnival() {\n+        return monsterCarnival;\n+    }\n+\n+    public void setMonsterCarnival(MonsterCarnival monsterCarnival) {\n+        this.monsterCarnival = monsterCarnival;\n+    }\n+    \n+    public MonsterCarnivalParty getMonsterCarnivalParty() {\n+        return this.monsterCarnivalParty;\n+    }\n+    \n+    public void setMonsterCarnivalParty(MonsterCarnivalParty mcp) {\n+        this.monsterCarnivalParty = mcp;\n+    }\n+\n+    public boolean isChallenged() {\n+        return challenged;\n+    }\n+\n+    public void setChallenged(boolean challenged) {\n+        this.challenged = challenged;\n+    }\n+\n+    public void setLingua(int num) {\n+        getClient().setLingua(num);\n+        try {\n+            Connection con = DatabaseConnection.getConnection();\n+            try (PreparedStatement ps = con.prepareStatement(\"UPDATE accounts SET lingua = ? WHERE id = ?\")) {\n+                ps.setInt(1, num);\n+                ps.setInt(2, getClient().getAccID());\n+                ps.executeUpdate();\n+            } finally {\n+                con.close();\n+            }\n+        } catch (SQLException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public int getLingua() {\n+        return getClient().getLingua();\n+    }\n+\n+    public void setItens(String item) {\n+        if (!itens.contains(item)) {\n+            this.itens.add(item);\n+        }\n+    }\n+\n+    public static List<String> getItens() {\n+        return itens;\n+    }\n+\n+    public void setEquips(Item item) {\n+        this.item.add(item);\n+    }\n+\n+    public static List<Item> getItem() {\n+        return item;\n+    }\n+\n+    public Item getItemid(int numb) {\n+        return this.item.get(numb);\n+    }\n+\n+    public void removeItem(Item item) {\n+        if (this.item.contains(item)) {\n+            this.item.remove(item);\n+        }\n+    }\n+\n+    public void obterItens() {\n+        for (Item item : getItem()) {\n+            getClient().getAbstractPlayerInteraction().gainItem(item.getItemId(), item.getQuantity());\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "2847ee87e5a2b1c3387c156ab66d62d89c361f6d", "filename": "src/client/MapleClient.java", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/MapleClient.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/MapleClient.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleClient.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -124,6 +124,7 @@\n         private int visibleWorlds;\n \tprivate long lastNpcClick;\n \tprivate long sessionId;\n+        private int lingua = 0;\n         \n         static {\n             for (int i = 0; i < 200; i++) {\n@@ -269,8 +270,9 @@ public boolean hasVotedAlready(){\n \t}\n \t\n \tpublic boolean hasBannedHWID() {\n-\t\tif(hwid == null)\n-\t\t\treturn false;\n+\t\tif(hwid == null) {\n+                        return false;\n+                }\n \t\t\n \t\tboolean ret = false;\n \t\tPreparedStatement ps = null;\n@@ -509,7 +511,9 @@ public String getPic() {\n \t}\n \n \tpublic boolean checkPic(String other) {\n-                if(!(ServerConstants.ENABLE_PIC && !canBypassPic())) return true;\n+                if (!(ServerConstants.ENABLE_PIC && !canBypassPic())) {\n+                        return true;\n+                }\n             \n \t\tpicattempt++;\n \t\tif (picattempt > 5) {\n@@ -538,7 +542,7 @@ public int login(String login, String pwd, String nibbleHwid) {\n \t\tResultSet rs = null;\n \t\ttry {\n \t\t\tcon = DatabaseConnection.getConnection();\n-\t\t\tps = con.prepareStatement(\"SELECT id, password, gender, banned, pin, pic, characterslots, tos FROM accounts WHERE name = ?\");\n+\t\t\tps = con.prepareStatement(\"SELECT id, password, gender, banned, pin, pic, characterslots, tos, lingua FROM accounts WHERE name = ?\");\n \t\t\tps.setString(1, login);\n \t\t\trs = ps.executeQuery();\n \t\t\tif (rs.next()) {\n@@ -556,6 +560,7 @@ public int login(String login, String pwd, String nibbleHwid) {\n \t\t\t\tpic = rs.getString(\"pic\");\n \t\t\t\tgender = rs.getByte(\"gender\");\n \t\t\t\tcharacterSlots = rs.getByte(\"characterslots\");\n+                                lingua = rs.getInt(\"lingua\");\n \t\t\t\tString passhash = rs.getString(\"password\");\n \t\t\t\tbyte tos = rs.getByte(\"tos\");\n \n@@ -888,6 +893,10 @@ private void removePlayer(World wserv, boolean serverTransition) {\n                                 if (eim != null) {\n                                         eim.playerDisconnected(player);\n                                 }\n+                                \n+                                if (player.getMonsterCarnival() != null) {\n+                                        player.getMonsterCarnival().playerDisconnected(getPlayer().getId());\n+                                }\n                         }\n                         \n                         if (player.getMap() != null) {\n@@ -985,7 +994,9 @@ private void disconnectInternal(boolean shutdown, boolean cashshop) {//once per\n \t\t\t\tFilePrinter.printError(FilePrinter.ACCOUNT_STUCK, e);\n \t\t\t} finally {\n                                 if (!this.serverTransition) {\n-                                        if(chrg != null) chrg.setCharacter(null);\n+                                        if(chrg != null) {\n+                                            chrg.setCharacter(null);\n+                                        }\n \t\t\t\t\twserv.removePlayer(player);\n                                         //getChannelServer().removePlayer(player); already being done\n                                         \n@@ -1533,4 +1544,12 @@ public boolean canBypassPin() {\n         public boolean canBypassPic() {\n                 return MapleLoginBypassCoordinator.getInstance().canLoginBypass(getNibbleHWID(), accId, true);\n         }\n-}\n+        \n+        public int getLingua() {\n+                return lingua;\n+        }\n+\n+        public void setLingua(int lingua) {\n+                this.lingua = lingua;\n+        }\n+}\n\\ No newline at end of file"}, {"sha": "f84ad4f1d901b0721d0f91682eda75148ae97144", "filename": "src/client/MapleDisease.java", "status": "modified", "additions": 36, "deletions": 12, "changes": 48, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/MapleDisease.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/MapleDisease.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleDisease.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -21,34 +21,34 @@\n */\n package client;\n \n-import java.util.ArrayList;\n-import java.util.List;\n+import tools.Randomizer;\n \n public enum MapleDisease {\n     NULL(0x0),\n-    SLOW(0x1),\n-    SEDUCE(0x80),\n+    SLOW(0x1, 126),\n+    SEDUCE(0x80, 128),\n     FISHABLE(0x100),\n     ZOMBIFY(0x4000),\n     CONFUSE(0x80000),\n-    STUN(0x2000000000000L),\n-    POISON(0x4000000000000L),\n-    SEAL(0x8000000000000L),\n-    DARKNESS(0x10000000000000L),\n-    WEAKEN(0x4000000000000000L),\n-    CURSE(0x8000000000000000L);\n+    STUN(0x2000000000000L, 123),\n+    POISON(0x4000000000000L, 125),\n+    SEAL(0x8000000000000L, 120),\n+    DARKNESS(0x10000000000000L, 121),\n+    WEAKEN(0x4000000000000000L, 122),\n+    CURSE(0x8000000000000000L, 124);\n     \n     private long i;\n     private boolean first;\n+    private int disease;\n     \n     private MapleDisease(long i) {\n         this.i = i;\n         this.first = false;\n     }\n \n-    private MapleDisease(long i, boolean first) {\n+    private MapleDisease(long i, int disease) {\n         this.i = i;\n-        this.first = first;\n+        this.disease = disease;\n     }\n     \n     public long getValue() {\n@@ -58,6 +58,10 @@ public long getValue() {\n     public boolean isFirst() {\n             return first;\n     }\n+\n+    public int getDisease() {\n+        return disease;\n+    }\n     \n     public static MapleDisease ordinal(int ord) {\n         try {\n@@ -66,4 +70,24 @@ public static MapleDisease ordinal(int ord) {\n             return NULL;\n         }\n     }\n+    \n+    public static final MapleDisease getRandom() {\n+        while (true) {\n+            for (MapleDisease dis : MapleDisease.values()) {\n+                if (Randomizer.nextInt(MapleDisease.values().length) == 0) {\n+                    return dis;\n+                }\n+            }\n+        }\n+    }\n+    \n+    public static final MapleDisease getBySkill(final int skill) {\n+        for (MapleDisease d : MapleDisease.values()) {\n+            if (d.getDisease() == skill && d.getDisease() != 0) {\n+                return d;\n+            }\n+        }\n+        return null;\n+    }\n+    \n }"}, {"sha": "61227d15eaa126ceb9492d1b642f0bcca566a937", "filename": "src/client/command/CommandsExecutor.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/command/CommandsExecutor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/command/CommandsExecutor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/CommandsExecutor.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -186,6 +186,7 @@ private void registerLv0Commands(){\n         addCommand(\"uptime\", UptimeCommand.class);\n         addCommand(\"gacha\", GachaCommand.class);\n         addCommand(\"dispose\", DisposeCommand.class);\n+        addCommand(\"changel\", ChangeLinguaCommand.class);\n         addCommand(\"equiplv\",  EquipLvCommand.class);\n         addCommand(\"showrates\", ShowRatesCommand.class);\n         addCommand(\"rates\", RatesCommand.class);"}, {"sha": "219279a99fbcfa7893951f673e5850c54a837757", "filename": "src/client/command/commands/gm0/ChangeLinguaCommand.java", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/command/commands/gm0/ChangeLinguaCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/command/commands/gm0/ChangeLinguaCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm0/ChangeLinguaCommand.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,42 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server, commands OdinMS-based\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+\n+/*\n+   @Author: Arthur L - Refactored command content into modules\n+*/\n+package client.command.commands.gm0;\n+\n+import client.command.Command;\n+import client.MapleClient;\n+\n+public class ChangeLinguaCommand extends Command {\n+    {\n+        setDescription(\"\");\n+    }\n+\n+    @Override\n+    public void execute(MapleClient c, String[] params) {\n+        if (params.length < 1) {\n+            c.getPlayer().yellowMessage(\"Syntax: !changel <0=ptb, 1=esp, 2=eng>\");\n+            return;\n+        }\n+        c.setLingua(Integer.parseInt(params[0]));\n+    }\n+}"}, {"sha": "edc53da9cb54ef56535e0c0599cf21dbad7b24c0", "filename": "src/client/command/commands/gm5/DebugCommand.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/command/commands/gm5/DebugCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/client/command/commands/gm5/DebugCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm5/DebugCommand.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -39,6 +39,7 @@\n import java.awt.*;\n import java.util.Arrays;\n import java.util.List;\n+import tools.packets.Wedding;\n \n public class DebugCommand extends Command {\n     private final static String debugTypes[] = {\"monster\", \"packet\", \"portal\", \"spawnpoint\", \"pos\", \"map\", \"mobsp\", \"event\", \"areas\", \"reactors\", \"servercoupons\", \"playercoupons\", \"timer\", \"marriage\", \"\"};"}, {"sha": "af1089d60eb598fffffb81983b4424d45f992ce0", "filename": "src/constants/LinguaConstants.java", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/constants/LinguaConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/constants/LinguaConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/LinguaConstants.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,69 @@\n+package constants;\n+\n+import client.MapleCharacter;\n+\n+/**\n+ *\n+ * @author Drago - Dragohe4rt\n+ */\n+public class LinguaConstants {\n+\t// Portugues\n+    public static String CPQAzul;\n+    public static String CPQErro;\n+    public static String CPQEntrada;\n+    public static String CPQEscolha;\n+    public static String CPQVermelho;\n+    public static String CPQPlayerExit;\n+    public static String CPQEntradaLobby;\n+    public static String CPQInicioEscolha;\n+    public static String CPQTempoExtendido;\n+    public static String CPQLiderNaoEncontrado;\n+    public static String CPQInicioEscolhaEmEscolha;\n+\n+    public static LinguaConstants Linguas(MapleCharacter chr) {\n+        if (chr.getLingua() == 0) {\n+            LinguaConstants.CPQAzul = \"Maple Azul\";\n+            LinguaConstants.CPQVermelho = \"Maple Vermelho\";\n+            LinguaConstants.CPQTempoExtendido = \"O tempo foi estendido.\";\n+            LinguaConstants.CPQPlayerExit = \" deixou o Carnaval de Monstros.\";\n+            LinguaConstants.CPQErro = \"Ocorreu um problema. Favor recriar a sala.\";\n+            LinguaConstants.CPQLiderNaoEncontrado = \"N\ufffdo foi poss\ufffdvel encontrar o Lider.\";\n+            LinguaConstants.CPQInicioEscolha = \"Inscreva-se no Festival de Monstros!\\\\r\\\\n\";            \n+            LinguaConstants.CPQInicioEscolhaEmEscolha = \"O grupo esta respondendo um desafio no momento.\";\n+            LinguaConstants.CPQEscolha = \"N\ufffdo foi poss\ufffdvel encontrar um grupo nesta sala.\\\\r\\\\nProvavelmente o grupo foi desfeito dentro da sala!\";\n+            LinguaConstants.CPQEntradaLobby = \"[CPQ MapleStorySA] Agora voc\ufffd ir\ufffd receber desafios de outros grupos. Se voc\ufffd n\ufffdo aceitar um desafio em 3 minutos, voc\ufffd ser\ufffd levado para fora.\";\n+            LinguaConstants.CPQEntrada = \"Voc\ufffd pode selecionar \\\"Invocar Monstros\\\", \\\"Habilidade\\\", ou \\\"Protetor\\\" como sua t\ufffdtica durante o Carnaval dos Monstros. Use Tab a F1~F12 para acesso r\ufffdpido!\";\n+\n+            \n+            \n+        } else if (chr.getLingua() == 1) {\n+            LinguaConstants.CPQAzul = \"Maple Azul\";\n+            LinguaConstants.CPQVermelho = \"Maple Rojo\";\n+            LinguaConstants.CPQTempoExtendido = \"El tiempo se ha ampliado.\";\n+            LinguaConstants.CPQPlayerExit = \" ha dejado el Carnaval de Monstruos.\";\n+            LinguaConstants.CPQLiderNaoEncontrado = \"No se pudo encontrar el Lider.\";\n+            LinguaConstants.CPQInicioEscolha = \"\ufffdInscr\ufffdbete en el Festival de Monstruos!\\\\r\\\\n\";\n+            LinguaConstants.CPQErro = \"Se ha producido un problema. Por favor, volver a crear una sala.\";\n+            LinguaConstants.CPQInicioEscolhaEmEscolha = \"El grupo esta respondiendo un desaf\ufffdo en el momento.\";\n+            LinguaConstants.CPQEscolha = \"No se pudo encontrar un grupo en esta sala.\\\\r\\\\nProbablemente el grupo fue deshecho dentro de la sala!\";\n+            LinguaConstants.CPQEntradaLobby = \"[CPQ MapleStorySA] Ahora usted recibir\ufffd los retos de otros grupos. Si usted no acepta un desaf\ufffdo en 3 minutos, usted ser\ufffd llevado hacia fuera.\";\n+            LinguaConstants.CPQEntrada = \"Usted puede seleccionar \\\"Invocar Monstruos \\\", \\\"Habilidad \\\", o \\\"Protector \\\" como su t\ufffdctica durante el Carnaval de los Monstruos. Utilice Tab y F1 ~ F12 para acceso r\ufffdpido!\";\n+\n+            \n+        } else if (chr.getLingua() == 2) {\n+            LinguaConstants.CPQAzul = \"Maple Blue\";\n+            LinguaConstants.CPQVermelho = \"Maple Red\";\n+            LinguaConstants.CPQPlayerExit = \" left the Carnival of Monsters.\";\n+            LinguaConstants.CPQTempoExtendido = \"The time has been extended.\";\n+            LinguaConstants.CPQLiderNaoEncontrado = \"Could not find the Leader.\";\n+            LinguaConstants.CPQErro = \"There was a problem. Please re-create a room.\";\n+            LinguaConstants.CPQInicioEscolha = \"Sign up for the Monster Festival!\\\\r\\\\n\";\n+            LinguaConstants.CPQInicioEscolhaEmEscolha = \"The group is currently facing a challenge.\";\n+            LinguaConstants.CPQEscolha = \"We could not find a group in this room.\\\\r\\\\nProbably the group was scrapped inside the room!\";\n+            LinguaConstants.CPQEntradaLobby = \"[CPQ MapleStorySA] You will now receive challenges from other groups. If you do not accept a challenge within 3 minutes, you will be taken out.\";\n+            LinguaConstants.CPQEntrada = \"You can select \\\"Summon Monsters \\\", \\\"Ability \\\", or \\\"Protector \\\" as your tactic during the Monster Carnival. Use Tab and F1 ~ F12 for quick access!\";\n+            \n+        }\n+        return null;\n+    }\n+}"}, {"sha": "7a9b0fac8399e1bae37d5cc423a29e3b1d62b0f0", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -34,7 +34,7 @@\n     public static final int BYPASS_PIC_EXPIRATION = 20;         //Enables PIC bypass, which will remain active for that account by that client machine for N minutes. Set 0 to disable.\n     public static final int BYPASS_PIN_EXPIRATION = 15;         //Enables PIN bypass, which will remain active for that account by that client machine for N minutes. Set 0 to disable.\n     \n-    public static final boolean AUTOMATIC_REGISTER = true;      //Automatically register players when they login with a nonexistent username.\n+    public static final boolean AUTOMATIC_REGISTER = false;      //Automatically register players when they login with a nonexistent username.\n     public static final boolean BCRYPT_MIGRATION = true;        //Performs a migration from old SHA-1 and SHA-512 password to bcrypt.\n     public static final boolean COLLECTIVE_CHARSLOT = false;    //Available character slots are contabilized globally rather than per world server.\n     public static final boolean DETERRED_MULTICLIENT = false;   //Enables multi-client and suspicious remote IP detection on the login system.\n@@ -59,7 +59,7 @@\n     public static final boolean USE_CUSTOM_KEYSET = true;           //Enables auto-setup of the HeavenMS's custom keybindings when creating characters.\n     public static final boolean USE_DEBUG = false;                  //Will enable some text prints on the client, oriented for debugging purposes.\n     public static final boolean USE_DEBUG_SHOW_INFO_EQPEXP = false; //Prints on the cmd all equip exp gain info.\n-    public static       boolean USE_DEBUG_SHOW_RCVD_PACKET = false; //Prints on the cmd all received packet ids.\n+    public static       boolean USE_DEBUG_SHOW_RCVD_PACKET = true; //Prints on the cmd all received packet ids.\n     public static       boolean USE_DEBUG_SHOW_RCVD_MVLIFE = false; //Prints on the cmd all received move life content.\n     public static       boolean USE_SUPPLY_RATE_COUPONS = true;     //Allows rate coupons to be sold through the Cash Shop.\n     "}, {"sha": "424ad492b63fd82854515049f69b3408457a1dba", "filename": "src/net/server/channel/handlers/ChangeMapHandler.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/channel/handlers/ChangeMapHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/channel/handlers/ChangeMapHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/ChangeMapHandler.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -101,11 +101,10 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                                                         }\n                                                 }\n                                         } else {\n-                                                if(chr.isGM()) {\n+                                                if (chr.isGM()) {\n                                                         MapleMap to = chr.getWarpMap(targetid);\n                                                         chr.changeMap(to, to.getPortal(0));\n-                                                }\n-                                                else {\n+                                                } else {\n                                                         final int divi = chr.getMapId() / 100;\n                                                         boolean warp = false;\n                                                         if (divi == 0) {\n@@ -170,4 +169,4 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n \t\t\t}\n \t\t}\n \t}\n-}\n+}\n\\ No newline at end of file"}, {"sha": "fe18b825321792a4802ce162622b3c9b7975d70a", "filename": "src/net/server/channel/handlers/MonsterCarnivalHandler.java", "status": "modified", "additions": 132, "deletions": 201, "changes": 333, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/channel/handlers/MonsterCarnivalHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/channel/handlers/MonsterCarnivalHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MonsterCarnivalHandler.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,223 +1,154 @@\n /*\n-\tThis file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n-\t\t       Matthias Butz <matze@odinms.de>\n-\t\t       Jan Christian Meyer <vimes@odinms.de>\n+ This file is part of the OdinMS Maple Story Server\n+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+ Matthias Butz <matze@odinms.de>\n+ Jan Christian Meyer <vimes@odinms.de>\n \n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n \n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n \n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n package net.server.channel.handlers;\n \n import client.MapleCharacter;\n import client.MapleClient;\n+import client.MapleDisease;\n import java.awt.Point;\n+import java.util.List;\n import net.AbstractMaplePacketHandler;\n-import server.partyquest.MonsterCarnival;\n+import net.server.world.MapleParty;\n+import net.server.world.MaplePartyCharacter;\n import server.life.MapleLifeFactory;\n-import server.maps.MapleReactor;\n-import server.maps.MapleReactorFactory;\n+import server.life.MapleMonster;\n+import server.partyquest.MapleCarnivalFactory;\n+import server.partyquest.MapleCarnivalFactory.MCSkill;\n import tools.MaplePacketCreator;\n+import tools.Pair;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n+\n /**\n- *\n- * @author kevintjuh93\n- */\n-public final class MonsterCarnivalHandler extends AbstractMaplePacketHandler{\n-    public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-        MapleCharacter chr = c.getPlayer();\n-        MonsterCarnival carnival = chr.getCarnival();\n-        int tab = slea.readByte();\n-        int number = slea.readShort();\n-        if (carnival != null) {\n-            if (chr.getCarnivalParty() != carnival.getPartyRed() || chr.getCarnivalParty() != carnival.getPartyBlue()) {\n-                chr.getMap().broadcastMessage(MaplePacketCreator.leaveCPQ(chr));\n-                chr.changeMap(980000010);\n-            }\n-            if (chr.getCP() > getPrice(tab, number)) {\n-                if (tab == 0) { //SPAWNING\n-                    if (chr.getCarnivalParty().canSummon()) {\n-                        chr.getMap().spawnCPQMonster(MapleLifeFactory.getMonster(getMonster(number)), new Point(1, 1), carnival.oppositeTeam(chr.getCarnivalParty()).getTeam());\n-                        chr.getCarnivalParty().summon();\n-                    } else\n-                        chr.announce(MaplePacketCreator.CPQMessage((byte) 2));\n+    *@author Drago/Dragohe4rt\n+*/\n \n-                } else if (tab == 1) {\n+public final class MonsterCarnivalHandler extends AbstractMaplePacketHandler {\n \n-                } else if (tab == 2) {\n-                    int rid = 9980000 + chr.getTeam();\n-                        MapleReactor reactor = new MapleReactor(MapleReactorFactory.getReactor(rid), rid);\n-                        /*switch (number) {\n-                            case 0:\n-                                reactor.setMonsterStatus(tab, MonsterStatus.WEAPON_ATTACK_UP, MobSkillFactory.getMobSkill(150, 1));\n-                                break;\n-                            case 1:\n-                                reactor.setMonsterStatus(tab, MonsterStatus.WEAPON_DEFENSE_UP, MobSkillFactory.getMobSkill(151, 1));\n-                                break;\n-                            case 2:\n-                                reactor.setMonsterStatus(tab, MonsterStatus.MAGIC_ATTACK_UP, MobSkillFactory.getMobSkill(152, 1));\n-                                break;\n-                            case 3:\n-                                reactor.setMonsterStatus(tab, MonsterStatus.MAGIC_DEFENSE_UP, MobSkillFactory.getMobSkill(153, 1));\n-                                break;\n-                            case 4:\n-                                reactor.setMonsterStatus(tab, MonsterStatus.ACC, MobSkillFactory.getMobSkill(154, 1));\n-                                break;\n-                            case 5:\n-                                reactor.setMonsterStatus(tab, MonsterStatus.AVOID, MobSkillFactory.getMobSkill(155, 1));\n-                                break;\n-                            case 6:\n-                                reactor.setMonsterStatus(tab, MonsterStatus.SPEED, MobSkillFactory.getMobSkill(156, 1));\n-                                break;\n-                            case 7:\n-                                reactor.setMonsterStatus(tab, MonsterStatus.WEAPON_IMMUNITY, MobSkillFactory.getMobSkill(140, 1));\n-                                break;\n-                            case 8:\n-                                reactor.setMonsterStatus(tab, MonsterStatus.MAGIC_IMMUNITY, MobSkillFactory.getMobSkill(141, 1));\n-                                break;\n-                        } */\n-                        chr.getMap().spawnReactor(reactor);\n+    @Override\n+    public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n+        try {\n+            int tab = slea.readByte();\n+            int num = slea.readByte();\n+            int neededCP = 0;\n+            if (tab == 0) { \n+                final List<Pair<Integer, Integer>> mobs = c.getPlayer().getMap().getMobsToSpawn();\n+                if (num >= mobs.size() || c.getPlayer().getCP() < mobs.get(num).right) {\n+                    c.announce(MaplePacketCreator.CPQMessage((byte) 1));\n+                    c.getSession().write(MaplePacketCreator.enableActions());\n+                    return;\n                 }\n-            } else {\n-                chr.getMap().broadcastMessage(MaplePacketCreator.CPQMessage((byte) 1));\n-            }\n-        } else {\n-            chr.announce(MaplePacketCreator.CPQMessage((byte) 5));\n-        }\n-        chr.announce(MaplePacketCreator.enableActions());\n-    }\n \n-    public int getMonster(int num) {\n-        int mid = 0;\n-        num++;\n-        switch (num) {\n-            case 1:\n-                mid = 9300127;\n-                break;\n-            case 2:\n-                mid = 9300128;\n-                break;\n-            case 3:\n-                mid = 9300129;\n-                break;\n-            case 4:\n-                mid = 9300130;\n-                break;\n-            case 5:\n-                mid = 9300131;\n-                break;\n-            case 6:\n-                mid = 9300132;\n-                break;\n-            case 7:\n-                mid = 9300133;\n-                break;\n-            case 8:\n-                mid = 9300134;\n-                break;\n-            case 9:\n-                mid = 9300135;\n-                break;\n-            case 10:\n-                mid = 9300136;\n-                break;\n+                final MapleMonster mob = MapleLifeFactory.getMonster(mobs.get(num).left);\n+                if (c.getPlayer().getMonsterCarnival() != null) {\n+                    Point spawnPos = c.getPlayer().getMap().getRandomSP(c.getPlayer().getTeam());\n+                    if (!c.getPlayer().getMonsterCarnival().canSummon() && c.getPlayer().getTeam() == 0 || !c.getPlayer().getMonsterCarnival().canSummons() && c.getPlayer().getTeam() == 1) {\n+                        c.announce(MaplePacketCreator.CPQMessage((byte) 2));\n+                        c.getSession().write(MaplePacketCreator.enableActions());\n+                        return;\n+                    }\n+                    mob.setPosition(spawnPos);\n+                    if (c.getPlayer().getTeam() == 0) {\n+                        c.getPlayer().getMonsterCarnival().summon();\n+                    } else {\n+                        c.getPlayer().getMonsterCarnival().summons();\n+                    }\n+                        c.getPlayer().getMap().addMonsterSpawn(mob, 1, c.getPlayer().getTeam());\n+                        c.getSession().write(MaplePacketCreator.enableActions());\n+                    }\n+                    neededCP = mobs.get(num).right;\n+                } else if (tab == 1) { //debuffs\n+                    final List<Integer> skillid = c.getPlayer().getMap().getSkillIds();\n+                    if (num >= skillid.size()) {\n+                        c.getPlayer().dropMessage(5, \"Ocorreu um erro.\");\n+                        c.getSession().write(MaplePacketCreator.enableActions());\n+                        return;\n+                    }\n+                    final MCSkill skil = MapleCarnivalFactory.getInstance().getSkill(skillid.get(num)); //ugh wtf\n+                    if (skil == null || c.getPlayer().getCP() < skil.cpLoss) {\n+                        c.announce(MaplePacketCreator.CPQMessage((byte) 1));\n+                        c.getSession().write(MaplePacketCreator.enableActions());\n+                        return;\n+                    }\n+                    final MapleDisease dis = skil.getDisease();\n+                    MapleParty inimigos = c.getPlayer().getParty().getEnemy();\n+                    if (skil.targetsAll) {\n+                        int chanceAcerto = 0;\n+                        if (dis.getDisease() == 121 || dis.getDisease() == 122 || dis.getDisease() == 125 || dis.getDisease() == 126) {\n+                            chanceAcerto = (int) (Math.random() * 100);\n+                        }\n+                        if (chanceAcerto <= 80) {\n+                            for (MaplePartyCharacter chrS : inimigos.getPartyMembers()) {\n+                                if (dis == null) {\n+                                    chrS.getPlayer().dispel();\n+                                } else {\n+                                    chrS.getPlayer().giveDebuff(dis, skil.getSkill());\n+                                }\n+                                if (!skil.targetsAll) {\n+                                    break;\n+                                }\n+                            }\n+                        }\n+                    } else {\n+                        int amount = inimigos.getMembers().size() - 1;\n+                        int randd = (int) Math.floor(Math.random() * amount);\n+                        MapleCharacter chrApp = c.getChannelServer().getPlayerStorage().getCharacterById(inimigos.getMemberByPos(randd).getId());\n+                        if (chrApp != null && chrApp.getMap().isCPQMap()) {\n+                            if (dis == null) {\n+                                chrApp.dispel();\n+                            } else {\n+                                chrApp.giveDebuff(dis, skil.getSkill());\n+                            }\n+                        }\n+                    }\n+                    neededCP = skil.cpLoss;\n+                    c.getSession().write(MaplePacketCreator.enableActions());\n+                } else if (tab == 2) { //protectors\n+                    final MCSkill skil = MapleCarnivalFactory.getInstance().getGuardian(num);\n+                    if (skil == null || c.getPlayer().getCP() < skil.cpLoss) {\n+                        c.announce(MaplePacketCreator.CPQMessage((byte) 1));\n+                        c.getSession().write(MaplePacketCreator.enableActions());\n+                        return;\n+                    }\n+                    int success = c.getPlayer().getMap().spawnGuardian(c.getPlayer().getTeam(), num);\n+                    if (success == -1 || success == 0 || success == 2) {\n+                        if (success == -1) {\n+                            c.announce(MaplePacketCreator.CPQMessage((byte) 3));\n+                        } else if (success == 0) {\n+                            c.announce(MaplePacketCreator.CPQMessage((byte) 4));\n+                        } else if (success == 2) {\n+                            c.announce(MaplePacketCreator.CPQMessage((byte) 3));\n+                        }\n+                        c.getSession().write(MaplePacketCreator.enableActions());\n+                        return;\n+                    } else {\n+                        neededCP = skil.cpLoss;\n+                    }\n+                }\n+                c.getPlayer().gainCP(-neededCP);\n+                c.getPlayer().getMap().broadcastMessage(MaplePacketCreator.playerSummoned(c.getPlayer().getName(), tab, num));\n+            }catch (Exception e) {\n+            e.printStackTrace();\n         }\n-        return mid;\n-    }\n-\n-    public int getPrice(int num, int tab) {\n-        int price = 0;\n-        num++;\n-\n-        if (tab == 0) {\n-            switch (num) {\n-                case 1:\n-                case 2:\n-                    price = 7;\n-                    break;\n-                case 3:\n-                case 4:\n-                    price = 8;\n-                    break;\n-                case 5:\n-                case 6:\n-                    price = 9;\n-                    break;\n-                case 7:\n-                    price = 10;\n-                    break;\n-                case 8:\n-                    price = 11;\n-                    break;\n-                case 9:\n-                    price = 12;\n-                    break;\n-                case 10:\n-                    price = 30;\n-                    break;\n-            }\n-        } else if (tab == 1) {\n-            switch (num) {\n-                case 1:\n-                    price = 17;\n-                    break;\n-                case 2:\n-                case 4:\n-                    price = 19;\n-                    break;\n-                case 3:\n-                    price = 12;\n-                    break;\n-                case 5:\n-                    price = 16;\n-                    break;\n-                case 6:\n-                    price = 14;\n-                    break;\n-                case 7:\n-                    price = 22;\n-                    break;\n-                case 8:\n-                    price = 18;\n-                    break;\n-            }\n-        } else {\n-            switch (num) {\n-                case 1:\n-                case 3:\n-                    price = 17;\n-                    break;\n-                case 2:\n-                case 4:\n-                case 6:\n-                    price = 16;\n-                    break;\n-                case 5:\n-                    price = 13;\n-                    break;\n-                case 7:\n-                    price = 12;\n-                    break;\n-                case 8:\n-                case 9:\n-                    price = 35;\n-                    break;\n-            }\n         }\n-        return price;\n+\n     }\n-}"}, {"sha": "33a9f29648a3db549d60675a22f8468ec5f850f2", "filename": "src/net/server/channel/handlers/RingActionHandler.java", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/channel/handlers/RingActionHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/channel/handlers/RingActionHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/RingActionHandler.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -21,8 +21,6 @@\n */\n package net.server.channel.handlers;\n \n-//import java.sql.Connection;\n-//import java.sql.PreparedStatement;\n import client.MapleClient;\n import client.MapleCharacter;\n import client.inventory.MapleInventoryType;\n@@ -31,14 +29,10 @@\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n-import java.util.ArrayList;\n-import java.util.List;\n-//import tools.DatabaseConnection;\n import net.AbstractMaplePacketHandler;\n import client.inventory.manipulator.MapleInventoryManipulator;\n import tools.DatabaseConnection;\n import tools.data.input.SeekableLittleEndianAccessor;\n-//import scripting.npc.NPCScriptManager;\n import tools.Pair;\n import tools.MaplePacketCreator;\n import tools.packets.Wedding;\n@@ -52,6 +46,7 @@\n /**\n  * @author Jvlaple\n  * @author Ronan - major overhaul on Ring handling mechanics\n+ * @author Drago/Dragohe4rt on Wishlist\n  */\n public final class RingActionHandler extends AbstractMaplePacketHandler {\n     private static int getBoxId(int useItemId) {\n@@ -467,11 +462,16 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 \n                 break;\n                 \n-            case 9: // Groom and Bride's Wishlist\n-                short size = slea.readShort();\n-                List<String> itemnames = new ArrayList<>(size);\n-                for (int i = 0; i < size; i++) {\n-                    itemnames.add(slea.readMapleAsciiString());\n+            case 9: \n+                // By Drago/Dragohe4rt\n+                // Groom and Bride's Wishlist\n+                //short size = slea.readShort();\n+                int amount = slea.readShort();\n+                if (amount > 10) {\n+                    amount = 10;\n+                }\n+                for (int i = 0; i < amount; i++) {\n+                    c.getPlayer().setItens(slea.readMapleAsciiString());\n                 }\n                 \n                 //System.out.println(\"G&B WISHLIST: \" + itemnames);"}, {"sha": "301c3ce5db08fb2f8116ffa19977625e1cbce4d8", "filename": "src/net/server/channel/handlers/WeddingHandler.java", "status": "modified", "additions": 40, "deletions": 63, "changes": 103, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/channel/handlers/WeddingHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/channel/handlers/WeddingHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/WeddingHandler.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -10,84 +10,61 @@\n import client.inventory.MapleInventoryType;\n import client.MapleCharacter;\n import client.MapleClient;\n+import client.inventory.Equip;\n import constants.ItemConstants;\n-import tools.DatabaseConnection;\n-import java.sql.Connection;\n-import java.sql.PreparedStatement;\n-import java.sql.ResultSet;\n-import java.sql.SQLException;\n-import java.util.ArrayList;\n-import java.util.List;\n import net.AbstractMaplePacketHandler;\n import client.inventory.manipulator.MapleInventoryManipulator;\n+import net.server.channel.Channel;\n+import scripting.event.EventInstanceManager;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n import tools.packets.Wedding;\n \n /**\n  *\n- * @author Eric\n+ * @author By Drago/Dragohe4rt\n  */\n public final class WeddingHandler extends AbstractMaplePacketHandler {\n-    /*\n-    public static final void OnWeddingProgress(byte action, MapleClient c) {\n-        // -- Pelvis Bebop: \n-        // 0x00: \"We are gathered here today...\"\n-        // 0x01: \"Very well! I pronounce you...\"\n-        // 0x02: \"You two truly are a sight to...\"\n-        // 0x03: Wedding Ceremony Ended, initialize the Wedding Effect upon the two married characters\n-        // -- High Priest John: (Unknown action bytes)\n-        // 0x00: \" \"\n-        // 0x01: \" \"\n-        // 0x02: \"Do you wish to bless this couple?...\"\n-        // 0x03: Wedding Ceremony Ended, initialize the Wedding Effect upon the two married characters\n-        if (c.getPlayer().getWedding() != null) {\n-            if (c.getPlayer().getGender() == 0 ? c.getPlayer().getWedding().isExistantGroom(c.getPlayer().getId()) : c.getPlayer().getWedding().isExistantBride(c.getPlayer().getId())) {\n-                c.getPlayer().getMap().broadcastMessage(Wedding.OnWeddingProgress(action == 2, c.getPlayer().getId(), c.getPlayer().getPartnerId(), (byte)(action+1)));\n-                c.getPlayer().getWedding().incrementStage();\n-                c.getPlayer().getPartner().getWedding().incrementStage(); // pls don't b a bitch and throw npe ):<\n-                if (action == 2) {\n-                    c.getPlayer().setMarried(true);\n-                    c.getChannelServer().getPlayerStorage().getCharacterById(c.getPlayer().getPartnerId()).setMarried(true);\n-                }\n-            }\n-        }\n-        c.announce(MaplePacketCreator.enableActions());\n-    }\n     \n-    public static final void OnWeddingGiftResult(SeekableLittleEndianAccessor slea, MapleClient c) {\n-        System.out.println(\"New WEDDING_GIFT_RESULT: \" + slea.toString());\n-        byte mode = slea.readByte();\n-        switch(mode) {\n-            case 0x06: // \"SEND ITEM\"\n-                short slot = slea.readShort(); // isn't this a byte? o.O\n-                int itemId = slea.readInt();\n-                short quantity = slea.readShort();\n-                if (c.getPlayer().getInventory(ItemConstants.getInventoryType(itemId)).getItem((byte)slot).getItemId() == itemId && c.getPlayer().getInventory(InventoryConstants.getInventoryType(itemId)).getItem((byte)slot).getQuantity() >= quantity) {\n-                    if (c.getPlayer().getWedding() == null) {\n-                        c.getPlayer().startWedding(); // TODO\n+    @Override\n+    public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n+        MapleCharacter chr = c.getPlayer();\n+        final byte mode = slea.readByte();\n+        Channel cs = c.getChannelServer();\n+        \n+        if (mode == 6) { //additem\n+            short slot = slea.readShort();\n+            int itemid = slea.readInt();\n+            short quantity = slea.readShort();\n+            EventInstanceManager eim = c.getPlayer().getEventInstance();\n+            if (eim != null) {\n+                String name = eim.getProperty(\"brideId\");\n+                MapleCharacter chrs = cs.getPlayerStorage().getCharacterById(Integer.parseInt(name));\n+                //MapleCharacter chrs = cs.getPlayerStorage().getCharacterById(3);\n+                MapleInventoryType type = ItemConstants.getInventoryType(itemid);\n+                Item item = chr.getInventory(type).getItem((byte) slot);\n+                if (itemid == item.getItemId() && quantity <= item.getQuantity()) {\n+                    if(!(item instanceof Equip)) {\n+                        item = new Item(itemid, slot, quantity);\n                     }\n-                    List<String> itemnames = new ArrayList<>();\n-                    Item item = c.getPlayer().getInventory(ItemConstants.getInventoryType(itemId)).getItem((byte)slot);\n-                    boolean bride = false;\n-                    c.getPlayer().getWedding().registerWishlistItem(item, bride);\n-                    c.announce(Wedding.OnWeddingGiftResult((byte)11, itemnames, c.getPlayer().getWedding().getWishlistItems(bride))); // todo: remove item from inventory if success\n+                    chrs.setEquips(item);\n+                    MapleInventoryManipulator.removeById(chr.getClient(), type, itemid, quantity, false, false);\n+                    c.announce(Wedding.OnWeddingGiftResult((byte) 0xB, chrs.getItens(), chrs.getItem()));\n                 }\n-            case 0x08: // \"EXIT\"\n-                if (slea.available() != 0) {\n-                    System.out.println(\"WEDDING_GIFT_RESULT: \" + slea.toString());\n-                }\n-                c.announce(MaplePacketCreator.enableActions());\n-                break;\n-            default: {\n-                System.out.println(\"Unknown Mode Found: \" + mode + \" : \" + slea.toString());\n             }\n+        } else if (mode == 7) { // noiva abre e pega itens\n+            byte inventId = slea.readByte();\n+            int itemPos = slea.readByte();\n+            MapleInventoryType inv = MapleInventoryType.getByType(inventId);\n+            Item item = chr.getItemid(itemPos);\n+            c.getAbstractPlayerInteraction().gainItem(item.getItemId(), item.getQuantity());\n+            chr.removeItem(item);\n+            c.announce(Wedding.OnWeddingGiftResult((byte) 0xF, chr.getItens(), chr.getItem()));\n+        } else if (mode == 8) { // sair update?\n+            \n+            c.announce(MaplePacketCreator.enableActions());\n+        } else {\n+            System.out.println(mode);\n         }\n     }\n-    */\n-    \n-    @Override\n-    public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-        c.announce(MaplePacketCreator.enableActions());\n-    }\n }\n\\ No newline at end of file"}, {"sha": "a3f155d8ccad1e951851e7d7efbf15dff077c66e", "filename": "src/net/server/world/MapleParty.java", "status": "modified", "additions": 85, "deletions": 63, "changes": 148, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/world/MapleParty.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/world/MapleParty.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/MapleParty.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,24 +1,24 @@\n /*\n-\tThis file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n-\t\t       Matthias Butz <matze@odinms.de>\n-\t\t       Jan Christian Meyer <vimes@odinms.de>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n+ This file is part of the OdinMS Maple Story Server\n+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+ Matthias Butz <matze@odinms.de>\n+ Jan Christian Meyer <vimes@odinms.de>\n+\n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+\n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n package net.server.world;\n \n import client.MapleClient;\n@@ -37,19 +37,20 @@\n import server.maps.MapleDoor;\n \n public class MapleParty {\n+\n     private int id;\n-    \n+    private MapleParty enemy = null;\n     private int leaderId;\n     private List<MaplePartyCharacter> members = new LinkedList<>();\n     private List<MaplePartyCharacter> pqMembers = null;\n-    \n+\n     private Map<Integer, Integer> histMembers = new HashMap<>();\n     private int nextEntry = 0;\n-    \n+\n     private Map<Integer, MapleDoor> doors = new HashMap<>();\n-    \n+\n     private MonitoredReentrantLock lock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.PARTY, true);\n-    \n+\n     public MapleParty(int id, MaplePartyCharacter chrfor) {\n         this.leaderId = chrfor.getId();\n         this.id = id;\n@@ -103,7 +104,7 @@ public void updateMember(MaplePartyCharacter member) {\n             lock.unlock();\n         }\n     }\n-    \n+\n     public MaplePartyCharacter getMemberById(int id) {\n         lock.lock();\n         try {\n@@ -126,7 +127,7 @@ public MaplePartyCharacter getMemberById(int id) {\n             lock.unlock();\n         }\n     }\n-    \n+\n     public List<MaplePartyCharacter> getPartyMembers() {\n         lock.lock();\n         try {\n@@ -135,33 +136,33 @@ public MaplePartyCharacter getMemberById(int id) {\n             lock.unlock();\n         }\n     }\n-    \n+\n     // used whenever entering PQs: will draw every party member that can attempt a target PQ while ingnoring those unfit.\n     public Collection<MaplePartyCharacter> getEligibleMembers() {\n         return Collections.unmodifiableList(pqMembers);\n     }\n-    \n+\n     public void setEligibleMembers(List<MaplePartyCharacter> eliParty) {\n         pqMembers = eliParty;\n     }\n-    \n+\n     public int getId() {\n         return id;\n     }\n \n     public void setId(int id) {\n         this.id = id;\n     }\n-    \n+\n     public int getLeaderId() {\n         return leaderId;\n     }\n \n     public MaplePartyCharacter getLeader() {\n         lock.lock();\n         try {\n-            for(MaplePartyCharacter mpc: members) {\n-                if(mpc.getId() == leaderId) {\n+            for (MaplePartyCharacter mpc : members) {\n+                if (mpc.getId() == leaderId) {\n                     return mpc;\n                 }\n             }\n@@ -171,45 +172,53 @@ public MaplePartyCharacter getLeader() {\n             lock.unlock();\n         }\n     }\n-    \n+\n+    public MapleParty getEnemy() {\n+        return enemy;\n+    }\n+\n+    public void setEnemy(MapleParty enemy) {\n+        this.enemy = enemy;\n+    }\n+\n     public List<Integer> getMembersSortedByHistory() {\n         List<Entry<Integer, Integer>> histList;\n-        \n+\n         lock.lock();\n         try {\n             histList = new LinkedList<>(histMembers.entrySet());\n         } finally {\n             lock.unlock();\n         }\n-        \n-        Collections.sort(histList, new Comparator<Entry<Integer, Integer>>()\n-            {\n-                @Override\n-                public int compare( Entry<Integer, Integer> o1, Entry<Integer, Integer> o2 )\n-                {\n-                    return ( o1.getValue() ).compareTo( o2.getValue() );\n-                }\n-            });\n-        \n+\n+        Collections.sort(histList, new Comparator<Entry<Integer, Integer>>() {\n+            @Override\n+            public int compare(Entry<Integer, Integer> o1, Entry<Integer, Integer> o2) {\n+                return (o1.getValue()).compareTo(o2.getValue());\n+            }\n+        });\n+\n         List<Integer> histSort = new LinkedList<>();\n-        for(Entry<Integer, Integer> e : histList) {\n+        for (Entry<Integer, Integer> e : histList) {\n             histSort.add(e.getKey());\n         }\n-        \n+\n         return histSort;\n     }\n-    \n+\n     public byte getPartyDoor(int cid) {\n         List<Integer> histList = getMembersSortedByHistory();\n         byte slot = 0;\n-        for(Integer e: histList) {\n-            if(e == cid) break;\n+        for (Integer e : histList) {\n+            if (e == cid) {\n+                break;\n+            }\n             slot++;\n         }\n \n         return slot;\n     }\n-    \n+\n     public void addDoor(Integer owner, MapleDoor door) {\n         lock.lock();\n         try {\n@@ -218,43 +227,45 @@ public void addDoor(Integer owner, MapleDoor door) {\n             lock.unlock();\n         }\n     }\n-    \n+\n     public void removeDoor(Integer owner) {\n-    \tlock.lock();\n+        lock.lock();\n         try {\n             this.doors.remove(owner);\n         } finally {\n             lock.unlock();\n         }\n     }\n-    \n+\n     public Map<Integer, MapleDoor> getDoors() {\n-    \tlock.lock();\n+        lock.lock();\n         try {\n             return Collections.unmodifiableMap(doors);\n         } finally {\n             lock.unlock();\n         }\n     }\n-    \n+\n     public void assignNewLeader(MapleClient c) {\n         World world = c.getWorldServer();\n         MaplePartyCharacter newLeadr = null;\n-        \n+\n         lock.lock();\n         try {\n-            for(MaplePartyCharacter mpc : members) {\n-                if(mpc.getId() != leaderId && (newLeadr == null || newLeadr.getLevel() < mpc.getLevel())) {\n+            for (MaplePartyCharacter mpc : members) {\n+                if (mpc.getId() != leaderId && (newLeadr == null || newLeadr.getLevel() < mpc.getLevel())) {\n                     newLeadr = mpc;\n                 }\n             }\n         } finally {\n             lock.unlock();\n         }\n \n-        if(newLeadr != null) world.updateParty(this.getId(), PartyOperation.CHANGE_LEADER, newLeadr);\n+        if (newLeadr != null) {\n+            world.updateParty(this.getId(), PartyOperation.CHANGE_LEADER, newLeadr);\n+        }\n     }\n-    \n+\n     public void disposeLocks() {\n         LockCollector.getInstance().registerDisposeAction(new Runnable() {\n             @Override\n@@ -263,11 +274,11 @@ public void run() {\n             }\n         });\n     }\n-    \n+\n     private void emptyLocks() {\n         lock = lock.dispose();\n     }\n-    \n+\n     @Override\n     public int hashCode() {\n         final int prime = 31;\n@@ -276,6 +287,17 @@ public int hashCode() {\n         return result;\n     }\n \n+    public MaplePartyCharacter getMemberByPos(int pos) {\n+        int i = 0;\n+        for (MaplePartyCharacter chr : members) {\n+            if (pos == i) {\n+                return chr;\n+            }\n+            i++;\n+        }\n+        return null;\n+    }\n+\n     @Override\n     public boolean equals(Object obj) {\n         if (this == obj) {"}, {"sha": "d2c4096c51d7c6ecd85f34f1f1e0290df90ed4b0", "filename": "src/net/server/world/MaplePartyCharacter.java", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/world/MaplePartyCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/net/server/world/MaplePartyCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/MaplePartyCharacter.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -141,4 +141,100 @@ public boolean equals(Object obj) {\n     public int getWorld() {\n         return world;\n     }\n+    \n+    public String getJobNameById(int job) {\n+        switch (job) {\n+            case 0:\n+                return \"Aprendiz\";\n+            case 100:\n+                return \"Guerreiro\";// Warrior\n+            case 110:\n+                return \"Soldado\";\n+            case 111:\n+                return \"Templario\";\n+            case 112:\n+                return \"Heroi\";\n+            case 120:\n+                return \"Escudeiro\";\n+            case 121:\n+                return \"Cavaleiro Branco\";\n+            case 122:\n+                return \"Paladino\";\n+            case 130:\n+                return \"Lanceiro\";\n+            case 131:\n+                return \"Cavaleiro Draconiano\";\n+            case 132:\n+                return \"Cavaleiro Negro\";\n+\n+            case 200:\n+                return \"Bruxo\";\n+            case 210:\n+                return \"Feiticeiro (Fogo, Veneno)\";\n+            case 211:\n+                return \"Mago (Fogo, Veneno)\";\n+            case 212:\n+                return \"Arquimago (Fogo, Veneno)\";\n+            case 220:\n+                return \"Feiticeiro (Gelo, Raio)\";\n+            case 221:\n+                return \"Mago (Gelo, Raio)\";\n+            case 222:\n+                return \"Arquimago (Gelo, Raio)\";\n+            case 230:\n+                return \"Cl\ufffdrigo\";\n+            case 231:\n+                return \"Sacerdote\";\n+            case 232:\n+                return \"Sumo Sacerdote\";\n+\n+            case 300:\n+                return \"Arqueiro\";\n+            case 310:\n+                return \"Ca\ufffdador\";\n+            case 311:\n+                return \"Rastreador\";\n+            case 312:\n+                return \"Mestre Arqueiro\";\n+            case 320:\n+                return \"Balestreiro\";\n+            case 321:\n+                return \"Atirador\";\n+            case 322:\n+                return \"Atirador De Elite\";\n+\n+            case 400:\n+                return \"Gatuno\";\n+            case 410:\n+                return \"Mercenario\";\n+            case 411:\n+                return \"Andarilho\";\n+            case 412:\n+                return \"Lorde Negro\";\n+            case 420:\n+                return \"Arruaceiro\";\n+            case 421:\n+                return \"Mestre Arruaceiro\";\n+            case 422:\n+                return \"Mestre Das Sombras\";\n+\n+            case 500:\n+                return \"Pirata\";\n+            case 510:\n+                return \"Lutador\";\n+            case 511:\n+                return \"Saqueador\";\n+            case 512:\n+                return \"Foragido\";\n+            case 520:\n+                return \"Pistoleiro\";\n+            case 521:\n+                return \"Bucaneiro\";\n+            case 522:\n+                return \"Captain\";\n+\n+            default:\n+                return \"Unknown Job\";\n+        }\n+    }\n }"}, {"sha": "5085fee67e0321a4d92daa10d011defd8eebe8c4", "filename": "src/scripting/AbstractPlayerInteraction.java", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/AbstractPlayerInteraction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/AbstractPlayerInteraction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/AbstractPlayerInteraction.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -237,7 +237,9 @@ public boolean canHold(int itemid, int quantity, int removeItemid, int removeQua\n         \n         private static List<Integer> convertToIntegerArray(List<Double> list) {\n                 List<Integer> intList = new LinkedList<>();\n-                for(Double d: list) intList.add(d.intValue());\n+                for(Double d: list) {\n+                        intList.add(d.intValue());\n+                }\n \n                 return intList;\n         }\n@@ -346,7 +348,9 @@ public void openNpc(int npcid) {\n \t}\n \n \tpublic void openNpc(int npcid, String script) {\n-                if(c.getCM() != null) return;\n+                if (c.getCM() != null) {\n+                    return;\n+                }\n             \n \t\tc.removeClickedNPC();\n \t\tNPCScriptManager.getInstance().dispose(c);\n@@ -423,17 +427,23 @@ public int getQuestProgress(int qid) {\n                 MapleQuestStatus status = c.getPlayer().getQuest(MapleQuest.getInstance(qid));\n                 String progress = status.getProgress(status.getAnyProgressKey());\n             \n-                if(progress.isEmpty()) return 0;\n+                if (progress.isEmpty()) {\n+                        return 0;\n+                }\n                 return Integer.parseInt(progress);\n         }\n         \n         public int getQuestProgress(int qid, int pid) {\n-                if(getPlayer().getQuest(MapleQuest.getInstance(qid)).getProgress(pid).isEmpty()) return 0;\n+                if (getPlayer().getQuest(MapleQuest.getInstance(qid)).getProgress(pid).isEmpty()) {\n+                    return 0;\n+                }\n \t\treturn Integer.parseInt(getPlayer().getQuest(MapleQuest.getInstance(qid)).getProgress(pid));\n \t}\n         \n         public String getStringQuestProgress(int qid, int pid) {\n-                if(getPlayer().getQuest(MapleQuest.getInstance(qid)).getProgress(pid).isEmpty()) return \"\";\n+                if (getPlayer().getQuest(MapleQuest.getInstance(qid)).getProgress(pid).isEmpty()) {\n+                    return \"\";\n+                }\n                 return getPlayer().getQuest(MapleQuest.getInstance(qid)).getProgress(pid);\n         }\n         \n@@ -548,7 +558,9 @@ public Item gainItem(int id, short quantity, boolean randomStats, boolean showMe\n                                 \n                                 if(item != null) {\n                                     Equip it = (Equip)item;\n-                                    if(ItemConstants.isAccessory(item.getItemId()) && it.getUpgradeSlots() <= 0) it.setUpgradeSlots(3);\n+                                    if (ItemConstants.isAccessory(item.getItemId()) && it.getUpgradeSlots() <= 0) {\n+                                        it.setUpgradeSlots(3);\n+                                    }\n                                 \n                                     if(ServerConstants.USE_ENHANCED_CRAFTING == true && c.getPlayer().getCS() == true) {\n                                         Equip eqp = (Equip)item;\n@@ -562,8 +574,9 @@ public Item gainItem(int id, short quantity, boolean randomStats, boolean showMe\n \t\t\t\titem = new Item(id, (short) 0, quantity, petId);\n \t\t\t}\n \n-\t\t\tif(expires >= 0)\n-\t\t\t\titem.setExpiration(System.currentTimeMillis() + expires);\n+\t\t\tif (expires >= 0) {\n+                                item.setExpiration(System.currentTimeMillis() + expires);\n+                        }\n \n \t\t\tif (!MapleInventoryManipulator.checkSpace(c, id, quantity, \"\")) {\n \t\t\t\tc.getPlayer().dropMessage(1, \"Your inventory is full. Please remove an item from your \" + ItemConstants.getInventoryType(id).name() + \" inventory.\");\n@@ -641,8 +654,6 @@ public void displayAranIntro() {\n \t\tshowIntro(intro);\n \t}\n \n-\n-\n \tpublic void showIntro(String path) {\n \t\tc.announce(MaplePacketCreator.showIntro(path));\n \t}\n@@ -680,8 +691,9 @@ public boolean isGuildLeader() {\n         }\n \n         public boolean isPartyLeader() {\n-\t\tif(getParty() == null)\n+\t\tif (getParty() == null) {\n \t\t\treturn false;\n+                }\n \t\t\n                 return getParty().getLeaderId() == getPlayer().getId();\n \t}\n@@ -735,7 +747,6 @@ public void givePartyExp(String PQ) {\n \t\tgivePartyExp(PQ, true);\n \t}\n \n-\n \tpublic void givePartyExp(String PQ, boolean instance) {\n \t\t//1 player  =  +0% bonus (100)\n \t\t//2 players =  +0% bonus (100)\n@@ -1093,4 +1104,4 @@ public void npcTalk(int npcid, String message) {\n     public long getCurrentTime() {\n \t    return System.currentTimeMillis();\n     }    \n-}\n+}\n\\ No newline at end of file"}, {"sha": "2d7d16d9055eea8230a05b08567622a04697fb3a", "filename": "src/scripting/event/EventScriptManager.java", "status": "modified", "additions": 31, "deletions": 28, "changes": 59, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/event/EventScriptManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/event/EventScriptManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/event/EventScriptManager.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,24 +1,24 @@\n /*\n-\tThis file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n-\t\t       Matthias Butz <matze@odinms.de>\n-\t\t       Jan Christian Meyer <vimes@odinms.de>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n+ This file is part of the OdinMS Maple Story Server\n+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+ Matthias Butz <matze@odinms.de>\n+ Jan Christian Meyer <vimes@odinms.de>\n+\n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+\n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n package scripting.event;\n \n import java.util.LinkedHashMap;\n@@ -38,8 +38,9 @@\n  * @author Matze\n  */\n public class EventScriptManager extends AbstractScriptManager {\n-    \n+\n     private class EventEntry {\n+\n         public EventEntry(Invocable iv, EventManager em) {\n             this.iv = iv;\n             this.em = em;\n@@ -78,27 +79,29 @@ public void init() {\n             }\n         }\n     }\n-    \n+\n     private void reloadScripts() {\n-        if (events.isEmpty()) return;\n-        \n+        if (events.isEmpty()) {\n+            return;\n+        }\n+\n         Channel cserv = events.values().iterator().next().em.getChannelServer();\n         for (Entry<String, EventEntry> entry : events.entrySet()) {\n             String script = entry.getKey();\n             Invocable iv = getInvocable(\"event/\" + script + \".js\", null);\n             events.put(script, new EventEntry(iv, new EventManager(cserv, iv, script)));\n         }\n     }\n-    \n+\n     public void reload() {\n-    \tcancel();\n+        cancel();\n         reloadScripts();\n-    \tinit();\n+        init();\n     }\n \n     public void cancel() {\n         for (EventEntry entry : events.values()) {\n             entry.em.cancel();\n         }\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "a9b1f4b4217ee502fd3314533720ee2929b3a66f", "filename": "src/scripting/event/worker/EventScriptScheduler.java", "status": "modified", "additions": 54, "deletions": 51, "changes": 105, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/event/worker/EventScriptScheduler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/event/worker/EventScriptScheduler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/event/worker/EventScriptScheduler.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,22 +1,22 @@\n /*\n-    This file is part of the HeavenMS MapleStory Server\n-    Copyleft (L) 2016 - 2018 RonanLana\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n+ This file is part of the HeavenMS MapleStory Server\n+ Copyleft (L) 2016 - 2018 RonanLana\n+\n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+\n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n package scripting.event.worker;\n \n import constants.ServerConstants;\n@@ -39,81 +39,84 @@\n  * @author Ronan\n  */\n public class EventScriptScheduler {\n+\n     private boolean disposed = false;\n     private int idleProcs = 0;\n     private Map<Runnable, Long> registeredEntries = new HashMap<>();\n-    \n+\n     private ScheduledFuture<?> schedulerTask = null;\n     private MonitoredReentrantLock schedulerLock;\n     private Runnable monitorTask = new Runnable() {\n-                                        @Override\n-                                        public void run() {\n-                                            runBaseSchedule();\n-                                        }\n-                                    };\n-    \n+        @Override\n+        public void run() {\n+            runBaseSchedule();\n+        }\n+    };\n+\n     public EventScriptScheduler() {\n         schedulerLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.EM_SCHDL, true);\n     }\n-    \n+\n     private void runBaseSchedule() {\n         List<Runnable> toRemove;\n         Map<Runnable, Long> registeredEntriesCopy;\n-        \n+\n         schedulerLock.lock();\n         try {\n-            if(registeredEntries.isEmpty()) {\n+            if (registeredEntries.isEmpty()) {\n                 idleProcs++;\n-                \n-                if(idleProcs >= ServerConstants.MOB_STATUS_MONITOR_LIFE) {\n-                    if(schedulerTask != null) {\n+\n+                if (idleProcs >= ServerConstants.MOB_STATUS_MONITOR_LIFE) {\n+                    if (schedulerTask != null) {\n                         schedulerTask.cancel(false);\n                         schedulerTask = null;\n                     }\n                 }\n-                \n+\n                 return;\n             }\n-            \n+\n             idleProcs = 0;\n             registeredEntriesCopy = new HashMap<>(registeredEntries);\n         } finally {\n             schedulerLock.unlock();\n         }\n-        \n+\n         long timeNow = Server.getInstance().getCurrentTime();\n         toRemove = new LinkedList<>();\n-        for(Entry<Runnable, Long> rmd : registeredEntriesCopy.entrySet()) {\n-            if(rmd.getValue() < timeNow) {\n+        for (Entry<Runnable, Long> rmd : registeredEntriesCopy.entrySet()) {\n+            if (rmd.getValue() < timeNow) {\n                 Runnable r = rmd.getKey();\n-                \n+\n                 r.run();  // runs the scheduled action\n                 toRemove.add(r);\n             }\n         }\n-        \n-        if(!toRemove.isEmpty()) {\n+\n+        if (!toRemove.isEmpty()) {\n             schedulerLock.lock();\n             try {\n-                for(Runnable r : toRemove) {\n+                for (Runnable r : toRemove) {\n                     registeredEntries.remove(r);\n                 }\n             } finally {\n                 schedulerLock.unlock();\n             }\n         }\n     }\n-    \n+\n     public void registerEntry(final Runnable scheduledAction, final long duration) {\n-        \n+\n         ThreadManager.getInstance().newTask(new Runnable() {\n             @Override\n             public void run() {\n                 schedulerLock.lock();\n                 try {\n                     idleProcs = 0;\n-                    if(schedulerTask == null) {\n-                        if(disposed) return;\n+                    if (schedulerTask == null) {\n+                        if (disposed) {\n+                            return;\n+                        }\n \n                         schedulerTask = TimerManager.getInstance().register(monitorTask, ServerConstants.MOB_STATUS_MONITOR_PROC, ServerConstants.MOB_STATUS_MONITOR_PROC);\n                     }\n@@ -125,9 +128,9 @@ public void run() {\n             }\n         });\n     }\n-    \n+\n     public void cancelEntry(final Runnable scheduledAction) {\n-        \n+\n         ThreadManager.getInstance().newTask(new Runnable() {\n             @Override\n             public void run() {\n@@ -140,15 +143,15 @@ public void run() {\n             }\n         });\n     }\n-    \n+\n     public void dispose() {\n-        \n+\n         ThreadManager.getInstance().newTask(new Runnable() {\n             @Override\n             public void run() {\n                 schedulerLock.lock();\n                 try {\n-                    if(schedulerTask != null) {\n+                    if (schedulerTask != null) {\n                         schedulerTask.cancel(false);\n                         schedulerTask = null;\n                     }\n@@ -163,7 +166,7 @@ public void run() {\n             }\n         });\n     }\n-    \n+\n     private void disposeLocks() {\n         LockCollector.getInstance().registerDisposeAction(new Runnable() {\n             @Override\n@@ -172,7 +175,7 @@ public void run() {\n             }\n         });\n     }\n-    \n+\n     private void emptyLocks() {\n         schedulerLock = schedulerLock.dispose();\n     }"}, {"sha": "206a7105bc51dde74f631e46f2b97ee3a0f2a13c", "filename": "src/scripting/item/ItemScriptMethods.java", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/item/ItemScriptMethods.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/item/ItemScriptMethods.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/item/ItemScriptMethods.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,35 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package scripting.item;\n+\n+import client.MapleClient;\n+import scripting.AbstractPlayerInteraction;\n+\n+/**\n+ *\n+ * @author kevintjuh93\n+ */\n+public class ItemScriptMethods extends AbstractPlayerInteraction {\n+    public ItemScriptMethods(MapleClient c) {\n+    \tsuper(c);\n+    }\n+}"}, {"sha": "cb42d074996b2fc61e9c368d55e2cb99df60b125", "filename": "src/scripting/npc/NPCConversationManager.java", "status": "modified", "additions": 391, "deletions": 4, "changes": 395, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/npc/NPCConversationManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/npc/NPCConversationManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/npc/NPCConversationManager.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -58,28 +58,47 @@\n import client.inventory.ItemFactory;\n import client.inventory.MaplePet;\n import constants.ItemConstants;\n-import java.awt.Point;\n-import java.util.Arrays;\n+import constants.LinguaConstants;\n+import net.server.channel.Channel;\n+import scripting.event.EventInstanceManager;\n import server.MapleSkillbookInformationProvider;\n import server.MapleSkillbookInformationProvider.SkillBookEntry;\n+import server.TimerManager;\n import server.maps.MapleMapObject;\n import server.maps.MapleMapObjectType;\n+import server.partyquest.MonsterCarnival;\n+import tools.FilePrinter;\n+import tools.packets.Wedding;\n+\n+import java.awt.Point;\n+import java.util.Arrays;\n+import java.util.LinkedList;\n+import java.util.List;\n \n /**\n  *\n  * @author Matze\n  */\n public class NPCConversationManager extends AbstractPlayerInteraction {\n+        \n \tprivate int npc;\n         private int npcOid;\n \tprivate String scriptName;\n \tprivate String getText;\n         private boolean itemScript;\n+        private List<MaplePartyCharacter> otherParty;\n         \n         public NPCConversationManager(MapleClient c, int npc, String scriptName) {\n                this(c, npc, -1, scriptName, false);\n         }\n         \n+        public NPCConversationManager(MapleClient c, int npc, List<MaplePartyCharacter> otherParty, boolean test) {\n+                super(c);\n+                this.c = c;\n+                this.npc = npc;\n+                this.otherParty = otherParty;\n+        }\n+        \n \tpublic NPCConversationManager(MapleClient c, int npc, int oid, String scriptName, boolean itemScript) {\n \t\tsuper(c);\n \t\tthis.npc = npc;\n@@ -549,7 +568,9 @@ public boolean itemExists(int itemid) {\n         }\n         \n         public int getCosmeticItem(int itemid) {\n-                if (itemExists(itemid)) return itemid;\n+                if (itemExists(itemid)) {\n+                        return itemid;\n+                }\n                 \n                 int baseid;\n                 if (itemid < 30000) {\n@@ -594,4 +615,370 @@ public String getSkillBookInfo(int itemid) {\n                 return sbe != SkillBookEntry.UNAVAILABLE ? \"    Obtainable through #rquestline#k.\" : \"\";\n         }\n         \n-}\n+        // By Drago/Dragohe4rt CPQ + WED\n+        public int calcAvgLvl(int map) {\n+            int num = 0;\n+            int avg = 0;\n+            for (MapleMapObject mmo\n+                    : c.getChannelServer().getMapFactory().getMap(map).getAllPlayer()) {\n+                avg += ((MapleCharacter) mmo).getLevel();\n+                num++;\n+            }\n+            avg /= num;\n+            return avg;\n+        }\n+\n+        public void sendCPQMapLists() {\n+            String msg = LinguaConstants.Linguas(getPlayer()).CPQInicioEscolha;\n+            for (int i = 0; i < 6; i++) {\n+                if (fieldTaken(i)) {\n+                    if (fieldLobbied(i)) {\n+                        msg += \"#b#L\" + i + \"#Map \" + (i + 1) + \" (n\u00edvel: \"\n+                                + calcAvgLvl(980000100 + i * 100) + \" / \"\n+                                + getPlayerCount(980000100 + i * 100) + \"x\"\n+                                + getPlayerCount(980000100 + i * 100) + \")  #l\\\\r\\\\n\";\n+                    } else {\n+                        continue;\n+                    }\n+                } else {\n+                    if (i == 0 || i == 1 || i == 2 || i == 3) {\n+                        msg += \"#b#L\" + i + \"#Map \" + (i + 1) + \" (2x2) #l\\\\r\\\\n\";\n+                    } else {\n+                        msg += \"#b#L\" + i + \"#Map \" + (i + 1) + \" (3x3) #l\\\\r\\\\n\";\n+                    }\n+                }\n+            }\n+            sendSimple(msg);\n+        }\n+\n+        public boolean fieldTaken(int field) {\n+            if (!c.getChannelServer().getMapFactory().getMap(980000100 + field * 100).getAllPlayer().isEmpty()) {\n+                return true;\n+            }\n+            if (!c.getChannelServer().getMapFactory().getMap(980000101 + field * 100).getAllPlayer().isEmpty()) {\n+                return true;\n+            }\n+            if (!c.getChannelServer().getMapFactory().getMap(980000102 + field * 100).getAllPlayer().isEmpty()) {\n+                return true;\n+            }\n+            return false;\n+        }\n+\n+        public boolean fieldLobbied(int field) {\n+            if (!c.getChannelServer().getMapFactory().getMap(980000100 + field * 100).getAllPlayer().isEmpty()) {\n+                return true;\n+            }\n+            return false;\n+        }\n+\n+        public void cpqLobby(int field) {\n+            try {\n+                final MapleMap map, mapsaida;\n+                Channel cs = c.getChannelServer();\n+                map = cs.getMapFactory().getMap(980000100 + 100 * field);\n+                mapsaida = cs.getMapFactory().getMap(980000000);\n+                for (MaplePartyCharacter mpc : c.getPlayer().getParty().getMembers()) {\n+                    final MapleCharacter mc;\n+                    mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                    if (mc != null) {\n+                        mc.changeMap(map, map.getPortal(0));\n+                        mc.getClient().getSession().write(MaplePacketCreator.serverNotice(6, LinguaConstants.Linguas(mc).CPQEntradaLobby));\n+                        TimerManager tMan = TimerManager.getInstance();\n+                        tMan.schedule(new Runnable() {\n+                            @Override\n+                            public void run() {\n+                                mapClock(3 * 60);\n+                            }\n+                        }, 1500);\n+                    }\n+                    mc.timer = TimerManager.getInstance().schedule(new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            mc.changeMap(mapsaida, mapsaida.getPortal(0));\n+                        }\n+                    }, 3 * 60 * 1000);\n+                }\n+            } catch (Exception ex) {\n+                ex.printStackTrace();\n+            }\n+        }\n+\n+        public MapleCharacter getChrById(int id) {\n+            Channel cs = c.getChannelServer();\n+            return cs.getPlayerStorage().getCharacterById(id);\n+        }\n+\n+        public void cancelarSaida() {\n+            Channel cs = c.getChannelServer();\n+            for (MaplePartyCharacter mpc : c.getPlayer().getParty().getMembers()) {\n+                MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                if (mc.timer != null) {\n+                    mc.timer.cancel(true);\n+                    mc.timer = null;\n+                }\n+            }\n+        }\n+\n+        public void startCPQ(final MapleCharacter challenger, final int field) {\n+            try {\n+                cancelarSaida();\n+                if (challenger != null) {\n+                    if (challenger.getParty() == null) {\n+                        throw new RuntimeException(\"Nao existe oponente!\");\n+                    }\n+                    for (MaplePartyCharacter mpc : challenger.getParty().getMembers()) {\n+                        MapleCharacter mc = c.getChannelServer().getPlayerStorage().getCharacterByName(mpc.getName());\n+                        if (mc != null) {\n+                            mc.changeMap(getPlayer().getMap(), getPlayer().getMap().getPortal(0));\n+                            TimerManager tMan = TimerManager.getInstance();\n+                            tMan.schedule(new Runnable() {\n+                                @Override\n+                                public void run() {\n+                                    mapClock(10);\n+                                }\n+                            }, 1500);\n+                        }\n+                    }\n+                    for (MaplePartyCharacter mpc : getPlayer().getParty().getMembers()) {\n+                        MapleCharacter mc = c.getChannelServer().getPlayerStorage().getCharacterByName(mpc.getName());\n+                        if (mc != null) {\n+                            TimerManager tMan = TimerManager.getInstance();\n+                            tMan.schedule(new Runnable() {\n+                                @Override\n+                                public void run() {\n+                                    mapClock(10);\n+                                }\n+                            }, 1500);\n+                        }\n+                    }\n+                }\n+                final int mapid = c.getPlayer().getMapId() + 1;\n+                TimerManager tMan = TimerManager.getInstance();\n+                tMan.schedule(new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        Channel cs = c.getChannelServer();\n+                        for (MaplePartyCharacter mpc : getPlayer().getParty().getMembers()) {\n+                            MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                            mc.setMonsterCarnival(null);\n+                        }\n+                        for (MaplePartyCharacter mpc : challenger.getParty().getMembers()) {\n+                            MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                            mc.setMonsterCarnival(null);\n+                        }\n+                        \n+                        new MonsterCarnival(getPlayer().getParty(), challenger.getParty(), mapid, true);\n+                    }\n+                }, 11000);\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        public void startCPQ2(final MapleCharacter challenger, final int field) {\n+            try {\n+                cancelarSaida();\n+                if (challenger != null) {\n+                    if (challenger.getParty() == null) {\n+                        throw new RuntimeException(\"N\u00e3o existe oponente!\");\n+                    }\n+                    for (MaplePartyCharacter mpc : challenger.getParty().getMembers()) {\n+                        MapleCharacter mc = c.getChannelServer().getPlayerStorage().getCharacterByName(mpc.getName());\n+                        if (mc != null) {\n+                            mc.changeMap(getPlayer().getMap(), getPlayer().getMap().getPortal(0));\n+                            mapClock(10);\n+                        }\n+                    }\n+                }\n+                final int mapid = c.getPlayer().getMapId() + 100;\n+                TimerManager tMan = TimerManager.getInstance();\n+                tMan.schedule(new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        Channel cs = c.getChannelServer();\n+                        for (MaplePartyCharacter mpc : getPlayer().getParty().getMembers()) {\n+                            MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                            mc.setMonsterCarnival(null);\n+                        }\n+                        for (MaplePartyCharacter mpc : challenger.getParty().getMembers()) {\n+                            MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                            mc.setMonsterCarnival(null);\n+                        }\n+                        \n+                        new MonsterCarnival(getPlayer().getParty(), challenger.getParty(), mapid, false);\n+                    }\n+                }, 10000);\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        public void sendCPQMapLists2() {\n+            String msg = LinguaConstants.Linguas(getPlayer()).CPQInicioEscolha;\n+            for (int i = 0; i < 3; i++) {\n+                if (fieldTaken2(i)) {\n+                    if (fieldLobbied2(i)) {\n+                        msg += \"#b#L\" + i + \"#Map \" + (i + 1) + \" (N\u00edvel: \"\n+                                + calcAvgLvl(980031000 + i * 1000) + \"#l\\\\r\\\\n\";\n+                    } else {\n+                        continue;\n+                    }\n+                } else {\n+                    if (i == 0 || i == 1) {\n+                        msg += \"#b#L\" + i + \"#Map \" + (i + 1) + \" (2x2) #l\\\\r\\\\n\";\n+                    } else {\n+                        msg += \"#b#L\" + i + \"#Map \" + (i + 1) + \" (3x3) #l\\\\r\\\\n\";\n+                    }\n+                }\n+            }\n+            sendSimple(msg);\n+        }\n+\n+        public boolean fieldTaken2(int field) {\n+            if (!c.getChannelServer().getMapFactory().getMap(980031000 + field * 1000).getAllPlayer().isEmpty()) {\n+                return true;\n+            }\n+            if (!c.getChannelServer().getMapFactory().getMap(980031000 + field * 1000).getAllPlayer().isEmpty()) {\n+                return true;\n+            }\n+            if (!c.getChannelServer().getMapFactory().getMap(980031000 + field * 1000).getAllPlayer().isEmpty()) {\n+                return true;\n+            }\n+            return false;\n+        }\n+\n+        public boolean fieldLobbied2(int field) {\n+            if (!c.getChannelServer().getMapFactory().getMap(980031000 + field * 1000).getAllPlayer().isEmpty()) {\n+                return true;\n+            }\n+            return false;\n+        }\n+\n+        public void cpqLobby2(int field) {\n+            try {\n+                final MapleMap map, mapsaida;\n+                Channel cs = c.getChannelServer();\n+                mapsaida = cs.getMapFactory().getMap(980030000);\n+                map = cs.getMapFactory().getMap(980031000 + 1000 * field);\n+                for (MaplePartyCharacter mpc : c.getPlayer().getParty().getMembers()) {\n+                    final MapleCharacter mc;\n+                    mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                    if (mc != null) {\n+                        mc.changeMap(map, map.getPortal(0));\n+                        mc.getClient().getSession().write(MaplePacketCreator.serverNotice(6, LinguaConstants.Linguas(mc).CPQEntradaLobby));\n+                        TimerManager tMan = TimerManager.getInstance();\n+                        tMan.schedule(new Runnable() {\n+                            @Override\n+                            public void run() {\n+                                mapClock(3 * 60);\n+                            }\n+                        }, 1500);\n+                    }\n+                    mc.timer = TimerManager.getInstance().schedule(new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            mc.changeMap(mapsaida, mapsaida.getPortal(0));\n+                        }\n+                    }, 3 * 60 * 1000);\n+                }\n+            } catch (Exception ex) {\n+                ex.printStackTrace();\n+            }\n+        }\n+\n+        public void challengeParty2(int field) {\n+            MapleCharacter leader = null;\n+            MapleMap map = c.getChannelServer().getMapFactory().getMap(980031000 + 1000 * field);\n+            for (MapleMapObject mmo : map.getAllPlayer()) {\n+                MapleCharacter mc = (MapleCharacter) mmo;\n+                if (mc.getParty() == null) {\n+                    sendOk(LinguaConstants.Linguas(mc).CPQEscolha);\n+                    return;\n+                }\n+                if (mc.getParty().getLeader().getId() == mc.getId()) {\n+                    leader = mc;\n+                    break;\n+                }\n+            }\n+            if (leader != null) {\n+                if (!leader.isChallenged()) {\n+                    List<MaplePartyCharacter> members = new LinkedList<>();\n+                    for (MaplePartyCharacter fucker : c.getPlayer().getParty().getMembers()) {\n+                        members.add(fucker);\n+                    }\n+                    NPCScriptManager.getInstance().start(\"cpqchallenge2\", leader.getClient(), npc, members);\n+                } else {\n+                    sendOk(LinguaConstants.Linguas(leader).CPQInicioEscolhaEmEscolha);\n+                }\n+            } else {\n+                sendOk(LinguaConstants.Linguas(leader).CPQLiderNaoEncontrado);\n+            }\n+        }\n+\n+        public void mapClock(int time) {\n+            //getPlayer().getMap().broadcastMessage(MaplePacketCreator.serverNotice(type, message));\n+            getPlayer().getMap().broadcastMessage(MaplePacketCreator.getClock(time));\n+        }\n+\n+        public void challengeParty(int field) {\n+            MapleCharacter leader = null;\n+            MapleMap map = c.getChannelServer().getMapFactory().getMap(980000100 + 100 * field);\n+            if (map.getAllPlayer().size() != getPlayer().getParty().getMembers().size()) {\n+                sendOk(\"erro\");\n+                return;\n+            }\n+            for (MapleMapObject mmo : map.getAllPlayer()) {\n+                MapleCharacter mc = (MapleCharacter) mmo;\n+                if (mc.getParty() == null) {\n+                    sendOk(LinguaConstants.Linguas(mc).CPQEscolha);\n+                    return;\n+                }\n+                if (mc.getParty().getLeader().getId() == mc.getId()) {\n+                    leader = mc;\n+                    break;\n+                }\n+            }\n+            if (leader != null) {\n+                if (!leader.isChallenged()) {\n+                    List<MaplePartyCharacter> members = new LinkedList<>();\n+                    for (MaplePartyCharacter fucker : c.getPlayer().getParty().getMembers()) {\n+                        members.add(fucker);\n+                    }\n+                    NPCScriptManager.getInstance().start(\"cpqchallenge\", leader.getClient(), npc, members);\n+                } else {\n+                    sendOk(LinguaConstants.Linguas(leader).CPQInicioEscolhaEmEscolha);\n+                }\n+            } else {\n+                sendOk(LinguaConstants.Linguas(leader).CPQLiderNaoEncontrado);\n+            }\n+        }\n+\n+        public MapleCharacter getCharByName(String namee) {\n+            try {\n+                return getClient().getChannelServer().getPlayerStorage().getCharacterByName(namee);\n+            } catch (Exception e) {\n+                return null;\n+            }\n+        }\n+\n+        public void enviarLista() {\n+            EventInstanceManager eim = getEventInstance();\n+            if(eim != null) {\n+                String name = eim.getProperty(\"brideId\");\n+                MapleCharacter chr = getChrById(Integer.parseInt(name));\n+                //MapleCharacter chr = getChrById(3);\n+                if (chr != null) {\n+                    if (chr.getId() == getPlayer().getId()) {\n+                        getPlayer().announce(Wedding.OnWeddingGiftResult((byte) 0xA, chr.getItens(), chr.getItem()));\n+                    } else {\n+                        getPlayer().announce(Wedding.OnWeddingGiftResult((byte) 0x09, chr.getItens(), chr.getItem()));\n+                    }\n+                }\n+            }\n+        }\n+\n+        public void criarLista() {\n+            getClient().getSession().write(Wedding.sendWishList());\n+        }\n+        \n+}\n\\ No newline at end of file"}, {"sha": "ecda65e399393f3efbe0fe13af2eafec859afade", "filename": "src/scripting/npc/NPCScriptManager.java", "status": "modified", "additions": 59, "deletions": 14, "changes": 73, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/npc/NPCScriptManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/npc/NPCScriptManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/npc/NPCScriptManager.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -26,10 +26,12 @@\n \n import java.lang.reflect.UndeclaredThrowableException;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n \n import javax.script.Invocable;\n import javax.script.ScriptException;\n+import net.server.world.MaplePartyCharacter;\n \n import scripting.AbstractScriptManager;\n import server.MapleItemInformationProvider.ScriptedItem;\n@@ -43,43 +45,86 @@\n public class NPCScriptManager extends AbstractScriptManager {\n \n     private static NPCScriptManager instance = new NPCScriptManager();\n-    \n+\n     public static NPCScriptManager getInstance() {\n         return instance;\n     }\n-    \n+\n     private Map<MapleClient, NPCConversationManager> cms = new HashMap<>();\n     private Map<MapleClient, Invocable> scripts = new HashMap<>();\n-    \n+\n     public boolean isNpcScriptAvailable(MapleClient c, String fileName) {\n         Invocable iv = null;\n         if (fileName != null) {\n             iv = getInvocable(\"npc/\" + fileName + \".js\", c);\n         }\n-        \n+\n         return iv != null;\n     }\n-    \n+\n     public boolean start(MapleClient c, int npc, MapleCharacter chr) {\n         return start(c, npc, -1, chr);\n     }\n-    \n+\n     public boolean start(MapleClient c, int npc, int oid, MapleCharacter chr) {\n         return start(c, npc, oid, null, chr);\n     }\n-    \n+\n     public boolean start(MapleClient c, int npc, String fileName, MapleCharacter chr) {\n         return start(c, npc, -1, fileName, chr);\n     }\n-    \n+\n     public boolean start(MapleClient c, int npc, int oid, String fileName, MapleCharacter chr) {\n         return start(c, npc, oid, fileName, chr, false, \"cm\");\n     }\n-    \n+\n     public boolean start(MapleClient c, ScriptedItem scriptItem, MapleCharacter chr) {\n         return start(c, scriptItem.getNpc(), -1, scriptItem.getScript(), chr, true, \"im\");\n     }\n \n+    public void start(String filename, MapleClient c, int npc, List<MaplePartyCharacter> chrs) {\n+        try {\n+            NPCConversationManager cm = new NPCConversationManager(c, npc, chrs, true);\n+            cm.dispose();\n+            if (cms.containsKey(c)) {\n+                return;\n+            }\n+            cms.put(c, cm);\n+            Invocable iv = null;\n+            iv = getInvocable(\"npc/\" + filename + \".js\", c);\n+            NPCScriptManager npcsm = NPCScriptManager.getInstance();\n+\n+            if (iv == null || NPCScriptManager.getInstance() == null) {\n+                c.getPlayer().dropMessage(1, npc + \"\");\n+                cm.dispose();\n+                return;\n+            }\n+            if (iv == null || npcsm == null) {\n+                c.getPlayer().dropMessage(1, npc + \"\");\n+                cm.dispose();\n+                return;\n+            }\n+            engine.put(\"cm\", cm);\n+            scripts.put(c, iv);\n+            try {\n+                iv.invokeFunction(\"start\", chrs);\n+            } catch (final NoSuchMethodException nsme) {\n+                try {\n+                    iv.invokeFunction(\"start\", chrs);\n+                } catch (final NoSuchMethodException nsma) {\n+                    nsma.printStackTrace();\n+                }\n+            }\n+\n+        } catch (final UndeclaredThrowableException ute) {\n+            FilePrinter.printError(FilePrinter.NPC + npc + \".txt\", ute);\n+            dispose(c);\n+        } catch (final Exception e) {\n+            FilePrinter.printError(FilePrinter.NPC + npc + \".txt\", e);\n+            dispose(c);\n+        }\n+    }\n+\n     private boolean start(MapleClient c, int npc, int oid, String fileName, MapleCharacter chr, boolean itemScript, String engineName) {\n         try {\n             NPCConversationManager cm = new NPCConversationManager(c, npc, oid, fileName, itemScript);\n@@ -121,17 +166,17 @@ private boolean start(MapleClient c, int npc, int oid, String fileName, MapleCha\n             } else {\n                 c.announce(MaplePacketCreator.enableActions());\n             }\n-            \n+\n             return true;\n         } catch (final UndeclaredThrowableException | ScriptException ute) {\n             FilePrinter.printError(FilePrinter.NPC + npc + \".txt\", ute);\n             dispose(c);\n-            \n+\n             return false;\n         } catch (final Exception e) {\n             FilePrinter.printError(FilePrinter.NPC + npc + \".txt\", e);\n             dispose(c);\n-            \n+\n             return false;\n         }\n     }\n@@ -157,9 +202,9 @@ public void dispose(NPCConversationManager cm) {\n         c.getPlayer().setNpcCooldown(System.currentTimeMillis());\n         cms.remove(c);\n         scripts.remove(c);\n-        \n+\n         String scriptFolder = (cm.isItemScript() ? \"item\" : \"npc\");\n-        if(cm.getScriptName() != null) {\n+        if (cm.getScriptName() != null) {\n             resetContext(scriptFolder + \"/\" + cm.getScriptName() + \".js\", c);\n         } else {\n             resetContext(scriptFolder + \"/\" + cm.getNpc() + \".js\", c);"}, {"sha": "267282c7d9820ccc3bcc05a2e5f3dccec102e2d6", "filename": "src/scripting/reactor/ReactorActionManager.java", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/reactor/ReactorActionManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/scripting/reactor/ReactorActionManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/reactor/ReactorActionManager.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -47,6 +47,8 @@\n import server.maps.MapleMap;\n import server.maps.MapleReactor;\n import server.maps.ReactorDropEntry;\n+import server.partyquest.MapleCarnivalFactory;\n+import server.partyquest.MapleCarnivalFactory.MCSkill;\n import tools.MaplePacketCreator;\n \n /**\n@@ -311,4 +313,20 @@ public void run() {\n             }\n         }, timestamp);\n     }\n+    \n+    public void dispelAllMonsters(int num, int team) { //dispels all mobs, cpq\n+        final MCSkill skil = MapleCarnivalFactory.getInstance().getGuardian(num);\n+        if (skil != null) {\n+            for (MapleMonster mons : getMap().getMonsters()) {\n+                if(mons.getTeam() == team) {\n+                    mons.dispelSkill(skil.getSkill());\n+                }\n+            }\n+        }\n+        if (team == 0) {\n+            getPlayer().getMap().getRedTeamBuffs().remove(skil);\n+        } else {\n+            getPlayer().getMap().getBlueTeamBuffs().remove(skil);\n+        }\n+    }\n }\n\\ No newline at end of file"}, {"sha": "5c83c3228563f4be92f952b5facf10f2785a6fda", "filename": "src/server/MapleStatEffect.java", "status": "modified", "additions": 219, "deletions": 153, "changes": 372, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/MapleStatEffect.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/MapleStatEffect.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleStatEffect.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -50,7 +50,6 @@\n import client.MapleDisease;\n import client.MapleJob;\n import client.MapleMount;\n-import client.MapleStat;\n import client.Skill;\n import client.SkillFactory;\n import client.inventory.Item;\n@@ -111,6 +110,10 @@\n import constants.skills.ThunderBreaker;\n import constants.skills.WhiteKnight;\n import constants.skills.WindArcher;\n+import net.server.world.MapleParty;\n+import net.server.world.MaplePartyCharacter;\n+import server.partyquest.MapleCarnivalFactory;\n+import server.partyquest.MapleCarnivalFactory.MCSkill;\n \n /**\n  * @author Matze\n@@ -129,6 +132,8 @@\n     private boolean overTime, repeatEffect;\n     private int sourceid;\n     private int moveTo;\n+    private int cp, nuffSkill;\n+    private List<MapleDisease> cureDebuffs;\n     private boolean skill;\n     private List<Pair<MapleBuffStat, Integer>> statups;\n     private Map<MonsterStatus, Integer> monsterStatus;\n@@ -155,17 +160,15 @@ private static void addBuffStatPairToListIfNotZero(List<Pair<MapleBuffStat, Inte\n     }\n \n     private static byte mapProtection(int sourceid) {\n-        if(sourceid == 2022001 || sourceid == 2022186) {\n+        if (sourceid == 2022001 || sourceid == 2022186) {\n             return 1;   //elnath cold\n-        }\n-        \n-        else if(sourceid == 2022040) {\n+        } else if (sourceid == 2022040) {\n             return 2;   //aqua road underwater\n+        } else {\n+            return 0;\n         }\n-        \n-        else return 0;\n     }\n-    \n+\n     private static MapleStatEffect loadFromData(MapleData source, int sourceid, boolean skill, boolean overTime) {\n         MapleStatEffect ret = new MapleStatEffect();\n         ret.duration = MapleDataTool.getIntConvert(\"time\", source, -1);\n@@ -177,6 +180,27 @@ private static MapleStatEffect loadFromData(MapleData source, int sourceid, bool\n         ret.hpCon = (short) MapleDataTool.getInt(\"hpCon\", source, 0);\n         int iprop = MapleDataTool.getInt(\"prop\", source, 100);\n         ret.prop = iprop / 100.0;\n+\n+        ret.cp = MapleDataTool.getInt(\"cp\", source, 0);\n+        List<MapleDisease> cure = new ArrayList<MapleDisease>(5);\n+        if (MapleDataTool.getInt(\"poison\", source, 0) > 0) {\n+            cure.add(MapleDisease.POISON);\n+        }\n+        if (MapleDataTool.getInt(\"seal\", source, 0) > 0) {\n+            cure.add(MapleDisease.SEAL);\n+        }\n+        if (MapleDataTool.getInt(\"darkness\", source, 0) > 0) {\n+            cure.add(MapleDisease.DARKNESS);\n+        }\n+        if (MapleDataTool.getInt(\"weakness\", source, 0) > 0) {\n+            cure.add(MapleDisease.WEAKEN);\n+        }\n+        if (MapleDataTool.getInt(\"curse\", source, 0) > 0) {\n+            cure.add(MapleDisease.CURSE);\n+        }\n+        ret.cureDebuffs = cure;\n+        ret.nuffSkill = MapleDataTool.getInt(\"nuffSkill\", source, 0);\n+\n         ret.mobCount = MapleDataTool.getInt(\"mobCount\", source, 1);\n         ret.cooldown = MapleDataTool.getInt(\"cooltime\", source, 0);\n         ret.morphId = MapleDataTool.getInt(\"morph\", source, 0);\n@@ -192,41 +216,41 @@ private static MapleStatEffect loadFromData(MapleData source, int sourceid, bool\n             ret.duration *= 1000; // items have their times stored in ms, of course\n             ret.overTime = overTime;\n         }\n-        \n+\n         ArrayList<Pair<MapleBuffStat, Integer>> statups = new ArrayList<>();\n         ret.watk = (short) MapleDataTool.getInt(\"pad\", source, 0);\n         ret.wdef = (short) MapleDataTool.getInt(\"pdd\", source, 0);\n         ret.matk = (short) MapleDataTool.getInt(\"mad\", source, 0);\n         ret.mdef = (short) MapleDataTool.getInt(\"mdd\", source, 0);\n         ret.acc = (short) MapleDataTool.getIntConvert(\"acc\", source, 0);\n         ret.avoid = (short) MapleDataTool.getInt(\"eva\", source, 0);\n-        \n+\n         ret.speed = (short) MapleDataTool.getInt(\"speed\", source, 0);\n         ret.jump = (short) MapleDataTool.getInt(\"jump\", source, 0);\n-        \n+\n         ret.mapProtection = mapProtection(sourceid);\n         addBuffStatPairToListIfNotZero(statups, MapleBuffStat.MAP_PROTECTION, Integer.valueOf(ret.mapProtection));\n-                    \n+\n         if (ret.overTime && ret.getSummonMovementType() == null) {\n-            if(!skill) {\n-                if(isPyramidBuff(sourceid)) {\n+            if (!skill) {\n+                if (isPyramidBuff(sourceid)) {\n                     ret.berserk = MapleDataTool.getInt(\"berserk\", source, 0);\n                     ret.booster = MapleDataTool.getInt(\"booster\", source, 0);\n-                    \n+\n                     addBuffStatPairToListIfNotZero(statups, MapleBuffStat.BERSERK, Integer.valueOf(ret.berserk));\n                     addBuffStatPairToListIfNotZero(statups, MapleBuffStat.BOOSTER, Integer.valueOf(ret.booster));\n-                    \n-                } else if(isDojoBuff(sourceid) || isHpMpRecovery(sourceid)) {\n+\n+                } else if (isDojoBuff(sourceid) || isHpMpRecovery(sourceid)) {\n                     ret.mhpR = (byte) MapleDataTool.getInt(\"mhpR\", source, 0);\n                     ret.mhpRRate = (short) (MapleDataTool.getInt(\"mhpRRate\", source, 0) * 100);\n                     ret.mmpR = (byte) MapleDataTool.getInt(\"mmpR\", source, 0);\n                     ret.mmpRRate = (short) (MapleDataTool.getInt(\"mmpRRate\", source, 0) * 100);\n \n                     addBuffStatPairToListIfNotZero(statups, MapleBuffStat.HPREC, Integer.valueOf(ret.mhpR));\n                     addBuffStatPairToListIfNotZero(statups, MapleBuffStat.MPREC, Integer.valueOf(ret.mmpR));\n-                    \n-                } else if(isRateCoupon(sourceid)) {\n-                    switch(MapleDataTool.getInt(\"expR\", source, 0)) {\n+\n+                } else if (isRateCoupon(sourceid)) {\n+                    switch (MapleDataTool.getInt(\"expR\", source, 0)) {\n                         case 1:\n                             addBuffStatPairToListIfNotZero(statups, MapleBuffStat.COUPON_EXP1, 1);\n                             break;\n@@ -244,7 +268,7 @@ private static MapleStatEffect loadFromData(MapleData source, int sourceid, bool\n                             break;\n                     }\n \n-                    switch(MapleDataTool.getInt(\"drpR\", source, 0)) {\n+                    switch (MapleDataTool.getInt(\"drpR\", source, 0)) {\n                         case 1:\n                             addBuffStatPairToListIfNotZero(statups, MapleBuffStat.COUPON_DRP1, 1);\n                             break;\n@@ -257,18 +281,18 @@ private static MapleStatEffect loadFromData(MapleData source, int sourceid, bool\n                             addBuffStatPairToListIfNotZero(statups, MapleBuffStat.COUPON_DRP3, 1);\n                             break;\n                     }\n-                } else if(isExpIncrease(sourceid)) {\n+                } else if (isExpIncrease(sourceid)) {\n                     addBuffStatPairToListIfNotZero(statups, MapleBuffStat.EXP_INCREASE, MapleDataTool.getInt(\"expinc\", source, 0));\n                 }\n             } else {\n-                if(isMapChair(sourceid)) {\n+                if (isMapChair(sourceid)) {\n                     addBuffStatPairToListIfNotZero(statups, MapleBuffStat.MAP_CHAIR, 1);\n-                } else if((sourceid == Beginner.NIMBLE_FEET || sourceid == Noblesse.NIMBLE_FEET || sourceid == Evan.NIMBLE_FEET || sourceid == Legend.AGILE_BODY) && ServerConstants.USE_ULTRA_NIMBLE_FEET == true) {\n-                    ret.jump = (short)(ret.speed * 4);\n+                } else if ((sourceid == Beginner.NIMBLE_FEET || sourceid == Noblesse.NIMBLE_FEET || sourceid == Evan.NIMBLE_FEET || sourceid == Legend.AGILE_BODY) && ServerConstants.USE_ULTRA_NIMBLE_FEET == true) {\n+                    ret.jump = (short) (ret.speed * 4);\n                     ret.speed *= 15;\n                 }\n             }\n-            \n+\n             addBuffStatPairToListIfNotZero(statups, MapleBuffStat.WATK, Integer.valueOf(ret.watk));\n             addBuffStatPairToListIfNotZero(statups, MapleBuffStat.WDEF, Integer.valueOf(ret.wdef));\n             addBuffStatPairToListIfNotZero(statups, MapleBuffStat.MATK, Integer.valueOf(ret.matk));\n@@ -278,26 +302,26 @@ private static MapleStatEffect loadFromData(MapleData source, int sourceid, bool\n             addBuffStatPairToListIfNotZero(statups, MapleBuffStat.SPEED, Integer.valueOf(ret.speed));\n             addBuffStatPairToListIfNotZero(statups, MapleBuffStat.JUMP, Integer.valueOf(ret.jump));\n         }\n-        \n+\n         MapleData ltd = source.getChildByPath(\"lt\");\n         if (ltd != null) {\n             ret.lt = (Point) ltd.getData();\n             ret.rb = (Point) source.getChildByPath(\"rb\").getData();\n-            \n-            if(ServerConstants.USE_MAXRANGE_ECHO_OF_HERO && (sourceid == Beginner.ECHO_OF_HERO || sourceid == Noblesse.ECHO_OF_HERO || sourceid == Legend.ECHO_OF_HERO || sourceid == Evan.ECHO_OF_HERO)) {\n+\n+            if (ServerConstants.USE_MAXRANGE_ECHO_OF_HERO && (sourceid == Beginner.ECHO_OF_HERO || sourceid == Noblesse.ECHO_OF_HERO || sourceid == Legend.ECHO_OF_HERO || sourceid == Evan.ECHO_OF_HERO)) {\n                 ret.lt = new Point(Integer.MIN_VALUE, Integer.MIN_VALUE);\n                 ret.rb = new Point(Integer.MAX_VALUE, Integer.MAX_VALUE);\n             }\n         }\n-        \n+\n         int x = MapleDataTool.getInt(\"x\", source, 0);\n-        \n-        if((sourceid == Beginner.RECOVERY || sourceid == Noblesse.RECOVERY || sourceid == Evan.RECOVERY || sourceid == Legend.RECOVERY) && ServerConstants.USE_ULTRA_RECOVERY == true) {\n+\n+        if ((sourceid == Beginner.RECOVERY || sourceid == Noblesse.RECOVERY || sourceid == Evan.RECOVERY || sourceid == Legend.RECOVERY) && ServerConstants.USE_ULTRA_RECOVERY == true) {\n             x *= 10;\n         }\n         ret.x = x;\n         ret.y = MapleDataTool.getInt(\"y\", source, 0);\n-        \n+\n         ret.damage = MapleDataTool.getIntConvert(\"damage\", source, 100);\n         ret.fixdamage = MapleDataTool.getIntConvert(\"fixdamage\", source, -1);\n         ret.attackCount = MapleDataTool.getIntConvert(\"attackCount\", source, 1);\n@@ -416,16 +440,16 @@ private static MapleStatEffect loadFromData(MapleData source, int sourceid, bool\n                     break;\n                 case BlazeWizard.ELEMENTAL_RESET:\n                 case Evan.ELEMENTAL_RESET:\n-                \tstatups.add(new Pair<>(MapleBuffStat.ELEMENTAL_RESET, Integer.valueOf(x)));\n-                \tbreak;\n+                    statups.add(new Pair<>(MapleBuffStat.ELEMENTAL_RESET, Integer.valueOf(x)));\n+                    break;\n                 case Evan.MAGIC_SHIELD:\n                     statups.add(new Pair<>(MapleBuffStat.MAGIC_SHIELD, Integer.valueOf(x)));\n                     break;\n                 case Evan.MAGIC_RESISTANCE:\n                     statups.add(new Pair<>(MapleBuffStat.MAGIC_RESISTANCE, Integer.valueOf(x)));\n                     break;\n                 case Evan.SLOW:\n-                \tstatups.add(new Pair<>(MapleBuffStat.SLOW, Integer.valueOf(x)));\n+                    statups.add(new Pair<>(MapleBuffStat.SLOW, Integer.valueOf(x)));\n                 // BOWMAN\n                 case Priest.MYSTIC_DOOR:\n                 case Hunter.SOUL_ARROW:\n@@ -474,7 +498,7 @@ private static MapleStatEffect loadFromData(MapleData source, int sourceid, bool\n                     break;\n                 case ChiefBandit.PICKPOCKET:\n                     statups.add(new Pair<>(MapleBuffStat.PICKPOCKET, Integer.valueOf(x)));\n-                    break;                \n+                    break;\n                 case NightLord.SHADOW_STARS:\n                     statups.add(new Pair<>(MapleBuffStat.SHADOW_CLAW, Integer.valueOf(0)));\n                     break;\n@@ -605,7 +629,7 @@ private static MapleStatEffect loadFromData(MapleData source, int sourceid, bool\n                 case Buccaneer.BARRAGE:\n                 case Gunslinger.BLANK_SHOT:\n                 case DawnWarrior.COMA:\n-                case ThunderBreaker.BARRAGE: \n+                case ThunderBreaker.BARRAGE:\n                 case Aran.ROLLING_SPIN:\n                 case Evan.FIRE_BREATH:\n                 case Evan.BLAZE:\n@@ -633,7 +657,7 @@ private static MapleStatEffect loadFromData(MapleData source, int sourceid, bool\n                 case ILWizard.SLOW:\n                 case BlazeWizard.SLOW:\n                     monsterStatus.put(MonsterStatus.SPEED, Integer.valueOf(ret.x));\n-                    break;    \n+                    break;\n                 case FPWizard.POISON_BREATH:\n                 case FPMage.ELEMENT_COMPOSITION:\n                     monsterStatus.put(MonsterStatus.POISON, Integer.valueOf(1));\n@@ -655,7 +679,7 @@ private static MapleStatEffect loadFromData(MapleData source, int sourceid, bool\n                     monsterStatus.put(MonsterStatus.FREEZE, Integer.valueOf(1));\n                     break;\n                 case Evan.PHANTOM_IMPRINT:\n-                \tmonsterStatus.put(MonsterStatus.PHANTOM_IMPRINT, Integer.valueOf(x));\n+                    monsterStatus.put(MonsterStatus.PHANTOM_IMPRINT, Integer.valueOf(x));\n                 //ARAN\n                 case Aran.COMBO_ABILITY:\n                     statups.add(new Pair<>(MapleBuffStat.ARAN_COMBO, Integer.valueOf(100)));\n@@ -723,19 +747,19 @@ public void applyPassive(MapleCharacter applyto, MapleMapObject obj, int attack)\n     public boolean applyEchoOfHero(MapleCharacter applyfrom) {\n         Map<Integer, MapleCharacter> mapPlayers = applyfrom.getMap().getMapPlayers();\n         mapPlayers.remove(applyfrom.getId());\n-        \n+\n         boolean hwResult = applyTo(applyfrom);\n         for (MapleCharacter chr : mapPlayers.values()) {    // Echo of Hero not buffing players in the map detected thanks to Masterrulax\n             applyTo(applyfrom, chr, false, null, false, 1);\n         }\n-        \n+\n         return hwResult;\n     }\n-    \n+\n     public boolean applyTo(MapleCharacter chr) {\n         return applyTo(chr, chr, true, null, false, 1);\n     }\n-    \n+\n     public boolean applyTo(MapleCharacter chr, boolean useMaxRange) {\n         return applyTo(chr, chr, true, null, useMaxRange, 1);\n     }\n@@ -750,16 +774,16 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n             applyto.toggleHide(false);\n             return true;\n         }\n-        \n+\n         if (primary && isHeal()) {\n             affectedPlayers = applyBuff(applyfrom, useMaxRange);\n         }\n-        \n+\n         int hpchange = calcHPChange(applyfrom, primary, affectedPlayers);\n         int mpchange = calcMPChange(applyfrom, primary);\n         if (primary) {\n             if (itemConNo != 0) {\n-                if(!applyto.getClient().getAbstractPlayerInteraction().hasItem(itemCon, itemConNo)) {\n+                if (!applyto.getClient().getAbstractPlayerInteraction().hasItem(itemCon, itemConNo)) {\n                     applyto.announce(MaplePacketCreator.enableActions());\n                     return false;\n                 }\n@@ -771,7 +795,7 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n                 applyto.broadcastStance(applyto.isFacingLeft() ? 5 : 4);\n             }\n         }\n-        \n+\n         if (isDispel() && makeChanceResult()) {\n             applyto.dispelDebuffs();\n         } else if (isCureAllAbnormalStatus()) {\n@@ -784,24 +808,26 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n         /*if (applyfrom.getMp() < getMpCon()) {\n          AutobanFactory.MPCON.addPoint(applyfrom.getAutobanManager(), \"mpCon hack for skill:\" + sourceid + \"; Player MP: \" + applyto.getMp() + \" MP Needed: \" + getMpCon());\n          } */\n-        \n+\n         if (!applyto.applyHpMpChange(hpCon, hpchange, mpchange)) {\n             applyto.announce(MaplePacketCreator.enableActions());\n             return false;\n         }\n-        \n+\n         if (moveTo != -1) {\n             if (moveTo != applyto.getMapId()) {\n                 MapleMap target;\n                 MaplePortal pt;\n-                \n+\n                 if (moveTo == 999999999) {\n-                    if(sourceid != 2030100) {\n+                    if (sourceid != 2030100) {\n                         target = applyto.getMap().getReturnMap();\n                         pt = target.getRandomPlayerSpawnpoint();\n                     } else {\n-                        if(!applyto.canRecoverLastBanish()) return false;\n-                    \n+                        if (!applyto.canRecoverLastBanish()) {\n+                            return false;\n+                        }\n+\n                         Pair<Integer, Integer> lastBanishInfo = applyto.getLastBanishData();\n                         target = applyto.getWarpMap(lastBanishInfo.getLeft());\n                         pt = target.getPortal(lastBanishInfo.getRight());\n@@ -810,12 +836,12 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n                     target = applyto.getClient().getWorldServer().getChannel(applyto.getClient().getChannel()).getMapFactory().getMap(moveTo);\n                     int targetid = target.getId() / 10000000;\n                     if (targetid != 60 && applyto.getMapId() / 10000000 != 61 && targetid != applyto.getMapId() / 10000000 && targetid != 21 && targetid != 20 && targetid != 12 && (applyto.getMapId() / 10000000 != 10 && applyto.getMapId() / 10000000 != 12)) {\n-                    \treturn false;\n+                        return false;\n                     }\n-                    \n+\n                     pt = target.getRandomPlayerSpawnpoint();\n                 }\n-                \n+\n                 applyto.changeMap(target, pt);\n             } else {\n                 return false;\n@@ -842,15 +868,15 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n         SummonMovementType summonMovementType = getSummonMovementType();\n         if (overTime || isCygnusFA() || summonMovementType != null) {\n             if (summonMovementType != null && pos != null) {\n-                if(summonMovementType.getValue() == summonMovementType.STATIONARY.getValue()) {\n+                if (summonMovementType.getValue() == summonMovementType.STATIONARY.getValue()) {\n                     applyto.cancelBuffStats(MapleBuffStat.PUPPET);\n                 } else {\n                     applyto.cancelBuffStats(MapleBuffStat.SUMMON);\n                 }\n-                \n+\n                 applyto.announce(MaplePacketCreator.enableActions());\n             }\n-            \n+\n             applyBuffEffect(applyfrom, applyto, primary);\n         }\n \n@@ -863,7 +889,7 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n                 applyMonsterBuff(applyfrom);\n             }\n         }\n-        \n+\n         if (this.getFatigue() != 0) {\n             applyto.getMount().setTiredness(applyto.getMount().getTiredness() + this.getFatigue());\n         }\n@@ -880,25 +906,29 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n         if (isMagicDoor() && !FieldLimit.DOOR.check(applyto.getMap().getFieldLimit())) { // Magic Door\n             int y = applyto.getFh();\n             if (y == 0) {\n-                    y = applyto.getPosition().y;\n+                y = applyto.getPosition().y;\n             }\n             Point doorPosition = new Point(applyto.getPosition().x, y);\n             MapleDoor door = new MapleDoor(applyto, doorPosition);\n-            \n-            if(door.getOwnerId() >= 0) {\n+\n+            if (door.getOwnerId() >= 0) {\n                 applyto.applyPartyDoor(door, false);\n \n                 door.getTarget().spawnDoor(door.getAreaDoor());\n                 door.getTown().spawnDoor(door.getTownDoor());\n-                \n+\n                 applyto.disableDoorSpawn();\n             } else {\n                 MapleInventoryManipulator.addFromDrop(applyto.getClient(), new Item(4006000, (short) 0, (short) 1), false);\n-                \n-                if(door.getOwnerId() == -3) applyto.dropMessage(5, \"Mystic Door cannot be cast far from a spawn point. Nearest one is at \" + door.getDoorStatus().getRight() + \"pts \" + door.getDoorStatus().getLeft());\n-                else if(door.getOwnerId() == -2) applyto.dropMessage(5, \"Mystic Door cannot be cast on a slope, try elsewhere.\");\n-                else applyto.dropMessage(5, \"There are no door portals available for the town at this moment. Try again later.\");\n-                \n+\n+                if (door.getOwnerId() == -3) {\n+                    applyto.dropMessage(5, \"Mystic Door cannot be cast far from a spawn point. Nearest one is at \" + door.getDoorStatus().getRight() + \"pts \" + door.getDoorStatus().getLeft());\n+                } else if (door.getOwnerId() == -2) {\n+                    applyto.dropMessage(5, \"Mystic Door cannot be cast on a slope, try elsewhere.\");\n+                } else {\n+                    applyto.dropMessage(5, \"There are no door portals available for the town at this moment. Try again later.\");\n+                }\n+\n                 applyto.cancelBuffStats(MapleBuffStat.SOULARROW);  // cancel door buff\n             }\n         } else if (isMist()) {\n@@ -907,14 +937,51 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n             applyfrom.getMap().spawnMist(mist, getDuration(), mist.isPoisonMist(), false, mist.isRecoveryMist());\n         } else if (isTimeLeap()) {\n             applyto.removeAllCooldownsExcept(Buccaneer.TIME_LEAP, true);\n+        } else if (cp != 0 && applyto.getMonsterCarnival() != null) {\n+            applyto.gainCP(cp);\n+        } else if (nuffSkill != 0 && applyto.getParty() != null && applyto.getMap().isCPQMap()) { // by Drago-Dragohe4rt\n+            final MCSkill skil = MapleCarnivalFactory.getInstance().getSkill(nuffSkill);\n+            if (skil != null) {\n+                final MapleDisease dis = skil.getDisease();\n+                MapleParty inimigos = applyfrom.getParty().getEnemy();\n+                if (nuffSkill == 8) {\n+                    int amount = inimigos.getMembers().size() - 1;\n+                    int randd = (int) Math.floor(Math.random() * amount);\n+                    MapleCharacter chrApp = applyfrom.getClient().getChannelServer().getPlayerStorage().getCharacterById(inimigos.getMemberByPos(randd).getId());\n+                    if (chrApp != null && chrApp.getMap().isCPQMap()) {\n+                        chrApp.dispel();\n+                    }\n+                } else {\n+                    for (MaplePartyCharacter chrsInimigos : inimigos.getPartyMembers()) {\n+                        MapleCharacter chrApp = chrsInimigos.getPlayer();\n+                        if (chrApp != null && chrApp.getMap().isCPQMap()) {\n+                            if (dis == null) {\n+                                chrApp.dispel();\n+                            } else if (skil.getSkill() != null) {\n+                                chrApp.giveDebuff(dis, skil.getSkill());\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+        } else if (cureDebuffs.size() > 0) { // by Drago-Dragohe4rt\n+            for (final MapleDisease debuff : cureDebuffs) {\n+                if (applyfrom.getParty() != null) {\n+                    for (MaplePartyCharacter chrs : applyfrom.getParty().getPartyMembers()) {\n+                        chrs.getPlayer().dispelDebuff(debuff);\n+                    }\n+                } else {\n+                    applyfrom.dispelDebuff(debuff);\n+                }\n+            }\n         }\n-        \n+\n         return true;\n     }\n \n     private int applyBuff(MapleCharacter applyfrom, boolean useMaxRange) {\n         int affectedc = 1;\n-        \n+\n         if (isPartyBuff() && (applyfrom.getParty() != null || isGmBuff())) {\n             Rectangle bounds = (!useMaxRange) ? calculateBoundingBox(applyfrom.getPosition(), applyfrom.isFacingLeft()) : new Rectangle(Integer.MIN_VALUE / 2, Integer.MIN_VALUE / 2, Integer.MAX_VALUE, Integer.MAX_VALUE);\n             List<MapleMapObject> affecteds = applyfrom.getMap().getMapObjectsInRect(bounds, Arrays.asList(MapleMapObjectType.PLAYER));\n@@ -933,15 +1000,15 @@ private int applyBuff(MapleCharacter applyfrom, boolean useMaxRange) {\n                     }\n                 }\n             }\n-            \n+\n             affectedc += affectedp.size();   // used for heal\n             for (MapleCharacter affected : affectedp) {\n                 applyTo(applyfrom, affected, false, null, useMaxRange, affectedc);\n                 affected.announce(MaplePacketCreator.showOwnBuffEffect(sourceid, 2));\n                 affected.getMap().broadcastMessage(affected, MaplePacketCreator.showBuffeffect(affected.getId(), sourceid, 2), false);\n             }\n         }\n-        \n+\n         return affectedc;\n     }\n \n@@ -952,15 +1019,15 @@ private void applyMonsterBuff(MapleCharacter applyfrom) {\n         int i = 0;\n         for (MapleMapObject mo : affected) {\n             MapleMonster monster = (MapleMonster) mo;\n-            if (isDispel()) { \n-        \t\tmonster.debuffMob(skill_.getId());\n+            if (isDispel()) {\n+                monster.debuffMob(skill_.getId());\n             } else {\n-                    if (makeChanceResult()) {\n-                            monster.applyStatus(applyfrom, new MonsterStatusEffect(getMonsterStati(), skill_, null, false), isPoison(), getDuration());\n-                            if (isCrash()) {\n-                                    monster.debuffMob(skill_.getId());\n-                            }\n+                if (makeChanceResult()) {\n+                    monster.applyStatus(applyfrom, new MonsterStatusEffect(getMonsterStati(), skill_, null, false), isPoison(), getDuration());\n+                    if (isCrash()) {\n+                        monster.debuffMob(skill_.getId());\n                     }\n+                }\n             }\n             i++;\n             if (i >= mobCount) {\n@@ -982,17 +1049,17 @@ private Rectangle calculateBoundingBox(Point posFrom, boolean facingLeft) {\n         Rectangle bounds = new Rectangle(mylt.x, mylt.y, myrb.x - mylt.x, myrb.y - mylt.y);\n         return bounds;\n     }\n-    \n+\n     public int getBuffLocalDuration() {\n         return !ServerConstants.USE_BUFF_EVERLASTING ? duration : Integer.MAX_VALUE;\n     }\n-    \n+\n     public void silentApplyBuff(MapleCharacter chr, long localStartTime) {\n         int localDuration = getBuffLocalDuration();\n         localDuration = alchemistModifyVal(chr, localDuration, false);\n         //CancelEffectAction cancelAction = new CancelEffectAction(chr, this, starttime);\n         //ScheduledFuture<?> schedule = TimerManager.getInstance().schedule(cancelAction, ((starttime + localDuration) - Server.getInstance().getCurrentTime()));\n-        \n+\n         chr.registerEffect(this, localStartTime, localStartTime + localDuration, true);\n         SummonMovementType summonMovementType = getSummonMovementType();\n         if (summonMovementType != null) {\n@@ -1016,22 +1083,22 @@ public final void applyComboBuff(final MapleCharacter applyto, int combo) {\n //\tfinal ScheduledFuture<?> schedule = TimerManager.getInstance().schedule(cancelAction, ((starttime + 99999) - Server.getInstance().getCurrentTime()));\n         applyto.registerEffect(this, starttime, Long.MAX_VALUE, false);\n     }\n-    \n+\n     public final void applyBeaconBuff(final MapleCharacter applyto, int objectid) { // thanks Thora & Hyun for reporting an issue with homing beacon autoflagging mobs when changing maps\n         final List<Pair<MapleBuffStat, Integer>> stat = Collections.singletonList(new Pair<>(MapleBuffStat.HOMING_BEACON, objectid));\n         applyto.announce(MaplePacketCreator.giveBuff(1, sourceid, stat));\n \n         final long starttime = Server.getInstance().getCurrentTime();\n         applyto.registerEffect(this, starttime, Long.MAX_VALUE, false);\n     }\n-    \n+\n     public void updateBuffEffect(MapleCharacter target, List<Pair<MapleBuffStat, Integer>> activeStats, long starttime) {\n         int localDuration = getBuffLocalDuration();\n         localDuration = alchemistModifyVal(target, localDuration, false);\n-        \n+\n         long leftDuration = (starttime + localDuration) - Server.getInstance().getCurrentTime();\n-        if(leftDuration > 0) {\n-            target.announce(MaplePacketCreator.giveBuff((skill ? sourceid : -sourceid), (int)leftDuration, activeStats));\n+        if (leftDuration > 0) {\n+            target.announce(MaplePacketCreator.giveBuff((skill ? sourceid : -sourceid), (int) leftDuration, activeStats));\n         }\n     }\n \n@@ -1067,7 +1134,7 @@ private void applyBuffEffect(MapleCharacter applyfrom, MapleCharacter applyto, b\n                 if (applyto.getMount() == null) {\n                     applyto.mount(ridingMountId, sourceid);\n                 }\n-                \n+\n                 applyto.getClient().getWorldServer().registerMountHunger(applyto);\n             }\n             if (sourceid == Corsair.BATTLE_SHIP) {\n@@ -1089,8 +1156,8 @@ private void applyBuffEffect(MapleCharacter applyfrom, MapleCharacter applyto, b\n             localsourceid = ridingMountId;\n             localstatups = Collections.singletonList(new Pair<>(MapleBuffStat.MONSTER_RIDING, 0));\n         } else if (isSkillMorph()) {\n-            for(int i = 0; i < localstatups.size(); i++) {\n-                if(localstatups.get(i).getLeft().equals(MapleBuffStat.MORPH)) {\n+            for (int i = 0; i < localstatups.size(); i++) {\n+                if (localstatups.get(i).getLeft().equals(MapleBuffStat.MORPH)) {\n                     localstatups.set(i, new Pair<>(MapleBuffStat.MORPH, getMorph(applyto)));\n                     break;\n                 }\n@@ -1110,7 +1177,7 @@ private void applyBuffEffect(MapleCharacter applyfrom, MapleCharacter applyto, b\n                 buff = MaplePacketCreator.givePirateBuff(statups, sourceid, seconds);\n                 mbuff = MaplePacketCreator.giveForeignPirateBuff(applyto.getId(), sourceid, seconds, localstatups);\n             } else if (isInfusion()) {\n-            \tbuff = MaplePacketCreator.givePirateBuff(localstatups, sourceid, seconds);\n+                buff = MaplePacketCreator.givePirateBuff(localstatups, sourceid, seconds);\n                 mbuff = MaplePacketCreator.giveForeignPirateBuff(applyto.getId(), sourceid, seconds, localstatups);\n             } else if (isDs()) {\n                 List<Pair<MapleBuffStat, Integer>> dsstat = Collections.singletonList(new Pair<>(MapleBuffStat.DARKSIGHT, 0));\n@@ -1125,10 +1192,10 @@ private void applyBuffEffect(MapleCharacter applyfrom, MapleCharacter applyto, b\n                     if (applyto.getBattleshipHp() <= 0) {\n                         applyto.resetBattleshipHp();\n                     }\n-                    \n+\n                     localstatups = statups;\n                 }\n-                \n+\n                 buff = MaplePacketCreator.giveBuff(localsourceid, localDuration, localstatups);\n                 mbuff = MaplePacketCreator.showMonsterRiding(applyto.getId(), givemount);\n                 localDuration = duration;\n@@ -1144,15 +1211,15 @@ private void applyBuffEffect(MapleCharacter applyfrom, MapleCharacter applyto, b\n                 List<Pair<MapleBuffStat, Integer>> stat = Collections.singletonList(new Pair<>(MapleBuffStat.MORPH, Integer.valueOf(getMorph(applyto))));\n                 mbuff = MaplePacketCreator.giveForeignBuff(applyto.getId(), stat);\n             }\n-            \n+\n             if (buff != null) {\n-            \tif (!hasNoIcon()) { //Thanks flav for such a simple release! :)\n+                if (!hasNoIcon()) { //Thanks flav for such a simple release! :)\n                     applyto.announce(buff);\n-            \t} else {\n+                } else {\n                     System.out.println(\"<Error> NO buff icon for id \" + sourceid);\n                 }\n             }\n-            \n+\n             long starttime = Server.getInstance().getCurrentTime();\n             //CancelEffectAction cancelAction = new CancelEffectAction(applyto, this, starttime);\n             //ScheduledFuture<?> schedule = TimerManager.getInstance().schedule(cancelAction, localDuration);\n@@ -1273,7 +1340,7 @@ private boolean isGmBuff() {\n             case Beginner.ECHO_OF_HERO:\n             case Noblesse.ECHO_OF_HERO:\n             case Legend.ECHO_OF_HERO:\n-            case Evan.ECHO_OF_HERO:\t\n+            case Evan.ECHO_OF_HERO:\n             case SuperGM.HEAL_PLUS_DISPEL:\n             case SuperGM.HASTE:\n             case SuperGM.HOLY_SYMBOL:\n@@ -1346,45 +1413,44 @@ public boolean isBerserk() {\n     public boolean isRecovery() {\n         return sourceid == Beginner.RECOVERY || sourceid == Noblesse.RECOVERY || sourceid == Legend.RECOVERY || sourceid == Evan.RECOVERY;\n     }\n-    \n+\n     public boolean isMapChair() {\n         return sourceid == Beginner.MAP_CHAIR || sourceid == Noblesse.MAP_CHAIR || sourceid == Legend.MAP_CHAIR;\n     }\n-    \n+\n     public static boolean isMapChair(int sourceid) {\n         return sourceid == Beginner.MAP_CHAIR || sourceid == Noblesse.MAP_CHAIR || sourceid == Legend.MAP_CHAIR;\n     }\n-    \n-    \n+\n     public boolean isDojoBuff() {\n         return sourceid >= 2022359 && sourceid <= 2022421;\n     }\n-    \n+\n     public static boolean isDojoBuff(int sourceid) {\n         return sourceid >= 2022359 && sourceid <= 2022421;\n     }\n-    \n+\n     public static boolean isHpMpRecovery(int sourceid) {\n         return sourceid == 2022198 || sourceid == 2022337;\n     }\n-    \n+\n     public static boolean isPyramidBuff(int sourceid) {\n         return sourceid >= 2022585 && sourceid <= 2022617;\n     }\n-    \n+\n     public static boolean isRateCoupon(int sourceid) {\n         int itemType = sourceid / 1000;\n         return itemType == 5211 || itemType == 5360;\n     }\n-    \n+\n     public static boolean isExpIncrease(int sourceid) {\n         return sourceid >= 2022450 && sourceid <= 2022452;\n     }\n-    \n+\n     private boolean isDs() {\n         return skill && (sourceid == Rogue.DARK_SIGHT || sourceid == NightWalker.DARK_SIGHT);\n     }\n-    \n+\n     private boolean isWw() {\n         return skill && (sourceid == WindArcher.WIND_WALK);\n     }\n@@ -1412,11 +1478,11 @@ private boolean isChakra() {\n     private boolean isCouponBuff() {\n         return isRateCoupon(sourceid);\n     }\n-    \n+\n     private boolean isMysticDoor() {\n         return skill && sourceid == Priest.MYSTIC_DOOR;\n     }\n-    \n+\n     public boolean isMonsterRiding() {\n         return skill && (sourceid % 10000000 == 1004 || sourceid == Corsair.BATTLE_SHIP || sourceid == Beginner.SPACESHIP || sourceid == Noblesse.SPACESHIP\n                 || sourceid == Beginner.YETI_MOUNT1 || sourceid == Beginner.YETI_MOUNT2 || sourceid == Beginner.WITCH_BROOMSTICK || sourceid == Beginner.BALROG_MOUNT\n@@ -1431,11 +1497,11 @@ public boolean isMagicDoor() {\n     public boolean isPoison() {\n         return skill && (sourceid == FPMage.POISON_MIST || sourceid == FPWizard.POISON_BREATH || sourceid == FPMage.ELEMENT_COMPOSITION || sourceid == NightWalker.POISON_BOMB || sourceid == BlazeWizard.FLAME_GEAR);\n     }\n-    \n+\n     public boolean isMorph() {\n         return morphId > 0;\n     }\n-    \n+\n     public boolean isMorphWithoutAttack() {\n         return morphId > 0 && morphId < 100; // Every morph item I have found has been under 100, pirate skill transforms start at 1000.\n     }\n@@ -1453,23 +1519,25 @@ private boolean isShadowClaw() {\n     }\n \n     private boolean isCrash() {\n-    \treturn skill && (sourceid == DragonKnight.POWER_CRASH || sourceid == Crusader.ARMOR_CRASH || sourceid == WhiteKnight.MAGIC_CRASH);\n+        return skill && (sourceid == DragonKnight.POWER_CRASH || sourceid == Crusader.ARMOR_CRASH || sourceid == WhiteKnight.MAGIC_CRASH);\n     }\n-    \n+\n     private boolean isDispel() {\n         return skill && (sourceid == Priest.DISPEL || sourceid == SuperGM.HEAL_PLUS_DISPEL);\n     }\n \n     private boolean isCureAllAbnormalStatus() {\n         if (skill) {\n             return isHerosWill(sourceid);\n-        } else if (sourceid == 2022544) return true;\n-        \n+        } else if (sourceid == 2022544) {\n+            return true;\n+        }\n+\n         return false;\n     }\n-    \n+\n     public static boolean isHerosWill(int skillid) {\n-        switch(skillid) {\n+        switch (skillid) {\n             case Hero.HEROS_WILL:\n             case Paladin.HEROS_WILL:\n             case DarkKnight.HEROS_WILL:\n@@ -1504,7 +1572,7 @@ private boolean isInfusion() {\n     private boolean isCygnusFA() {\n         return skill && (sourceid == DawnWarrior.FINAL_ATTACK || sourceid == WindArcher.FINAL_ATTACK);\n     }\n-    \n+\n     private boolean isHyperBody() {\n         return skill && (sourceid == Spearman.HYPER_BODY || sourceid == GM.HYPER_BODY || sourceid == SuperGM.HYPER_BODY);\n     }\n@@ -1561,25 +1629,24 @@ private SummonMovementType getSummonMovementType() {\n         return null;\n     }\n \n-    \n     public boolean hasNoIcon() {\n         return (sourceid == 3111002 || sourceid == 3211002 || + // puppet, puppet\n-                sourceid == 3211005 || +                        // golden eagle\n+                sourceid == 3211005 || + // golden eagle\n                 sourceid == 2121005 || sourceid == 2221005 || + // elquines, ifrit\n                 sourceid == 2321003 || sourceid == 3121006 || + // bahamut, phoenix\n                 sourceid == 3221005 || sourceid == 3111005 || + // frostprey, silver hawk\n                 sourceid == 2311006 || sourceid == 5220002 || + // summon dragon, wrath of the octopi\n                 sourceid == 5211001 || sourceid == 5211002); // octopus, gaviota\n     }\n-    \n+\n     public boolean isSkill() {\n         return skill;\n     }\n \n     public int getSourceId() {\n         return sourceid;\n     }\n-    \n+\n     public int getBuffSourceId() {\n         return skill ? sourceid : -sourceid;\n     }\n@@ -1589,52 +1656,51 @@ public boolean makeChanceResult() {\n     }\n \n     /*\n-    private static class CancelEffectAction implements Runnable {\n-\n-        private MapleStatEffect effect;\n-        private WeakReference<MapleCharacter> target;\n-        private long startTime;\n-\n-        public CancelEffectAction(MapleCharacter target, MapleStatEffect effect, long startTime) {\n-            this.effect = effect;\n-            this.target = new WeakReference<>(target);\n-            this.startTime = startTime;\n-        }\n-\n-        @Override\n-        public void run() {\n-            MapleCharacter realTarget = target.get();\n-            if (realTarget != null) {\n-                realTarget.cancelEffect(effect, false, startTime);\n-            }\n-        }\n-    }\n-    */\n-\n+     private static class CancelEffectAction implements Runnable {\n+\n+     private MapleStatEffect effect;\n+     private WeakReference<MapleCharacter> target;\n+     private long startTime;\n+\n+     public CancelEffectAction(MapleCharacter target, MapleStatEffect effect, long startTime) {\n+     this.effect = effect;\n+     this.target = new WeakReference<>(target);\n+     this.startTime = startTime;\n+     }\n+\n+     @Override\n+     public void run() {\n+     MapleCharacter realTarget = target.get();\n+     if (realTarget != null) {\n+     realTarget.cancelEffect(effect, false, startTime);\n+     }\n+     }\n+     }\n+     */\n     public short getHp() {\n         return hp;\n     }\n \n     public short getMp() {\n         return mp;\n     }\n-    \n+\n     public double getHpRate() {\n         return hpR;\n     }\n \n     public double getMpRate() {\n         return mpR;\n     }\n-    \n+\n     public byte getHpR() {\n         return mhpR;\n     }\n \n     public byte getMpR() {\n         return mmpR;\n     }\n-    \n+\n     public short getHpRRate() {\n         return mhpRRate;\n     }\n@@ -1654,7 +1720,7 @@ public short getMpCon() {\n     public short getMatk() {\n         return matk;\n     }\n-    \n+\n     public short getWatk() {\n         return watk;\n     }\n@@ -1714,4 +1780,4 @@ public int getCooldown() {\n     public Map<MonsterStatus, Integer> getMonsterStati() {\n         return monsterStatus;\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "dc98c71dc2273a297b14a6469b7c7cc5c9590f6e", "filename": "src/server/life/MapleMonster.java", "status": "modified", "additions": 79, "deletions": 27, "changes": 106, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/life/MapleMonster.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/life/MapleMonster.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleMonster.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -75,6 +75,7 @@\n import server.maps.MapleSummon;\n \n public class MapleMonster extends AbstractLoadedMapleLife {\n+    \n     private ChangeableStats ostats = null;  //unused, v83 WZs offers no support for changeable stats.\n     private MapleMonsterStats stats;\n     private AtomicInteger hp = new AtomicInteger(1);\n@@ -216,7 +217,9 @@ public int getHp() {\n     }\n     \n     public synchronized void addHp(int hp) {\n-        if(this.hp.get() <= 0) return;\n+        if (this.hp.get() <= 0) {\n+            return;\n+        }\n         this.hp.addAndGet(hp);\n     }\n     \n@@ -300,7 +303,9 @@ public void setHpZero() {     // force HP = 0\n     }\n     \n     private boolean applyAnimationIfRoaming(int attackPos, MobSkill skill) {   // roam: not casting attack or skill animations\n-        if(!animationLock.tryLock()) return false;\n+        if (!animationLock.tryLock()) {\n+            return false;\n+        }\n     \n         try {\n             long animationTime;\n@@ -328,7 +333,9 @@ public synchronized Integer applyAndGetHpDamage(int delta, boolean stayAlive) {\n         }\n         \n         if(delta >= 0) {\n-            if(stayAlive) curHp--;\n+            if (stayAlive) {\n+                curHp--;\n+            }\n             int trueDamage = Math.min(curHp, delta);\n             \n             hp.addAndGet(-trueDamage);\n@@ -428,7 +435,9 @@ private void applyDamage(MapleCharacter from, int damage, boolean stayAlive) {\n             return;\n         }\n         \n-        if(ServerConstants.USE_DEBUG) from.dropMessage(5, \"Hitted MOB \" + this.getId() + \", OID \" + this.getObjectId());\n+        if (ServerConstants.USE_DEBUG) {\n+            from.dropMessage(5, \"Hitted MOB \" + this.getId() + \", OID \" + this.getObjectId());\n+        }\n         dispatchMonsterDamaged(from, trueDamage);\n \n         if (!takenDamage.containsKey(from.getId())) {\n@@ -442,7 +451,9 @@ private void applyDamage(MapleCharacter from, int damage, boolean stayAlive) {\n     \n     public void heal(int hp, int mp) {\n         Integer hpHealed = applyAndGetHpDamage(-hp, false);\n-        if(hpHealed == null) return;\n+        if (hpHealed == null) {\n+            return;\n+        }\n         \n         int mp2Heal = getMp() + mp;\n         int maxMp = getMaxMp();\n@@ -451,7 +462,9 @@ public void heal(int hp, int mp) {\n         }\n         setMp(mp2Heal);\n         \n-        if(hp > 0) getMap().broadcastMessage(MaplePacketCreator.healMonster(getObjectId(), hp, getHp(), getMaxHp()));\n+        if (hp > 0) {\n+            getMap().broadcastMessage(MaplePacketCreator.healMonster(getObjectId(), hp, getHp(), getMaxHp()));\n+        }\n         \n         maxHpPlusHeal.addAndGet(hpHealed);\n         dispatchMonsterHealed(hpHealed);\n@@ -465,7 +478,7 @@ private void distributeExperienceToParty(int pid, float exp, int mostDamageCid,\n         MapleCharacter pchar = getMap().getAnyCharacterFromParty(pid);  // thanks G h o s t, Alfred, Vcoc, BHB for poiting out a bug in detecting party members after membership transactions in a party took place\n         \n         List<MapleCharacter> members;\n-        if(pchar != null) {\n+        if (pchar != null) {\n             members = pchar.getPartyMembersOnSameMap();\n         } else {\n             members = new LinkedList<>();\n@@ -902,15 +915,19 @@ public boolean isControllerHasAggro() {\n     }\n \n     private void setControllerHasAggro(boolean controllerHasAggro) {\n-        if (!fake) this.controllerHasAggro = controllerHasAggro;\n+        if (!fake) {\n+            this.controllerHasAggro = controllerHasAggro;\n+        }\n     }\n \n     public boolean isControllerKnowsAboutAggro() {\n         return fake ? false : controllerKnowsAboutAggro;\n     }\n \n     private void setControllerKnowsAboutAggro(boolean controllerKnowsAboutAggro) {\n-        if (!fake) this.controllerKnowsAboutAggro = controllerKnowsAboutAggro;\n+        if (!fake) {\n+            this.controllerKnowsAboutAggro = controllerKnowsAboutAggro;\n+        }\n     }\n     \n     private void setControllerHasPuppet(boolean controllerHasPuppet) {\n@@ -1181,7 +1198,20 @@ public void run() {\n         ch.registerMobStatus(mapid, status, cancelTask, duration + animationTime - 100, overtimeAction, overtimeDelay);\n         return true;\n     }\n-\n+    \n+    public final void dispelSkill(final MobSkill skillId) {\n+        List<MonsterStatus> toCancel = new ArrayList<MonsterStatus>();\n+        for (Entry<MonsterStatus, MonsterStatusEffect> effects : stati.entrySet()) {\n+            MonsterStatusEffect mse = effects.getValue();\n+            if (mse.getMobSkill() != null && mse.getMobSkill().getSkillId() == skillId.getSkillId()) { //not checking for level.\n+                toCancel.add(effects.getKey());\n+            }\n+        }\n+        for (MonsterStatus stat : toCancel) {\n+            debuffMobStat(stat);\n+        }\n+    }\n+    \n     public void applyMonsterBuff(final Map<MonsterStatus, Integer> stats, final int x, int skillId, long duration, MobSkill skill, final List<Integer> reflection) {\n         final Runnable cancelTask = new Runnable() {\n \n@@ -1265,12 +1295,20 @@ public void debuffMob(int skillid) {\n \n                 if(ServerConstants.USE_ANTI_IMMUNITY_CRASH) {\n                     if (skillid == Crusader.ARMOR_CRASH) {\n-                        if(!isBuffed(MonsterStatus.WEAPON_REFLECT)) debuffMobStat(MonsterStatus.WEAPON_IMMUNITY);\n-                        if(!isBuffed(MonsterStatus.MAGIC_REFLECT)) debuffMobStat(MonsterStatus.MAGIC_IMMUNITY);\n+                        if(!isBuffed(MonsterStatus.WEAPON_REFLECT)) {\n+                            debuffMobStat(MonsterStatus.WEAPON_IMMUNITY);\n+                        }\n+                        if(!isBuffed(MonsterStatus.MAGIC_REFLECT)) {\n+                            debuffMobStat(MonsterStatus.MAGIC_IMMUNITY);\n+                        }\n                     } else if (skillid == WhiteKnight.MAGIC_CRASH) {\n-                        if(!isBuffed(MonsterStatus.MAGIC_REFLECT)) debuffMobStat(MonsterStatus.MAGIC_IMMUNITY);\n+                        if(!isBuffed(MonsterStatus.MAGIC_REFLECT)) {\n+                            debuffMobStat(MonsterStatus.MAGIC_IMMUNITY);\n+                        }\n                     } else {\n-                        if(!isBuffed(MonsterStatus.WEAPON_REFLECT)) debuffMobStat(MonsterStatus.WEAPON_IMMUNITY);\n+                        if(!isBuffed(MonsterStatus.WEAPON_REFLECT)) {\n+                            debuffMobStat(MonsterStatus.WEAPON_IMMUNITY);\n+                        }\n                     }\n                 }\n             }\n@@ -1669,11 +1707,16 @@ public final void changeLevel(final int newLevel, boolean pqMob) {\n     \n     private float getDifficultyRate(final int difficulty) {\n         switch(difficulty) {\n-            case 6: return(7.7f);\n-            case 5: return(5.6f);\n-            case 4: return(3.2f);\n-            case 3: return(2.1f);\n-            case 2: return(1.4f);\n+            case 6:\n+                return(7.7f);\n+            case 5:\n+                return(5.6f);\n+            case 4:\n+                return(3.2f);\n+            case 3:\n+                return(2.1f);\n+            case 2:\n+                return(1.4f);\n         }\n         \n         return(1.0f);\n@@ -1862,8 +1905,8 @@ public void aggroUpdateController() {\n     }\n     \n     /**\n-     * Finds a new controller for the given monster from the chars with deployed puppet\n-     * nearby on the map it is from...\n+     * Finds a new controller for the given monster from the chars with deployed\n+     * puppet nearby on the map it is from...\n      * \n      */\n     private void aggroUpdatePuppetController(MapleCharacter newController) {\n@@ -1960,8 +2003,8 @@ public void aggroAutoAggroUpdate(MapleCharacter player) {\n     }\n     \n     /**\n-     * Applied damage input for this mob, enough damage taken implies\n-     * an aggro target update for the attacker shortly.\n+     * Applied damage input for this mob, enough damage taken implies an aggro\n+     * target update for the attacker shortly.\n      * \n      */\n     public void aggroMonsterDamage(MapleCharacter attacker, int damage) {\n@@ -2014,15 +2057,19 @@ private void aggroRefreshPuppetVisibility(MapleCharacter chrController, MapleSum\n     }\n     \n     public void aggroUpdatePuppetVisibility() {\n-        if (!availablePuppetUpdate) return;\n+        if (!availablePuppetUpdate) {\n+            return;\n+        }\n         \n         availablePuppetUpdate = false;\n         Runnable r = new Runnable() {\n             @Override\n             public void run() {\n                 try {\n                     MapleCharacter chrController = MapleMonster.this.getActiveController();\n-                    if (chrController == null) return;\n+                    if (chrController == null) {\n+                        return;\n+                    }\n \n                     MapleStatEffect puppetEffect = chrController.getBuffEffect(MapleBuffStat.PUPPET);\n                     if (puppetEffect != null) {\n@@ -2052,7 +2099,8 @@ public void run() {\n     }\n     \n     /**\n-     * Clears all applied damage input for this mob, doesn't refresh target aggro.\n+     * Clears all applied damage input for this mob, doesn't refresh target\n+     * aggro.\n      * \n      */\n     public void aggroClearDamages() {\n@@ -2073,6 +2121,10 @@ public void aggroResetAggro() {\n         }\n     }\n     \n+    public final int getRemoveAfter() {\n+        return stats.removeAfter();\n+    }\n+    \n     public void dispose() {\n         this.getMap().dismissRemoveAfter(this);\n         disposeLocks();\n@@ -2093,4 +2145,4 @@ private void emptyLocks() {\n         statiLock = statiLock.dispose();\n         animationLock = animationLock.dispose();\n     }\n-}\n+}\n\\ No newline at end of file"}, {"sha": "4854d125be31c2d38918d9e19a8f6d4aa7586370", "filename": "src/server/life/MapleMonsterInformationProvider.java", "status": "modified", "additions": 292, "deletions": 290, "changes": 582, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/life/MapleMonsterInformationProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/life/MapleMonsterInformationProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleMonsterInformationProvider.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -44,306 +44,308 @@\n import tools.Randomizer;\n \n public class MapleMonsterInformationProvider {\n-\t// Author : LightPepsi\n-\n-\tprivate static final MapleMonsterInformationProvider instance = new MapleMonsterInformationProvider();\n-        \n-        public static MapleMonsterInformationProvider getInstance() {\n-\t\treturn instance;\n-\t}\n-        \n-        private final Map<Integer, List<MonsterDropEntry>> drops = new HashMap<>();\n-\tprivate final List<MonsterGlobalDropEntry> globaldrops = new ArrayList<>();\n-        private final Map<Integer, List<MonsterGlobalDropEntry>> continentdrops = new HashMap<>();\n-        \n-        private final Map<Integer, List<Integer>> dropsChancePool = new HashMap<>();    // thanks to ronan\n-        private final Set<Integer> hasNoMultiEquipDrops = new HashSet<>();\n-        private final Map<Integer, List<MonsterDropEntry>> extraMultiEquipDrops = new HashMap<>();\n-        \n-        private final Map<Pair<Integer, Integer>, Integer> mobAttackAnimationTime = new HashMap<>();\n-        private final Map<MobSkill, Integer> mobSkillAnimationTime = new HashMap<>();\n-        \n-        private final Map<Integer, Pair<Integer, Integer>> mobAttackInfo = new HashMap<>();\n-        \n-        private final Map<Integer, Boolean> mobBossCache = new HashMap<>();\n-        private final Map<Integer, String> mobNameCache = new HashMap<>();\n-\n-\tprotected MapleMonsterInformationProvider() {\n-\t\tretrieveGlobal();\n-\t}\n-        \n-        public final List<MonsterGlobalDropEntry> getRelevantGlobalDrops(int mapid) {\n-                int continentid = mapid / 100000000;\n-            \n-                List<MonsterGlobalDropEntry> contiItems = continentdrops.get(continentid);\n-                if (contiItems == null) {   // continent separated global drops found thanks to marcuswoon\n-                    contiItems = new ArrayList<>();\n-                    \n-                    for (MonsterGlobalDropEntry e : globaldrops) {\n-                        if (e.continentid < 0 || e.continentid == continentid) {\n-                            contiItems.add(e);\n-                        }\n+    // Author : LightPepsi\n+\n+    private static final MapleMonsterInformationProvider instance = new MapleMonsterInformationProvider();\n+\n+    public static MapleMonsterInformationProvider getInstance() {\n+        return instance;\n+    }\n+\n+    private final Map<Integer, List<MonsterDropEntry>> drops = new HashMap<>();\n+    private final List<MonsterGlobalDropEntry> globaldrops = new ArrayList<>();\n+    private final Map<Integer, List<MonsterGlobalDropEntry>> continentdrops = new HashMap<>();\n+\n+    private final Map<Integer, List<Integer>> dropsChancePool = new HashMap<>();    // thanks to ronan\n+    private final Set<Integer> hasNoMultiEquipDrops = new HashSet<>();\n+    private final Map<Integer, List<MonsterDropEntry>> extraMultiEquipDrops = new HashMap<>();\n+\n+    private final Map<Pair<Integer, Integer>, Integer> mobAttackAnimationTime = new HashMap<>();\n+    private final Map<MobSkill, Integer> mobSkillAnimationTime = new HashMap<>();\n+\n+    private final Map<Integer, Pair<Integer, Integer>> mobAttackInfo = new HashMap<>();\n+\n+    private final Map<Integer, Boolean> mobBossCache = new HashMap<>();\n+    private final Map<Integer, String> mobNameCache = new HashMap<>();\n+\n+    protected MapleMonsterInformationProvider() {\n+        retrieveGlobal();\n+    }\n+\n+    public final List<MonsterGlobalDropEntry> getRelevantGlobalDrops(int mapid) {\n+        int continentid = mapid / 100000000;\n+\n+        List<MonsterGlobalDropEntry> contiItems = continentdrops.get(continentid);\n+        if (contiItems == null) {   // continent separated global drops found thanks to marcuswoon\n+            contiItems = new ArrayList<>();\n+\n+            for (MonsterGlobalDropEntry e : globaldrops) {\n+                if (e.continentid < 0 || e.continentid == continentid) {\n+                    contiItems.add(e);\n+                }\n+            }\n+\n+            continentdrops.put(continentid, contiItems);\n+        }\n+\n+        return contiItems;\n+    }\n+\n+    private void retrieveGlobal() {\n+        PreparedStatement ps = null;\n+        ResultSet rs = null;\n+        Connection con = null;\n+\n+        try {\n+            con = DatabaseConnection.getConnection();\n+            ps = con.prepareStatement(\"SELECT * FROM drop_data_global WHERE chance > 0\");\n+            rs = ps.executeQuery();\n+\n+            while (rs.next()) {\n+                globaldrops.add(\n+                        new MonsterGlobalDropEntry(\n+                                rs.getInt(\"itemid\"),\n+                                rs.getInt(\"chance\"),\n+                                rs.getByte(\"continent\"),\n+                                rs.getInt(\"minimum_quantity\"),\n+                                rs.getInt(\"maximum_quantity\"),\n+                                rs.getShort(\"questid\")));\n+            }\n+\n+            rs.close();\n+            ps.close();\n+            con.close();\n+        } catch (SQLException e) {\n+            System.err.println(\"Error retrieving drop\" + e);\n+        } finally {\n+            try {\n+                if (ps != null && !ps.isClosed()) {\n+                    ps.close();\n+                }\n+                if (rs != null && !rs.isClosed()) {\n+                    rs.close();\n+                }\n+                if (con != null && !con.isClosed()) {\n+                    con.close();\n+                }\n+            } catch (SQLException ignore) {\n+                ignore.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    public List<MonsterDropEntry> retrieveEffectiveDrop(final int monsterId) {\n+        // this reads the drop entries searching for multi-equip, properly processing them\n+\n+        List<MonsterDropEntry> list = retrieveDrop(monsterId);\n+        if (hasNoMultiEquipDrops.contains(monsterId) || !ServerConstants.USE_MULTIPLE_SAME_EQUIP_DROP) {\n+            return list;\n+        }\n+\n+        List<MonsterDropEntry> multiDrops = extraMultiEquipDrops.get(monsterId), extra = new LinkedList<>();\n+        if (multiDrops == null) {\n+            multiDrops = new LinkedList<>();\n+\n+            for (MonsterDropEntry mde : list) {\n+                if (ItemConstants.isEquipment(mde.itemId) && mde.Maximum > 1) {\n+                    multiDrops.add(mde);\n+\n+                    int rnd = Randomizer.rand(mde.Minimum, mde.Maximum);\n+                    for (int i = 0; i < rnd - 1; i++) {\n+                        extra.add(mde);   // this passes copies of the equips' MDE with min/max quantity > 1, but idc it'll be unused anyways\n                     }\n-                    \n-                    continentdrops.put(continentid, contiItems);\n                 }\n-                \n-\t\treturn contiItems;\n-\t}\n-\n-\tprivate void retrieveGlobal() {\n-\t\tPreparedStatement ps = null;\n-\t\tResultSet rs = null;\n-                Connection con = null;\n-\n-\t\ttry {\n-                        con = DatabaseConnection.getConnection();\n-\t\t\tps = con.prepareStatement(\"SELECT * FROM drop_data_global WHERE chance > 0\");\n-\t\t\trs = ps.executeQuery();\n-\n-\t\t\twhile (rs.next()) {\n-\t\t\t\tglobaldrops.add(\n-\t\t\t\t\t\tnew MonsterGlobalDropEntry(\n-\t\t\t\t\t\t\t\trs.getInt(\"itemid\"),\n-\t\t\t\t\t\t\t\trs.getInt(\"chance\"),\n-\t\t\t\t\t\t\t\trs.getByte(\"continent\"),\n-\t\t\t\t\t\t\t\trs.getInt(\"minimum_quantity\"),\n-\t\t\t\t\t\t\t\trs.getInt(\"maximum_quantity\"),\n-\t\t\t\t\t\t\t\trs.getShort(\"questid\")));\n-\t\t\t}\n-                        \n-\t\t\trs.close();\n-\t\t\tps.close();\n-                        con.close();\n-\t\t} catch (SQLException e) {\n-                        System.err.println(\"Error retrieving drop\" + e);\n-\t\t} finally {\n-\t\t\ttry {\n-\t\t\t\tif (ps != null && !ps.isClosed()) { \n-\t\t\t\t\tps.close();\n-\t\t\t\t}\n-\t\t\t\tif (rs != null && !rs.isClosed()) {\n-\t\t\t\t\trs.close();\n-\t\t\t\t}\n-                                if (con != null && !con.isClosed()) {\n-\t\t\t\t\tcon.close();\n-\t\t\t\t}\n-\t\t\t} catch (SQLException ignore) {\n-                                ignore.printStackTrace();\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-        public List<MonsterDropEntry> retrieveEffectiveDrop(final int monsterId) {\n-                // this reads the drop entries searching for multi-equip, properly processing them\n-            \n-                List<MonsterDropEntry> list = retrieveDrop(monsterId);\n-                if (hasNoMultiEquipDrops.contains(monsterId) || !ServerConstants.USE_MULTIPLE_SAME_EQUIP_DROP) {\n-\t\t\treturn list;\n-\t\t}\n-                \n-                List<MonsterDropEntry> multiDrops = extraMultiEquipDrops.get(monsterId), extra = new LinkedList<>();\n-                if(multiDrops == null) {\n-                        multiDrops = new LinkedList<>();\n-                        \n-                        for(MonsterDropEntry mde : list) {\n-                                if(ItemConstants.isEquipment(mde.itemId) && mde.Maximum > 1) {\n-                                        multiDrops.add(mde);\n-                                    \n-                                        int rnd = Randomizer.rand(mde.Minimum, mde.Maximum);\n-                                        for(int i = 0; i < rnd - 1; i++) {\n-                                                extra.add(mde);   // this passes copies of the equips' MDE with min/max quantity > 1, but idc it'll be unused anyways\n-                                        }\n-                                }\n-                        }\n-                        \n-                        if(!multiDrops.isEmpty()) extraMultiEquipDrops.put(monsterId, multiDrops);\n-                        else hasNoMultiEquipDrops.add(monsterId);\n-                } else {\n-                        for(MonsterDropEntry mde : multiDrops) {\n-                                int rnd = Randomizer.rand(mde.Minimum, mde.Maximum);\n-                                for(int i = 0; i < rnd - 1; i++) {\n-                                        extra.add(mde);\n-                                }\n-                        }\n+            }\n+\n+            if (!multiDrops.isEmpty()) {\n+                extraMultiEquipDrops.put(monsterId, multiDrops);\n+            } else {\n+                hasNoMultiEquipDrops.add(monsterId);\n+            }\n+        } else {\n+            for (MonsterDropEntry mde : multiDrops) {\n+                int rnd = Randomizer.rand(mde.Minimum, mde.Maximum);\n+                for (int i = 0; i < rnd - 1; i++) {\n+                    extra.add(mde);\n                 }\n-                \n-                List<MonsterDropEntry> ret = new LinkedList<>(list);\n-                ret.addAll(extra);\n-                \n-                return ret;\n+            }\n         }\n-        \n-\tpublic final List<MonsterDropEntry> retrieveDrop(final int monsterId) {\n-\t\tif (drops.containsKey(monsterId)) {\n-\t\t\treturn drops.get(monsterId);\n-\t\t}\n-\t\tfinal List<MonsterDropEntry> ret = new LinkedList<>();\n-\n-\t\tPreparedStatement ps = null;\n-\t\tResultSet rs = null;\n-                Connection con = null;\n-\t\ttry {\n-                        con = DatabaseConnection.getConnection();\n-\t\t\tps = con.prepareStatement(\"SELECT itemid, chance, minimum_quantity, maximum_quantity, questid FROM drop_data WHERE dropperid = ?\");\n-\t\t\tps.setInt(1, monsterId);\n-\t\t\trs = ps.executeQuery();\n-\n-\t\t\twhile (rs.next()) {\n-\t\t\t\tret.add(\n-                                    new MonsterDropEntry(\n-                                        rs.getInt(\"itemid\"),\n-                                        rs.getInt(\"chance\"),\n-                                        rs.getInt(\"minimum_quantity\"),\n-                                        rs.getInt(\"maximum_quantity\"),\n-                                        rs.getShort(\"questid\")));\n-\t\t\t}\n-                        \n+\n+        List<MonsterDropEntry> ret = new LinkedList<>(list);\n+        ret.addAll(extra);\n+\n+        return ret;\n+    }\n+\n+    public final List<MonsterDropEntry> retrieveDrop(final int monsterId) {\n+        if (drops.containsKey(monsterId)) {\n+            return drops.get(monsterId);\n+        }\n+        final List<MonsterDropEntry> ret = new LinkedList<>();\n+\n+        if (monsterId >= 9300127 && monsterId <= 9300136 || monsterId >= 9300315 && monsterId <= 9300324) {\n+            int dropArray[] = {2022157, 2022158, 2022159, 2022160, 2022161, 2022162, 2022163, 2022164, 2022165, 2022166, 2022167, 2022168, 2022169, 2022170, 2022171, 2022172, 2022173, 2022174, 2022175, 2022176, 2022177, 2022178, 4001129}; //These are the drops, -1 means meso :D\n+            for (int id : dropArray) {\n+                ret.add(new MonsterDropEntry(id, 2000, 1, 1, (short) 0));\n+            }\n+        } else {\n+            PreparedStatement ps = null;\n+            ResultSet rs = null;\n+            Connection con = null;\n+            try {\n+                con = DatabaseConnection.getConnection();\n+                ps = con.prepareStatement(\"SELECT itemid, chance, minimum_quantity, maximum_quantity, questid FROM drop_data WHERE dropperid = ?\");\n+                ps.setInt(1, monsterId);\n+                rs = ps.executeQuery();\n+\n+                while (rs.next()) {\n+                    ret.add(new MonsterDropEntry(rs.getInt(\"itemid\"), rs.getInt(\"chance\"), rs.getInt(\"minimum_quantity\"), rs.getInt(\"maximum_quantity\"), rs.getShort(\"questid\")));\n+                }\n+\n+                con.close();\n+            } catch (SQLException e) {\n+                e.printStackTrace();\n+                return ret;\n+            } finally {\n+                try {\n+                    if (ps != null && !ps.isClosed()) {\n+                        ps.close();\n+                    }\n+                    if (rs != null && !rs.isClosed()) {\n+                        rs.close();\n+                    }\n+                    if (con != null && !con.isClosed()) {\n                         con.close();\n-\t\t} catch (SQLException e) {\n-                        e.printStackTrace();\n-\t\t\treturn ret;\n-\t\t} finally {\n-\t\t\ttry {\n-\t\t\t\tif (ps != null && !ps.isClosed()) {\n-\t\t\t\t\tps.close();\n-\t\t\t\t}\n-\t\t\t\tif (rs != null && !rs.isClosed()) {\n-\t\t\t\t\trs.close();\n-\t\t\t\t}\n-                                if (con != null && !con.isClosed()) {\n-\t\t\t\t\tcon.close();\n-\t\t\t\t}\n-\t\t\t} catch (SQLException ignore) {\n-                                ignore.printStackTrace();\n-\t\t\t\treturn ret;\n-\t\t\t}\n-\t\t}\n-\t\tdrops.put(monsterId, ret);\n-\t\treturn ret;\n-\t}\n-        \n-        public final List<Integer> retrieveDropPool(final int monsterId) {  // ignores Quest and Party Quest items\n-\t\tif (dropsChancePool.containsKey(monsterId)) {\n-\t\t\treturn dropsChancePool.get(monsterId);\n-\t\t}\n-                \n-                MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n-                \n-                List<MonsterDropEntry> dropList = retrieveDrop(monsterId);\n-\t\tList<Integer> ret = new ArrayList<>();\n-                \n-                int accProp = 0;\n-                for(MonsterDropEntry mde : dropList) {\n-                        if(!ii.isQuestItem(mde.itemId) && !ii.isPartyQuestItem(mde.itemId)) {\n-                                accProp += mde.chance;\n-                        }\n-\n-                        ret.add(accProp);\n+                    }\n+                } catch (SQLException ignore) {\n+                    ignore.printStackTrace();\n+                    return ret;\n                 }\n-                \n-\t\tif(accProp == 0) ret.clear();    // don't accept mobs dropping no relevant items\n-                \n-                dropsChancePool.put(monsterId, ret);\n-\t\treturn ret;\n-\t}\n-        \n-        public final void setMobAttackAnimationTime(int monsterId, int attackPos, int animationTime) {\n-                mobAttackAnimationTime.put(new Pair<>(monsterId, attackPos), animationTime);\n+            }\n+        }\n+        drops.put(monsterId, ret);\n+        return ret;\n+    }\n+\n+    public final List<Integer> retrieveDropPool(final int monsterId) {  // ignores Quest and Party Quest items\n+        if (dropsChancePool.containsKey(monsterId)) {\n+            return dropsChancePool.get(monsterId);\n+        }\n+\n+        MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n+\n+        List<MonsterDropEntry> dropList = retrieveDrop(monsterId);\n+        List<Integer> ret = new ArrayList<>();\n+\n+        int accProp = 0;\n+        for (MonsterDropEntry mde : dropList) {\n+            if (!ii.isQuestItem(mde.itemId) && !ii.isPartyQuestItem(mde.itemId)) {\n+                accProp += mde.chance;\n+            }\n+\n+            ret.add(accProp);\n+        }\n+\n+        if (accProp == 0) {\n+            ret.clear();    // don't accept mobs dropping no relevant items\n         }\n-        \n-        public final Integer getMobAttackAnimationTime(int monsterId, int attackPos) {\n-                Integer time = mobAttackAnimationTime.get(new Pair<>(monsterId, attackPos));\n-                return time == null ? 0 : time;\n+        dropsChancePool.put(monsterId, ret);\n+        return ret;\n+    }\n+\n+    public final void setMobAttackAnimationTime(int monsterId, int attackPos, int animationTime) {\n+        mobAttackAnimationTime.put(new Pair<>(monsterId, attackPos), animationTime);\n+    }\n+\n+    public final Integer getMobAttackAnimationTime(int monsterId, int attackPos) {\n+        Integer time = mobAttackAnimationTime.get(new Pair<>(monsterId, attackPos));\n+        return time == null ? 0 : time;\n+    }\n+\n+    public final void setMobSkillAnimationTime(MobSkill skill, int animationTime) {\n+        mobSkillAnimationTime.put(skill, animationTime);\n+    }\n+\n+    public final Integer getMobSkillAnimationTime(MobSkill skill) {\n+        Integer time = mobSkillAnimationTime.get(skill);\n+        return time == null ? 0 : time;\n+    }\n+\n+    public final void setMobAttackInfo(int monsterId, int attackPos, int mpCon, int coolTime) {\n+        mobAttackInfo.put((monsterId << 3) + attackPos, new Pair<>(mpCon, coolTime));\n+    }\n+\n+    public final Pair<Integer, Integer> getMobAttackInfo(int monsterId, int attackPos) {\n+        if (attackPos < 0 || attackPos > 7) {\n+            return null;\n         }\n-        \n-        public final void setMobSkillAnimationTime(MobSkill skill, int animationTime) {\n-                mobSkillAnimationTime.put(skill, animationTime);\n+        return mobAttackInfo.get((monsterId << 3) + attackPos);\n+    }\n+\n+    public static ArrayList<Pair<Integer, String>> getMobsIDsFromName(String search) {\n+        MapleDataProvider dataProvider = MapleDataProviderFactory.getDataProvider(new File(\"wz/String.wz\"));\n+        ArrayList<Pair<Integer, String>> retMobs = new ArrayList<Pair<Integer, String>>();\n+        MapleData data = dataProvider.getData(\"Mob.img\");\n+        List<Pair<Integer, String>> mobPairList = new LinkedList<Pair<Integer, String>>();\n+        for (MapleData mobIdData : data.getChildren()) {\n+            int mobIdFromData = Integer.parseInt(mobIdData.getName());\n+            String mobNameFromData = MapleDataTool.getString(mobIdData.getChildByPath(\"name\"), \"NO-NAME\");\n+            mobPairList.add(new Pair<Integer, String>(mobIdFromData, mobNameFromData));\n         }\n-        \n-        public final Integer getMobSkillAnimationTime(MobSkill skill) {\n-                Integer time = mobSkillAnimationTime.get(skill);\n-                return time == null ? 0 : time;\n+        for (Pair<Integer, String> mobPair : mobPairList) {\n+            if (mobPair.getRight().toLowerCase().contains(search.toLowerCase())) {\n+                retMobs.add(mobPair);\n+            }\n         }\n-        \n-        public final void setMobAttackInfo(int monsterId, int attackPos, int mpCon, int coolTime) {\n-                mobAttackInfo.put((monsterId << 3) + attackPos, new Pair<>(mpCon, coolTime));\n+        return retMobs;\n+    }\n+\n+    public boolean isBoss(int id) {\n+        Boolean boss = mobBossCache.get(id);\n+        if (boss == null) {\n+            try {\n+                boss = MapleLifeFactory.getMonster(id).isBoss();\n+            } catch (NullPointerException npe) {\n+                boss = false;\n+            } catch (Exception e) {   //nonexistant mob\n+                boss = false;\n+\n+                e.printStackTrace();\n+                System.err.println(\"Nonexistant mob id \" + id);\n+            }\n+\n+            mobBossCache.put(id, boss);\n         }\n-        \n-        public final Pair<Integer, Integer> getMobAttackInfo(int monsterId, int attackPos) {\n-                if (attackPos < 0 || attackPos > 7) return null;\n-                return mobAttackInfo.get((monsterId << 3) + attackPos);\n+\n+        return boss;\n+    }\n+\n+    public String getMobNameFromId(int id) {\n+        String mobName = mobNameCache.get(id);\n+        if (mobName == null) {\n+            try {\n+                mobName = MapleLifeFactory.getMonster(id).getName();\n+            } catch (NullPointerException npe) {\n+                mobName = \"\"; //nonexistant mob\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+                System.err.println(\"Nonexistant mob id \" + id);\n+                mobName = \"\"; //nonexistant mob\n+            }\n+\n+            mobNameCache.put(id, mobName);\n         }\n \n-\tpublic static ArrayList<Pair<Integer, String>> getMobsIDsFromName(String search) {\n-\t\tMapleDataProvider dataProvider = MapleDataProviderFactory.getDataProvider(new File(\"wz/String.wz\"));\n-\t\tArrayList<Pair<Integer, String>> retMobs = new ArrayList<Pair<Integer, String>>();\n-\t\tMapleData data = dataProvider.getData(\"Mob.img\");\n-\t\tList<Pair<Integer, String>> mobPairList = new LinkedList<Pair<Integer, String>>();\n-\t\tfor (MapleData mobIdData : data.getChildren()) {\n-\t\t\tint mobIdFromData = Integer.parseInt(mobIdData.getName());\n-\t\t\tString mobNameFromData = MapleDataTool.getString(mobIdData.getChildByPath(\"name\"), \"NO-NAME\");\n-\t\t\tmobPairList.add(new Pair<Integer, String>(mobIdFromData, mobNameFromData));\n-\t\t}\n-\t\tfor (Pair<Integer, String> mobPair : mobPairList) {\n-\t\t\tif (mobPair.getRight().toLowerCase().contains(search.toLowerCase())) {\n-\t\t\t\tretMobs.add(mobPair);\n-\t\t\t}\n-\t\t}\n-\t\treturn retMobs;\n-\t}\n-\n-        public boolean isBoss(int id) {\n-                Boolean boss = mobBossCache.get(id);\n-                if (boss == null) {\n-                        try {\n-                                boss = MapleLifeFactory.getMonster(id).isBoss();\n-                        } catch (NullPointerException npe) {\n-                                boss = false;\n-                        } catch (Exception e) {   //nonexistant mob\n-                                boss = false;\n-                                \n-                                e.printStackTrace();\n-                                System.err.println(\"Nonexistant mob id \" + id);\n-                        }\n-                        \n-                        mobBossCache.put(id, boss);\n-                }\n-                \n-                return boss;\n-\t}\n-        \n-\tpublic String getMobNameFromId(int id) {\n-                String mobName = mobNameCache.get(id);\n-                if (mobName == null) {\n-                        try\n-                        {\n-                                mobName = MapleLifeFactory.getMonster(id).getName();\n-                        } \n-                        catch (NullPointerException npe)\n-                        {\n-                                mobName = \"\"; //nonexistant mob\n-                        }\n-                        catch (Exception e)\n-                        {\n-                                e.printStackTrace();\n-                                System.err.println(\"Nonexistant mob id \" + id);\n-                                mobName = \"\"; //nonexistant mob\n-                        }\n-                        \n-                        mobNameCache.put(id, mobName);\n-                }\n-                \n-                return mobName;\n-\t}\n-\n-\tpublic final void clearDrops() {\n-\t\tdrops.clear();\n-                hasNoMultiEquipDrops.clear();\n-                extraMultiEquipDrops.clear();\n-                dropsChancePool.clear();\n-\t\tglobaldrops.clear();\n-\t\tcontinentdrops.clear();\n-\t\tretrieveGlobal();\n-\t}\n-}\n\\ No newline at end of file\n+        return mobName;\n+    }\n+\n+    public final void clearDrops() {\n+        drops.clear();\n+        hasNoMultiEquipDrops.clear();\n+        extraMultiEquipDrops.clear();\n+        dropsChancePool.clear();\n+        globaldrops.clear();\n+        continentdrops.clear();\n+        retrieveGlobal();\n+    }\n+}"}, {"sha": "03606d2e5ee3820d4d63e7bab47bf35b9ecc6761", "filename": "src/server/life/MobSkill.java", "status": "modified", "additions": 106, "deletions": 99, "changes": 205, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/life/MobSkill.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/life/MobSkill.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MobSkill.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,24 +1,24 @@\n /*\n-\tThis file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n-\t\t       Matthias Butz <matze@odinms.de>\n-\t\t       Jan Christian Meyer <vimes@odinms.de>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n+ This file is part of the OdinMS Maple Story Server\n+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+ Matthias Butz <matze@odinms.de>\n+ Jan Christian Meyer <vimes@odinms.de>\n+\n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+\n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n package server.life;\n \n import java.awt.Point;\n@@ -44,6 +44,7 @@\n  * @author Danny (Leifde)\n  */\n public class MobSkill {\n+\n     private int skillId, skillLevel, mpCon;\n     private List<Integer> toSummon = new ArrayList<Integer>();\n     private int spawnEffect, hp, x, y;\n@@ -106,17 +107,17 @@ public void setLimit(int limit) {\n \n     public void applyDelayedEffect(final MapleCharacter player, final MapleMonster monster, final boolean skill, int animationTime) {\n         Runnable toRun = new Runnable() {\n-                            @Override\n-                            public void run() {\n-                                if(monster.isAlive()) {\n-                                    applyEffect(player, monster, skill, null);\n-                                }\n-                            }\n-                        };\n-        \n+            @Override\n+            public void run() {\n+                if (monster.isAlive()) {\n+                    applyEffect(player, monster, skill, null);\n+                }\n+            }\n+        };\n+\n         monster.getMap().getChannelServer().registerOverallAction(monster.getMap().getId(), toRun, animationTime);\n     }\n-    \n+\n     public void applyEffect(MapleCharacter player, MapleMonster monster, boolean skill, List<MapleCharacter> banishPlayers) {\n         MapleDisease disease = null;\n         Map<MonsterStatus, Integer> stats = new ArrayMap<MonsterStatus, Integer>();\n@@ -142,50 +143,50 @@ public void applyEffect(MapleCharacter player, MapleMonster monster, boolean ski\n             case 153:\n                 stats.put(MonsterStatus.MAGIC_DEFENSE_UP, Integer.valueOf(x));\n                 break;\n-\t    case 114:\n-\t\tif (lt != null && rb != null && skill) {\n-\t\t    List<MapleMapObject> objects = getObjectsInRange(monster, MapleMapObjectType.MONSTER);\n-\t\t    final int hps = (getX() / 1000) * (int) (950 + 1050 * Math.random());\n-\t\t    for (MapleMapObject mons : objects) {\n-\t\t\t((MapleMonster) mons).heal(hps, getY());\n-\t\t    }\n-\t\t} else {\n-\t\t    monster.heal(getX(), getY());\n-\t\t}\n-\t\tbreak;\n-\t    case 120:\n+            case 114:\n+                if (lt != null && rb != null && skill) {\n+                    List<MapleMapObject> objects = getObjectsInRange(monster, MapleMapObjectType.MONSTER);\n+                    final int hps = (getX() / 1000) * (int) (950 + 1050 * Math.random());\n+                    for (MapleMapObject mons : objects) {\n+                        ((MapleMonster) mons).heal(hps, getY());\n+                    }\n+                } else {\n+                    monster.heal(getX(), getY());\n+                }\n+                break;\n+            case 120:\n                 disease = MapleDisease.SEAL;\n-\t\tbreak;\n-\t    case 121:\n-\t    \tdisease = MapleDisease.DARKNESS;\n-\t\tbreak;\n-\t    case 122:\n-\t    \tdisease = MapleDisease.WEAKEN;\n-\t\tbreak;\n-\t    case 123:\n-\t    \tdisease = MapleDisease.STUN;\n-\t\tbreak;\n-\t    case 124:\n-\t    \tdisease = MapleDisease.CURSE;\n-\t\tbreak;\n-\t    case 125:\n-\t    \tdisease = MapleDisease.POISON;\n-\t\tbreak;\n-\t    case 126: // Slow\n-\t    \tdisease = MapleDisease.SLOW;\n-\t\tbreak;\n-\t    case 127:\n-\t\tif (lt != null && rb != null && skill) {\n-\t\t    for (MapleCharacter character : getPlayersInRange(monster, player)) {\n-\t\t\tcharacter.dispel();\n-\t\t    }\n-\t\t} else {\n-\t\t    player.dispel();\n-\t\t}\n-\t\tbreak;\n-\t    case 128: // Seduce\n-\t    \tdisease = MapleDisease.SEDUCE;\n-\t\tbreak;\n+                break;\n+            case 121:\n+                disease = MapleDisease.DARKNESS;\n+                break;\n+            case 122:\n+                disease = MapleDisease.WEAKEN;\n+                break;\n+            case 123:\n+                disease = MapleDisease.STUN;\n+                break;\n+            case 124:\n+                disease = MapleDisease.CURSE;\n+                break;\n+            case 125:\n+                disease = MapleDisease.POISON;\n+                break;\n+            case 126: // Slow\n+                disease = MapleDisease.SLOW;\n+                break;\n+            case 127:\n+                if (lt != null && rb != null && skill) {\n+                    for (MapleCharacter character : getPlayersInRange(monster, player)) {\n+                        character.dispel();\n+                    }\n+                } else {\n+                    player.dispel();\n+                }\n+                break;\n+            case 128: // Seduce\n+                disease = MapleDisease.SEDUCE;\n+                break;\n             case 129: // Banish\n                 if (lt != null && rb != null && skill) {\n                     for (MapleCharacter chr : getPlayersInRange(monster, player)) {\n@@ -214,35 +215,40 @@ public void applyEffect(MapleCharacter player, MapleMonster monster, boolean ski\n                     stats.put(MonsterStatus.MAGIC_IMMUNITY, Integer.valueOf(x));\n                 }\n                 break;\n-\t    case 143: // Weapon Reflect\n-                    stats.put(MonsterStatus.WEAPON_REFLECT, 10);\n-                    stats.put(MonsterStatus.WEAPON_IMMUNITY, 10);\n-                    reflection.add(x);\n-\t\tbreak;\n-\t    case 144: // Magic Reflect\n-                    stats.put(MonsterStatus.MAGIC_REFLECT, 10);\n-                    stats.put(MonsterStatus.MAGIC_IMMUNITY, 10);\n-                    reflection.add(x);\n-\t\tbreak;\n-\t    case 145: // Weapon / Magic reflect\n-                    stats.put(MonsterStatus.WEAPON_REFLECT, 10);\n-                    stats.put(MonsterStatus.WEAPON_IMMUNITY, 10);\n-                    stats.put(MonsterStatus.MAGIC_REFLECT, 10);\n-                    stats.put(MonsterStatus.MAGIC_IMMUNITY, 10);\n-                    reflection.add(x);\n+            case 143: // Weapon Reflect\n+                stats.put(MonsterStatus.WEAPON_REFLECT, 10);\n+                stats.put(MonsterStatus.WEAPON_IMMUNITY, 10);\n+                reflection.add(x);\n+                break;\n+            case 144: // Magic Reflect\n+                stats.put(MonsterStatus.MAGIC_REFLECT, 10);\n+                stats.put(MonsterStatus.MAGIC_IMMUNITY, 10);\n+                reflection.add(x);\n                 break;\n-            case 154: // accuracy up\n-            case 155: // avoid up\n-            case 156: // speed up\n+            case 145: // Weapon / Magic reflect\n+                stats.put(MonsterStatus.WEAPON_REFLECT, 10);\n+                stats.put(MonsterStatus.WEAPON_IMMUNITY, 10);\n+                stats.put(MonsterStatus.MAGIC_REFLECT, 10);\n+                stats.put(MonsterStatus.MAGIC_IMMUNITY, 10);\n+                reflection.add(x);\n+                break;\n+            case 154:\n+                stats.put(MonsterStatus.ACC, Integer.valueOf(x));\n+                break;\n+            case 155:\n+                stats.put(MonsterStatus.AVOID, Integer.valueOf(x));\n+                break;\n+            case 156:\n+                stats.put(MonsterStatus.SPEED, Integer.valueOf(x));\n                 break;\n             case 200: // summon\n                 int skillLimit = this.getLimit();\n                 MapleMap map = monster.getMap();\n-                \n+\n                 if (map.isDojoMap()) {  // spawns in dojo should be unlimited\n                     skillLimit = Integer.MAX_VALUE;\n                 }\n-                \n+\n                 if (map.getSpawnedMonstersOnMap() < 80) {\n                     List<Integer> summons = getSummons();\n                     int summonLimit = monster.countAvailableMobSummons(summons.size(), skillLimit);\n@@ -252,9 +258,10 @@ public void applyEffect(MapleCharacter player, MapleMonster monster, boolean ski\n \n                         for (Integer mobId : summons.subList(0, summonLimit)) {\n                             MapleMonster toSpawn = MapleLifeFactory.getMonster(mobId);\n-                            if(toSpawn != null) {\n-                                if(bossRushMap) toSpawn.disableDrops();  // no littering on BRPQ pls\n-\n+                            if (toSpawn != null) {\n+                                if (bossRushMap) {\n+                                    toSpawn.disableDrops();  // no littering on BRPQ pls\n+                                }\n                                 toSpawn.setPosition(monster.getPosition());\n                                 int ypos, xpos;\n                                 xpos = (int) monster.getPosition().getX();\n@@ -277,7 +284,7 @@ public void applyEffect(MapleCharacter player, MapleMonster monster, boolean ski\n                                         } else {\n                                             xpos = (int) (monster.getPosition().getX() + Randomizer.nextInt(1000) - 500);\n                                         }\n-                                        break;          \n+                                        break;\n                                 }\n                                 switch (map.getId()) {\n                                     case 220080001: //Pap map\n@@ -297,9 +304,9 @@ public void applyEffect(MapleCharacter player, MapleMonster monster, boolean ski\n                                 }\n                                 toSpawn.setPosition(new Point(xpos, ypos));\n                                 if (toSpawn.getId() == 8500004) {\n-                                        map.spawnFakeMonster(toSpawn);\n+                                    map.spawnFakeMonster(toSpawn);\n                                 } else {\n-                                        map.spawnMonsterWithEffect(toSpawn, getSpawnEffect(), toSpawn.getPosition());\n+                                    map.spawnMonsterWithEffect(toSpawn, getSpawnEffect(), toSpawn.getPosition());\n                                 }\n                                 monster.addSummonedMob(toSpawn);\n                             }"}, {"sha": "c912ce82f910ff0bc314dccfd752c87ac95a4832", "filename": "src/server/maps/MapleMap.java", "status": "modified", "additions": 380, "deletions": 53, "changes": 433, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/MapleMap.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/MapleMap.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMap.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -84,18 +84,21 @@\n import server.life.MonsterDropEntry;\n import server.life.MonsterGlobalDropEntry;\n import server.life.SpawnPoint;\n-import server.partyquest.MonsterCarnival;\n-import server.partyquest.MonsterCarnivalParty;\n-//import server.partyquest.Pyramid;\n import scripting.event.EventInstanceManager;\n import server.life.MaplePlayerNPC;\n+import server.life.MobSkill;\n+import server.life.MobSkillFactory;\n import server.life.MonsterListener;\n+import server.partyquest.GuardianSpawnPoint;\n+import server.partyquest.MapleCarnivalFactory;\n+import server.partyquest.MapleCarnivalFactory.MCSkill;\n import tools.FilePrinter;\n import tools.MaplePacketCreator;\n import tools.Pair;\n import tools.Randomizer;\n \n public class MapleMap {\n+    \n     private static final List<MapleMapObjectType> rangedMapobjectTypes = Arrays.asList(MapleMapObjectType.SHOP, MapleMapObjectType.ITEM, MapleMapObjectType.NPC, MapleMapObjectType.MONSTER, MapleMapObjectType.DOOR, MapleMapObjectType.SUMMON, MapleMapObjectType.REACTOR);\n     private static final Map<Integer, Pair<Integer, Integer>> dropBoundsCache = new HashMap<>(100);\n     \n@@ -275,7 +278,9 @@ public World getWorldServer() {\n     }\n \n     public MapleMap getReturnMap() {\n-        if(returnMapId == 999999999) return this;\n+        if (returnMapId == 999999999) {\n+            return this;\n+        }\n         return getChannelServer().getMapFactory().getMap(returnMapId);\n     }\n \n@@ -538,8 +543,11 @@ private Point bsearchDropPos(Point initial, Point fallback) {\n     }\n     \n     public Point calcDropPos(Point initial, Point fallback) {\n-        if(initial.x < xLimits.left) initial.x = xLimits.left;\n-        else if(initial.x > xLimits.right) initial.x = xLimits.right;\n+        if (initial.x < xLimits.left) {\n+            initial.x = xLimits.left;\n+        } else if(initial.x > xLimits.right) {\n+            initial.x = xLimits.right;\n+        }\n         \n         Point ret = calcPointBelow(new Point(initial.x, initial.y - 85));\n         if (ret == null) {\n@@ -559,8 +567,8 @@ public boolean canDeployDoor(Point pos) {\n     }\n     \n     /**\n-     * Fetches angle relative between spawn and door points\n-     * where 3 O'Clock is 0 and 12 O'Clock is 270 degrees\n+     * Fetches angle relative between spawn and door points where 3 O'Clock is 0\n+     * and 12 O'Clock is 270 degrees\n      * \n      * @param spawnPoint\n      * @param doorPoint\n@@ -574,10 +582,11 @@ private static double getAngle(Point doorPoint, Point spawnPoint) {\n         double inRads = Math.atan2(dy, dx);\n \n         // We need to map to coord system when 0 degree is at 3 O'clock, 270 at 12 O'clock\n-        if (inRads < 0)\n+        if (inRads < 0) {\n             inRads = Math.abs(inRads);\n-        else\n+        } else {\n             inRads = 2 * Math.PI - inRads;\n+        }\n \n         return Math.toDegrees(inRads);\n     }\n@@ -650,7 +659,9 @@ private byte dropItemsFromMonsterOnMap(List<MonsterDropEntry> dropEntry, Point p\n                             mesos = (int) (mesos * chr.getBuffedValue(MapleBuffStat.MESOUP).doubleValue() / 100.0);\n                         }\n                         mesos = mesos * chr.getMesoRate();\n-                        if(mesos <= 0) mesos = Integer.MAX_VALUE;\n+                        if (mesos <= 0) {\n+                            mesos = Integer.MAX_VALUE;\n+                        }\n                         \n                         spawnMesoDrop(mesos, calcDropPos(pos, mob.getPosition()), mob, chr, false, droptype);\n                     }\n@@ -713,7 +724,9 @@ private void dropFromMonster(final MapleCharacter chr, final MapleMonster mob, f\n             chRate *= (stati.getStati().get(MonsterStatus.SHOWDOWN).doubleValue() / 100.0 + 1.0);\n         }\n         \n-        if(useBaseRate) chRate = 1;\n+        if (useBaseRate) {\n+            chRate = 1;\n+        }\n \n         final MapleMonsterInformationProvider mi = MapleMonsterInformationProvider.getInstance();\n         final List<MonsterGlobalDropEntry> globalEntry = mi.getRelevantGlobalDrops(this.getId());\n@@ -773,7 +786,9 @@ private void cleanItemMonitor() {\n     private void startItemMonitor() {\n         chrWLock.lock();\n         try {\n-            if(itemMonitor != null) return;\n+            if (itemMonitor != null) {\n+                return;\n+            }\n             \n             itemMonitor = TimerManager.getInstance().register(new Runnable() {\n                 @Override\n@@ -806,7 +821,9 @@ public void run() {\n                         objectRLock.unlock();\n                     }\n                     \n-                    if(tryClean) cleanItemMonitor();\n+                    if (tryClean) {\n+                        cleanItemMonitor();\n+                    }\n                 }\n             }, ServerConstants.ITEM_MONITOR_TIME, ServerConstants.ITEM_MONITOR_TIME);\n             \n@@ -861,7 +878,9 @@ private synchronized void instantiateItemDrop(MapleMapItem mdrop) {\n                 try {\n                     mapobj = registeredDrops.remove(0).get();\n                     while(mapobj == null) {\n-                        if(registeredDrops.isEmpty()) break;\n+                        if (registeredDrops.isEmpty()) {\n+                            break;\n+                        }\n                         mapobj = registeredDrops.remove(0).get();\n                     }\n                 } finally {\n@@ -1004,7 +1023,9 @@ public void updatePlayerItemDrops(int partyid, int charid, List<MapleCharacter>\n             if(mdrop.getOwnerId() == charid) {\n                 mdrop.lockItem();\n                 try {\n-                    if(mdrop.isPickedUp()) return;\n+                    if (mdrop.isPickedUp()) {\n+                        return;\n+                    }\n                     \n                     mdrop.setPartyOwnerId(partyid);\n                     \n@@ -1197,7 +1218,9 @@ public int countAlivePlayers() {\n         int count = 0;\n         \n         for(MapleCharacter mc: getAllPlayers()) {\n-            if(mc.isAlive()) count++;\n+            if (mc.isAlive()) {\n+                count++;\n+            }\n         }\n         \n         return count;\n@@ -1233,7 +1256,9 @@ public boolean damageMonster(final MapleCharacter chr, final MapleMonster monste\n     public List<MapleMonster> getMonsters() {\n         List<MapleMonster> mobs = new ArrayList<>();\n         for (MapleMapObject object : this.getMapObjects()) {\n-            if(object instanceof MapleMonster) mobs.add((MapleMonster)object);\n+            if (object instanceof MapleMonster) {\n+                mobs.add((MapleMonster)object);\n+            }\n         }\n         return mobs;\n     }\n@@ -1276,7 +1301,9 @@ public void killMonster(final MapleMonster monster, final MapleCharacter chr, fi\n     }\n \n     public void killMonster(final MapleMonster monster, final MapleCharacter chr, final boolean withDrops, int animation) {\n-        if(monster == null) return;\n+        if (monster == null) {\n+            return;\n+        }\n         \n         if (chr == null) {\n             if(removeKilledMonsterObject(monster)) {\n@@ -1288,12 +1315,18 @@ public void killMonster(final MapleMonster monster, final MapleCharacter chr, fi\n                 if (monster.getStats().getLevel() >= chr.getLevel() + 30 && !chr.isGM()) {\n                     AutobanFactory.GENERAL.alert(chr, \" for killing a \" + monster.getName() + \" which is over 30 levels higher.\");\n                 }\n+                \n                 /*if (chr.getQuest(MapleQuest.getInstance(29400)).getStatus().equals(MapleQuestStatus.Status.STARTED)) {\n                  if (chr.getLevel() >= 120 && monster.getStats().getLevel() >= 120) {\n                  //FIX MEDAL SHET\n                  } else if (monster.getStats().getLevel() >= chr.getLevel()) {\n                  }\n                  }*/\n+                \n+                if (monster.getCP() > 0 && chr.getMap().isCPQMap()) {\n+                    chr.gainCP(monster.getCP());\n+                }\n+                \n                 int buff = monster.getBuffToGive();\n                 if (buff > -1) {\n                     MapleItemInformationProvider mii = MapleItemInformationProvider.getInstance();\n@@ -1307,13 +1340,7 @@ public void killMonster(final MapleMonster monster, final MapleCharacter chr, fi\n                         }\n                     }\n                 }\n-\n-                if (monster.getCP() > 0 && chr.getCarnival() != null) {\n-                    chr.getCarnivalParty().addCP(chr, monster.getCP());\n-                    chr.announce(MaplePacketCreator.updateCP(chr.getCP(), chr.getObtainedCP()));\n-                    broadcastMessage(MaplePacketCreator.updatePartyCP(chr.getCarnivalParty()));\n-                    //they drop items too ):\n-                }\n+                \n                 if (monster.getId() >= 8800003 && monster.getId() <= 8800010) {\n                     boolean makeZakReal = true;\n                     Collection<MapleMapObject> objects = getMapObjects();\n@@ -1389,7 +1416,9 @@ public void killMonsterWithDrops(int mobId) {\n             for (MapleMonster mob : mobList) {\n                 if (mob.getId() == mobId) {\n                     MapleCharacter chr = mapChars.get(mob.getHighestDamagerId());\n-                    if(chr == null) chr = defaultChr;\n+                    if (chr == null) {\n+                        chr = defaultChr;\n+                    }\n                     \n                     this.killMonster(mob, chr, true);\n                 }\n@@ -1788,7 +1817,9 @@ public Point getPointBelow(Point pos) {\n \n     public void spawnRevives(final MapleMonster monster) {\n         monster.setMap(this);\n-        if(getEventInstance() != null) getEventInstance().registerMonster(monster);\n+        if (getEventInstance() != null) {\n+            getEventInstance().registerMonster(monster);\n+        }\n \n         spawnAndAddRangedMapObject(monster, new DelayedPacketCreation() {\n             @Override\n@@ -1890,7 +1921,9 @@ public void spawnMonster(final MapleMonster monster, int difficulty, boolean isP\n         monster.changeDifficulty(difficulty, isPq);\n         \n         monster.setMap(this);\n-        if(getEventInstance() != null) getEventInstance().registerMonster(monster);\n+        if (getEventInstance() != null) {\n+            getEventInstance().registerMonster(monster);\n+        }\n \n         spawnAndAddRangedMapObject(monster, new DelayedPacketCreation() {\n             @Override\n@@ -1901,6 +1934,22 @@ public void sendPackets(MapleClient c) {\n         \n         monster.aggroUpdateController();\n         \n+        if ((monster.getTeam() == 1 || monster.getTeam() == 0) && (isCPQMap() || isCPQMap2())) {\n+            List<MCSkill> teamS = null;\n+            if (monster.getTeam() == 0) {\n+                teamS = redTeamBuffs;\n+            } else if (monster.getTeam() == 1) {\n+                teamS = blueTeamBuffs;\n+            }\n+            if (teamS != null) {\n+                for (MCSkill skil : teamS) {\n+                    if (skil != null) {\n+                        skil.getSkill().applyEffect(null, monster, false, null);\n+                    }\n+                }\n+            }\n+        }\n+        \n         if (monster.hasBossHPBar()) {\n             broadcastBossHpMessage(monster, monster.hashCode(), monster.makeBossHPBarPacket(), monster.getPosition());\n         }\n@@ -1932,9 +1981,13 @@ public void spawnMonsterWithEffect(final MapleMonster monster, final int effect,\n         monster.setMap(this);\n         Point spos = new Point(pos.x, pos.y - 1);\n         spos = calcPointBelow(spos);\n-        if(spos == null) return;\n+        if (spos == null) {\n+            return;\n+        }\n         \n-        if(getEventInstance() != null) getEventInstance().registerMonster(monster);\n+        if (getEventInstance() != null) {\n+            getEventInstance().registerMonster(monster);\n+        }\n         \n         spos.y--;\n         monster.setPosition(spos);\n@@ -2008,7 +2061,9 @@ public void sendPackets(MapleClient c) {\n                     }\n                     \n                     c.announce(MaplePacketCreator.spawnPortal(door.getFrom().getId(), door.getTo().getId(), door.toPosition()));\n-                    if(!door.inTown()) c.announce(MaplePacketCreator.spawnDoor(door.getOwnerId(), door.getPosition(), false));\n+                    if (!door.inTown()) {\n+                        c.announce(MaplePacketCreator.spawnDoor(door.getOwnerId(), door.getPosition(), false));\n+                    }\n                 }\n \n                 c.announce(MaplePacketCreator.enableActions());\n@@ -2153,7 +2208,9 @@ public final void spawnItemDropList(List<Integer> list, int minCopies, int maxCo\n     // spawns item instances of all defined item ids on a list\n     public final void spawnItemDropList(List<Integer> list, int minCopies, int maxCopies, final MapleMapObject dropper, final MapleCharacter owner, Point pos, final boolean ffaDrop, final boolean playerDrop) {\n         int copies = (maxCopies - minCopies) + 1;\n-        if(copies < 1) return;\n+        if(copies < 1) {\n+            return;\n+        }\n         \n         Collections.shuffle(list);\n         \n@@ -2166,8 +2223,7 @@ public final void spawnItemDropList(List<Integer> list, int minCopies, int maxCo\n         for(int i = 0; i < list.size(); i++) {\n             if(list.get(i) == 0) {\n                 spawnMesoDrop(owner != null ? 10 * owner.getMesoRate() : 10, calcDropPos(dropPos, pos), dropper, owner, playerDrop, (byte) (ffaDrop ? 2 : 0));\n-            }\n-            else {\n+            } else {\n                 final Item drop;\n                 int randomedId = list.get(i);\n \n@@ -2280,7 +2336,9 @@ public MapleCharacter getAnyCharacterFromParty(int partyid) {\n     \n     private void addPartyMemberInternal(MapleCharacter chr) {\n         int partyid = chr.getPartyId();\n-        if(partyid == -1) return;\n+        if (partyid == -1) {\n+            return;\n+        }\n         \n         Set<Integer> partyEntry = mapParty.get(partyid);\n         if(partyEntry == null) {\n@@ -2295,12 +2353,17 @@ private void addPartyMemberInternal(MapleCharacter chr) {\n     \n     private void removePartyMemberInternal(MapleCharacter chr) {\n         int partyid = chr.getPartyId();\n-        if(partyid == -1) return;\n+        if (partyid == -1) {\n+            return;\n+        }\n         \n         Set<Integer> partyEntry = mapParty.get(partyid);\n         if(partyEntry != null) {\n-            if(partyEntry.size() > 1) partyEntry.remove(chr.getId());\n-            else mapParty.remove(partyid);\n+            if (partyEntry.size() > 1) {\n+                partyEntry.remove(chr.getId());\n+            } else {\n+                mapParty.remove(partyid);\n+            }\n         }\n     }\n     \n@@ -2441,7 +2504,9 @@ public void run() {\n             }, travelTime);\n         } else if (MapleMiniDungeonInfo.isDungeonMap(mapid)) {\n             MapleMiniDungeon mmd = chr.getClient().getChannelServer().getMiniDungeon(mapid);\n-            if(mmd != null) mmd.registerPlayer(chr);\n+            if (mmd != null) {\n+                mmd.registerPlayer(chr);\n+            }\n         }\n         \n         MaplePet[] pets = chr.getPets();\n@@ -2454,6 +2519,23 @@ public void run() {\n             }\n         }\n         \n+        if (chr.getMonsterCarnival() != null) {\n+            chr.getClient().announce(MaplePacketCreator.getClock(chr.getMonsterCarnival().getTimeLeftSeconds()));\n+            if (isCPQMap()) {\n+                int team = -1;\n+                int oposition = -1;\n+                if (chr.getTeam() == 0) {\n+                    team = 0;\n+                    oposition = 1;\n+                }\n+                if (chr.getTeam() == 1) {\n+                    team = 1;\n+                    oposition = 0;\n+                }\n+                chr.getClient().announce(MaplePacketCreator.startMonsterCarnival(chr, team, oposition));\n+            }\n+        }\n+        \n         chr.removeSandboxItems();\n         \n         if (chr.getChalkboard() != null) {\n@@ -2537,19 +2619,16 @@ public void run() {\n             chr.announce(MaplePacketCreator.rollSnowBall(true, 0, null, null));\n         }\n \n-        MonsterCarnival carnival = chr.getCarnival();\n-        MonsterCarnivalParty cparty = chr.getCarnivalParty();\n-        if (carnival != null && cparty != null && (mapid == 980000101 || mapid == 980000201 || mapid == 980000301 || mapid == 980000401 || mapid == 980000501 || mapid == 980000601)) {\n-            chr.getClient().announce(MaplePacketCreator.getClock((int) (carnival.getTimeLeft() / 1000)));\n-            chr.getClient().announce(MaplePacketCreator.startCPQ(chr, carnival.oppositeTeam(cparty)));\n-        }\n         if (hasClock()) {\n             Calendar cal = Calendar.getInstance();\n             chr.getClient().announce((MaplePacketCreator.getClockTime(cal.get(Calendar.HOUR_OF_DAY), cal.get(Calendar.MINUTE), cal.get(Calendar.SECOND))));\n         }\n         if (hasBoat() > 0) {\n-            if(hasBoat() == 1) chr.getClient().announce((MaplePacketCreator.boatPacket(true)));\n-            else chr.getClient().announce(MaplePacketCreator.boatPacket(false));\n+            if (hasBoat() == 1) {\n+                chr.getClient().announce((MaplePacketCreator.boatPacket(true)));\n+            } else {\n+                chr.getClient().announce(MaplePacketCreator.boatPacket(false));\n+            }\n         }\n         \n         chr.receivePartyMemberHP();\n@@ -3222,6 +3301,10 @@ public void setClock(boolean hasClock) {\n     public boolean hasClock() {\n         return clock;\n     }\n+    \n+    public void addClock(int seconds) {\n+        broadcastMessage(MaplePacketCreator.getClock(seconds));\n+    }\n \n     public void setTown(boolean isTown) {\n         this.town = isTown;\n@@ -3324,6 +3407,7 @@ public boolean makeDisappearItemFromMap(MapleMapItem mapitem) {\n     }\n \n     private class MobLootEntry implements Runnable {\n+        \n         private byte droptype;\n         private int mobpos;\n         private int chRate;\n@@ -3434,7 +3518,9 @@ public void instanceMapFirstSpawn(int difficulty, boolean isPq) {\n     }\n \n     public void instanceMapRespawn() {\n-        if(!allowSummons) return;\n+        if (!allowSummons) {\n+            return;\n+        }\n         \n         final int numShouldSpawn = (short) ((monsterSpawn.size() - spawnedMonstersOnMap.get()));//Fking lol'd\n         if (numShouldSpawn > 0) {\n@@ -3454,7 +3540,9 @@ public void instanceMapRespawn() {\n     }\n     \n     public void instanceMapForceRespawn() {\n-        if(!allowSummons) return;\n+        if (!allowSummons) {\n+            return;\n+        }\n         \n         final int numShouldSpawn = (short) ((monsterSpawn.size() - spawnedMonstersOnMap.get()));//Fking lol'd\n         if (numShouldSpawn > 0) {\n@@ -3537,7 +3625,9 @@ private int getNumShouldSpawn(int numPlayers) {\n     }\n     \n     public void respawn() {\n-        if(!allowSummons) return;\n+        if (!allowSummons) {\n+            return;\n+        }\n         \n         int numPlayers;\n         chrRLock.lock();\n@@ -3996,7 +4086,9 @@ public boolean isDojoFightMap() {\n     \n     public boolean isHorntailDefeated() {   // all parts of dead horntail can be found here?\n         for(int i = 8810010; i <= 8810017; i++) {\n-            if(getMonsterById(i) == null) return false;\n+            if (getMonsterById(i) == null) {\n+                return false;\n+            }\n         }\n         \n         return true;\n@@ -4100,6 +4192,241 @@ public void checkMapOwnerActivity() {\n         }\n     }\n     \n+    private final List<Point> takenSpawns = new LinkedList<>();\n+    private final List<GuardianSpawnPoint> guardianSpawns = new LinkedList<>();\n+    private final List<MCSkill> blueTeamBuffs = new ArrayList();\n+    private final List<MCSkill> redTeamBuffs = new ArrayList();\n+    private List<Integer> skillIds = new ArrayList();\n+    private List<Pair<Integer, Integer>> mobsToSpawn = new ArrayList();\n+\n+    public List<MCSkill> getBlueTeamBuffs() {\n+        return blueTeamBuffs;\n+    }\n+\n+    public List<MCSkill> getRedTeamBuffs() {\n+        return redTeamBuffs;\n+    }\n+\n+    public void clearBuffList() {\n+        redTeamBuffs.clear();\n+        blueTeamBuffs.clear();\n+    }\n+\n+    public List<MapleMapObject> getAllPlayer() {\n+        return getMapObjectsInRange(new Point(0, 0), Double.POSITIVE_INFINITY, Arrays.asList(MapleMapObjectType.PLAYER));\n+    }\n+\n+    public boolean isCPQMap() {\n+        switch (this.getId()) {\n+            case 980000101:\n+            case 980000201:\n+            case 980000301:\n+            case 980000401:\n+            case 980000501:\n+            case 980000601:\n+            case 980031100:\n+            case 980032100:\n+            case 980033100:\n+                return true;\n+        }\n+        return false;\n+    }\n+\n+    public boolean isCPQMap2() {\n+        switch (this.getId()) {\n+            case 980031100:\n+            case 980032100:\n+            case 980033100:\n+                return true;\n+        }\n+        return false;\n+    }\n+\n+    public boolean isCPQLobby() {\n+        switch (this.getId()) {\n+            case 980000100:\n+            case 980000200:\n+            case 980000300:\n+            case 980000400:\n+            case 980000500:\n+            case 980000600:\n+                return true;\n+        }\n+        return false;\n+    }\n+\n+    public boolean isBlueCPQMap() {\n+        switch (this.getId()) {\n+            case 980000501:\n+            case 980000601:\n+            case 980031200:\n+            case 980032200:\n+            case 980033200:\n+                return true;\n+        }\n+        return false;\n+    }\n+\n+    public boolean isPurpleCPQMap() {\n+        switch (this.getId()) {\n+            case 980000301:\n+            case 980000401:\n+            case 980031200:\n+            case 980032200:\n+            case 980033200:\n+                return true;\n+        }\n+        return false;\n+    }\n+\n+    public Point getRandomSP(int team) {\n+        if (takenSpawns.size() > 0) {\n+            for (SpawnPoint sp : monsterSpawn) {\n+                for (Point pt : takenSpawns) {\n+                    if ((sp.getPosition().x == pt.x && sp.getPosition().y == pt.y) || (sp.getTeam() != team && !this.isBlueCPQMap())) {\n+                        continue;\n+                    } else {\n+                        takenSpawns.add(pt);\n+                        return sp.getPosition();\n+                    }\n+                }\n+            }\n+        } else {\n+            for (SpawnPoint sp : monsterSpawn) {\n+                if (sp.getTeam() == team || this.isBlueCPQMap()) {\n+                    takenSpawns.add(sp.getPosition());\n+                    return sp.getPosition();\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public GuardianSpawnPoint getRandomGuardianSpawn(int team) {\n+        boolean alltaken = false;\n+        for (GuardianSpawnPoint a : this.guardianSpawns) {\n+            if (!a.isTaken()) {\n+                alltaken = false;\n+                break;\n+            }\n+        }\n+        if (alltaken) {\n+            return null;\n+        }\n+        if (this.guardianSpawns.size() > 0) {\n+            while (true) {\n+                for (GuardianSpawnPoint gsp : this.guardianSpawns) {\n+                    if (!gsp.isTaken() && Math.random() < 0.3 && (gsp.getTeam() == -1 || gsp.getTeam() == team)) {\n+                        return gsp;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public void addGuardianSpawnPoint(GuardianSpawnPoint a) {\n+        this.guardianSpawns.add(a);\n+    }\n+\n+    public int spawnGuardian(int team, int num) {\n+        try {\n+            if (team == 0 && redTeamBuffs.size() >= 4 || team == 1 && blueTeamBuffs.size() >= 4) {\n+                return 2;\n+            }\n+            final MCSkill skil = MapleCarnivalFactory.getInstance().getGuardian(num);\n+            if (team == 0 && redTeamBuffs.contains(skil)) {\n+                return 0;\n+            } else if (team == 1 && blueTeamBuffs.contains(skil)) {\n+                return 0;\n+            }\n+            GuardianSpawnPoint pt = this.getRandomGuardianSpawn(team);\n+            if (pt == null) {\n+                return -1;\n+            }\n+            int reactorID = 9980000 + team;\n+            MapleReactor reactor = new MapleReactor(MapleReactorFactory.getReactorS(reactorID), reactorID);\n+            pt.setTaken(true);\n+            reactor.setPosition(pt.getPosition());\n+            reactor.setName(team + \"\" + num); //lol\n+            reactor.resetReactorActions(0);\n+            this.spawnReactor(reactor);\n+            reactor.setGuardian(pt);\n+            this.buffMonsters(team, skil);\n+            getReactorByOid(reactor.getObjectId()).hitReactor(((MapleCharacter) this.getAllPlayer().get(0)).getClient());\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        return 1;\n+    }\n+\n+    public void buffMonsters(int team, MCSkill skil) {\n+        if (team == 0) {\n+            redTeamBuffs.add(skil);\n+        } else if (team == 1) {\n+            blueTeamBuffs.add(skil);\n+        }\n+        for (MapleMapObject mmo : this.mapobjects.values()) {\n+            if (mmo.getType() == MapleMapObjectType.MONSTER) {\n+                MapleMonster mob = (MapleMonster) mmo;\n+                if (mob.getTeam() == team) {\n+                    if (skil != null) {\n+                        skil.getSkill().applyEffect(null, mob, false, null);\n+                    }\n+                }\n+\n+            }\n+        }\n+    }\n+\n+    public final List<Integer> getSkillIds() {\n+        return skillIds;\n+    }\n+\n+    public final void addSkillId(int z) {\n+        this.skillIds.add(z);\n+    }\n+\n+    public final void addMobSpawn(int mobId, int spendCP) {\n+        this.mobsToSpawn.add(new Pair<Integer, Integer>(mobId, spendCP));\n+    }\n+\n+    public final List<Pair<Integer, Integer>> getMobsToSpawn() {\n+        return mobsToSpawn;\n+    }\n+\n+    public boolean isCPQWinnerMap() {\n+        switch (this.getId()) {\n+            case 980000103:\n+            case 980000203:\n+            case 980000303:\n+            case 980000403:\n+            case 980000503:\n+            case 980000603:\n+            case 980031300:\n+            case 980032300:\n+            case 980033300:\n+                return true;\n+        }\n+        return false;\n+    }\n+\n+    public boolean isCPQLoserMap() {\n+        switch (this.getId()) {\n+            case 980000104:\n+            case 980000204:\n+            case 980000304:\n+            case 980000404:\n+            case 980000504:\n+            case 980000604:\n+            case 980031400:\n+            case 980032400:\n+            case 980033400:\n+                return true;\n+        }\n+        return false;\n+    }\n+    \n     public void dispose() {\n         for(MapleMonster mm : this.getMonsters()) {\n             mm.dispose();\n@@ -4140,4 +4467,4 @@ public void dispose() {\n             chrWLock.unlock();\n         }\n     }\n-}\n+}\n\\ No newline at end of file"}, {"sha": "05a41ef13c081bb632f5031cff40d1a722f1993e", "filename": "src/server/maps/MapleMapFactory.java", "status": "modified", "additions": 75, "deletions": 40, "changes": 115, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/MapleMapFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/MapleMapFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMapFactory.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -48,12 +48,14 @@\n import server.life.MaplePlayerNPC;\n import server.life.MaplePlayerNPCFactory;\n import scripting.event.EventInstanceManager;\n+import server.partyquest.GuardianSpawnPoint;\n import tools.DatabaseConnection;\n import tools.StringUtil;\n \n public class MapleMapFactory {\n+\n     private static Map<Integer, Float> mapRecoveryRate = new HashMap<>();\n-    \n+\n     private MapleDataProvider source;\n     private MapleData nameData;\n     private EventInstanceManager event;\n@@ -68,27 +70,36 @@ public MapleMapFactory(EventInstanceManager eim, MapleDataProvider source, Maple\n         this.world = world;\n         this.channel = channel;\n         this.event = eim;\n-        \n+\n         ReentrantReadWriteLock rrwl = new MonitoredReentrantReadWriteLock(MonitoredLockType.MAP_FACTORY);\n         this.mapsRLock = rrwl.readLock();\n         this.mapsWLock = rrwl.writeLock();\n     }\n-    \n+\n     public MapleMap resetMap(int mapid) {\n         mapsWLock.lock();\n         try {\n             maps.remove(Integer.valueOf(mapid));\n         } finally {\n             mapsWLock.unlock();\n         }\n-        \n+\n         return getMap(mapid);\n     }\n-    \n+\n     private void loadLifeFromWz(MapleMap map, MapleData mapData) {\n         for (MapleData life : mapData.getChildByPath(\"life\")) {\n+            life.getName();\n             String id = MapleDataTool.getString(life.getChildByPath(\"id\"));\n             String type = MapleDataTool.getString(life.getChildByPath(\"type\"));\n+            int team = MapleDataTool.getInt(\"team\", life, -1);\n+            if (map.isCPQMap2() && type.equals(\"m\")) {\n+                if((Integer.parseInt(life.getName()) % 2) == 0)  {\n+                    team = 0;\n+                } else {\n+                    team = 1;\n+                }\n+            } \n             int cy = MapleDataTool.getInt(life.getChildByPath(\"cy\"));\n             MapleData dF = life.getChildByPath(\"f\");\n             int f = (dF != null) ? MapleDataTool.getInt(dF) : 0;\n@@ -99,12 +110,11 @@ private void loadLifeFromWz(MapleMap map, MapleData mapData) {\n             int y = MapleDataTool.getInt(life.getChildByPath(\"y\"));\n             int hide = MapleDataTool.getInt(\"hide\", life, 0);\n             int mobTime = MapleDataTool.getInt(\"mobTime\", life, 0);\n-            int team = MapleDataTool.getInt(\"team\", life, -1);\n \n             loadLifeRaw(map, Integer.parseInt(id), type, cy, f, fh, rx0, rx1, x, y, hide, mobTime, team);\n         }\n     }\n-    \n+\n     private void loadLifeFromDb(MapleMap map) {\n         try {\n             Connection con = DatabaseConnection.getConnection();\n@@ -113,7 +123,7 @@ private void loadLifeFromDb(MapleMap map) {\n             ps.setInt(2, map.getWorld());\n \n             ResultSet rs = ps.executeQuery();\n-            while(rs.next()) {\n+            while (rs.next()) {\n                 int id = rs.getInt(\"life\");\n                 String type = rs.getString(\"type\");\n                 int cy = rs.getInt(\"cy\");\n@@ -137,12 +147,12 @@ private void loadLifeFromDb(MapleMap map) {\n             sqle.printStackTrace();\n         }\n     }\n-    \n+\n     private void loadLifeRaw(MapleMap map, int id, String type, int cy, int f, int fh, int rx0, int rx1, int x, int y, int hide, int mobTime, int team) {\n         AbstractLoadedMapleLife myLife = loadLife(id, type, cy, f, fh, rx0, rx1, x, y, hide);\n         if (myLife instanceof MapleMonster) {\n             MapleMonster monster = (MapleMonster) myLife;\n-            \n+\n             if (mobTime == -1) { //does not respawn, force spawn once\n                 map.spawnMonster(monster);\n             } else {\n@@ -155,10 +165,10 @@ private void loadLifeRaw(MapleMap map, int id, String type, int cy, int f, int f\n             map.addMapObject(myLife);\n         }\n     }\n-    \n+\n     private synchronized MapleMap loadMapFromWz(int mapid, Integer omapid) {\n         MapleMap map;\n-        \n+\n         mapsRLock.lock();\n         try {\n             map = maps.get(omapid);\n@@ -169,7 +179,7 @@ private synchronized MapleMap loadMapFromWz(int mapid, Integer omapid) {\n         if (map != null) {\n             return map;\n         }\n-        \n+\n         String mapName = getMapName(mapid);\n         MapleData mapData = source.getData(mapName);    // source.getData issue with giving nulls in rare ocasions found thanks to MedicOP\n         MapleData infoData = mapData.getChildByPath(\"info\");\n@@ -209,9 +219,9 @@ private synchronized MapleMap loadMapFromWz(int mapid, Integer omapid) {\n         bounds[0] = MapleDataTool.getInt(infoData.getChildByPath(\"VRTop\"));\n         bounds[1] = MapleDataTool.getInt(infoData.getChildByPath(\"VRBottom\"));\n \n-        if(bounds[0] == bounds[1]) {    // old-style baked map\n+        if (bounds[0] == bounds[1]) {    // old-style baked map\n             MapleData minimapData = mapData.getChildByPath(\"miniMap\");\n-            if(minimapData != null) {\n+            if (minimapData != null) {\n                 bounds[0] = MapleDataTool.getInt(minimapData.getChildByPath(\"centerX\")) * -1;\n                 bounds[1] = MapleDataTool.getInt(minimapData.getChildByPath(\"centerY\")) * -1;\n                 bounds[2] = MapleDataTool.getInt(minimapData.getChildByPath(\"height\"));\n@@ -272,7 +282,7 @@ private synchronized MapleMap loadMapFromWz(int mapid, Integer omapid) {\n                 map.addMapleArea(new Rectangle(x1, y1, (x2 - x1), (y2 - y1)));\n             }\n         }\n-        if(event == null) {\n+        if (event == null) {\n             try {\n                 Connection con = DatabaseConnection.getConnection();\n                 try (PreparedStatement ps = con.prepareStatement(\"SELECT * FROM playernpcs WHERE map = ? AND world = ?\")) {\n@@ -288,23 +298,47 @@ private synchronized MapleMap loadMapFromWz(int mapid, Integer omapid) {\n             } catch (SQLException e) {\n                 e.printStackTrace();\n             }\n-            \n+\n             List<MaplePlayerNPC> dnpcs = MaplePlayerNPCFactory.getDeveloperNpcsFromMapid(mapid);\n-            if(dnpcs != null) {\n-                for(MaplePlayerNPC dnpc : dnpcs) {\n+            if (dnpcs != null) {\n+                for (MaplePlayerNPC dnpc : dnpcs) {\n                     map.addPlayerNPCMapObject(dnpc);\n                 }\n             }\n         }\n-        \n+\n         loadLifeFromWz(map, mapData);\n         loadLifeFromDb(map);\n-        \n+\n+        if (map.isCPQMap()) {\n+            MapleData mcData = mapData.getChildByPath(\"monsterCarnival\");\n+            if (mcData != null) {\n+                MapleData guardianGenData = mcData.getChildByPath(\"guardianGenPos\");\n+                for (MapleData node : guardianGenData.getChildren()) {\n+                    GuardianSpawnPoint pt = new GuardianSpawnPoint(new Point(MapleDataTool.getIntConvert(\"x\", node), MapleDataTool.getIntConvert(\"y\", node)));\n+                    pt.setTeam(MapleDataTool.getIntConvert(\"team\", node, -1));\n+                    pt.setTaken(false);\n+                    map.addGuardianSpawnPoint(pt);\n+                }\n+            }\n+            if (mcData.getChildByPath(\"skill\") != null) {\n+                for (MapleData area : mcData.getChildByPath(\"skill\")) {\n+                    map.addSkillId(MapleDataTool.getInt(area));\n+                }\n+            }\n+            \n+            if (mcData.getChildByPath(\"mob\") != null) {\n+                for (MapleData area : mcData.getChildByPath(\"mob\")) {\n+                    map.addMobSpawn(MapleDataTool.getInt(area.getChildByPath(\"id\")), MapleDataTool.getInt(area.getChildByPath(\"spendCP\")));\n+                }\n+            }\n+        }\n+\n         if (mapData.getChildByPath(\"reactor\") != null) {\n             for (MapleData reactor : mapData.getChildByPath(\"reactor\")) {\n                 String id = MapleDataTool.getString(reactor.getChildByPath(\"id\"));\n                 if (id != null) {\n-                    MapleReactor newReactor = loadReactor(reactor, id);\n+                    MapleReactor newReactor = loadReactor(reactor, id, (byte) MapleDataTool.getInt(reactor.getChildByPath(\"f\"), 0));\n                     map.spawnReactor(newReactor);\n                 }\n             }\n@@ -313,7 +347,7 @@ private synchronized MapleMap loadMapFromWz(int mapid, Integer omapid) {\n             map.setMapName(MapleDataTool.getString(\"mapName\", nameData.getChildByPath(getMapStringName(omapid)), \"\"));\n             map.setStreetName(MapleDataTool.getString(\"streetName\", nameData.getChildByPath(getMapStringName(omapid)), \"\"));\n         } catch (Exception e) {\n-            if(omapid / 1000 != 1020) {     // explorer job introducion scenes\n+            if (omapid / 1000 != 1020) {     // explorer job introducion scenes\n                 e.printStackTrace();\n                 System.err.println(\"Not found mapid \" + omapid);\n             }\n@@ -332,13 +366,13 @@ private synchronized MapleMap loadMapFromWz(int mapid, Integer omapid) {\n         map.setTimeLimit(MapleDataTool.getIntConvert(\"timeLimit\", infoData, -1));\n         map.setFieldType(MapleDataTool.getIntConvert(\"fieldType\", infoData, 0));\n         map.setMobCapacity(MapleDataTool.getIntConvert(\"fixedMobCapacity\", infoData, 500));//Is there a map that contains more than 500 mobs?\n-        \n+\n         MapleData recData = infoData.getChildByPath(\"recovery\");\n-        if(recData != null) {\n+        if (recData != null) {\n             float recoveryRate = MapleDataTool.getFloat(recData);\n             mapRecoveryRate.put(mapid, recoveryRate);\n         }\n-        \n+\n         HashMap<Integer, Integer> backTypes = new HashMap<>();\n         try {\n             for (MapleData layer : mapData.getChildByPath(\"back\")) { // yolo\n@@ -351,7 +385,7 @@ private synchronized MapleMap loadMapFromWz(int mapid, Integer omapid) {\n             e.printStackTrace();\n             // swallow cause I'm cool\n         }\n-        \n+\n         map.setBackgroundTypes(backTypes);\n         map.generateMapDropRangeCache();\n \n@@ -361,21 +395,21 @@ private synchronized MapleMap loadMapFromWz(int mapid, Integer omapid) {\n         } finally {\n             mapsWLock.unlock();\n         }\n-        \n+\n         return map;\n     }\n-    \n+\n     public MapleMap getMap(int mapid) {\n         Integer omapid = Integer.valueOf(mapid);\n         MapleMap map;\n-        \n+\n         mapsRLock.lock();\n         try {\n             map = maps.get(omapid);\n         } finally {\n             mapsRLock.unlock();\n         }\n-        \n+\n         return (map != null) ? map : loadMapFromWz(mapid, omapid);\n     }\n \n@@ -387,7 +421,7 @@ public boolean isMapLoaded(int mapId) {\n             mapsRLock.unlock();\n         }\n     }\n-    \n+\n     private AbstractLoadedMapleLife loadLife(int id, String type, int cy, int f, int fh, int rx0, int rx1, int x, int y, int hide) {\n         AbstractLoadedMapleLife myLife = MapleLifeFactory.getLife(id, type);\n         myLife.setCy(cy);\n@@ -402,10 +436,11 @@ private AbstractLoadedMapleLife loadLife(int id, String type, int cy, int f, int\n         return myLife;\n     }\n \n-    private MapleReactor loadReactor(MapleData reactor, String id) {\n+    private MapleReactor loadReactor(MapleData reactor, String id, final byte FacingDirection) {\n         MapleReactor myReactor = new MapleReactor(MapleReactorFactory.getReactor(Integer.parseInt(id)), Integer.parseInt(id));\n         int x = MapleDataTool.getInt(reactor.getChildByPath(\"x\"));\n         int y = MapleDataTool.getInt(reactor.getChildByPath(\"y\"));\n+        myReactor.setFacingDirection(FacingDirection);\n         myReactor.setPosition(new Point(x, y));\n         myReactor.setDelay(MapleDataTool.getInt(reactor.getChildByPath(\"reactorTime\")) * 1000);\n         myReactor.setName(MapleDataTool.getString(reactor.getChildByPath(\"name\"), \"\"));\n@@ -442,7 +477,7 @@ private String getMapStringName(int mapid) {\n         } else if (mapid >= 677000000 && mapid < 677100000) {\n             builder.append(\"Episode1GL\");\n         } else if (mapid >= 670000000 && mapid < 682000000) {\n-            if((mapid >= 674030000 && mapid < 674040000) || (mapid >= 680100000 && mapid < 680200000)) {\n+            if ((mapid >= 674030000 && mapid < 674040000) || (mapid >= 680100000 && mapid < 680200000)) {\n                 builder.append(\"etc\");\n             } else {\n                 builder.append(\"weddingGL\");\n@@ -452,7 +487,7 @@ private String getMapStringName(int mapid) {\n         } else if (mapid >= 683000000 && mapid < 684000000) {\n             builder.append(\"event\");\n         } else if (mapid >= 800000000 && mapid < 900000000) {\n-            if((mapid >= 889100000 && mapid < 889200000)) {\n+            if ((mapid >= 889100000 && mapid < 889200000)) {\n                 builder.append(\"etc\");\n             } else {\n                 builder.append(\"jp\");\n@@ -480,17 +515,17 @@ public void setWorld(int world) {\n             mapsRLock.unlock();\n         }\n     }\n-    \n+\n     public void dispose() {\n         Collection<MapleMap> mapValues = getMaps().values();\n-        \n-        for(MapleMap map: mapValues) {\n+\n+        for (MapleMap map : mapValues) {\n             map.dispose();\n         }\n-        \n+\n         this.event = null;\n     }\n-    \n+\n     public static float getMapRecoveryRate(int mapid) {\n         Float recRate = mapRecoveryRate.get(mapid);\n         return recRate != null ? recRate : 1.0f;"}, {"sha": "42179421d5a09f612efe8507ce33895352b68678", "filename": "src/server/maps/MapleReactor.java", "status": "modified", "additions": 84, "deletions": 53, "changes": 137, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/MapleReactor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/MapleReactor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleReactor.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,27 +1,28 @@\n /*\n-\tThis file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n-\t\t       Matthias Butz <matze@odinms.de>\n-\t\t       Jan Christian Meyer <vimes@odinms.de>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n+ This file is part of the OdinMS Maple Story Server\n+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+ Matthias Butz <matze@odinms.de>\n+ Jan Christian Meyer <vimes@odinms.de>\n+\n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+\n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n package server.maps;\n \n import client.MapleClient;\n+import client.status.MonsterStatus;\n import constants.ServerConstants;\n \n import java.awt.Rectangle;\n@@ -36,13 +37,15 @@\n import tools.MaplePacketCreator;\n import tools.Pair;\n import net.server.audit.locks.MonitoredLockType;\n+import server.partyquest.GuardianSpawnPoint;\n \n /**\n  *\n  * @author Lerk\n  * @author Ronan\n  */\n public class MapleReactor extends AbstractMapleMapObject {\n+\n     private int rid;\n     private MapleReactorStats stats;\n     private byte state;\n@@ -54,48 +57,50 @@\n     private boolean shouldCollect;\n     private boolean attackHit;\n     private ScheduledFuture<?> timeoutTask = null;\n+    private GuardianSpawnPoint guardian = null;\n+    private byte facingDirection = 0;\n     private Lock reactorLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.REACTOR, true);\n     private Lock hitLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.REACTOR_HIT, true);\n \n     public MapleReactor(MapleReactorStats stats, int rid) {\n-        this.evstate = (byte)0;\n+        this.evstate = (byte) 0;\n         this.stats = stats;\n         this.rid = rid;\n         this.alive = true;\n     }\n-    \n+\n     public void setShouldCollect(boolean collect) {\n         this.shouldCollect = collect;\n     }\n-    \n+\n     public boolean getShouldCollect() {\n         return shouldCollect;\n     }\n-    \n+\n     public void lockReactor() {\n         reactorLock.lock();\n     }\n-    \n+\n     public void unlockReactor() {\n         reactorLock.unlock();\n     }\n \n     public void setState(byte state) {\n         this.state = state;\n     }\n-    \n+\n     public byte getState() {\n         return state;\n     }\n-    \n+\n     public void setEventState(byte substate) {\n         this.evstate = substate;\n     }\n-    \n+\n     public byte getEventState() {\n         return evstate;\n     }\n-    \n+\n     public MapleReactorStats getStats() {\n         return stats;\n     }\n@@ -120,7 +125,7 @@ public MapleMapObjectType getType() {\n     public int getReactorType() {\n         return stats.getType(state);\n     }\n-    \n+\n     public boolean isRecentHitFromAttack() {\n         return attackHit;\n     }\n@@ -140,7 +145,7 @@ public MapleMap getMap() {\n     public boolean isAlive() {\n         return alive;\n     }\n-    \n+\n     public boolean isActive() {\n         return alive && stats.getType(state) != -1;\n     }\n@@ -172,10 +177,12 @@ public void resetReactorActions(int newState) {\n         cancelReactorTimeout();\n         setShouldCollect(true);\n         refreshReactorTimeout();\n-        \n-        if(map != null) map.searchItemReactors(this);\n+\n+        if (map != null) {\n+            map.searchItemReactors(this);\n+        }\n     }\n-    \n+\n     public void forceHitReactor(final byte newState) {\n         this.lockReactor();\n         try {\n@@ -185,30 +192,32 @@ public void forceHitReactor(final byte newState) {\n             this.unlockReactor();\n         }\n     }\n-    \n+\n     private void tryForceHitReactor(final byte newState) {  // weak hit state signal, if already changed reactor state before timeout then drop this\n-        if(!this.reactorLock.tryLock()) return;\n-        \n+        if (!this.reactorLock.tryLock()) {\n+            return;\n+        }\n+\n         try {\n             this.resetReactorActions(newState);\n             map.broadcastMessage(MaplePacketCreator.triggerReactor(this, (short) 0));\n         } finally {\n             this.reactorLock.unlock();\n         }\n     }\n-    \n+\n     public void cancelReactorTimeout() {\n         if (timeoutTask != null) {\n             timeoutTask.cancel(false);\n             timeoutTask = null;\n         }\n     }\n-    \n+\n     private void refreshReactorTimeout() {\n         int timeOut = stats.getTimeout(state);\n-        if(timeOut > -1) {\n+        if (timeOut > -1) {\n             final byte nextState = stats.getTimeoutState(state);\n-            \n+\n             timeoutTask = TimerManager.getInstance().schedule(new Runnable() {\n                 @Override\n                 public void run() {\n@@ -218,7 +227,7 @@ public void run() {\n             }, timeOut);\n         }\n     }\n-    \n+\n     public void delayedHitReactor(final MapleClient c, long delay) {\n         TimerManager.getInstance().schedule(new Runnable() {\n             @Override\n@@ -231,20 +240,22 @@ public void run() {\n     public void hitReactor(MapleClient c) {\n         hitReactor(false, 0, (short) 0, 0, c);\n     }\n-    \n+\n     public void hitReactor(boolean wHit, int charPos, short stance, int skillid, MapleClient c) {\n         try {\n-            if(!this.isActive()) {\n+            if (!this.isActive()) {\n                 return;\n             }\n-            \n-            if(hitLock.tryLock()) {\n+\n+            if (hitLock.tryLock()) {\n                 this.lockReactor();\n                 try {\n                     cancelReactorTimeout();\n                     attackHit = wHit;\n \n-                    if(ServerConstants.USE_DEBUG == true) c.getPlayer().dropMessage(5, \"Hitted REACTOR \" + this.getId() + \" with POS \" + charPos + \" , STANCE \" + stance + \" , SkillID \" + skillid + \" , STATE \" + stats.getType(state) + \" STATESIZE \" + stats.getStateSize(state));\n+                    if (ServerConstants.USE_DEBUG == true) {\n+                        c.getPlayer().dropMessage(5, \"Hitted REACTOR \" + this.getId() + \" with POS \" + charPos + \" , STANCE \" + stance + \" , SkillID \" + skillid + \" , STATE \" + stats.getType(state) + \" STATESIZE \" + stats.getStateSize(state));\n+                    }\n                     ReactorScriptManager.getInstance().onHit(c, this);\n \n                     int reactorType = stats.getType(state);\n@@ -253,7 +264,9 @@ public void hitReactor(boolean wHit, int charPos, short stance, int skillid, Map\n                             for (byte b = 0; b < stats.getStateSize(state); b++) {//YAY?\n                                 List<Integer> activeSkills = stats.getActiveSkills(state, b);\n                                 if (activeSkills != null) {\n-                                    if (!activeSkills.contains(skillid)) continue;\n+                                    if (!activeSkills.contains(skillid)) {\n+                                        continue;\n+                                    }\n                                 }\n                                 state = stats.getNextState(state, b);\n                                 if (stats.getNextState(state, b) == -1) {//end of reactor\n@@ -276,7 +289,7 @@ public void hitReactor(boolean wHit, int charPos, short stance, int skillid, Map\n \n                                     setShouldCollect(true);     // refresh collectability on item drop-based reactors\n                                     refreshReactorTimeout();\n-                                    if(stats.getType(state) == 100) {\n+                                    if (stats.getType(state) == 100) {\n                                         map.searchItemReactors(this);\n                                     }\n                                 }\n@@ -286,21 +299,23 @@ public void hitReactor(boolean wHit, int charPos, short stance, int skillid, Map\n                     } else {\n                         state++;\n                         map.broadcastMessage(MaplePacketCreator.triggerReactor(this, stance));\n-                        ReactorScriptManager.getInstance().act(c, this);\n+                        if (this.getId() != 9980000 && this.getId() != 9980001) {\n+                            ReactorScriptManager.getInstance().act(c, this);\n+                        }\n \n                         setShouldCollect(true);\n                         refreshReactorTimeout();\n-                        if(stats.getType(state) == 100) {\n+                        if (stats.getType(state) == 100) {\n                             map.searchItemReactors(this);\n                         }\n                     }\n                 } finally {\n                     this.unlockReactor();\n                 }\n-                \n+\n                 hitLock.unlock();\n             }\n-        } catch(Exception e) {\n+        } catch (Exception e) {\n             e.printStackTrace();\n         }\n     }\n@@ -316,4 +331,20 @@ public String getName() {\n     public void setName(String name) {\n         this.name = name;\n     }\n+\n+    public GuardianSpawnPoint getGuardian() {\n+        return guardian;\n+    }\n+\n+    public void setGuardian(GuardianSpawnPoint guardian) {\n+        this.guardian = guardian;\n+    }\n+\n+    public final void setFacingDirection(final byte facingDirection) {\n+        this.facingDirection = facingDirection;\n+    }\n+\n+    public final byte getFacingDirection() {\n+        return facingDirection;\n+    }\n }"}, {"sha": "f5a68fe7e9d6ff54afa07048604bb577add8d059", "filename": "src/server/maps/MapleReactorFactory.java", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/MapleReactorFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/MapleReactorFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleReactorFactory.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -38,6 +38,61 @@\n     private static MapleDataProvider data = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/Reactor.wz\"));\n     private static Map<Integer, MapleReactorStats> reactorStats = new HashMap<Integer, MapleReactorStats>();\n \n+    \n+    public static final MapleReactorStats getReactorS(int rid) {\n+        MapleReactorStats stats = reactorStats.get(Integer.valueOf(rid));\n+        if (stats == null) {\n+            int infoId = rid;\n+            MapleData reactorData = data.getData(StringUtil.getLeftPaddedStr(Integer.toString(infoId) + \".img\", '0', 11));\n+            MapleData link = reactorData.getChildByPath(\"info/link\");\n+            if (link != null) {\n+                infoId = MapleDataTool.getIntConvert(\"info/link\", reactorData);\n+                stats = reactorStats.get(Integer.valueOf(infoId));\n+            }\n+            if (stats == null) {\n+                stats = new MapleReactorStats();\n+                reactorData = data.getData(StringUtil.getLeftPaddedStr(Integer.toString(infoId) + \".img\", '0', 11));\n+                if (reactorData == null) {\n+                    return stats;\n+                }\n+                boolean canTouch = MapleDataTool.getInt(\"info/activateByTouch\", reactorData, 0) > 0;\n+                boolean areaSet = false;\n+                boolean foundState = false;\n+                for (byte i = 0; true; i++) {\n+                    MapleData reactorD = reactorData.getChildByPath(String.valueOf(i));\n+                    if (reactorD == null) {\n+                        break;\n+                    }\n+                    MapleData reactorInfoData_ = reactorD.getChildByPath(\"event\");\n+                    if (reactorInfoData_ != null && reactorInfoData_.getChildByPath(\"0\") != null) {\n+                        MapleData reactorInfoData = reactorInfoData_.getChildByPath(\"0\");\n+                        Pair<Integer, Integer> reactItem = null;\n+                        int type = MapleDataTool.getIntConvert(\"type\", reactorInfoData);\n+                        if (type == 100) { //reactor waits for item\n+                            reactItem = new Pair<Integer, Integer>(MapleDataTool.getIntConvert(\"0\", reactorInfoData), MapleDataTool.getIntConvert(\"1\", reactorInfoData, 1));\n+                            if (!areaSet) { //only set area of effect for item-triggered reactors once\n+                                stats.setTL(MapleDataTool.getPoint(\"lt\", reactorInfoData));\n+                                stats.setBR(MapleDataTool.getPoint(\"rb\", reactorInfoData));\n+                                areaSet = true;\n+                            }\n+                        }\n+                        foundState = true;\n+                        stats.addState(i, type, reactItem, (byte) MapleDataTool.getIntConvert(\"state\", reactorInfoData), MapleDataTool.getIntConvert(\"timeOut\", reactorInfoData_, -1), (byte) (canTouch ? 2 : (MapleDataTool.getIntConvert(\"2\", reactorInfoData, 0) > 0 || reactorInfoData.getChildByPath(\"clickArea\") != null || type == 9 ? 1 : 0)));\n+                    } else {\n+                        stats.addState(i, 999, null, (byte) (foundState ? -1 : (i + 1)), 0, (byte) 0);\n+                    }\n+                }\n+                reactorStats.put(Integer.valueOf(infoId), stats);\n+                if (rid != infoId) {\n+                    reactorStats.put(Integer.valueOf(rid), stats);\n+                }\n+            } else { // stats exist at infoId but not rid; add to map\n+                reactorStats.put(Integer.valueOf(rid), stats);\n+            }\n+        }\n+        return stats;\n+    }\n+    \n     public static MapleReactorStats getReactor(int rid) {\n         MapleReactorStats stats = reactorStats.get(Integer.valueOf(rid));\n         if (stats == null) {"}, {"sha": "21f9d5f4c2e12baf831cc26631dfcb874b6cecc9", "filename": "src/server/maps/MapleReactorStats.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/MapleReactorStats.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/MapleReactorStats.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleReactorStats.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -22,6 +22,7 @@\n package server.maps;\n \n import java.awt.Point;\n+import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -58,6 +59,12 @@ public void addState(byte state, List<StateData> data, int timeOut) {\n         if(timeOut > -1) timeoutInfo.put(state, timeOut);\n     }\n     \n+    public void addState(byte state, int type, Pair<Integer, Integer> reactItem, byte nextState, int timeOut, byte canTouch) {\n+        List<StateData> data = new ArrayList<>();\n+        data.add(new StateData(type, reactItem, null, nextState));\n+        stateInfo.put(state, data);\n+    }\n+    \n     public int getTimeout(byte state) {\n         Integer i = timeoutInfo.get(state);\n         return (i == null) ? -1 : i;"}, {"sha": "b0e8cd8893168bb470a6d6ac552ee6731244ffa1", "filename": "src/server/maps/SavedLocationType.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/SavedLocationType.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/maps/SavedLocationType.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/SavedLocationType.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -31,6 +31,7 @@\n     EVENT,\n     BOSSPQ,\n     HAPPYVILLE,\n+    MONSTER_CARNIVAL,\n     DEVELOPER;\n \n     public static SavedLocationType fromString(String Str) {"}, {"sha": "9f918f22d4a422a26e3dbde83fde4c1657c456bb", "filename": "src/server/partyquest/GuardianSpawnPoint.java", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/partyquest/GuardianSpawnPoint.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/partyquest/GuardianSpawnPoint.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/partyquest/GuardianSpawnPoint.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,43 @@\n+package server.partyquest;\n+\n+import java.awt.Point;\n+\n+/**\n+ *\n+ * @author David\n+ */\n+public class GuardianSpawnPoint {\n+\n+    private Point position;\n+    private boolean taken;\n+    private int team = -1;\n+\n+    public GuardianSpawnPoint(Point a) {\n+        this.position = a;\n+        this.taken = true;\n+    }\n+\n+    public Point getPosition() {\n+        return position;\n+    }\n+\n+    public void setPosition(Point position) {\n+        this.position = position;\n+    }\n+\n+    public boolean isTaken() {\n+        return taken;\n+    }\n+\n+    public void setTaken(boolean taken) {\n+        this.taken = taken;\n+    }\n+\n+    public int getTeam() {\n+        return team;\n+    }\n+\n+    public void setTeam(int team) {\n+        this.team = team;\n+    }\n+}"}, {"sha": "a38d2e66809d7662d8d075786721d797e409bf59", "filename": "src/server/partyquest/MapleCarnivalFactory.java", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/partyquest/MapleCarnivalFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/partyquest/MapleCarnivalFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/partyquest/MapleCarnivalFactory.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -0,0 +1,76 @@\n+package server.partyquest;\n+\n+import client.MapleDisease;\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+import server.life.MobSkillFactory;\n+import provider.MapleDataProvider;\n+import provider.MapleDataProviderFactory;\n+import provider.MapleData;\n+import provider.MapleDataTool;\n+import server.life.MobSkill;\n+\n+/**\n+    *@author Drago/Dragohe4rt\n+*/\n+public class MapleCarnivalFactory {\n+\n+    private final static MapleCarnivalFactory instance = new MapleCarnivalFactory();\n+    private final Map<Integer, MCSkill> skills = new HashMap<Integer, MCSkill>();\n+    private final Map<Integer, MCSkill> guardians = new HashMap<Integer, MCSkill>();\n+    private final MapleDataProvider dataRoot = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/Skill.wz\"));\n+\n+    public MapleCarnivalFactory() {\n+        //whoosh\n+\tinitialize();\n+    }\n+\n+    public static final MapleCarnivalFactory getInstance() {\n+        return instance;\n+    }\n+\n+    private void initialize() {\n+        if (skills.size() != 0) {\n+            return;\n+        }\n+        for (MapleData z : dataRoot.getData(\"MCSkill.img\")) {\n+            skills.put(Integer.parseInt(z.getName()), new MCSkill(MapleDataTool.getInt(\"spendCP\", z, 0), MapleDataTool.getInt(\"mobSkillID\", z, 0), MapleDataTool.getInt(\"level\", z, 0), MapleDataTool.getInt(\"target\", z, 1) > 1));\n+        }\n+        for (MapleData z : dataRoot.getData(\"MCGuardian.img\")) {\n+            guardians.put(Integer.parseInt(z.getName()), new MCSkill(MapleDataTool.getInt(\"spendCP\", z, 0), MapleDataTool.getInt(\"mobSkillID\", z, 0), MapleDataTool.getInt(\"level\", z, 0), true));\n+        }\n+    }\n+\n+    public MCSkill getSkill(final int id) {\n+        return skills.get(id);\n+    }\n+\n+    public MCSkill getGuardian(final int id) {\n+        return guardians.get(id);\n+    }\n+\n+    public static class MCSkill {\n+\n+        public int cpLoss, skillid, level;\n+        public boolean targetsAll;\n+\n+        public MCSkill(int _cpLoss, int _skillid, int _level, boolean _targetsAll) {\n+            cpLoss = _cpLoss;\n+            skillid = _skillid;\n+            level = _level;\n+            targetsAll = _targetsAll;\n+        }\n+\n+        public MobSkill getSkill() {\n+            return MobSkillFactory.getMobSkill(skillid, 1); //level?\n+        }\n+\n+        public MapleDisease getDisease() {\n+            if (skillid <= 0) {\n+                return MapleDisease.getRandom();\n+            }\n+            return MapleDisease.getBySkill(skillid);\n+        }\n+    }\n+}"}, {"sha": "490322a2373594d204f9e7d28d358486d6c01c29", "filename": "src/server/partyquest/MonsterCarnival.java", "status": "modified", "additions": 453, "deletions": 138, "changes": 591, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/partyquest/MonsterCarnival.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/server/partyquest/MonsterCarnival.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/partyquest/MonsterCarnival.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -1,174 +1,489 @@\n-/*\n-\tThis file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n-\t\t       Matthias Butz <matze@odinms.de>\n-\t\t       Jan Christian Meyer <vimes@odinms.de>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n-\n package server.partyquest;\n \n-import client.MapleCharacter;\n-import java.sql.Connection;\n-import java.sql.PreparedStatement;\n-import java.sql.SQLException;\n import java.util.concurrent.ScheduledFuture;\n+import client.MapleCharacter;\n+import constants.LinguaConstants;\n+import net.server.Server;\n+import net.server.channel.Channel;\n+import net.server.world.MapleParty;\n+import net.server.world.MaplePartyCharacter;\n import server.TimerManager;\n import server.maps.MapleMap;\n-import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n \n /**\n- *\n- * @author kevintjuh93 - LOST MOTIVATION >=(\n+ * @author Drago/Dragohe4rt\n  */\n+\n public class MonsterCarnival {\n-    private MonsterCarnivalParty red, blue;\n+\n+    public static int D = 3;\n+    public static int C = 2;\n+    public static int B = 1;\n+    public static int A = 0;\n+\n+    private MapleParty p1, p2;\n     private MapleMap map;\n-    private int room;\n-    private long time = 0;\n-    private long timeStarted = 0;\n-    private ScheduledFuture<?> schedule = null;\n-\n-        public MonsterCarnival(int room, byte channel, MonsterCarnivalParty red1, MonsterCarnivalParty blue1) {\n-            //this.map = Channel.getInstance(channel).getMapFactory().getMap(980000001 + (room * 100));\n-            this.room = room;\n-            this.red = red1;\n-            this.blue = blue1;\n-            this.timeStarted = System.currentTimeMillis();\n-            this.time = 600000;\n-            map.broadcastMessage(MaplePacketCreator.getClock((int) (time / 1000)));\n-\n-            for (MapleCharacter chr : red.getMembers())\n-                chr.setCarnival(this);\n-            for (MapleCharacter chr : blue.getMembers())\n-                chr.setCarnival(this);\n-            \n-            this.schedule = TimerManager.getInstance().schedule(new Runnable() {\n+    private ScheduledFuture<?> timer, effectTimer;\n+    private long startTime = 0;\n+    private int summons = 8, summonss = 8;\n+    private MapleCharacter leader1, leader2, Grupo1, Grupo2;\n+    private int redCP, blueCP, redTotalCP, blueTotalCP;\n+    private boolean cpq1;\n+\n+    public MonsterCarnival(MapleParty p1, MapleParty p2, int mapid, boolean cpq1) {\n+        try {\n+            this.cpq1 = cpq1;\n+            this.p1 = p1;\n+            this.p2 = p2;\n+            Channel cs = Server.getInstance().getWorld(p2.getLeader().getWorld()).getChannel(p2.getLeader().getChannel());\n+            p1.setEnemy(p2);\n+            p2.setEnemy(p1);\n+            map = cs.getMapFactory().resetMap(mapid);\n+            int redPortal = 0;\n+            int bluePortal = 0;\n+            if (map.isPurpleCPQMap()) {\n+                redPortal = 2;\n+                bluePortal = 1;\n+            }\n+            for (MaplePartyCharacter mpc : p1.getMembers()) {\n+                MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                if (mc != null) {\n+                    mc.setMonsterCarnival(this);\n+                    mc.setTeam(0);\n+                    mc.setFestivalPoints(0);\n+                    mc.changeMap(map, map.getPortal(redPortal));\n+                    mc.dropMessage(6, LinguaConstants.Linguas(mc).CPQEntrada);\n+                    if (p1.getLeader().getId() == mc.getId()) {\n+                        leader1 = mc;\n+                    }\n+                    Grupo1 = mc;\n+                }\n+            }\n+            for (MaplePartyCharacter mpc : p2.getMembers()) {\n+                MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                if (mc != null) {\n+                    mc.setMonsterCarnival(this);\n+                    mc.setTeam(1);\n+                    mc.setFestivalPoints(0);\n+                    mc.changeMap(map, map.getPortal(bluePortal));\n+                    mc.dropMessage(6, LinguaConstants.Linguas(mc).CPQEntrada);\n+                    if (p2.getLeader().getId() == mc.getId()) {\n+                        leader2 = mc;\n+                    }\n+                    Grupo2 = mc;\n+                }\n+            }\n+            if (Grupo1 == null || Grupo2 == null) {\n+                for (MaplePartyCharacter mpc : p2.getMembers()) {\n+                    mpc.getPlayer().dropMessage(5, LinguaConstants.Linguas(mpc.getPlayer()).CPQErro);\n+                }\n+                for (MaplePartyCharacter mpc : p2.getMembers()) {\n+                    mpc.getPlayer().dropMessage(5, LinguaConstants.Linguas(mpc.getPlayer()).CPQErro);\n+                }\n+                return;\n+            }\n+            Grupo1.getClient().announce(MaplePacketCreator.startMonsterCarnival(Grupo1, 0, 1));\n+            Grupo2.getClient().announce(MaplePacketCreator.startMonsterCarnival(Grupo2, 1, 0));\n+            startTime = System.currentTimeMillis() + 60 * 10000;\n+            timer = TimerManager.getInstance().schedule(new Runnable() {\n                 @Override\n                 public void run() {\n-                    if (red.getTotalCP() > blue.getTotalCP()) {\n-                        red.setWinner(true);\n-                        blue.setWinner(false);\n-                        red.displayMatchResult();\n-                        blue.displayMatchResult();\n-                    } else if (blue.getTotalCP() > red.getTotalCP()) {\n-                        red.setWinner(false);\n-                        blue.setWinner(true);\n-                        red.displayMatchResult();\n-                        blue.displayMatchResult();\n-                    } else {\n-                        red.setWinner(false);\n-                        blue.setWinner(false);\n-                        red.displayMatchResult();\n-                        blue.displayMatchResult();\n-                    }\n-                    saveResults();\n-                    warpOut();\n+                    timeUp();\n+                }\n+            }, 10 * 60 * 1000);\n+            effectTimer = TimerManager.getInstance().schedule(new Runnable() {\n+                @Override\n+                public void run() {\n+                    complete();\n+                }\n+            }, 10 * 60 * 1000 - 10 * 1000);\n+            TimerManager.getInstance().schedule(new Runnable() {\n+                @Override\n+                public void run() {\n+                    map.addClock(60 * 10);\n                 }\n+            }, 2000);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public void playerDisconnected(int charid) {\n+        int team = -1;\n+        for (MaplePartyCharacter mpc : leader1.getParty().getMembers()) {\n+            if (mpc.getId() == charid) {\n+                team = 0;\n+            }\n+        }\n+        for (MaplePartyCharacter mpc : leader2.getParty().getMembers()) {\n+            if (mpc.getId() == charid) {\n+                team = 1;\n+            }\n+        }\n+        for (MapleCharacter chrMap : map.getAllPlayers()) {\n+            if (team == -1) {\n+                team = 1;\n+            }\n+            String teamS = \"\";\n+            switch (team) {\n+                case 0:\n+                    teamS = LinguaConstants.Linguas(chrMap).CPQVermelho;\n+                    break;\n+                case 1:\n+                    teamS = LinguaConstants.Linguas(chrMap).CPQAzul;\n+                    break;\n+            }\n+            chrMap.dropMessage(5, teamS + LinguaConstants.Linguas(chrMap).CPQPlayerExit);\n+        }\n+        earlyFinish();\n+    }\n+\n+    public void earlyFinish() {\n+        dispose(true);\n+    }\n+\n+    public void leftParty(int charid) {\n+        playerDisconnected(charid);\n+    }\n+\n+    protected void dispose() {\n+        dispose(false);\n+    }\n+\n+    public void summon() {\n+        this.summons--;\n+    }\n+\n+    public boolean canSummon() {\n+        return this.summons > 0;\n+    }\n+\n+    public void summons() {\n+        this.summonss--;\n+    }\n+\n+    public boolean canSummons() {\n+        return this.summonss > 0;\n+    }\n+\n+    protected void dispose(boolean warpout) {\n+        Channel cs = Server.getInstance().getWorld(p1.getLeader().getWorld()).getChannel(p1.getLeader().getChannel());\n+        MapleMap out;\n+        if (!cpq1) { // cpq2\n+            out = cs.getMapFactory().getMap(980030000);\n+        } else {\n+            out = cs.getMapFactory().getMap(980000000);\n+        }\n+        for (MaplePartyCharacter mpc : leader1.getParty().getMembers()) {\n+            MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+            if (mc != null) {\n+                mc.resetCP();\n+                mc.setTeam(-1);\n+                mc.setMonsterCarnival(null);\n+                if (warpout) {\n+                    mc.changeMap(out, out.getPortal(0));\n+                }\n+            }\n+        }\n+        for (MaplePartyCharacter mpc : leader2.getParty().getMembers()) {\n+            MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+            if (mc != null) {\n+                mc.resetCP();\n+                mc.setTeam(-1);\n+                mc.setMonsterCarnival(null);\n+                if (warpout) {\n+                    mc.changeMap(out, out.getPortal(0));\n+                }\n+            }\n+        }\n+        if (this.timer != null) {\n+            this.timer.cancel(true);\n+            this.timer = null;\n+        }\n+        if (this.effectTimer != null) {\n+            this.effectTimer.cancel(true);\n+            this.effectTimer = null;\n+        }\n+        redTotalCP = 0;\n+        blueTotalCP = 0;\n+        leader1.getParty().setEnemy(null);\n+        leader2.getParty().setEnemy(null);\n \n-            }, time);\n-           /* if (room == 0) {\n-                MapleData data = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/Map.wz\")).getData(\"Map/Map9\" + (980000001 + (room * 100)) + \".img\").getChildByPath(\"monsterCarnival\");\n-                if (data != null) {\n-                    for (MapleData p : data.getChildByPath(\"mobGenPos\").getChildren()) {\n-                        MapleData team = p.getChildByPath(\"team\");\n-                       if (team != null) {\n-                           if (team.getData().equals(0))\n-                               redmonsterpoints.add(new Point(MapleDataTool.getInt(p.getChildByPath(\"x\")), MapleDataTool.getInt(p.getChildByPath(\"y\"))));\n-                           else\n-                                bluemonsterpoints.add(new Point(MapleDataTool.getInt(p.getChildByPath(\"x\")), MapleDataTool.getInt(p.getChildByPath(\"y\"))));\n-                        } else\n-                        monsterpoints.add(new Point(MapleDataTool.getInt(p.getChildByPath(\"x\")), MapleDataTool.getInt(p.getChildByPath(\"y\"))));\n+    }\n+\n+    public void exit() {\n+        dispose();\n+    }\n+\n+    public ScheduledFuture<?> getTimer() {\n+        return this.timer;\n+    }\n+\n+    public void finish(int winningTeam) {\n+        try {\n+            Channel cs = Server.getInstance().getWorld(p1.getLeader().getWorld()).getChannel(p1.getLeader().getChannel());\n+            if (winningTeam == 0) {\n+                for (MaplePartyCharacter mpc : leader1.getParty().getMembers()) {\n+                    MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                    if (mc != null) {\n+                        mc.gainFestivalPoints(this.redTotalCP);\n+                        mc.setMonsterCarnival(null);\n+                        if (cpq1) {\n+                            mc.changeMap(cs.getMapFactory().getMap(map.getId() + 2), cs.getMapFactory().getMap(map.getId() + 2).getPortal(0));\n+                        } else {\n+                            mc.changeMap(cs.getMapFactory().getMap(map.getId() + 200), cs.getMapFactory().getMap(map.getId() + 200).getPortal(0));\n+                        }\n+                        mc.setTeam(-1);\n+                        mc.dispelDebuffs();\n+                    }\n+                }\n+                for (MaplePartyCharacter mpc : leader2.getParty().getMembers()) {\n+                    MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                    if (mc != null) {\n+                        mc.gainFestivalPoints(this.blueTotalCP);\n+                        mc.setMonsterCarnival(null);\n+                        if (cpq1) {\n+                            mc.changeMap(cs.getMapFactory().getMap(map.getId() + 3), cs.getMapFactory().getMap(map.getId() + 3).getPortal(0));\n+                        } else {\n+                            mc.changeMap(cs.getMapFactory().getMap(map.getId() + 300), cs.getMapFactory().getMap(map.getId() + 300).getPortal(0));\n+                        }\n+                        mc.setTeam(-1);\n+                        mc.dispelDebuffs();\n                     }\n-                    for (MapleData p : data.getChildByPath(\"guardianGenPos\").getChildren()) {\n-                        MapleData team = p.getChildByPath(\"team\");\n-                       if (team != null) {\n-                           if (team.getData().equals(0))\n-                               redreactorpoints.add(new Point(MapleDataTool.getInt(p.getChildByPath(\"x\")), MapleDataTool.getInt(p.getChildByPath(\"y\"))));\n-                           else\n-                                bluereactorpoints.add(new Point(MapleDataTool.getInt(p.getChildByPath(\"x\")), MapleDataTool.getInt(p.getChildByPath(\"y\"))));\n-                        } else\n-                        reactorpoints.add(new Point(MapleDataTool.getInt(p.getChildByPath(\"x\")), MapleDataTool.getInt(p.getChildByPath(\"y\"))));\n+                }\n+            } else if (winningTeam == 1) {\n+                for (MaplePartyCharacter mpc : leader2.getParty().getMembers()) {\n+                    MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                    if (mc != null) {\n+                        mc.gainFestivalPoints(this.blueTotalCP);\n+                        mc.setMonsterCarnival(null);\n+                        if (cpq1) {\n+                            mc.changeMap(cs.getMapFactory().getMap(map.getId() + 2), cs.getMapFactory().getMap(map.getId() + 2).getPortal(0));\n+                        } else {\n+                            mc.changeMap(cs.getMapFactory().getMap(map.getId() + 200), cs.getMapFactory().getMap(map.getId() + 200).getPortal(0));\n+                        }\n+                        mc.setTeam(-1);\n+                        mc.dispelDebuffs();\n+                    }\n+                }\n+                for (MaplePartyCharacter mpc : leader1.getParty().getMembers()) {\n+                    MapleCharacter mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+                    if (mc != null) {\n+                        mc.gainFestivalPoints(this.redTotalCP);\n+                        mc.setMonsterCarnival(null);\n+                        if (cpq1) {\n+                            mc.changeMap(cs.getMapFactory().getMap(map.getId() + 3), cs.getMapFactory().getMap(map.getId() + 3).getPortal(0));\n+                        } else {\n+                            mc.changeMap(cs.getMapFactory().getMap(map.getId() + 300), cs.getMapFactory().getMap(map.getId() + 300).getPortal(0));\n+                        }\n+                        mc.setTeam(-1);\n+                        mc.dispelDebuffs();\n                     }\n                 }\n-            } */\n+            }\n+            dispose();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n         }\n+    }\n \n-        public long getTimeLeft() {\n-            return time - (System.currentTimeMillis() - timeStarted);\n+    public void timeUp() {\n+        int cp1 = this.redTotalCP;\n+        int cp2 = this.blueTotalCP;\n+        if (cp1 == cp2) {\n+            extendTime();\n+            return;\n         }\n+        if (cp1 > cp2) {\n+            finish(0);\n+        } else {\n+            finish(1);\n+        }\n+    }\n+\n+    public long getTimeLeft() {\n+        return (startTime - System.currentTimeMillis());\n+    }\n \n-        public MonsterCarnivalParty getPartyRed() {\n-            return red;\n+    public int getTimeLeftSeconds() {\n+        return (int) (getTimeLeft() / 1000);\n+    }\n+\n+    public void extendTime() {\n+        for (MapleCharacter chrMap : map.getAllPlayers()) {\n+            chrMap.dropMessage(5, LinguaConstants.Linguas(chrMap).CPQTempoExtendido);\n         }\n+        startTime = System.currentTimeMillis() + 3 * 1000;\n+        map.addClock(3 * 60);\n+        timer = TimerManager.getInstance().schedule(new Runnable() {\n+            @Override\n+            public void run() {\n+                timeUp();\n+            }\n+        }, 3 * 60 * 1000);\n+        effectTimer = TimerManager.getInstance().schedule(new Runnable() {\n+            @Override\n+            public void run() {\n+                complete();\n+            }\n+        }, 3 * 60 * 1000 - 10);\n+    }\n \n-        public MonsterCarnivalParty getPartyBlue() {\n-            return blue;\n+    public void complete() {\n+        int cp1 = this.redTotalCP;\n+        int cp2 = this.blueTotalCP;\n+        if (cp1 == cp2) {\n+            return;\n+        }\n+        boolean redWin = cp1 > cp2;\n+        int chnl = leader1.getClient().getChannel();\n+        int chnl1 = leader2.getClient().getChannel();\n+        if (chnl != chnl1) {\n+            throw new RuntimeException(\"Os l\ufffdderes est\ufffdo em canais diferentes.\");\n         }\n \n-        public MonsterCarnivalParty oppositeTeam(MonsterCarnivalParty team) {\n-            if (team == red)\n-                return blue;\n-            else\n-                return red;\n+        Channel cs = Server.getInstance().getWorld(p1.getLeader().getWorld()).getChannel(p1.getLeader().getChannel());\n+        map.killAllMonsters();\n+        for (MaplePartyCharacter mpc : leader1.getParty().getMembers()) {\n+            MapleCharacter mc;\n+            mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+            if (mc != null) {\n+                if (redWin) {\n+                    mc.getClient().announce(MaplePacketCreator.showEffect(\"quest/carnival/win\"));\n+                    mc.getClient().announce(MaplePacketCreator.playSound(\"MobCarnival/Win\"));\n+                    mc.dispelDebuffs();\n+                } else {\n+                    mc.getClient().announce(MaplePacketCreator.showEffect(\"quest/carnival/lose\"));\n+                    mc.getClient().announce(MaplePacketCreator.playSound(\"MobCarnival/Lose\"));\n+                    mc.dispelDebuffs();\n+                }\n+            }\n+        }\n+        for (MaplePartyCharacter mpc : leader2.getParty().getMembers()) {\n+            MapleCharacter mc;\n+            mc = cs.getPlayerStorage().getCharacterByName(mpc.getName());\n+            if (mc != null) {\n+                if (!redWin) {\n+                    mc.getClient().announce(MaplePacketCreator.showEffect(\"quest/carnival/win\"));\n+                    mc.getClient().announce(MaplePacketCreator.playSound(\"MobCarnival/Win\"));\n+                    mc.dispelDebuffs();\n+                } else {\n+                    mc.getClient().announce(MaplePacketCreator.showEffect(\"quest/carnival/lose\"));\n+                    mc.getClient().announce(MaplePacketCreator.playSound(\"MobCarnival/Lose\"));\n+                    mc.dispelDebuffs();\n+                }\n+            }\n         }\n+    }\n+\n+    public MapleParty getRed() {\n+        return p1;\n+    }\n+\n+    public void setRed(MapleParty p1) {\n+        this.p1 = p1;\n+    }\n+\n+    public MapleParty getBlue() {\n+        return p2;\n+    }\n+\n+    public void setBlue(MapleParty p2) {\n+        this.p2 = p2;\n+    }\n+\n+    public MapleCharacter getLeader1() {\n+        return leader1;\n+    }\n \n-        public void playerLeft(MapleCharacter chr) {\n-            map.broadcastMessage(chr, MaplePacketCreator.leaveCPQ(chr));\n+    public void setLeader1(MapleCharacter leader1) {\n+        this.leader1 = leader1;\n+    }\n+\n+    public MapleCharacter getLeader2() {\n+        return leader2;\n+    }\n+\n+    public void setLeader2(MapleCharacter leader2) {\n+        this.leader2 = leader2;\n+    }\n+\n+    public MapleCharacter getEnemyLeader(int team) {\n+        switch (team) {\n+            case 0:\n+                return leader2;\n+            case 1:\n+                return leader1;\n         }\n+        return null;\n+    }\n \n-        private void warpOut() {\n-            this.schedule = TimerManager.getInstance().schedule(new Runnable() {\n-                @Override\n-                public void run() {\n-                    red.warpOut();\n-                    blue.warpOut();\n-                }\n-            }, 12000);\n+    public int getBlueCP() {\n+        return blueCP;\n+    }\n+\n+    public void setBlueCP(int blueCP) {\n+        this.blueCP = blueCP;\n+    }\n+\n+    public int getBlueTotalCP() {\n+        return blueTotalCP;\n+    }\n+\n+    public void setBlueTotalCP(int blueTotalCP) {\n+        this.blueTotalCP = blueTotalCP;\n+    }\n+\n+    public int getRedCP() {\n+        return redCP;\n+    }\n+\n+    public void setRedCP(int redCP) {\n+        this.redCP = redCP;\n+    }\n+\n+    public int getRedTotalCP() {\n+        return redTotalCP;\n+    }\n+\n+    public void setRedTotalCP(int redTotalCP) {\n+        this.redTotalCP = redTotalCP;\n+    }\n+\n+    public int getTotalCP(int team) {\n+        if (team == 0) {\n+            return redTotalCP;\n+        } else if (team == 1) {\n+            return blueTotalCP;\n+        } else {\n+            throw new RuntimeException(\"Equipe desconhecida\");\n         }\n+    }\n \n-        public int getRoom() {\n-            return room;\n+    public void setTotalCP(int totalCP, int team) {\n+        if (team == 0) {\n+            this.redTotalCP = totalCP;\n+        } else if (team == 1) {\n+            this.blueTotalCP = totalCP;\n         }\n+    }\n \n-        public void saveResults() {\n-                Connection con = null;\n-                try {\n-                    con = DatabaseConnection.getConnection();\n-                    PreparedStatement ps = con.prepareStatement(\"INSERT INTO carnivalresults VALUES (?,?,?,?)\");\n-                    for (MapleCharacter chr : red.getMembers()) {\n-                        ps.setInt(1, chr.getId());\n-                        ps.setInt(2, chr.getCP());\n-                        ps.setInt(3, red.getTotalCP());\n-                        ps.setInt(4, red.isWinner() ? 1 : 0);\n-                        ps.execute();\n-                    }\n-                    for (MapleCharacter chr : blue.getMembers()) {\n-                        ps.setInt(1, chr.getId());\n-                        ps.setInt(2, chr.getCP());\n-                        ps.setInt(3, blue.getTotalCP());\n-                        ps.setInt(4, blue.isWinner() ? 1 : 0);\n-                        ps.execute();\n-                    }\n-                    ps.close();\n-                    con.close();\n-                } catch (SQLException ex) {\n-                    ex.printStackTrace();\n-                }\n+    public int getCP(int team) {\n+        if (team == 0) {\n+            return redCP;\n+        } else if (team == 1) {\n+            return blueCP;\n+        } else {\n+            throw new RuntimeException(\"Equipe desconhecida\" + team);\n+        }\n+    }\n+\n+    public void setCP(int CP, int team) {\n+        if (team == 0) {\n+            this.redCP = CP;\n+        } else if (team == 1) {\n+            this.blueCP = CP;\n         }\n+    }\n }"}, {"sha": "bd50472cef677e1aac089bb2a646438a2724b760", "filename": "src/tools/MaplePacketCreator.java", "status": "modified", "additions": 97, "deletions": 101, "changes": 198, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/tools/MaplePacketCreator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/tools/MaplePacketCreator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MaplePacketCreator.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -75,7 +75,6 @@\n import server.maps.MapleSummon;\n import server.life.MaplePlayerNPC;\n import server.movement.LifeMovementFragment;\n-import server.partyquest.MonsterCarnivalParty;\n import tools.data.output.LittleEndianWriter;\n import tools.data.output.MaplePacketLittleEndianWriter;\n import client.BuddylistEntry;\n@@ -407,6 +406,7 @@ protected static void addItemInfo(final MaplePacketLittleEndianWriter mplew, Ite\n                         mplew.write(pet.getFullness());\n                         addExpirationTime(mplew, item.getExpiration());\n                         mplew.writeInt(pet.getPetFlag());  /* pet flags found by -- Irenex & Spoon */\n+                        \n                         mplew.write(new byte[]{(byte) 0x50, (byte) 0x46}); //wonder what this is\n                         mplew.writeInt(0);\n                         return;\n@@ -1503,23 +1503,12 @@ private static void encodeParentlessMobSpawnEffect(MaplePacketLittleEndianWriter\n                 \n                 \n                 /**\n-        \t\t * -4: Fake\n-        \t\t * -3: Appear after linked mob is dead\n-        \t\t * -2: Fade in\n-        \t\t * 1: Smoke\n-        \t\t * 3: King Slime spawn\n-        \t\t * 4: Summoning rock thing, used for 3rd job?\n-        \t\t * 6: Magical shit\n-        \t\t * 7: Smoke shit\n-        \t\t * 8: 'The Boss'\n-        \t\t * 9/10: Grim phantom shit?\n-        \t\t * 11/12: Nothing?\n-        \t\t * 13: Frankenstein\n-        \t\t * 14: Angry ^\n-        \t\t * 15: Orb animation thing, ??\n-        \t\t * 16: ??\n-        \t\t * 19: Mushroom castle boss thing\n-        \t\t */\n+                 * -4: Fake -3: Appear after linked mob is dead -2: Fade in 1: Smoke 3:\n+                 * King Slime spawn 4: Summoning rock thing, used for 3rd job? 6:\n+                 * Magical shit 7: Smoke shit 8: 'The Boss' 9/10: Grim phantom shit?\n+                 * 11/12: Nothing? 13: Frankenstein 14: Angry ^ 15: Orb animation thing,\n+                 * ?? 16: ?? 19: Mushroom castle boss thing\n+                 */\n                 \n                 if (life.getParentMobOid() != 0) {\n                         MapleMonster parentMob = life.getMap().getMonsterByOid(life.getParentMobOid());\n@@ -2988,7 +2977,9 @@ private static void writeLongMaskD(final MaplePacketLittleEndianWriter mplew, Li\n                 mplew.writeInt(cid);\n                 writeLongMaskD(mplew, statups);\n                 for (Pair<MapleDisease, Integer> statup : statups) {\n-                        if(statup.getLeft() == MapleDisease.POISON) mplew.writeShort(statup.getRight().shortValue());\n+                        if (statup.getLeft() == MapleDisease.POISON) {\n+                                mplew.writeShort(statup.getRight().shortValue());\n+                        }\n                         mplew.writeShort(skill.getSkillId());\n                         mplew.writeShort(skill.getSkillLevel());\n                 }\n@@ -3084,7 +3075,9 @@ private static void writeLongMaskSlowD(final MaplePacketLittleEndianWriter mplew\n                 mplew.writeInt(cid);\n                 writeLongMaskSlowD(mplew);\n                 for (Pair<MapleDisease, Integer> statup : statups) {\n-                        if(statup.getLeft() == MapleDisease.POISON) mplew.writeShort(statup.getRight().shortValue());\n+                        if (statup.getLeft() == MapleDisease.POISON) {\n+                                mplew.writeShort(statup.getRight().shortValue());\n+                        }\n                         mplew.writeShort(skill.getSkillId());\n                         mplew.writeShort(skill.getSkillLevel());\n                 }\n@@ -3121,7 +3114,7 @@ private static void writeLongMaskChair(final MaplePacketLittleEndianWriter mplew\n                 mplew.writeShort(0);\n                 mplew.writeShort(900);\n                 \n-                for(int i = 0; i < 7; i++) mplew.write(0);\n+                mplew.skip(7);\n                 \n                 return mplew.getPacket();\n         }\n@@ -3634,7 +3627,7 @@ private static void writeLongMaskChair(final MaplePacketLittleEndianWriter mplew\n                 mplew.write(0xF);\n                 mplew.write(slots);\n                 mplew.write(124);\n-                for(byte i = 0; i < 10; i++) mplew.write(0);\n+                mplew.skip(10);\n                 mplew.write(items.size());\n                 for (Item item : items) {\n                         addItemInfo(mplew, item, true);\n@@ -3973,7 +3966,31 @@ private static void writeIntMask(final MaplePacketLittleEndianWriter mplew, Map<\n                 mplew.writeInt(firstmask);\n                 mplew.writeInt(secondmask);\n         }\n-\n+        \n+        public static byte[] applyMonsterStatus(int oid, Map<MonsterStatus, Integer> stats, int skill, boolean monsterSkill, int delay, MobSkill mobskill) {\n+                MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.APPLY_MONSTER_STATUS.getValue());\n+                mplew.writeInt(oid);\n+                int mask = 0;\n+                for (MonsterStatus stat : stats.keySet()) {\n+                        mask |= stat.getValue();\n+                }\n+                mplew.writeInt(mask);\n+                for (Integer val : stats.values()) {\n+                        mplew.writeShort(val);\n+                        if (monsterSkill) {\n+                                mplew.writeShort(mobskill.getSkillId());\n+                                mplew.writeShort(mobskill.getSkillLevel());\n+                        } else {\n+                                mplew.writeInt(skill);\n+                        }\n+                        mplew.writeShort(0); // as this looks similar to giveBuff this\n+                }\n+                mplew.writeShort(delay); // delay in ms\n+                mplew.write(1); // ?\n+                return mplew.getPacket();\n+        }\n+        \n         public static byte[] applyMonsterStatus(final int oid, final MonsterStatusEffect mse, final List<Integer> reflection) {\n                 Map<MonsterStatus, Integer> stati = mse.getStati();\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n@@ -4196,7 +4213,7 @@ private static void writeIntMask(final MaplePacketLittleEndianWriter mplew, Map<\n                 mplew.write(reactor.getState());\n                 mplew.writePos(pos);\n                 mplew.writeShort(0);\n-                mplew.write(0);\n+                mplew.write(reactor.getFacingDirection()); // stance, thanks to Drago/Dragohe4rt\n                 return mplew.getPacket();\n         }\n \n@@ -6518,9 +6535,11 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n         }\n         \n         /**\n-         * 0 = Levelup 6 = Exp did not drop (Safety Charms) 7 = Enter portal sound 8 = Job\n-         * change 9 = Quest complete 10 = Recovery 11 = Buff effect 14 = Monster book pickup 15 =\n-         * Equipment levelup 16 = Maker Skill Success 17 = Buff effect w/ sfx 19 = Exp card [500, 200, 50] 21 = Wheel of destiny 26 = Spirit Stone\n+         * 0 = Levelup 6 = Exp did not drop (Safety Charms) 7 = Enter portal sound \n+         * 8 = Job change 9 = Quest complete 10 = Recovery 11 = Buff effect \n+         * 14 = Monster book pickup 15 = Equipment levelup 16 = Maker Skill Success\n+         * 17 = Buff effect w/ sfx 19 = Exp card [500, 200, 50] 21 = Wheel of destiny\n+         * 26 = Spirit Stone\n          *\n          * @param effect\n          * @return\n@@ -7693,82 +7712,59 @@ public static void addCashItemInformation(final MaplePacketLittleEndianWriter mp\n                 return mplew.getPacket();\n         }\n \n-        public static byte[] startCPQ(MapleCharacter chr, MonsterCarnivalParty enemy) {\n-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter(25);\n-                mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_START.getValue());\n-                mplew.write(chr.getTeam()); //team\n-                mplew.writeShort(chr.getCP()); //Obtained CP - Used CP\n-                mplew.writeShort(chr.getObtainedCP()); //Total Obtained CP\n-                mplew.writeShort(chr.getCarnivalParty().getAvailableCP()); //Obtained CP - Used CP of the team\n-                mplew.writeShort(chr.getCarnivalParty().getTotalCP()); //Total Obtained CP of the team\n-                mplew.writeShort(enemy.getAvailableCP()); //Obtained CP - Used CP of the team\n-                mplew.writeShort(enemy.getTotalCP()); //Total Obtained CP of the team\n-                mplew.writeShort(0); //Probably useless nexon shit\n-                mplew.writeLong(0); //Probably useless nexon shit\n-                return mplew.getPacket();\n-        }\n-\n-        public static byte[] updateCP(int cp, int tcp) {\n-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter(6);\n-                mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_OBTAINED_CP.getValue());\n-                mplew.writeShort(cp); //Obtained CP - Used CP\n-                mplew.writeShort(tcp); //Total Obtained CP\n-                return mplew.getPacket();\n-        }\n-\n-        public static byte[] updatePartyCP(MonsterCarnivalParty party) {\n-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter(7);\n-                mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_PARTY_CP.getValue());\n-                mplew.write(party.getTeam()); //Team where the points are given to.\n-                mplew.writeShort(party.getAvailableCP()); //Obtained CP - Used CP\n-                mplew.writeShort(party.getTotalCP()); //Total Obtained CP\n-                return mplew.getPacket();\n-        }\n-\n-        public static byte[] CPQSummon(int tab, int number, String name) {\n-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n-                mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_SUMMON.getValue());\n-                mplew.write(tab); //Tab\n-                mplew.writeShort(number); //Number of summon inside the tab\n-                mplew.writeMapleAsciiString(name); //Name of the player that summons\n-                return mplew.getPacket();\n-        }\n+        public static byte[] CPUpdate(boolean party, int curCP, int totalCP, int team) { // CPQ\n+                MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                if (!party) {\n+                        mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_OBTAINED_CP.getValue());\n+                } else {\n+                        mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_PARTY_CP.getValue());\n+                        mplew.write(team); // team?\n+                }\n+                mplew.writeShort(curCP);\n+                mplew.writeShort(totalCP);\n+        return mplew.getPacket();\n+    }\n+\n+    public static byte[] CPQMessage(byte message) {\n+            final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter(3);\n+            mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_MESSAGE.getValue());\n+            mplew.write(message); // Message\n+            return mplew.getPacket();\n+    }\n \n-        public static byte[] CPQDied(MapleCharacter chr) {\n-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n-                mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_DIED.getValue());\n-                mplew.write(chr.getTeam()); //Team\n-                mplew.writeMapleAsciiString(chr.getName()); //Name of the player that died\n-                mplew.write(chr.getAndRemoveCP()); //Lost CP\n-                return mplew.getPacket();\n-        }\n+    public static byte[] playerSummoned(String name, int tab, int number) {\n+            MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+            mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_SUMMON.getValue());\n+            mplew.write(tab);\n+            mplew.write(number);\n+            mplew.writeMapleAsciiString(name);\n+            return mplew.getPacket();\n+    }\n \n-        /**\n-         * Sends a CPQ Message<br>\n-         *\n-         * Possible values for <code>message</code>:<br> 1: You don't have enough CP\n-         * to continue.<br> 2: You can no longer summon the Monster.<br> 3: You can\n-         * no longer summon the being.<br> 4: This being is already summoned.<br> 5:\n-         * This request has failed due to an unknown error.<br>\n-         *\n-         * @param message Displays a message inside Carnival PQ\n-         *\n-         */\n-        public static byte[] CPQMessage(byte message) {\n-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter(3);\n-                mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_MESSAGE.getValue());\n-                mplew.write(message); //Message\n-                return mplew.getPacket();\n-        }\n+    public static byte[] playerDiedMessage(String name, int lostCP, int team) { // CPQ\n+            MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n \n-        public static byte[] leaveCPQ(MapleCharacter chr) {\n-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n-                mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_LEAVE.getValue());\n-                mplew.write(0); //Something\n-                mplew.write(chr.getTeam()); //Team\n-                mplew.writeMapleAsciiString(chr.getName()); //Player name\n-                return mplew.getPacket();\n-        }\n+            mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_DIED.getValue());\n+            mplew.write(team); // team\n+            mplew.writeMapleAsciiString(name);\n+            mplew.write(lostCP);\n+            return mplew.getPacket();\n+    }\n+\n+    public static byte[] startMonsterCarnival(MapleCharacter chr, int team, int oposition) {\n+            final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter(25);\n+            mplew.writeShort(SendOpcode.MONSTER_CARNIVAL_START.getValue());\n+            mplew.write(team); // team\n+            mplew.writeShort(chr.getCP()); // Obtained CP - Used CP\n+            mplew.writeShort(chr.getTotalCP()); // Total Obtained CP\n+            mplew.writeShort(chr.getMonsterCarnival().getCP(team)); // Obtained CP - Used CP of the team\n+            mplew.writeShort(chr.getMonsterCarnival().getTotalCP(team)); // Total Obtained CP of the team\n+            mplew.writeShort(chr.getMonsterCarnival().getCP(oposition)); // Obtained CP - Used CP of the team\n+            mplew.writeShort(chr.getMonsterCarnival().getTotalCP(oposition)); // Total Obtained CP of the team\n+            mplew.writeShort(0); // Probably useless nexon shit\n+            mplew.writeLong(0); // Probably useless nexon shit\n+            return mplew.getPacket();\n+    }\n \n         public static byte[] sheepRanchInfo(byte wolf, byte sheep) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n@@ -7867,4 +7863,4 @@ public static void addCashItemInformation(final MaplePacketLittleEndianWriter mp\n                 mplew.writeInt(transition);\n                 return mplew.getPacket();\n         }\n-}\n+}\n\\ No newline at end of file"}, {"sha": "bc8351be8ad4501f0887001bde35371f12019bd9", "filename": "src/tools/data/output/GenericLittleEndianWriter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/tools/data/output/GenericLittleEndianWriter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/tools/data/output/GenericLittleEndianWriter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/data/output/GenericLittleEndianWriter.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -33,7 +33,7 @@\n  * @since Revision 323\n  */\n public class GenericLittleEndianWriter implements LittleEndianWriter {\n-    private static Charset ASCII = Charset.forName(MapleLanguageType.LANGUAGE_US.getAscii());\n+    private static Charset ASCII = Charset.forName(MapleLanguageType.LANGUAGE_PT_BR.getAscii());\n     private ByteOutputStream bos;\n \n     /**"}, {"sha": "95946051dec536d365c63a6c92de697cf8d5cc06", "filename": "src/tools/packets/Wedding.java", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/1383efd6c36a63b493645eff1e9c4b00443216f2/src/tools/packets/Wedding.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/1383efd6c36a63b493645eff1e9c4b00443216f2/src/tools/packets/Wedding.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/packets/Wedding.java?ref=1383efd6c36a63b493645eff1e9c4b00443216f2", "patch": "@@ -18,7 +18,7 @@\n /**\n  * CField_Wedding, CField_WeddingPhoto, CWeddingMan, OnMarriageResult, and all Wedding/Marriage enum/structs.\n  * \n- * @author Eric\n+ * @author Eric edited by Drago/Dragohe4rt on Wishlist\n  */\n public class Wedding extends MaplePacketCreator {\n     private static final short MARRIAGE_REQUEST = 0x48;\n@@ -375,7 +375,7 @@ public int getItem() {\n     }\n \n     /**\n-     * Handles all of WeddingWishlist packets\n+     * Handles all of WeddingWishlist packets \n      * \n      *    @param mode\n      *    @param itemnames\n@@ -392,17 +392,16 @@ public int getItem() {\n         MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n         mplew.writeShort(WEDDING_GIFT_RESULT);\n         mplew.write(mode);\n-        switch(mode) {\n+        switch (mode) {\n             case 0x09: { // Load Wedding Registry\n                 mplew.write(itemnames.size());\n                 for (String names : itemnames) {\n                     mplew.writeMapleAsciiString(names);\n                 }\n-                mplew.write(itemnames.size());\n-                for (String names : itemnames) {\n-                    mplew.writeMapleAsciiString(names);\n+                mplew.write(items.size());\n+                for (Item item : items) {\n+                    addItemInfo(mplew, item, true);\n                 }\n-                // need to load items somehow\n                 break;\n             }\n             case 0xA: // Load Bride's Wishlist \n@@ -415,30 +414,31 @@ public int getItem() {\n                         mplew.writeMapleAsciiString(names);\n                     }\n                 }\n-                switch (items.get((items.size() - 1)).getInventoryType()) {\n-                    case EQUIP:\n-                        mplew.writeLong(4);\n-                        break;\n-                    case USE:\n-                        mplew.writeLong(8);\n-                        break;\n-                    case SETUP:\n-                        mplew.writeLong(16);\n-                        break;\n-                    case ETC:\n-                        mplew.writeLong(32);\n-                        break;\n-                    default: // impossible flag, cash item can't be sent\n-                        if (items.get((items.size() - 1)).getInventoryType() != MapleInventoryType.CASH) {\n-                            mplew.writeLong(0);\n-                        }\n-                }\n-                if (mode == 0xA) { // random unknown bytes involved within Bride's Wishlist\n-                    mplew.writeInt(0);\n+                if (items.size() >= 1) {\n+                    switch (items.get((items.size() - 1)).getInventoryType()) {\n+                        case EQUIP:\n+                            mplew.writeLong(4);\n+                            break;\n+                        case USE:\n+                            mplew.writeLong(8);\n+                            break;\n+                        case SETUP:\n+                            mplew.writeLong(16);\n+                            break;\n+                        case ETC:\n+                            mplew.writeLong(32);\n+                            break;\n+                        default: // impossible flag, cash item can't be sent\n+                            if (items.get((items.size() - 1)).getInventoryType() != MapleInventoryType.CASH) {\n+                                mplew.writeLong(0);\n+                            }\n+                    }\n+                } else {\n+                    mplew.writeLong(0);\n                 }\n                 mplew.write(items.size());\n                 for (Item item : items) {\n-                    MaplePacketCreator.addItemInfo(mplew, item, true);\n+                    addItemInfo(mplew, item, true);\n                 }\n                 break;\n             }"}]}]},
