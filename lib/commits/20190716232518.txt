{"fetchDate": "2019-12-19", "content": [{"sha": "68fae4125125606ccd039f138125f0a105d6b4be", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6NjhmYWU0MTI1MTI1NjA2Y2NkMDM5ZjEzODEyNWYwYTEwNWQ2YjRiZQ==", "commit": {"author": {"name": "kolakcc", "email": "kolakcc@gmail.com", "date": "2019-07-16T23:25:18Z"}, "committer": {"name": "Ronan Lana", "email": "rcpl2010@gmail.com", "date": "2019-07-16T23:25:18Z"}, "message": "Fix Java 8 support (#489)", "tree": {"sha": "9364a8d383bbdac66408d7e29470d309e5fffeea", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/9364a8d383bbdac66408d7e29470d309e5fffeea"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/68fae4125125606ccd039f138125f0a105d6b4be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/68fae4125125606ccd039f138125f0a105d6b4be", "html_url": "https://github.com/ronancpl/HeavenMS/commit/68fae4125125606ccd039f138125f0a105d6b4be", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/68fae4125125606ccd039f138125f0a105d6b4be/comments", "author": {"login": "kolakcc", "id": 22007894, "node_id": "MDQ6VXNlcjIyMDA3ODk0", "avatar_url": "https://avatars0.githubusercontent.com/u/22007894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kolakcc", "html_url": "https://github.com/kolakcc", "followers_url": "https://api.github.com/users/kolakcc/followers", "following_url": "https://api.github.com/users/kolakcc/following{/other_user}", "gists_url": "https://api.github.com/users/kolakcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/kolakcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kolakcc/subscriptions", "organizations_url": "https://api.github.com/users/kolakcc/orgs", "repos_url": "https://api.github.com/users/kolakcc/repos", "events_url": "https://api.github.com/users/kolakcc/events{/privacy}", "received_events_url": "https://api.github.com/users/kolakcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2df59b293bef8923d4aed112e3a13cbbce48edd0", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/2df59b293bef8923d4aed112e3a13cbbce48edd0", "html_url": "https://github.com/ronancpl/HeavenMS/commit/2df59b293bef8923d4aed112e3a13cbbce48edd0"}], "stats": {"total": 71, "additions": 43, "deletions": 28}, "files": [{"sha": "9a80eeb0b969e776cc81ae7ce679cc44e6c7a7c8", "filename": "configuration.ini", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/68fae4125125606ccd039f138125f0a105d6b4be/configuration.ini", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/68fae4125125606ccd039f138125f0a105d6b4be/configuration.ini", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/configuration.ini?ref=68fae4125125606ccd039f138125f0a105d6b4be", "patch": "@@ -2,5 +2,4 @@ HOST=127.0.0.1\n URL=jdbc:mysql://localhost:3306/heavenms\n DB_USER=root\n DB_PASS=\n-JAVA8=FALSE\n SHUTDOWNHOOK=true\n\\ No newline at end of file"}, {"sha": "46339c645bc20ad280cc50250659cc9a39cbdf60", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/68fae4125125606ccd039f138125f0a105d6b4be/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/68fae4125125606ccd039f138125f0a105d6b4be/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=68fae4125125606ccd039f138125f0a105d6b4be", "patch": "@@ -51,10 +51,8 @@\n     public static boolean LOCALSERVER;\n \n     //Other Configuration\n-    public static boolean JAVA_8;\n+    public static final boolean JAVA_8 = getJavaVersion() >= 8;\n     public static boolean SHUTDOWNHOOK;\n-    // JAVA_8: every static function in AbstractPlayerInteraction are to be made non-static, and code comment sections uncommented after enabling this functionality.\n-    \n     \n     //Server Flags\n     public static final boolean USE_CUSTOM_KEYSET = true;           //Enables auto-setup of the HeavenMS's custom keybindings when creating characters.\n@@ -320,8 +318,7 @@\n             ServerConstants.DB_USER = p.getProperty(\"DB_USER\");\n             ServerConstants.DB_PASS = p.getProperty(\"DB_PASS\");\n \n-            //java8 And Shutdownhook\n-            ServerConstants.JAVA_8 = p.getProperty(\"JAVA8\").equalsIgnoreCase(\"TRUE\");\n+            // shutdownhook\n             ServerConstants.SHUTDOWNHOOK = p.getProperty(\"SHUTDOWNHOOK\").equalsIgnoreCase(\"true\");\n \n         } catch (Exception e) {\n@@ -330,4 +327,25 @@\n             System.exit(0);\n         }\n     }\n+    // https://github.com/openstreetmap/josm/blob/a3a6e8a6b657cf4c5b4c64ea14d6e87be6280d65/src/org/openstreetmap/josm/tools/Utils.java#L1566-L1585\n+    /**\n+     * Returns the Java version as an int value.\n+     * @return the Java version as an int value (8, 9, etc.)\n+     * @since 12130\n+     */\n+    public static int getJavaVersion() {\n+        String version = System.getProperty(\"java.version\");\n+        if (version.startsWith(\"1.\")) {\n+            version = version.substring(2);\n+        }\n+        // Allow these formats:\n+        // 1.8.0_72-ea\n+        // 9-ea\n+        // 9\n+        // 9.0.1\n+        int dotPos = version.indexOf('.');\n+        int dashPos = version.indexOf('-');\n+        return Integer.parseInt(version.substring(0,\n+                dotPos > -1 ? dotPos : dashPos > -1 ? dashPos : 1));\n+    }\n }"}, {"sha": "63177dc9e152045c2c396f5dae80554ce799d9f5", "filename": "src/scripting/AbstractPlayerInteraction.java", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/68fae4125125606ccd039f138125f0a105d6b4be/src/scripting/AbstractPlayerInteraction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/68fae4125125606ccd039f138125f0a105d6b4be/src/scripting/AbstractPlayerInteraction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/AbstractPlayerInteraction.java?ref=68fae4125125606ccd039f138125f0a105d6b4be", "patch": "@@ -96,15 +96,15 @@ public MapleMap getMap() {\n                 return c.getPlayer().getMap();\n         }\n         \n-        public static int getHourOfDay() {\n+        public int getHourOfDay() {\n                 return Calendar.getInstance().get(Calendar.HOUR_OF_DAY);\n         }\n         \n         public int getMarketPortalId(int mapId) {\n             return getMarketPortalId(getWarpMap(mapId));\n         }\n         \n-        private static int getMarketPortalId(MapleMap map) {\n+        private int getMarketPortalId(MapleMap map) {\n             return (map.findMarketPortal() != null) ? map.findMarketPortal().getId() : map.getRandomPlayerSpawnpoint().getId();\n         }\n         \n@@ -236,7 +236,7 @@ public boolean canHold(int itemid, int quantity, int removeItemid, int removeQua\n                 return canHoldAllAfterRemoving(Collections.singletonList(itemid), Collections.singletonList(quantity), Collections.singletonList(removeItemid), Collections.singletonList(removeQuantity));\n         }\n         \n-        private static List<Integer> convertToIntegerArray(List<Double> list) {\n+        private List<Integer> convertToIntegerArray(List<Double> list) {\n                 List<Integer> intList = new LinkedList<>();\n                 for(Double d: list) {\n                         intList.add(d.intValue());\n@@ -270,7 +270,7 @@ private boolean canHoldAll(List<Integer> itemids, List<Integer> quantity, boolea\n             return MapleInventory.checkSpots(c.getPlayer(), addedItems, false);\n         }\n         \n-        private static List<Pair<Item, MapleInventoryType>> prepareProofInventoryItems(List<Pair<Integer, Integer>> items) {\n+        private List<Pair<Item, MapleInventoryType>> prepareProofInventoryItems(List<Pair<Integer, Integer>> items) {\n             List<Pair<Item, MapleInventoryType>> addedItems = new LinkedList<>();\n             for(Pair<Integer, Integer> p : items) {\n                 Item it = new Item(p.getLeft(), (short) 0, p.getRight().shortValue());\n@@ -280,7 +280,7 @@ private boolean canHoldAll(List<Integer> itemids, List<Integer> quantity, boolea\n             return addedItems;\n         }\n         \n-        private static List<List<Pair<Integer, Integer>>> prepareInventoryItemList(List<Integer> itemids, List<Integer> quantity) {\n+        private List<List<Pair<Integer, Integer>>> prepareInventoryItemList(List<Integer> itemids, List<Integer> quantity) {\n             int size = Math.min(itemids.size(), quantity.size());\n             \n             List<List<Pair<Integer, Integer>>> invList = new ArrayList<>(6);\n@@ -948,7 +948,7 @@ public void gainAndEquip(int itemid, short slot) {\n \t\tc.announce(MaplePacketCreator.modifyInventory(false, Collections.singletonList(new ModifyInventory(0, newItem))));\n \t}\n         \n-        public static void spawnNpc(int npcId, Point pos, MapleMap map) {\n+        public void spawnNpc(int npcId, Point pos, MapleMap map) {\n                 MapleNPC npc = MapleLifeFactory.getNPC(npcId);\n                 if (npc != null) {\n                         npc.setPosition(pos);\n@@ -967,11 +967,11 @@ public void spawnMonster(int id, int x, int y) {\n \t\tgetPlayer().getMap().spawnMonster(monster);\n \t}\n         \n-\tpublic static MapleMonster getMonsterLifeFactory(int mid) {\n+\tpublic MapleMonster getMonsterLifeFactory(int mid) {\n \t\treturn MapleLifeFactory.getMonster(mid);\n \t}\n         \n-        public static MobSkill getMobSkill(int skill, int level) {\n+        public MobSkill getMobSkill(int skill, int level) {\n \t\treturn MobSkillFactory.getMobSkill(skill, level);\n \t}\n \n@@ -1165,7 +1165,7 @@ public boolean canGetFirstJob(int jobType) {\n                 }\n         }\n         \n-        public static String getFirstJobStatRequirement(int jobType) {\n+        public String getFirstJobStatRequirement(int jobType) {\n                 switch(jobType) {\n                     case 1:\n                         return \"STR \" + 35;"}, {"sha": "42f5911630841af0e42b7e4f2901bb4eb5dc398d", "filename": "src/scripting/event/EventManager.java", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/68fae4125125606ccd039f138125f0a105d6b4be/src/scripting/event/EventManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/68fae4125125606ccd039f138125f0a105d6b4be/src/scripting/event/EventManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/event/EventManager.java?ref=68fae4125125606ccd039f138125f0a105d6b4be", "patch": "@@ -21,6 +21,8 @@\n */\n package scripting.event;\n \n+import jdk.nashorn.api.scripting.ScriptObjectMirror;\n+import jdk.nashorn.api.scripting.ScriptUtils;\n import tools.exceptions.EventInstanceInProgressException;\n import java.util.Collection;\n import java.util.HashMap;\n@@ -165,14 +167,14 @@ private void emptyLocks() {\n         startLock = startLock.dispose();\n     }\n     \n-    private static List<Integer> convertToIntegerArray(List<Double> list) {\n+    private List<Integer> convertToIntegerArray(List<Double> list) {\n         List<Integer> intList = new ArrayList<>();\n         for(Double d: list) intList.add(d.intValue());\n \n         return intList;\n     }\n     \n-    public static long getLobbyDelay() {\n+    public long getLobbyDelay() {\n         return ServerConstants.EVENT_LOBBY_DELAY;\n     }\n     \n@@ -181,17 +183,14 @@ public static long getLobbyDelay() {\n             if (!ServerConstants.JAVA_8) {\n                 return convertToIntegerArray((List<Double>)iv.invokeFunction(\"setLobbyRange\", (Object) null));\n             } else {  // java 8 support here thanks to MedicOP\n-                /*\n                 ScriptObjectMirror object = (ScriptObjectMirror) iv.invokeFunction(\"setLobbyRange\", (Object) null);\n                 int[] to = object.to(int[].class);\n                 List<Integer> list = new ArrayList<>();\n                 for (int i : to) {\n                     list.add(i);\n                 }\n                 return list;\n-                */\n-                \n-                throw new NoSuchMethodException();\n+\n             }\n         } catch (ScriptException | NoSuchMethodException ex) { // they didn't define a lobby range\n             List<Integer> defaultRange = new ArrayList<>();\n@@ -750,13 +749,12 @@ public boolean startInstance(int lobbyId, EventInstanceManager eim, String ldr,\n             if(p != null) {\n                 List<MaplePartyCharacter> lmpc;\n                 \n-                /*if(ServerConstants.JAVA_8) {\n+                if(ServerConstants.JAVA_8) {\n                     lmpc = new ArrayList<>(((Map<String, MaplePartyCharacter>)(ScriptUtils.convert(p, Map.class))).values());\n                 } else {\n                     lmpc = new ArrayList<>((List<MaplePartyCharacter>) p);\n-                }*/\n-                \n-                lmpc = new ArrayList<>((List<MaplePartyCharacter>) p);\n+                }\n+\n                 party.setEligibleMembers(lmpc);\n                 return lmpc;\n             }"}, {"sha": "f1a38d836e27fe866154e60071d30e40af32325a", "filename": "src/scripting/npc/NPCConversationManager.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/68fae4125125606ccd039f138125f0a105d6b4be/src/scripting/npc/NPCConversationManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/68fae4125125606ccd039f138125f0a105d6b4be/src/scripting/npc/NPCConversationManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/npc/NPCConversationManager.java?ref=68fae4125125606ccd039f138125f0a105d6b4be", "patch": "@@ -97,9 +97,9 @@\n         private boolean itemScript;\n         private List<MaplePartyCharacter> otherParty;\n         \n-        private static Map<Integer, String> npcDefaultTalks = new HashMap<>();\n+        private Map<Integer, String> npcDefaultTalks = new HashMap<>();\n         \n-        private static String getDefaultTalk(int npcid) {\n+        private String getDefaultTalk(int npcid) {\n             String talk = npcDefaultTalks.get(npcid);\n             if (talk == null) {\n                 talk = MapleLifeFactory.getNPCDefaultTalk(npcid);"}, {"sha": "ffbd022278cd007edbae7d9e8a11ab02a1364cf6", "filename": "src/scripting/reactor/ReactorActionManager.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/68fae4125125606ccd039f138125f0a105d6b4be/src/scripting/reactor/ReactorActionManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/68fae4125125606ccd039f138125f0a105d6b4be/src/scripting/reactor/ReactorActionManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/reactor/ReactorActionManager.java?ref=68fae4125125606ccd039f138125f0a105d6b4be", "patch": "@@ -186,7 +186,7 @@ public void run() {\n         return ReactorScriptManager.getInstance().getDrops(reactor.getId());\n     }\n     \n-    private static List<ReactorDropEntry> generateDropList(List<ReactorDropEntry> drops, int dropRate, boolean meso, int mesoChance, int minItems) {\n+    private List<ReactorDropEntry> generateDropList(List<ReactorDropEntry> drops, int dropRate, boolean meso, int mesoChance, int minItems) {\n         MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n         \n         List<ReactorDropEntry> items = new ArrayList<>();"}]}]},
