{"fetchDate": "2019-12-19", "content": [{"sha": "ec5a412e37071074509c0b1ae919b032a30a6a80", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6ZWM1YTQxMmUzNzA3MTA3NDUwOWMwYjFhZTkxOWIwMzJhMzBhNmE4MA==", "commit": {"author": {"name": "Ubaware", "email": "ubaware0@gmail.com", "date": "2019-08-19T17:16:10Z"}, "committer": {"name": "Ronan Lana", "email": "rcpl2010@gmail.com", "date": "2019-08-19T17:16:10Z"}, "message": "Added families. (#511)\n\n* Added families.\r\n\r\n* Added joining of families.", "tree": {"sha": "98db2e77f91683450fc5a5d6a85fc400f8140a38", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/98db2e77f91683450fc5a5d6a85fc400f8140a38"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/ec5a412e37071074509c0b1ae919b032a30a6a80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/ec5a412e37071074509c0b1ae919b032a30a6a80", "html_url": "https://github.com/ronancpl/HeavenMS/commit/ec5a412e37071074509c0b1ae919b032a30a6a80", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/ec5a412e37071074509c0b1ae919b032a30a6a80/comments", "author": {"login": "Ubaware", "id": 52778420, "node_id": "MDQ6VXNlcjUyNzc4NDIw", "avatar_url": "https://avatars0.githubusercontent.com/u/52778420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ubaware", "html_url": "https://github.com/Ubaware", "followers_url": "https://api.github.com/users/Ubaware/followers", "following_url": "https://api.github.com/users/Ubaware/following{/other_user}", "gists_url": "https://api.github.com/users/Ubaware/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ubaware/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ubaware/subscriptions", "organizations_url": "https://api.github.com/users/Ubaware/orgs", "repos_url": "https://api.github.com/users/Ubaware/repos", "events_url": "https://api.github.com/users/Ubaware/events{/privacy}", "received_events_url": "https://api.github.com/users/Ubaware/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f958624f6a2a9fa196ca67dfeafc577e9b93b83a", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/f958624f6a2a9fa196ca67dfeafc577e9b93b83a", "html_url": "https://github.com/ronancpl/HeavenMS/commit/f958624f6a2a9fa196ca67dfeafc577e9b93b83a"}], "stats": {"total": 1954, "additions": 1674, "deletions": 280}, "files": [{"sha": "2001688854536f1587e0758332ea3a63bb987ec6", "filename": "docs/leftover.txt", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/docs/leftover.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/docs/leftover.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/leftover.txt?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -3,7 +3,6 @@\n Uncoded features:\n NX Format\n MTS (v53)\n-Family system (v67)\n Family and Medal Quests(?)\n \n Uncoded Party Quests:"}, {"sha": "d826dd75eebda41f4f5f93db77da17be0a8aded6", "filename": "sql/db_database.sql", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/sql/db_database.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/sql/db_database.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_database.sql?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -12853,17 +12853,26 @@ CREATE TABLE IF NOT EXISTS `famelog` (\n CREATE TABLE IF NOT EXISTS `family_character` (\n   `cid` int(11) NOT NULL,\n   `familyid` int(11) NOT NULL,\n-  `rank` int(11) NOT NULL,\n-  `reputation` int(11) NOT NULL,\n-  `todaysrep` int(11) NOT NULL,\n-  `totaljuniors` int(11) NOT NULL,\n-  `name` varchar(255) NOT NULL,\n-  `juniorsadded` int(11) NOT NULL,\n-  `totalreputation` int(11) NOT NULL,\n+  `seniorid` int(11) NOT NULL,\n+  `reputation` int(11) NOT NULL DEFAULT '0',\n+  `todaysrep` int(11) NOT NULL DEFAULT '0',\n+  `totalreputation` int(11) NOT NULL DEFAULT '0',\n+  `reptosenior` int(11) NOT NULL DEFAULT '0',\n+  `precepts` varchar(200) DEFAULT NULL,\n+  `lastresettime` BIGINT(20) NOT NULL DEFAULT '0',\n   PRIMARY KEY (`cid`),\n   INDEX (cid, familyid)\n ) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n \n+CREATE TABLE IF NOT EXISTS `family_entitlement` (\n+  `id` int(11) NOT NULL AUTO_INCREMENT,\n+  `charid` int(11) NOT NULL,\n+  `entitlementid` int(11) NOT NULL,\n+  `timestamp` BIGINT(20) NOT NULL DEFAULT '0',\n+  PRIMARY KEY (`id`),\n+  INDEX (charid)\n+) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n+\n CREATE TABLE IF NOT EXISTS `fredstorage` (\n   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n   `cid` int(10) unsigned NOT NULL,"}, {"sha": "39c745486586721c7be985ddb6e5cd8391677e51", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 59, "deletions": 8, "changes": 67, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -193,7 +193,7 @@\n     private int energybar;\n     private int gmLevel;\n     private int ci = 0;\n-    private MapleFamily family;\n+    private MapleFamilyEntry familyEntry;\n     private int familyId;\n     private int bookCover;\n     private int battleshipHp = 0;\n@@ -331,6 +331,7 @@\n     private long banishTime = 0;\n     private long lastExpGainTime;\n     private boolean pendingNameChange; //only used to change name on logout, not to be relied upon elsewhere\n+    private long loginTime;\n     \n     private MapleCharacter() {\n         super.setListener(new AbstractCharacterListener() {\n@@ -1254,6 +1255,10 @@ public synchronized void changeJob(MapleJob newJob) {\n         if (this.guildid > 0) {\n             getGuild().broadcast(MaplePacketCreator.jobMessage(0, job.getId(), name), this.getId());\n         }\n+        MapleFamily family = getFamily();\n+        if(family != null) {\n+            family.broadcast(MaplePacketCreator.jobMessage(1, job.getId(), name), this.getId());\n+        }\n         setMasteries(this.job.getId());\n         guildUpdate();\n         \n@@ -1279,9 +1284,9 @@ public void broadcastAcquaintances(int type, String message) {\n     \n     public void broadcastAcquaintances(byte[] packet) {\n         buddylist.broadcast(packet, getWorldServer().getPlayerStorage());\n-        \n+        MapleFamily family = getFamily();\n         if(family != null) {\n-            //family.broadcast(packet, id); not yet implemented\n+            family.broadcast(packet, id);\n         }\n         \n         MapleGuild guild = getGuild();\n@@ -4873,11 +4878,17 @@ public int getFame() {\n     }\n \n     public MapleFamily getFamily() {\n-        return family;\n+        if(familyEntry != null) return familyEntry.getFamily();\n+        else return null;\n     }\n-\n-    public void setFamily(MapleFamily f) {\n-        this.family = f;\n+    \n+    public MapleFamilyEntry getFamilyEntry() {\n+        return familyEntry;\n+    }\n+    \n+    public void setFamilyEntry(MapleFamilyEntry entry) {\n+        if(entry != null) setFamilyId(entry.getFamily().getID());\n+        this.familyEntry = entry;\n     }\n \n     public int getFamilyId() {\n@@ -6440,6 +6451,16 @@ public void run() {\n \n         levelUpMessages();\n         guildUpdate();\n+        \n+        MapleFamilyEntry familyEntry = getFamilyEntry();\n+        if(familyEntry != null) {\n+            familyEntry.giveReputationToSenior(ServerConstants.FAMILY_REP_PER_LEVELUP, true);\n+            MapleFamilyEntry senior = familyEntry.getSenior();\n+            if(senior != null) { //only send the message to direct senior\n+                MapleCharacter seniorChr = senior.getChr();\n+                if(seniorChr != null) seniorChr.announce(MaplePacketCreator.levelUpMessage(1, level, getName()));\n+            }\n+        }\n     }\n     \n     public boolean leaveParty() {\n@@ -8555,6 +8576,20 @@ public synchronized void saveCharToDB(boolean notAutosave) {\n             psf.close();\n             ps.close();\n             \n+            MapleFamilyEntry familyEntry = getFamilyEntry(); //save family rep\n+            if(familyEntry != null) {\n+                if(familyEntry.saveReputation(con)) familyEntry.savedSuccessfully();\n+                MapleFamilyEntry senior = familyEntry.getSenior();\n+                if(senior != null && senior.getChr() == null) { //only save for offline family members\n+                    if(senior.saveReputation(con)) senior.savedSuccessfully();\n+                    senior = senior.getSenior(); //save one level up as well\n+                    if(senior != null && senior.getChr() == null) {\n+                        if(senior.saveReputation(con)) senior.savedSuccessfully();\n+                    }\n+                }\n+                \n+            }\n+            \n             con.commit();\n             con.setAutoCommit(true);\n \t    \n@@ -10327,7 +10362,11 @@ public final void empty(final boolean remove) {\n             mpc = null;\n             mgc = null;\n             party = null;\n-            family = null;\n+            MapleFamilyEntry familyEntry = getFamilyEntry();\n+            if(familyEntry != null) {\n+                familyEntry.setCharacter(null);\n+                setFamilyEntry(null);\n+            }\n             \n             getWorldServer().registerTimedMapObject(new Runnable() {\n                 @Override\n@@ -10351,6 +10390,18 @@ public void logOff() {\n             e.printStackTrace();\n         }\n     }\n+    \n+    public void setLoginTime(long time) {\n+        this.loginTime = time;\n+    }\n+    \n+    public long getLoginTime() {\n+        return loginTime;\n+    }\n+    \n+    public long getLoggedInTime() {\n+        return System.currentTimeMillis() - loginTime;\n+    }\n \n     public boolean isLoggedin() {\n         return loggedIn;"}, {"sha": "781ec33d6951159df691fca947e679d63af5751e", "filename": "src/client/MapleFamily.java", "status": "modified", "additions": 260, "deletions": 62, "changes": 322, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/client/MapleFamily.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/client/MapleFamily.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleFamily.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -25,75 +25,273 @@\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n-import java.util.HashMap;\n+import java.util.ArrayList;\n+import java.util.Calendar;\n+import java.util.List;\n import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import net.server.Server;\n+import net.server.world.World;\n import tools.DatabaseConnection;\n+import tools.FilePrinter;\n+import tools.MaplePacketCreator;\n+import tools.Pair;\n \n /**\n  *\n  * @author Jay Estrella - Mr.Trash :3\n+ * @author Ubaware\n  */\n public class MapleFamily {\n-\tprivate static int id;\n-\tprivate static Map<Integer, MapleFamilyEntry> members = new HashMap<Integer, MapleFamilyEntry>();\n-\n-\tpublic MapleFamily(int cid) {\n-\t\ttry {\n-                        Connection con = DatabaseConnection.getConnection();\n-\t\t\tPreparedStatement ps = con.prepareStatement(\"SELECT familyid FROM family_character WHERE cid = ?\");\n-\t\t\tps.setInt(1, cid);\n-\t\t\tResultSet rs = ps.executeQuery();\n-\t\t\tif (rs.next()) {\n-\t\t\t\tid = rs.getInt(\"familyid\");\n-\t\t\t}\n-\t\t\tps.close();\n-\t\t\trs.close();\n-                        con.close();\n-\t\t\tgetMapleFamily();\n-\t\t} catch (SQLException ex) {\n-                    ex.printStackTrace();\n-\t\t}\n-\t}\n-\n-\tprivate static void getMapleFamily() {\n-\t\ttry {\n-                        Connection con = DatabaseConnection.getConnection();\n-\t\t\tPreparedStatement ps = con.prepareStatement(\"SELECT * FROM family_character WHERE familyid = ?\");\n-\t\t\tps.setInt(1, id);\n-\t\t\tResultSet rs = ps.executeQuery();\n-\t\t\twhile (rs.next()) {\n-\t\t\t\tMapleFamilyEntry ret = new MapleFamilyEntry();\n-\t\t\t\tret.setFamilyId(id);\n-\t\t\t\tret.setRank(rs.getInt(\"rank\"));\n-\t\t\t\tret.setReputation(rs.getInt(\"reputation\"));\n-\t\t\t\tret.setTotalJuniors(rs.getInt(\"totaljuniors\"));\n-\t\t\t\tret.setFamilyName(rs.getString(\"name\"));\n-\t\t\t\tret.setJuniors(rs.getInt(\"juniorsadded\"));\n-\t\t\t\tret.setTodaysRep(rs.getInt(\"todaysrep\"));\n-\t\t\t\tint cid = rs.getInt(\"cid\");\n-\t\t\t\tret.setChrId(cid);\n-\t\t\t\tmembers.put(cid, ret);\n-\t\t\t}\n-\t\t\trs.close();\n-\t\t\tps.close();\n-                        con.close();\n-\t\t} catch (SQLException sqle) {\n-                    sqle.printStackTrace();\n-\t\t}\n-\t}\n-\n-\tpublic MapleFamilyEntry getMember(int cid) {\n-\t\tif (members.containsKey(cid)){\n-\t\t\treturn members.get(cid);\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n-\tpublic Map<Integer, MapleFamilyEntry> getMembers() {\n-\t\treturn members;\n-\t}\n-        \n-        public void broadcast(byte[] packet) {\n-                // family currently not developed\n+\n+    private static final AtomicInteger familyIDCounter = new AtomicInteger();\n+\n+    private final int id, world;\n+    private final Map<Integer, MapleFamilyEntry> members = new ConcurrentHashMap<Integer, MapleFamilyEntry>();\n+    private MapleFamilyEntry leader;\n+    private String name;\n+    private String preceptsMessage = \"\";\n+    private int totalGenerations;\n+\n+    public MapleFamily(int id, int world) {\n+        int newId = id;\n+        if(id == -1) {\n+            // get next available family id\n+            while(idInUse(newId = familyIDCounter.incrementAndGet())) {\n+            }\n+        }\n+        this.id = newId;\n+        this.world = world;\n+    }\n+\n+    private static boolean idInUse(int id) {\n+        for(World world : Server.getInstance().getWorlds()) {\n+            if(world.getFamily(id) != null) return true;\n+        }\n+        return false;\n+    }\n+\n+    public int getID() {\n+        return id;\n+    }\n+\n+    public int getWorld() {\n+        return world;\n+    }\n+\n+    public void setLeader(MapleFamilyEntry leader) {\n+        this.leader = leader;\n+        setName(leader.getName());\n+    }\n+\n+    public MapleFamilyEntry getLeader() {\n+        return leader;\n+    }\n+\n+    private void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public int getTotalMembers() {\n+        return members.size();\n+    }\n+    \n+    public int getTotalGenerations() {\n+        return totalGenerations;\n+    }\n+    \n+    public void setTotalGenerations(int generations) {\n+        this.totalGenerations = generations;\n+    }\n+\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+    public void setMessage(String message, boolean save) {\n+        this.preceptsMessage = message;\n+        if(save) {\n+            try (Connection con = DatabaseConnection.getConnection();\n+                    PreparedStatement ps = con.prepareStatement(\"UPDATE family_character SET precepts = ? WHERE cid = ?\")) {\n+                ps.setString(1, message);\n+                ps.setInt(2, getLeader().getChrId());\n+                ps.executeUpdate();\n+            } catch(SQLException e) {\n+                FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not save new precepts for family \" + getID() + \".\");\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    public String getMessage() {\n+        return preceptsMessage;\n+    }\n+\n+    public void addEntry(MapleFamilyEntry entry) {\n+        members.put(entry.getChrId(), entry);\n+    }\n+\n+    public void removeEntryBranch(MapleFamilyEntry root) {\n+        members.remove(root.getChrId());\n+        for(MapleFamilyEntry junior : root.getJuniors()) {\n+            if(junior != null) removeEntryBranch(junior);\n+        }\n+    }\n+    \n+    public void addEntryTree(MapleFamilyEntry root) {\n+        members.put(root.getChrId(), root);\n+        for(MapleFamilyEntry junior : root.getJuniors()) {\n+            if(junior != null) addEntryTree(junior);\n+        }\n+    }\n+\n+    public MapleFamilyEntry getEntryByID(int cid) {\n+        return members.get(cid);\n+    }\n+\n+    public void broadcast(byte[] packet) {\n+        broadcast(packet, -1);\n+    }\n+\n+    public void broadcast(byte[] packet, int ignoreID) {\n+        for(MapleFamilyEntry entry : members.values()) {\n+            MapleCharacter chr = entry.getChr();\n+            if(chr != null) {\n+                if(chr.getId() == ignoreID) continue;\n+                chr.getClient().announce(packet);\n+            }\n+        }\n+    }\n+    \n+    public void broadcastFamilyInfoUpdate() {\n+        for(MapleFamilyEntry entry : members.values()) {\n+            MapleCharacter chr = entry.getChr();\n+            if(chr != null) {\n+                chr.getClient().announce(MaplePacketCreator.getFamilyInfo(entry));\n+            }\n+        }\n+    }\n+    \n+    public void resetDailyReps() {\n+        for(MapleFamilyEntry entry : members.values()) {\n+            entry.setTodaysRep(0);\n+            entry.setRepsToSenior(0);\n+            entry.resetEntitlementUsages();\n+        }\n+    }\n+\n+    public static void loadAllFamilies() {\n+        try(Connection con = DatabaseConnection.getConnection()) {\n+            List<Pair<Pair<Integer, Integer>, MapleFamilyEntry>> unmatchedJuniors = new ArrayList<Pair<Pair<Integer, Integer>, MapleFamilyEntry>>(200); // <<world, seniorid> familyEntry>\n+            try(PreparedStatement psEntries = con.prepareStatement(\"SELECT * FROM family_character\")) {\n+                ResultSet rsEntries = psEntries.executeQuery();\n+                while(rsEntries.next()) { // can be optimized\n+                    int cid = rsEntries.getInt(\"cid\");\n+                    String name = null;\n+                    int level = -1;\n+                    int jobID = -1;\n+                    int world = -1;\n+                    try(PreparedStatement ps = con.prepareStatement(\"SELECT world, name, level, job FROM characters WHERE id = ?\")) {\n+                        ps.setInt(1, cid);\n+                        ResultSet rs = ps.executeQuery();\n+                        if(rs.next()) {\n+                            world = rs.getInt(\"world\");\n+                            name = rs.getString(\"name\");\n+                            level = rs.getInt(\"level\");\n+                            jobID = rs.getInt(\"job\");\n+                        } else {\n+                            FilePrinter.printError(FilePrinter.FAMILY_ERROR, \"Could not load character information of \" + cid + \" in loadAllFamilies(). (RECORD DOES NOT EXIST)\");\n+                        }\n+                    } catch(SQLException e) {\n+                        FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not load character information of \" + cid + \" in loadAllFamilies(). (SQL ERROR)\");\n+                    }\n+                    int familyid = rsEntries.getInt(\"familyid\");\n+                    int seniorid = rsEntries.getInt(\"seniorid\");\n+                    int reputation = rsEntries.getInt(\"reputation\");\n+                    int todaysRep = rsEntries.getInt(\"todaysrep\");\n+                    int totalRep = rsEntries.getInt(\"totalreputation\");\n+                    int repsToSenior = rsEntries.getInt(\"reptosenior\");\n+                    String precepts = rsEntries.getString(\"precepts\");\n+                    //Timestamp lastResetTime = rsEntries.getTimestamp(\"lastresettime\"); //taken care of by FamilyDailyResetWorker\n+                    MapleFamily family = Server.getInstance().getWorld(world).getFamily(familyid);\n+                    if(family == null) {\n+                        family = new MapleFamily(familyid, world);\n+                        Server.getInstance().getWorld(world).addFamily(familyid, family);\n+                    }\n+                    MapleFamilyEntry familyEntry = new MapleFamilyEntry(family, cid, name, level, MapleJob.getById(jobID));\n+                    family.addEntry(familyEntry);\n+                    if(seniorid <= 0) {\n+                        family.setLeader(familyEntry);\n+                        family.setMessage(precepts, false);\n+                    }\n+                    MapleFamilyEntry senior = family.getEntryByID(seniorid);\n+                    if(senior != null) {\n+                        familyEntry.setSenior(family.getEntryByID(seniorid), false);\n+                    } else {\n+                        if(seniorid > 0) unmatchedJuniors.add(new Pair<Pair<Integer, Integer>, MapleFamilyEntry>(new Pair<Integer, Integer>(world, seniorid), familyEntry));\n+                    }\n+                    familyEntry.setReputation(reputation);\n+                    familyEntry.setTodaysRep(todaysRep);\n+                    familyEntry.setTotalReputation(totalRep);\n+                    familyEntry.setRepsToSenior(repsToSenior);\n+                    //load used entitlements\n+                    try (PreparedStatement ps = con.prepareStatement(\"SELECT entitlementid FROM family_entitlement WHERE charid = ?\")) {\n+                        ps.setInt(1, familyEntry.getChrId());\n+                        ResultSet rs = ps.executeQuery();\n+                        while(rs.next()) {\n+                            familyEntry.setEntitlementUsed(rs.getInt(\"entitlementid\"));\n+                        }\n+                    }\n+                }\n+            } catch(SQLException e) {\n+                FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not get family_character entries.\");\n+                e.printStackTrace();\n+            }\n+            // link missing ones (out of order)\n+            for(Pair<Pair<Integer, Integer>, MapleFamilyEntry> unmatchedJunior : unmatchedJuniors) {\n+                int world = unmatchedJunior.getLeft().getLeft();\n+                int seniorid = unmatchedJunior.getLeft().getRight();\n+                MapleFamilyEntry junior = unmatchedJunior.getRight();\n+                MapleFamilyEntry senior = Server.getInstance().getWorld(world).getFamily(junior.getFamily().getID()).getEntryByID(seniorid);\n+                if(senior != null) {\n+                    junior.setSenior(senior, false);\n+                } else {\n+                    FilePrinter.printError(FilePrinter.FAMILY_ERROR, \"Missing senior for character \" + junior.getName() + \" in world \" + world);\n+                }\n+            }\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not get DB connection.\");\n+            e.printStackTrace();\n+        }\n+        for(World world : Server.getInstance().getWorlds()) {\n+            for(MapleFamily family : world.getFamilies()) {\n+                family.getLeader().doFullCount();\n+            }\n+        }\n+    }\n+\n+    public void saveAllMembersRep() { //was used for autosave worker, but character autosave should be enough\n+        try(Connection con = DatabaseConnection.getConnection()) {\n+            con.setAutoCommit(false);\n+            boolean success = true;\n+            for(MapleFamilyEntry entry : members.values()) {\n+                success = entry.saveReputation(con);\n+                if(!success) break;\n+            }\n+            if(!success) {\n+                con.rollback();\n+                FilePrinter.printError(FilePrinter.FAMILY_ERROR, \"Family rep autosave failed for family \" + getID() + \" on \" + Calendar.getInstance().getTime().toString() + \".\");\n+            }\n+            con.setAutoCommit(true);\n+            //reset repChanged after successful save\n+            for(MapleFamilyEntry entry : members.values()) {\n+                entry.savedSuccessfully();\n+            }\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not get connection to DB.\");\n+            e.printStackTrace();\n         }\n+    }\n }"}, {"sha": "fed32c302f959d5ade61d75293504e29338ebb5e", "filename": "src/client/MapleFamilyEntitlement.java", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/client/MapleFamilyEntitlement.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/client/MapleFamilyEntitlement.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleFamilyEntitlement.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -0,0 +1,41 @@\n+package client;\n+\n+public enum MapleFamilyEntitlement {\n+    FAMILY_REUINION(1, 300, \"Family Reunion\", \"[Target] Me\\\\n[Effect] Teleport directly to the Family member of your choice.\"),\n+    SUMMON_FAMILY(1, 500, \"Summon Family\", \"[Target] 1 Family member\\\\n[Effect] Summon a Family member of choice to the map you're in.\"),\n+    SELF_DROP_1_5(1, 700, \"My Drop Rate 1.5x (15 min)\", \"[Target] Me\\\\n[Time] 15 min.\\\\n[Effect] Monster drop rate will be increased #c1.5x#.\\\\n*  If the Drop Rate event is in progress, this will be nullified.\"),\n+    SELF_EXP_1_5(1, 800, \"My EXP 1.5x (15 min)\", \"[Target] Me\\\\n[Time] 15 min.\\\\n[Effect] EXP earned from hunting will be increased #c1.5x#.\\\\n* If the EXP event is in progress, this will be nullified.\"),\n+    FAMILY_BONDING(1, 1000, \"Family Bonding (30 min)\", \"[Target] At least 6 Family members online that are below me in the Pedigree\\\\n[Time] 30 min.\\\\n[Effect] Monster drop rate and EXP earned will be increased #c2x#. \\\\n* If the EXP event is in progress, this will be nullified.\"),\n+    SELF_DROP_2(1, 1200, \"My Drop Rate 2x (15 min)\", \"[Target] Me\\\\n[Time] 15 min.\\\\n[Effect] Monster drop rate will be increased #c2x#.\\\\n* If the Drop Rate event is in progress, this will be nullified.\"),\n+    SELF_EXP_2(1, 1500, \"My EXP 2x (15 min)\", \"[Target] Me\\\\n[Time] 15 min.\\\\n[Effect] EXP earned from hunting will be increased #c2x#.\\\\n* If the EXP event is in progress, this will be nullified.\"),\n+    SELF_DROP_2_30MIN(1, 2000, \"My Drop Rate 2x (30 min)\", \"[Target] Me\\\\n[Time] 30 min.\\\\n[Effect] Monster drop rate will be increased #c2x#.\\\\n* If the Drop Rate event is in progress, this will be nullified.\"),\n+    SELF_EXP_2_30MIN(1, 2500, \"My EXP 2x (30 min)\", \"[Target] Me\\\\n[Time] 30 min.\\\\n[Effect] EXP earned from hunting will be increased #c2x#. \\\\n* If the EXP event is in progress, this will be nullified.\"),\n+    PARTY_DROP_2_30MIN(1, 4000, \"My Party Drop Rate 2x (30 min)\", \"[Target] My party\\\\n[Time] 30 min.\\\\n[Effect] Monster drop rate will be increased #c2x#.\\\\n* If the Drop Rate event is in progress, this will be nullified.\"),\n+    PARTY_EXP_2_30MIN(1, 5000, \"My Party EXP 2x (30 min)\", \"[Target] My party\\\\n[Time] 30 min.\\\\n[Effect] EXP earned from hunting will be increased #c2x#.\\\\n* If the EXP event is in progress, this will be nullified.\");\n+    \n+    private final int usageLimit, repCost;\n+    private final String name, description;\n+    \n+    private MapleFamilyEntitlement(int usageLimit, int repCost, String name, String description) {\n+        this.usageLimit = usageLimit;\n+        this.repCost = repCost;\n+        this.name = name;\n+        this.description = description;\n+    }\n+    \n+    public int getUsageLimit() {\n+        return usageLimit;\n+    }\n+    \n+    public int getRepCost() {\n+        return repCost;\n+    }\n+    \n+    public String getName() {\n+        return name;\n+    }\n+    \n+    public String getDescription() {\n+        return description;\n+    }\n+}"}, {"sha": "82858ae131d445aeb7dc0f2c4b00478685baf7de", "filename": "src/client/MapleFamilyEntry.java", "status": "modified", "additions": 482, "deletions": 35, "changes": 517, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/client/MapleFamilyEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/client/MapleFamilyEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleFamilyEntry.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -1,8 +1,6 @@\n /*\n-\tThis file is part of the OdinMS Maple Story Server\n-    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n-\t\t       Matthias Butz <matze@odinms.de>\n-\t\t       Jan Christian Meyer <vimes@odinms.de>\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n \n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU Affero General Public License as\n@@ -21,33 +19,210 @@\n */\n package client;\n \n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import net.server.Server;\n+import tools.DatabaseConnection;\n+import tools.FilePrinter;\n+import tools.MaplePacketCreator;\n+import tools.Pair;\n+\n+/**\n+ * @author Ubaware\n+ */\n+\n public class MapleFamilyEntry {\n-    private int familyId;\n-    private int rank, reputation, totalReputation, todaysRep, totalJuniors, juniors, chrid;\n-    private String familyName;\n+    private final int characterID;\n+    private volatile MapleFamily family;\n+    private volatile MapleCharacter character;\n+\n+    private volatile MapleFamilyEntry senior;\n+    private final MapleFamilyEntry[] juniors = new MapleFamilyEntry[2];\n+    private final int[] entitlements = new int[11];\n+    private volatile int reputation, totalReputation;\n+    private volatile int todaysRep, repsToSenior; //both are daily values\n+    private volatile int totalJuniors, totalSeniors;\n+    \n+    private volatile int generation;\n+    \n+    private volatile boolean repChanged; //used to ignore saving unchanged rep values\n+\n+    // cached values for offline players\n+    private String charName;\n+    private int level;\n+    private MapleJob job;\n+\n+    public MapleFamilyEntry(MapleFamily family, int characterID, String charName, int level, MapleJob job) {\n+        this.family = family;\n+        this.characterID = characterID;\n+        this.charName = charName;\n+        this.level = level;\n+        this.job = job;\n+    }\n+\n+    public MapleCharacter getChr() {\n+        return character;\n+    }\n+\n+    public void setCharacter(MapleCharacter newCharacter) {\n+        if(newCharacter == null) cacheOffline(newCharacter);\n+        else newCharacter.setFamilyEntry(this);\n+        this.character = newCharacter;\n+    }\n+\n+    private void cacheOffline(MapleCharacter chr) {\n+        if(chr != null) {\n+            charName = chr.getName();\n+            level = chr.getLevel();\n+            job = chr.getJob();\n+        }\n+    }\n+    \n+    public synchronized void join(MapleFamilyEntry senior) {\n+        if(senior == null || getSenior() != null) return;\n+        MapleFamily oldFamily = getFamily();\n+        MapleFamily newFamily = senior.getFamily();\n+        setSenior(senior, false);\n+        addSeniorCount(newFamily.getTotalGenerations(), newFamily); //count will be overwritten by doFullCount()\n+        newFamily.getLeader().doFullCount(); //easier than keeping track of numbers\n+        oldFamily.setMessage(null, true);\n+        newFamily.addEntryTree(this);\n+        Server.getInstance().getWorld(oldFamily.getWorld()).removeFamily(oldFamily.getID());\n+        \n+        //db\n+        try(Connection con = DatabaseConnection.getConnection()) {\n+            con.setAutoCommit(false);\n+            boolean success = updateDBChangeFamily(con, getChrId(), newFamily.getID(), senior.getChrId());\n+            for(MapleFamilyEntry junior : juniors) { // better to duplicate this than the SQL code\n+                if(junior != null) {\n+                    success = junior.updateNewFamilyDB(con); // recursively updates juniors in db\n+                    if(!success) break;\n+                }\n+            }\n+            if(!success) {\n+                con.rollback();\n+                FilePrinter.printError(FilePrinter.FAMILY_ERROR, \"Could not absorb \" + oldFamily.getName() + \" family into \" + newFamily.getName() + \" family. (SQL ERROR)\");\n+            }\n+            con.setAutoCommit(true);\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not get connection to DB.\");\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public synchronized void fork() {\n+        MapleFamily oldFamily = getFamily();\n+        MapleFamilyEntry oldSenior = getSenior();\n+        family = new MapleFamily(-1, oldFamily.getWorld());\n+        Server.getInstance().getWorld(family.getWorld()).addFamily(family.getID(), family);\n+        setSenior(null, false);\n+        family.setLeader(this);\n+        addSeniorCount(-getTotalSeniors(), family);\n+        setTotalSeniors(0);\n+        if(oldSenior != null) {\n+            oldSenior.addJuniorCount(-getTotalJuniors());\n+            oldSenior.removeJunior(this);\n+            oldFamily.getLeader().doFullCount();\n+        }\n+        oldFamily.removeEntryBranch(this);\n+        family.addEntryTree(this);\n+        this.repsToSenior = 0;\n+        this.repChanged = true;\n+        family.setMessage(\"\", true);\n+        doFullCount(); //to make sure all counts are correct\n+        // update db\n+        try(Connection con = DatabaseConnection.getConnection()) {\n+            con.setAutoCommit(false);\n \n-    public int getId() {\n-        return familyId;\n+            boolean success = updateDBChangeFamily(con, getChrId(), getFamily().getID(), 0);\n+\n+            for(MapleFamilyEntry junior : juniors) { // better to duplicate this than the SQL code\n+                if(junior != null) {\n+                    success = junior.updateNewFamilyDB(con); // recursively updates juniors in db\n+                    if(!success) break;\n+                }\n+            }\n+            if(!success) {\n+                con.rollback();\n+                FilePrinter.printError(FilePrinter.FAMILY_ERROR, \"Could not fork family with new leader \" + getName() + \". (Old senior : \" + oldSenior.getName() + \", leader :\" + oldFamily.getLeader().getName() + \")\");\n+            }\n+            con.setAutoCommit(true);\n+            \n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not get connection to DB.\");\n+            e.printStackTrace();\n+        }\n     }\n \n-    public void setFamilyId(int familyId) {\n-        this.familyId = familyId;\n+    private synchronized boolean updateNewFamilyDB(Connection con) {\n+        if(!updateFamilyEntryDB(con, getChrId(), getFamily().getID())) return false;\n+        if(!updateCharacterFamilyDB(con, getChrId(), getFamily().getID(), true)) return false;\n+\n+        for(MapleFamilyEntry junior : juniors) {\n+            if(junior != null) {\n+                if(!junior.updateNewFamilyDB(con)) return false;\n+            }\n+        }\n+        return true;\n     }\n \n-    public int getRank() {\n-        return rank;\n+    private static boolean updateFamilyEntryDB(Connection con, int cid, int familyid) {\n+        try(PreparedStatement ps = con.prepareStatement(\"UPDATE family_character SET familyid = ? WHERE cid = ?\")) {\n+            ps.setInt(1, familyid);\n+            ps.setInt(2, cid);\n+            ps.executeUpdate();\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not update family id in 'family_character' for character id \" + cid + \". (fork)\");\n+            e.printStackTrace();\n+            return false;\n+        }\n+        return true;\n     }\n \n-    public void setRank(int rank) {\n-        this.rank = rank;\n+    private synchronized void addSeniorCount(int seniorCount, MapleFamily newFamily) { // traverses tree and subtracts seniors and updates family\n+        if(newFamily != null) this.family = newFamily;\n+        setTotalSeniors(getTotalSeniors() + seniorCount);\n+        this.generation += seniorCount;\n+        for(MapleFamilyEntry junior : juniors) {\n+            if(junior != null) junior.addSeniorCount(seniorCount, newFamily);\n+        }\n+    }\n+\n+    private synchronized void addJuniorCount(int juniorCount) { // climbs tree and adds junior count\n+        setTotalJuniors(getTotalJuniors() + juniorCount);\n+        MapleFamilyEntry senior = getSenior();\n+        if(senior != null) senior.addJuniorCount(juniorCount);\n+    }\n+\n+    public MapleFamily getFamily() {\n+        return family;\n     }\n \n     public int getChrId() {\n-        return chrid;\n+        return characterID;\n+    }\n+\n+    public String getName() {\n+        MapleCharacter chr = character;\n+        if(chr != null) return chr.getName();\n+        else return charName;\n+    }\n+\n+    public int getLevel() {\n+        MapleCharacter chr = character;\n+        if(chr != null) return chr.getLevel();\n+        else return level;\n     }\n \n-    public void setChrId(int chrid) {\n-        this.chrid = chrid;\n+    public MapleJob getJob() {\n+        MapleCharacter chr = character;\n+        if(chr != null) return chr.getJob();\n+        else return job;\n     }\n \n     public int getReputation() {\n@@ -59,16 +234,182 @@ public int getTodaysRep() {\n     }\n \n     public void setReputation(int reputation) {\n+        if(reputation != this.reputation) this.repChanged = true;\n         this.reputation = reputation;\n     }\n \n     public void setTodaysRep(int today) {\n+        if(today != todaysRep) this.repChanged = true;\n         this.todaysRep = today;\n     }\n-\n-    public void gainReputation(int gain) {\n+    \n+    public int getRepsToSenior() {\n+        return repsToSenior;\n+    }\n+    \n+    public void setRepsToSenior(int reputation) {\n+        if(reputation != this.repsToSenior) this.repChanged = true;\n+        this.repsToSenior = reputation;\n+    }\n+    \n+    public void gainReputation(int gain, boolean countTowardsTotal) {\n+        gainReputation(gain, countTowardsTotal, this);\n+    }\n+    \n+    private void gainReputation(int gain, boolean countTowardsTotal, MapleFamilyEntry from) {\n+        if(gain != 0) repChanged = true;\n         this.reputation += gain;\n-        this.totalReputation += gain;\n+        this.todaysRep += gain;\n+        if(gain > 0 && countTowardsTotal) {\n+            this.totalReputation += gain;\n+        }\n+        MapleCharacter chr = getChr();\n+        if(chr != null) chr.announce(MaplePacketCreator.sendGainRep(gain, from != null ? from.getName() : \"\"));\n+    }\n+\n+    public void giveReputationToSenior(int gain, boolean includeSuperSenior) {\n+        int actualGain = gain;\n+        MapleFamilyEntry senior = getSenior();\n+        if(senior != null && senior.getLevel() < getLevel() && gain > 0) actualGain /= 2; //don't halve negative values\n+        if(senior != null) {\n+            senior.gainReputation(actualGain, true, this);\n+            if(actualGain > 0) {\n+                this.repsToSenior += actualGain;\n+                this.repChanged = true;\n+            }\n+            if(includeSuperSenior) {\n+                senior = senior.getSenior();\n+                if(senior != null) {\n+                    senior.gainReputation(actualGain, true, this);\n+                }\n+            }\n+        }\n+    }\n+\n+    public int getTotalReputation() {\n+        return totalReputation;\n+    }\n+\n+    public void setTotalReputation(int totalReputation) {\n+        if(totalReputation != this.totalReputation) this.repChanged = true;\n+        this.totalReputation = totalReputation;\n+    }\n+\n+    public MapleFamilyEntry getSenior() {\n+        return senior;\n+    }\n+\n+    public synchronized boolean setSenior(MapleFamilyEntry senior, boolean save) {\n+        if(this.senior == senior) return false;\n+        MapleFamilyEntry oldSenior = this.senior;\n+        this.senior = senior;\n+        if(senior != null) {\n+            if(senior.addJunior(this)) {\n+                if(save) {\n+                    updateDBChangeFamily(getChrId(), senior.getFamily().getID(), senior.getChrId());\n+                }\n+                if(this.repsToSenior != 0) this.repChanged = true;\n+                this.repsToSenior = 0;                \n+                this.addSeniorCount(1, null);\n+                this.setTotalSeniors(senior.getTotalSeniors() + 1);\n+                return true;\n+            }\n+        } else {\n+            if(oldSenior != null) {\n+                oldSenior.removeJunior(this);\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private static boolean updateDBChangeFamily(int cid, int familyid, int seniorid) {\n+        try(Connection con = DatabaseConnection.getConnection()) {\n+            return updateDBChangeFamily(con, cid, familyid, seniorid);\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not get connection to DB.\");\n+            e.printStackTrace();\n+            return false;\n+        }\n+    }\n+\n+    private static boolean updateDBChangeFamily(Connection con, int cid, int familyid, int seniorid) {\n+        try(PreparedStatement ps = con.prepareStatement(\"UPDATE family_character SET familyid = ?, seniorid = ?, reptosenior = 0 WHERE cid = ?\")) {\n+            ps.setInt(1, familyid);\n+            ps.setInt(2, seniorid);\n+            ps.setInt(3, cid);\n+            ps.executeUpdate();\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not update seniorid in 'family_character' for character id \" + cid + \".\");\n+            e.printStackTrace();\n+            return false;\n+        }\n+        return updateCharacterFamilyDB(con, cid, familyid, false);\n+    }\n+\n+    private static boolean updateCharacterFamilyDB(Connection con, int charid, int familyid, boolean fork) {\n+        try(PreparedStatement ps = con.prepareStatement(\"UPDATE characters SET familyid = ? WHERE id = ?\")) {\n+            ps.setInt(1, familyid);\n+            ps.setInt(2, charid);\n+            ps.executeUpdate();\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not update familyid in 'characters' for character id \" + charid + \" when changing family. \" + (fork ? \"(fork)\" : \"\"));\n+            e.printStackTrace();\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    public List<MapleFamilyEntry> getJuniors() {\n+        return Collections.unmodifiableList(Arrays.asList(juniors));\n+    }\n+    \n+    public MapleFamilyEntry getOtherJunior(MapleFamilyEntry junior) {\n+        if(juniors[0] == junior) return juniors[1];\n+        else if(juniors[1] == junior) return juniors[0];\n+        return null;\n+    }\n+\n+    public int getJuniorCount() { //close enough to be relatively consistent to multiple threads (and the result is not vital)\n+        int juniorCount = 0;\n+        if(juniors[0] != null) juniorCount++;\n+        if(juniors[1] != null) juniorCount++;\n+        return juniorCount;\n+    }\n+\n+    public synchronized boolean addJunior(MapleFamilyEntry newJunior) {\n+        for(int i = 0; i < juniors.length; i++) {\n+            if(juniors[i] == null) { // successfully add new junior to family\n+                juniors[i] = newJunior;\n+                addJuniorCount(1);\n+                getFamily().addEntry(newJunior);\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public synchronized boolean isJunior(MapleFamilyEntry entry) { //require locking since result accuracy is vital\n+        if(juniors[0] == entry) return true;\n+        else if(juniors[1] == entry) return true;\n+        return false;\n+    }\n+\n+    public synchronized boolean removeJunior(MapleFamilyEntry junior) {\n+        for(int i = 0; i < juniors.length; i++) {\n+            if(juniors[i] == junior) {\n+                juniors[i] = null;\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public int getTotalSeniors() {\n+        return totalSeniors;\n+    }\n+\n+    public void setTotalSeniors(int totalSeniors) {\n+        this.totalSeniors = totalSeniors;\n     }\n \n     public int getTotalJuniors() {\n@@ -78,28 +419,134 @@ public int getTotalJuniors() {\n     public void setTotalJuniors(int totalJuniors) {\n         this.totalJuniors = totalJuniors;\n     }\n-\n-    public int getJuniors() {\n-        return juniors;\n+    \n+    public void announceToSenior(byte[] packet, boolean includeSuperSenior) {\n+        MapleFamilyEntry senior = getSenior();\n+        if(senior != null) {\n+            MapleCharacter seniorChr = senior.getChr();\n+            if(seniorChr != null) seniorChr.announce(packet);\n+            senior = senior.getSenior();\n+            if(includeSuperSenior && senior != null) {\n+                seniorChr = senior.getChr();\n+                if(seniorChr != null) seniorChr.announce(packet);\n+            }\n+        }\n     }\n-\n-    public void setJuniors(int juniors) {\n-        this.juniors = juniors;\n+    \n+    public void updateSeniorFamilyInfo(boolean includeSuperSenior) {\n+        MapleFamilyEntry senior = getSenior();\n+        if(senior != null) {\n+            MapleCharacter seniorChr = senior.getChr();\n+            if(seniorChr != null) seniorChr.announce(MaplePacketCreator.getFamilyInfo(senior));\n+            senior = senior.getSenior();\n+            if(includeSuperSenior && senior != null) {\n+                seniorChr = senior.getChr();\n+                if(seniorChr != null) seniorChr.announce(MaplePacketCreator.getFamilyInfo(senior));\n+            }\n+        }\n     }\n \n-    public void setFamilyName(String familyName) {\n-        this.familyName = familyName;\n+    /**\n+     * Traverses entire family tree to update senior/junior counts. Call on leader.\n+     */\n+    public synchronized void doFullCount() {\n+        Pair<Integer, Integer> counts = this.traverseAndUpdateCounts(0);\n+        getFamily().setTotalGenerations(counts.getLeft() + 1);\n     }\n \n-    public String getFamilyName() {\n-        return familyName;\n+    private Pair<Integer, Integer> traverseAndUpdateCounts(int seniors) { // recursion probably limits family size, but it should handle a depth of a few thousand\n+        setTotalSeniors(seniors);\n+        this.generation = seniors;\n+        int juniorCount = 0;\n+        int highestGeneration = this.generation;\n+        for(MapleFamilyEntry entry : juniors) {\n+            if(entry != null) {\n+                Pair<Integer, Integer> counts = entry.traverseAndUpdateCounts(seniors + 1);\n+                juniorCount += counts.getRight(); //total juniors\n+                if(counts.getLeft() > highestGeneration) highestGeneration = counts.getLeft();\n+            }\n+        }\n+        setTotalJuniors(juniorCount);\n+        return new Pair<>(highestGeneration, juniorCount); //creating new objects to return is a bit inefficient, but cleaner than packing into a long\n     }\n \n-    public int getTotalReputation() {\n-        return totalReputation;\n+    public boolean useEntitlement(MapleFamilyEntitlement entitlement) {\n+        int id = entitlement.ordinal();\n+        if(entitlements[id] >= 1) return false;\n+        try(Connection con = DatabaseConnection.getConnection(); PreparedStatement ps = con.prepareStatement(\"INSERT INTO family_entitlement (entitlementid, charid, timestamp) VALUES (?, ?, ?)\")) {\n+            ps.setInt(1, id);\n+            ps.setInt(2, getChrId());\n+            ps.setLong(3, System.currentTimeMillis());\n+            ps.executeUpdate();\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not insert new row in 'family_entitlement' for character \" + getName() + \".\");\n+            e.printStackTrace();\n+        }\n+        entitlements[id]++;\n+        return true;\n+    }\n+    \n+    public boolean refundEntitlement(MapleFamilyEntitlement entitlement) {\n+        int id = entitlement.ordinal();\n+        try(Connection con = DatabaseConnection.getConnection(); PreparedStatement ps = con.prepareStatement(\"DELETE FROM family_entitlement WHERE entitlementid = ? AND charid = ?\")) {\n+            ps.setInt(1, id);\n+            ps.setInt(2, getChrId());\n+            ps.executeUpdate();\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not refund family entitlement \\\"\" + entitlement.getName() + \"\\\" for character \" + getName() + \".\");\n+            e.printStackTrace();\n+        }\n+        entitlements[id] = 0;\n+        return true;\n     }\n \n-    public void setTotalReputation(int totalReputation) {\n-        this.totalReputation = totalReputation;\n+    public boolean isEntitlementUsed(MapleFamilyEntitlement entitlement) {\n+        return entitlements[entitlement.ordinal()] >= 1;\n+    }\n+    \n+    public int getEntitlementUsageCount(MapleFamilyEntitlement entitlement) {\n+        return entitlements[entitlement.ordinal()];\n+    }\n+    \n+    public void setEntitlementUsed(int id) {\n+        entitlements[id]++;\n+    }\n+    \n+    public void resetEntitlementUsages() {\n+        for(MapleFamilyEntitlement entitlement : MapleFamilyEntitlement.values()) {\n+            entitlements[entitlement.ordinal()] = 0;\n+        }\n+    }\n+    \n+    public boolean saveReputation() {\n+        if(!repChanged) return true;\n+        try(Connection con = DatabaseConnection.getConnection()) {\n+            return saveReputation(con);\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not get connection to DB.\");\n+            e.printStackTrace();\n+            return false;\n+        }\n+    }\n+    \n+    public boolean saveReputation(Connection con) {\n+        if(!repChanged) return true;\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE family_character SET reputation = ?, todaysrep = ?, totalreputation = ?, reptosenior = ? WHERE cid = ?\")) {\n+            ps.setInt(1, getReputation());\n+            ps.setInt(2, getTodaysRep());\n+            ps.setInt(3, getTotalReputation());\n+            ps.setInt(4, getRepsToSenior());\n+            ps.setInt(5, getChrId());\n+            ps.executeUpdate();\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Failed to autosave rep to 'family_character' for charid \" + getChrId());\n+            e.printStackTrace();\n+            return false;\n+        }\n+        return true;\n+    }\n+    \n+    public void savedSuccessfully() {\n+        this.repChanged = false;\n     }\n }"}, {"sha": "bfc9936848d255104cf427019ec2bc916d03a7e1", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -71,7 +71,7 @@\n     public static final boolean USE_AUTOHIDE_GM = false;            //When enabled, GMs are automatically hidden when joining. Thanks to Steven Deblois (steven1152).\n     public static final boolean USE_BUYBACK_SYSTEM = true;          //Enables the HeavenMS-builtin buyback system, to be used by dead players when clicking the MTS button.\n     public static final boolean USE_FIXED_RATIO_HPMP_UPDATE = true; //Enables the HeavenMS-builtin HPMP update based on the current pool to max pool ratio.\n-    public static final boolean USE_FAMILY_SYSTEM = false;\n+    public static final boolean USE_FAMILY_SYSTEM = true;\n     public static final boolean USE_DUEY = true;\n     public static final boolean USE_RANDOMIZE_HPMP_GAIN = true;     //Enables randomizing on MaxHP/MaxMP gains and INT accounting for the MaxMP gain on level up.\n     public static final boolean USE_STORAGE_ITEM_SORT = true;       //Enables storage \"Arrange Items\" feature.\n@@ -239,6 +239,12 @@\n     public static final int EXPAND_GUILD_BASE_COST = 500000;\n     public static final int EXPAND_GUILD_TIER_COST = 1000000;\n     public static final int EXPAND_GUILD_MAX_COST = 5000000;\n+    \n+    //Family Configuration\n+    public static final int FAMILY_REP_PER_KILL = 4;             //Amount of rep gained per monster kill.\n+    public static final int FAMILY_REP_PER_BOSS_KILL = 20;       //Amount of rep gained per boss kill.\n+    public static final int FAMILY_REP_PER_LEVELUP = 200;        //Amount of rep gained upon leveling up.\n+    public static final int FAMILY_MAX_GENERATIONS = 1000;       //Maximum depth of family tree. (Distance from leader to farthest junior)\n \n     //Equipment Configuration\n     public static final boolean USE_EQUIPMNT_LVLUP_SLOTS = true;//Equips can upgrade slots at level up."}, {"sha": "ad7dade738fc65241b49646d5945ed35ed3a8985", "filename": "src/net/PacketProcessor.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/PacketProcessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/PacketProcessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/PacketProcessor.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -223,8 +223,14 @@ public void reset(int channel) {\n             registerHandler(RecvOpcode.MONSTER_BOOK_COVER, new MonsterBookCoverHandler());\n             registerHandler(RecvOpcode.AUTO_DISTRIBUTE_AP, new AutoAssignHandler());\n             registerHandler(RecvOpcode.MAKER_SKILL, new MakerSkillHandler());\n+            registerHandler(RecvOpcode.OPEN_FAMILY_PEDIGREE, new OpenFamilyPedigreeHandler());\n+            registerHandler(RecvOpcode.OPEN_FAMILY, new OpenFamilyHandler());\n             registerHandler(RecvOpcode.ADD_FAMILY, new FamilyAddHandler());\n+            registerHandler(RecvOpcode.SEPARATE_FAMILY_BY_SENIOR, new FamilySeparateHandler());\n+            registerHandler(RecvOpcode.SEPARATE_FAMILY_BY_JUNIOR, new FamilySeparateHandler());\n             registerHandler(RecvOpcode.USE_FAMILY, new FamilyUseHandler());\n+            registerHandler(RecvOpcode.CHANGE_FAMILY_MESSAGE, new FamilyPreceptsHandler());\n+            registerHandler(RecvOpcode.FAMILY_SUMMON_RESPONSE, new FamilySummonResponseHandler());\n             registerHandler(RecvOpcode.USE_HAMMER, new UseHammerHandler());\n             registerHandler(RecvOpcode.SCRIPTED_ITEM, new ScriptedItemHandler());\n             registerHandler(RecvOpcode.TOUCHING_REACTOR, new TouchReactorHandler());"}, {"sha": "98fab2ed949e8e8a8293f7214d96d6765f68e528", "filename": "src/net/opcodes/RecvOpcode.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/opcodes/RecvOpcode.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/opcodes/RecvOpcode.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/opcodes/RecvOpcode.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -145,10 +145,15 @@\n     WEDDING_TALK_MORE(0x8B),\n     ALLIANCE_OPERATION(0x8F),\n     DENY_ALLIANCE_REQUEST(0x90),\n+    OPEN_FAMILY_PEDIGREE(0x91),\n     OPEN_FAMILY(0x92),\n     ADD_FAMILY(0x93),\n+    SEPARATE_FAMILY_BY_SENIOR(0x94),\n+    SEPARATE_FAMILY_BY_JUNIOR(0x95),\n     ACCEPT_FAMILY(0x96),\n     USE_FAMILY(0x97),\n+    CHANGE_FAMILY_MESSAGE(0x98),\n+    FAMILY_SUMMON_RESPONSE(0x99),\n     BBS_OPERATION(0x9B),\n     ENTER_MTS(0x9C),\n     USE_SOLOMON_ITEM(0x9D),"}, {"sha": "bcbeb2eb19d1298ad926cb3a9407dc58429520a6", "filename": "src/net/opcodes/SendOpcode.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/opcodes/SendOpcode.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/opcodes/SendOpcode.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/opcodes/SendOpcode.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -124,7 +124,7 @@\n     FAMILY_JOIN_REQUEST_RESULT(0x62),\n     FAMILY_JOIN_ACCEPTED(0x63),\n     FAMILY_PRIVILEGE_LIST(0x64),\n-    FAMILY_FAMOUS_POINT_INC_RESULT(0x65),\n+    FAMILY_REP_GAIN(0x65),\n     FAMILY_NOTIFY_LOGIN_OR_LOGOUT(0x66), //? is logged in. LOLWUT\n     FAMILY_SET_PRIVILEGE(0x67),\n     FAMILY_SUMMON_REQUEST(0x68),"}, {"sha": "d61f84c94ca1f0a24e7b3922db7d55770622495e", "filename": "src/net/server/Server.java", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/Server.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/Server.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/Server.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -80,6 +80,7 @@\n import org.apache.mina.transport.socket.nio.NioSocketAcceptor;\n \n import client.MapleClient;\n+import client.MapleFamily;\n import client.MapleCharacter;\n import client.SkillFactory;\n import client.command.CommandsExecutor;\n@@ -531,7 +532,7 @@ private static long getTimeLeftForNextHour() {\n         return Math.max(0, nextHour.getTimeInMillis() - System.currentTimeMillis());\n     }\n     \n-    private static long getTimeLeftForNextDay() {\n+    public static long getTimeLeftForNextDay() {\n         Calendar nextDay = Calendar.getInstance();\n         nextDay.add(Calendar.DAY_OF_MONTH, 1);\n         nextDay.set(Calendar.HOUR, 0);\n@@ -947,6 +948,12 @@ public void init() {\n             System.out.println(\"[SEVERE] Syntax error in 'world.ini'.\");\n             System.exit(0);\n         }\n+        \n+        if(ServerConstants.USE_FAMILY_SYSTEM) {\n+            timeToTake = System.currentTimeMillis();\n+            MapleFamily.loadAllFamilies();\n+            System.out.println(\"Families loaded in \" + ((System.currentTimeMillis() - timeToTake) / 1000.0) + \" seconds\\r\\n\");\n+        }\n \n         acceptor.getSessionConfig().setIdleTime(IdleStatus.BOTH_IDLE, 30);\n         acceptor.setHandler(new MapleServerHandler());"}, {"sha": "4bffaa5d5052e30eeecc4ad0e6577eba2cf4b3b9", "filename": "src/net/server/channel/handlers/AcceptFamilyHandler.java", "status": "modified", "additions": 109, "deletions": 7, "changes": 116, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/AcceptFamilyHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/AcceptFamilyHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/AcceptFamilyHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -22,30 +22,132 @@\n package net.server.channel.handlers;\n \n import constants.ServerConstants;\n+\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+\n import client.MapleCharacter;\n import client.MapleClient;\n+import client.MapleFamily;\n+import client.MapleFamilyEntry;\n import net.AbstractMaplePacketHandler;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n+import net.server.coordinator.MapleInviteCoordinator.MapleInviteResult;\n+import tools.DatabaseConnection;\n+import tools.FilePrinter;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n /**\n  *\n  * @author Jay Estrella\n+ * @author Ubaware\n  */\n public final class AcceptFamilyHandler extends AbstractMaplePacketHandler {\n \n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-    \tif (!ServerConstants.USE_FAMILY_SYSTEM){\n-    \t\treturn;\n-    \t}\n-        //System.out.println(slea.toString());\n+        if(!ServerConstants.USE_FAMILY_SYSTEM) {\n+            return;\n+        }\n+        MapleCharacter chr = c.getPlayer();\n         int inviterId = slea.readInt();\n-        //String inviterName = slea.readMapleAsciiString();\n+        slea.readMapleAsciiString();\n+        boolean accept = slea.readByte() != 0;\n+        // String inviterName = slea.readMapleAsciiString();\n         MapleCharacter inviter = c.getWorldServer().getPlayerStorage().getCharacterById(inviterId);\n-        if (inviter != null) {\n-            inviter.getClient().announce(MaplePacketCreator.sendFamilyJoinResponse(true, c.getPlayer().getName()));\n+        if(inviter != null) {\n+            MapleInviteResult inviteResult = MapleInviteCoordinator.answerInvite(InviteType.FAMILY, c.getPlayer().getId(), c.getPlayer(), accept);\n+            if(inviteResult.result == InviteResult.NOT_FOUND) return; //was never invited. (or expired on server only somehow?)\n+            if(accept) {\n+                if(inviter.getFamily() != null) {\n+                    if(chr.getFamily() == null) {\n+                        MapleFamilyEntry newEntry = new MapleFamilyEntry(inviter.getFamily(), chr.getId(), chr.getName(), chr.getLevel(), chr.getJob());\n+                        newEntry.setCharacter(chr);\n+                        if(!newEntry.setSenior(inviter.getFamilyEntry(), true)) {\n+                            inviter.announce(MaplePacketCreator.sendFamilyMessage(1, 0));\n+                            return;\n+                        } else {\n+                            // save\n+                            inviter.getFamily().addEntry(newEntry);\n+                            insertNewFamilyRecord(chr.getId(), inviter.getFamily().getID(), inviter.getId(), false);\n+                        }\n+                    } else { //absorb target family\n+                        MapleFamilyEntry targetEntry = chr.getFamilyEntry();\n+                        MapleFamily targetFamily = targetEntry.getFamily();\n+                        if(targetFamily.getLeader() != targetEntry) return;\n+                        if(inviter.getFamily().getTotalGenerations() + targetFamily.getTotalGenerations() <= ServerConstants.FAMILY_MAX_GENERATIONS) {\n+                            targetEntry.join(inviter.getFamilyEntry());\n+                        } else {\n+                            inviter.announce(MaplePacketCreator.sendFamilyMessage(76, 0));\n+                            chr.announce(MaplePacketCreator.sendFamilyMessage(76, 0));\n+                            return;\n+                        }\n+                    }\n+                } else { // create new family\n+                    if(chr.getFamily() != null && inviter.getFamily() != null && chr.getFamily().getTotalGenerations() + inviter.getFamily().getTotalGenerations() >= ServerConstants.FAMILY_MAX_GENERATIONS) {\n+                        inviter.announce(MaplePacketCreator.sendFamilyMessage(76, 0));\n+                        chr.announce(MaplePacketCreator.sendFamilyMessage(76, 0));\n+                        return;\n+                    }\n+                    MapleFamily newFamily = new MapleFamily(-1, c.getWorld());\n+                    c.getWorldServer().addFamily(newFamily.getID(), newFamily);\n+                    MapleFamilyEntry inviterEntry = new MapleFamilyEntry(newFamily, inviter.getId(), inviter.getName(), inviter.getLevel(), inviter.getJob());\n+                    inviterEntry.setCharacter(inviter);\n+                    newFamily.setLeader(inviter.getFamilyEntry());                    \n+                    newFamily.addEntry(inviterEntry);\n+                    if(chr.getFamily() == null) { //completely new family\n+                        MapleFamilyEntry newEntry = new MapleFamilyEntry(newFamily, chr.getId(), chr.getName(), chr.getLevel(), chr.getJob());\n+                        newEntry.setCharacter(chr);\n+                        newEntry.setSenior(inviterEntry, true);\n+                        // save new family\n+                        insertNewFamilyRecord(inviter.getId(), newFamily.getID(), 0, true);\n+                        insertNewFamilyRecord(chr.getId(), newFamily.getID(), inviter.getId(), false); // char was already saved by setSenior() above\n+                        newFamily.setMessage(\"\", true);\n+                    } else { //new family for inviter, absorb invitee family\n+                        insertNewFamilyRecord(inviter.getId(), newFamily.getID(), 0 , true);\n+                        newFamily.setMessage(\"\", true);\n+                        chr.getFamilyEntry().join(inviterEntry);\n+                    }\n+                }\n+                c.getPlayer().getFamily().broadcast(MaplePacketCreator.sendFamilyJoinResponse(true, c.getPlayer().getName()), c.getPlayer().getId());\n+                c.announce(MaplePacketCreator.getSeniorMessage(inviter.getName()));\n+                c.announce(MaplePacketCreator.getFamilyInfo(chr.getFamilyEntry()));\n+                chr.getFamilyEntry().updateSeniorFamilyInfo(true);\n+            } else {\n+                inviter.announce(MaplePacketCreator.sendFamilyJoinResponse(false, c.getPlayer().getName()));\n+            }\n         }\n         c.announce(MaplePacketCreator.sendFamilyMessage(0, 0));\n     }\n+\n+    private static void insertNewFamilyRecord(int characterID, int familyID, int seniorID, boolean updateChar) {\n+        try(Connection con = DatabaseConnection.getConnection()) {\n+            try(PreparedStatement ps = con.prepareStatement(\"INSERT INTO family_character (cid, familyid, seniorid) VALUES (?, ?, ?)\")) {\n+                ps.setInt(1, characterID);\n+                ps.setInt(2, familyID);\n+                ps.setInt(3, seniorID);\n+                ps.executeUpdate();\n+            } catch(SQLException e) {\n+                FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not save new family record for char id \" + characterID + \".\");\n+                e.printStackTrace();\n+            }\n+            if(updateChar) {\n+                try(PreparedStatement ps = con.prepareStatement(\"UPDATE characters SET familyid = ? WHERE id = ?\")) {\n+                    ps.setInt(1, familyID);\n+                    ps.setInt(2, characterID);\n+                    ps.executeUpdate();\n+                } catch(SQLException e) {\n+                    FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not update 'characters' 'familyid' record for char id \" + characterID + \".\");\n+                    e.printStackTrace();\n+                }\n+            }\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not get connection to DB.\");\n+            e.printStackTrace();\n+        }\n+    }\n }"}, {"sha": "2da154845becc33d8a4cadc8281379f534daab63", "filename": "src/net/server/channel/handlers/DenyPartyRequestHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/DenyPartyRequestHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/DenyPartyRequestHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/DenyPartyRequestHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -41,7 +41,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         if (cfrom != null) {\n             MapleCharacter chr = c.getPlayer();\n             \n-            if (MapleInviteCoordinator.answerInvite(InviteType.PARTY, chr.getId(), cfrom.getPartyId(), false).getLeft() == InviteResult.DENIED) {\n+            if (MapleInviteCoordinator.answerInvite(InviteType.PARTY, chr.getId(), cfrom.getPartyId(), false).result == InviteResult.DENIED) {\n                 chr.updatePartySearchAvailability(chr.getParty() == null);\n                 cfrom.getClient().announce(MaplePacketCreator.partyStatusMessage(23, chr.getName()));\n             }"}, {"sha": "1e22dc46a2e588b30e9f4612432917e6f60e8f9d", "filename": "src/net/server/channel/handlers/FamilyAddHandler.java", "status": "modified", "additions": 25, "deletions": 10, "changes": 35, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/FamilyAddHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/FamilyAddHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/FamilyAddHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -25,29 +25,44 @@\n import client.MapleCharacter;\n import client.MapleClient;\n import net.AbstractMaplePacketHandler;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n /**\n  *\n  * @author Jay Estrella\n+ * @author Ubaware\n  */\n public final class FamilyAddHandler extends AbstractMaplePacketHandler {\n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-    \tif (!ServerConstants.USE_FAMILY_SYSTEM){\n-    \t\treturn;\n-    \t}\n-        System.out.println(slea.toString());\n+        if(!ServerConstants.USE_FAMILY_SYSTEM) {\n+            return;\n+        }\n         String toAdd = slea.readMapleAsciiString();\n         MapleCharacter addChr = c.getChannelServer().getPlayerStorage().getCharacterByName(toAdd);\n-        if (addChr != null) {\n-            addChr.getClient().announce(MaplePacketCreator.sendFamilyInvite(c.getPlayer().getId(), toAdd));\n-            c.getPlayer().dropMessage(\"The invite has been sent.\");\n+        MapleCharacter chr = c.getPlayer();\n+        if(addChr == null) {\n+            c.announce(MaplePacketCreator.sendFamilyMessage(65, 0));\n+        } else if(addChr.getMap() != chr.getMap() || (addChr.isHidden()) && chr.gmLevel() < addChr.gmLevel()) {\n+            c.announce(MaplePacketCreator.sendFamilyMessage(69, 0));\n+        } else if(addChr.getLevel() <= 10) {\n+            c.announce(MaplePacketCreator.sendFamilyMessage(77, 0));\n+        } else if(Math.abs(addChr.getLevel() - chr.getLevel()) > 20) {\n+            c.announce(MaplePacketCreator.sendFamilyMessage(72, 0));\n+        } else if(addChr.getFamily() != null && addChr.getFamily() == chr.getFamily()) { //same family\n+            c.announce(MaplePacketCreator.enableActions());\n+        } else if(MapleInviteCoordinator.hasInvite(InviteType.FAMILY, addChr.getId())) {\n+            c.announce(MaplePacketCreator.sendFamilyMessage(73, 0));\n+        } else if(chr.getFamily() != null && addChr.getFamily() != null && addChr.getFamily().getTotalGenerations() + chr.getFamily().getTotalGenerations() > ServerConstants.FAMILY_MAX_GENERATIONS) {\n+            c.announce(MaplePacketCreator.sendFamilyMessage(76, 0));\n         } else {\n-            c.getPlayer().dropMessage(\"The player cannot be found!\");\n+            MapleInviteCoordinator.createInvite(InviteType.FAMILY, chr, addChr, addChr.getId());\n+            addChr.getClient().announce(MaplePacketCreator.sendFamilyInvite(chr.getId(), chr.getName()));\n+            chr.dropMessage(\"The invite has been sent.\");\n+            c.announce(MaplePacketCreator.enableActions());\n         }\n-        c.announce(MaplePacketCreator.enableActions());\n     }\n }\n-"}, {"sha": "7da34c29f21c32c947790b0d9e1dc803f4f9d9c7", "filename": "src/net/server/channel/handlers/FamilyPreceptsHandler.java", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/FamilyPreceptsHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/FamilyPreceptsHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/FamilyPreceptsHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -0,0 +1,23 @@\n+package net.server.channel.handlers;\n+\n+import client.MapleClient;\n+import client.MapleFamily;\n+import net.AbstractMaplePacketHandler;\n+import tools.MaplePacketCreator;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+public class FamilyPreceptsHandler extends AbstractMaplePacketHandler {\n+\n+    @Override\n+    public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n+        MapleFamily family = c.getPlayer().getFamily();\n+        if(family == null) return;\n+        if(family.getLeader().getChr() != c.getPlayer()) return; //only the leader can set the precepts\n+        String newPrecepts = slea.readMapleAsciiString();\n+        if(newPrecepts.length() > 200) return;\n+        family.setMessage(newPrecepts, true);\n+        //family.broadcastFamilyInfoUpdate(); //probably don't need to broadcast for this?\n+        c.announce(MaplePacketCreator.getFamilyInfo(c.getPlayer().getFamilyEntry()));\n+    }\n+\n+}"}, {"sha": "191ce23a38aa59f74750f8dcbeadac3fc49a8a1a", "filename": "src/net/server/channel/handlers/FamilySeparateHandler.java", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/FamilySeparateHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/FamilySeparateHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/FamilySeparateHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -0,0 +1,78 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.handlers;\n+\n+import client.MapleClient;\n+import client.MapleFamily;\n+import client.MapleFamilyEntry;\n+import constants.ServerConstants;\n+import net.AbstractMaplePacketHandler;\n+import tools.MaplePacketCreator;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+public class FamilySeparateHandler extends AbstractMaplePacketHandler {\n+\n+    @Override\n+    public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n+        if(!ServerConstants.USE_FAMILY_SYSTEM) return;\n+        MapleFamily oldFamily = c.getPlayer().getFamily();\n+        if(oldFamily == null) return;\n+        MapleFamilyEntry forkOn = null;\n+        boolean isSenior;\n+        if(slea.available() > 0) { //packet 0x95 doesn't send id, since there is only one senior\n+            forkOn = c.getPlayer().getFamily().getEntryByID(slea.readInt());\n+            if(!c.getPlayer().getFamilyEntry().isJunior(forkOn)) return; //packet editing?\n+            isSenior = true;\n+        } else {\n+            forkOn = c.getPlayer().getFamilyEntry();\n+            isSenior = false;\n+        }\n+        if(forkOn == null) return;\n+        \n+        MapleFamilyEntry senior = forkOn.getSenior();\n+        if(senior == null) return;\n+        int levelDiff = Math.abs(c.getPlayer().getLevel() - senior.getLevel());\n+        int cost = 2500 * levelDiff;\n+        cost += levelDiff * levelDiff;\n+        if(c.getPlayer().getMeso() < cost) {\n+            c.announce(MaplePacketCreator.sendFamilyMessage(isSenior ? 81 : 80, cost));\n+            return;\n+        }\n+        c.getPlayer().gainMeso(-cost);\n+        int repCost = separateRepCost(forkOn);\n+        senior.gainReputation(-repCost, false);\n+        if(senior.getSenior() != null) senior.getSenior().gainReputation(-(repCost/2), false);\n+        forkOn.announceToSenior(MaplePacketCreator.serverNotice(5, forkOn.getName() + \" has left the family.\"), true);\n+        forkOn.fork();\n+        c.announce(MaplePacketCreator.getFamilyInfo(forkOn)); //pedigree info will be requested by the client if the window is open\n+        forkOn.updateSeniorFamilyInfo(true);\n+        c.announce(MaplePacketCreator.sendFamilyMessage(1, 0));\n+    }\n+    \n+    \n+    private static int separateRepCost(MapleFamilyEntry junior) {\n+        int level = junior.getLevel();\n+        int ret = level / 20;\n+        ret += 10;\n+        ret *= level;\n+        ret *= 2;\n+        return ret;\n+    }\n+}"}, {"sha": "96ccee2c44143bdea1c1a6ac15af081c28264d81", "filename": "src/net/server/channel/handlers/FamilySummonResponseHandler.java", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/FamilySummonResponseHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/FamilySummonResponseHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/FamilySummonResponseHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -0,0 +1,40 @@\n+package net.server.channel.handlers;\n+\n+import client.MapleCharacter;\n+import client.MapleClient;\n+import client.MapleFamilyEntitlement;\n+import client.MapleFamilyEntry;\n+import constants.ServerConstants;\n+import net.AbstractMaplePacketHandler;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n+import net.server.coordinator.MapleInviteCoordinator.MapleInviteResult;\n+import server.maps.MapleMap;\n+import tools.MaplePacketCreator;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+public class FamilySummonResponseHandler extends AbstractMaplePacketHandler {\n+\n+    @Override\n+    public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n+        if(!ServerConstants.USE_FAMILY_SYSTEM) return;\n+        slea.readMapleAsciiString(); //family name\n+        boolean accept = slea.readByte() != 0;\n+        MapleInviteResult inviteResult = MapleInviteCoordinator.answerInvite(InviteType.FAMILY_SUMMON, c.getPlayer().getId(), c.getPlayer(), accept);\n+        if(inviteResult.result == InviteResult.NOT_FOUND) return;\n+        MapleCharacter inviter = inviteResult.from;\n+        MapleFamilyEntry inviterEntry = inviter.getFamilyEntry();\n+        if(inviterEntry == null) return;\n+        MapleMap map = (MapleMap) inviteResult.params[0];\n+        if(accept && inviter.getMap() == map) { //cancel if inviter has changed maps\n+            c.getPlayer().changeMap(map, map.getPortal(0));\n+        } else {\n+            inviterEntry.refundEntitlement(MapleFamilyEntitlement.SUMMON_FAMILY);\n+            inviterEntry.gainReputation(MapleFamilyEntitlement.SUMMON_FAMILY.getRepCost(), false); //refund rep cost if declined\n+            inviter.announce(MaplePacketCreator.getFamilyInfo(inviterEntry));\n+            inviter.dropMessage(5, c.getPlayer().getName() + \" has denied the summon request.\");\n+        }\n+    }\n+\n+}"}, {"sha": "dd33793e6d19678507c72d821cc4c20b5ab137f3", "filename": "src/net/server/channel/handlers/FamilyUseHandler.java", "status": "modified", "additions": 95, "deletions": 56, "changes": 151, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/FamilyUseHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/FamilyUseHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/FamilyUseHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -21,82 +21,121 @@\n */\n package net.server.channel.handlers;\n \n-import constants.ServerConstants;\n import client.MapleCharacter;\n import client.MapleClient;\n+import client.MapleFamilyEntitlement;\n+import client.MapleFamilyEntry;\n+import constants.ServerConstants;\n import net.AbstractMaplePacketHandler;\n-import net.opcodes.SendOpcode;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n+import server.maps.FieldLimit;\n+import server.maps.MapleMap;\n+import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n-import tools.data.output.MaplePacketLittleEndianWriter;\n \n /**\n  *\n  * @author Moogra\n+ * @author Ubaware\n  */\n public final class FamilyUseHandler extends AbstractMaplePacketHandler {\n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-    \tif (!ServerConstants.USE_FAMILY_SYSTEM){\n-    \t\treturn;\n-    \t}\n-        int[] repCost = {3, 5, 7, 8, 10, 12, 15, 20, 25, 40, 50};\n-        final int type = slea.readInt();\n+        if(!ServerConstants.USE_FAMILY_SYSTEM) {\n+            return;\n+        }\n+        MapleFamilyEntitlement type = MapleFamilyEntitlement.values()[slea.readInt()];\n+        int cost = type.getRepCost();\n+        MapleFamilyEntry entry = c.getPlayer().getFamilyEntry();\n+        if(entry.getReputation() < cost || entry.isEntitlementUsed(type)) {\n+            return; // shouldn't even be able to request it\n+        }\n+        c.announce(MaplePacketCreator.getFamilyInfo(entry));\n         MapleCharacter victim;\n-        if (type == 0 || type == 1) {\n+        if(type == MapleFamilyEntitlement.FAMILY_REUINION || type == MapleFamilyEntitlement.SUMMON_FAMILY) {\n             victim = c.getChannelServer().getPlayerStorage().getCharacterByName(slea.readMapleAsciiString());\n-            if (victim != null) {\n-                if (type == 0) {\n-                    c.getPlayer().changeMap(victim.getMap(), victim.getMap().getPortal(0));\n+            if(victim != null && victim != c.getPlayer()) {\n+                if(victim.getFamily() == c.getPlayer().getFamily()) {\n+                    MapleMap targetMap = victim.getMap();\n+                    MapleMap ownMap = c.getPlayer().getMap();\n+                    if(targetMap != null) {\n+                        if(type == MapleFamilyEntitlement.FAMILY_REUINION) {\n+                            if(!FieldLimit.CANNOTMIGRATE.check(ownMap.getFieldLimit()) && !FieldLimit.CANNOTVIPROCK.check(targetMap.getFieldLimit())\n+                                    && (targetMap.getForcedReturnId() == 999999999 || targetMap.getId() < 100000000) && targetMap.getEventInstance() == null) {\n+                                \n+                                c.getPlayer().changeMap(victim.getMap(), victim.getMap().getPortal(0));\n+                                useEntitlement(entry, type);\n+                            } else {\n+                                c.announce(MaplePacketCreator.sendFamilyMessage(75, 0)); // wrong message, but close enough. (client should check this first anyway)\n+                                return;\n+                            }\n+                        } else {\n+                            if(!FieldLimit.CANNOTMIGRATE.check(targetMap.getFieldLimit()) && !FieldLimit.CANNOTVIPROCK.check(ownMap.getFieldLimit()) \n+                                    && (ownMap.getForcedReturnId() == 999999999 || ownMap.getId() < 100000000) && ownMap.getEventInstance() == null) {\n+                                \n+                                if(MapleInviteCoordinator.hasInvite(InviteType.FAMILY_SUMMON, victim.getId())) {\n+                                    c.announce(MaplePacketCreator.sendFamilyMessage(74, 0));\n+                                    return;\n+                                }\n+                                MapleInviteCoordinator.createInvite(InviteType.FAMILY_SUMMON, c.getPlayer(), victim, victim.getId(), c.getPlayer().getMap());\n+                                victim.announce(MaplePacketCreator.sendFamilySummonRequest(c.getPlayer().getFamily().getName(), c.getPlayer().getName()));\n+                                useEntitlement(entry, type);\n+                            } else {\n+                                c.announce(MaplePacketCreator.sendFamilyMessage(75, 0));\n+                                return;\n+                            }\n+                        }\n+                    }\n                 } else {\n-                    victim.changeMap(c.getPlayer().getMap(), c.getPlayer().getMap().getPortal(0));\n+                    c.announce(MaplePacketCreator.sendFamilyMessage(67, 0));\n                 }\n-            } else {\n-                return;\n             }\n+        } else if(type == MapleFamilyEntitlement.FAMILY_BONDING) {\n+            //not implemented\n         } else {\n-            int erate = type == 3 ? 150 : (type == 4 || type == 6 || type == 8 || type == 10 ? 200 : 100);\n-            int drate = type == 2 ? 150 : (type == 4 || type == 5 || type == 7 || type == 9 ? 200 : 100);\n-            if (type > 8) {\n-            } else {\n-                c.announce(useRep(drate == 100 ? 2 : (erate == 100 ? 3 : 4), type, erate, drate, ((type > 5 || type == 4) ? 2 : 1) * 15 * 60 * 1000));\n-            }\n+            boolean party = false;\n+            boolean isExp = false;\n+            float rate = 1.5f;\n+            int duration = 15;\n+            do {\n+                switch(type) {\n+                case PARTY_EXP_2_30MIN:\n+                    party = true;\n+                    isExp = true;\n+                    type = MapleFamilyEntitlement.SELF_EXP_2_30MIN;\n+                    continue;\n+                case PARTY_DROP_2_30MIN:\n+                    party = true;\n+                    type = MapleFamilyEntitlement.SELF_DROP_2_30MIN;\n+                    continue;\n+                case SELF_DROP_2_30MIN:\n+                    duration = 30;\n+                case SELF_DROP_2:\n+                    rate = 2.0f;\n+                case SELF_DROP_1_5:\n+                    break;\n+                case SELF_EXP_2_30MIN:\n+                    duration = 30;\n+                case SELF_EXP_2:\n+                    rate = 2.0f;\n+                case SELF_EXP_1_5:\n+                    isExp = true;\n+                default:\n+                    break;\n+                }\n+                break;\n+            } while(true);\n+            //not implemented\n         }\n-        c.getPlayer().getFamily().getMember(c.getPlayer().getId()).gainReputation(repCost[type]);\n     }\n-\n-    /**\n-     * [65 00][02][08 00 00 00][C8 00 00 00][00 00 00 00][00][40 77 1B 00]\n-     */\n-    private static byte[] useRep(int mode, int type, int erate, int drate, int time) {\n-        MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n-        mplew.writeShort(0x60);//noty\n-        mplew.write(mode);\n-        mplew.writeInt(type);\n-        if (mode < 4) {\n-            mplew.writeInt(erate);\n-            mplew.writeInt(drate);\n+    \n+    private boolean useEntitlement(MapleFamilyEntry entry, MapleFamilyEntitlement entitlement) {\n+        if(entry.useEntitlement(entitlement)) {\n+            entry.gainReputation(-entitlement.getRepCost(), false);\n+            entry.getChr().announce(MaplePacketCreator.getFamilyInfo(entry));\n+            return true;\n         }\n-        mplew.write(0);\n-        mplew.writeInt(time);\n-        return mplew.getPacket();\n-    }\n-\n-    //20 00\n-    //00 00 00 00\n-    //00 00 00 00 00 00 00 00\n-    //80 01\n-    //00 00 28 00\n-    //8C 93 3E 00\n-    //40 0D\n-    //03 00 14 00\n-    //8C 93 3E 00\n-    //40 0D 03 00 00 00 00 00 02\n-    private static byte[] giveBuff() {\n-        MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n-        mplew.writeShort(SendOpcode.GIVE_BUFF.getValue());\n-        mplew.writeInt(0);\n-        mplew.writeLong(0);\n-\n-        return null;\n+        return false;\n     }\n }"}, {"sha": "5b835df3c86df8d58fed4cb788168b0af1c019e9", "filename": "src/net/server/channel/handlers/MessengerHandler.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/MessengerHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/MessengerHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MessengerHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -27,11 +27,11 @@\n import net.server.coordinator.MapleInviteCoordinator;\n import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n import net.server.coordinator.MapleInviteCoordinator.InviteType;\n+import net.server.coordinator.MapleInviteCoordinator.MapleInviteResult;\n import net.server.world.MapleMessenger;\n import net.server.world.MapleMessengerCharacter;\n import net.server.world.World;\n import tools.MaplePacketCreator;\n-import tools.Pair;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n public final class MessengerHandler extends AbstractMaplePacketHandler {\n@@ -58,8 +58,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                             } else {\n                                 messenger = world.getMessenger(messengerid);\n                                 if (messenger != null) {\n-                                    Pair<InviteResult, MapleCharacter> inviteRes = MapleInviteCoordinator.answerInvite(InviteType.MESSENGER, player.getId(), messengerid, true);\n-                                    InviteResult res = inviteRes.getLeft();\n+                                    MapleInviteResult inviteRes = MapleInviteCoordinator.answerInvite(InviteType.MESSENGER, player.getId(), messengerid, true);\n+                                    InviteResult res = inviteRes.result;\n                                     if (res == InviteResult.ACCEPTED) {\n                                         int position = messenger.getLowestPosition();\n                                         MapleMessengerCharacter messengerplayer = new MapleMessengerCharacter(player, position);"}, {"sha": "3cd053c8b260da89df76590b2a9f1dab8081fd08", "filename": "src/net/server/channel/handlers/OpenFamilyHandler.java", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/OpenFamilyHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/OpenFamilyHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/OpenFamilyHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -0,0 +1,41 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.handlers;\n+\n+import constants.ServerConstants;\n+import client.MapleCharacter;\n+import client.MapleClient;\n+import net.AbstractMaplePacketHandler;\n+import tools.MaplePacketCreator;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+/**\n+ *\n+ * @author Ubaware\n+ */\n+public final class OpenFamilyHandler extends AbstractMaplePacketHandler {\n+    @Override\n+    public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n+        if(!ServerConstants.USE_FAMILY_SYSTEM) return;\n+        MapleCharacter chr = c.getPlayer();\n+        c.announce(MaplePacketCreator.getFamilyInfo(chr.getFamilyEntry()));\n+    }\n+}\n+"}, {"sha": "e382112f40418c4a06ba454a00209b62c707e8ee", "filename": "src/net/server/channel/handlers/OpenFamilyPedigreeHandler.java", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/OpenFamilyPedigreeHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/OpenFamilyPedigreeHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/OpenFamilyPedigreeHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -0,0 +1,43 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.handlers;\n+\n+import constants.ServerConstants;\n+import client.MapleCharacter;\n+import client.MapleClient;\n+import net.AbstractMaplePacketHandler;\n+import tools.MaplePacketCreator;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+/**\n+ *\n+ * @author Ubaware\n+ */\n+public final class OpenFamilyPedigreeHandler extends AbstractMaplePacketHandler {\n+    @Override\n+    public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n+        if(!ServerConstants.USE_FAMILY_SYSTEM) return;\n+        MapleCharacter target = c.getChannelServer().getPlayerStorage().getCharacterByName(slea.readMapleAsciiString());\n+        if(target != null && target.getFamily() != null) {\n+            c.announce(MaplePacketCreator.showPedigree(target.getFamilyEntry()));\n+        }\n+    }\n+}\n+"}, {"sha": "17a8cd1da6b0c3c0b11f0a56f994694e4e4567a3", "filename": "src/net/server/channel/handlers/PartyOperationHandler.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/PartyOperationHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/PartyOperationHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PartyOperationHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -34,7 +34,7 @@\n import net.server.coordinator.MapleInviteCoordinator;\n import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n import net.server.coordinator.MapleInviteCoordinator.InviteType;\n-import tools.Pair;\n+import net.server.coordinator.MapleInviteCoordinator.MapleInviteResult;\n \n import java.util.List;\n \n@@ -64,8 +64,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             case 3: { // join\n                 int partyid = slea.readInt();\n                 \n-                Pair<InviteResult, MapleCharacter> inviteRes = MapleInviteCoordinator.answerInvite(InviteType.PARTY, player.getId(), partyid, true);\n-                InviteResult res = inviteRes.getLeft();\n+                MapleInviteResult inviteRes = MapleInviteCoordinator.answerInvite(InviteType.PARTY, player.getId(), partyid, true);\n+                InviteResult res = inviteRes.result;\n                 if (res == InviteResult.ACCEPTED) {\n                     MapleParty.joinParty(player, partyid, false);\n                 } else {"}, {"sha": "e41ecce6464a9e7a1940f94ef94aac5091fc9f70", "filename": "src/net/server/channel/handlers/PlayerLoggedinHandler.java", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/PlayerLoggedinHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/PlayerLoggedinHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PlayerLoggedinHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -40,6 +40,7 @@\n import net.server.world.PartyOperation;\n import net.server.world.World;\n import tools.DatabaseConnection;\n+import tools.FilePrinter;\n import tools.MaplePacketCreator;\n import tools.Pair;\n import tools.data.input.SeekableLittleEndianAccessor;\n@@ -50,6 +51,7 @@\n import client.MapleClient;\n import client.MapleDisease;\n import client.MapleFamily;\n+import client.MapleFamilyEntry;\n import client.MapleKeyBinding;\n import client.SkillFactory;\n import client.inventory.Equip;\n@@ -260,12 +262,22 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 c.announce(MaplePacketCreator.loadFamily(player));\n                 if (player.getFamilyId() > 0) {\n                     MapleFamily f = wserv.getFamily(player.getFamilyId());\n-                    if (f == null) {\n-                        f = new MapleFamily(player.getId());\n-                        wserv.addFamily(player.getFamilyId(), f);\n+                    if(f != null) {\n+                        MapleFamilyEntry familyEntry = f.getEntryByID(player.getId());\n+                        if(familyEntry != null) {\n+                            familyEntry.setCharacter(player);\n+                            player.setFamilyEntry(familyEntry);\n+                        } else {\n+                            FilePrinter.printError(FilePrinter.FAMILY_ERROR, \"Player \" + player.getName() + \"'s family doesn't have an entry for them. (\" + f.getID() + \")\");\n+                        }\n+                        c.announce(MaplePacketCreator.getFamilyInfo(familyEntry));\n+                        familyEntry.announceToSenior(MaplePacketCreator.sendFamilyLoginNotice(player.getName(), true), true);\n+                    } else {\n+                        FilePrinter.printError(FilePrinter.FAMILY_ERROR, \"Player \" + player.getName() + \" has an invalid family ID. (\" + player.getFamilyId() + \")\");\n+                        c.announce(MaplePacketCreator.getFamilyInfo(null));\n                     }\n-                    player.setFamily(f);\n-                    c.announce(MaplePacketCreator.getFamilyInfo(f.getMember(player.getId())));\n+                } else {\n+                    c.announce(MaplePacketCreator.getFamilyInfo(null));\n                 }\n                 if (player.getGuildId() > 0) {\n                     MapleGuild playerGuild = server.getGuild(player.getGuildId(), player.getWorld(), player);\n@@ -410,6 +422,10 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 if (ServerConstants.USE_NPCS_SCRIPTABLE) {\n                     c.announce(MaplePacketCreator.setNPCScriptable(ScriptableNPCConstants.SCRIPTABLE_NPCS));\n                 }\n+                \n+                if(newcomer) player.setLoginTime(System.currentTimeMillis());\n+            } catch(Exception e) {\n+                e.printStackTrace();\n             } finally {\n                 c.releaseClient();\n             }"}, {"sha": "c821c80020be568d3cb448eaad2f565492e07b15", "filename": "src/net/server/channel/handlers/UseCashItemHandler.java", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/UseCashItemHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/channel/handlers/UseCashItemHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/UseCashItemHandler.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -427,17 +427,9 @@ public void run() {\n             slea.readByte();\n             slea.readInt();\n             if(itemId == 5400000) { //name change\n-                if(player.cancelPendingNameChange()) {\n-                    player.dropMessage(1, \"Successfully canceled pending name change.\");\n-                } else {\n-                    player.dropMessage(1, \"You do not have a pending name change.\");\n-                }\n+                c.announce(MaplePacketCreator.showNameChangeCancel(player.cancelPendingNameChange()));\n             } else if(itemId == 5401000) { //world transfer\n-                if(player.cancelPendingWorldTranfer()) {\n-                    player.dropMessage(1, \"Successfully canceled pending world transfer.\");\n-                } else {\n-                    player.dropMessage(1, \"You do not have a pending world transfer.\");\n-                }\n+                c.announce(MaplePacketCreator.showWorldTransferCancel(player.cancelPendingWorldTranfer()));\n             }\n             remove(c, position, itemId);\n             c.announce(MaplePacketCreator.enableActions());"}, {"sha": "e2436795f339ed11b0aa1056f207757be08392b8", "filename": "src/net/server/coordinator/MapleInviteCoordinator.java", "status": "modified", "additions": 28, "deletions": 10, "changes": 38, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/coordinator/MapleInviteCoordinator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/coordinator/MapleInviteCoordinator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/coordinator/MapleInviteCoordinator.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -42,7 +42,8 @@\n     \n     public enum InviteType {\n         //BUDDY, (not needed)\n-        //FAMILY, (not implemented)\n+        FAMILY,\n+        FAMILY_SUMMON,\n         MESSENGER,\n         TRADE,\n         PARTY,\n@@ -52,11 +53,13 @@\n         final ConcurrentHashMap<Integer, Object> invites;\n         final ConcurrentHashMap<Integer, MapleCharacter> inviteFrom;\n         final ConcurrentHashMap<Integer, Integer> inviteTimeouts;\n+        final ConcurrentHashMap<Integer, Object[]> inviteParams;\n \n         private InviteType() {\n             invites = new ConcurrentHashMap<>();\n             inviteTimeouts = new ConcurrentHashMap<>();\n             inviteFrom = new ConcurrentHashMap<>();\n+            inviteParams = new ConcurrentHashMap<>();\n         }\n \n         private Map<Integer, Object> getRequestsTable() {\n@@ -67,23 +70,23 @@ private InviteType() {\n             return inviteTimeouts;\n         }\n         \n-        private MapleCharacter removeRequest(Integer target) {\n+        private Pair<MapleCharacter, Object[]> removeRequest(Integer target) {\n             invites.remove(target);\n             MapleCharacter from = inviteFrom.remove(target);\n             inviteTimeouts.remove(target);\n             \n-            return from;\n+            return new Pair<>(from, inviteParams.remove(target));\n         }\n         \n-        private boolean addRequest(MapleCharacter from, Object referenceFrom, int targetCid) {\n+        private boolean addRequest(MapleCharacter from, Object referenceFrom, int targetCid, Object[] params) {\n             Object v = invites.putIfAbsent(targetCid, referenceFrom);\n             if (v != null) {    // there was already an entry\n                 return false;\n             }\n             \n             inviteFrom.put(targetCid, from);\n             inviteTimeouts.put(targetCid, 0);\n-            \n+            inviteParams.put(targetCid, params);\n             return true;\n         }\n         \n@@ -93,29 +96,31 @@ private boolean hasRequest(int targetCid) {\n     }\n     \n     // note: referenceFrom is a specific value that represents the \"common association\" created between the sender/recver parties\n-    public static boolean createInvite(InviteType type, MapleCharacter from, Object referenceFrom, int targetCid) {\n-        return type.addRequest(from, referenceFrom, targetCid);\n+    public static boolean createInvite(InviteType type, MapleCharacter from, Object referenceFrom, int targetCid, Object... params) {\n+        return type.addRequest(from, referenceFrom, targetCid, params);\n     }\n     \n     public static boolean hasInvite(InviteType type, int targetCid) {\n         return type.hasRequest(targetCid);\n     }\n     \n-    public static Pair<InviteResult, MapleCharacter> answerInvite(InviteType type, int targetCid, Object referenceFrom, boolean answer) {\n+    public static MapleInviteResult answerInvite(InviteType type, int targetCid, Object referenceFrom, boolean answer) {\n         Map<Integer, Object> table = type.getRequestsTable();\n         \n         MapleCharacter from = null;\n         InviteResult result = InviteResult.NOT_FOUND;\n+        Pair<MapleCharacter, Object[]> inviteInfo = null;\n         \n         Object reference = table.get(targetCid);\n         if (referenceFrom.equals(reference)) {\n-            from = type.removeRequest(targetCid);\n+            inviteInfo = type.removeRequest(targetCid);\n+            from = inviteInfo.getLeft();\n             if (from != null && !from.isLoggedinWorld()) from = null;\n             \n             result = answer ? InviteResult.ACCEPTED : InviteResult.DENIED;\n         }\n         \n-        return new Pair<>(result, from);\n+        return new MapleInviteResult(result, from, inviteInfo != null ? inviteInfo.getRight() : new Object[0]);\n     }\n     \n     public static void removeInvite(InviteType type, int targetCid) {\n@@ -146,4 +151,17 @@ public static void runTimeoutSchedule() {\n             }\n         }\n     }\n+    \n+    public static class MapleInviteResult {\n+        \n+        public final InviteResult result;\n+        public final MapleCharacter from;\n+        public final Object[] params;\n+        \n+        private MapleInviteResult(InviteResult result, MapleCharacter from, Object[] params) {\n+            this.result = result;\n+            this.from = from;\n+            this.params = params;\n+        }\n+    }\n }"}, {"sha": "dffd7a3c27d2071a075b653fafd04d0cc3a722bf", "filename": "src/net/server/guild/MapleAlliance.java", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/guild/MapleAlliance.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/guild/MapleAlliance.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/guild/MapleAlliance.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -32,13 +32,12 @@\n import client.MapleClient;\n import net.server.Server;\n import net.server.coordinator.MapleInviteCoordinator;\n-import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n import net.server.coordinator.MapleInviteCoordinator.InviteType;\n+import net.server.coordinator.MapleInviteCoordinator.MapleInviteResult;\n import net.server.world.MapleParty;\n import net.server.world.MaplePartyCharacter;\n import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n-import tools.Pair;\n \n /**\n  *\n@@ -494,11 +493,11 @@ public static void sendInvitation(MapleClient c, String targetGuildName, int all\n     }\n     \n     public static boolean answerInvitation(int targetId, String targetGuildName, int allianceId, boolean answer) {\n-        Pair<InviteResult, MapleCharacter> res = MapleInviteCoordinator.answerInvite(InviteType.ALLIANCE, targetId, allianceId, answer);\n+        MapleInviteResult res = MapleInviteCoordinator.answerInvite(InviteType.ALLIANCE, targetId, allianceId, answer);\n         \n         String msg;\n-        MapleCharacter sender = res.getRight();\n-        switch (res.getLeft()) {\n+        MapleCharacter sender = res.from;\n+        switch (res.result) {\n             case ACCEPTED:\n                 return true;\n                 "}, {"sha": "dca74c4825865baa18cc556e32782e122f923cc3", "filename": "src/net/server/guild/MapleGuild.java", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/guild/MapleGuild.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/guild/MapleGuild.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/guild/MapleGuild.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -45,11 +45,10 @@\n import net.server.channel.Channel;\n import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n-import tools.Pair;\n import net.server.audit.locks.MonitoredLockType;\n import net.server.coordinator.MapleInviteCoordinator;\n import net.server.coordinator.MapleInviteCoordinator.InviteType;\n-import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n+import net.server.coordinator.MapleInviteCoordinator.MapleInviteResult;\n import net.server.coordinator.MapleMatchCheckerCoordinator;\n \n public class MapleGuild {\n@@ -727,11 +726,11 @@ public static MapleGuildResponse sendInvitation(MapleClient c, String targetName\n     }\n     \n     public static boolean answerInvitation(int targetId, String targetName, int guildId, boolean answer) {\n-        Pair<InviteResult, MapleCharacter> res = MapleInviteCoordinator.answerInvite(InviteType.GUILD, targetId, guildId, answer);\n+        MapleInviteResult res = MapleInviteCoordinator.answerInvite(InviteType.GUILD, targetId, guildId, answer);\n         \n         MapleGuildResponse mgr;\n-        MapleCharacter sender = res.getRight();\n-        switch (res.getLeft()) {\n+        MapleCharacter sender = res.from;\n+        switch (res.result) {\n             case ACCEPTED:\n                 return true;\n                 "}, {"sha": "28f32d8f9159e641ed035a0219c12b53fea702d9", "filename": "src/net/server/worker/FamilyDailyResetWorker.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/worker/FamilyDailyResetWorker.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/worker/FamilyDailyResetWorker.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/worker/FamilyDailyResetWorker.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -0,0 +1,56 @@\n+package net.server.worker;\n+\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+\n+import client.MapleFamily;\n+import net.server.world.World;\n+import tools.DatabaseConnection;\n+import tools.FilePrinter;\n+\n+public class FamilyDailyResetWorker implements Runnable {\n+\n+    private final World world;\n+\n+    public FamilyDailyResetWorker(World world) {\n+        this.world = world;\n+    }\n+\n+    @Override\n+    public void run() {\n+        resetEntitlementUsage(world);\n+        for(MapleFamily family : world.getFamilies()) {\n+            family.resetDailyReps();\n+        }\n+    }\n+\n+    public static void resetEntitlementUsage(World world) {\n+        Calendar resetTime = Calendar.getInstance();\n+        resetTime.add(Calendar.MINUTE, 1); // to make sure that we're in the \"next day\", since this is called at midnight\n+        resetTime.set(Calendar.HOUR, 0);\n+        resetTime.set(Calendar.MINUTE, 0);\n+        resetTime.set(Calendar.SECOND, 0);\n+        resetTime.set(Calendar.MILLISECOND, 0);\n+        try(Connection con = DatabaseConnection.getConnection()) {\n+            try(PreparedStatement ps = con.prepareStatement(\"UPDATE family_character SET todaysrep = 0, reptosenior = 0 WHERE lastresettime <= ?\")) {\n+                ps.setLong(1, resetTime.getTimeInMillis());\n+                ps.executeUpdate();\n+            } catch(SQLException e) {\n+                FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not reset daily rep for families. On \" + Calendar.getInstance().getTime());\n+                e.printStackTrace();\n+            }\n+            try(PreparedStatement ps = con.prepareStatement(\"DELETE FROM family_entitlement WHERE timestamp <= ?\")) {\n+                ps.setLong(1, resetTime.getTimeInMillis());\n+                ps.executeUpdate();\n+            } catch(SQLException e) {\n+                FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not do daily reset for family entitlements. On \" + Calendar.getInstance().getTime());\n+                e.printStackTrace();\n+            }\n+        } catch(SQLException e) {\n+            FilePrinter.printError(FilePrinter.FAMILY_ERROR, e, \"Could not get connection to DB.\");\n+            e.printStackTrace();\n+        }\n+    }\n+}"}, {"sha": "05572d68cc8ccd27d491bc0b6557b093fc2a37d1", "filename": "src/net/server/world/World.java", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/world/World.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/net/server/world/World.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/World.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -67,6 +67,7 @@\n import server.maps.MaplePlayerShopItem;\n import server.maps.AbstractMapleMapObject;\n import net.server.worker.CharacterAutosaverWorker;\n+import net.server.worker.FamilyDailyResetWorker;\n import net.server.worker.FishingWorker;\n import net.server.worker.HiredMerchantWorker;\n import net.server.worker.MapOwnershipWorker;\n@@ -211,6 +212,11 @@ public World(int world, int flag, String eventmsg, int exprate, int droprate, in\n         fishingSchedule = tman.register(new FishingWorker(this), 10 * 1000, 10 * 1000);\n         partySearchSchedule = tman.register(new PartySearchWorker(this), 10 * 1000, 10 * 1000);\n         \n+        if(ServerConstants.USE_FAMILY_SYSTEM) {\n+            long timeLeft = Server.getTimeLeftForNextDay();\n+            FamilyDailyResetWorker.resetEntitlementUsage(this);\n+            tman.register(new FamilyDailyResetWorker(this), 24 * 60 * 60 * 1000, timeLeft);\n+        }\n     }\n \n     public int getChannelsSize() {\n@@ -540,6 +546,12 @@ public void addFamily(int id, MapleFamily f) {\n             }\n         }\n     }\n+    \n+    public void removeFamily(int id) {\n+        synchronized (families) {\n+            families.remove(id);\n+        }\n+    }\n \n     public MapleFamily getFamily(int id) {\n         synchronized (families) {\n@@ -549,6 +561,12 @@ public MapleFamily getFamily(int id) {\n             return null;\n         }\n     }\n+    \n+    public Collection<MapleFamily> getFamilies() {\n+        synchronized(families) {\n+            return Collections.unmodifiableCollection((Collection<MapleFamily>) families.values());\n+        }\n+    }\n \n     public MapleGuild getGuild(MapleGuildCharacter mgc) {\n         if(mgc == null) return null;\n@@ -1109,7 +1127,7 @@ public void declineChat(String sender, MapleCharacter player) {\n         if (isConnected(sender)) {\n             MapleCharacter senderChr = getPlayerStorage().getCharacterByName(sender);\n             if (senderChr != null && senderChr.getMessenger() != null) {\n-                if (MapleInviteCoordinator.answerInvite(InviteType.MESSENGER, player.getId(), senderChr.getMessenger().getId(), false).getLeft() == InviteResult.DENIED) {\n+                if (MapleInviteCoordinator.answerInvite(InviteType.MESSENGER, player.getId(), senderChr.getMessenger().getId(), false).result == InviteResult.DENIED) {\n                     senderChr.getClient().announce(MaplePacketCreator.messengerNote(player.getName(), 5, 0));\n                 }\n             }"}, {"sha": "b14faade94a95cd12acf75f53589c03f6e30da04", "filename": "src/server/MapleTrade.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/server/MapleTrade.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/server/MapleTrade.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleTrade.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -39,6 +39,7 @@\n import net.server.coordinator.MapleInviteCoordinator;\n import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n import net.server.coordinator.MapleInviteCoordinator.InviteType;\n+import net.server.coordinator.MapleInviteCoordinator.MapleInviteResult;\n import tools.Pair;\n \n /**\n@@ -476,9 +477,9 @@ public static void inviteTrade(MapleCharacter c1, MapleCharacter c2) {\n     }\n \n     public static void visitTrade(MapleCharacter c1, MapleCharacter c2) {\n-        Pair<InviteResult, MapleCharacter> inviteRes = MapleInviteCoordinator.answerInvite(InviteType.TRADE, c1.getId(), c2.getId(), true);\n+        MapleInviteResult inviteRes = MapleInviteCoordinator.answerInvite(InviteType.TRADE, c1.getId(), c2.getId(), true);\n         \n-        InviteResult res = inviteRes.getLeft();\n+        InviteResult res = inviteRes.result;\n         if (res == InviteResult.ACCEPTED) {\n             if (c1.getTrade() != null && c1.getTrade().getPartner() == c2.getTrade() && c2.getTrade() != null && c2.getTrade().getPartner() == c1.getTrade()) {\n                 c2.getClient().announce(MaplePacketCreator.getTradePartnerAdd(c1));\n@@ -499,7 +500,7 @@ public static void declineTrade(MapleCharacter c) {\n         if (trade != null) {\n             if (trade.getPartner() != null) {\n                 MapleCharacter other = trade.getPartner().getChr();\n-                if (MapleInviteCoordinator.answerInvite(InviteType.TRADE, c.getId(), other.getId(), false).getLeft() == InviteResult.DENIED) {\n+                if (MapleInviteCoordinator.answerInvite(InviteType.TRADE, c.getId(), other.getId(), false).result == InviteResult.DENIED) {\n                     other.message(c.getName() + \" has declined your trade request.\");\n                 }\n                 "}, {"sha": "aef8cb8b50665f367d7c7f9acb9bcf30f3d33602", "filename": "src/server/life/MapleMonster.java", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/server/life/MapleMonster.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/server/life/MapleMonster.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleMonster.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -24,6 +24,7 @@\n import client.MapleBuffStat;\n import client.MapleCharacter;\n import client.MapleClient;\n+import client.MapleFamilyEntry;\n import client.MapleJob;\n import client.Skill;\n import client.SkillFactory;\n@@ -522,6 +523,7 @@ private void distributePlayerExperience(MapleCharacter chr, float exp, float par\n         float bonusExp = partyBonusMod * playerExp;\n         \n         this.giveExpToCharacter(chr, playerExp, bonusExp, whiteExpGain, hasPartySharers);\n+        giveFamilyRep(chr.getFamilyEntry());\n     }\n     \n     private void distributePartyExperience(Map<MapleCharacter, Long> partyParticipation, float expPerDmg, Set<MapleCharacter> underleveled, Map<Integer, Float> personalRatio, double sdevRatio) {\n@@ -548,7 +550,7 @@ private void distributePartyExperience(Map<MapleCharacter, Long> partyParticipat\n         int totalPartyLevel = 0;\n         \n         // thanks G h o s t, Alfred, Vcoc, BHB for poiting out a bug in detecting party members after membership transactions in a party took place\n-        if (!ServerConstants.USE_ENFORCE_MOB_LEVEL_RANGE) {\n+        if (ServerConstants.USE_ENFORCE_MOB_LEVEL_RANGE) {\n             for (MapleCharacter member : partyParticipation.keySet().iterator().next().getPartyMembersOnSameMap()) {\n                 if (!leechInterval.inInterval(member.getLevel())) {\n                     underleveled.add(member);\n@@ -574,6 +576,7 @@ private void distributePartyExperience(Map<MapleCharacter, Long> partyParticipat\n         \n         for (MapleCharacter mc : expMembers) {\n             distributePlayerExperience(mc, participationExp, partyBonusMod, totalPartyLevel, mc == participationMvp, isWhiteExpGain(mc, personalRatio, sdevRatio), hasPartySharers);\n+            giveFamilyRep(mc.getFamilyEntry());\n         }\n     }\n     \n@@ -949,6 +952,14 @@ private void dispatchMonsterHealed(int trueHeal) {\n             listener.monsterHealed(trueHeal);\n         }\n     }\n+    \n+    private void giveFamilyRep(MapleFamilyEntry entry) {\n+        if(entry != null) {\n+            int repGain = isBoss() ? ServerConstants.FAMILY_REP_PER_BOSS_KILL : ServerConstants.FAMILY_REP_PER_KILL;\n+            if(getMaxHp() <= 1) repGain = 0; //don't count trash mobs\n+            entry.giveReputationToSenior(repGain, true);\n+        }\n+    }\n \n     public int getHighestDamagerId() {\n         int curId = 0;"}, {"sha": "b24c80ec8a8b70014bc665a3a02388a30a34811b", "filename": "src/tools/FilePrinter.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/tools/FilePrinter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/tools/FilePrinter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/FilePrinter.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -61,6 +61,7 @@\n             SAVING_CHARACTER = \"players/SaveChar.txt\",\n             CHANGE_CHARACTER_NAME = \"players/NameChange.txt\",\n             WORLD_TRANSFER = \"players/WorldTransfer.txt\",\n+            FAMILY_ERROR = \"players/FamilyErrors.txt\",\n             USED_COMMANDS = \"commands/UsedCommands.txt\",\n             DEADLOCK_ERROR = \"deadlocks/Deadlocks.txt\",\n             DEADLOCK_STACK = \"deadlocks/Path.txt\","}, {"sha": "8eebeaeea47be9bf450c9fea71ee079a6220d42c", "filename": "src/tools/MaplePacketCreator.java", "status": "modified", "additions": 177, "deletions": 44, "changes": 221, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/ec5a412e37071074509c0b1ae919b032a30a6a80/src/tools/MaplePacketCreator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/ec5a412e37071074509c0b1ae919b032a30a6a80/src/tools/MaplePacketCreator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MaplePacketCreator.java?ref=ec5a412e37071074509c0b1ae919b032a30a6a80", "patch": "@@ -41,6 +41,7 @@\n import client.MapleCharacter.SkillEntry;\n import client.MapleClient;\n import client.MapleDisease;\n+import client.MapleFamilyEntitlement;\n import client.MapleFamilyEntry;\n import client.MapleKeyBinding;\n import client.MapleMount;\n@@ -1030,7 +1031,7 @@ public int compare(Pair<MapleStat, Integer> o1, Pair<MapleStat, Integer> o2) {\n                 for (Pair<MapleStat, Integer> statupdate : mystats) {\n                         if (statupdate.getLeft().getValue() >= 1) {\n                                 if (statupdate.getLeft().getValue() == 0x1) {\n-                                        mplew.writeShort(statupdate.getRight().shortValue());\n+                                        mplew.write(statupdate.getRight().byteValue());\n                                 } else if (statupdate.getLeft().getValue() <= 0x4) {\n                                         mplew.writeInt(statupdate.getRight());\n                                 } else if (statupdate.getLeft().getValue() < 0x20) {\n@@ -1043,6 +1044,8 @@ public int compare(Pair<MapleStat, Integer> o1, Pair<MapleStat, Integer> o2) {\n                                         }\n                                 } else if (statupdate.getLeft().getValue() < 0xFFFF) {\n                                         mplew.writeShort(statupdate.getRight().shortValue());\n+                                } else if (statupdate.getLeft().getValue() == 0x20000) {\n+                                        mplew.writeShort(statupdate.getRight().shortValue());\n                                 } else {\n                                         mplew.writeInt(statupdate.getRight().intValue());\n                                 }\n@@ -2045,7 +2048,8 @@ private static void writeForeignBuffs(MaplePacketLittleEndianWriter mplew, Maple\n                 addRingLook(mplew, chr, false); // friendship\n                 addMarriageRingLook(target, mplew, chr);\n                 encodeNewYearCardInfo(mplew, chr);  // new year seems to crash sometimes...\n-                mplew.skip(2);\n+                mplew.write(0);\n+                mplew.write(0);\n                 mplew.write(chr.getTeam());//only needed in specific fields\n                 return mplew.getPacket();\n         }\n@@ -6150,6 +6154,24 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n                 return mplew.getPacket();\n         }\n         \n+        public static byte[] showNameChangeCancel(boolean success) {\n+            final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+            mplew.writeShort(SendOpcode.CANCEL_NAME_CHANGE_RESULT.getValue());\n+            mplew.writeBool(success);\n+            if(!success) mplew.write(0);\n+            //mplew.writeMapleAsciiString(\"Custom message.\"); //only if ^ != 0\n+            return mplew.getPacket();\n+        }\n+        \n+        public static byte[] showWorldTransferCancel(boolean success) {\n+            final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+            mplew.writeShort(SendOpcode.CANCEL_TRANSFER_WORLD_RESULT.getValue());\n+            mplew.writeBool(success);\n+            if(!success) mplew.write(0);\n+            //mplew.writeMapleAsciiString(\"Custom message.\"); //only if ^ != 0\n+            return mplew.getPacket();\n+        }\n+        \n         public static byte[] showMTSCash(MapleCharacter p) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.MTS_OPERATION2.getValue());\n@@ -6376,18 +6398,16 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n         }\n \n         public static byte[] loadFamily(MapleCharacter player) {\n-                String[] title = {\"Family Reunion\", \"Summon Family\", \"My Drop Rate 1.5x (15 min)\", \"My EXP 1.5x (15 min)\", \"Family Bonding (30 min)\", \"My Drop Rate 2x (15 min)\", \"My EXP 2x (15 min)\", \"My Drop Rate 2x (30 min)\", \"My EXP 2x (30 min)\", \"My Party Drop Rate 2x (30 min)\", \"My Party EXP 2x (30 min)\"};\n-                String[] description = {\"[Target] Me\\n[Effect] Teleport directly to the Family member of your choice.\", \"[Target] 1 Family member\\n[Effect] Summon a Family member of choice to the map you're in.\", \"[Target] Me\\n[Time] 15 min.\\n[Effect] Monster drop rate will be increased #c1.5x#.\\n*  If the Drop Rate event is in progress, this will be nullified.\", \"[Target] Me\\n[Time] 15 min.\\n[Effect] EXP earned from hunting will be increased #c1.5x#.\\n* If the EXP event is in progress, this will be nullified.\", \"[Target] At least 6 Family members online that are below me in the Pedigree\\n[Time] 30 min.\\n[Effect] Monster drop rate and EXP earned will be increased #c2x#. \\n* If the EXP event is in progress, this will be nullified.\", \"[Target] Me\\n[Time] 15 min.\\n[Effect] Monster drop rate will be increased #c2x#.\\n* If the Drop Rate event is in progress, this will be nullified.\", \"[Target] Me\\n[Time] 15 min.\\n[Effect] EXP earned from hunting will be increased #c2x#.\\n* If the EXP event is in progress, this will be nullified.\", \"[Target] Me\\n[Time] 30 min.\\n[Effect] Monster drop rate will be increased #c2x#.\\n* If the Drop Rate event is in progress, this will be nullified.\", \"[Target] Me\\n[Time] 30 min.\\n[Effect] EXP earned from hunting will be increased #c2x#. \\n* If the EXP event is in progress, this will be nullified.\", \"[Target] My party\\n[Time] 30 min.\\n[Effect] Monster drop rate will be increased #c2x#.\\n* If the Drop Rate event is in progress, this will be nullified.\", \"[Target] My party\\n[Time] 30 min.\\n[Effect] EXP earned from hunting will be increased #c2x#.\\n* If the EXP event is in progress, this will be nullified.\"};\n-                int[] repCost = {3, 5, 7, 8, 10, 12, 15, 20, 25, 40, 50};\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.FAMILY_PRIVILEGE_LIST.getValue());\n-                mplew.writeInt(11);\n-                for (int i = 0; i < 11; i++) {\n-                        mplew.write(i > 4 ? (i % 2) + 1 : i);\n-                        mplew.writeInt(repCost[i] * 100);\n-                        mplew.writeInt(1);\n-                        mplew.writeMapleAsciiString(title[i]);\n-                        mplew.writeMapleAsciiString(description[i]);\n+                mplew.writeInt(MapleFamilyEntitlement.values().length);\n+                for (int i = 0; i < MapleFamilyEntitlement.values().length; i++) {\n+                        MapleFamilyEntitlement entitlement = MapleFamilyEntitlement.values()[i];\n+                        mplew.write(i <= 1 ? 1 : 2); //type\n+                        mplew.writeInt(entitlement.getRepCost());\n+                        mplew.writeInt(entitlement.getUsageLimit());\n+                        mplew.writeMapleAsciiString(entitlement.getName());\n+                        mplew.writeMapleAsciiString(entitlement.getDescription());\n                 }\n                 return mplew.getPacket();\n         }\n@@ -6396,6 +6416,9 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n          * Family Result Message\n          *\n          * Possible values for <code>type</code>:<br>\n+         * 64: You cannot add this character as a junior.\n+         * 65: The name could not be found or is not online.\n+         * 66: You belong to the same family.\n          * 67: You do not belong to the same family.<br>\n          * 69: The character you wish to add as\\r\\na Junior must be in the same\n          * map.<br>\n@@ -6433,26 +6456,120 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n         }\n \n         public static byte[] getFamilyInfo(MapleFamilyEntry f) {\n+                if(f == null) return getEmptyFamilyInfo();\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.FAMILY_INFO_RESULT.getValue());\n                 mplew.writeInt(f.getReputation()); // cur rep left\n                 mplew.writeInt(f.getTotalReputation()); // tot rep left\n                 mplew.writeInt(f.getTodaysRep()); // todays rep\n-                mplew.writeShort(f.getJuniors()); // juniors added\n-                mplew.writeShort(f.getTotalJuniors()); // juniors allowed\n+                mplew.writeShort(f.getJuniorCount()); // juniors added\n+                mplew.writeShort(2); // juniors allowed\n+                mplew.writeShort(0); //Unknown\n+                mplew.writeInt(f.getFamily().getLeader().getChrId()); // Leader ID (Allows setting message)\n+                mplew.writeMapleAsciiString(f.getFamily().getName());\n+                mplew.writeMapleAsciiString(f.getFamily().getMessage()); //family message\n+                mplew.writeInt(MapleFamilyEntitlement.values().length); //Entitlement info count\n+                for(MapleFamilyEntitlement entitlement : MapleFamilyEntitlement.values()) {\n+                    mplew.writeInt(entitlement.ordinal()); //ID\n+                    mplew.writeInt(f.isEntitlementUsed(entitlement) ? 1 : 0); //Used count\n+                }\n+                return mplew.getPacket();\n+        }\n+        \n+        private static byte[] getEmptyFamilyInfo() {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.FAMILY_INFO_RESULT.getValue());\n+                mplew.writeInt(0); // cur rep left\n+                mplew.writeInt(0); // tot rep left\n+                mplew.writeInt(0); // todays rep\n+                mplew.writeShort(0); // juniors added\n+                mplew.writeShort(2); // juniors allowed\n                 mplew.writeShort(0); //Unknown\n-                mplew.writeInt(f.getId()); // id?\n-                mplew.writeMapleAsciiString(f.getFamilyName());\n+                mplew.writeInt(0); // Leader ID (Allows setting message)\n+                mplew.writeMapleAsciiString(\"\");\n+                mplew.writeMapleAsciiString(\"\"); //family message\n                 mplew.writeInt(0);\n-                mplew.writeShort(0);\n                 return mplew.getPacket();\n         }\n \n-        public static byte[] showPedigree(int chrid, Map<Integer, MapleFamilyEntry> members) {\n+        public static byte[] showPedigree(MapleFamilyEntry entry) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.FAMILY_CHART_RESULT.getValue());\n-                //Hmmm xD\n-                return mplew.getPacket();\n+                mplew.writeInt(entry.getChrId()); //ID of viewed player's pedigree, can't be leader?\n+                List<MapleFamilyEntry> superJuniors = new ArrayList<MapleFamilyEntry>(4);\n+                boolean hasOtherJunior = false;\n+                int entryCount = 2; //2 guaranteed, leader and self\n+                entryCount += Math.min(2, entry.getTotalSeniors());\n+                //needed since MaplePacketLittleEndianWriter doesn't have any seek functionality\n+                if(entry.getSenior() != null) {\n+                    if(entry.getSenior().getJuniorCount() == 2) {\n+                        entryCount++;\n+                        hasOtherJunior = true;\n+                    }\n+                }\n+                for(MapleFamilyEntry junior : entry.getJuniors()) {\n+                    if(junior == null) continue;\n+                    entryCount++;\n+                    for(MapleFamilyEntry superJunior : junior.getJuniors()) {\n+                        if(superJunior == null) continue;\n+                        entryCount++;\n+                        superJuniors.add(superJunior);\n+                    }\n+                }\n+                //write entries\n+                boolean missingEntries = entryCount == 2; //pedigree requires at least 3 entries to show leader, might only have 2 if leader's juniors leave\n+                if(missingEntries) entryCount++;\n+                mplew.writeInt(entryCount); //player count\n+                addPedigreeEntry(mplew, entry.getFamily().getLeader());\n+                if(entry.getSenior() != null) {\n+                    if(entry.getSenior().getSenior() != null) addPedigreeEntry(mplew, entry.getSenior().getSenior());\n+                    addPedigreeEntry(mplew, entry.getSenior());\n+                }\n+                addPedigreeEntry(mplew, entry);\n+                if(hasOtherJunior) { //must be sent after own entry\n+                    MapleFamilyEntry otherJunior = entry.getSenior().getOtherJunior(entry);\n+                    if(otherJunior != null) addPedigreeEntry(mplew, otherJunior);\n+                }\n+                if(missingEntries) addPedigreeEntry(mplew, entry);\n+                for(MapleFamilyEntry junior : entry.getJuniors()) {\n+                    if(junior == null) continue;\n+                    addPedigreeEntry(mplew, junior);\n+                    for(MapleFamilyEntry superJunior : junior.getJuniors()) {\n+                        if(superJunior != null) addPedigreeEntry(mplew, superJunior);\n+                    }\n+                }\n+                mplew.writeInt(2 + superJuniors.size()); //member info count\n+                // 0 = total seniors, -1 = total members, otherwise junior count of ID\n+                mplew.writeInt(-1); \n+                mplew.writeInt(entry.getFamily().getTotalMembers());\n+                mplew.writeInt(0);\n+                mplew.writeInt(entry.getTotalSeniors()); //client subtracts provided seniors\n+                for(MapleFamilyEntry superJunior : superJuniors) {\n+                    mplew.writeInt(superJunior.getChrId());\n+                    mplew.writeInt(superJunior.getTotalJuniors());\n+                }\n+                mplew.writeInt(0); //another loop count (entitlements used)\n+                //mplew.writeInt(1); //entitlement index\n+                //mplew.writeInt(2); //times used\n+                mplew.writeShort(entry.getJuniorCount() >= 2 ? 0 : 2); //0 disables Add button (only if viewing own pedigree)\n+                return mplew.getPacket();\n+        }\n+        \n+        private static void addPedigreeEntry(MaplePacketLittleEndianWriter mplew, MapleFamilyEntry entry) {\n+                MapleCharacter chr = entry.getChr();\n+                boolean isOnline = chr != null;\n+                mplew.writeInt(entry.getChrId()); //ID\n+                mplew.writeInt(entry.getSenior() != null ? entry.getSenior().getChrId() : 0); //parent ID\n+                mplew.writeShort(entry.getJob().getId()); //job id\n+                mplew.write(entry.getLevel()); //level\n+                mplew.writeBool(isOnline); //isOnline\n+                mplew.writeInt(entry.getReputation()); //current rep\n+                mplew.writeInt(entry.getTotalReputation()); //total rep\n+                mplew.writeInt(entry.getRepsToSenior()); //reps recorded to senior\n+                mplew.writeInt(entry.getTodaysRep());\n+                mplew.writeInt(isOnline ? ((chr.isAwayFromWorld() || chr.getCashShop().isOpened()) ? -1 : chr.getClient().getChannel() - 1) : 0);\n+                mplew.writeInt(isOnline ? (int) (chr.getLoggedInTime() / 60000) : 0); //time online in minutes\n+                mplew.writeMapleAsciiString(entry.getName()); //name\n         }\n \n         public static byte[] updateAreaInfo(int area, String info) {\n@@ -6935,6 +7052,46 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n                 mplew.writeMapleAsciiString(inviter);\n                 return mplew.getPacket();\n         }\n+        \n+        public static byte[] sendFamilySummonRequest(String familyName, String from) {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.FAMILY_SUMMON_REQUEST.getValue());\n+                mplew.writeMapleAsciiString(from);\n+                mplew.writeMapleAsciiString(familyName);\n+                return mplew.getPacket();\n+        }\n+        \n+        public static byte[] sendFamilyLoginNotice(String name, boolean loggedIn) {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.FAMILY_NOTIFY_LOGIN_OR_LOGOUT.getValue());\n+                mplew.writeBool(loggedIn);\n+                mplew.writeMapleAsciiString(name);\n+                return mplew.getPacket();\n+        }\n+        \n+        public static byte[] sendFamilyJoinResponse(boolean accepted, String added) {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.FAMILY_JOIN_REQUEST_RESULT.getValue());\n+                mplew.write(accepted ? 1 : 0);\n+                mplew.writeMapleAsciiString(added);\n+                return mplew.getPacket();\n+        }\n+    \n+        public static byte[] getSeniorMessage(String name) {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.FAMILY_JOIN_ACCEPTED.getValue());\n+                mplew.writeMapleAsciiString(name);\n+                mplew.writeInt(0);\n+                return mplew.getPacket();\n+        }\n+    \n+        public static byte[] sendGainRep(int gain, String from) {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.FAMILY_REP_GAIN.getValue());\n+                mplew.writeInt(gain);\n+                mplew.writeMapleAsciiString(from);\n+                return mplew.getPacket();\n+        }\n \n         public static byte[] showBoughtCashPackage(List<Item> cashPackage, int accountId) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n@@ -7176,30 +7333,6 @@ private static void getGuildInfo(final MaplePacketLittleEndianWriter mplew, Mapl\n                 return mplew.getPacket();\n         }\n \n-        public static byte[] sendFamilyJoinResponse(boolean accepted, String added) {\n-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n-                mplew.writeShort(SendOpcode.FAMILY_JOIN_REQUEST_RESULT.getValue());\n-                mplew.write(accepted ? 1 : 0);\n-                mplew.writeMapleAsciiString(added);\n-                return mplew.getPacket();\n-        }\n-\n-        public static byte[] getSeniorMessage(String name) {\n-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n-                mplew.writeShort(SendOpcode.FAMILY_JOIN_ACCEPTED.getValue());\n-                mplew.writeMapleAsciiString(name);\n-                mplew.writeInt(0);\n-                return mplew.getPacket();\n-        }\n-\n-        public static byte[] sendGainRep(int gain, int mode) {\n-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n-                mplew.writeShort(SendOpcode.FAMILY_FAMOUS_POINT_INC_RESULT.getValue());\n-                mplew.writeInt(gain);\n-                mplew.writeShort(0);\n-                return mplew.getPacket();\n-        }\n-\n         public static byte[] removeItemFromDuey(boolean remove, int Package) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.PARCEL.getValue());"}]}]},
