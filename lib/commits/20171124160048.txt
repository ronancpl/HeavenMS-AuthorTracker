{"fetchDate": "2019-12-19", "content": [{"sha": "3b30244239892e62467a937cd65a9cf23477ce52", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6M2IzMDI0NDIzOTg5MmU2MjQ2N2E5MzdjZDY1YTljZjIzNDc3Y2U1Mg==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-11-24T16:00:48Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-11-24T16:00:48Z"}, "message": "Maker-oriented commit\n\nImplemented the multiple features of the Maker skill (equip disassembly, leftover merging into monster crystal and item crafting).\nUpdated the DB with the Maker data featured on the WZ.\nAdded a new table for the strenghtening reagents gain data (compiled with the MapleSkillMakerReagentIndexer).\nFixed quests that improves the Maker skill level and some other Maker-related quests.", "tree": {"sha": "cbad3fe724e3b49ce3898d4694effa25ed2a30a1", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/cbad3fe724e3b49ce3898d4694effa25ed2a30a1"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/3b30244239892e62467a937cd65a9cf23477ce52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/3b30244239892e62467a937cd65a9cf23477ce52", "html_url": "https://github.com/ronancpl/HeavenMS/commit/3b30244239892e62467a937cd65a9cf23477ce52", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/3b30244239892e62467a937cd65a9cf23477ce52/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dd2764776322766244d969614b026afa7b2a429", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/4dd2764776322766244d969614b026afa7b2a429", "html_url": "https://github.com/ronancpl/HeavenMS/commit/4dd2764776322766244d969614b026afa7b2a429"}], "stats": {"total": 26923, "additions": 8419, "deletions": 18504}, "files": [{"sha": "0e3d07e46869bfd4bf39d9a4b8480a8620dff5df", "filename": ".gitignore", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/.gitignore", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/.gitignore", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/.gitignore?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -19,6 +19,10 @@\n /tools/MapleIdRetriever/dist/\n /tools/MapleIdRetriever/nbproject/private/\n \n+/tools/MapleMapInfoRetriever/build/\n+/tools/MapleMapInfoRetriever/dist/\n+/tools/MapleMapInfoRetriever/nbproject/private/\n+\n /tools/MapleMesoFetcher/build/\n /tools/MapleMesoFetcher/dist/\n /tools/MapleMesoFetcher/nbproject/private/\n@@ -31,14 +35,14 @@\n /tools/MapleSkillMakerFetcher/dist/\n /tools/MapleSkillMakerFetcher/nbproject/private/\n \n+/tools/MapleSkillMakerReagentIndexer/build/\n+/tools/MapleSkillMakerReagentIndexer/dist/\n+/tools/MapleSkillMakerReagentIndexer/nbproject/private/\n+\n /tools/MobBookIndexer/build/\n /tools/MobBookIndexer/dist/\n /tools/MobBookIndexer/nbproject/private/\n \n /tools/MobBookUpdate/build/\n /tools/MobBookUpdate/dist/\n /tools/MobBookUpdate/nbproject/private/\n-\n-/tools/MapleMapInfoRetriever/build/\n-/tools/MapleMapInfoRetriever/dist/\n-/tools/MapleMapInfoRetriever/nbproject/private/"}, {"sha": "8397b7973ca07fe7938da2553c97733ed2e7e545", "filename": "dist/MapleSolaxia.jar", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/dist/MapleSolaxia.jar", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/dist/MapleSolaxia.jar", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/dist/MapleSolaxia.jar?ref=3b30244239892e62467a937cd65a9cf23477ce52"}, {"sha": "1bf5265e14665a09a06ac15be7c8710efc545389", "filename": "docs/feature_list.txt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/docs/feature_list.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/docs/feature_list.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/feature_list.txt?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -27,6 +27,10 @@ PQs:\n * BalrogPQ semi-functional.\n * Capt. Latanica remade as an event (parties can now fight the boss).\n \n+Skills:\n+* Maker skill features properly developed.\n+* Server is using heurisitics to calculate fee costs for the Maker (errors sums up to 8k mesos, reagent errors stacks up comformant with it's level).\n+\n Quests:\n * Doll house quest functional.\n * Quests can now reward properly items when matching a reward item with the player's job."}, {"sha": "2802aa79e528e26cc06df881d10fc9d6050037ff", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -685,4 +685,11 @@ Corrigido bug no ThreadTracker n\n 18 - 20 Novembro 2017,\n Implementado items sendo dropados de reatores intervaladamente, GMS-like.\n Adicionado informa\ufffd\ufffdo ao jogador que tentar completar uma quest com item necess\ufffdrio equipado.\n-Nova ferramenta: MapleMapInfoRetriever. Detec\ufffd\ufffdo b\ufffdsica de mapas com sem n\ufffd de info em sua estrutura WZ.\n\\ No newline at end of file\n+Nova ferramenta: MapleMapInfoRetriever. Detec\ufffd\ufffdo b\ufffdsica de mapas com sem n\ufffd de info em sua estrutura WZ.\n+Adicionado scripts para Power B. Fore npc.\n+\n+21 - 23 Novembro 2017,\n+Implementado Maker skill (m\ufffdtodos de packets pelo menos j\ufffd existiam).\n+Corrigido bug em MapleSkillMakerFetcher, atualizado DB com as tabelas normalizadas.\n+Nova ferramenta: MapleSkillMakerReagentIndexer. Agrupa no banco de dados informa\ufffd\ufffdo pertinente aos reagentes do Maker, para serem usados pelo server.\n+Quests nivelando/utilizando o Maker funcionam corretamente agora.\n\\ No newline at end of file"}, {"sha": "315661112b102de413c38cc32b32cf9b0dd3dbf1", "filename": "nbproject/private/private.xml", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/nbproject/private/private.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/nbproject/private/private.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/nbproject/private/private.xml?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -2,6 +2,9 @@\n <project-private xmlns=\"http://www.netbeans.org/ns/project-private/1\">\n     <editor-bookmarks xmlns=\"http://www.netbeans.org/ns/editor-bookmarks/2\" lastBookmarkId=\"2\"/>\n     <open-files xmlns=\"http://www.netbeans.org/ns/projectui-open-files/2\">\n-        <group/>\n+        <group>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/constants/ServerConstants.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/server/MakerItemFactory.java</file>\n+        </group>\n     </open-files>\n </project-private>"}, {"sha": "38386a879fa840a8c340e223a1b5fb4a646cce86", "filename": "scripts/npc/1012118.js", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1012118.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1012118.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1012118.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -3,9 +3,13 @@ var map = 910060000;\n var num = 5;\n var maxp = 5;\n \n+function start() {\n+    action(1, 0, 0);\n+}\n+\n function action(mode, type, selection) {\n     if (mode == 1) {\n-    \tstatus++;\n+\tstatus++;\n     } else {\n \tif (status <= 1) {\n \t    cm.dispose();\n@@ -14,10 +18,17 @@ function action(mode, type, selection) {\n \tstatus--;\n     }\n     if (status == 0) {\n-\tif (cm.isQuestStarted(22515) || cm.isQuestStarted(22516) || cm.isQuestStarted(22517) || cm.isQuestStarted(22518)) {\n+\tif(cm.getLevel() >= 20) {\n+                cm.sendOk(\"This training ground is available only for those under level 20.\");\n+                cm.dispose();\n+                return;\n+        }\n+        \n+        if (cm.isQuestActive(22515) || cm.isQuestActive(22516) || cm.isQuestActive(22517) || cm.isQuestActive(22518)) {\n \t\tcm.sendYesNo(\"Would you like to go in the special Spore Training Center?\");\n \t\tstatus = 1;\n \t}\n+        \n \tvar selStr = \"Would you like to go into the Training Center?\";\n \tfor (var i = 0; i < num; i++) {\n \t\tselStr += \"\\r\\n#b#L\" + i + \"#Training Center \" + i + \" (\" + cm.getPlayerCount(map + i) + \"/\" + maxp + \")#l#k\";\n@@ -34,7 +45,7 @@ function action(mode, type, selection) {\n \t\tcm.dispose();\n \t}\n     } else if (status == 2) {\n-\t\tcm.warp(910060100,0);\n-\t\tcm.dispose();\n+\tcm.warp(910060100,0);\n+\tcm.dispose();\n     }\n }\n\\ No newline at end of file"}, {"sha": "8713b46c253600861d4c8d3c3a2bdfd104ee3b88", "filename": "scripts/npc/1012119.js", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1012119.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1012119.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1012119.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -3,6 +3,10 @@ var map = 910060000;\n var num = 5;\n var maxp = 5;\n \n+function start() {\n+    action(1, 0, 0);\n+}\n+\n function action(mode, type, selection) {\n     if (mode == 1) {\n \tstatus++;\n@@ -14,10 +18,17 @@ function action(mode, type, selection) {\n \tstatus--;\n     }\n     if (status == 0) {\n-\tif (cm.isQuestStarted(22515) || cm.isQuestStarted(22516) || cm.isQuestStarted(22517) || cm.isQuestStarted(22518)) {\n+        if(cm.getLevel() >= 20) {\n+                cm.sendOk(\"This training ground is available only for those under level 20.\");\n+                cm.dispose();\n+                return;\n+        }\n+        \n+\tif (cm.isQuestActive(22515) || cm.isQuestActive(22516) || cm.isQuestActive(22517) || cm.isQuestActive(22518)) {\n \t\tcm.sendYesNo(\"Would you like to go in the special Spore Training Center?\");\n \t\tstatus = 1;\n \t}\n+        \n \tvar selStr = \"Would you like to go into the Training Center?\";\n \tfor (var i = 0; i < num; i++) {\n \t\tselStr += \"\\r\\n#b#L\" + i + \"#Training Center \" + i + \" (\" + cm.getPlayerCount(map + i) + \"/\" + maxp + \")#l#k\";"}, {"sha": "7b6a0c1ad4241fbfcc7690581d99b9d3b266811f", "filename": "scripts/npc/1022104.js", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1022104.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1022104.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1022104.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,43 @@\n+var status = -1;\n+var map = 910220000;\n+var num = 5;\n+var maxp = 5;\n+\n+function start() {\n+    action(1, 0, 0);\n+}\n+\n+function action(mode, type, selection) {\n+    if (mode == 1) {\n+\tstatus++;\n+    } else {\n+\tif (status <= 1) {\n+\t    cm.dispose();\n+\t    return;\n+\t}\n+\tstatus--;\n+    }\n+    if (status == 0) {\n+        if(cm.getLevel() >= 20) {\n+            cm.sendOk(\"This training ground is available only for those under level 20.\");\n+            cm.dispose();\n+            return;\n+        }\n+        \n+\tvar selStr = \"Would you like to go into the Training Center?\";\n+\tfor (var i = 0; i < num; i++) {\n+\t\tselStr += \"\\r\\n#b#L\" + i + \"#Training Center \" + i + \" (\" + cm.getPlayerCount(map + i) + \"/\" + maxp + \")#l#k\";\n+\t}\n+\tcm.sendSimple(selStr);\n+    } else if (status == 1) {\n+\tif (selection < 0 || selection >= num) {\n+\t\tcm.dispose();\n+\t} else if (cm.getPlayerCount(map + selection) >= maxp) {\n+\t\tcm.sendNext(\"This training center is full.\");\n+\t\tstatus = -1;\n+\t} else {\n+\t\tcm.warp(map + selection, 0);\n+\t\tcm.dispose();\n+\t}\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "7b6a0c1ad4241fbfcc7690581d99b9d3b266811f", "filename": "scripts/npc/1022105.js", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1022105.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1022105.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1022105.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -3,6 +3,10 @@ var map = 910220000;\n var num = 5;\n var maxp = 5;\n \n+function start() {\n+    action(1, 0, 0);\n+}\n+\n function action(mode, type, selection) {\n     if (mode == 1) {\n \tstatus++;\n@@ -14,6 +18,12 @@ function action(mode, type, selection) {\n \tstatus--;\n     }\n     if (status == 0) {\n+        if(cm.getLevel() >= 20) {\n+            cm.sendOk(\"This training ground is available only for those under level 20.\");\n+            cm.dispose();\n+            return;\n+        }\n+        \n \tvar selStr = \"Would you like to go into the Training Center?\";\n \tfor (var i = 0; i < num; i++) {\n \t\tselStr += \"\\r\\n#b#L\" + i + \"#Training Center \" + i + \" (\" + cm.getPlayerCount(map + i) + \"/\" + maxp + \")#l#k\";"}, {"sha": "383ed474ac18c3a285cc09f5464492ffc9083b08", "filename": "scripts/npc/1032113.js", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1032113.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1032113.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1032113.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,43 @@\n+var status = -1;\n+var map = 910120000;\n+var num = 5;\n+var maxp = 5;\n+\n+function start() {\n+    action(1, 0, 0);\n+}\n+\n+function action(mode, type, selection) {\n+    if (mode == 1) {\n+\tstatus++;\n+    } else {\n+\tif (status <= 1) {\n+\t    cm.dispose();\n+\t    return;\n+\t}\n+\tstatus--;\n+    }\n+    if (status == 0) {\n+        if(cm.getLevel() >= 20) {\n+            cm.sendOk(\"This training ground is available only for those under level 20.\");\n+            cm.dispose();\n+            return;\n+        }\n+        \n+\tvar selStr = \"Would you like to go into the Training Center?\";\n+\tfor (var i = 0; i < num; i++) {\n+\t\tselStr += \"\\r\\n#b#L\" + i + \"#Training Center \" + i + \" (\" + cm.getPlayerCount(map + i) + \"/\" + maxp + \")#l#k\";\n+\t}\n+\tcm.sendSimple(selStr);\n+    } else if (status == 1) {\n+\tif (selection < 0 || selection >= num) {\n+\t\tcm.dispose();\n+\t} else if (cm.getPlayerCount(map + selection) >= maxp) {\n+\t\tcm.sendNext(\"This training center is full.\");\n+\t\tstatus = -1;\n+\t} else {\n+\t\tcm.warp(map + selection, 0);\n+\t\tcm.dispose();\n+\t}\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "383ed474ac18c3a285cc09f5464492ffc9083b08", "filename": "scripts/npc/1032114.js", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1032114.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1032114.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1032114.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -3,6 +3,10 @@ var map = 910120000;\n var num = 5;\n var maxp = 5;\n \n+function start() {\n+    action(1, 0, 0);\n+}\n+\n function action(mode, type, selection) {\n     if (mode == 1) {\n \tstatus++;\n@@ -14,6 +18,12 @@ function action(mode, type, selection) {\n \tstatus--;\n     }\n     if (status == 0) {\n+        if(cm.getLevel() >= 20) {\n+            cm.sendOk(\"This training ground is available only for those under level 20.\");\n+            cm.dispose();\n+            return;\n+        }\n+        \n \tvar selStr = \"Would you like to go into the Training Center?\";\n \tfor (var i = 0; i < num; i++) {\n \t\tselStr += \"\\r\\n#b#L\" + i + \"#Training Center \" + i + \" (\" + cm.getPlayerCount(map + i) + \"/\" + maxp + \")#l#k\";"}, {"sha": "4ebe7e3544137db404b77625a1336f8943f0cc60", "filename": "scripts/npc/1052113.js", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1052113.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1052113.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1052113.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,43 @@\n+var status = -1;\n+var map = 910310000;\n+var num = 5;\n+var maxp = 5;\n+\n+function start() {\n+    action(1, 0, 0);\n+}\n+\n+function action(mode, type, selection) {\n+    if (mode == 1) {\n+\tstatus++;\n+    } else {\n+\tif (status <= 1) {\n+\t    cm.dispose();\n+\t    return;\n+\t}\n+\tstatus--;\n+    }\n+    if (status == 0) {\n+        if(cm.getLevel() >= 20) {\n+                cm.sendOk(\"This training ground is available only for those under level 20.\");\n+                cm.dispose();\n+                return;\n+        }\n+        \n+\tvar selStr = \"Would you like to go into the Training Center?\";\n+\tfor (var i = 0; i < num; i++) {\n+\t\tselStr += \"\\r\\n#b#L\" + i + \"#Training Center \" + i + \" (\" + cm.getPlayerCount(map + i) + \"/\" + maxp + \")#l#k\";\n+\t}\n+\tcm.sendSimple(selStr);\n+    } else if (status == 1) {\n+\tif (selection < 0 || selection >= num) {\n+\t\tcm.dispose();\n+\t} else if (cm.getPlayerCount(map + selection) >= maxp) {\n+\t\tcm.sendNext(\"This training center is full.\");\n+\t\tstatus = -1;\n+\t} else {\n+\t\tcm.warp(map + selection, 0);\n+\t\tcm.dispose();\n+\t}\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "6062c957b3b9459d33b7d2ee16c8a1223c4649fc", "filename": "scripts/npc/1052114.js", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1052114.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1052114.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1052114.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,43 @@\n+var status = -1;\n+var map = 910310000;\n+var num = 5;\n+var maxp = 5;\n+\n+function start() {\n+    action(1, 0, 0);\n+}\n+\n+function action(mode, type, selection) {\n+    if (mode == 1) {\n+\tstatus++;\n+    } else {\n+\tif (status <= 1) {\n+\t    cm.dispose();\n+\t    return;\n+\t}\n+\tstatus--;\n+    }\n+    if (status == 0) {\n+        if(cm.getLevel() >= 20) {\n+            cm.sendOk(\"This training ground is available only for those under level 20.\");\n+            cm.dispose();\n+            return;\n+        }\n+        \n+\tvar selStr = \"Would you like to go into the Training Center?\";\n+\tfor (var i = 0; i < num; i++) {\n+\t\tselStr += \"\\r\\n#b#L\" + i + \"#Training Center \" + i + \" (\" + cm.getPlayerCount(map + i) + \"/\" + maxp + \")#l#k\";\n+\t}\n+\tcm.sendSimple(selStr);\n+    } else if (status == 1) {\n+\tif (selection < 0 || selection >= num) {\n+\t\tcm.dispose();\n+\t} else if (cm.getPlayerCount(map + selection) >= maxp) {\n+\t\tcm.sendNext(\"This training center is full.\");\n+\t\tstatus = -1;\n+\t} else {\n+\t\tcm.warp(map + selection, 0);\n+\t\tcm.dispose();\n+\t}\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "98b861088f821c150317f5c48697880d1bc1e681", "filename": "scripts/npc/1095001.js", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1095001.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1095001.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1095001.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -3,6 +3,10 @@ var map = 912030000;\n var num = 5;\n var maxp = 5;\n \n+function start() {\n+    action(1, 0, 0);\n+}\n+\n function action(mode, type, selection) {\n     if (mode == 1) {\n \tstatus++;\n@@ -14,6 +18,12 @@ function action(mode, type, selection) {\n \tstatus--;\n     }\n     if (status == 0) {\n+        if(cm.getLevel() >= 20) {\n+            cm.sendOk(\"This training ground is available only for those under level 20.\");\n+            cm.dispose();\n+            return;\n+        }\n+        \n \tvar selStr = \"Would you like to go into the Training Center?\";\n \tfor (var i = 0; i < num; i++) {\n \t\tselStr += \"\\r\\n#b#L\" + i + \"#Training Center \" + i + \" (\" + cm.getPlayerCount(map + i) + \"/\" + maxp + \")#l#k\";"}, {"sha": "98b861088f821c150317f5c48697880d1bc1e681", "filename": "scripts/npc/1095002.js", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1095002.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/npc/1095002.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1095002.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -3,6 +3,10 @@ var map = 912030000;\n var num = 5;\n var maxp = 5;\n \n+function start() {\n+    action(1, 0, 0);\n+}\n+\n function action(mode, type, selection) {\n     if (mode == 1) {\n \tstatus++;\n@@ -14,6 +18,12 @@ function action(mode, type, selection) {\n \tstatus--;\n     }\n     if (status == 0) {\n+        if(cm.getLevel() >= 20) {\n+            cm.sendOk(\"This training ground is available only for those under level 20.\");\n+            cm.dispose();\n+            return;\n+        }\n+        \n \tvar selStr = \"Would you like to go into the Training Center?\";\n \tfor (var i = 0; i < num; i++) {\n \t\tselStr += \"\\r\\n#b#L\" + i + \"#Training Center \" + i + \" (\" + cm.getPlayerCount(map + i) + \"/\" + maxp + \")#l#k\";"}, {"sha": "0efbe4d049f31ef4e93e979a751e1cbccb1a0f0f", "filename": "scripts/portal/ariant_castle.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/portal/ariant_castle.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/portal/ariant_castle.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/ariant_castle.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -32,7 +32,7 @@\n function enter(pi) {\n \tif (pi.getPlayer().haveItem(4031582) == true) {\n \t\tpi.playPortalSound();\n-\t\tpi.warp(260000301, 0);\n+\t\tpi.warp(260000301, 5);\n \t\treturn true;\n \t} else {\n \t\tpi.playerMessage(5, \"You can enter only if you have a Entry Pass to the Palace.\");"}, {"sha": "554fb29d1007008200196db5773cfe64fa606e34", "filename": "scripts/portal/ariant_queens.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/portal/ariant_queens.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/portal/ariant_queens.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/ariant_queens.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -1,3 +1,4 @@\n //some quest where you must use hidden portals\n function enter(pi) {\n+    return false;\n }\n\\ No newline at end of file"}, {"sha": "c2ebfe38c84e2ad4de8d6488005aae8f4ad950bb", "filename": "scripts/quest/6030.js", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/quest/6030.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/quest/6030.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/6030.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,56 @@\n+/*\n+\tThis file is part of the MapleSolaxiaV2 Maple Story Server\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+/* \n+\tQuest: Carson's Fundamentals of Alchemy\n+ */\n+\n+var status = -1;\n+\n+function end(mode, type, selection) {\n+    if (mode == -1) {\n+        qm.dispose();\n+    } else {\n+        if(mode == 0 && type > 0) {\n+            qm.dispose();\n+            return;\n+        }\n+        \n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        \n+        if (status == 0) {\n+            qm.sendNext(\"I am to teach you about the fundamentals of Alchemy.\");\n+        } else if (status == 1) {\n+            qm.sendNextPrev(\"While science is good to take a look on the thoughtful side of the elements that compounds the items, it alone is not nearly enough to devise an item.\");\n+        } else if (status == 2) {\n+            qm.sendNextPrev(\"In fact, to be able to 'tell the pieces' to become a whole, how should it be done? The rustic ways of the blacksmithing winds up dumbing down some latent potentials of the items.\");\n+        } else if (status == 3) {\n+            qm.sendNextPrev(\"Alchemy can be employed for this task. Cleanly and swiftly, #rit merges the parts that forms an item with almost no drawbacks#k, making out the most of the process with almost no scrapover, if done right. It takes a while to master it, but once it is done, everything will run out neatly.\");\n+        } else if (status == 4) {\n+            qm.sendNextPrev(\"And remember this: the maxima of #bExchange#k, the area of the fundamentals of Alchemy where the total amount of the material does not change, is that no item can be created from nothing. Understood?\");\n+        } else if (status == 5) {\n+            qm.gainMeso(-10000);\n+\n+            qm.forceCompleteQuest();\n+            qm.dispose();\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "9156b8237ab7066cf4914ed649f178f7703ced78", "filename": "scripts/quest/6031.js", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/quest/6031.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/quest/6031.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/6031.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,56 @@\n+/*\n+\tThis file is part of the MapleSolaxiaV2 Maple Story Server\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+/* \n+\tQuest: Hughes the Fuse's Basic of Theory of Science\n+ */\n+\n+var status = -1;\n+\n+function end(mode, type, selection) {\n+    if (mode == -1) {\n+        qm.dispose();\n+    } else {\n+        if(mode == 0 && type > 0) {\n+            qm.dispose();\n+            return;\n+        }\n+        \n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        \n+        if (status == 0) {\n+            qm.sendNext(\"I am to teach you about the basics of the Theory of Science.\");\n+        } else if (status == 1) {\n+            qm.sendNextPrev(\"Science stages where the alchemy doesn't meet the requirements. All items have molecular constitutions. The #rnature of their arrangements and each intrinsic unit of matter#k defines the many properties an item will have.\");\n+        } else if (status == 2) {\n+            qm.sendNextPrev(\"This makes true in the scenario of the #rMaker#k as well. One must be able to study the traces of each component that is being used to form the item, to be able to tell if the experiment will utmostly succeed of fail.\");\n+        } else if (status == 3) {\n+            qm.sendNextPrev(\"Take that in mind: the main perspective of science, that one engine that makes it flows the strongest, whatever scenario it is, is the aspect of #bunderstanding the process#k that generates the results, not simply throwing away tries at will.\");\n+        } else if (status == 4) {\n+            qm.sendNextPrev(\"That has been made clear, right? Good, then the class is over. Dismissed.\");\n+        } else if (status == 5) {\n+            qm.gainMeso(-10000);\n+            \n+            qm.forceCompleteQuest();\n+            qm.dispose();\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "94c54e66207db37dd1e5f34b138d207068d55d44", "filename": "scripts/quest/6032.js", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/quest/6032.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/quest/6032.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/6032.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,54 @@\n+/*\n+\tThis file is part of the MapleSolaxiaV2 Maple Story Server\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+/* \n+\tQuest: Meren's Class on the Actual Practice\n+ */\n+\n+var status = -1;\n+\n+function end(mode, type, selection) {\n+    if (mode == -1) {\n+        qm.dispose();\n+    } else {\n+        if(mode == 0 && type > 0) {\n+            qm.dispose();\n+            return;\n+        }\n+        \n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        \n+        if (status == 0) {\n+            qm.sendNext(\"So you've come to attend my class, huh? Right, I'll make it fast.\");\n+        } else if (status == 1) {\n+            qm.sendNextPrev(\"I will teach you the actual application of the #bMaker#k method. All you need to do is have an item in mind to make, gather all the ingredients from the receipt and mix them in a #rscientifically alchemisty way#k. Easy, isn't it?\");\n+        } else if (status == 2) {\n+            qm.sendNextPrev(\"Let's take producing the #bWeight Earrings#k as an example. There is a rather specific #rductility theory#k to generate it, as any other 'unique' items have, the name going around the #rmain physical force#k acting over the thing we are working on: on that case, the #bDuctility Theory of Gravity#k (as it is a 'Weighted Earrings', got it?).\");\n+        } else if (status == 3) {\n+            qm.sendNextPrev(\"Ok, now you need to hand me a fee, 10,000 mesos that is, for that information. The collected fee shall be used for acquiring the needed materials for your learning of the fine art of the #bMaker#k.\");\n+        } else if (status == 4) {\n+            qm.gainMeso(-10000);\n+            \n+            qm.forceCompleteQuest();\n+            qm.dispose();\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "86ca6ef901ddf083e8b69da138d75976527cbede", "filename": "scripts/quest/6033.js", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/quest/6033.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/quest/6033.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/6033.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,60 @@\n+/*\n+\tThis file is part of the MapleSolaxiaV2 Maple Story Server\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+/* Maker Skill\n+\tMoren's Second round of teaching\n+\t2nd skill level\n+ */\n+\n+var status = -1;\n+\n+function end(mode, type, selection) {\n+    if (mode == -1) {\n+        qm.dispose();\n+    } else {\n+        if(mode == 0 && type > 0) {\n+            qm.dispose();\n+            return;\n+        }\n+        \n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        \n+        if (status == 0) {\n+            qm.sendNext(\"Hm, so you claim to have brought the #b#t4260003##k? Ok, let's take a look into it.\");\n+        } else if (status == 1) {\n+            if(qm.getQuestProgress(6033) == 1 && qm.haveItem(4260003, 1)) {\n+                qm.sendNext(\"You indeed have crafted a fine piece of Monster Crystal, I see. You passed! Now, I shall teach you the next steps of the Maker skill. Keep the monster crystal with you as well, it's your work.\");\n+                \n+                var skillid = Math.floor(qm.getPlayer().getJob().getId() / 1000) * 10000000 + 1007;\n+                qm.teachSkill(skillid, 2, 3, -1);\n+                \n+                qm.gainExp(230000 * qm.getPlayer().getExpRate());\n+                qm.forceCompleteQuest();\n+                \n+                \n+            } else {\n+                qm.sendNext(\"Hey, what's wrong? I did tell you to make a monster crystal to pass my test, didn't I? Buying one or crafting before the start of the test is NOT part of the deal. Go craft me an #b#t4260003##k.\");\n+            }\n+            \n+            qm.dispose();\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "7de598c8fb759731fa4664e0eb403d8caebbbf44", "filename": "scripts/quest/6036.js", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/scripts/quest/6036.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/scripts/quest/6036.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/6036.js?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,59 @@\n+/*\n+\tThis file is part of the MapleSolaxiaV2 Maple Story Server\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+/*  Maker Skill\n+\tA Surprise Outcome\n+\t3rd skill level\n+ */\n+\n+var status = -1;\n+\n+function end(mode, type, selection) {\n+    if (mode == -1) {\n+        qm.dispose();\n+    } else {\n+        if(mode == 0 && type > 0) {\n+            qm.dispose();\n+            return;\n+        }\n+        \n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        \n+        if (status == 0) {\n+            qm.sendNext(\"Bothering me again? What's it?\");\n+        } else if (status == 1) {\n+            if(qm.haveItem(4031980, 1)) {\n+                qm.sendNext(\"You crafted a #b#t4031980##k?! How comes, how did you do it?? ... Well, that can't be helped, I guess. The student surpassed the teacher! Youth sure do wonders to one's perception capabilities.\\r\\n\\r\\nYou are now ready to take the last step on mastering the Maker skill, contemplate it at it's finest form!\");\n+                qm.gainItem(4031980, -1);\n+                \n+                var skillid = Math.floor(qm.getPlayer().getJob().getId() / 1000) * 10000000 + 1007;\n+                qm.teachSkill(skillid, 3, 3, -1);\n+                \n+                qm.gainExp(300000 * qm.getPlayer().getExpRate());\n+                qm.forceCompleteQuest();\n+            } else {\n+                qm.sendNext(\"... Please step aside, I can't finish this work if I'm being distracted at every moment.\");\n+            }\n+            \n+            qm.dispose();\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "029d3f17f7a0966e251ec6c3a32debc6824792a0", "filename": "sql/db_database.sql", "status": "modified", "additions": 873, "deletions": 817, "changes": 1690, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/sql/db_database.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/sql/db_database.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_database.sql?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -6986,7 +6986,7 @@ INSERT IGNORE INTO `temp_data` (`id`, `dropperid`, `itemid`, `minimum_quantity`,\n (6765, 8140002, 1462012, 1, 1, 0, 500),\n (6766, 8140002, 2070005, 1, 1, 0, 400),\n (6767, 8140002, 1032022, 1, 1, 0, 1000),\n-(6768, 8140002, 4000240, 1, 1, 0, 600000),\n+(6768, 8140002, 4000240, 1, 1, 0, 60000),\n (6769, 8140002, 1052125, 1, 1, 0, 700),\n (6770, 8140002, 2330003, 1, 1, 0, 500),\n (6771, 8140002, 2040026, 1, 1, 0, 300),\n@@ -13071,48 +13071,48 @@ CREATE TABLE IF NOT EXISTS `makerrewarddata` (\n \n # updated with the MapleSkillMakerFetcher feature\n INSERT IGNORE INTO `makercreatedata` (`id`, `itemid`, `req_level`, `req_maker_level`, `req_meso`, `req_item`, `req_equip`, `catalyst`, `quantity`, `tuc`) VALUES\n-  (0, 4250000, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250100, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250200, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250300, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250400, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250500, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250600, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250700, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250800, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250900, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4251000, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4251100, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4251300, 75, 2, 150000, 0, 0, 0, 1, 0),\n-  (0, 4251400, 75, 2, 150000, 0, 0, 0, 1, 0),\n-  (0, 4250001, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250101, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250201, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250301, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250401, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250501, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250601, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250701, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250801, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250901, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4251001, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4251101, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4251301, 75, 2, 450000, 0, 0, 0, 1, 0),\n-  (0, 4251401, 75, 2, 450000, 0, 0, 0, 1, 0),\n-  (0, 4250002, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250102, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250202, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250302, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250402, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250502, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250602, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250702, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250802, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250902, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4251002, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4251102, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4251302, 75, 3, 750000, 0, 0, 0, 1, 0),\n-  (0, 4251402, 75, 3, 750000, 0, 0, 0, 1, 0),\n+  (0, 4250000, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250100, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250200, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250300, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250400, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250500, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250600, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250700, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250800, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250900, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4251000, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4251100, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4251300, 75, 2, 164000, 0, 0, 0, 1, 0),\n+  (0, 4251400, 75, 2, 164000, 0, 0, 0, 1, 0),\n+  (0, 4250001, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4250101, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4250201, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4250301, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4250401, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4250501, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4250601, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4250701, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4250801, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4250901, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4251001, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4251101, 45, 1, 328000, 0, 0, 0, 1, 0),\n+  (0, 4251301, 75, 2, 491000, 0, 0, 0, 1, 0),\n+  (0, 4251401, 75, 2, 491000, 0, 0, 0, 1, 0),\n+  (0, 4250002, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4250102, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4250202, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4250302, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4250402, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4250502, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4250602, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4250702, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4250802, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4250902, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4251002, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4251102, 45, 2, 546000, 0, 0, 0, 1, 0),\n+  (0, 4251302, 75, 3, 819000, 0, 0, 0, 1, 0),\n+  (0, 4251402, 75, 3, 819000, 0, 0, 0, 1, 0),\n   (0, 4001174, 45, 1, 0, 4031966, 0, 0, 1, 0),\n   (0, 4001175, 50, 1, 0, 4031967, 0, 0, 1, 0),\n   (0, 4001176, 55, 1, 0, 4031968, 0, 0, 10, 0),\n@@ -13129,780 +13129,780 @@ INSERT IGNORE INTO `makercreatedata` (`id`, `itemid`, `req_level`, `req_maker_le\n   (0, 4001186, 105, 3, 0, 4031978, 0, 0, 1, 0),\n   (0, 4032334, 150, 1, 0, 0, 0, 0, 1, 0),\n   (0, 4032312, 70, 1, 0, 0, 0, 0, 1, 0),\n-  (0, 2041058, 50, 1, 50000, 0, 1122013, 0, 1, 0),\n-  (0, 2040727, 50, 1, 50000, 0, 1122013, 0, 1, 0),\n-  (1, 1002028, 45, 1, 50000, 0, 0, 4130018, 1, 1),\n-  (1, 1002085, 45, 1, 45000, 0, 0, 4130018, 1, 1),\n-  (1, 1002086, 45, 1, 37500, 0, 0, 4130018, 1, 1),\n-  (1, 1002022, 50, 1, 55000, 0, 0, 4130018, 1, 1),\n-  (1, 1002100, 50, 1, 55000, 0, 0, 4130018, 1, 1),\n-  (1, 1002101, 50, 1, 55000, 0, 0, 4130018, 1, 1),\n-  (1, 1002029, 55, 1, 75000, 0, 0, 4130018, 1, 1),\n-  (1, 1002084, 55, 1, 75000, 0, 0, 4130018, 1, 1),\n-  (1, 1002030, 65, 1, 85000, 0, 0, 4130018, 1, 1),\n-  (1, 1002094, 65, 1, 85000, 0, 0, 4130018, 1, 1),\n-  (1, 1002095, 65, 1, 85000, 0, 0, 4130018, 1, 1),\n-  (1, 1002338, 75, 2, 133000, 0, 0, 4130018, 1, 2),\n-  (1, 1002339, 75, 2, 133000, 0, 0, 4130018, 1, 2),\n-  (1, 1002340, 75, 2, 133000, 0, 0, 4130018, 1, 2),\n-  (1, 1002528, 85, 2, 147000, 0, 0, 4130018, 1, 2),\n-  (1, 1002529, 85, 2, 147000, 0, 0, 4130018, 1, 2),\n-  (1, 1002530, 85, 2, 147000, 0, 0, 4130018, 1, 2),\n-  (1, 1002531, 85, 2, 147000, 0, 0, 4130018, 1, 2),\n-  (1, 1002532, 85, 2, 147000, 0, 0, 4130018, 1, 2),\n-  (1, 1002377, 95, 2, 168000, 0, 0, 4130018, 1, 2),\n-  (1, 1002378, 95, 2, 168000, 0, 0, 4130018, 1, 2),\n-  (1, 1002379, 95, 2, 168000, 0, 0, 4130018, 1, 2),\n-  (1, 1002551, 105, 3, 280000, 0, 0, 4130018, 1, 3),\n-  (1, 1002790, 115, 3, 320000, 0, 0, 4130018, 1, 3),\n-  (1, 1002776, 115, 3, 320000, 0, 0, 4130018, 1, 3),\n-  (1, 1040087, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1040088, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1040089, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1041087, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1041088, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1041089, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1040090, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1040091, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1040092, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1040093, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1041091, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1041092, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1041093, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1040102, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1040103, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1040104, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1041097, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1041098, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1041099, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1040111, 85, 2, 112000, 0, 0, 4130019, 1, 2),\n-  (1, 1040112, 85, 2, 112000, 0, 0, 4130019, 1, 2),\n-  (1, 1040113, 85, 2, 112000, 0, 0, 4130019, 1, 2),\n-  (1, 1041119, 85, 2, 133000, 0, 0, 4130019, 1, 2),\n-  (1, 1041120, 85, 2, 133000, 0, 0, 4130019, 1, 2),\n-  (1, 1041121, 85, 2, 133000, 0, 0, 4130019, 1, 2),\n-  (1, 1040120, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1040121, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1040122, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1041122, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1041123, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1041124, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1060076, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1060077, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1060078, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1061086, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1061087, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1061088, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1060079, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1060080, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1060081, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1060082, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1061090, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1061091, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1061092, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1060090, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1060091, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1060092, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1061096, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1061097, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1061098, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1060100, 85, 2, 98000, 0, 0, 4130020, 1, 2),\n-  (1, 1060101, 85, 2, 98000, 0, 0, 4130020, 1, 2),\n-  (1, 1060102, 85, 2, 98000, 0, 0, 4130020, 1, 2),\n-  (1, 1061118, 85, 2, 119000, 0, 0, 4130020, 1, 2),\n-  (1, 1061119, 85, 2, 119000, 0, 0, 4130020, 1, 2),\n-  (1, 1061120, 85, 2, 119000, 0, 0, 4130020, 1, 2),\n-  (1, 1060109, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1060110, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1060111, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1061121, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1061122, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1061123, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1050080, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1050081, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1050082, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1050083, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1051077, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1051078, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1051079, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1051080, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1052075, 105, 3, 320000, 0, 0, 4130021, 1, 3),\n-  (1, 1052160, 115, 3, 380000, 0, 0, 4130021, 1, 3),\n-  (1, 1052155, 115, 3, 380000, 0, 0, 4130021, 1, 3),\n-  (1, 1072132, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (1, 1072133, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (1, 1072134, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (1, 1072135, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (1, 1072147, 55, 1, 35000, 0, 0, 4130001, 1, 1),\n-  (1, 1072148, 55, 1, 35000, 0, 0, 4130001, 1, 1),\n-  (1, 1072149, 55, 1, 35000, 0, 0, 4130001, 1, 1),\n-  (1, 1072154, 65, 1, 42500, 0, 0, 4130001, 1, 1),\n-  (1, 1072155, 65, 1, 42500, 0, 0, 4130001, 1, 1),\n-  (1, 1072156, 65, 1, 42500, 0, 0, 4130001, 1, 1),\n-  (1, 1072210, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (1, 1072211, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (1, 1072212, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (1, 1072196, 85, 2, 105000, 0, 0, 4130001, 1, 2),\n-  (1, 1072197, 85, 2, 105000, 0, 0, 4130001, 1, 2),\n-  (1, 1072198, 85, 2, 105000, 0, 0, 4130001, 1, 2),\n-  (1, 1072220, 95, 2, 126000, 0, 0, 4130001, 1, 2),\n-  (1, 1072221, 95, 2, 126000, 0, 0, 4130001, 1, 2),\n-  (1, 1072222, 95, 2, 126000, 0, 0, 4130001, 1, 2),\n-  (1, 1072273, 105, 3, 210000, 0, 0, 4130001, 1, 3),\n-  (1, 1072361, 115, 3, 240000, 0, 0, 4130001, 1, 3),\n-  (1, 1072355, 115, 3, 240000, 0, 0, 4130001, 1, 3),\n-  (1, 1082009, 45, 1, 45000, 0, 0, 4130000, 1, 1),\n-  (1, 1082010, 45, 1, 50000, 0, 0, 4130000, 1, 1),\n-  (1, 1082011, 45, 1, 55000, 0, 0, 4130000, 1, 1),\n-  (1, 1082059, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n-  (1, 1082060, 55, 1, 65000, 0, 0, 4130000, 1, 1),\n-  (1, 1082061, 55, 1, 70000, 0, 0, 4130000, 1, 1),\n-  (1, 1082103, 65, 1, 75000, 0, 0, 4130000, 1, 1),\n-  (1, 1082104, 65, 1, 80000, 0, 0, 4130000, 1, 1),\n-  (1, 1082105, 65, 1, 85000, 0, 0, 4130000, 1, 1),\n-  (1, 1082114, 75, 2, 147000, 0, 0, 4130000, 1, 2),\n-  (1, 1082115, 75, 2, 150500, 0, 0, 4130000, 1, 2),\n-  (1, 1082116, 75, 2, 154000, 0, 0, 4130000, 1, 2),\n-  (1, 1082117, 75, 2, 154000, 0, 0, 4130000, 1, 2),\n-  (1, 1082128, 85, 2, 168000, 0, 0, 4130000, 1, 2),\n-  (1, 1082129, 85, 2, 171500, 0, 0, 4130000, 1, 2),\n-  (1, 1082130, 85, 2, 175000, 0, 0, 4130000, 1, 2),\n-  (1, 1082139, 95, 2, 189000, 0, 0, 4130000, 1, 2),\n-  (1, 1082140, 95, 2, 192500, 0, 0, 4130000, 1, 2),\n-  (1, 1082141, 95, 2, 196000, 0, 0, 4130000, 1, 2),\n-  (1, 1082168, 105, 3, 300000, 0, 0, 4130000, 1, 3),\n-  (1, 1082239, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (1, 1082234, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (1, 1092004, 45, 1, 75000, 0, 0, 4130022, 1, 1),\n-  (1, 1092009, 55, 1, 90000, 0, 0, 4130022, 1, 1),\n-  (1, 1092010, 55, 1, 95000, 0, 0, 4130022, 1, 1),\n-  (1, 1092011, 55, 1, 95000, 0, 0, 4130022, 1, 1),\n-  (1, 1092015, 65, 1, 100000, 0, 0, 4130022, 1, 1),\n-  (1, 1092016, 65, 1, 105000, 0, 0, 4130022, 1, 1),\n-  (1, 1092017, 65, 1, 105000, 0, 0, 4130022, 1, 1),\n-  (1, 1092023, 75, 2, 154000, 0, 0, 4130022, 1, 2),\n-  (1, 1092024, 75, 2, 161000, 0, 0, 4130022, 1, 2),\n-  (1, 1092025, 75, 2, 161000, 0, 0, 4130022, 1, 2),\n-  (1, 1092026, 85, 2, 168000, 0, 0, 4130022, 1, 2),\n-  (1, 1092027, 85, 2, 175000, 0, 0, 4130022, 1, 2),\n-  (1, 1092028, 85, 2, 175000, 0, 0, 4130022, 1, 2),\n-  (1, 1092036, 95, 2, 182000, 0, 0, 4130022, 1, 2),\n-  (1, 1092037, 95, 2, 189000, 0, 0, 4130022, 1, 2),\n-  (1, 1092038, 95, 2, 196000, 0, 0, 4130022, 1, 2),\n-  (1, 1092060, 105, 3, 210000, 0, 0, 4130022, 1, 3),\n-  (1, 1092058, 115, 3, 350000, 0, 0, 4130022, 1, 3),\n-  (1, 1302010, 45, 1, 60000, 0, 0, 4130002, 1, 1),\n-  (1, 1312008, 45, 1, 70000, 0, 0, 4130003, 1, 1),\n-  (1, 1322017, 45, 1, 70000, 0, 0, 4130004, 1, 1),\n-  (1, 1402003, 45, 1, 100000, 0, 0, 4130005, 1, 1),\n-  (1, 1412003, 45, 1, 70000, 0, 0, 4130006, 1, 1),\n-  (1, 1422005, 45, 1, 75000, 0, 0, 4130007, 1, 1),\n-  (1, 1432004, 45, 1, 75000, 0, 0, 4130008, 1, 1),\n-  (1, 1442005, 45, 1, 75000, 0, 0, 4130009, 1, 1),\n-  (1, 1302011, 55, 1, 75000, 0, 0, 4130002, 1, 1),\n-  (1, 1312009, 55, 1, 95000, 0, 0, 4130003, 1, 1),\n-  (1, 1322018, 55, 1, 95000, 0, 0, 4130004, 1, 1),\n-  (1, 1402011, 55, 1, 115000, 0, 0, 4130005, 1, 1),\n-  (1, 1412007, 55, 1, 95000, 0, 0, 4130006, 1, 1),\n-  (1, 1422009, 55, 1, 95000, 0, 0, 4130007, 1, 1),\n-  (1, 1432006, 55, 1, 95000, 0, 0, 4130008, 1, 1),\n-  (1, 1442010, 55, 1, 125000, 0, 0, 4130009, 1, 1),\n-  (1, 1302012, 65, 1, 125000, 0, 0, 4130002, 1, 1),\n-  (1, 1312010, 65, 1, 150000, 0, 0, 4130003, 1, 1),\n-  (1, 1322019, 65, 1, 125000, 0, 0, 4130004, 1, 1),\n-  (1, 1402012, 65, 1, 130000, 0, 0, 4130005, 1, 1),\n-  (1, 1412008, 65, 1, 125000, 0, 0, 4130006, 1, 1),\n-  (1, 1422010, 65, 1, 125000, 0, 0, 4130007, 1, 1),\n-  (1, 1432007, 65, 1, 125000, 0, 0, 4130008, 1, 1),\n-  (1, 1442008, 65, 1, 150000, 0, 0, 4130009, 1, 1),\n-  (1, 1322020, 70, 1, 150000, 0, 0, 4130004, 1, 1),\n-  (1, 1302018, 75, 2, 210000, 0, 0, 4130002, 1, 2),\n-  (1, 1312011, 75, 2, 245000, 0, 0, 4130003, 1, 2),\n-  (1, 1322028, 75, 2, 245000, 0, 0, 4130004, 1, 2),\n-  (1, 1402004, 75, 2, 210000, 0, 0, 4130005, 1, 2),\n-  (1, 1402015, 75, 2, 210000, 0, 0, 4130005, 1, 2),\n-  (1, 1412009, 75, 2, 217000, 0, 0, 4130006, 1, 2),\n-  (1, 1422012, 75, 2, 217000, 0, 0, 4130007, 1, 2),\n-  (1, 1432010, 75, 2, 217000, 0, 0, 4130008, 1, 2),\n-  (1, 1442019, 75, 2, 245000, 0, 0, 4130009, 1, 2),\n-  (1, 1302023, 85, 2, 245000, 0, 0, 4130002, 1, 2),\n-  (1, 1312015, 85, 2, 280000, 0, 0, 4130003, 1, 2),\n-  (1, 1322029, 85, 2, 280000, 0, 0, 4130004, 1, 2),\n-  (1, 1402005, 85, 2, 280000, 0, 0, 4130005, 1, 2),\n-  (1, 1402016, 85, 2, 280000, 0, 0, 4130005, 1, 2),\n-  (1, 1412010, 85, 2, 259000, 0, 0, 4130006, 1, 2),\n-  (1, 1422013, 85, 2, 259000, 0, 0, 4130007, 1, 2),\n-  (1, 1432011, 85, 2, 259000, 0, 0, 4130008, 1, 2),\n-  (1, 1442020, 85, 2, 315000, 0, 0, 4130009, 1, 2),\n-  (1, 1302056, 95, 2, 336000, 0, 0, 4130002, 1, 2),\n-  (1, 1312030, 95, 2, 329000, 0, 0, 4130003, 1, 2),\n-  (1, 1322045, 95, 2, 329000, 0, 0, 4130004, 1, 2),\n-  (1, 1402035, 95, 2, 329000, 0, 0, 4130005, 1, 2),\n-  (1, 1412021, 95, 2, 343000, 0, 0, 4130006, 1, 2),\n-  (1, 1422027, 95, 2, 315000, 0, 0, 4130007, 1, 2),\n-  (1, 1432030, 95, 2, 343000, 0, 0, 4130008, 1, 2),\n-  (1, 1442044, 95, 2, 329000, 0, 0, 4130009, 1, 2),\n-  (1, 1302059, 105, 3, 550000, 0, 0, 4130002, 1, 3),\n-  (1, 1312031, 105, 3, 530000, 0, 0, 4130003, 1, 3),\n-  (1, 1322052, 105, 3, 480000, 0, 0, 4130004, 1, 3),\n-  (1, 1402036, 105, 3, 550000, 0, 0, 4130005, 1, 3),\n-  (1, 1412026, 105, 3, 520000, 0, 0, 4130006, 1, 3),\n-  (1, 1422028, 105, 3, 510000, 0, 0, 4130007, 1, 3),\n-  (1, 1432038, 105, 3, 530000, 0, 0, 4130008, 1, 3),\n-  (1, 1442045, 105, 3, 570000, 0, 0, 4130009, 1, 3),\n-  (1, 1302086, 115, 3, 680000, 0, 0, 4130002, 1, 3),\n-  (1, 1312038, 115, 3, 580000, 0, 0, 4130003, 1, 3),\n-  (1, 1322061, 115, 3, 490000, 0, 0, 4130004, 1, 3),\n-  (1, 1402047, 115, 3, 650000, 0, 0, 4130005, 1, 3),\n-  (1, 1412034, 115, 3, 650000, 0, 0, 4130006, 1, 3),\n-  (1, 1422038, 115, 3, 560000, 0, 0, 4130007, 1, 3),\n-  (1, 1432049, 115, 3, 570000, 0, 0, 4130008, 1, 3),\n-  (1, 1442067, 115, 3, 620000, 0, 0, 4130009, 1, 3),\n-  (1, 1302081, 115, 3, 680000, 0, 0, 4130002, 1, 3),\n-  (1, 1312037, 115, 3, 580000, 0, 0, 4130003, 1, 3),\n-  (1, 1322060, 115, 3, 490000, 0, 0, 4130004, 1, 3),\n-  (1, 1402046, 115, 3, 650000, 0, 0, 4130005, 1, 3),\n-  (1, 1412033, 115, 3, 650000, 0, 0, 4130006, 1, 3),\n-  (1, 1422037, 115, 3, 560000, 0, 0, 4130007, 1, 3),\n-  (1, 1432047, 115, 3, 570000, 0, 0, 4130008, 1, 3),\n-  (1, 1442063, 115, 3, 620000, 0, 0, 4130009, 1, 3),\n-  (2, 1002215, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (2, 1002216, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (2, 1002217, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (2, 1002218, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (2, 1002242, 55, 1, 25000, 0, 0, 4130018, 1, 1),\n-  (2, 1002243, 55, 1, 25000, 0, 0, 4130018, 1, 1),\n-  (2, 1002244, 55, 1, 25000, 0, 0, 4130018, 1, 1),\n-  (2, 1002245, 55, 1, 25000, 0, 0, 4130018, 1, 1),\n-  (2, 1002246, 55, 1, 25000, 0, 0, 4130018, 1, 1),\n-  (2, 1002252, 65, 1, 40000, 0, 0, 4130018, 1, 1),\n-  (2, 1002253, 65, 1, 40000, 0, 0, 4130018, 1, 1),\n-  (2, 1002254, 65, 1, 40000, 0, 0, 4130018, 1, 1),\n-  (2, 1002271, 75, 2, 66500, 0, 0, 4130018, 1, 2),\n-  (2, 1002272, 75, 2, 66500, 0, 0, 4130018, 1, 2),\n-  (2, 1002273, 75, 2, 66500, 0, 0, 4130018, 1, 2),\n-  (2, 1002274, 75, 2, 66500, 0, 0, 4130018, 1, 2),\n-  (2, 1002363, 85, 2, 77000, 0, 0, 4130018, 1, 2),\n-  (2, 1002364, 85, 2, 77000, 0, 0, 4130018, 1, 2),\n-  (2, 1002365, 85, 2, 77000, 0, 0, 4130018, 1, 2),\n-  (2, 1002366, 85, 2, 77000, 0, 0, 4130018, 1, 2),\n-  (2, 1002398, 95, 2, 87500, 0, 0, 4130018, 1, 2),\n-  (2, 1002399, 95, 2, 87500, 0, 0, 4130018, 1, 2),\n-  (2, 1002400, 95, 2, 87500, 0, 0, 4130018, 1, 2),\n-  (2, 1002401, 95, 2, 87500, 0, 0, 4130018, 1, 2),\n-  (2, 1002773, 105, 3, 150000, 0, 0, 4130018, 1, 3),\n-  (2, 1002791, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (2, 1002777, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (2, 1050045, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1050046, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1050047, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1050048, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1050049, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1051030, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1051031, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1051032, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1051033, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1051034, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1050053, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1050054, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1050055, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1050056, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1051044, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1051045, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1051046, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1051047, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1050067, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1050068, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1050069, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1050070, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1051052, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1051053, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1051054, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1051055, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1050072, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1050073, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1050074, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1051056, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1051057, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1051058, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1050092, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1050093, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1050094, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1050095, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1051094, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1051095, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1051096, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1051097, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1050102, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1050103, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1050104, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1050105, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1051101, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1051102, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1051103, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1051104, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1052076, 103, 3, 290000, 0, 0, 4130021, 1, 3),\n-  (2, 1052161, 115, 3, 340000, 0, 0, 4130021, 1, 3),\n-  (2, 1052156, 115, 3, 340000, 0, 0, 4130021, 1, 3),\n-  (2, 1072140, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (2, 1072141, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (2, 1072142, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (2, 1072143, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (2, 1072136, 55, 1, 30000, 0, 0, 4130001, 1, 1),\n-  (2, 1072137, 55, 1, 30000, 0, 0, 4130001, 1, 1),\n-  (2, 1072138, 55, 1, 30000, 0, 0, 4130001, 1, 1),\n-  (2, 1072139, 55, 1, 30000, 0, 0, 4130001, 1, 1),\n-  (2, 1072157, 65, 1, 40000, 0, 0, 4130001, 1, 1),\n-  (2, 1072158, 65, 1, 40000, 0, 0, 4130001, 1, 1),\n-  (2, 1072159, 65, 1, 40000, 0, 0, 4130001, 1, 1),\n-  (2, 1072160, 65, 1, 40000, 0, 0, 4130001, 1, 1),\n-  (2, 1072177, 75, 2, 70000, 0, 0, 4130001, 1, 2),\n-  (2, 1072178, 75, 2, 70000, 0, 0, 4130001, 1, 2),\n-  (2, 1072179, 75, 2, 70000, 0, 0, 4130001, 1, 2),\n-  (2, 1072206, 85, 2, 84000, 0, 0, 4130001, 1, 2),\n-  (2, 1072207, 85, 2, 84000, 0, 0, 4130001, 1, 2),\n-  (2, 1072208, 85, 2, 84000, 0, 0, 4130001, 1, 2),\n-  (2, 1072209, 85, 2, 84000, 0, 0, 4130001, 1, 2),\n-  (2, 1072223, 95, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (2, 1072224, 95, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (2, 1072225, 95, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (2, 1072226, 95, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (2, 1072268, 105, 3, 180000, 0, 0, 4130001, 1, 3),\n-  (2, 1072362, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n-  (2, 1072356, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n-  (2, 1082080, 45, 1, 50000, 0, 0, 4130000, 1, 1),\n-  (2, 1082081, 45, 1, 40000, 0, 0, 4130000, 1, 1),\n-  (2, 1082082, 45, 1, 45000, 0, 0, 4130000, 1, 1),\n-  (2, 1082086, 55, 1, 52500, 0, 0, 4130000, 1, 1),\n-  (2, 1082087, 55, 1, 57500, 0, 0, 4130000, 1, 1),\n-  (2, 1082088, 55, 1, 62500, 0, 0, 4130000, 1, 1),\n-  (2, 1082098, 65, 1, 70000, 0, 0, 4130000, 1, 1),\n-  (2, 1082099, 65, 1, 72500, 0, 0, 4130000, 1, 1),\n-  (2, 1082100, 65, 1, 75000, 0, 0, 4130000, 1, 1),\n-  (2, 1082121, 75, 2, 140000, 0, 0, 4130000, 1, 2),\n-  (2, 1082122, 75, 2, 143500, 0, 0, 4130000, 1, 2),\n-  (2, 1082123, 75, 2, 147000, 0, 0, 4130000, 1, 2),\n-  (2, 1082131, 85, 2, 161000, 0, 0, 4130000, 1, 2),\n-  (2, 1082132, 85, 2, 164500, 0, 0, 4130000, 1, 2),\n-  (2, 1082133, 85, 2, 164500, 0, 0, 4130000, 1, 2),\n-  (2, 1082134, 85, 2, 168000, 0, 0, 4130000, 1, 2),\n-  (2, 1082151, 95, 2, 182000, 0, 0, 4130000, 1, 2),\n-  (2, 1082152, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (2, 1082153, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (2, 1082154, 95, 2, 189000, 0, 0, 4130000, 1, 2),\n-  (2, 1082164, 105, 3, 300000, 0, 0, 4130000, 1, 3),\n-  (2, 1082240, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (2, 1082235, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (2, 1092057, 115, 3, 350000, 0, 0, 4130022, 1, 3),\n-  (2, 1372007, 43, 1, 100000, 0, 0, 4130010, 1, 1),\n-  (2, 1382006, 50, 1, 75000, 0, 0, 4130011, 1, 1),\n-  (2, 1372014, 53, 1, 115000, 0, 0, 4130010, 1, 1),\n-  (2, 1382007, 60, 1, 100000, 0, 0, 4130011, 1, 1),\n-  (2, 1372015, 63, 1, 130000, 0, 0, 4130010, 1, 1),\n-  (2, 1382010, 70, 1, 125000, 0, 0, 4130011, 1, 1),\n-  (2, 1372016, 73, 2, 203000, 0, 0, 4130010, 1, 2),\n-  (2, 1382008, 80, 2, 217000, 0, 0, 4130011, 1, 2),\n-  (2, 1372009, 83, 2, 227500, 0, 0, 4130010, 1, 2),\n-  (2, 1382035, 90, 2, 266000, 0, 0, 4130011, 1, 2),\n-  (2, 1372010, 93, 2, 252000, 0, 0, 4130010, 1, 2),\n-  (2, 1372032, 103, 3, 460000, 0, 0, 4130010, 1, 3),\n-  (2, 1382036, 105, 3, 470000, 0, 0, 4130011, 1, 3),\n-  (2, 1372045, 115, 3, 510000, 0, 0, 4130010, 1, 3),\n-  (2, 1382059, 115, 3, 520000, 0, 0, 4130011, 1, 3),\n-  (2, 1372044, 115, 3, 510000, 0, 0, 4130010, 1, 3),\n-  (2, 1382057, 115, 3, 520000, 0, 0, 4130011, 1, 3),\n-  (4, 1002211, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (4, 1002212, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (4, 1002213, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (4, 1002214, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (4, 1002267, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (4, 1002268, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (4, 1002269, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (4, 1002270, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (4, 1002286, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (4, 1002287, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (4, 1002288, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (4, 1002289, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (4, 1002275, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (4, 1002276, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (4, 1002277, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (4, 1002278, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (4, 1002402, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (4, 1002403, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (4, 1002404, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (4, 1002405, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (4, 1002406, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (4, 1002407, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (4, 1002408, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (4, 1002547, 105, 3, 150000, 0, 0, 4130018, 1, 3),\n-  (4, 1002792, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (4, 1002778, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (4, 1050051, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (4, 1050052, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (4, 1051037, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (4, 1051038, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (4, 1051039, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (4, 1050058, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1050059, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1050060, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1051041, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1051042, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1051043, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1050061, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1050062, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1050063, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1050064, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1051062, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1051063, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1051064, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1051065, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1050075, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1050076, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1050077, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1050078, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1051066, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1051067, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1051068, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1051069, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1050088, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1050089, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1050090, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1050091, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1051082, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1051083, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1051084, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1051085, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1050106, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1050107, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1050108, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1051105, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1051106, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1051107, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1052071, 105, 3, 300000, 0, 0, 4130021, 1, 3),\n-  (4, 1052162, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (4, 1052157, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (4, 1072122, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (4, 1072123, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (4, 1072124, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (4, 1072125, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (4, 1072144, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (4, 1072145, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (4, 1072146, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (4, 1072164, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (4, 1072165, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (4, 1072166, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (4, 1072167, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (4, 1072182, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (4, 1072183, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (4, 1072184, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (4, 1072185, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (4, 1072203, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (4, 1072204, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (4, 1072205, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (4, 1072227, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (4, 1072228, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (4, 1072229, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (4, 1072269, 105, 3, 180000, 0, 0, 4130001, 1, 3),\n-  (4, 1072363, 115, 3, 200000, 0, 0, 4130001, 1, 3),\n-  (4, 1072357, 115, 3, 200000, 0, 0, 4130001, 1, 3),\n-  (4, 1082083, 45, 1, 52500, 0, 0, 4130000, 1, 1),\n-  (4, 1082084, 45, 1, 42500, 0, 0, 4130000, 1, 1),\n-  (4, 1082085, 45, 1, 47500, 0, 0, 4130000, 1, 1),\n-  (4, 1082089, 55, 1, 55000, 0, 0, 4130000, 1, 1),\n-  (4, 1082090, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n-  (4, 1082091, 55, 1, 65000, 0, 0, 4130000, 1, 1),\n-  (4, 1082106, 65, 1, 70000, 0, 0, 4130000, 1, 1),\n-  (4, 1082107, 65, 1, 75000, 0, 0, 4130000, 1, 1),\n-  (4, 1082108, 65, 1, 80000, 0, 0, 4130000, 1, 1),\n-  (4, 1082109, 75, 2, 140000, 0, 0, 4130000, 1, 2),\n-  (4, 1082110, 75, 2, 143500, 0, 0, 4130000, 1, 2),\n-  (4, 1082111, 75, 2, 143500, 0, 0, 4130000, 1, 2),\n-  (4, 1082112, 75, 2, 147000, 0, 0, 4130000, 1, 2),\n-  (4, 1082125, 85, 2, 161000, 0, 0, 4130000, 1, 2),\n-  (4, 1082126, 85, 2, 164500, 0, 0, 4130000, 1, 2),\n-  (4, 1082127, 85, 2, 168000, 0, 0, 4130000, 1, 2),\n-  (4, 1082158, 95, 2, 182000, 0, 0, 4130000, 1, 2),\n-  (4, 1082159, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (4, 1082160, 95, 2, 189000, 0, 0, 4130000, 1, 2),\n-  (4, 1082163, 105, 3, 300000, 0, 0, 4130000, 1, 3),\n-  (4, 1082241, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (4, 1082236, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (4, 1452008, 45, 1, 100000, 0, 0, 4130012, 1, 1),\n-  (4, 1462007, 45, 1, 85000, 0, 0, 4130013, 1, 1),\n-  (4, 1452004, 55, 1, 125000, 0, 0, 4130012, 1, 1),\n-  (4, 1462008, 55, 1, 120000, 0, 0, 4130013, 1, 1),\n-  (4, 1452009, 65, 1, 150000, 0, 0, 4130012, 1, 1),\n-  (4, 1452010, 65, 1, 150000, 0, 0, 4130012, 1, 1),\n-  (4, 1452011, 65, 1, 150000, 0, 0, 4130012, 1, 1),\n-  (4, 1462009, 65, 1, 150000, 0, 0, 4130013, 1, 1),\n-  (4, 1452012, 75, 2, 245000, 0, 0, 4130012, 1, 2),\n-  (4, 1452013, 75, 2, 245000, 0, 0, 4130012, 1, 2),\n-  (4, 1452014, 75, 2, 245000, 0, 0, 4130012, 1, 2),\n-  (4, 1452015, 75, 2, 245000, 0, 0, 4130012, 1, 2),\n-  (4, 1462010, 75, 2, 245000, 0, 0, 4130013, 1, 2),\n-  (4, 1462011, 75, 2, 245000, 0, 0, 4130013, 1, 2),\n-  (4, 1462012, 75, 2, 245000, 0, 0, 4130013, 1, 2),\n-  (4, 1462013, 75, 2, 245000, 0, 0, 4130013, 1, 2),\n-  (4, 1452017, 85, 2, 280000, 0, 0, 4130012, 1, 2),\n-  (4, 1462018, 85, 2, 280000, 0, 0, 4130013, 1, 2),\n-  (4, 1452019, 95, 2, 315000, 0, 0, 4130012, 1, 2),\n-  (4, 1452020, 95, 2, 315000, 0, 0, 4130012, 1, 2),\n-  (4, 1452021, 95, 2, 315000, 0, 0, 4130012, 1, 2),\n-  (4, 1462015, 95, 2, 315000, 0, 0, 4130013, 1, 2),\n-  (4, 1462016, 95, 2, 315000, 0, 0, 4130013, 1, 2),\n-  (4, 1462017, 95, 2, 315000, 0, 0, 4130013, 1, 2),\n-  (4, 1452044, 105, 3, 500000, 0, 0, 4130012, 1, 3),\n-  (4, 1462039, 105, 3, 500000, 0, 0, 4130013, 1, 3),\n-  (4, 1452059, 115, 3, 550000, 0, 0, 4130012, 1, 3),\n-  (4, 1462051, 115, 3, 550000, 0, 0, 4130013, 1, 3),\n-  (4, 1452057, 115, 3, 550000, 0, 0, 4130012, 1, 3),\n-  (4, 1462050, 115, 3, 550000, 0, 0, 4130013, 1, 3),\n-  (8, 1002207, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (8, 1002208, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (8, 1002209, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (8, 1002210, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (8, 1002247, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (8, 1002248, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (8, 1002249, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (8, 1002281, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (8, 1002282, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (8, 1002283, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (8, 1002284, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (8, 1002285, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (8, 1002327, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (8, 1002328, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (8, 1002329, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (8, 1002330, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (8, 1002323, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (8, 1002324, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (8, 1002325, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (8, 1002326, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (8, 1002380, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (8, 1002381, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (8, 1002382, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (8, 1002383, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (8, 1002550, 105, 3, 150000, 0, 0, 4130018, 1, 3),\n-  (8, 1002793, 115, 3, 190000, 0, 0, 4130018, 1, 3),\n-  (8, 1002779, 115, 3, 190000, 0, 0, 4130018, 1, 3),\n-  (8, 1040094, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1040095, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1040096, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1040097, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1041077, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1041078, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1041079, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1041080, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1040098, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1040099, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1040100, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1041094, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1041095, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1041096, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1040105, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1040106, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1040107, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1041100, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1041101, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1041102, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1041103, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1040108, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1040109, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1040110, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1041105, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1041106, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1041107, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1040115, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1040116, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1040117, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1040118, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1041115, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1041116, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1041117, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1041118, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1060083, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1060084, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1060085, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1060086, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1061076, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1061077, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1061078, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1061079, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1060087, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1060088, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1060089, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1061093, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1061094, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1061095, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1060093, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1060094, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1060095, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1061099, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1061100, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1061101, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1061102, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1060097, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1060098, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1060099, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1061104, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1061105, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1061106, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1060104, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1060105, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1060106, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1060107, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1061114, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1061115, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1061116, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1061117, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1050096, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1050097, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1050098, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1050099, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1051090, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1051091, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1051092, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1051093, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1052072, 105, 3, 300000, 0, 0, 4130021, 1, 3),\n-  (8, 1052163, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (8, 1052158, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (8, 1072128, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (8, 1072129, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (8, 1072130, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (8, 1072131, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (8, 1072150, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (8, 1072151, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (8, 1072152, 55, 1, 35000, 0, 0, 4130001, 1, 1),\n-  (8, 1072161, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (8, 1072162, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (8, 1072163, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (8, 1072172, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (8, 1072173, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (8, 1072174, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (8, 1072192, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (8, 1072193, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (8, 1072194, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (8, 1072195, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (8, 1072213, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (8, 1072214, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (8, 1072215, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (8, 1072216, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (8, 1072272, 105, 3, 195000, 0, 0, 4130001, 1, 3),\n-  (8, 1072364, 115, 3, 225000, 0, 0, 4130001, 1, 3),\n-  (8, 1072358, 115, 3, 225000, 0, 0, 4130001, 1, 3),\n-  (8, 1082065, 45, 1, 42500, 0, 0, 4130000, 1, 1),\n-  (8, 1082066, 45, 1, 47500, 0, 0, 4130000, 1, 1),\n-  (8, 1082067, 45, 1, 45000, 0, 0, 4130000, 1, 1),\n-  (8, 1082092, 55, 1, 55000, 0, 0, 4130000, 1, 1),\n-  (8, 1082093, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n-  (8, 1082094, 55, 1, 65000, 0, 0, 4130000, 1, 1),\n-  (8, 1082095, 65, 1, 75000, 0, 0, 4130000, 1, 1),\n-  (8, 1082096, 65, 1, 80000, 0, 0, 4130000, 1, 1),\n-  (8, 1082097, 65, 1, 85000, 0, 0, 4130000, 1, 1),\n-  (8, 1082118, 75, 2, 140000, 0, 0, 4130000, 1, 2),\n-  (8, 1082119, 75, 2, 143500, 0, 0, 4130000, 1, 2),\n-  (8, 1082120, 75, 2, 147000, 0, 0, 4130000, 1, 2),\n-  (8, 1082142, 85, 2, 150500, 0, 0, 4130000, 1, 2),\n-  (8, 1082143, 85, 2, 150500, 0, 0, 4130000, 1, 2),\n-  (8, 1082144, 85, 2, 150500, 0, 0, 4130000, 1, 2),\n-  (8, 1082135, 95, 2, 182000, 0, 0, 4130000, 1, 2),\n-  (8, 1082136, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (8, 1082137, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (8, 1082138, 95, 2, 189000, 0, 0, 4130000, 1, 2),\n-  (8, 1082167, 105, 3, 300000, 0, 0, 4130000, 1, 3),\n-  (8, 1082242, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (8, 1082237, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (8, 1092059, 115, 3, 350000, 0, 0, 4130022, 1, 3),\n-  (8, 1332003, 45, 1, 110000, 0, 0, 4130014, 1, 1),\n-  (8, 1472018, 45, 1, 50000, 0, 0, 4130015, 1, 1),\n-  (8, 1472019, 45, 1, 52500, 0, 0, 4130015, 1, 1),\n-  (8, 1472020, 45, 1, 52500, 0, 0, 4130015, 1, 1),\n-  (8, 1472021, 45, 1, 55000, 0, 0, 4130015, 1, 1),\n-  (8, 1332016, 45, 1, 110000, 0, 0, 4130014, 1, 1),\n-  (8, 1332015, 55, 1, 125000, 0, 0, 4130014, 1, 1),\n-  (8, 1472022, 55, 1, 125000, 0, 0, 4130015, 1, 1),\n-  (8, 1472023, 55, 1, 127500, 0, 0, 4130015, 1, 1),\n-  (8, 1472024, 55, 1, 127500, 0, 0, 4130015, 1, 1),\n-  (8, 1472025, 55, 1, 130000, 0, 0, 4130015, 1, 1),\n-  (8, 1332017, 55, 1, 125000, 0, 0, 4130014, 1, 1),\n-  (8, 1332018, 65, 1, 140000, 0, 0, 4130014, 1, 1),\n-  (8, 1472026, 65, 1, 150000, 0, 0, 4130015, 1, 1),\n-  (8, 1472027, 65, 1, 152500, 0, 0, 4130015, 1, 1),\n-  (8, 1472028, 65, 1, 152500, 0, 0, 4130015, 1, 1),\n-  (8, 1472029, 65, 1, 155000, 0, 0, 4130015, 1, 1),\n-  (8, 1332019, 65, 1, 140000, 0, 0, 4130014, 1, 1),\n-  (8, 1472031, 75, 2, 280000, 0, 0, 4130015, 1, 2),\n-  (8, 1332022, 75, 2, 217000, 0, 0, 4130014, 1, 2),\n-  (8, 1332023, 75, 2, 217000, 0, 0, 4130014, 1, 2),\n-  (8, 1332027, 85, 2, 238000, 0, 0, 4130014, 1, 2),\n-  (8, 1472033, 85, 2, 315000, 0, 0, 4130015, 1, 2),\n-  (8, 1332026, 85, 2, 238000, 0, 0, 4130014, 1, 2),\n-  (8, 1332052, 95, 2, 280000, 0, 0, 4130014, 1, 2),\n-  (8, 1472053, 95, 2, 357000, 0, 0, 4130015, 1, 2),\n-  (8, 1332051, 95, 2, 280000, 0, 0, 4130014, 1, 2),\n-  (8, 1332050, 105, 3, 450000, 0, 0, 4130014, 1, 3),\n-  (8, 1472051, 105, 3, 570000, 0, 0, 4130015, 1, 3),\n-  (8, 1472052, 105, 3, 570000, 0, 0, 4130015, 1, 3),\n-  (8, 1332049, 105, 3, 450000, 0, 0, 4130014, 1, 3),\n-  (8, 1332075, 115, 3, 500000, 0, 0, 4130014, 1, 3),\n-  (8, 1332076, 115, 3, 500000, 0, 0, 4130014, 1, 3),\n-  (8, 1472071, 115, 3, 630000, 0, 0, 4130015, 1, 3),\n-  (8, 1332073, 115, 3, 500000, 0, 0, 4130014, 1, 3),\n-  (8, 1332074, 115, 3, 510000, 0, 0, 4130014, 1, 3),\n-  (8, 1472068, 115, 3, 630000, 0, 0, 4130015, 1, 3),\n-  (16, 1002631, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (16, 1002634, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (16, 1002637, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (16, 1002640, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (16, 1002643, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (16, 1002646, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (16, 1002649, 105, 3, 150000, 0, 0, 4130018, 1, 3),\n-  (16, 1002794, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (16, 1002780, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (16, 1052116, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (16, 1052119, 55, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (16, 1052122, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (16, 1052125, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (16, 1052128, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (16, 1052131, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (16, 1052134, 105, 3, 300000, 0, 0, 4130021, 1, 3),\n-  (16, 1052164, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (16, 1052159, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (16, 1072303, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (16, 1072306, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (16, 1072309, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (16, 1072312, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (16, 1072315, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (16, 1072318, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (16, 1072321, 105, 3, 180000, 0, 0, 4130001, 1, 3),\n-  (16, 1072365, 115, 3, 200000, 0, 0, 4130001, 1, 3),\n-  (16, 1072359, 115, 3, 200000, 0, 0, 4130001, 1, 3),\n-  (16, 1082198, 45, 1, 42500, 0, 0, 4130000, 1, 1),\n-  (16, 1082201, 55, 1, 55000, 0, 0, 4130000, 1, 1),\n-  (16, 1082204, 65, 1, 75000, 0, 0, 4130000, 1, 1),\n-  (16, 1082207, 75, 2, 140000, 0, 0, 4130000, 1, 2),\n-  (16, 1082210, 85, 2, 161000, 0, 0, 4130000, 1, 2),\n-  (16, 1082213, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (16, 1082216, 105, 3, 300000, 0, 0, 4130000, 1, 3),\n-  (16, 1082243, 115, 3, 335000, 0, 0, 4130000, 1, 3),\n-  (16, 1082238, 115, 3, 335000, 0, 0, 4130000, 1, 3),\n-  (16, 1482007, 45, 1, 65000, 0, 0, 4130016, 1, 1),\n-  (16, 1492007, 45, 1, 70000, 0, 0, 4130017, 1, 1),\n-  (16, 1482008, 55, 1, 120000, 0, 0, 4130016, 1, 1),\n-  (16, 1492008, 55, 1, 125000, 0, 0, 4130017, 1, 1),\n-  (16, 1482009, 65, 1, 150000, 0, 0, 4130016, 1, 1),\n-  (16, 1492009, 65, 1, 155000, 0, 0, 4130017, 1, 1),\n-  (16, 1482010, 75, 2, 245000, 0, 0, 4130016, 1, 2),\n-  (16, 1492010, 75, 2, 245000, 0, 0, 4130017, 1, 2),\n-  (16, 1482011, 85, 2, 273000, 0, 0, 4130016, 1, 2),\n-  (16, 1492011, 85, 2, 280000, 0, 0, 4130017, 1, 2),\n-  (16, 1482012, 95, 2, 308000, 0, 0, 4130016, 1, 2),\n-  (16, 1492012, 95, 2, 315000, 0, 0, 4130017, 1, 2),\n-  (16, 1482013, 105, 3, 510000, 0, 0, 4130016, 1, 3),\n-  (16, 1492013, 105, 3, 520000, 0, 0, 4130017, 1, 3),\n-  (16, 1482024, 115, 3, 560000, 0, 0, 4130016, 1, 3),\n-  (16, 1492025, 115, 3, 570000, 0, 0, 4130017, 1, 3),\n-  (16, 1482023, 115, 3, 560000, 0, 0, 4130016, 1, 3),\n-  (16, 1492023, 115, 3, 570000, 0, 0, 4130017, 1, 3);\n+  (0, 2041058, 50, 1, 55000, 0, 1122013, 0, 1, 0),\n+  (0, 2040727, 50, 1, 55000, 0, 1122013, 0, 1, 0),\n+  (1, 1002028, 45, 1, 55000, 0, 0, 4130018, 1, 1),\n+  (1, 1002085, 45, 1, 50000, 0, 0, 4130018, 1, 1),\n+  (1, 1002086, 45, 1, 41000, 0, 0, 4130018, 1, 1),\n+  (1, 1002022, 50, 1, 60000, 0, 0, 4130018, 1, 1),\n+  (1, 1002100, 50, 1, 60000, 0, 0, 4130018, 1, 1),\n+  (1, 1002101, 50, 1, 60000, 0, 0, 4130018, 1, 1),\n+  (1, 1002029, 55, 1, 82000, 0, 0, 4130018, 1, 1),\n+  (1, 1002084, 55, 1, 82000, 0, 0, 4130018, 1, 1),\n+  (1, 1002030, 65, 1, 93000, 0, 0, 4130018, 1, 1),\n+  (1, 1002094, 65, 1, 93000, 0, 0, 4130018, 1, 1),\n+  (1, 1002095, 65, 1, 93000, 0, 0, 4130018, 1, 1),\n+  (1, 1002338, 75, 2, 146000, 0, 0, 4130018, 1, 2),\n+  (1, 1002339, 75, 2, 146000, 0, 0, 4130018, 1, 2),\n+  (1, 1002340, 75, 2, 146000, 0, 0, 4130018, 1, 2),\n+  (1, 1002528, 85, 2, 161000, 0, 0, 4130018, 1, 2),\n+  (1, 1002529, 85, 2, 161000, 0, 0, 4130018, 1, 2),\n+  (1, 1002530, 85, 2, 161000, 0, 0, 4130018, 1, 2),\n+  (1, 1002531, 85, 2, 161000, 0, 0, 4130018, 1, 2),\n+  (1, 1002532, 85, 2, 161000, 0, 0, 4130018, 1, 2),\n+  (1, 1002377, 95, 2, 184000, 0, 0, 4130018, 1, 2),\n+  (1, 1002378, 95, 2, 184000, 0, 0, 4130018, 1, 2),\n+  (1, 1002379, 95, 2, 184000, 0, 0, 4130018, 1, 2),\n+  (1, 1002551, 105, 3, 308000, 0, 0, 4130018, 1, 3),\n+  (1, 1002790, 115, 3, 352000, 0, 0, 4130018, 1, 3),\n+  (1, 1002776, 115, 3, 352000, 0, 0, 4130018, 1, 3),\n+  (1, 1040087, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1040088, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1040089, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1041087, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1041088, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1041089, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1040090, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1040091, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1040092, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1040093, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1041091, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1041092, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1041093, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1040102, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1040103, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1040104, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1041097, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1041098, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1041099, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1040111, 85, 2, 123000, 0, 0, 4130019, 1, 2),\n+  (1, 1040112, 85, 2, 123000, 0, 0, 4130019, 1, 2),\n+  (1, 1040113, 85, 2, 123000, 0, 0, 4130019, 1, 2),\n+  (1, 1041119, 85, 2, 146000, 0, 0, 4130019, 1, 2),\n+  (1, 1041120, 85, 2, 146000, 0, 0, 4130019, 1, 2),\n+  (1, 1041121, 85, 2, 146000, 0, 0, 4130019, 1, 2),\n+  (1, 1040120, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1040121, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1040122, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1041122, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1041123, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1041124, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1060076, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1060077, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1060078, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1061086, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1061087, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1061088, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1060079, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1060080, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1060081, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1060082, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1061090, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1061091, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1061092, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1060090, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1060091, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1060092, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1061096, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1061097, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1061098, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1060100, 85, 2, 107000, 0, 0, 4130020, 1, 2),\n+  (1, 1060101, 85, 2, 107000, 0, 0, 4130020, 1, 2),\n+  (1, 1060102, 85, 2, 107000, 0, 0, 4130020, 1, 2),\n+  (1, 1061118, 85, 2, 130000, 0, 0, 4130020, 1, 2),\n+  (1, 1061119, 85, 2, 130000, 0, 0, 4130020, 1, 2),\n+  (1, 1061120, 85, 2, 130000, 0, 0, 4130020, 1, 2),\n+  (1, 1060109, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1060110, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1060111, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1061121, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1061122, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1061123, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1050080, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1050081, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1050082, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1050083, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1051077, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1051078, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1051079, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1051080, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1052075, 105, 3, 352000, 0, 0, 4130021, 1, 3),\n+  (1, 1052160, 115, 3, 418000, 0, 0, 4130021, 1, 3),\n+  (1, 1052155, 115, 3, 418000, 0, 0, 4130021, 1, 3),\n+  (1, 1072132, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (1, 1072133, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (1, 1072134, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (1, 1072135, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (1, 1072147, 55, 1, 39000, 0, 0, 4130001, 1, 1),\n+  (1, 1072148, 55, 1, 39000, 0, 0, 4130001, 1, 1),\n+  (1, 1072149, 55, 1, 39000, 0, 0, 4130001, 1, 1),\n+  (1, 1072154, 65, 1, 47000, 0, 0, 4130001, 1, 1),\n+  (1, 1072155, 65, 1, 47000, 0, 0, 4130001, 1, 1),\n+  (1, 1072156, 65, 1, 47000, 0, 0, 4130001, 1, 1),\n+  (1, 1072210, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (1, 1072211, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (1, 1072212, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (1, 1072196, 85, 2, 115000, 0, 0, 4130001, 1, 2),\n+  (1, 1072197, 85, 2, 115000, 0, 0, 4130001, 1, 2),\n+  (1, 1072198, 85, 2, 115000, 0, 0, 4130001, 1, 2),\n+  (1, 1072220, 95, 2, 138000, 0, 0, 4130001, 1, 2),\n+  (1, 1072221, 95, 2, 138000, 0, 0, 4130001, 1, 2),\n+  (1, 1072222, 95, 2, 138000, 0, 0, 4130001, 1, 2),\n+  (1, 1072273, 105, 3, 231000, 0, 0, 4130001, 1, 3),\n+  (1, 1072361, 115, 3, 264000, 0, 0, 4130001, 1, 3),\n+  (1, 1072355, 115, 3, 264000, 0, 0, 4130001, 1, 3),\n+  (1, 1082009, 45, 1, 50000, 0, 0, 4130000, 1, 1),\n+  (1, 1082010, 45, 1, 55000, 0, 0, 4130000, 1, 1),\n+  (1, 1082011, 45, 1, 60000, 0, 0, 4130000, 1, 1),\n+  (1, 1082059, 55, 1, 66000, 0, 0, 4130000, 1, 1),\n+  (1, 1082060, 55, 1, 71000, 0, 0, 4130000, 1, 1),\n+  (1, 1082061, 55, 1, 77000, 0, 0, 4130000, 1, 1),\n+  (1, 1082103, 65, 1, 82000, 0, 0, 4130000, 1, 1),\n+  (1, 1082104, 65, 1, 88000, 0, 0, 4130000, 1, 1),\n+  (1, 1082105, 65, 1, 93000, 0, 0, 4130000, 1, 1),\n+  (1, 1082114, 75, 2, 161000, 0, 0, 4130000, 1, 2),\n+  (1, 1082115, 75, 2, 165000, 0, 0, 4130000, 1, 2),\n+  (1, 1082116, 75, 2, 168000, 0, 0, 4130000, 1, 2),\n+  (1, 1082117, 75, 2, 168000, 0, 0, 4130000, 1, 2),\n+  (1, 1082128, 85, 2, 184000, 0, 0, 4130000, 1, 2),\n+  (1, 1082129, 85, 2, 188000, 0, 0, 4130000, 1, 2),\n+  (1, 1082130, 85, 2, 191000, 0, 0, 4130000, 1, 2),\n+  (1, 1082139, 95, 2, 207000, 0, 0, 4130000, 1, 2),\n+  (1, 1082140, 95, 2, 210000, 0, 0, 4130000, 1, 2),\n+  (1, 1082141, 95, 2, 214000, 0, 0, 4130000, 1, 2),\n+  (1, 1082168, 105, 3, 330000, 0, 0, 4130000, 1, 3),\n+  (1, 1082239, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (1, 1082234, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (1, 1092004, 45, 1, 82000, 0, 0, 4130022, 1, 1),\n+  (1, 1092009, 55, 1, 99000, 0, 0, 4130022, 1, 1),\n+  (1, 1092010, 55, 1, 104000, 0, 0, 4130022, 1, 1),\n+  (1, 1092011, 55, 1, 104000, 0, 0, 4130022, 1, 1),\n+  (1, 1092015, 65, 1, 110000, 0, 0, 4130022, 1, 1),\n+  (1, 1092016, 65, 1, 115000, 0, 0, 4130022, 1, 1),\n+  (1, 1092017, 65, 1, 115000, 0, 0, 4130022, 1, 1),\n+  (1, 1092023, 75, 2, 168000, 0, 0, 4130022, 1, 2),\n+  (1, 1092024, 75, 2, 176000, 0, 0, 4130022, 1, 2),\n+  (1, 1092025, 75, 2, 176000, 0, 0, 4130022, 1, 2),\n+  (1, 1092026, 85, 2, 184000, 0, 0, 4130022, 1, 2),\n+  (1, 1092027, 85, 2, 191000, 0, 0, 4130022, 1, 2),\n+  (1, 1092028, 85, 2, 191000, 0, 0, 4130022, 1, 2),\n+  (1, 1092036, 95, 2, 199000, 0, 0, 4130022, 1, 2),\n+  (1, 1092037, 95, 2, 207000, 0, 0, 4130022, 1, 2),\n+  (1, 1092038, 95, 2, 214000, 0, 0, 4130022, 1, 2),\n+  (1, 1092060, 105, 3, 231000, 0, 0, 4130022, 1, 3),\n+  (1, 1092058, 115, 3, 385000, 0, 0, 4130022, 1, 3),\n+  (1, 1302010, 45, 1, 66000, 0, 0, 4130002, 1, 1),\n+  (1, 1312008, 45, 1, 77000, 0, 0, 4130003, 1, 1),\n+  (1, 1322017, 45, 1, 77000, 0, 0, 4130004, 1, 1),\n+  (1, 1402003, 45, 1, 110000, 0, 0, 4130005, 1, 1),\n+  (1, 1412003, 45, 1, 77000, 0, 0, 4130006, 1, 1),\n+  (1, 1422005, 45, 1, 82000, 0, 0, 4130007, 1, 1),\n+  (1, 1432004, 45, 1, 82000, 0, 0, 4130008, 1, 1),\n+  (1, 1442005, 45, 1, 82000, 0, 0, 4130009, 1, 1),\n+  (1, 1302011, 55, 1, 82000, 0, 0, 4130002, 1, 1),\n+  (1, 1312009, 55, 1, 104000, 0, 0, 4130003, 1, 1),\n+  (1, 1322018, 55, 1, 104000, 0, 0, 4130004, 1, 1),\n+  (1, 1402011, 55, 1, 126000, 0, 0, 4130005, 1, 1),\n+  (1, 1412007, 55, 1, 104000, 0, 0, 4130006, 1, 1),\n+  (1, 1422009, 55, 1, 104000, 0, 0, 4130007, 1, 1),\n+  (1, 1432006, 55, 1, 104000, 0, 0, 4130008, 1, 1),\n+  (1, 1442010, 55, 1, 137000, 0, 0, 4130009, 1, 1),\n+  (1, 1302012, 65, 1, 137000, 0, 0, 4130002, 1, 1),\n+  (1, 1312010, 65, 1, 165000, 0, 0, 4130003, 1, 1),\n+  (1, 1322019, 65, 1, 137000, 0, 0, 4130004, 1, 1),\n+  (1, 1402012, 65, 1, 143000, 0, 0, 4130005, 1, 1),\n+  (1, 1412008, 65, 1, 137000, 0, 0, 4130006, 1, 1),\n+  (1, 1422010, 65, 1, 137000, 0, 0, 4130007, 1, 1),\n+  (1, 1432007, 65, 1, 137000, 0, 0, 4130008, 1, 1),\n+  (1, 1442008, 65, 1, 165000, 0, 0, 4130009, 1, 1),\n+  (1, 1322020, 70, 1, 165000, 0, 0, 4130004, 1, 1),\n+  (1, 1302018, 75, 2, 231000, 0, 0, 4130002, 1, 2),\n+  (1, 1312011, 75, 2, 269000, 0, 0, 4130003, 1, 2),\n+  (1, 1322028, 75, 2, 269000, 0, 0, 4130004, 1, 2),\n+  (1, 1402004, 75, 2, 231000, 0, 0, 4130005, 1, 2),\n+  (1, 1402015, 75, 2, 231000, 0, 0, 4130005, 1, 2),\n+  (1, 1412009, 75, 2, 238000, 0, 0, 4130006, 1, 2),\n+  (1, 1422012, 75, 2, 238000, 0, 0, 4130007, 1, 2),\n+  (1, 1432010, 75, 2, 238000, 0, 0, 4130008, 1, 2),\n+  (1, 1442019, 75, 2, 269000, 0, 0, 4130009, 1, 2),\n+  (1, 1302023, 85, 2, 269000, 0, 0, 4130002, 1, 2),\n+  (1, 1312015, 85, 2, 308000, 0, 0, 4130003, 1, 2),\n+  (1, 1322029, 85, 2, 308000, 0, 0, 4130004, 1, 2),\n+  (1, 1402005, 85, 2, 308000, 0, 0, 4130005, 1, 2),\n+  (1, 1402016, 85, 2, 308000, 0, 0, 4130005, 1, 2),\n+  (1, 1412010, 85, 2, 284000, 0, 0, 4130006, 1, 2),\n+  (1, 1422013, 85, 2, 284000, 0, 0, 4130007, 1, 2),\n+  (1, 1432011, 85, 2, 284000, 0, 0, 4130008, 1, 2),\n+  (1, 1442020, 85, 2, 346000, 0, 0, 4130009, 1, 2),\n+  (1, 1302056, 95, 2, 369000, 0, 0, 4130002, 1, 2),\n+  (1, 1312030, 95, 2, 361000, 0, 0, 4130003, 1, 2),\n+  (1, 1322045, 95, 2, 361000, 0, 0, 4130004, 1, 2),\n+  (1, 1402035, 95, 2, 361000, 0, 0, 4130005, 1, 2),\n+  (1, 1412021, 95, 2, 377000, 0, 0, 4130006, 1, 2),\n+  (1, 1422027, 95, 2, 346000, 0, 0, 4130007, 1, 2),\n+  (1, 1432030, 95, 2, 377000, 0, 0, 4130008, 1, 2),\n+  (1, 1442044, 95, 2, 361000, 0, 0, 4130009, 1, 2),\n+  (1, 1302059, 105, 3, 605000, 0, 0, 4130002, 1, 3),\n+  (1, 1312031, 105, 3, 583000, 0, 0, 4130003, 1, 3),\n+  (1, 1322052, 105, 3, 528000, 0, 0, 4130004, 1, 3),\n+  (1, 1402036, 105, 3, 605000, 0, 0, 4130005, 1, 3),\n+  (1, 1412026, 105, 3, 572000, 0, 0, 4130006, 1, 3),\n+  (1, 1422028, 105, 3, 561000, 0, 0, 4130007, 1, 3),\n+  (1, 1432038, 105, 3, 583000, 0, 0, 4130008, 1, 3),\n+  (1, 1442045, 105, 3, 627000, 0, 0, 4130009, 1, 3),\n+  (1, 1302086, 115, 3, 748000, 0, 0, 4130002, 1, 3),\n+  (1, 1312038, 115, 3, 638000, 0, 0, 4130003, 1, 3),\n+  (1, 1322061, 115, 3, 539000, 0, 0, 4130004, 1, 3),\n+  (1, 1402047, 115, 3, 715000, 0, 0, 4130005, 1, 3),\n+  (1, 1412034, 115, 3, 715000, 0, 0, 4130006, 1, 3),\n+  (1, 1422038, 115, 3, 616000, 0, 0, 4130007, 1, 3),\n+  (1, 1432049, 115, 3, 627000, 0, 0, 4130008, 1, 3),\n+  (1, 1442067, 115, 3, 682000, 0, 0, 4130009, 1, 3),\n+  (1, 1302081, 115, 3, 748000, 0, 0, 4130002, 1, 3),\n+  (1, 1312037, 115, 3, 638000, 0, 0, 4130003, 1, 3),\n+  (1, 1322060, 115, 3, 539000, 0, 0, 4130004, 1, 3),\n+  (1, 1402046, 115, 3, 715000, 0, 0, 4130005, 1, 3),\n+  (1, 1412033, 115, 3, 715000, 0, 0, 4130006, 1, 3),\n+  (1, 1422037, 115, 3, 616000, 0, 0, 4130007, 1, 3),\n+  (1, 1432047, 115, 3, 627000, 0, 0, 4130008, 1, 3),\n+  (1, 1442063, 115, 3, 682000, 0, 0, 4130009, 1, 3),\n+  (2, 1002215, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (2, 1002216, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (2, 1002217, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (2, 1002218, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (2, 1002242, 55, 1, 28000, 0, 0, 4130018, 1, 1),\n+  (2, 1002243, 55, 1, 28000, 0, 0, 4130018, 1, 1),\n+  (2, 1002244, 55, 1, 28000, 0, 0, 4130018, 1, 1),\n+  (2, 1002245, 55, 1, 28000, 0, 0, 4130018, 1, 1),\n+  (2, 1002246, 55, 1, 28000, 0, 0, 4130018, 1, 1),\n+  (2, 1002252, 65, 1, 44000, 0, 0, 4130018, 1, 1),\n+  (2, 1002253, 65, 1, 44000, 0, 0, 4130018, 1, 1),\n+  (2, 1002254, 65, 1, 44000, 0, 0, 4130018, 1, 1),\n+  (2, 1002271, 75, 2, 73000, 0, 0, 4130018, 1, 2),\n+  (2, 1002272, 75, 2, 73000, 0, 0, 4130018, 1, 2),\n+  (2, 1002273, 75, 2, 73000, 0, 0, 4130018, 1, 2),\n+  (2, 1002274, 75, 2, 73000, 0, 0, 4130018, 1, 2),\n+  (2, 1002363, 85, 2, 84000, 0, 0, 4130018, 1, 2),\n+  (2, 1002364, 85, 2, 84000, 0, 0, 4130018, 1, 2),\n+  (2, 1002365, 85, 2, 84000, 0, 0, 4130018, 1, 2),\n+  (2, 1002366, 85, 2, 84000, 0, 0, 4130018, 1, 2),\n+  (2, 1002398, 95, 2, 96000, 0, 0, 4130018, 1, 2),\n+  (2, 1002399, 95, 2, 96000, 0, 0, 4130018, 1, 2),\n+  (2, 1002400, 95, 2, 96000, 0, 0, 4130018, 1, 2),\n+  (2, 1002401, 95, 2, 96000, 0, 0, 4130018, 1, 2),\n+  (2, 1002773, 105, 3, 165000, 0, 0, 4130018, 1, 3),\n+  (2, 1002791, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (2, 1002777, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (2, 1050045, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1050046, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1050047, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1050048, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1050049, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1051030, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1051031, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1051032, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1051033, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1051034, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1050053, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1050054, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1050055, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1050056, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1051044, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1051045, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1051046, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1051047, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1050067, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1050068, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1050069, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1050070, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1051052, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1051053, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1051054, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1051055, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1050072, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1050073, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1050074, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1051056, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1051057, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1051058, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1050092, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1050093, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1050094, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1050095, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1051094, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1051095, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1051096, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1051097, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1050102, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1050103, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1050104, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1050105, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1051101, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1051102, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1051103, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1051104, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1052076, 103, 3, 319000, 0, 0, 4130021, 1, 3),\n+  (2, 1052161, 115, 3, 374000, 0, 0, 4130021, 1, 3),\n+  (2, 1052156, 115, 3, 374000, 0, 0, 4130021, 1, 3),\n+  (2, 1072140, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (2, 1072141, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (2, 1072142, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (2, 1072143, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (2, 1072136, 55, 1, 33000, 0, 0, 4130001, 1, 1),\n+  (2, 1072137, 55, 1, 33000, 0, 0, 4130001, 1, 1),\n+  (2, 1072138, 55, 1, 33000, 0, 0, 4130001, 1, 1),\n+  (2, 1072139, 55, 1, 33000, 0, 0, 4130001, 1, 1),\n+  (2, 1072157, 65, 1, 44000, 0, 0, 4130001, 1, 1),\n+  (2, 1072158, 65, 1, 44000, 0, 0, 4130001, 1, 1),\n+  (2, 1072159, 65, 1, 44000, 0, 0, 4130001, 1, 1),\n+  (2, 1072160, 65, 1, 44000, 0, 0, 4130001, 1, 1),\n+  (2, 1072177, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n+  (2, 1072178, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n+  (2, 1072179, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n+  (2, 1072206, 85, 2, 92000, 0, 0, 4130001, 1, 2),\n+  (2, 1072207, 85, 2, 92000, 0, 0, 4130001, 1, 2),\n+  (2, 1072208, 85, 2, 92000, 0, 0, 4130001, 1, 2),\n+  (2, 1072209, 85, 2, 92000, 0, 0, 4130001, 1, 2),\n+  (2, 1072223, 95, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (2, 1072224, 95, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (2, 1072225, 95, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (2, 1072226, 95, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (2, 1072268, 105, 3, 198000, 0, 0, 4130001, 1, 3),\n+  (2, 1072362, 115, 3, 242000, 0, 0, 4130001, 1, 3),\n+  (2, 1072356, 115, 3, 242000, 0, 0, 4130001, 1, 3),\n+  (2, 1082080, 45, 1, 55000, 0, 0, 4130000, 1, 1),\n+  (2, 1082081, 45, 1, 44000, 0, 0, 4130000, 1, 1),\n+  (2, 1082082, 45, 1, 50000, 0, 0, 4130000, 1, 1),\n+  (2, 1082086, 55, 1, 58000, 0, 0, 4130000, 1, 1),\n+  (2, 1082087, 55, 1, 63000, 0, 0, 4130000, 1, 1),\n+  (2, 1082088, 55, 1, 69000, 0, 0, 4130000, 1, 1),\n+  (2, 1082098, 65, 1, 77000, 0, 0, 4130000, 1, 1),\n+  (2, 1082099, 65, 1, 80000, 0, 0, 4130000, 1, 1),\n+  (2, 1082100, 65, 1, 82000, 0, 0, 4130000, 1, 1),\n+  (2, 1082121, 75, 2, 153000, 0, 0, 4130000, 1, 2),\n+  (2, 1082122, 75, 2, 157000, 0, 0, 4130000, 1, 2),\n+  (2, 1082123, 75, 2, 161000, 0, 0, 4130000, 1, 2),\n+  (2, 1082131, 85, 2, 176000, 0, 0, 4130000, 1, 2),\n+  (2, 1082132, 85, 2, 180000, 0, 0, 4130000, 1, 2),\n+  (2, 1082133, 85, 2, 180000, 0, 0, 4130000, 1, 2),\n+  (2, 1082134, 85, 2, 184000, 0, 0, 4130000, 1, 2),\n+  (2, 1082151, 95, 2, 199000, 0, 0, 4130000, 1, 2),\n+  (2, 1082152, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (2, 1082153, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (2, 1082154, 95, 2, 207000, 0, 0, 4130000, 1, 2),\n+  (2, 1082164, 105, 3, 330000, 0, 0, 4130000, 1, 3),\n+  (2, 1082240, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (2, 1082235, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (2, 1092057, 115, 3, 385000, 0, 0, 4130022, 1, 3),\n+  (2, 1372007, 43, 1, 110000, 0, 0, 4130010, 1, 1),\n+  (2, 1382006, 50, 1, 82000, 0, 0, 4130011, 1, 1),\n+  (2, 1372014, 53, 1, 126000, 0, 0, 4130010, 1, 1),\n+  (2, 1382007, 60, 1, 110000, 0, 0, 4130011, 1, 1),\n+  (2, 1372015, 63, 1, 143000, 0, 0, 4130010, 1, 1),\n+  (2, 1382010, 70, 1, 137000, 0, 0, 4130011, 1, 1),\n+  (2, 1372016, 73, 2, 223000, 0, 0, 4130010, 1, 2),\n+  (2, 1382008, 80, 2, 238000, 0, 0, 4130011, 1, 2),\n+  (2, 1372009, 83, 2, 250000, 0, 0, 4130010, 1, 2),\n+  (2, 1382035, 90, 2, 292000, 0, 0, 4130011, 1, 2),\n+  (2, 1372010, 93, 2, 277000, 0, 0, 4130010, 1, 2),\n+  (2, 1372032, 103, 3, 506000, 0, 0, 4130010, 1, 3),\n+  (2, 1382036, 105, 3, 517000, 0, 0, 4130011, 1, 3),\n+  (2, 1372045, 115, 3, 561000, 0, 0, 4130010, 1, 3),\n+  (2, 1382059, 115, 3, 572000, 0, 0, 4130011, 1, 3),\n+  (2, 1372044, 115, 3, 561000, 0, 0, 4130010, 1, 3),\n+  (2, 1382057, 115, 3, 572000, 0, 0, 4130011, 1, 3),\n+  (4, 1002211, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (4, 1002212, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (4, 1002213, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (4, 1002214, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (4, 1002267, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (4, 1002268, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (4, 1002269, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (4, 1002270, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (4, 1002286, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (4, 1002287, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (4, 1002288, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (4, 1002289, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (4, 1002275, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (4, 1002276, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (4, 1002277, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (4, 1002278, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (4, 1002402, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (4, 1002403, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (4, 1002404, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (4, 1002405, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (4, 1002406, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (4, 1002407, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (4, 1002408, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (4, 1002547, 105, 3, 165000, 0, 0, 4130018, 1, 3),\n+  (4, 1002792, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (4, 1002778, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (4, 1050051, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (4, 1050052, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (4, 1051037, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (4, 1051038, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (4, 1051039, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (4, 1050058, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1050059, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1050060, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1051041, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1051042, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1051043, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1050061, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1050062, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1050063, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1050064, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1051062, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1051063, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1051064, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1051065, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1050075, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1050076, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1050077, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1050078, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1051066, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1051067, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1051068, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1051069, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1050088, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1050089, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1050090, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1050091, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1051082, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1051083, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1051084, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1051085, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1050106, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1050107, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1050108, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1051105, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1051106, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1051107, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1052071, 105, 3, 330000, 0, 0, 4130021, 1, 3),\n+  (4, 1052162, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (4, 1052157, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (4, 1072122, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (4, 1072123, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (4, 1072124, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (4, 1072125, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (4, 1072144, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (4, 1072145, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (4, 1072146, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (4, 1072164, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (4, 1072165, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (4, 1072166, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (4, 1072167, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (4, 1072182, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (4, 1072183, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (4, 1072184, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (4, 1072185, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (4, 1072203, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (4, 1072204, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (4, 1072205, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (4, 1072227, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (4, 1072228, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (4, 1072229, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (4, 1072269, 105, 3, 198000, 0, 0, 4130001, 1, 3),\n+  (4, 1072363, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n+  (4, 1072357, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n+  (4, 1082083, 45, 1, 58000, 0, 0, 4130000, 1, 1),\n+  (4, 1082084, 45, 1, 47000, 0, 0, 4130000, 1, 1),\n+  (4, 1082085, 45, 1, 52000, 0, 0, 4130000, 1, 1),\n+  (4, 1082089, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n+  (4, 1082090, 55, 1, 66000, 0, 0, 4130000, 1, 1),\n+  (4, 1082091, 55, 1, 71000, 0, 0, 4130000, 1, 1),\n+  (4, 1082106, 65, 1, 77000, 0, 0, 4130000, 1, 1),\n+  (4, 1082107, 65, 1, 82000, 0, 0, 4130000, 1, 1),\n+  (4, 1082108, 65, 1, 88000, 0, 0, 4130000, 1, 1),\n+  (4, 1082109, 75, 2, 153000, 0, 0, 4130000, 1, 2),\n+  (4, 1082110, 75, 2, 157000, 0, 0, 4130000, 1, 2),\n+  (4, 1082111, 75, 2, 157000, 0, 0, 4130000, 1, 2),\n+  (4, 1082112, 75, 2, 161000, 0, 0, 4130000, 1, 2),\n+  (4, 1082125, 85, 2, 176000, 0, 0, 4130000, 1, 2),\n+  (4, 1082126, 85, 2, 180000, 0, 0, 4130000, 1, 2),\n+  (4, 1082127, 85, 2, 184000, 0, 0, 4130000, 1, 2),\n+  (4, 1082158, 95, 2, 199000, 0, 0, 4130000, 1, 2),\n+  (4, 1082159, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (4, 1082160, 95, 2, 207000, 0, 0, 4130000, 1, 2),\n+  (4, 1082163, 105, 3, 330000, 0, 0, 4130000, 1, 3),\n+  (4, 1082241, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (4, 1082236, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (4, 1452008, 45, 1, 110000, 0, 0, 4130012, 1, 1),\n+  (4, 1462007, 45, 1, 93000, 0, 0, 4130013, 1, 1),\n+  (4, 1452004, 55, 1, 137000, 0, 0, 4130012, 1, 1),\n+  (4, 1462008, 55, 1, 132000, 0, 0, 4130013, 1, 1),\n+  (4, 1452009, 65, 1, 165000, 0, 0, 4130012, 1, 1),\n+  (4, 1452010, 65, 1, 165000, 0, 0, 4130012, 1, 1),\n+  (4, 1452011, 65, 1, 165000, 0, 0, 4130012, 1, 1),\n+  (4, 1462009, 65, 1, 165000, 0, 0, 4130013, 1, 1),\n+  (4, 1452012, 75, 2, 269000, 0, 0, 4130012, 1, 2),\n+  (4, 1452013, 75, 2, 269000, 0, 0, 4130012, 1, 2),\n+  (4, 1452014, 75, 2, 269000, 0, 0, 4130012, 1, 2),\n+  (4, 1452015, 75, 2, 269000, 0, 0, 4130012, 1, 2),\n+  (4, 1462010, 75, 2, 269000, 0, 0, 4130013, 1, 2),\n+  (4, 1462011, 75, 2, 269000, 0, 0, 4130013, 1, 2),\n+  (4, 1462012, 75, 2, 269000, 0, 0, 4130013, 1, 2),\n+  (4, 1462013, 75, 2, 269000, 0, 0, 4130013, 1, 2),\n+  (4, 1452017, 85, 2, 308000, 0, 0, 4130012, 1, 2),\n+  (4, 1462018, 85, 2, 308000, 0, 0, 4130013, 1, 2),\n+  (4, 1452019, 95, 2, 346000, 0, 0, 4130012, 1, 2),\n+  (4, 1452020, 95, 2, 346000, 0, 0, 4130012, 1, 2),\n+  (4, 1452021, 95, 2, 346000, 0, 0, 4130012, 1, 2),\n+  (4, 1462015, 95, 2, 346000, 0, 0, 4130013, 1, 2),\n+  (4, 1462016, 95, 2, 346000, 0, 0, 4130013, 1, 2),\n+  (4, 1462017, 95, 2, 346000, 0, 0, 4130013, 1, 2),\n+  (4, 1452044, 105, 3, 550000, 0, 0, 4130012, 1, 3),\n+  (4, 1462039, 105, 3, 550000, 0, 0, 4130013, 1, 3),\n+  (4, 1452059, 115, 3, 605000, 0, 0, 4130012, 1, 3),\n+  (4, 1462051, 115, 3, 605000, 0, 0, 4130013, 1, 3),\n+  (4, 1452057, 115, 3, 605000, 0, 0, 4130012, 1, 3),\n+  (4, 1462050, 115, 3, 605000, 0, 0, 4130013, 1, 3),\n+  (8, 1002207, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (8, 1002208, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (8, 1002209, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (8, 1002210, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (8, 1002247, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (8, 1002248, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (8, 1002249, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (8, 1002281, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (8, 1002282, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (8, 1002283, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (8, 1002284, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (8, 1002285, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (8, 1002327, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (8, 1002328, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (8, 1002329, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (8, 1002330, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (8, 1002323, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (8, 1002324, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (8, 1002325, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (8, 1002326, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (8, 1002380, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (8, 1002381, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (8, 1002382, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (8, 1002383, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (8, 1002550, 105, 3, 165000, 0, 0, 4130018, 1, 3),\n+  (8, 1002793, 115, 3, 209000, 0, 0, 4130018, 1, 3),\n+  (8, 1002779, 115, 3, 209000, 0, 0, 4130018, 1, 3),\n+  (8, 1040094, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1040095, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1040096, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1040097, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1041077, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1041078, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1041079, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1041080, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1040098, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1040099, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1040100, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1041094, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1041095, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1041096, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1040105, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1040106, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1040107, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1041100, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1041101, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1041102, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1041103, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1040108, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1040109, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1040110, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1041105, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1041106, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1041107, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1040115, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1040116, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1040117, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1040118, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1041115, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1041116, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1041117, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1041118, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1060083, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1060084, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1060085, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1060086, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1061076, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1061077, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1061078, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1061079, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1060087, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1060088, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1060089, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1061093, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1061094, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1061095, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1060093, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1060094, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1060095, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1061099, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1061100, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1061101, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1061102, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1060097, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1060098, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1060099, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1061104, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1061105, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1061106, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1060104, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1060105, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1060106, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1060107, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1061114, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1061115, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1061116, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1061117, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1050096, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1050097, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1050098, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1050099, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1051090, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1051091, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1051092, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1051093, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1052072, 105, 3, 330000, 0, 0, 4130021, 1, 3),\n+  (8, 1052163, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (8, 1052158, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (8, 1072128, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (8, 1072129, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (8, 1072130, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (8, 1072131, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (8, 1072150, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (8, 1072151, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (8, 1072152, 55, 1, 39000, 0, 0, 4130001, 1, 1),\n+  (8, 1072161, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (8, 1072162, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (8, 1072163, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (8, 1072172, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (8, 1072173, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (8, 1072174, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (8, 1072192, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (8, 1072193, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (8, 1072194, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (8, 1072195, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (8, 1072213, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (8, 1072214, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (8, 1072215, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (8, 1072216, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (8, 1072272, 105, 3, 215000, 0, 0, 4130001, 1, 3),\n+  (8, 1072364, 115, 3, 248000, 0, 0, 4130001, 1, 3),\n+  (8, 1072358, 115, 3, 248000, 0, 0, 4130001, 1, 3),\n+  (8, 1082065, 45, 1, 47000, 0, 0, 4130000, 1, 1),\n+  (8, 1082066, 45, 1, 52000, 0, 0, 4130000, 1, 1),\n+  (8, 1082067, 45, 1, 50000, 0, 0, 4130000, 1, 1),\n+  (8, 1082092, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n+  (8, 1082093, 55, 1, 66000, 0, 0, 4130000, 1, 1),\n+  (8, 1082094, 55, 1, 71000, 0, 0, 4130000, 1, 1),\n+  (8, 1082095, 65, 1, 82000, 0, 0, 4130000, 1, 1),\n+  (8, 1082096, 65, 1, 88000, 0, 0, 4130000, 1, 1),\n+  (8, 1082097, 65, 1, 93000, 0, 0, 4130000, 1, 1),\n+  (8, 1082118, 75, 2, 153000, 0, 0, 4130000, 1, 2),\n+  (8, 1082119, 75, 2, 157000, 0, 0, 4130000, 1, 2),\n+  (8, 1082120, 75, 2, 161000, 0, 0, 4130000, 1, 2),\n+  (8, 1082142, 85, 2, 165000, 0, 0, 4130000, 1, 2),\n+  (8, 1082143, 85, 2, 165000, 0, 0, 4130000, 1, 2),\n+  (8, 1082144, 85, 2, 165000, 0, 0, 4130000, 1, 2),\n+  (8, 1082135, 95, 2, 199000, 0, 0, 4130000, 1, 2),\n+  (8, 1082136, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (8, 1082137, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (8, 1082138, 95, 2, 207000, 0, 0, 4130000, 1, 2),\n+  (8, 1082167, 105, 3, 330000, 0, 0, 4130000, 1, 3),\n+  (8, 1082242, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (8, 1082237, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (8, 1092059, 115, 3, 385000, 0, 0, 4130022, 1, 3),\n+  (8, 1332003, 45, 1, 121000, 0, 0, 4130014, 1, 1),\n+  (8, 1472018, 45, 1, 55000, 0, 0, 4130015, 1, 1),\n+  (8, 1472019, 45, 1, 57000, 0, 0, 4130015, 1, 1),\n+  (8, 1472020, 45, 1, 57000, 0, 0, 4130015, 1, 1),\n+  (8, 1472021, 45, 1, 60000, 0, 0, 4130015, 1, 1),\n+  (8, 1332016, 45, 1, 121000, 0, 0, 4130014, 1, 1),\n+  (8, 1332015, 55, 1, 137000, 0, 0, 4130014, 1, 1),\n+  (8, 1472022, 55, 1, 137000, 0, 0, 4130015, 1, 1),\n+  (8, 1472023, 55, 1, 140000, 0, 0, 4130015, 1, 1),\n+  (8, 1472024, 55, 1, 140000, 0, 0, 4130015, 1, 1),\n+  (8, 1472025, 55, 1, 143000, 0, 0, 4130015, 1, 1),\n+  (8, 1332017, 55, 1, 137000, 0, 0, 4130014, 1, 1),\n+  (8, 1332018, 65, 1, 154000, 0, 0, 4130014, 1, 1),\n+  (8, 1472026, 65, 1, 165000, 0, 0, 4130015, 1, 1),\n+  (8, 1472027, 65, 1, 167000, 0, 0, 4130015, 1, 1),\n+  (8, 1472028, 65, 1, 167000, 0, 0, 4130015, 1, 1),\n+  (8, 1472029, 65, 1, 170000, 0, 0, 4130015, 1, 1),\n+  (8, 1332019, 65, 1, 154000, 0, 0, 4130014, 1, 1),\n+  (8, 1472031, 75, 2, 308000, 0, 0, 4130015, 1, 2),\n+  (8, 1332022, 75, 2, 238000, 0, 0, 4130014, 1, 2),\n+  (8, 1332023, 75, 2, 238000, 0, 0, 4130014, 1, 2),\n+  (8, 1332027, 85, 2, 261000, 0, 0, 4130014, 1, 2),\n+  (8, 1472033, 85, 2, 346000, 0, 0, 4130015, 1, 2),\n+  (8, 1332026, 85, 2, 261000, 0, 0, 4130014, 1, 2),\n+  (8, 1332052, 95, 2, 308000, 0, 0, 4130014, 1, 2),\n+  (8, 1472053, 95, 2, 392000, 0, 0, 4130015, 1, 2),\n+  (8, 1332051, 95, 2, 308000, 0, 0, 4130014, 1, 2),\n+  (8, 1332050, 105, 3, 495000, 0, 0, 4130014, 1, 3),\n+  (8, 1472051, 105, 3, 627000, 0, 0, 4130015, 1, 3),\n+  (8, 1472052, 105, 3, 627000, 0, 0, 4130015, 1, 3),\n+  (8, 1332049, 105, 3, 495000, 0, 0, 4130014, 1, 3),\n+  (8, 1332075, 115, 3, 550000, 0, 0, 4130014, 1, 3),\n+  (8, 1332076, 115, 3, 550000, 0, 0, 4130014, 1, 3),\n+  (8, 1472071, 115, 3, 693000, 0, 0, 4130015, 1, 3),\n+  (8, 1332073, 115, 3, 550000, 0, 0, 4130014, 1, 3),\n+  (8, 1332074, 115, 3, 561000, 0, 0, 4130014, 1, 3),\n+  (8, 1472068, 115, 3, 693000, 0, 0, 4130015, 1, 3),\n+  (16, 1002631, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (16, 1002634, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (16, 1002637, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (16, 1002640, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (16, 1002643, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (16, 1002646, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (16, 1002649, 105, 3, 165000, 0, 0, 4130018, 1, 3),\n+  (16, 1002794, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (16, 1002780, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (16, 1052116, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (16, 1052119, 55, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (16, 1052122, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (16, 1052125, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (16, 1052128, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (16, 1052131, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (16, 1052134, 105, 3, 330000, 0, 0, 4130021, 1, 3),\n+  (16, 1052164, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (16, 1052159, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (16, 1072303, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (16, 1072306, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (16, 1072309, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (16, 1072312, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (16, 1072315, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (16, 1072318, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (16, 1072321, 105, 3, 198000, 0, 0, 4130001, 1, 3),\n+  (16, 1072365, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n+  (16, 1072359, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n+  (16, 1082198, 45, 1, 47000, 0, 0, 4130000, 1, 1),\n+  (16, 1082201, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n+  (16, 1082204, 65, 1, 82000, 0, 0, 4130000, 1, 1),\n+  (16, 1082207, 75, 2, 153000, 0, 0, 4130000, 1, 2),\n+  (16, 1082210, 85, 2, 176000, 0, 0, 4130000, 1, 2),\n+  (16, 1082213, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (16, 1082216, 105, 3, 330000, 0, 0, 4130000, 1, 3),\n+  (16, 1082243, 115, 3, 369000, 0, 0, 4130000, 1, 3),\n+  (16, 1082238, 115, 3, 369000, 0, 0, 4130000, 1, 3),\n+  (16, 1482007, 45, 1, 71000, 0, 0, 4130016, 1, 1),\n+  (16, 1492007, 45, 1, 77000, 0, 0, 4130017, 1, 1),\n+  (16, 1482008, 55, 1, 132000, 0, 0, 4130016, 1, 1),\n+  (16, 1492008, 55, 1, 137000, 0, 0, 4130017, 1, 1),\n+  (16, 1482009, 65, 1, 165000, 0, 0, 4130016, 1, 1),\n+  (16, 1492009, 65, 1, 170000, 0, 0, 4130017, 1, 1),\n+  (16, 1482010, 75, 2, 269000, 0, 0, 4130016, 1, 2),\n+  (16, 1492010, 75, 2, 269000, 0, 0, 4130017, 1, 2),\n+  (16, 1482011, 85, 2, 300000, 0, 0, 4130016, 1, 2),\n+  (16, 1492011, 85, 2, 308000, 0, 0, 4130017, 1, 2),\n+  (16, 1482012, 95, 2, 338000, 0, 0, 4130016, 1, 2),\n+  (16, 1492012, 95, 2, 346000, 0, 0, 4130017, 1, 2),\n+  (16, 1482013, 105, 3, 561000, 0, 0, 4130016, 1, 3),\n+  (16, 1492013, 105, 3, 572000, 0, 0, 4130017, 1, 3),\n+  (16, 1482024, 115, 3, 616000, 0, 0, 4130016, 1, 3),\n+  (16, 1492025, 115, 3, 627000, 0, 0, 4130017, 1, 3),\n+  (16, 1482023, 115, 3, 616000, 0, 0, 4130016, 1, 3),\n+  (16, 1492023, 115, 3, 627000, 0, 0, 4130017, 1, 3);\n \n INSERT IGNORE INTO `makerrecipedata` (`itemid`, `req_item`, `count`) VALUES\n   (4250000, 4021007, 1),\n@@ -15928,6 +15928,62 @@ INSERT IGNORE INTO `makerrewarddata` (`itemid`, `rewardid`, `quantity`, `prob`)\n   (4251402, 4251402, 1, 1),\n   (4251402, 4251401, 9, 4);\n \n+# generated with the MapleSkillMakerReagentIndexer feature\n+\n+CREATE TABLE IF NOT EXISTS `makerreagentdata` (\n+  `itemid` int(11) NOT NULL,\n+  `stat` varchar(20) NOT NULL,\n+  `value` smallint(6) NOT NULL,\n+  PRIMARY KEY (`itemid`)\n+) ENGINE=MyISAM DEFAULT CHARSET=latin1;\n+\n+INSERT IGNORE INTO `makerreagentdata` (`itemid`, `stat`, `value`) VALUES\n+  (4250000, \"incPAD\", 1),\n+  (4250001, \"incPAD\", 2),\n+  (4250002, \"incPAD\", 3),\n+  (4250100, \"incMAD\", 1),\n+  (4250101, \"incMAD\", 2),\n+  (4250102, \"incMAD\", 3),\n+  (4250200, \"incACC\", 2),\n+  (4250201, \"incACC\", 3),\n+  (4250202, \"incACC\", 5),\n+  (4250300, \"incEVA\", 2),\n+  (4250301, \"incEVA\", 3),\n+  (4250302, \"incEVA\", 5),\n+  (4250400, \"incSpeed\", 2),\n+  (4250401, \"incSpeed\", 3),\n+  (4250402, \"incSpeed\", 5),\n+  (4250500, \"incJump\", 1),\n+  (4250501, \"incJump\", 2),\n+  (4250502, \"incJump\", 3),\n+  (4250600, \"incMaxHP\", 10),\n+  (4250601, \"incMaxHP\", 20),\n+  (4250602, \"incMaxHP\", 30),\n+  (4250700, \"incMaxMP\", 10),\n+  (4250701, \"incMaxMP\", 20),\n+  (4250702, \"incMaxMP\", 30),\n+  (4250800, \"incSTR\", 2),\n+  (4250801, \"incSTR\", 3),\n+  (4250802, \"incSTR\", 5),\n+  (4250900, \"incINT\", 2),\n+  (4250901, \"incINT\", 3),\n+  (4250902, \"incINT\", 5),\n+  (4251000, \"incLUK\", 2),\n+  (4251001, \"incLUK\", 3),\n+  (4251002, \"incLUK\", 5),\n+  (4251100, \"incDEX\", 2),\n+  (4251101, \"incDEX\", 3),\n+  (4251102, \"incDEX\", 5),\n+  (4251200, \"incReqLevel\", -1),\n+  (4251201, \"incReqLevel\", -2),\n+  (4251202, \"incReqLevel\", -3),\n+  (4251300, \"randOption\", 1),\n+  (4251301, \"randOption\", 2),\n+  (4251302, \"randOption\", 3),\n+  (4251400, \"randStat\", 2),\n+  (4251401, \"randStat\", 3),\n+  (4251402, \"randStat\", 5);\n+\n CREATE TABLE IF NOT EXISTS `marriages` (\n   `marriageid` int(10) unsigned NOT NULL AUTO_INCREMENT,\n   `husbandid` int(10) unsigned NOT NULL DEFAULT '0',"}, {"sha": "3b8b53bbc03c17d9c008a75a8f869c32e1bc6009", "filename": "sql/db_drops.sql", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/sql/db_drops.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/sql/db_drops.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_drops.sql?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -14125,8 +14125,8 @@ USE `maplesolaxia`;\n (7140000, 1002640, 1, 1, 0, 700), \n (9300322, 1002640, 1, 1, 0, 40000),\n (9301004, 1002640, 1, 1, 0, 700), \n-(8140002, 4000240, 1, 1, 0, 200000), \n-(9500163, 4000240, 1, 1, 0, 200000), \n+(8140002, 4000240, 1, 1, 0, 60000), \n+(9500163, 4000240, 1, 1, 0, 60000), \n (8140002, 2070005, 1, 1, 0, 400),\n (9500163, 2070005, 1, 1, 0, 400), \n (8140002, 2040707, 1, 1, 0, 750), \n@@ -18142,13 +18142,13 @@ USE `maplesolaxia`;\n (8820012, 2290106, 1, 1, 0, 1000), \n (8820013, 2290106, 1, 1, 0, 1000), \n (8820014, 2290106, 1, 1, 0, 1000), \n-(8820000, 4021010, 1, 1, 0, 7000), \n-(8820001, 4021010, 1, 1, 0, 7000),\n-(8820010, 4021010, 1, 1, 0, 7000), \n-(8820011, 4021010, 1, 1, 0, 7000), \n-(8820012, 4021010, 1, 1, 0, 7000), \n-(8820013, 4021010, 1, 1, 0, 7000), \n-(8820014, 4021010, 1, 1, 0, 7000), \n+(8820000, 4021010, 1, 1, 0, 40000), \n+(8820001, 4021010, 1, 1, 0, 40000),\n+(8820010, 4021010, 1, 1, 0, 40000), \n+(8820011, 4021010, 1, 1, 0, 40000), \n+(8820012, 4021010, 1, 1, 0, 40000), \n+(8820013, 4021010, 1, 1, 0, 40000), \n+(8820014, 4021010, 1, 1, 0, 40000), \n (8820000, 1122011, 1, 1, 0, 40000), \n (8820001, 1122011, 1, 1, 0, 40000), \n (8820010, 1122011, 1, 1, 0, 700), \n@@ -19569,7 +19569,7 @@ USE `maplesolaxia`;\n (9400583, 4030012, 1, 1, 0, 300),\n (9400583, 4010006, 1, 1, 0, 40000),\n (9400583, 4020007, 1, 1, 0, 40000),\n-(9400583, 4007004, 1, 1, 0, 40000),\n+(9400583, 4007004, 1, 1, 0, 10000),\n (9400583, 2000003, 1, 1, 0, 40000),\n (9400583, 2000005, 1, 1, 0, 20000),\n (9400583, 2050004, 1, 1, 0, 20000),\n@@ -19597,8 +19597,8 @@ USE `maplesolaxia`;\n (9400549, 0, 2000, 3000, 0, 400000),\n (9400638, 0, 100, 200, 0, 400000),\n (9400638, 4011007, 1, 1, 0, 1000),\n-(9400638, 4007001, 1, 1, 0, 40000),\n-(9400638, 4007000, 1, 1, 0, 40000),\n+(9400638, 4007001, 1, 1, 0, 10000),\n+(9400638, 4007000, 1, 1, 0, 10000),\n (9400638, 2000001, 1, 1, 0, 40000),\n (9400638, 2022244, 1, 1, 0, 40000),\n (9400638, 2010003, 1, 1, 0, 40000),\n@@ -19608,9 +19608,9 @@ USE `maplesolaxia`;\n (9400638, 1041008, 1, 1, 0, 2000),\n (9400639, 0, 200, 250, 0, 400000),\n (9400639, 4000018, 1, 1, 0, 400000),\n-(9400639, 4130018, 1, 1, 0, 40000),\n-(9400639, 4130009, 1, 1, 0, 40000),\n-(9400639, 4007003, 1, 1, 0, 40000),\n+(9400639, 4130018, 1, 1, 0, 5000),\n+(9400639, 4130009, 1, 1, 0, 5000),\n+(9400639, 4007003, 1, 1, 0, 10000),\n (9400639, 2000002, 1, 1, 0, 40000),\n (9400639, 2000006, 1, 1, 0, 40000),\n (9400639, 2000002, 1, 1, 0, 40000),"}, {"sha": "afc55f628bdaab83221a5bbf711895c042fa7463", "filename": "src/client/command/Commands.java", "status": "modified", "additions": 30, "deletions": 10, "changes": 40, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/client/command/Commands.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/client/command/Commands.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/Commands.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -1665,17 +1665,27 @@ public static boolean executeSolaxiaCommandLv3(Channel cserv, Server srv, MapleC\n                     break;\n                     \n \t\tcase \"givenx\":\n-                        if (sub.length < 3){\n-\t\t\t\tplayer.yellowMessage(\"Syntax: !givenx <playername> <gainnx>\");\n+                        if (sub.length < 2){\n+\t\t\t\tplayer.yellowMessage(\"Syntax: !givenx [<playername>] <gainnx>\");\n \t\t\t\tbreak;\n \t\t\t}\n+                        \n+                        String recv;\n+                        int value;\n+                        if(sub.length > 2) {\n+                            recv = sub[1];\n+                            value = Integer.parseInt(sub[2]);\n+                        } else {\n+                            recv = c.getPlayer().getName();\n+                            value = Integer.parseInt(sub[1]);\n+                        }\n \t\t\t\n-                        victim = cserv.getPlayerStorage().getCharacterByName(sub[1]);\n+                        victim = cserv.getPlayerStorage().getCharacterByName(recv);\n                         if(victim != null) {\n-                                victim.getCashShop().gainCash(1, Integer.parseInt(sub[2]));\n+                                victim.getCashShop().gainCash(1, value);\n                                 player.message(\"NX given.\");\n                         } else {\n-                                player.message(\"Player '\" + sub[1] + \"' could not be found on this channel.\");\n+                                player.message(\"Player '\" + recv + \"' could not be found on this channel.\");\n                         }\n                     break;\n       \n@@ -1695,17 +1705,27 @@ public static boolean executeSolaxiaCommandLv3(Channel cserv, Server srv, MapleC\n                     break;\n                 \n                 case \"givems\":\n-                        if (sub.length < 3){\n-\t\t\t\tplayer.yellowMessage(\"Syntax: !givems <playername> <gainms>\");\n+                        if (sub.length < 2){\n+\t\t\t\tplayer.yellowMessage(\"Syntax: !givems [<playername>] <gainmeso>\");\n \t\t\t\tbreak;\n \t\t\t}\n                         \n-                        victim = cserv.getPlayerStorage().getCharacterByName(sub[1]);\n+                        String recv_;\n+                        int value_;\n+                        if(sub.length > 2) {\n+                            recv_ = sub[1];\n+                            value_ = Integer.parseInt(sub[2]);\n+                        } else {\n+                            recv_ = c.getPlayer().getName();\n+                            value_ = Integer.parseInt(sub[1]);\n+                        }\n+                        \n+                        victim = cserv.getPlayerStorage().getCharacterByName(recv_);\n                         if(victim != null) {\n-                                victim.gainMeso(Integer.parseInt(sub[2]), true);\n+                                victim.gainMeso(value_, true);\n                                 player.message(\"MESO given.\");\n                         } else {\n-                                player.message(\"Player '\" + sub[1] + \"' could not be found on this channel.\");\n+                                player.message(\"Player '\" + recv_ + \"' could not be found on this channel.\");\n                         }\n                     break;\n                     "}, {"sha": "1c839e718d81d3a97ef8376ae05235aa01cc8751", "filename": "src/constants/EquipType.java", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/constants/EquipType.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/constants/EquipType.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/EquipType.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,94 @@\n+/*\n+ *     This file is part of the MapleSolaxiaV2 Maple Story Server\n+ *\n+ * Copyright (C) 2017 RonanLana\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package constants;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ *\n+ * @author RonanLana\n+ */\n+public enum EquipType {\n+    UNDEFINED(-1),\n+    ACCESSORY(0),\n+    CAP(100),\n+    CAPE(110),\n+    COAT(104),\n+    FACE(2),\n+    GLOVES(108),\n+    HAIR(3),\n+    LONGCOAT(105),\n+    PANTS(106),\n+    PET_EQUIP(180),\n+    PET_EQUIP_FIELD(181),\n+    PET_EQUIP_LABEL(182),\n+    PET_EQUIP_QUOTE(183),\n+    RING(111),\n+    SHIELD(109),\n+    SHOES(107),\n+    TAMING(190),\n+    TAMING_SADDLE(191),\n+    SWORD(1302),\n+    AXE(1312),\n+    MACE(1322),\n+    DAGGER(1332),\n+    WAND(1372),\n+    STAFF(1382),\n+    SWORD_2H(1402),\n+    AXE_2H(1412),\n+    MACE_2H(1422),\n+    SPEAR(1432),\n+    POLEARM(1442),\n+    BOW(1452),\n+    CROSSBOW(1462),\n+    CLAW(1472),\n+    KNUCKLER(1482),\n+    PISTOL(1492);\n+\n+    private final int i;\n+    private static final Map<Integer, EquipType> map = new HashMap(34);\n+\n+    private EquipType(int val) {\n+        this.i = val;\n+    }\n+\n+    public int getValue() {\n+        return i;\n+    }\n+    \n+    static {\n+        for (EquipType eqEnum : EquipType.values()) {\n+            map.put(eqEnum.i, eqEnum);\n+        }\n+    }\n+    \n+    public static EquipType getEquipTypeById(int itemid) {\n+        EquipType ret;\n+        int val = itemid / 100000;\n+        \n+        if(val == 13 || val == 14) {\n+            ret = map.get(itemid / 1000);\n+        } else {\n+            ret = map.get(itemid / 10000);\n+        }\n+        \n+        return (ret != null) ? ret : EquipType.UNDEFINED;\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "3584662c6b577b5bfc926976612fcfd087a130ac", "filename": "src/constants/ItemConstants.java", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/constants/ItemConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/constants/ItemConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ItemConstants.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -89,6 +89,10 @@ public static boolean isPet(int itemId) {\n         return itemId / 1000 == 5000;\n     }\n     \n+    public static boolean isAccessory(int itemId) {\n+        return itemId >= 1110000 && itemId < 1140000;\n+    }\n+    \n     public static boolean isTownScroll(int itemId) {\n         return itemId >= 2030000 && itemId < 2030021;\n     }\n@@ -135,4 +139,16 @@ public static MapleInventoryType getInventoryType(final int itemId) {\n \t}\n \treturn MapleInventoryType.getByType(type);\n     }\n+    \n+    public static boolean isMakerReagent(int itemId) {\n+        return itemId / 10000 == 425;\n+    }\n+    \n+    public static boolean isOverall(int itemId) {\n+        return itemId / 10000 == 105;\n+    }\n+\n+    public static boolean isWeapon(int itemId) {\n+        return itemId >= 1302000 && itemId < 1492024;\n+    }\n }"}, {"sha": "788250fd3c5a47fdb10d44d144a7a69e9409d905", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -65,6 +65,7 @@\n     public static final boolean USE_ERASE_UNTRADEABLE_DROP = true;  //Forces flagged untradeable items to disappear when dropped.\n     public static final boolean USE_ERASE_PET_ON_EXPIRATION = false;//Forces pets to be removed from inventory when expire time comes, rather than converting it to a doll.\n     public static final boolean USE_BUFF_MOST_SIGNIFICANT = true;   //When applying buffs, the player will stick with the highest stat boost among the listed, rather than overwriting stats.\n+    public static final boolean USE_MAKER_FEE_HEURISTICS = true;    //Apply compiled values for stimulants and reagents into the Maker fee calculations (max error revolves around 50k mesos). Set false to use basic constant values instead (results are never higher than requested by the client-side).\n     \n     //Server Rates And Experience\n     public static final int EXP_RATE = 10;\n@@ -86,7 +87,7 @@\n     public static final long BLOCK_NPC_RACE_CONDT = (long)(0.5 * 1000); //Time the player client must wait before reopening a conversation with an NPC.\n     public static final long PET_LOOT_UPON_ATTACK = (long)(0.7 * 1000); //Time the pet must wait before trying to pick items up.\n     \n-    //Dangling Items Configuration\n+    //Dangling Items/Locks Configuration\n     public static final int ITEM_EXPIRE_TIME  = 3 * 60 * 1000;  //Time before items start disappearing. Recommended to be set up to 3 minutes.\n     public static final int ITEM_MONITOR_TIME = 5 * 60 * 1000;  //Interval between item monitoring tasks on maps, which checks for dangling (null) item objects on the map item history.\n     public static final int LOCK_MONITOR_TIME = 30 * 1000;      //Waiting time for a lock to be released. If it reach timed out, a critical server deadlock has made present.\n@@ -98,7 +99,7 @@\n     public static final boolean USE_PERFECT_GM_SCROLL = true;   //Scrolls from GMs never uses up slots nor fails.\n     public static final boolean USE_PERFECT_SCROLLING = true;   //Scrolls doesn't use slots upon failure.\n     public static final boolean USE_ENHANCED_CHSCROLL = true;   //Equips even more powerful with chaos upgrade.\n-    public static final boolean USE_ENHANCED_CRAFTING = true;   //Applys chaos scroll on every equip crafted.\n+    public static final boolean USE_ENHANCED_CRAFTING = true;   //Apply chaos scroll on every equip crafted.\n     public static final int SCROLL_CHANCE_RATE = 0;             //Number of rolls for success on a scroll, set 0 for default.\n     public static final int CHSCROLL_STAT_RANGE = 6;            //Stat upgrade range (-N, N) on chaos scrolls.\n     \n@@ -118,10 +119,12 @@\n     public static final boolean USE_EQUIPMNT_LVLUP_SLOTS = true;//Equips can upgrade slots at level up.\n     public static final boolean USE_EQUIPMNT_LVLUP_POWER = true;//Enable more powerful stat upgrades at equip level up.\n     public static final boolean USE_SPIKES_AVOID_BANISH = true; //Shoes equipped with spikes prevents mobs from banishing wearer.\n-    public static final boolean USE_CHAIR_EXTRAHEAL = true;     //Enable map chairs to further recover player's HP and MP (player must have the Chair Mastery skill).\n     public static final int MAX_EQUIPMNT_LVLUP_STAT_UP = 10000; //Max stat upgrade an equipment can have on a levelup.\n     public static final int MAX_EQUIPMNT_STAT = 32767;          //Max stat on an equipment by leveling up.\n     public static final int USE_EQUIPMNT_LVLUP = 7;             //All equips lvlup at max level of N, set 1 to disable.\n+    \n+    //Map-Chair Configuration\n+    public static final boolean USE_CHAIR_EXTRAHEAL = true;     //Enable map chairs to further recover player's HP and MP (player must have the Chair Mastery skill).\n     public static final byte CHAIR_EXTRA_HEAL_HP = 70;          //Each chair extra heal proc increasing HP.\n     public static final byte CHAIR_EXTRA_HEAL_MP = 42;          //Each chair extra heal proc increasing MP.\n     "}, {"sha": "8f5b4485608f987153de06098b88980208f601dd", "filename": "src/net/server/channel/handlers/MakerSkillHandler.java", "status": "modified", "additions": 382, "deletions": 20, "changes": 402, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/net/server/channel/handlers/MakerSkillHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/net/server/channel/handlers/MakerSkillHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MakerSkillHandler.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -21,12 +21,27 @@\n */\n package net.server.channel.handlers;\n \n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+\n+import constants.ItemConstants;\n import client.MapleClient;\n+import client.inventory.Equip;\n+import client.inventory.Item;\n+import client.inventory.MapleInventoryType;\n+import constants.EquipType;\n+import constants.ServerConstants;\n+import java.text.DecimalFormat;\n+import java.text.NumberFormat;\n import net.AbstractMaplePacketHandler;\n import server.MapleInventoryManipulator;\n import server.MapleItemInformationProvider;\n import server.MakerItemFactory;\n import server.MakerItemFactory.MakerItemCreateEntry;\n+import tools.FilePrinter;\n import tools.Pair;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n@@ -36,50 +51,317 @@\n  * @author Jay Estrella, Ronan\n  */\n public final class MakerSkillHandler extends AbstractMaplePacketHandler {\n-    private MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n-\n+    private static MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n+    \n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-        slea.readInt();\n+        int type = slea.readInt();\n         int toCreate = slea.readInt();\n+        int toDisassemble = -1, pos = -1;\n+        boolean makerSucceeded = true;\n+        \n+        MakerItemCreateEntry recipe;\n+        Map<Integer, Short> reagentids = new LinkedHashMap<>();\n+        int stimulantid = -1;\n+        \n+        if(type == 3) {    // building monster crystal\n+            int fromLeftover = toCreate;\n+            toCreate = ii.getMakerCrystalFromLeftover(toCreate);\n+            if(toCreate == -1) {\n+                c.announce(MaplePacketCreator.serverNotice(1, ii.getName(toCreate) + \" is unavailable for Monster Crystal conversion.\"));\n+                return;\n+            }\n+            \n+            recipe = MakerItemFactory.generateLeftoverCrystalEntry(fromLeftover);\n+        } else if(type == 4) {  // disassembling\n+            slea.readInt(); // 1... probably inventory type\n+            pos = slea.readInt();\n+            \n+            Item it = c.getPlayer().getInventory(MapleInventoryType.EQUIP).getItem((short) pos);\n+            if(it != null && it.getItemId() == toCreate) {\n+                Pair<Integer, Integer> p;\n+                        \n+                if((p = generateDisassemblyInfo(toCreate)) != null) {\n+                    recipe = MakerItemFactory.generateDisassemblyCrystalEntry(p.getLeft(), p.getRight());\n+                    toDisassemble = toCreate;\n+                    toCreate = ii.getMakerCrystalFromEquip(toCreate);\n+                } else {\n+                    c.announce(MaplePacketCreator.serverNotice(1, ii.getName(toCreate) + \" is unavailable for Monster Crystal disassembly.\"));\n+                    return;\n+                }\n+            } else {\n+                c.announce(MaplePacketCreator.serverNotice(1, \"An unknown error occurred when trying to apply that item for disassembly.\"));\n+                return;\n+            }\n+        } else {\n+            if(toCreate < 2000000) {   // only equips uses stimulant and reagents\n+                if(slea.readByte() != 0) {  // stimulant\n+                    stimulantid = getMakerStimulant(toCreate);\n+                    if(!c.getAbstractPlayerInteraction().haveItem(stimulantid)) {\n+                        stimulantid = -1;\n+                    }\n+                }\n+\n+                int reagents = Math.min(slea.readInt(), getMakerReagentSlots(toCreate));\n+                for(int i = 0; i < reagents; i++) {  // crystals\n+                    int reagentid = slea.readInt();\n+                    if(ItemConstants.isMakerReagent(reagentid)) {\n+                        Short r = reagentids.get(reagentid);\n+                        if(r == null) {\n+                            reagentids.put(reagentid, (short) 1);\n+                        } else {\n+                            reagentids.put(reagentid, (short) (r + 1));\n+                        }\n+                    }\n+                }\n+\n+                List<Pair<Integer, Short>> toUpdate = new LinkedList<>();\n+                for(Entry<Integer, Short> r : reagentids.entrySet()) {\n+                    int qty = c.getAbstractPlayerInteraction().getItemQuantity(r.getKey());\n+\n+                    if(qty < r.getValue()) {\n+                        toUpdate.add(new Pair<>(r.getKey(), (short) qty));\n+                    }\n+                }\n+\n+                // remove those not present on player inventory\n+                if(!toUpdate.isEmpty()) {\n+                    for(Pair<Integer, Short> r : toUpdate) {\n+                        if(r.getRight() > 0) {\n+                            reagentids.put(r.getLeft(), r.getRight());\n+                        } else {\n+                            reagentids.remove(r.getLeft());\n+                        }\n+                    }\n+                }\n+\n+                if(!reagentids.isEmpty()) removeOddMakerReagents(toCreate, reagentids);\n+            }\n+            \n+            recipe = MakerItemFactory.getItemCreateEntry(toCreate, stimulantid, reagentids);\n+        }\n         \n-        MakerItemCreateEntry recipe = MakerItemFactory.getItemCreateEntry(toCreate);\n         short createStatus = getCreateStatus(c, recipe);\n         \n         switch(createStatus) {\n-            case 4: // no req skill level\n-                c.announce(MaplePacketCreator.serverNotice(1, \"You don't have enough Maker level to complete this operation.\"));\n+            case -1:// non-available for Maker itemid has been tried to forge\n+                FilePrinter.printError(FilePrinter.EXPLOITS, \"Player \" + c.getPlayer().getName() + \" tried to craft itemid \" + toCreate + \" using the Maker skill.\");\n+                c.announce(MaplePacketCreator.serverNotice(1, \"The requested item could not be crafted on this operation.\"));\n+                break;\n+            \n+            case 1: // no items\n+                c.announce(MaplePacketCreator.serverNotice(1, \"You don't have all required items in your inventory to make \" + recipe.getRewardAmount() + \" \" + ii.getName(toCreate) + \".\"));\n                 break;\n                 \n-            case 3: // no meso\n-                c.announce(MaplePacketCreator.serverNotice(1, \"You don't have enough mesos to complete this operation.\"));\n+            case 2: // no meso\n+                NumberFormat nf = new DecimalFormat(\"#,###,###,###\");\n+                c.announce(MaplePacketCreator.serverNotice(1, \"You don't have enough mesos (\" + nf.format(recipe.getCost()) + \") to complete this operation.\"));\n                 break;\n                     \n-            case 2: // no req level\n+            case 3: // no req level\n                 c.announce(MaplePacketCreator.serverNotice(1, \"You don't have enough level to complete this operation.\"));\n                 break;\n                 \n-            case 1: // no items\n-                c.announce(MaplePacketCreator.serverNotice(1, \"You don't have all required items in your inventory to make \" + recipe.getRewardAmount() + \" \" + ii.getName(toCreate) + \".\"));\n+            case 4: // no req skill level\n+                c.announce(MaplePacketCreator.serverNotice(1, \"You don't have enough Maker level to complete this operation.\"));\n                 break;\n                 \n             default:\n-                if (!c.getPlayer().getInventory(ii.getInventoryType(toCreate)).isFull()) {\n+                if (MapleInventoryManipulator.checkSpace(c, toCreate, (short) recipe.getRewardAmount(), \"\")) {\n                     for (Pair<Integer, Integer> p : recipe.getReqItems()) {\n-                        int toRemove = p.getLeft();\n-                        MapleInventoryManipulator.removeById(c, ii.getInventoryType(toRemove), toRemove, p.getRight(), false, false);\n+                        c.getAbstractPlayerInteraction().gainItem(p.getLeft(), (short) -p.getRight());\n+                    }\n+                    \n+                    if(toDisassemble != -1) {\n+                        MapleInventoryManipulator.removeFromSlot(c, MapleInventoryType.EQUIP, (short) pos, (short) 1, false);\n+                        c.announce(MaplePacketCreator.getShowItemGain(toDisassemble, (short) -1, true));\n+                    }\n+                    \n+                    int cost = recipe.getCost();\n+                    if(stimulantid == -1 && reagentids.isEmpty()) {\n+                        if(cost > 0) c.getPlayer().gainMeso(-cost);\n+                        \n+                        c.getPlayer().setCS(true);\n+                        c.getAbstractPlayerInteraction().gainItem(toCreate, (short) recipe.getRewardAmount());\n+                        c.getPlayer().setCS(false);\n+                    } else {\n+                        if(stimulantid != -1) c.getAbstractPlayerInteraction().gainItem(stimulantid, (short) -1);\n+                        if(!reagentids.isEmpty()) {\n+                            for(Entry<Integer, Short> r : reagentids.entrySet()) {\n+                                c.getAbstractPlayerInteraction().gainItem(r.getKey(), (short) (-1 * r.getValue()));\n+                            }\n+                        }\n+                        \n+                        if(cost > 0) c.getPlayer().gainMeso(-cost);\n+                        makerSucceeded = addBoostedMakerItem(c, toCreate, stimulantid, reagentids);\n+                    }\n+                    \n+                    if(makerSucceeded) c.announce(MaplePacketCreator.serverNotice(1, \"You have successfully created \" + recipe.getRewardAmount() + \" \" + ii.getName(toCreate) + \".\"));\n+                    else c.getPlayer().dropMessage(5, \"The Maker skill lights up, but the skill winds up as if nothing happened.\");\n+                    \n+                    c.announce(MaplePacketCreator.showMakerEffect(makerSucceeded));\n+                    c.getPlayer().getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showForeignMakerEffect(c.getPlayer().getId(), makerSucceeded), false);\n+                    \n+                    if(toCreate == 4260003 && c.getPlayer().getQuestStatus(6033) == 1) {\n+                        c.getAbstractPlayerInteraction().setQuestProgress(6033, 1);\n                     }\n-                    MapleInventoryManipulator.addById(c, toCreate, (short) recipe.getRewardAmount());\n-\n-                    c.announce(MaplePacketCreator.serverNotice(1, \"You have created \" + recipe.getRewardAmount() + \" \" + ii.getName(toCreate) + \".\"));\n-                    c.announce(MaplePacketCreator.showMakerEffect());\n                 } else {\n                     c.announce(MaplePacketCreator.serverNotice(1, \"Your inventory is full.\"));\n                 }\n         }\n     }\n \n-    private short getCreateStatus(MapleClient c, MakerItemCreateEntry recipe) {\n+    // checks and prevents hackers from PE'ing Maker operations with invalid operations\n+    private static void removeOddMakerReagents(int toCreate, Map<Integer, Short> reagentids) {\n+        Map<Integer, Integer> reagentType = new LinkedHashMap<>();\n+        List<Integer> toRemove = new LinkedList<>();\n+        \n+        boolean isWeapon = ItemConstants.isWeapon(toCreate);\n+        \n+        for(Entry<Integer, Short> r : reagentids.entrySet()) {\n+            int curRid = r.getKey();\n+            int type = r.getKey() / 100;\n+            \n+            if(type < 42502 && !isWeapon) {     // only weapons should gain w.att/m.att from these.\n+                toRemove.add(curRid);\n+            } else {\n+                Integer tableRid = reagentType.get(type);\n+                \n+                if(tableRid != null) {\n+                    if(tableRid < curRid) {\n+                        toRemove.add(tableRid);\n+                        reagentType.put(type, curRid);\n+                    } else {\n+                        toRemove.add(curRid);\n+                    }\n+                } else {\n+                    reagentType.put(type, curRid);\n+                }\n+            }\n+        }\n+        \n+        // removing less effective gems of repeated type\n+        for(Integer i : toRemove) {\n+            reagentids.remove(i);\n+        }\n+        \n+        // only quantity 1 of each gem will be accepted by the Maker skill\n+        for(Integer i : reagentids.keySet()) {\n+            reagentids.put(i, (short) 1);\n+        }\n+    }\n+    \n+    private static int getMakerReagentSlots(int itemId) {\n+        try {\n+            int eqpLevel = ii.getEquipStats(itemId).get(\"reqLevel\");\n+            \n+            if(eqpLevel < 78) {\n+                return 1;\n+            } else if(eqpLevel >= 78 && eqpLevel < 108) {\n+                return 2;\n+            } else {\n+                return 3;\n+            }\n+        } catch(NullPointerException npe) {\n+            return 0;\n+        }\n+    }\n+    \n+    private static int getMakerStimulant(int itemId) {\n+        EquipType et = EquipType.getEquipTypeById(itemId);\n+        \n+        switch(et) {\n+            case GLOVES:\n+                return 4130000;\n+            \n+            case SHOES:\n+                return 4130001;\n+            \n+            case SWORD:\n+                return 4130002;\n+            \n+            case AXE:\n+                return 4130003;\n+                \n+            case MACE:\n+                return 4130004;\n+            \n+            case SWORD_2H:\n+                return 4130005;\n+            \n+            case AXE_2H:\n+                return 4130006;\n+            \n+            case MACE_2H:\n+                return 4130007;\n+            \n+            case SPEAR:\n+                return 4130008;\n+            \n+            case POLEARM:\n+                return 4130009;\n+            \n+            case WAND:\n+                return 4130010;\n+                \n+            case STAFF:\n+                return 4130011;\n+                    \n+            case BOW:\n+                return 4130012;\n+                        \n+            case CROSSBOW:\n+                return 4130013;\n+                            \n+            case DAGGER:\n+                return 4130014;\n+                                \n+            case CLAW:\n+                return 4130015;\n+                                    \n+            case KNUCKLER:\n+                return 4130016;\n+                                        \n+            case PISTOL:\n+                return 4130017;\n+            \n+            case CAP:\n+                return 4130018;\n+                \n+            case COAT:\n+                return 4130019;\n+                \n+            case PANTS:\n+                return 4130020;\n+                \n+            case LONGCOAT:\n+                return 4130021;\n+                \n+            case SHIELD:\n+                return 4130022;\n+                \n+            default:\n+                return -1;\n+        }\n+    }\n+    \n+    private static Pair<Integer, Integer> generateDisassemblyInfo(int itemId) {\n+        int recvFee = ii.getMakerDisassembledFee(itemId);\n+        if(recvFee > -1) {\n+            int recvQty = ii.getMakerDisassembledQuantity(itemId);\n+            if(recvQty > 0) {\n+                return new Pair<>(recvFee, recvQty);\n+            }\n+        }\n+        \n+        return null;\n+    }\n+    \n+    private static short getCreateStatus(MapleClient c, MakerItemCreateEntry recipe) {\n+        if(recipe == null) {\n+            return -1;\n+        }\n+        \n         if(!hasItems(c, recipe)) {\n             return 1;\n         }\n@@ -99,7 +381,7 @@ private short getCreateStatus(MapleClient c, MakerItemCreateEntry recipe) {\n         return 0;\n     }\n \n-    private boolean hasItems(MapleClient c, MakerItemCreateEntry recipe) {\n+    private static boolean hasItems(MapleClient c, MakerItemCreateEntry recipe) {\n         for (Pair<Integer, Integer> p : recipe.getReqItems()) {\n             int itemId = p.getLeft();\n             if (c.getPlayer().getInventory(ii.getInventoryType(itemId)).countById(itemId) < p.getRight()) {\n@@ -108,4 +390,84 @@ private boolean hasItems(MapleClient c, MakerItemCreateEntry recipe) {\n         }\n         return true;\n     }\n+    \n+    private static boolean addBoostedMakerItem(MapleClient c, int itemid, int stimulantid, Map<Integer, Short> reagentids) {\n+        if(stimulantid != -1 && !ii.rollSuccessChance(90.0)) {\n+            return false;\n+        }\n+        \n+        Item item = ii.getEquipById(itemid);\n+        if(item == null) return false;\n+\n+        Equip eqp = (Equip)item;\n+        if(ItemConstants.isAccessory(item.getItemId()) && eqp.getUpgradeSlots() <= 0) eqp.setUpgradeSlots(3);\n+\n+        if(ServerConstants.USE_ENHANCED_CRAFTING == true) {\n+            if(!(c.getPlayer().isGM() && ServerConstants.USE_PERFECT_GM_SCROLL)) {\n+                eqp.setUpgradeSlots((byte)(eqp.getUpgradeSlots() + 1));\n+            }\n+            item = MapleItemInformationProvider.getInstance().scrollEquipWithId(eqp, 2049100, true, 0, c.getPlayer().isGM());\n+        }\n+        \n+        if(!reagentids.isEmpty()) {\n+            Map<String, Integer> stats = new LinkedHashMap<>();\n+            List<Short> randOption = new LinkedList<>();\n+            List<Short> randStat = new LinkedList<>();\n+            \n+            for(Entry<Integer, Short> r : reagentids.entrySet()) {\n+                Pair<String, Integer> reagentBuff = ii.getMakerReagentStatUpgrade(r.getKey());\n+                \n+                if(reagentBuff != null) {\n+                    String s = reagentBuff.getLeft();\n+                    \n+                    if(s.substring(0, 4).contains(\"rand\")) {\n+                        if(s.substring(4).equals(\"Stat\")) {\n+                            randStat.add((short) (reagentBuff.getRight() * r.getValue()));\n+                        } else {\n+                            randOption.add((short) (reagentBuff.getRight() * r.getValue()));\n+                        }\n+                    } else {\n+                        String stat = s.substring(3);\n+                        \n+                        if(!stat.equals(\"ReqLevel\")) {    // improve req level... really?\n+                            switch (stat) {\n+                                case \"MaxHP\":\n+                                    stat = \"MHP\";\n+                                    break;\n+                                    \n+                                case \"MaxMP\":\n+                                    stat = \"MMP\";\n+                                    break;\n+                            }\n+                            \n+                            Integer d = stats.get(stat);\n+                            if(d == null) {\n+                                stats.put(stat, reagentBuff.getRight() * r.getValue());\n+                            } else {\n+                                stats.put(stat, d + (reagentBuff.getRight() * r.getValue()));\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+            \n+            ii.improveEquipStats(eqp, stats);\n+            \n+            for(Short s : randStat) {\n+                ii.scrollOptionEquipWithChaos(eqp, s, false);\n+            }\n+            \n+            for(Short s : randOption) {\n+                ii.scrollOptionEquipWithChaos(eqp, s, true);\n+            }\n+        }\n+        \n+        if(stimulantid != -1) {\n+            eqp = ii.randomizeUpgradeStats(eqp);\n+        }\n+        \n+        MapleInventoryManipulator.addFromDrop(c, item, false, -1);\n+        c.announce(MaplePacketCreator.getShowItemGain(itemid, (short) 1, true));\n+        return true;\n+    }\n }"}, {"sha": "91cd1d41bab4d1f8a66cfb2bea9c059e3cf2e9f5", "filename": "src/scripting/AbstractPlayerInteraction.java", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/scripting/AbstractPlayerInteraction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/scripting/AbstractPlayerInteraction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/AbstractPlayerInteraction.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -342,22 +342,17 @@ public void resetQuestProgress(int qid, int pid) {\n         \n         public Item evolvePet(byte slot, int afterId) {\n             MaplePet evolved = null;\n-            MaplePet target = null;\n-            Item tmp;\n+            MaplePet target;\n             \n-            long period = 90;    //refreshes expiration date: 90 days\n-            period *= 24;\n-            period *= 60;\n-            period *= 60;\n-            period *= 1000;\n+            long period = 90 * 24 * 60 * 60 * 1000;    //refreshes expiration date: 90 days\n             \n             target = getPlayer().getPet(slot);\n             if(target == null) {\n                 getPlayer().message(\"Pet could not be evolved...\");\n                 return(null);\n             }\n             \n-            tmp = gainItem(afterId, (short)1, false, true, period, target);\n+            Item tmp = gainItem(afterId, (short) 1, false, true, period, target);\n             getPlayer().unequipPet(target, true, false);\n             \n             /*\n@@ -410,18 +405,13 @@ public Item gainItem(int id, short quantity, boolean randomStats, boolean showMe\n             return gainItem(id, quantity, randomStats, showMessage, expires, null);\n         }\n         \n-        private boolean isAccessory(int id) {\n-            int val = id / 10000;\n-            return(val >= 111 && val <= 113);\n-        }\n-        \n-\tpublic Item gainItem(int id, short quantity, boolean randomStats, boolean showMessage, long expires, MaplePet from) {\n+        public Item gainItem(int id, short quantity, boolean randomStats, boolean showMessage, long expires, MaplePet from) {\n \t\tItem item = null;\n-                MaplePet evolved = null;\n+                MaplePet evolved;\n                 int petId = -1;\n \t\t\n \t\tif (quantity >= 0) {\n-                        if (id >= 5000000 && id <= 5000100) {\n+                        if (ItemConstants.isPet(id)) {\n                                 petId = MaplePet.createPet(id);\n \n                                 if(from != null) {\n@@ -451,12 +441,13 @@ public Item gainItem(int id, short quantity, boolean randomStats, boolean showMe\n                                 \n                                 if(item != null) {\n                                     Equip it = (Equip)item;\n-                                    if(isAccessory(item.getItemId()) && it.getUpgradeSlots() <= 0) it.setUpgradeSlots(3);\n+                                    if(ItemConstants.isAccessory(item.getItemId()) && it.getUpgradeSlots() <= 0) it.setUpgradeSlots(3);\n                                 \n                                     if(ServerConstants.USE_ENHANCED_CRAFTING == true && c.getPlayer().getCS() == true) {\n                                         Equip eqp = (Equip)item;\n-                                        eqp.setUpgradeSlots((byte)(eqp.getUpgradeSlots() + 1));\n-\n+                                        if(!(c.getPlayer().isGM() && ServerConstants.USE_PERFECT_GM_SCROLL)) {\n+                                            eqp.setUpgradeSlots((byte)(eqp.getUpgradeSlots() + 1));\n+                                        }\n                                         item = MapleItemInformationProvider.getInstance().scrollEquipWithId(item, 2049100, true, 0, c.getPlayer().isGM());\n                                     }\n                                 }"}, {"sha": "6160ea93e841c6189f3fc0969ea8887de05a8ac8", "filename": "src/server/CashShop.java", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/server/CashShop.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/server/CashShop.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/CashShop.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -104,8 +104,18 @@ public Item toItem() {\n             }\n \n             if (ItemConstants.EXPIRING_ITEMS) {\n-                    if(itemId == 5211048 || itemId == 5360042) { // 4 Hour 2X coupons, the period is 1, but we don't want them to last a day.\n-                            item.setExpiration(System.currentTimeMillis() + (1000 * 60 * 60 * 4));\n+                    if(period == 1) {\n+                            if(itemId == 5211048 || itemId == 5360042) { // 4 Hour 2X coupons, the period is 1, but we don't want them to last a day.\n+                                    item.setExpiration(System.currentTimeMillis() + (1000 * 60 * 60 * 4));\n+                            /*\n+                            } else if(itemId == 5211047 || itemId == 5360014) { // 3 Hour 2X coupons, unused as of now\n+                                    item.setExpiration(System.currentTimeMillis() + (1000 * 60 * 60 * 3));\n+                            */\n+                            } else if(itemId == 5211060) { // 2 Hour 3X coupons.\n+                                    item.setExpiration(System.currentTimeMillis() + (1000 * 60 * 60 * 2));\n+                            } else {\n+                                    item.setExpiration(System.currentTimeMillis() + (1000 * 60 * 60 * 24));\n+                            }\n                     } else {\n                             item.setExpiration(System.currentTimeMillis() + (1000 * 60 * 60 * 24 * period));\n                     }"}, {"sha": "c30a8d84e28d559d2a18df5845d2be9af5ac066f", "filename": "src/server/MakerItemFactory.java", "status": "modified", "additions": 128, "deletions": 47, "changes": 175, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/server/MakerItemFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/server/MakerItemFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MakerItemFactory.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -21,75 +21,147 @@\n */\n package server;\n \n-import java.sql.Connection;\n-import java.sql.PreparedStatement;\n-import java.sql.ResultSet;\n-import java.sql.SQLException;\n+import constants.EquipType;\n+import constants.ServerConstants;\n import java.util.ArrayList;\n-import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import tools.DatabaseConnection;\n+import java.util.Map.Entry;\n import tools.Pair;\n \n /**\n  *\n- * @author Jay Estrella\n+ * @author Jay Estrella, Ronan\n  */\n public class MakerItemFactory {\n-    private static Map<Integer, MakerItemCreateEntry> createCache = new HashMap<Integer, MakerItemCreateEntry>();\n+    private static MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n+    \n+    public static MakerItemCreateEntry getItemCreateEntry(int toCreate, int stimulantid, Map<Integer, Short> reagentids) {\n+        MakerItemCreateEntry makerEntry = ii.getMakerItemEntry(toCreate);\n+        if(makerEntry == null) {\n+            return null;\n+        }\n+        \n+          // THEY DECIDED FOR SOME BIZARRE PATTERN ON THE FEE THING, ALMOST RANDOMIZED.\n+        if(stimulantid != -1) {\n+            makerEntry.addCost(getMakerStimulantFee(toCreate));\n+        }\n+        \n+        if(!reagentids.isEmpty()) {\n+            for(Entry<Integer, Short> r : reagentids.entrySet()) {\n+                makerEntry.addCost((getMakerReagentFee(toCreate, ((r.getKey() % 10) + 1))) * r.getValue());\n+            }\n+        }\n+        \n+        makerEntry.trimCost();  // \"commit\" the real cost of the recipe.\n+        return makerEntry;\n+    }\n+    \n+    public static MakerItemCreateEntry generateLeftoverCrystalEntry(int fromLeftoverid) {\n+        MakerItemCreateEntry ret = new MakerItemCreateEntry(0, 0, 1, 1);\n+        ret.addReqItem(fromLeftoverid, 100);\n+        return ret;\n+    }\n \n-    public static MakerItemCreateEntry getItemCreateEntry(int toCreate) {\n-        if (createCache.get(toCreate) != null) {\n-            return createCache.get(toCreate);\n-        } else {\n-            try {\n-                Connection con = DatabaseConnection.getConnection();\n-                PreparedStatement ps = con.prepareStatement(\"SELECT req_level, req_maker_level, req_meso, quantity FROM makercreatedata WHERE itemid = ?\");\n-                ps.setInt(1, toCreate);\n-                ResultSet rs = ps.executeQuery();\n-                int reqLevel = 0;\n-                int reqMakerLevel = 0;\n-                int cost = 0;\n-                int toGive = 0;\n-                if (rs.next()) {\n-                    reqLevel = rs.getInt(\"req_level\");\n-                    reqMakerLevel = rs.getInt(\"req_maker_level\");\n-                    cost = rs.getInt(\"req_meso\");\n-                    toGive = rs.getInt(\"quantity\");\n-                }\n-                ps.close();\n-                rs.close();\n-                MakerItemCreateEntry ret = new MakerItemCreateEntry(cost, reqLevel, reqMakerLevel, toGive);\n-                ps = con.prepareStatement(\"SELECT req_item, count FROM makerrecipedata WHERE itemid = ?\");\n-                ps.setInt(1, toCreate);\n-                rs = ps.executeQuery();\n-                while (rs.next()) {\n-                    ret.addReqItem(rs.getInt(\"req_item\"), rs.getInt(\"count\"));\n-                }\n-                rs.close();\n-                ps.close();\n-                con.close();\n-                createCache.put(toCreate, ret);\n-            } catch (SQLException sqle) {\n-                sqle.printStackTrace();\n+    public static MakerItemCreateEntry generateDisassemblyCrystalEntry(int cost, int crystalGain) {     // equipment at specific position already taken\n+        MakerItemCreateEntry ret = new MakerItemCreateEntry(cost, 0, 1, crystalGain);\n+        return ret;\n+    }\n+            \n+    private static double getMakerStimulantFee(int itemid) {\n+        if(ServerConstants.USE_MAKER_FEE_HEURISTICS) {\n+            EquipType et = EquipType.getEquipTypeById(itemid);\n+            int eqpLevel = ii.getEquipStats(itemid).get(\"reqLevel\");\n+\n+            switch(et) {\n+                case CAP:\n+                    return 1145.736246 * Math.exp(0.03336832546 * eqpLevel);\n+\n+                case LONGCOAT:\n+                    return 2117.469118 * Math.exp(0.03355349137 * eqpLevel);\n+\n+                case SHOES:\n+                    return 1218.624674 * Math.exp(0.0342266043 * eqpLevel);\n+\n+                case GLOVES:\n+                    return 2129.531152 * Math.exp(0.03421778102 * eqpLevel);\n+\n+                case COAT:\n+                    return 1770.630579 * Math.exp(0.03359768677 * eqpLevel);\n+\n+                case PANTS:\n+                    return 1442.98837 * Math.exp(0.03444783295 * eqpLevel);\n+\n+                case SHIELD:\n+                    return 6312.40136 * Math.exp(0.0237929527 * eqpLevel);\n+\n+                default:    // weapons\n+                    return 4313.581428 * Math.exp(0.03147837094 * eqpLevel);\n             }\n+        } else {\n+            return 14000;\n         }\n-        return createCache.get(toCreate);\n     }\n+    \n+    private static double getMakerReagentFee(int itemid, int reagentLevel) {\n+        if(ServerConstants.USE_MAKER_FEE_HEURISTICS) {\n+            EquipType et = EquipType.getEquipTypeById(itemid);\n+            int eqpLevel = ii.getEquipStats(itemid).get(\"reqLevel\");\n+\n+            switch(et) {\n+                case CAP:\n+                    return 5592.01613 * Math.exp(0.02914576018 * eqpLevel) * reagentLevel;\n+\n+                case LONGCOAT:\n+                    return 3405.23441 * Math.exp(0.03413001038 * eqpLevel) * reagentLevel;\n+\n+                case SHOES:\n+                    return 2115.697484 * Math.exp(0.0354881705 * eqpLevel) * reagentLevel;\n+\n+                case GLOVES:\n+                    return 4684.040894 * Math.exp(0.03166500585 * eqpLevel) * reagentLevel;\n+\n+                case COAT:\n+                    return 2955.89017 * Math.exp(0.0339948456 * eqpLevel) * reagentLevel;\n+\n+                case PANTS:\n+                    return 1774.722181 * Math.exp(0.03854321409 * eqpLevel) * reagentLevel;\n+\n+                case SHIELD:\n+                    return 12014.11296 * Math.exp(0.02185471162 * eqpLevel) * reagentLevel;\n \n+                default:    // weapons\n+                    return 4538.650247 * Math.exp(0.0371980303 * eqpLevel) * reagentLevel;\n+            }\n+        } else {\n+            return 8000 * reagentLevel;\n+        }\n+    }\n+    \n     public static class MakerItemCreateEntry {\n         private int reqLevel, reqMakerLevel;\n-        private int cost;\n-        private List<Pair<Integer, Integer>> reqItems = new ArrayList<Pair<Integer, Integer>>(); // itemId / amount\n+        private double cost;\n+        private int reqCost;\n+        private List<Pair<Integer, Integer>> reqItems = new ArrayList<>(); // itemId / amount\n         private int toGive;\n \n-        private MakerItemCreateEntry(int cost, int reqLevel, int reqMakerLevel, int toGive) {\n+        public MakerItemCreateEntry(int cost, int reqLevel, int reqMakerLevel, int toGive) {\n             this.cost = cost;\n             this.reqLevel = reqLevel;\n             this.reqMakerLevel = reqMakerLevel;\n             this.toGive = toGive;\n         }\n+        \n+        public MakerItemCreateEntry(MakerItemCreateEntry mi) {\n+            this.cost = mi.cost;\n+            this.reqLevel = mi.reqLevel;\n+            this.reqMakerLevel = mi.reqMakerLevel;\n+            this.toGive = mi.toGive;\n+            \n+            for(Pair<Integer, Integer> p : mi.reqItems) {\n+                reqItems.add(p);\n+            }\n+        }\n \n         public int getRewardAmount() {\n             return toGive;\n@@ -108,11 +180,20 @@ public int getReqSkillLevel() {\n         }\n \n         public int getCost() {\n-            return cost;\n+            return reqCost;\n+        }\n+        \n+        public void addCost(double amount) {\n+            cost += amount;\n         }\n \n         protected void addReqItem(int itemId, int amount) {\n             reqItems.add(new Pair<>(itemId, amount));\n         }\n+        \n+        public void trimCost() {\n+            reqCost = (int) (cost / 1000);\n+            reqCost *= 1000;\n+        }\n     }\n }"}, {"sha": "5b128fc0be0b5adae7458383a0712c848540657a", "filename": "src/server/MapleInventoryManipulator.java", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/server/MapleInventoryManipulator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/server/MapleInventoryManipulator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleInventoryManipulator.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -410,7 +410,7 @@ public static void equip(MapleClient c, short src, short dst) {\n         }\n         if (dst == -6) { // unequip the overall\n             Item top = c.getPlayer().getInventory(MapleInventoryType.EQUIPPED).getItem((short) -5);\n-            if (top != null && isOverall(top.getItemId())) {\n+            if (top != null && ItemConstants.isOverall(top.getItemId())) {\n                 if (c.getPlayer().getInventory(MapleInventoryType.EQUIP).isFull()) {\n                     c.announce(MaplePacketCreator.getInventoryFull());\n                     c.announce(MaplePacketCreator.getShowInventoryFull());\n@@ -420,7 +420,7 @@ public static void equip(MapleClient c, short src, short dst) {\n             }\n         } else if (dst == -5) {\n             final Item bottom = c.getPlayer().getInventory(MapleInventoryType.EQUIPPED).getItem((short) -6);\n-            if (bottom != null && isOverall(source.getItemId())) {\n+            if (bottom != null && ItemConstants.isOverall(source.getItemId())) {\n                 if (c.getPlayer().getInventory(MapleInventoryType.EQUIP).isFull()) {\n                     c.announce(MaplePacketCreator.getInventoryFull());\n                     c.announce(MaplePacketCreator.getShowInventoryFull());\n@@ -477,7 +477,7 @@ public static void equip(MapleClient c, short src, short dst) {\n             target.setPosition(src);\n             c.getPlayer().getInventory(MapleInventoryType.EQUIP).addFromDB(target);\n         }\n-        if (c.getPlayer().getBuffedValue(MapleBuffStat.BOOSTER) != null && isWeapon(source.getItemId())) {\n+        if (c.getPlayer().getBuffedValue(MapleBuffStat.BOOSTER) != null && ItemConstants.isWeapon(source.getItemId())) {\n             c.getPlayer().cancelBuffStats(MapleBuffStat.BOOSTER);\n         }\n         \n@@ -590,12 +590,4 @@ public static void drop(MapleClient c, MapleInventoryType type, short src, short\n     private static boolean isDroppedItemRestricted(Item it) {\n         return ServerConstants.USE_ERASE_UNTRADEABLE_DROP && ((it.getFlag() & ItemConstants.UNTRADEABLE) == ItemConstants.UNTRADEABLE);\n     }\n-    \n-    private static boolean isOverall(int itemId) {\n-        return itemId / 10000 == 105;\n-    }\n-\n-    private static boolean isWeapon(int itemId) {\n-        return itemId >= 1302000 && itemId < 1492024;\n-    }\n }"}, {"sha": "6c8c6935a334cfcfaa97fab6648462b4c5fef868", "filename": "src/server/MapleItemInformationProvider.java", "status": "modified", "additions": 415, "deletions": 108, "changes": 523, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/server/MapleItemInformationProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/server/MapleItemInformationProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleItemInformationProvider.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -66,7 +66,9 @@\n import constants.skills.Gunslinger;\n import constants.skills.NightWalker;\n import java.sql.Connection;\n+import server.MakerItemFactory.MakerItemCreateEntry;\n import server.life.MapleMonsterInformationProvider;\n+import server.life.MapleLifeFactory;\n \n /**\n  *\n@@ -111,6 +113,10 @@\n     protected Map<Integer, Boolean> isQuestItemCache = new HashMap<>();\n     protected Map<Integer, String> equipmentSlotCache = new HashMap<>();\n     protected Map<Integer, Boolean> noCancelMouseCache = new HashMap<>();\n+    protected Map<Integer, Integer> mobCrystalMakerCache = new HashMap<>();\n+    protected Map<Integer, Pair<String, Integer>> statUpgradeMakerCache = new HashMap<>();\n+    protected Map<Integer, MakerItemFactory.MakerItemCreateEntry> makerItemCache = new HashMap<>();\n+\n \n     private MapleItemInformationProvider() {\n         loadCardIdData();\n@@ -575,11 +581,77 @@ private static short getShortMaxIfOverflow(int value) {\n         return (short)Math.min(Short.MAX_VALUE, value);\n     }\n     \n-    private static short chscrollRandomizedStat() {\n-        return (short) Randomizer.rand(-ServerConstants.CHSCROLL_STAT_RANGE, ServerConstants.CHSCROLL_STAT_RANGE);\n+    private static short chscrollRandomizedStat(int range) {\n+        return (short) Randomizer.rand(-range, range);\n+    }\n+    \n+    public void scrollOptionEquipWithChaos(Equip nEquip, int range, boolean option) {\n+        // option: watk, matk, wdef, mdef, spd, jump, hp, mp\n+        //   stat: dex, luk, str, int, avoid, acc\n+        \n+        if(!option) {\n+            if (nEquip.getStr() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setStr(getMaximumShortMaxIfOverflow(nEquip.getStr(), (nEquip.getStr() + chscrollRandomizedStat(range))));\n+                else nEquip.setStr(getMaximumShortMaxIfOverflow(0, (nEquip.getStr() + chscrollRandomizedStat(range))));\n+            }\n+            if (nEquip.getDex() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setDex(getMaximumShortMaxIfOverflow(nEquip.getDex(), (nEquip.getDex() + chscrollRandomizedStat(range))));\n+                else nEquip.setDex(getMaximumShortMaxIfOverflow(0, (nEquip.getDex() + chscrollRandomizedStat(range))));\n+            }\n+            if (nEquip.getInt() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setInt(getMaximumShortMaxIfOverflow(nEquip.getInt(), (nEquip.getInt() + chscrollRandomizedStat(range))));\n+                else nEquip.setInt(getMaximumShortMaxIfOverflow(0, (nEquip.getInt() + chscrollRandomizedStat(range))));\n+            }\n+            if (nEquip.getLuk() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setLuk(getMaximumShortMaxIfOverflow(nEquip.getLuk(), (nEquip.getLuk() + chscrollRandomizedStat(range))));\n+                else nEquip.setLuk(getMaximumShortMaxIfOverflow(0, (nEquip.getLuk() + chscrollRandomizedStat(range))));\n+            }\n+            if (nEquip.getAcc() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setAcc(getMaximumShortMaxIfOverflow(nEquip.getAcc(), (nEquip.getAcc() + chscrollRandomizedStat(range))));\n+                else nEquip.setAcc(getMaximumShortMaxIfOverflow(0, (nEquip.getAcc() + chscrollRandomizedStat(range))));\n+            }\n+            if (nEquip.getAvoid() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setAvoid(getMaximumShortMaxIfOverflow(nEquip.getAvoid(), (nEquip.getAvoid() + chscrollRandomizedStat(range))));\n+                else nEquip.setAvoid(getMaximumShortMaxIfOverflow(0, (nEquip.getAvoid() + chscrollRandomizedStat(range))));\n+            }\n+        } else {\n+            if (nEquip.getWatk() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setWatk(getMaximumShortMaxIfOverflow(nEquip.getWatk(), (nEquip.getWatk() + chscrollRandomizedStat(range))));\n+                else nEquip.setWatk(getMaximumShortMaxIfOverflow(0, (nEquip.getWatk() + chscrollRandomizedStat(range))));\n+            }\n+            if (nEquip.getWdef() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setWdef(getMaximumShortMaxIfOverflow(nEquip.getWdef(), (nEquip.getWdef() + chscrollRandomizedStat(range))));\n+                else nEquip.setWdef(getMaximumShortMaxIfOverflow(0, (nEquip.getWdef() + chscrollRandomizedStat(range))));\n+            }\n+            if (nEquip.getMatk() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setMatk(getMaximumShortMaxIfOverflow(nEquip.getMatk(), (nEquip.getMatk() + chscrollRandomizedStat(range))));\n+                else nEquip.setMatk(getMaximumShortMaxIfOverflow(0, (nEquip.getMatk() + chscrollRandomizedStat(range))));\n+            }\n+            if (nEquip.getMdef() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setMdef(getMaximumShortMaxIfOverflow(nEquip.getMdef(), (nEquip.getMdef() + chscrollRandomizedStat(range))));\n+                else nEquip.setMdef(getMaximumShortMaxIfOverflow(0, (nEquip.getMdef() + chscrollRandomizedStat(range))));\n+            }\n+\n+            if (nEquip.getSpeed() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setSpeed(getMaximumShortMaxIfOverflow(nEquip.getSpeed(), (nEquip.getSpeed() + chscrollRandomizedStat(range))));\n+                else nEquip.setSpeed(getMaximumShortMaxIfOverflow(0, (nEquip.getSpeed() + chscrollRandomizedStat(range))));\n+            }\n+            if (nEquip.getJump() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setJump(getMaximumShortMaxIfOverflow(nEquip.getJump(), (nEquip.getJump() + chscrollRandomizedStat(range))));\n+                else nEquip.setJump(getMaximumShortMaxIfOverflow(0, (nEquip.getJump() + chscrollRandomizedStat(range))));\n+            }\n+            if (nEquip.getHp() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setHp(getMaximumShortMaxIfOverflow(nEquip.getHp(), (nEquip.getHp() + chscrollRandomizedStat(range))));\n+                else nEquip.setHp(getMaximumShortMaxIfOverflow(0, (nEquip.getHp() + chscrollRandomizedStat(range))));\n+            }\n+            if (nEquip.getMp() > 0) {\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setMp(getMaximumShortMaxIfOverflow(nEquip.getMp(), (nEquip.getMp() + chscrollRandomizedStat(range))));\n+                else nEquip.setMp(getMaximumShortMaxIfOverflow(0, (nEquip.getMp() + chscrollRandomizedStat(range))));\n+            }\n+        }\n     }\n     \n-    private void scrollEquipWithChaos(Equip nEquip) {\n+    private void scrollEquipWithChaos(Equip nEquip, int range) {\n         if(ServerConstants.SCROLL_CHANCE_RATE > 0) {\n             int temp;\n             short curStr, curDex, curInt, curLuk, curWatk, curWdef, curMatk, curMdef, curAcc, curAvoid, curSpeed, curJump, curHp, curMp;\n@@ -618,99 +690,99 @@ private void scrollEquipWithChaos(Equip nEquip) {\n             \n             for(int i = 0; i < ServerConstants.SCROLL_CHANCE_RATE; i++) {\n                 if (nEquip.getStr() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curStr + chscrollRandomizedStat();\n-                    else temp = nEquip.getStr() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curStr + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getStr() + chscrollRandomizedStat(range);\n                     \n                     curStr = getMaximumShortMaxIfOverflow(temp, curStr);\n                 }\n                 \n                 if (nEquip.getDex() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curDex + chscrollRandomizedStat();\n-                    else temp = nEquip.getDex() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curDex + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getDex() + chscrollRandomizedStat(range);\n                     \n                     curDex = getMaximumShortMaxIfOverflow(temp, curDex);\n                 }\n                 \n                 if (nEquip.getInt() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curInt + chscrollRandomizedStat();\n-                    else temp = nEquip.getInt() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curInt + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getInt() + chscrollRandomizedStat(range);\n                     \n                     curInt = getMaximumShortMaxIfOverflow(temp, curInt);\n                 }\n                 \n                 if (nEquip.getLuk() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curLuk + chscrollRandomizedStat();\n-                    else temp = nEquip.getLuk() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curLuk + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getLuk() + chscrollRandomizedStat(range);\n                     \n                     curLuk = getMaximumShortMaxIfOverflow(temp, curLuk);\n                 }\n                 \n                 if (nEquip.getWatk() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curWatk + chscrollRandomizedStat();\n-                    else temp = nEquip.getWatk() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curWatk + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getWatk() + chscrollRandomizedStat(range);\n                     \n                     curWatk = getMaximumShortMaxIfOverflow(temp, curWatk);\n                 }\n                 \n                 if (nEquip.getWdef() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curWdef + chscrollRandomizedStat();\n-                    else temp = nEquip.getWdef() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curWdef + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getWdef() + chscrollRandomizedStat(range);\n                     \n                     curWdef = getMaximumShortMaxIfOverflow(temp, curWdef);\n                 }\n                 \n                 if (nEquip.getMatk() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curMatk + chscrollRandomizedStat();\n-                    else temp = nEquip.getMatk() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curMatk + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getMatk() + chscrollRandomizedStat(range);\n                     \n                     curMatk = getMaximumShortMaxIfOverflow(temp, curMatk);\n                 }\n                 \n                 if (nEquip.getMdef() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curMdef + chscrollRandomizedStat();\n-                    else temp = nEquip.getMdef() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curMdef + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getMdef() + chscrollRandomizedStat(range);\n                     \n                     curMdef = getMaximumShortMaxIfOverflow(temp, curMdef);\n                 }\n                 \n                 if (nEquip.getAcc() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curAcc + chscrollRandomizedStat();\n-                    else temp = nEquip.getAcc() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curAcc + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getAcc() + chscrollRandomizedStat(range);\n                     \n                     curAcc = getMaximumShortMaxIfOverflow(temp, curAcc);\n                 }\n                 \n                 if (nEquip.getAvoid() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curAvoid + chscrollRandomizedStat();\n-                    else temp = nEquip.getAvoid() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curAvoid + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getAvoid() + chscrollRandomizedStat(range);\n                     \n                     curAvoid = getMaximumShortMaxIfOverflow(temp, curAvoid);\n                 }\n                 \n                 if (nEquip.getSpeed() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curSpeed + chscrollRandomizedStat();\n-                    else temp = nEquip.getSpeed() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curSpeed + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getSpeed() + chscrollRandomizedStat(range);\n                     \n                     curSpeed = getMaximumShortMaxIfOverflow(temp, curSpeed);\n                 }\n                 \n                 if (nEquip.getJump() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curJump + chscrollRandomizedStat();\n-                    else temp = nEquip.getJump() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curJump + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getJump() + chscrollRandomizedStat(range);\n                     \n                     curJump = getMaximumShortMaxIfOverflow(temp, curJump);\n                 }\n                 \n                 if (nEquip.getHp() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curHp + chscrollRandomizedStat();\n-                    else temp = nEquip.getHp() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curHp + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getHp() + chscrollRandomizedStat(range);\n                     \n                     curHp = getMaximumShortMaxIfOverflow(temp, curHp);\n                 }\n                 \n                 if (nEquip.getMp() > 0) {\n-                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curMp + chscrollRandomizedStat();\n-                    else temp = nEquip.getMp() + chscrollRandomizedStat();\n+                    if(ServerConstants.USE_ENHANCED_CHSCROLL) temp = curMp + chscrollRandomizedStat(range);\n+                    else temp = nEquip.getMp() + chscrollRandomizedStat(range);\n                     \n                     curMp = getMaximumShortMaxIfOverflow(temp, curMp);\n                 }\n@@ -734,60 +806,60 @@ private void scrollEquipWithChaos(Equip nEquip) {\n \n         else {\n             if (nEquip.getStr() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setStr(getMaximumShortMaxIfOverflow(nEquip.getStr(), (nEquip.getStr() + chscrollRandomizedStat())));\n-                else nEquip.setStr(getMaximumShortMaxIfOverflow(0, (nEquip.getStr() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setStr(getMaximumShortMaxIfOverflow(nEquip.getStr(), (nEquip.getStr() + chscrollRandomizedStat(range))));\n+                else nEquip.setStr(getMaximumShortMaxIfOverflow(0, (nEquip.getStr() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getDex() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setDex(getMaximumShortMaxIfOverflow(nEquip.getDex(), (nEquip.getDex() + chscrollRandomizedStat())));\n-                else nEquip.setDex(getMaximumShortMaxIfOverflow(0, (nEquip.getDex() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setDex(getMaximumShortMaxIfOverflow(nEquip.getDex(), (nEquip.getDex() + chscrollRandomizedStat(range))));\n+                else nEquip.setDex(getMaximumShortMaxIfOverflow(0, (nEquip.getDex() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getInt() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setInt(getMaximumShortMaxIfOverflow(nEquip.getInt(), (nEquip.getInt() + chscrollRandomizedStat())));\n-                else nEquip.setInt(getMaximumShortMaxIfOverflow(0, (nEquip.getInt() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setInt(getMaximumShortMaxIfOverflow(nEquip.getInt(), (nEquip.getInt() + chscrollRandomizedStat(range))));\n+                else nEquip.setInt(getMaximumShortMaxIfOverflow(0, (nEquip.getInt() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getLuk() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setLuk(getMaximumShortMaxIfOverflow(nEquip.getLuk(), (nEquip.getLuk() + chscrollRandomizedStat())));\n-                else nEquip.setLuk(getMaximumShortMaxIfOverflow(0, (nEquip.getLuk() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setLuk(getMaximumShortMaxIfOverflow(nEquip.getLuk(), (nEquip.getLuk() + chscrollRandomizedStat(range))));\n+                else nEquip.setLuk(getMaximumShortMaxIfOverflow(0, (nEquip.getLuk() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getWatk() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setWatk(getMaximumShortMaxIfOverflow(nEquip.getWatk(), (nEquip.getWatk() + chscrollRandomizedStat())));\n-                else nEquip.setWatk(getMaximumShortMaxIfOverflow(0, (nEquip.getWatk() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setWatk(getMaximumShortMaxIfOverflow(nEquip.getWatk(), (nEquip.getWatk() + chscrollRandomizedStat(range))));\n+                else nEquip.setWatk(getMaximumShortMaxIfOverflow(0, (nEquip.getWatk() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getWdef() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setWdef(getMaximumShortMaxIfOverflow(nEquip.getWdef(), (nEquip.getWdef() + chscrollRandomizedStat())));\n-                else nEquip.setWdef(getMaximumShortMaxIfOverflow(0, (nEquip.getWdef() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setWdef(getMaximumShortMaxIfOverflow(nEquip.getWdef(), (nEquip.getWdef() + chscrollRandomizedStat(range))));\n+                else nEquip.setWdef(getMaximumShortMaxIfOverflow(0, (nEquip.getWdef() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getMatk() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setMatk(getMaximumShortMaxIfOverflow(nEquip.getMatk(), (nEquip.getMatk() + chscrollRandomizedStat())));\n-                else nEquip.setMatk(getMaximumShortMaxIfOverflow(0, (nEquip.getMatk() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setMatk(getMaximumShortMaxIfOverflow(nEquip.getMatk(), (nEquip.getMatk() + chscrollRandomizedStat(range))));\n+                else nEquip.setMatk(getMaximumShortMaxIfOverflow(0, (nEquip.getMatk() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getMdef() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setMdef(getMaximumShortMaxIfOverflow(nEquip.getMdef(), (nEquip.getMdef() + chscrollRandomizedStat())));\n-                else nEquip.setMdef(getMaximumShortMaxIfOverflow(0, (nEquip.getMdef() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setMdef(getMaximumShortMaxIfOverflow(nEquip.getMdef(), (nEquip.getMdef() + chscrollRandomizedStat(range))));\n+                else nEquip.setMdef(getMaximumShortMaxIfOverflow(0, (nEquip.getMdef() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getAcc() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setAcc(getMaximumShortMaxIfOverflow(nEquip.getAcc(), (nEquip.getAcc() + chscrollRandomizedStat())));\n-                else nEquip.setAcc(getMaximumShortMaxIfOverflow(0, (nEquip.getAcc() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setAcc(getMaximumShortMaxIfOverflow(nEquip.getAcc(), (nEquip.getAcc() + chscrollRandomizedStat(range))));\n+                else nEquip.setAcc(getMaximumShortMaxIfOverflow(0, (nEquip.getAcc() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getAvoid() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setAvoid(getMaximumShortMaxIfOverflow(nEquip.getAvoid(), (nEquip.getAvoid() + chscrollRandomizedStat())));\n-                else nEquip.setAvoid(getMaximumShortMaxIfOverflow(0, (nEquip.getAvoid() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setAvoid(getMaximumShortMaxIfOverflow(nEquip.getAvoid(), (nEquip.getAvoid() + chscrollRandomizedStat(range))));\n+                else nEquip.setAvoid(getMaximumShortMaxIfOverflow(0, (nEquip.getAvoid() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getSpeed() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setSpeed(getMaximumShortMaxIfOverflow(nEquip.getSpeed(), (nEquip.getSpeed() + chscrollRandomizedStat())));\n-                else nEquip.setSpeed(getMaximumShortMaxIfOverflow(0, (nEquip.getSpeed() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setSpeed(getMaximumShortMaxIfOverflow(nEquip.getSpeed(), (nEquip.getSpeed() + chscrollRandomizedStat(range))));\n+                else nEquip.setSpeed(getMaximumShortMaxIfOverflow(0, (nEquip.getSpeed() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getJump() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setJump(getMaximumShortMaxIfOverflow(nEquip.getJump(), (nEquip.getJump() + chscrollRandomizedStat())));\n-                else nEquip.setJump(getMaximumShortMaxIfOverflow(0, (nEquip.getJump() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setJump(getMaximumShortMaxIfOverflow(nEquip.getJump(), (nEquip.getJump() + chscrollRandomizedStat(range))));\n+                else nEquip.setJump(getMaximumShortMaxIfOverflow(0, (nEquip.getJump() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getHp() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setHp(getMaximumShortMaxIfOverflow(nEquip.getHp(), (nEquip.getHp() + chscrollRandomizedStat())));\n-                else nEquip.setHp(getMaximumShortMaxIfOverflow(0, (nEquip.getHp() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setHp(getMaximumShortMaxIfOverflow(nEquip.getHp(), (nEquip.getHp() + chscrollRandomizedStat(range))));\n+                else nEquip.setHp(getMaximumShortMaxIfOverflow(0, (nEquip.getHp() + chscrollRandomizedStat(range))));\n             }\n             if (nEquip.getMp() > 0) {\n-                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setMp(getMaximumShortMaxIfOverflow(nEquip.getMp(), (nEquip.getMp() + chscrollRandomizedStat())));\n-                else nEquip.setMp(getMaximumShortMaxIfOverflow(0, (nEquip.getMp() + chscrollRandomizedStat())));\n+                if(ServerConstants.USE_ENHANCED_CHSCROLL) nEquip.setMp(getMaximumShortMaxIfOverflow(nEquip.getMp(), (nEquip.getMp() + chscrollRandomizedStat(range))));\n+                else nEquip.setMp(getMaximumShortMaxIfOverflow(0, (nEquip.getMp() + chscrollRandomizedStat(range))));\n             }\n         }\n     }\n@@ -831,58 +903,11 @@ public Item scrollEquipWithId(Item equip, int scrollId, boolean usingWhiteScroll\n                         case 2049100:\n                         case 2049101:\n                         case 2049102:\n-                            scrollEquipWithChaos(nEquip);\n+                            scrollEquipWithChaos(nEquip, ServerConstants.CHSCROLL_STAT_RANGE);\n                             break;\n                             \n                         default:\n-                            for (Entry<String, Integer> stat : stats.entrySet()) {\n-                                switch (stat.getKey()) {\n-                                    case \"STR\":\n-                                        nEquip.setStr(getShortMaxIfOverflow(nEquip.getStr() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"DEX\":\n-                                        nEquip.setDex(getShortMaxIfOverflow(nEquip.getDex() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"INT\":\n-                                        nEquip.setInt(getShortMaxIfOverflow(nEquip.getInt() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"LUK\":\n-                                        nEquip.setLuk(getShortMaxIfOverflow(nEquip.getLuk() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"PAD\":\n-                                        nEquip.setWatk(getShortMaxIfOverflow(nEquip.getWatk() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"PDD\":\n-                                        nEquip.setWdef(getShortMaxIfOverflow(nEquip.getWdef() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"MAD\":\n-                                        nEquip.setMatk(getShortMaxIfOverflow(nEquip.getMatk() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"MDD\":\n-                                        nEquip.setMdef(getShortMaxIfOverflow(nEquip.getMdef() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"ACC\":\n-                                        nEquip.setAcc(getShortMaxIfOverflow(nEquip.getAcc() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"EVA\":\n-                                        nEquip.setAvoid(getShortMaxIfOverflow(nEquip.getAvoid() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"Speed\":\n-                                        nEquip.setSpeed(getShortMaxIfOverflow(nEquip.getSpeed() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"Jump\":\n-                                        nEquip.setJump(getShortMaxIfOverflow(nEquip.getJump() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"MHP\":\n-                                        nEquip.setHp(getShortMaxIfOverflow(nEquip.getHp() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"MMP\":\n-                                        nEquip.setMp(getShortMaxIfOverflow(nEquip.getMp() + stat.getValue().intValue()));\n-                                        break;\n-                                    case \"afterImage\":\n-                                        break;\n-                                }\n-                            }\n+                            improveEquipStats(nEquip, stats);\n                             break;\n                     }\n                     if (!ItemConstants.isCleanSlate(scrollId)) {\n@@ -903,6 +928,57 @@ public Item scrollEquipWithId(Item equip, int scrollId, boolean usingWhiteScroll\n         }\n         return equip;\n     }\n+    \n+    public static void improveEquipStats(Equip nEquip, Map<String, Integer> stats) {\n+        for (Entry<String, Integer> stat : stats.entrySet()) {\n+            switch (stat.getKey()) {\n+                case \"STR\":\n+                    nEquip.setStr(getShortMaxIfOverflow(nEquip.getStr() + stat.getValue().intValue()));\n+                    break;\n+                case \"DEX\":\n+                    nEquip.setDex(getShortMaxIfOverflow(nEquip.getDex() + stat.getValue().intValue()));\n+                    break;\n+                case \"INT\":\n+                    nEquip.setInt(getShortMaxIfOverflow(nEquip.getInt() + stat.getValue().intValue()));\n+                    break;\n+                case \"LUK\":\n+                    nEquip.setLuk(getShortMaxIfOverflow(nEquip.getLuk() + stat.getValue().intValue()));\n+                    break;\n+                case \"PAD\":\n+                    nEquip.setWatk(getShortMaxIfOverflow(nEquip.getWatk() + stat.getValue().intValue()));\n+                    break;\n+                case \"PDD\":\n+                    nEquip.setWdef(getShortMaxIfOverflow(nEquip.getWdef() + stat.getValue().intValue()));\n+                    break;\n+                case \"MAD\":\n+                    nEquip.setMatk(getShortMaxIfOverflow(nEquip.getMatk() + stat.getValue().intValue()));\n+                    break;\n+                case \"MDD\":\n+                    nEquip.setMdef(getShortMaxIfOverflow(nEquip.getMdef() + stat.getValue().intValue()));\n+                    break;\n+                case \"ACC\":\n+                    nEquip.setAcc(getShortMaxIfOverflow(nEquip.getAcc() + stat.getValue().intValue()));\n+                    break;\n+                case \"EVA\":\n+                    nEquip.setAvoid(getShortMaxIfOverflow(nEquip.getAvoid() + stat.getValue().intValue()));\n+                    break;\n+                case \"Speed\":\n+                    nEquip.setSpeed(getShortMaxIfOverflow(nEquip.getSpeed() + stat.getValue().intValue()));\n+                    break;\n+                case \"Jump\":\n+                    nEquip.setJump(getShortMaxIfOverflow(nEquip.getJump() + stat.getValue().intValue()));\n+                    break;\n+                case \"MHP\":\n+                    nEquip.setHp(getShortMaxIfOverflow(nEquip.getHp() + stat.getValue().intValue()));\n+                    break;\n+                case \"MMP\":\n+                    nEquip.setMp(getShortMaxIfOverflow(nEquip.getMp() + stat.getValue().intValue()));\n+                    break;\n+                case \"afterImage\":\n+                    break;\n+            }\n+        }\n+    }\n \n     public Item getEquipById(int equipId) {\n         return getEquipById(equipId, -1);\n@@ -986,6 +1062,31 @@ public Equip randomizeStats(Equip equip) {\n         return equip;\n     }\n \n+    private static short getRandUpgradedStat(short defaultValue, int maxRange) {\n+        if (defaultValue == 0) {\n+            return 0;\n+        }\n+        int lMaxRange = maxRange;\n+        return (short) (defaultValue + Math.floor(Randomizer.nextDouble() * (lMaxRange + 1)));\n+    }\n+    \n+    public Equip randomizeUpgradeStats(Equip equip) {\n+        equip.setStr(getRandUpgradedStat(equip.getStr(), 2));\n+        equip.setDex(getRandUpgradedStat(equip.getDex(), 2));\n+        equip.setInt(getRandUpgradedStat(equip.getInt(), 2));\n+        equip.setLuk(getRandUpgradedStat(equip.getLuk(), 2));\n+        equip.setMatk(getRandUpgradedStat(equip.getMatk(), 2));\n+        equip.setWatk(getRandUpgradedStat(equip.getWatk(), 2));\n+        equip.setAcc(getRandUpgradedStat(equip.getAcc(), 2));\n+        equip.setAvoid(getRandUpgradedStat(equip.getAvoid(), 2));\n+        equip.setJump(getRandUpgradedStat(equip.getJump(), 2));\n+        equip.setWdef(getRandUpgradedStat(equip.getWdef(), 5));\n+        equip.setMdef(getRandUpgradedStat(equip.getMdef(), 5));\n+        equip.setHp(getRandUpgradedStat(equip.getHp(), 5));\n+        equip.setMp(getRandUpgradedStat(equip.getMp(), 5));\n+        return equip;\n+    }\n+    \n     public MapleStatEffect getItemEffect(int itemId) {\n         MapleStatEffect ret = itemEffects.get(Integer.valueOf(itemId));\n         if (ret == null) {\n@@ -1503,6 +1604,212 @@ public boolean canWearEquipment(MapleCharacter chr, Equip equip, int dst) {\n         return list;\n     }\n     \n+    private static int getCrystalForLevel(int level) {\n+        int range = (level - 1) / 10;\n+        \n+        if(range < 5) {\n+            return 4260000;\n+        } else if(range > 11) {\n+            return 4260008;\n+        } else {\n+            switch(range) {\n+                case 5:\n+                    return 4260001;\n+\n+                case 6:\n+                    return 4260002;\n+\n+                case 7:\n+                    return 4260003;\n+\n+                case 8:\n+                    return 4260004;\n+\n+                case 9:\n+                    return 4260005;\n+\n+                case 10:\n+                    return 4260006;\n+\n+                default:\n+                    return 4260007;\n+            }\n+        }\n+    }\n+    \n+    public Pair<String, Integer> getMakerReagentStatUpgrade(int itemId) {\n+        try {\n+            Pair<String, Integer> statUpgd = statUpgradeMakerCache.get(itemId);\n+            if(statUpgd != null) {\n+                return statUpgd;\n+            } else if(statUpgradeMakerCache.containsKey(itemId)) {\n+                return null;\n+            }\n+            \n+            Connection con = DatabaseConnection.getConnection();\n+            PreparedStatement ps = con.prepareStatement(\"SELECT stat, value FROM makerreagentdata WHERE itemid = ?\");\n+            ps.setInt(1, itemId);\n+            ResultSet rs = ps.executeQuery();\n+            if(rs.next()) {\n+                String statType = rs.getString(\"stat\");\n+                int statGain = rs.getInt(\"value\");\n+                \n+                statUpgd = new Pair<>(statType, statGain);\n+            }\n+            rs.close();\n+            ps.close();\n+            con.close();\n+            \n+            statUpgradeMakerCache.put(itemId, statUpgd);\n+            return statUpgd;\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            return null;\n+        }\n+    }\n+    \n+    public int getMakerCrystalFromLeftover(Integer leftoverId) {\n+        try {\n+            Integer itemid = mobCrystalMakerCache.get(leftoverId);\n+            if(itemid != null) {\n+                return itemid;\n+            }\n+            \n+            itemid = -1;\n+            \n+            Connection con = DatabaseConnection.getConnection();\n+            PreparedStatement ps = con.prepareStatement(\"SELECT dropperid FROM drop_data WHERE itemid = ? ORDER BY dropperid;\");\n+            ps.setInt(1, leftoverId);\n+            ResultSet rs = ps.executeQuery();\n+            if(rs.next()) {\n+                int dropperid = rs.getInt(\"dropperid\");\n+                itemid = getCrystalForLevel(MapleLifeFactory.getMonsterLevel(dropperid) - 1);\n+            }\n+            rs.close();\n+            ps.close();\n+            con.close();\n+            \n+            mobCrystalMakerCache.put(leftoverId, itemid);\n+            return itemid;\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        \n+        return -1;\n+    }\n+    \n+    public MakerItemCreateEntry getMakerItemEntry(int toCreate) {\n+        MakerItemCreateEntry makerEntry;\n+        \n+        if ((makerEntry = makerItemCache.get(toCreate)) != null) {\n+            return new MakerItemCreateEntry(makerEntry);\n+        } else {\n+            try {\n+                Connection con = DatabaseConnection.getConnection();\n+                PreparedStatement ps = con.prepareStatement(\"SELECT req_level, req_maker_level, req_meso, quantity FROM makercreatedata WHERE itemid = ?\");\n+                ps.setInt(1, toCreate);\n+                ResultSet rs = ps.executeQuery();\n+                int reqLevel = 0;\n+                int reqMakerLevel = 0;\n+                int cost = 0;\n+                int toGive = 0;\n+                if (rs.next()) {\n+                    reqLevel = rs.getInt(\"req_level\");\n+                    reqMakerLevel = rs.getInt(\"req_maker_level\");\n+                    cost = rs.getInt(\"req_meso\");\n+                    toGive = rs.getInt(\"quantity\");\n+                }\n+                ps.close();\n+                rs.close();\n+                makerEntry = new MakerItemCreateEntry(cost, reqLevel, reqMakerLevel, toGive);\n+                ps = con.prepareStatement(\"SELECT req_item, count FROM makerrecipedata WHERE itemid = ?\");\n+                ps.setInt(1, toCreate);\n+                rs = ps.executeQuery();\n+                while (rs.next()) {\n+                    makerEntry.addReqItem(rs.getInt(\"req_item\"), rs.getInt(\"count\"));\n+                }\n+                rs.close();\n+                ps.close();\n+                con.close();\n+                makerItemCache.put(toCreate, new MakerItemCreateEntry(makerEntry));\n+            } catch (SQLException sqle) {\n+                sqle.printStackTrace();\n+                makerEntry = null;\n+            }\n+        }\n+        \n+        return makerEntry;\n+    }\n+    \n+    public int getMakerCrystalFromEquip(Integer equipId) {\n+        try {\n+            Map<String, Integer> stats = getEquipStats(equipId);\n+            return getCrystalForLevel(stats.get(\"reqLevel\"));\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        \n+        return -1;\n+    }\n+    \n+    public int getMakerStimulantFromEquip(Integer equipId) {\n+        try {\n+            return getCrystalForLevel(getEquipStats(equipId).get(\"reqLevel\"));\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        \n+        return -1;\n+    }\n+    \n+    public int getMakerDisassembledQuantity(Integer itemId) {\n+        int avail = 0;\n+        Connection con;\n+        try {\n+            con = DatabaseConnection.getConnection();\n+            PreparedStatement ps = con.prepareStatement(\"SELECT count FROM makerrecipedata WHERE itemid = ? AND req_item >= 4260000 AND req_item <= 4260008 ORDER BY count DESC\");\n+            ps.setInt(1, itemId);\n+            ResultSet rs = ps.executeQuery();\n+            \n+            if(rs.next()) {\n+                avail = (int) Math.ceil(rs.getInt(\"count\") / 2);   // return to the player half of the crystals needed\n+            }\n+            \n+            rs.close();\n+            ps.close();\n+            con.close();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        \n+        return avail;\n+    }\n+    \n+    public int getMakerDisassembledFee(Integer itemId) {\n+        int fee = -1;\n+        Connection con;\n+        try {\n+            con = DatabaseConnection.getConnection();\n+            PreparedStatement ps = con.prepareStatement(\"SELECT req_meso FROM makercreatedata WHERE itemid = ?\");\n+            ps.setInt(1, itemId);\n+            ResultSet rs = ps.executeQuery();\n+            \n+            if(rs.next()) {   // cost is 13.6363~ % of the original value trimmed by 1000.\n+                float val = (float) (rs.getInt(\"req_meso\") * 0.13636363636364);\n+                fee = (int) (val / 1000);\n+                fee *= 1000;\n+            }\n+            \n+            rs.close();\n+            ps.close();\n+            con.close();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        \n+        return fee;\n+    }\n+    \n     public Set<String> getWhoDrops(Integer itemId) {\n         Set<String> list = new HashSet<>();\n         Connection con = null;"}, {"sha": "b39005682f7a70fb5425e7940d3273d67eb449fc", "filename": "src/server/life/MapleLifeFactory.java", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/server/life/MapleLifeFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/server/life/MapleLifeFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleLifeFactory.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -157,6 +157,27 @@ public static MapleMonster getMonster(int mid) {\n             return null;\n         }\n     }\n+    \n+    public static int getMonsterLevel(int mid) {\n+        try {\n+            MapleMonsterStats stats = monsterStats.get(Integer.valueOf(mid));\n+            if (stats == null) {\n+                MapleData monsterData = data.getData(StringUtil.getLeftPaddedStr(Integer.toString(mid) + \".img\", '0', 11));\n+                if (monsterData == null) {\n+                    return -1;\n+                }\n+                MapleData monsterInfoData = monsterData.getChildByPath(\"info\");\n+                return MapleDataTool.getIntConvert(\"level\", monsterInfoData);\n+            } else {\n+                return stats.getLevel();\n+            }\n+        } catch(NullPointerException npe) {\n+            System.out.println(\"[SEVERE] MOB \" + mid + \" failed to load. Issue: \" + npe.getMessage() + \"\\n\\n\");\n+            npe.printStackTrace();\n+        }\n+        \n+        return -1;\n+    }\n \n     private static void decodeElementalString(MapleMonsterStats stats, String elemAttr) {\n         for (int i = 0; i < elemAttr.length(); i += 2) {"}, {"sha": "d4e6420f4d909cb7d02ee29dc11baa831226769b", "filename": "src/tools/MaplePacketCreator.java", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/tools/MaplePacketCreator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/tools/MaplePacketCreator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MaplePacketCreator.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -5887,14 +5887,23 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n                 return mplew.getPacket();\n         }\n         \n-        public static byte[] showMakerEffect() {\n+        public static byte[] showMakerEffect(boolean makerSucceeded) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.SHOW_ITEM_GAIN_INCHAT.getValue());\n                 mplew.write(16);\n-                mplew.writeInt(0);\n+                mplew.writeInt(makerSucceeded ? 0 : 1);\n                 return mplew.getPacket();\n         }\n-\n+        \n+        public static byte[] showForeignMakerEffect(int cid, boolean makerSucceeded) {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.SHOW_FOREIGN_EFFECT.getValue());\n+                mplew.writeInt(cid);\n+                mplew.write(16);\n+                mplew.writeInt(makerSucceeded ? 0 : 1);\n+                return mplew.getPacket();\n+        }\n+        \n         public static byte[] showForeignEffect(int effect) {\n                 return showForeignEffect(-1, effect);\n         }"}, {"sha": "099abaa47f1df15f6de42204e1635da184516b97", "filename": "src/tools/locks/MonitoredLockType.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/src/tools/locks/MonitoredLockType.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/src/tools/locks/MonitoredLockType.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/locks/MonitoredLockType.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -66,7 +66,7 @@\n     MAP_OBJS(37),\n     MAP_FACTORY(38),\n     MAP_ITEM(39),\n-    MAP_BOUNDS(41),\n+    MAP_BOUNDS(40),\n     MINIDUNGEON(41),\n     REACTOR(42);\n     "}, {"sha": "498a33ef8bab2e2cc4d164c8b161b166b15a3fe2", "filename": "tools/MapleSkillMakerFetcher/lib/ItemMake.img.xml", "status": "removed", "additions": 0, "deletions": 16559, "changes": 16559, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/4dd2764776322766244d969614b026afa7b2a429/tools/MapleSkillMakerFetcher/lib/ItemMake.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/4dd2764776322766244d969614b026afa7b2a429/tools/MapleSkillMakerFetcher/lib/ItemMake.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/lib/ItemMake.img.xml?ref=4dd2764776322766244d969614b026afa7b2a429"}, {"sha": "51002260371763f4a8c3c6b4e12e12c3c7007d56", "filename": "tools/MapleSkillMakerFetcher/lib/MakerData.sql", "status": "modified", "additions": 816, "deletions": 817, "changes": 1633, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/lib/MakerData.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/lib/MakerData.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/lib/MakerData.sql?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -2,48 +2,48 @@\n  # Generated data is conformant with the ItemMake.img.xml file used to compile this.\n \n INSERT IGNORE INTO `makercreatedata` (`id`, `itemid`, `req_level`, `req_maker_level`, `req_meso`, `req_item`, `req_equip`, `catalyst`, `quantity`, `tuc`) VALUES\n-  (0, 4250000, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250100, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250200, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250300, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250400, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250500, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250600, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250700, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250800, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4250900, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4251000, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4251100, 45, 1, 100000, 0, 0, 0, 1, 0),\n-  (0, 4251300, 75, 2, 150000, 0, 0, 0, 1, 0),\n-  (0, 4251400, 75, 2, 150000, 0, 0, 0, 1, 0),\n-  (0, 4250001, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250101, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250201, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250301, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250401, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250501, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250601, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250701, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250801, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4250901, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4251001, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4251101, 45, 1, 300000, 0, 0, 0, 1, 0),\n-  (0, 4251301, 75, 2, 450000, 0, 0, 0, 1, 0),\n-  (0, 4251401, 75, 2, 450000, 0, 0, 0, 1, 0),\n-  (0, 4250002, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250102, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250202, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250302, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250402, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250502, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250602, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250702, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250802, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4250902, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4251002, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4251102, 45, 2, 500000, 0, 0, 0, 1, 0),\n-  (0, 4251302, 75, 3, 750000, 0, 0, 0, 1, 0),\n-  (0, 4251402, 75, 3, 750000, 0, 0, 0, 1, 0),\n+  (0, 4250000, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250100, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250200, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250300, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250400, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250500, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250600, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250700, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250800, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4250900, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4251000, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4251100, 45, 1, 110000, 0, 0, 0, 1, 0),\n+  (0, 4251300, 75, 2, 165000, 0, 0, 0, 1, 0),\n+  (0, 4251400, 75, 2, 165000, 0, 0, 0, 1, 0),\n+  (0, 4250001, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4250101, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4250201, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4250301, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4250401, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4250501, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4250601, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4250701, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4250801, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4250901, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4251001, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4251101, 45, 1, 330000, 0, 0, 0, 1, 0),\n+  (0, 4251301, 75, 2, 495000, 0, 0, 0, 1, 0),\n+  (0, 4251401, 75, 2, 495000, 0, 0, 0, 1, 0),\n+  (0, 4250002, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4250102, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4250202, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4250302, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4250402, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4250502, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4250602, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4250702, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4250802, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4250902, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4251002, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4251102, 45, 2, 550000, 0, 0, 0, 1, 0),\n+  (0, 4251302, 75, 3, 825000, 0, 0, 0, 1, 0),\n+  (0, 4251402, 75, 3, 825000, 0, 0, 0, 1, 0),\n   (0, 4001174, 45, 1, 0, 4031966, 0, 0, 1, 0),\n   (0, 4001175, 50, 1, 0, 4031967, 0, 0, 1, 0),\n   (0, 4001176, 55, 1, 0, 4031968, 0, 0, 10, 0),\n@@ -60,780 +60,780 @@ INSERT IGNORE INTO `makercreatedata` (`id`, `itemid`, `req_level`, `req_maker_le\n   (0, 4001186, 105, 3, 0, 4031978, 0, 0, 1, 0),\n   (0, 4032334, 150, 1, 0, 0, 0, 0, 1, 0),\n   (0, 4032312, 70, 1, 0, 0, 0, 0, 1, 0),\n-  (0, 2041058, 50, 1, 50000, 0, 1122013, 0, 1, 0),\n-  (0, 2040727, 50, 1, 50000, 0, 1122013, 0, 1, 0),\n-  (1, 1002028, 45, 1, 50000, 0, 0, 4130018, 1, 1),\n-  (1, 1002085, 45, 1, 45000, 0, 0, 4130018, 1, 1),\n-  (1, 1002086, 45, 1, 37500, 0, 0, 4130018, 1, 1),\n-  (1, 1002022, 50, 1, 55000, 0, 0, 4130018, 1, 1),\n-  (1, 1002100, 50, 1, 55000, 0, 0, 4130018, 1, 1),\n-  (1, 1002101, 50, 1, 55000, 0, 0, 4130018, 1, 1),\n-  (1, 1002029, 55, 1, 75000, 0, 0, 4130018, 1, 1),\n-  (1, 1002084, 55, 1, 75000, 0, 0, 4130018, 1, 1),\n-  (1, 1002030, 65, 1, 85000, 0, 0, 4130018, 1, 1),\n-  (1, 1002094, 65, 1, 85000, 0, 0, 4130018, 1, 1),\n-  (1, 1002095, 65, 1, 85000, 0, 0, 4130018, 1, 1),\n-  (1, 1002338, 75, 2, 133000, 0, 0, 4130018, 1, 2),\n-  (1, 1002339, 75, 2, 133000, 0, 0, 4130018, 1, 2),\n-  (1, 1002340, 75, 2, 133000, 0, 0, 4130018, 1, 2),\n-  (1, 1002528, 85, 2, 147000, 0, 0, 4130018, 1, 2),\n-  (1, 1002529, 85, 2, 147000, 0, 0, 4130018, 1, 2),\n-  (1, 1002530, 85, 2, 147000, 0, 0, 4130018, 1, 2),\n-  (1, 1002531, 85, 2, 147000, 0, 0, 4130018, 1, 2),\n-  (1, 1002532, 85, 2, 147000, 0, 0, 4130018, 1, 2),\n-  (1, 1002377, 95, 2, 168000, 0, 0, 4130018, 1, 2),\n-  (1, 1002378, 95, 2, 168000, 0, 0, 4130018, 1, 2),\n-  (1, 1002379, 95, 2, 168000, 0, 0, 4130018, 1, 2),\n-  (1, 1002551, 105, 3, 280000, 0, 0, 4130018, 1, 3),\n-  (1, 1002790, 115, 3, 320000, 0, 0, 4130018, 1, 3),\n-  (1, 1002776, 115, 3, 320000, 0, 0, 4130018, 1, 3),\n-  (1, 1040087, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1040088, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1040089, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1041087, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1041088, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1041089, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (1, 1040090, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1040091, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1040092, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1040093, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1041091, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1041092, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1041093, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (1, 1040102, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1040103, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1040104, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1041097, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1041098, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1041099, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (1, 1040111, 85, 2, 112000, 0, 0, 4130019, 1, 2),\n-  (1, 1040112, 85, 2, 112000, 0, 0, 4130019, 1, 2),\n-  (1, 1040113, 85, 2, 112000, 0, 0, 4130019, 1, 2),\n-  (1, 1041119, 85, 2, 133000, 0, 0, 4130019, 1, 2),\n-  (1, 1041120, 85, 2, 133000, 0, 0, 4130019, 1, 2),\n-  (1, 1041121, 85, 2, 133000, 0, 0, 4130019, 1, 2),\n-  (1, 1040120, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1040121, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1040122, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1041122, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1041123, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1041124, 95, 2, 140000, 0, 0, 4130019, 1, 2),\n-  (1, 1060076, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1060077, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1060078, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1061086, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1061087, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1061088, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (1, 1060079, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1060080, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1060081, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1060082, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1061090, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1061091, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1061092, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (1, 1060090, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1060091, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1060092, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1061096, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1061097, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1061098, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (1, 1060100, 85, 2, 98000, 0, 0, 4130020, 1, 2),\n-  (1, 1060101, 85, 2, 98000, 0, 0, 4130020, 1, 2),\n-  (1, 1060102, 85, 2, 98000, 0, 0, 4130020, 1, 2),\n-  (1, 1061118, 85, 2, 119000, 0, 0, 4130020, 1, 2),\n-  (1, 1061119, 85, 2, 119000, 0, 0, 4130020, 1, 2),\n-  (1, 1061120, 85, 2, 119000, 0, 0, 4130020, 1, 2),\n-  (1, 1060109, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1060110, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1060111, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1061121, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1061122, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1061123, 95, 2, 126000, 0, 0, 4130020, 1, 2),\n-  (1, 1050080, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1050081, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1050082, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1050083, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1051077, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1051078, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1051079, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1051080, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (1, 1052075, 105, 3, 320000, 0, 0, 4130021, 1, 3),\n-  (1, 1052160, 115, 3, 380000, 0, 0, 4130021, 1, 3),\n-  (1, 1052155, 115, 3, 380000, 0, 0, 4130021, 1, 3),\n-  (1, 1072132, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (1, 1072133, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (1, 1072134, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (1, 1072135, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (1, 1072147, 55, 1, 35000, 0, 0, 4130001, 1, 1),\n-  (1, 1072148, 55, 1, 35000, 0, 0, 4130001, 1, 1),\n-  (1, 1072149, 55, 1, 35000, 0, 0, 4130001, 1, 1),\n-  (1, 1072154, 65, 1, 42500, 0, 0, 4130001, 1, 1),\n-  (1, 1072155, 65, 1, 42500, 0, 0, 4130001, 1, 1),\n-  (1, 1072156, 65, 1, 42500, 0, 0, 4130001, 1, 1),\n-  (1, 1072210, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (1, 1072211, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (1, 1072212, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (1, 1072196, 85, 2, 105000, 0, 0, 4130001, 1, 2),\n-  (1, 1072197, 85, 2, 105000, 0, 0, 4130001, 1, 2),\n-  (1, 1072198, 85, 2, 105000, 0, 0, 4130001, 1, 2),\n-  (1, 1072220, 95, 2, 126000, 0, 0, 4130001, 1, 2),\n-  (1, 1072221, 95, 2, 126000, 0, 0, 4130001, 1, 2),\n-  (1, 1072222, 95, 2, 126000, 0, 0, 4130001, 1, 2),\n-  (1, 1072273, 105, 3, 210000, 0, 0, 4130001, 1, 3),\n-  (1, 1072361, 115, 3, 240000, 0, 0, 4130001, 1, 3),\n-  (1, 1072355, 115, 3, 240000, 0, 0, 4130001, 1, 3),\n-  (1, 1082009, 45, 1, 45000, 0, 0, 4130000, 1, 1),\n-  (1, 1082010, 45, 1, 50000, 0, 0, 4130000, 1, 1),\n-  (1, 1082011, 45, 1, 55000, 0, 0, 4130000, 1, 1),\n-  (1, 1082059, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n-  (1, 1082060, 55, 1, 65000, 0, 0, 4130000, 1, 1),\n-  (1, 1082061, 55, 1, 70000, 0, 0, 4130000, 1, 1),\n-  (1, 1082103, 65, 1, 75000, 0, 0, 4130000, 1, 1),\n-  (1, 1082104, 65, 1, 80000, 0, 0, 4130000, 1, 1),\n-  (1, 1082105, 65, 1, 85000, 0, 0, 4130000, 1, 1),\n-  (1, 1082114, 75, 2, 147000, 0, 0, 4130000, 1, 2),\n-  (1, 1082115, 75, 2, 150500, 0, 0, 4130000, 1, 2),\n-  (1, 1082116, 75, 2, 154000, 0, 0, 4130000, 1, 2),\n-  (1, 1082117, 75, 2, 154000, 0, 0, 4130000, 1, 2),\n-  (1, 1082128, 85, 2, 168000, 0, 0, 4130000, 1, 2),\n-  (1, 1082129, 85, 2, 171500, 0, 0, 4130000, 1, 2),\n-  (1, 1082130, 85, 2, 175000, 0, 0, 4130000, 1, 2),\n-  (1, 1082139, 95, 2, 189000, 0, 0, 4130000, 1, 2),\n-  (1, 1082140, 95, 2, 192500, 0, 0, 4130000, 1, 2),\n-  (1, 1082141, 95, 2, 196000, 0, 0, 4130000, 1, 2),\n-  (1, 1082168, 105, 3, 300000, 0, 0, 4130000, 1, 3),\n-  (1, 1082239, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (1, 1082234, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (1, 1092004, 45, 1, 75000, 0, 0, 4130022, 1, 1),\n-  (1, 1092009, 55, 1, 90000, 0, 0, 4130022, 1, 1),\n-  (1, 1092010, 55, 1, 95000, 0, 0, 4130022, 1, 1),\n-  (1, 1092011, 55, 1, 95000, 0, 0, 4130022, 1, 1),\n-  (1, 1092015, 65, 1, 100000, 0, 0, 4130022, 1, 1),\n-  (1, 1092016, 65, 1, 105000, 0, 0, 4130022, 1, 1),\n-  (1, 1092017, 65, 1, 105000, 0, 0, 4130022, 1, 1),\n-  (1, 1092023, 75, 2, 154000, 0, 0, 4130022, 1, 2),\n-  (1, 1092024, 75, 2, 161000, 0, 0, 4130022, 1, 2),\n-  (1, 1092025, 75, 2, 161000, 0, 0, 4130022, 1, 2),\n-  (1, 1092026, 85, 2, 168000, 0, 0, 4130022, 1, 2),\n-  (1, 1092027, 85, 2, 175000, 0, 0, 4130022, 1, 2),\n-  (1, 1092028, 85, 2, 175000, 0, 0, 4130022, 1, 2),\n-  (1, 1092036, 95, 2, 182000, 0, 0, 4130022, 1, 2),\n-  (1, 1092037, 95, 2, 189000, 0, 0, 4130022, 1, 2),\n-  (1, 1092038, 95, 2, 196000, 0, 0, 4130022, 1, 2),\n-  (1, 1092060, 105, 3, 210000, 0, 0, 4130022, 1, 3),\n-  (1, 1092058, 115, 3, 350000, 0, 0, 4130022, 1, 3),\n-  (1, 1302010, 45, 1, 60000, 0, 0, 4130002, 1, 1),\n-  (1, 1312008, 45, 1, 70000, 0, 0, 4130003, 1, 1),\n-  (1, 1322017, 45, 1, 70000, 0, 0, 4130004, 1, 1),\n-  (1, 1402003, 45, 1, 100000, 0, 0, 4130005, 1, 1),\n-  (1, 1412003, 45, 1, 70000, 0, 0, 4130006, 1, 1),\n-  (1, 1422005, 45, 1, 75000, 0, 0, 4130007, 1, 1),\n-  (1, 1432004, 45, 1, 75000, 0, 0, 4130008, 1, 1),\n-  (1, 1442005, 45, 1, 75000, 0, 0, 4130009, 1, 1),\n-  (1, 1302011, 55, 1, 75000, 0, 0, 4130002, 1, 1),\n-  (1, 1312009, 55, 1, 95000, 0, 0, 4130003, 1, 1),\n-  (1, 1322018, 55, 1, 95000, 0, 0, 4130004, 1, 1),\n-  (1, 1402011, 55, 1, 115000, 0, 0, 4130005, 1, 1),\n-  (1, 1412007, 55, 1, 95000, 0, 0, 4130006, 1, 1),\n-  (1, 1422009, 55, 1, 95000, 0, 0, 4130007, 1, 1),\n-  (1, 1432006, 55, 1, 95000, 0, 0, 4130008, 1, 1),\n-  (1, 1442010, 55, 1, 125000, 0, 0, 4130009, 1, 1),\n-  (1, 1302012, 65, 1, 125000, 0, 0, 4130002, 1, 1),\n-  (1, 1312010, 65, 1, 150000, 0, 0, 4130003, 1, 1),\n-  (1, 1322019, 65, 1, 125000, 0, 0, 4130004, 1, 1),\n-  (1, 1402012, 65, 1, 130000, 0, 0, 4130005, 1, 1),\n-  (1, 1412008, 65, 1, 125000, 0, 0, 4130006, 1, 1),\n-  (1, 1422010, 65, 1, 125000, 0, 0, 4130007, 1, 1),\n-  (1, 1432007, 65, 1, 125000, 0, 0, 4130008, 1, 1),\n-  (1, 1442008, 65, 1, 150000, 0, 0, 4130009, 1, 1),\n-  (1, 1322020, 70, 1, 150000, 0, 0, 4130004, 1, 1),\n-  (1, 1302018, 75, 2, 210000, 0, 0, 4130002, 1, 2),\n-  (1, 1312011, 75, 2, 245000, 0, 0, 4130003, 1, 2),\n-  (1, 1322028, 75, 2, 245000, 0, 0, 4130004, 1, 2),\n-  (1, 1402004, 75, 2, 210000, 0, 0, 4130005, 1, 2),\n-  (1, 1402015, 75, 2, 210000, 0, 0, 4130005, 1, 2),\n-  (1, 1412009, 75, 2, 217000, 0, 0, 4130006, 1, 2),\n-  (1, 1422012, 75, 2, 217000, 0, 0, 4130007, 1, 2),\n-  (1, 1432010, 75, 2, 217000, 0, 0, 4130008, 1, 2),\n-  (1, 1442019, 75, 2, 245000, 0, 0, 4130009, 1, 2),\n-  (1, 1302023, 85, 2, 245000, 0, 0, 4130002, 1, 2),\n-  (1, 1312015, 85, 2, 280000, 0, 0, 4130003, 1, 2),\n-  (1, 1322029, 85, 2, 280000, 0, 0, 4130004, 1, 2),\n-  (1, 1402005, 85, 2, 280000, 0, 0, 4130005, 1, 2),\n-  (1, 1402016, 85, 2, 280000, 0, 0, 4130005, 1, 2),\n-  (1, 1412010, 85, 2, 259000, 0, 0, 4130006, 1, 2),\n-  (1, 1422013, 85, 2, 259000, 0, 0, 4130007, 1, 2),\n-  (1, 1432011, 85, 2, 259000, 0, 0, 4130008, 1, 2),\n-  (1, 1442020, 85, 2, 315000, 0, 0, 4130009, 1, 2),\n-  (1, 1302056, 95, 2, 336000, 0, 0, 4130002, 1, 2),\n-  (1, 1312030, 95, 2, 329000, 0, 0, 4130003, 1, 2),\n-  (1, 1322045, 95, 2, 329000, 0, 0, 4130004, 1, 2),\n-  (1, 1402035, 95, 2, 329000, 0, 0, 4130005, 1, 2),\n-  (1, 1412021, 95, 2, 343000, 0, 0, 4130006, 1, 2),\n-  (1, 1422027, 95, 2, 315000, 0, 0, 4130007, 1, 2),\n-  (1, 1432030, 95, 2, 343000, 0, 0, 4130008, 1, 2),\n-  (1, 1442044, 95, 2, 329000, 0, 0, 4130009, 1, 2),\n-  (1, 1302059, 105, 3, 550000, 0, 0, 4130002, 1, 3),\n-  (1, 1312031, 105, 3, 530000, 0, 0, 4130003, 1, 3),\n-  (1, 1322052, 105, 3, 480000, 0, 0, 4130004, 1, 3),\n-  (1, 1402036, 105, 3, 550000, 0, 0, 4130005, 1, 3),\n-  (1, 1412026, 105, 3, 520000, 0, 0, 4130006, 1, 3),\n-  (1, 1422028, 105, 3, 510000, 0, 0, 4130007, 1, 3),\n-  (1, 1432038, 105, 3, 530000, 0, 0, 4130008, 1, 3),\n-  (1, 1442045, 105, 3, 570000, 0, 0, 4130009, 1, 3),\n-  (1, 1302086, 115, 3, 680000, 0, 0, 4130002, 1, 3),\n-  (1, 1312038, 115, 3, 580000, 0, 0, 4130003, 1, 3),\n-  (1, 1322061, 115, 3, 490000, 0, 0, 4130004, 1, 3),\n-  (1, 1402047, 115, 3, 650000, 0, 0, 4130005, 1, 3),\n-  (1, 1412034, 115, 3, 650000, 0, 0, 4130006, 1, 3),\n-  (1, 1422038, 115, 3, 560000, 0, 0, 4130007, 1, 3),\n-  (1, 1432049, 115, 3, 570000, 0, 0, 4130008, 1, 3),\n-  (1, 1442067, 115, 3, 620000, 0, 0, 4130009, 1, 3),\n-  (1, 1302081, 115, 3, 680000, 0, 0, 4130002, 1, 3),\n-  (1, 1312037, 115, 3, 580000, 0, 0, 4130003, 1, 3),\n-  (1, 1322060, 115, 3, 490000, 0, 0, 4130004, 1, 3),\n-  (1, 1402046, 115, 3, 650000, 0, 0, 4130005, 1, 3),\n-  (1, 1412033, 115, 3, 650000, 0, 0, 4130006, 1, 3),\n-  (1, 1422037, 115, 3, 560000, 0, 0, 4130007, 1, 3),\n-  (1, 1432047, 115, 3, 570000, 0, 0, 4130008, 1, 3),\n-  (1, 1442063, 115, 3, 620000, 0, 0, 4130009, 1, 3),\n-  (2, 1002215, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (2, 1002216, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (2, 1002217, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (2, 1002218, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (2, 1002242, 55, 1, 25000, 0, 0, 4130018, 1, 1),\n-  (2, 1002243, 55, 1, 25000, 0, 0, 4130018, 1, 1),\n-  (2, 1002244, 55, 1, 25000, 0, 0, 4130018, 1, 1),\n-  (2, 1002245, 55, 1, 25000, 0, 0, 4130018, 1, 1),\n-  (2, 1002246, 55, 1, 25000, 0, 0, 4130018, 1, 1),\n-  (2, 1002252, 65, 1, 40000, 0, 0, 4130018, 1, 1),\n-  (2, 1002253, 65, 1, 40000, 0, 0, 4130018, 1, 1),\n-  (2, 1002254, 65, 1, 40000, 0, 0, 4130018, 1, 1),\n-  (2, 1002271, 75, 2, 66500, 0, 0, 4130018, 1, 2),\n-  (2, 1002272, 75, 2, 66500, 0, 0, 4130018, 1, 2),\n-  (2, 1002273, 75, 2, 66500, 0, 0, 4130018, 1, 2),\n-  (2, 1002274, 75, 2, 66500, 0, 0, 4130018, 1, 2),\n-  (2, 1002363, 85, 2, 77000, 0, 0, 4130018, 1, 2),\n-  (2, 1002364, 85, 2, 77000, 0, 0, 4130018, 1, 2),\n-  (2, 1002365, 85, 2, 77000, 0, 0, 4130018, 1, 2),\n-  (2, 1002366, 85, 2, 77000, 0, 0, 4130018, 1, 2),\n-  (2, 1002398, 95, 2, 87500, 0, 0, 4130018, 1, 2),\n-  (2, 1002399, 95, 2, 87500, 0, 0, 4130018, 1, 2),\n-  (2, 1002400, 95, 2, 87500, 0, 0, 4130018, 1, 2),\n-  (2, 1002401, 95, 2, 87500, 0, 0, 4130018, 1, 2),\n-  (2, 1002773, 105, 3, 150000, 0, 0, 4130018, 1, 3),\n-  (2, 1002791, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (2, 1002777, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (2, 1050045, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1050046, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1050047, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1050048, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1050049, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1051030, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1051031, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1051032, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1051033, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1051034, 43, 1, 45000, 0, 0, 4130021, 1, 1),\n-  (2, 1050053, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1050054, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1050055, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1050056, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1051044, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1051045, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1051046, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1051047, 53, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (2, 1050067, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1050068, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1050069, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1050070, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1051052, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1051053, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1051054, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1051055, 63, 1, 60000, 0, 0, 4130021, 1, 1),\n-  (2, 1050072, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1050073, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1050074, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1051056, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1051057, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1051058, 73, 2, 112000, 0, 0, 4130021, 1, 2),\n-  (2, 1050092, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1050093, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1050094, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1050095, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1051094, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1051095, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1051096, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1051097, 83, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (2, 1050102, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1050103, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1050104, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1050105, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1051101, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1051102, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1051103, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1051104, 93, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (2, 1052076, 103, 3, 290000, 0, 0, 4130021, 1, 3),\n-  (2, 1052161, 115, 3, 340000, 0, 0, 4130021, 1, 3),\n-  (2, 1052156, 115, 3, 340000, 0, 0, 4130021, 1, 3),\n-  (2, 1072140, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (2, 1072141, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (2, 1072142, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (2, 1072143, 45, 1, 27500, 0, 0, 4130001, 1, 1),\n-  (2, 1072136, 55, 1, 30000, 0, 0, 4130001, 1, 1),\n-  (2, 1072137, 55, 1, 30000, 0, 0, 4130001, 1, 1),\n-  (2, 1072138, 55, 1, 30000, 0, 0, 4130001, 1, 1),\n-  (2, 1072139, 55, 1, 30000, 0, 0, 4130001, 1, 1),\n-  (2, 1072157, 65, 1, 40000, 0, 0, 4130001, 1, 1),\n-  (2, 1072158, 65, 1, 40000, 0, 0, 4130001, 1, 1),\n-  (2, 1072159, 65, 1, 40000, 0, 0, 4130001, 1, 1),\n-  (2, 1072160, 65, 1, 40000, 0, 0, 4130001, 1, 1),\n-  (2, 1072177, 75, 2, 70000, 0, 0, 4130001, 1, 2),\n-  (2, 1072178, 75, 2, 70000, 0, 0, 4130001, 1, 2),\n-  (2, 1072179, 75, 2, 70000, 0, 0, 4130001, 1, 2),\n-  (2, 1072206, 85, 2, 84000, 0, 0, 4130001, 1, 2),\n-  (2, 1072207, 85, 2, 84000, 0, 0, 4130001, 1, 2),\n-  (2, 1072208, 85, 2, 84000, 0, 0, 4130001, 1, 2),\n-  (2, 1072209, 85, 2, 84000, 0, 0, 4130001, 1, 2),\n-  (2, 1072223, 95, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (2, 1072224, 95, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (2, 1072225, 95, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (2, 1072226, 95, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (2, 1072268, 105, 3, 180000, 0, 0, 4130001, 1, 3),\n-  (2, 1072362, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n-  (2, 1072356, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n-  (2, 1082080, 45, 1, 50000, 0, 0, 4130000, 1, 1),\n-  (2, 1082081, 45, 1, 40000, 0, 0, 4130000, 1, 1),\n-  (2, 1082082, 45, 1, 45000, 0, 0, 4130000, 1, 1),\n-  (2, 1082086, 55, 1, 52500, 0, 0, 4130000, 1, 1),\n-  (2, 1082087, 55, 1, 57500, 0, 0, 4130000, 1, 1),\n-  (2, 1082088, 55, 1, 62500, 0, 0, 4130000, 1, 1),\n-  (2, 1082098, 65, 1, 70000, 0, 0, 4130000, 1, 1),\n-  (2, 1082099, 65, 1, 72500, 0, 0, 4130000, 1, 1),\n-  (2, 1082100, 65, 1, 75000, 0, 0, 4130000, 1, 1),\n-  (2, 1082121, 75, 2, 140000, 0, 0, 4130000, 1, 2),\n-  (2, 1082122, 75, 2, 143500, 0, 0, 4130000, 1, 2),\n-  (2, 1082123, 75, 2, 147000, 0, 0, 4130000, 1, 2),\n-  (2, 1082131, 85, 2, 161000, 0, 0, 4130000, 1, 2),\n-  (2, 1082132, 85, 2, 164500, 0, 0, 4130000, 1, 2),\n-  (2, 1082133, 85, 2, 164500, 0, 0, 4130000, 1, 2),\n-  (2, 1082134, 85, 2, 168000, 0, 0, 4130000, 1, 2),\n-  (2, 1082151, 95, 2, 182000, 0, 0, 4130000, 1, 2),\n-  (2, 1082152, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (2, 1082153, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (2, 1082154, 95, 2, 189000, 0, 0, 4130000, 1, 2),\n-  (2, 1082164, 105, 3, 300000, 0, 0, 4130000, 1, 3),\n-  (2, 1082240, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (2, 1082235, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (2, 1092057, 115, 3, 350000, 0, 0, 4130022, 1, 3),\n-  (2, 1372007, 43, 1, 100000, 0, 0, 4130010, 1, 1),\n-  (2, 1382006, 50, 1, 75000, 0, 0, 4130011, 1, 1),\n-  (2, 1372014, 53, 1, 115000, 0, 0, 4130010, 1, 1),\n-  (2, 1382007, 60, 1, 100000, 0, 0, 4130011, 1, 1),\n-  (2, 1372015, 63, 1, 130000, 0, 0, 4130010, 1, 1),\n-  (2, 1382010, 70, 1, 125000, 0, 0, 4130011, 1, 1),\n-  (2, 1372016, 73, 2, 203000, 0, 0, 4130010, 1, 2),\n-  (2, 1382008, 80, 2, 217000, 0, 0, 4130011, 1, 2),\n-  (2, 1372009, 83, 2, 227500, 0, 0, 4130010, 1, 2),\n-  (2, 1382035, 90, 2, 266000, 0, 0, 4130011, 1, 2),\n-  (2, 1372010, 93, 2, 252000, 0, 0, 4130010, 1, 2),\n-  (2, 1372032, 103, 3, 460000, 0, 0, 4130010, 1, 3),\n-  (2, 1382036, 105, 3, 470000, 0, 0, 4130011, 1, 3),\n-  (2, 1372045, 115, 3, 510000, 0, 0, 4130010, 1, 3),\n-  (2, 1382059, 115, 3, 520000, 0, 0, 4130011, 1, 3),\n-  (2, 1372044, 115, 3, 510000, 0, 0, 4130010, 1, 3),\n-  (2, 1382057, 115, 3, 520000, 0, 0, 4130011, 1, 3),\n-  (4, 1002211, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (4, 1002212, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (4, 1002213, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (4, 1002214, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (4, 1002267, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (4, 1002268, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (4, 1002269, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (4, 1002270, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (4, 1002286, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (4, 1002287, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (4, 1002288, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (4, 1002289, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (4, 1002275, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (4, 1002276, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (4, 1002277, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (4, 1002278, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (4, 1002402, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (4, 1002403, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (4, 1002404, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (4, 1002405, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (4, 1002406, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (4, 1002407, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (4, 1002408, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (4, 1002547, 105, 3, 150000, 0, 0, 4130018, 1, 3),\n-  (4, 1002792, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (4, 1002778, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (4, 1050051, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (4, 1050052, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (4, 1051037, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (4, 1051038, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (4, 1051039, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (4, 1050058, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1050059, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1050060, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1051041, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1051042, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1051043, 55, 1, 52500, 0, 0, 4130021, 1, 1),\n-  (4, 1050061, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1050062, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1050063, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1050064, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1051062, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1051063, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1051064, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1051065, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (4, 1050075, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1050076, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1050077, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1050078, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1051066, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1051067, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1051068, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1051069, 75, 2, 98000, 0, 0, 4130021, 1, 2),\n-  (4, 1050088, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1050089, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1050090, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1050091, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1051082, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1051083, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1051084, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1051085, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (4, 1050106, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1050107, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1050108, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1051105, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1051106, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1051107, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (4, 1052071, 105, 3, 300000, 0, 0, 4130021, 1, 3),\n-  (4, 1052162, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (4, 1052157, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (4, 1072122, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (4, 1072123, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (4, 1072124, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (4, 1072125, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (4, 1072144, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (4, 1072145, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (4, 1072146, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (4, 1072164, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (4, 1072165, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (4, 1072166, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (4, 1072167, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (4, 1072182, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (4, 1072183, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (4, 1072184, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (4, 1072185, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (4, 1072203, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (4, 1072204, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (4, 1072205, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (4, 1072227, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (4, 1072228, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (4, 1072229, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (4, 1072269, 105, 3, 180000, 0, 0, 4130001, 1, 3),\n-  (4, 1072363, 115, 3, 200000, 0, 0, 4130001, 1, 3),\n-  (4, 1072357, 115, 3, 200000, 0, 0, 4130001, 1, 3),\n-  (4, 1082083, 45, 1, 52500, 0, 0, 4130000, 1, 1),\n-  (4, 1082084, 45, 1, 42500, 0, 0, 4130000, 1, 1),\n-  (4, 1082085, 45, 1, 47500, 0, 0, 4130000, 1, 1),\n-  (4, 1082089, 55, 1, 55000, 0, 0, 4130000, 1, 1),\n-  (4, 1082090, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n-  (4, 1082091, 55, 1, 65000, 0, 0, 4130000, 1, 1),\n-  (4, 1082106, 65, 1, 70000, 0, 0, 4130000, 1, 1),\n-  (4, 1082107, 65, 1, 75000, 0, 0, 4130000, 1, 1),\n-  (4, 1082108, 65, 1, 80000, 0, 0, 4130000, 1, 1),\n-  (4, 1082109, 75, 2, 140000, 0, 0, 4130000, 1, 2),\n-  (4, 1082110, 75, 2, 143500, 0, 0, 4130000, 1, 2),\n-  (4, 1082111, 75, 2, 143500, 0, 0, 4130000, 1, 2),\n-  (4, 1082112, 75, 2, 147000, 0, 0, 4130000, 1, 2),\n-  (4, 1082125, 85, 2, 161000, 0, 0, 4130000, 1, 2),\n-  (4, 1082126, 85, 2, 164500, 0, 0, 4130000, 1, 2),\n-  (4, 1082127, 85, 2, 168000, 0, 0, 4130000, 1, 2),\n-  (4, 1082158, 95, 2, 182000, 0, 0, 4130000, 1, 2),\n-  (4, 1082159, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (4, 1082160, 95, 2, 189000, 0, 0, 4130000, 1, 2),\n-  (4, 1082163, 105, 3, 300000, 0, 0, 4130000, 1, 3),\n-  (4, 1082241, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (4, 1082236, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (4, 1452008, 45, 1, 100000, 0, 0, 4130012, 1, 1),\n-  (4, 1462007, 45, 1, 85000, 0, 0, 4130013, 1, 1),\n-  (4, 1452004, 55, 1, 125000, 0, 0, 4130012, 1, 1),\n-  (4, 1462008, 55, 1, 120000, 0, 0, 4130013, 1, 1),\n-  (4, 1452009, 65, 1, 150000, 0, 0, 4130012, 1, 1),\n-  (4, 1452010, 65, 1, 150000, 0, 0, 4130012, 1, 1),\n-  (4, 1452011, 65, 1, 150000, 0, 0, 4130012, 1, 1),\n-  (4, 1462009, 65, 1, 150000, 0, 0, 4130013, 1, 1),\n-  (4, 1452012, 75, 2, 245000, 0, 0, 4130012, 1, 2),\n-  (4, 1452013, 75, 2, 245000, 0, 0, 4130012, 1, 2),\n-  (4, 1452014, 75, 2, 245000, 0, 0, 4130012, 1, 2),\n-  (4, 1452015, 75, 2, 245000, 0, 0, 4130012, 1, 2),\n-  (4, 1462010, 75, 2, 245000, 0, 0, 4130013, 1, 2),\n-  (4, 1462011, 75, 2, 245000, 0, 0, 4130013, 1, 2),\n-  (4, 1462012, 75, 2, 245000, 0, 0, 4130013, 1, 2),\n-  (4, 1462013, 75, 2, 245000, 0, 0, 4130013, 1, 2),\n-  (4, 1452017, 85, 2, 280000, 0, 0, 4130012, 1, 2),\n-  (4, 1462018, 85, 2, 280000, 0, 0, 4130013, 1, 2),\n-  (4, 1452019, 95, 2, 315000, 0, 0, 4130012, 1, 2),\n-  (4, 1452020, 95, 2, 315000, 0, 0, 4130012, 1, 2),\n-  (4, 1452021, 95, 2, 315000, 0, 0, 4130012, 1, 2),\n-  (4, 1462015, 95, 2, 315000, 0, 0, 4130013, 1, 2),\n-  (4, 1462016, 95, 2, 315000, 0, 0, 4130013, 1, 2),\n-  (4, 1462017, 95, 2, 315000, 0, 0, 4130013, 1, 2),\n-  (4, 1452044, 105, 3, 500000, 0, 0, 4130012, 1, 3),\n-  (4, 1462039, 105, 3, 500000, 0, 0, 4130013, 1, 3),\n-  (4, 1452059, 115, 3, 550000, 0, 0, 4130012, 1, 3),\n-  (4, 1462051, 115, 3, 550000, 0, 0, 4130013, 1, 3),\n-  (4, 1452057, 115, 3, 550000, 0, 0, 4130012, 1, 3),\n-  (4, 1462050, 115, 3, 550000, 0, 0, 4130013, 1, 3),\n-  (8, 1002207, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (8, 1002208, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (8, 1002209, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (8, 1002210, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (8, 1002247, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (8, 1002248, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (8, 1002249, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (8, 1002281, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (8, 1002282, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (8, 1002283, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (8, 1002284, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (8, 1002285, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (8, 1002327, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (8, 1002328, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (8, 1002329, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (8, 1002330, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (8, 1002323, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (8, 1002324, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (8, 1002325, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (8, 1002326, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (8, 1002380, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (8, 1002381, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (8, 1002382, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (8, 1002383, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (8, 1002550, 105, 3, 150000, 0, 0, 4130018, 1, 3),\n-  (8, 1002793, 115, 3, 190000, 0, 0, 4130018, 1, 3),\n-  (8, 1002779, 115, 3, 190000, 0, 0, 4130018, 1, 3),\n-  (8, 1040094, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1040095, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1040096, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1040097, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1041077, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1041078, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1041079, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1041080, 45, 1, 37500, 0, 0, 4130019, 1, 1),\n-  (8, 1040098, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1040099, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1040100, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1041094, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1041095, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1041096, 55, 1, 45000, 0, 0, 4130019, 1, 1),\n-  (8, 1040105, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1040106, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1040107, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1041100, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1041101, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1041102, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1041103, 65, 1, 50000, 0, 0, 4130019, 1, 1),\n-  (8, 1040108, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1040109, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1040110, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1041105, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1041106, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1041107, 75, 2, 98000, 0, 0, 4130019, 1, 2),\n-  (8, 1040115, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1040116, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1040117, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1040118, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1041115, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1041116, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1041117, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1041118, 85, 2, 126000, 0, 0, 4130019, 1, 2),\n-  (8, 1060083, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1060084, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1060085, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1060086, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1061076, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1061077, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1061078, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1061079, 45, 1, 30000, 0, 0, 4130020, 1, 1),\n-  (8, 1060087, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1060088, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1060089, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1061093, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1061094, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1061095, 55, 1, 37500, 0, 0, 4130020, 1, 1),\n-  (8, 1060093, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1060094, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1060095, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1061099, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1061100, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1061101, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1061102, 65, 1, 45000, 0, 0, 4130020, 1, 1),\n-  (8, 1060097, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1060098, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1060099, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1061104, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1061105, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1061106, 75, 2, 84000, 0, 0, 4130020, 1, 2),\n-  (8, 1060104, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1060105, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1060106, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1060107, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1061114, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1061115, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1061116, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1061117, 85, 2, 112000, 0, 0, 4130020, 1, 2),\n-  (8, 1050096, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1050097, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1050098, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1050099, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1051090, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1051091, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1051092, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1051093, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (8, 1052072, 105, 3, 300000, 0, 0, 4130021, 1, 3),\n-  (8, 1052163, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (8, 1052158, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (8, 1072128, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (8, 1072129, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (8, 1072130, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (8, 1072131, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (8, 1072150, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (8, 1072151, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (8, 1072152, 55, 1, 35000, 0, 0, 4130001, 1, 1),\n-  (8, 1072161, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (8, 1072162, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (8, 1072163, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (8, 1072172, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (8, 1072173, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (8, 1072174, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (8, 1072192, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (8, 1072193, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (8, 1072194, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (8, 1072195, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (8, 1072213, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (8, 1072214, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (8, 1072215, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (8, 1072216, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (8, 1072272, 105, 3, 195000, 0, 0, 4130001, 1, 3),\n-  (8, 1072364, 115, 3, 225000, 0, 0, 4130001, 1, 3),\n-  (8, 1072358, 115, 3, 225000, 0, 0, 4130001, 1, 3),\n-  (8, 1082065, 45, 1, 42500, 0, 0, 4130000, 1, 1),\n-  (8, 1082066, 45, 1, 47500, 0, 0, 4130000, 1, 1),\n-  (8, 1082067, 45, 1, 45000, 0, 0, 4130000, 1, 1),\n-  (8, 1082092, 55, 1, 55000, 0, 0, 4130000, 1, 1),\n-  (8, 1082093, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n-  (8, 1082094, 55, 1, 65000, 0, 0, 4130000, 1, 1),\n-  (8, 1082095, 65, 1, 75000, 0, 0, 4130000, 1, 1),\n-  (8, 1082096, 65, 1, 80000, 0, 0, 4130000, 1, 1),\n-  (8, 1082097, 65, 1, 85000, 0, 0, 4130000, 1, 1),\n-  (8, 1082118, 75, 2, 140000, 0, 0, 4130000, 1, 2),\n-  (8, 1082119, 75, 2, 143500, 0, 0, 4130000, 1, 2),\n-  (8, 1082120, 75, 2, 147000, 0, 0, 4130000, 1, 2),\n-  (8, 1082142, 85, 2, 150500, 0, 0, 4130000, 1, 2),\n-  (8, 1082143, 85, 2, 150500, 0, 0, 4130000, 1, 2),\n-  (8, 1082144, 85, 2, 150500, 0, 0, 4130000, 1, 2),\n-  (8, 1082135, 95, 2, 182000, 0, 0, 4130000, 1, 2),\n-  (8, 1082136, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (8, 1082137, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (8, 1082138, 95, 2, 189000, 0, 0, 4130000, 1, 2),\n-  (8, 1082167, 105, 3, 300000, 0, 0, 4130000, 1, 3),\n-  (8, 1082242, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (8, 1082237, 115, 3, 330000, 0, 0, 4130000, 1, 3),\n-  (8, 1092059, 115, 3, 350000, 0, 0, 4130022, 1, 3),\n-  (8, 1332003, 45, 1, 110000, 0, 0, 4130014, 1, 1),\n-  (8, 1472018, 45, 1, 50000, 0, 0, 4130015, 1, 1),\n-  (8, 1472019, 45, 1, 52500, 0, 0, 4130015, 1, 1),\n-  (8, 1472020, 45, 1, 52500, 0, 0, 4130015, 1, 1),\n-  (8, 1472021, 45, 1, 55000, 0, 0, 4130015, 1, 1),\n-  (8, 1332016, 45, 1, 110000, 0, 0, 4130014, 1, 1),\n-  (8, 1332015, 55, 1, 125000, 0, 0, 4130014, 1, 1),\n-  (8, 1472022, 55, 1, 125000, 0, 0, 4130015, 1, 1),\n-  (8, 1472023, 55, 1, 127500, 0, 0, 4130015, 1, 1),\n-  (8, 1472024, 55, 1, 127500, 0, 0, 4130015, 1, 1),\n-  (8, 1472025, 55, 1, 130000, 0, 0, 4130015, 1, 1),\n-  (8, 1332017, 55, 1, 125000, 0, 0, 4130014, 1, 1),\n-  (8, 1332018, 65, 1, 140000, 0, 0, 4130014, 1, 1),\n-  (8, 1472026, 65, 1, 150000, 0, 0, 4130015, 1, 1),\n-  (8, 1472027, 65, 1, 152500, 0, 0, 4130015, 1, 1),\n-  (8, 1472028, 65, 1, 152500, 0, 0, 4130015, 1, 1),\n-  (8, 1472029, 65, 1, 155000, 0, 0, 4130015, 1, 1),\n-  (8, 1332019, 65, 1, 140000, 0, 0, 4130014, 1, 1),\n-  (8, 1472031, 75, 2, 280000, 0, 0, 4130015, 1, 2),\n-  (8, 1332022, 75, 2, 217000, 0, 0, 4130014, 1, 2),\n-  (8, 1332023, 75, 2, 217000, 0, 0, 4130014, 1, 2),\n-  (8, 1332027, 85, 2, 238000, 0, 0, 4130014, 1, 2),\n-  (8, 1472033, 85, 2, 315000, 0, 0, 4130015, 1, 2),\n-  (8, 1332026, 85, 2, 238000, 0, 0, 4130014, 1, 2),\n-  (8, 1332052, 95, 2, 280000, 0, 0, 4130014, 1, 2),\n-  (8, 1472053, 95, 2, 357000, 0, 0, 4130015, 1, 2),\n-  (8, 1332051, 95, 2, 280000, 0, 0, 4130014, 1, 2),\n-  (8, 1332050, 105, 3, 450000, 0, 0, 4130014, 1, 3),\n-  (8, 1472051, 105, 3, 570000, 0, 0, 4130015, 1, 3),\n-  (8, 1472052, 105, 3, 570000, 0, 0, 4130015, 1, 3),\n-  (8, 1332049, 105, 3, 450000, 0, 0, 4130014, 1, 3),\n-  (8, 1332075, 115, 3, 500000, 0, 0, 4130014, 1, 3),\n-  (8, 1332076, 115, 3, 500000, 0, 0, 4130014, 1, 3),\n-  (8, 1472071, 115, 3, 630000, 0, 0, 4130015, 1, 3),\n-  (8, 1332073, 115, 3, 500000, 0, 0, 4130014, 1, 3),\n-  (8, 1332074, 115, 3, 510000, 0, 0, 4130014, 1, 3),\n-  (8, 1472068, 115, 3, 630000, 0, 0, 4130015, 1, 3),\n-  (16, 1002631, 45, 1, 20000, 0, 0, 4130018, 1, 1),\n-  (16, 1002634, 55, 1, 27500, 0, 0, 4130018, 1, 1),\n-  (16, 1002637, 65, 1, 42500, 0, 0, 4130018, 1, 1),\n-  (16, 1002640, 75, 2, 70000, 0, 0, 4130018, 1, 2),\n-  (16, 1002643, 85, 2, 80500, 0, 0, 4130018, 1, 2),\n-  (16, 1002646, 95, 2, 91000, 0, 0, 4130018, 1, 2),\n-  (16, 1002649, 105, 3, 150000, 0, 0, 4130018, 1, 3),\n-  (16, 1002794, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (16, 1002780, 115, 3, 170000, 0, 0, 4130018, 1, 3),\n-  (16, 1052116, 45, 1, 47500, 0, 0, 4130021, 1, 1),\n-  (16, 1052119, 55, 1, 50000, 0, 0, 4130021, 1, 1),\n-  (16, 1052122, 65, 1, 57500, 0, 0, 4130021, 1, 1),\n-  (16, 1052125, 75, 2, 126000, 0, 0, 4130021, 1, 2),\n-  (16, 1052128, 85, 2, 140000, 0, 0, 4130021, 1, 2),\n-  (16, 1052131, 95, 2, 168000, 0, 0, 4130021, 1, 2),\n-  (16, 1052134, 105, 3, 300000, 0, 0, 4130021, 1, 3),\n-  (16, 1052164, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (16, 1052159, 115, 3, 360000, 0, 0, 4130021, 1, 3),\n-  (16, 1072303, 45, 1, 25000, 0, 0, 4130001, 1, 1),\n-  (16, 1072306, 55, 1, 32500, 0, 0, 4130001, 1, 1),\n-  (16, 1072309, 65, 1, 45000, 0, 0, 4130001, 1, 1),\n-  (16, 1072312, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n-  (16, 1072315, 85, 2, 98000, 0, 0, 4130001, 1, 2),\n-  (16, 1072318, 95, 2, 119000, 0, 0, 4130001, 1, 2),\n-  (16, 1072321, 105, 3, 180000, 0, 0, 4130001, 1, 3),\n-  (16, 1072365, 115, 3, 200000, 0, 0, 4130001, 1, 3),\n-  (16, 1072359, 115, 3, 200000, 0, 0, 4130001, 1, 3),\n-  (16, 1082198, 45, 1, 42500, 0, 0, 4130000, 1, 1),\n-  (16, 1082201, 55, 1, 55000, 0, 0, 4130000, 1, 1),\n-  (16, 1082204, 65, 1, 75000, 0, 0, 4130000, 1, 1),\n-  (16, 1082207, 75, 2, 140000, 0, 0, 4130000, 1, 2),\n-  (16, 1082210, 85, 2, 161000, 0, 0, 4130000, 1, 2),\n-  (16, 1082213, 95, 2, 185500, 0, 0, 4130000, 1, 2),\n-  (16, 1082216, 105, 3, 300000, 0, 0, 4130000, 1, 3),\n-  (16, 1082243, 115, 3, 335000, 0, 0, 4130000, 1, 3),\n-  (16, 1082238, 115, 3, 335000, 0, 0, 4130000, 1, 3),\n-  (16, 1482007, 45, 1, 65000, 0, 0, 4130016, 1, 1),\n-  (16, 1492007, 45, 1, 70000, 0, 0, 4130017, 1, 1),\n-  (16, 1482008, 55, 1, 120000, 0, 0, 4130016, 1, 1),\n-  (16, 1492008, 55, 1, 125000, 0, 0, 4130017, 1, 1),\n-  (16, 1482009, 65, 1, 150000, 0, 0, 4130016, 1, 1),\n-  (16, 1492009, 65, 1, 155000, 0, 0, 4130017, 1, 1),\n-  (16, 1482010, 75, 2, 245000, 0, 0, 4130016, 1, 2),\n-  (16, 1492010, 75, 2, 245000, 0, 0, 4130017, 1, 2),\n-  (16, 1482011, 85, 2, 273000, 0, 0, 4130016, 1, 2),\n-  (16, 1492011, 85, 2, 280000, 0, 0, 4130017, 1, 2),\n-  (16, 1482012, 95, 2, 308000, 0, 0, 4130016, 1, 2),\n-  (16, 1492012, 95, 2, 315000, 0, 0, 4130017, 1, 2),\n-  (16, 1482013, 105, 3, 510000, 0, 0, 4130016, 1, 3),\n-  (16, 1492013, 105, 3, 520000, 0, 0, 4130017, 1, 3),\n-  (16, 1482024, 115, 3, 560000, 0, 0, 4130016, 1, 3),\n-  (16, 1492025, 115, 3, 570000, 0, 0, 4130017, 1, 3),\n-  (16, 1482023, 115, 3, 560000, 0, 0, 4130016, 1, 3),\n-  (16, 1492023, 115, 3, 570000, 0, 0, 4130017, 1, 3);\n+  (0, 2041058, 50, 1, 55000, 0, 1122013, 0, 1, 0),\n+  (0, 2040727, 50, 1, 55000, 0, 1122013, 0, 1, 0),\n+  (1, 1002028, 45, 1, 55000, 0, 0, 4130018, 1, 1),\n+  (1, 1002085, 45, 1, 50000, 0, 0, 4130018, 1, 1),\n+  (1, 1002086, 45, 1, 41000, 0, 0, 4130018, 1, 1),\n+  (1, 1002022, 50, 1, 60000, 0, 0, 4130018, 1, 1),\n+  (1, 1002100, 50, 1, 60000, 0, 0, 4130018, 1, 1),\n+  (1, 1002101, 50, 1, 60000, 0, 0, 4130018, 1, 1),\n+  (1, 1002029, 55, 1, 82000, 0, 0, 4130018, 1, 1),\n+  (1, 1002084, 55, 1, 82000, 0, 0, 4130018, 1, 1),\n+  (1, 1002030, 65, 1, 93000, 0, 0, 4130018, 1, 1),\n+  (1, 1002094, 65, 1, 93000, 0, 0, 4130018, 1, 1),\n+  (1, 1002095, 65, 1, 93000, 0, 0, 4130018, 1, 1),\n+  (1, 1002338, 75, 2, 146000, 0, 0, 4130018, 1, 2),\n+  (1, 1002339, 75, 2, 146000, 0, 0, 4130018, 1, 2),\n+  (1, 1002340, 75, 2, 146000, 0, 0, 4130018, 1, 2),\n+  (1, 1002528, 85, 2, 161000, 0, 0, 4130018, 1, 2),\n+  (1, 1002529, 85, 2, 161000, 0, 0, 4130018, 1, 2),\n+  (1, 1002530, 85, 2, 161000, 0, 0, 4130018, 1, 2),\n+  (1, 1002531, 85, 2, 161000, 0, 0, 4130018, 1, 2),\n+  (1, 1002532, 85, 2, 161000, 0, 0, 4130018, 1, 2),\n+  (1, 1002377, 95, 2, 184000, 0, 0, 4130018, 1, 2),\n+  (1, 1002378, 95, 2, 184000, 0, 0, 4130018, 1, 2),\n+  (1, 1002379, 95, 2, 184000, 0, 0, 4130018, 1, 2),\n+  (1, 1002551, 105, 3, 308000, 0, 0, 4130018, 1, 3),\n+  (1, 1002790, 115, 3, 352000, 0, 0, 4130018, 1, 3),\n+  (1, 1002776, 115, 3, 352000, 0, 0, 4130018, 1, 3),\n+  (1, 1040087, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1040088, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1040089, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1041087, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1041088, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1041089, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (1, 1040090, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1040091, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1040092, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1040093, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1041091, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1041092, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1041093, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (1, 1040102, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1040103, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1040104, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1041097, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1041098, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1041099, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (1, 1040111, 85, 2, 123000, 0, 0, 4130019, 1, 2),\n+  (1, 1040112, 85, 2, 123000, 0, 0, 4130019, 1, 2),\n+  (1, 1040113, 85, 2, 123000, 0, 0, 4130019, 1, 2),\n+  (1, 1041119, 85, 2, 146000, 0, 0, 4130019, 1, 2),\n+  (1, 1041120, 85, 2, 146000, 0, 0, 4130019, 1, 2),\n+  (1, 1041121, 85, 2, 146000, 0, 0, 4130019, 1, 2),\n+  (1, 1040120, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1040121, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1040122, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1041122, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1041123, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1041124, 95, 2, 153000, 0, 0, 4130019, 1, 2),\n+  (1, 1060076, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1060077, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1060078, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1061086, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1061087, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1061088, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (1, 1060079, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1060080, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1060081, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1060082, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1061090, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1061091, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1061092, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (1, 1060090, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1060091, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1060092, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1061096, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1061097, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1061098, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (1, 1060100, 85, 2, 107000, 0, 0, 4130020, 1, 2),\n+  (1, 1060101, 85, 2, 107000, 0, 0, 4130020, 1, 2),\n+  (1, 1060102, 85, 2, 107000, 0, 0, 4130020, 1, 2),\n+  (1, 1061118, 85, 2, 130000, 0, 0, 4130020, 1, 2),\n+  (1, 1061119, 85, 2, 130000, 0, 0, 4130020, 1, 2),\n+  (1, 1061120, 85, 2, 130000, 0, 0, 4130020, 1, 2),\n+  (1, 1060109, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1060110, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1060111, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1061121, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1061122, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1061123, 95, 2, 138000, 0, 0, 4130020, 1, 2),\n+  (1, 1050080, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1050081, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1050082, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1050083, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1051077, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1051078, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1051079, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1051080, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (1, 1052075, 105, 3, 352000, 0, 0, 4130021, 1, 3),\n+  (1, 1052160, 115, 3, 418000, 0, 0, 4130021, 1, 3),\n+  (1, 1052155, 115, 3, 418000, 0, 0, 4130021, 1, 3),\n+  (1, 1072132, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (1, 1072133, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (1, 1072134, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (1, 1072135, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (1, 1072147, 55, 1, 39000, 0, 0, 4130001, 1, 1),\n+  (1, 1072148, 55, 1, 39000, 0, 0, 4130001, 1, 1),\n+  (1, 1072149, 55, 1, 39000, 0, 0, 4130001, 1, 1),\n+  (1, 1072154, 65, 1, 47000, 0, 0, 4130001, 1, 1),\n+  (1, 1072155, 65, 1, 47000, 0, 0, 4130001, 1, 1),\n+  (1, 1072156, 65, 1, 47000, 0, 0, 4130001, 1, 1),\n+  (1, 1072210, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (1, 1072211, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (1, 1072212, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (1, 1072196, 85, 2, 115000, 0, 0, 4130001, 1, 2),\n+  (1, 1072197, 85, 2, 115000, 0, 0, 4130001, 1, 2),\n+  (1, 1072198, 85, 2, 115000, 0, 0, 4130001, 1, 2),\n+  (1, 1072220, 95, 2, 138000, 0, 0, 4130001, 1, 2),\n+  (1, 1072221, 95, 2, 138000, 0, 0, 4130001, 1, 2),\n+  (1, 1072222, 95, 2, 138000, 0, 0, 4130001, 1, 2),\n+  (1, 1072273, 105, 3, 231000, 0, 0, 4130001, 1, 3),\n+  (1, 1072361, 115, 3, 264000, 0, 0, 4130001, 1, 3),\n+  (1, 1072355, 115, 3, 264000, 0, 0, 4130001, 1, 3),\n+  (1, 1082009, 45, 1, 50000, 0, 0, 4130000, 1, 1),\n+  (1, 1082010, 45, 1, 55000, 0, 0, 4130000, 1, 1),\n+  (1, 1082011, 45, 1, 60000, 0, 0, 4130000, 1, 1),\n+  (1, 1082059, 55, 1, 66000, 0, 0, 4130000, 1, 1),\n+  (1, 1082060, 55, 1, 71000, 0, 0, 4130000, 1, 1),\n+  (1, 1082061, 55, 1, 77000, 0, 0, 4130000, 1, 1),\n+  (1, 1082103, 65, 1, 82000, 0, 0, 4130000, 1, 1),\n+  (1, 1082104, 65, 1, 88000, 0, 0, 4130000, 1, 1),\n+  (1, 1082105, 65, 1, 93000, 0, 0, 4130000, 1, 1),\n+  (1, 1082114, 75, 2, 161000, 0, 0, 4130000, 1, 2),\n+  (1, 1082115, 75, 2, 165000, 0, 0, 4130000, 1, 2),\n+  (1, 1082116, 75, 2, 168000, 0, 0, 4130000, 1, 2),\n+  (1, 1082117, 75, 2, 168000, 0, 0, 4130000, 1, 2),\n+  (1, 1082128, 85, 2, 184000, 0, 0, 4130000, 1, 2),\n+  (1, 1082129, 85, 2, 188000, 0, 0, 4130000, 1, 2),\n+  (1, 1082130, 85, 2, 191000, 0, 0, 4130000, 1, 2),\n+  (1, 1082139, 95, 2, 207000, 0, 0, 4130000, 1, 2),\n+  (1, 1082140, 95, 2, 210000, 0, 0, 4130000, 1, 2),\n+  (1, 1082141, 95, 2, 214000, 0, 0, 4130000, 1, 2),\n+  (1, 1082168, 105, 3, 330000, 0, 0, 4130000, 1, 3),\n+  (1, 1082239, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (1, 1082234, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (1, 1092004, 45, 1, 82000, 0, 0, 4130022, 1, 1),\n+  (1, 1092009, 55, 1, 99000, 0, 0, 4130022, 1, 1),\n+  (1, 1092010, 55, 1, 104000, 0, 0, 4130022, 1, 1),\n+  (1, 1092011, 55, 1, 104000, 0, 0, 4130022, 1, 1),\n+  (1, 1092015, 65, 1, 110000, 0, 0, 4130022, 1, 1),\n+  (1, 1092016, 65, 1, 115000, 0, 0, 4130022, 1, 1),\n+  (1, 1092017, 65, 1, 115000, 0, 0, 4130022, 1, 1),\n+  (1, 1092023, 75, 2, 168000, 0, 0, 4130022, 1, 2),\n+  (1, 1092024, 75, 2, 176000, 0, 0, 4130022, 1, 2),\n+  (1, 1092025, 75, 2, 176000, 0, 0, 4130022, 1, 2),\n+  (1, 1092026, 85, 2, 184000, 0, 0, 4130022, 1, 2),\n+  (1, 1092027, 85, 2, 191000, 0, 0, 4130022, 1, 2),\n+  (1, 1092028, 85, 2, 191000, 0, 0, 4130022, 1, 2),\n+  (1, 1092036, 95, 2, 199000, 0, 0, 4130022, 1, 2),\n+  (1, 1092037, 95, 2, 207000, 0, 0, 4130022, 1, 2),\n+  (1, 1092038, 95, 2, 214000, 0, 0, 4130022, 1, 2),\n+  (1, 1092060, 105, 3, 231000, 0, 0, 4130022, 1, 3),\n+  (1, 1092058, 115, 3, 385000, 0, 0, 4130022, 1, 3),\n+  (1, 1302010, 45, 1, 66000, 0, 0, 4130002, 1, 1),\n+  (1, 1312008, 45, 1, 77000, 0, 0, 4130003, 1, 1),\n+  (1, 1322017, 45, 1, 77000, 0, 0, 4130004, 1, 1),\n+  (1, 1402003, 45, 1, 110000, 0, 0, 4130005, 1, 1),\n+  (1, 1412003, 45, 1, 77000, 0, 0, 4130006, 1, 1),\n+  (1, 1422005, 45, 1, 82000, 0, 0, 4130007, 1, 1),\n+  (1, 1432004, 45, 1, 82000, 0, 0, 4130008, 1, 1),\n+  (1, 1442005, 45, 1, 82000, 0, 0, 4130009, 1, 1),\n+  (1, 1302011, 55, 1, 82000, 0, 0, 4130002, 1, 1),\n+  (1, 1312009, 55, 1, 104000, 0, 0, 4130003, 1, 1),\n+  (1, 1322018, 55, 1, 104000, 0, 0, 4130004, 1, 1),\n+  (1, 1402011, 55, 1, 126000, 0, 0, 4130005, 1, 1),\n+  (1, 1412007, 55, 1, 104000, 0, 0, 4130006, 1, 1),\n+  (1, 1422009, 55, 1, 104000, 0, 0, 4130007, 1, 1),\n+  (1, 1432006, 55, 1, 104000, 0, 0, 4130008, 1, 1),\n+  (1, 1442010, 55, 1, 137000, 0, 0, 4130009, 1, 1),\n+  (1, 1302012, 65, 1, 137000, 0, 0, 4130002, 1, 1),\n+  (1, 1312010, 65, 1, 165000, 0, 0, 4130003, 1, 1),\n+  (1, 1322019, 65, 1, 137000, 0, 0, 4130004, 1, 1),\n+  (1, 1402012, 65, 1, 143000, 0, 0, 4130005, 1, 1),\n+  (1, 1412008, 65, 1, 137000, 0, 0, 4130006, 1, 1),\n+  (1, 1422010, 65, 1, 137000, 0, 0, 4130007, 1, 1),\n+  (1, 1432007, 65, 1, 137000, 0, 0, 4130008, 1, 1),\n+  (1, 1442008, 65, 1, 165000, 0, 0, 4130009, 1, 1),\n+  (1, 1322020, 70, 1, 165000, 0, 0, 4130004, 1, 1),\n+  (1, 1302018, 75, 2, 231000, 0, 0, 4130002, 1, 2),\n+  (1, 1312011, 75, 2, 269000, 0, 0, 4130003, 1, 2),\n+  (1, 1322028, 75, 2, 269000, 0, 0, 4130004, 1, 2),\n+  (1, 1402004, 75, 2, 231000, 0, 0, 4130005, 1, 2),\n+  (1, 1402015, 75, 2, 231000, 0, 0, 4130005, 1, 2),\n+  (1, 1412009, 75, 2, 238000, 0, 0, 4130006, 1, 2),\n+  (1, 1422012, 75, 2, 238000, 0, 0, 4130007, 1, 2),\n+  (1, 1432010, 75, 2, 238000, 0, 0, 4130008, 1, 2),\n+  (1, 1442019, 75, 2, 269000, 0, 0, 4130009, 1, 2),\n+  (1, 1302023, 85, 2, 269000, 0, 0, 4130002, 1, 2),\n+  (1, 1312015, 85, 2, 308000, 0, 0, 4130003, 1, 2),\n+  (1, 1322029, 85, 2, 308000, 0, 0, 4130004, 1, 2),\n+  (1, 1402005, 85, 2, 308000, 0, 0, 4130005, 1, 2),\n+  (1, 1402016, 85, 2, 308000, 0, 0, 4130005, 1, 2),\n+  (1, 1412010, 85, 2, 284000, 0, 0, 4130006, 1, 2),\n+  (1, 1422013, 85, 2, 284000, 0, 0, 4130007, 1, 2),\n+  (1, 1432011, 85, 2, 284000, 0, 0, 4130008, 1, 2),\n+  (1, 1442020, 85, 2, 346000, 0, 0, 4130009, 1, 2),\n+  (1, 1302056, 95, 2, 369000, 0, 0, 4130002, 1, 2),\n+  (1, 1312030, 95, 2, 361000, 0, 0, 4130003, 1, 2),\n+  (1, 1322045, 95, 2, 361000, 0, 0, 4130004, 1, 2),\n+  (1, 1402035, 95, 2, 361000, 0, 0, 4130005, 1, 2),\n+  (1, 1412021, 95, 2, 377000, 0, 0, 4130006, 1, 2),\n+  (1, 1422027, 95, 2, 346000, 0, 0, 4130007, 1, 2),\n+  (1, 1432030, 95, 2, 377000, 0, 0, 4130008, 1, 2),\n+  (1, 1442044, 95, 2, 361000, 0, 0, 4130009, 1, 2),\n+  (1, 1302059, 105, 3, 605000, 0, 0, 4130002, 1, 3),\n+  (1, 1312031, 105, 3, 583000, 0, 0, 4130003, 1, 3),\n+  (1, 1322052, 105, 3, 528000, 0, 0, 4130004, 1, 3),\n+  (1, 1402036, 105, 3, 605000, 0, 0, 4130005, 1, 3),\n+  (1, 1412026, 105, 3, 572000, 0, 0, 4130006, 1, 3),\n+  (1, 1422028, 105, 3, 561000, 0, 0, 4130007, 1, 3),\n+  (1, 1432038, 105, 3, 583000, 0, 0, 4130008, 1, 3),\n+  (1, 1442045, 105, 3, 627000, 0, 0, 4130009, 1, 3),\n+  (1, 1302086, 115, 3, 748000, 0, 0, 4130002, 1, 3),\n+  (1, 1312038, 115, 3, 638000, 0, 0, 4130003, 1, 3),\n+  (1, 1322061, 115, 3, 539000, 0, 0, 4130004, 1, 3),\n+  (1, 1402047, 115, 3, 715000, 0, 0, 4130005, 1, 3),\n+  (1, 1412034, 115, 3, 715000, 0, 0, 4130006, 1, 3),\n+  (1, 1422038, 115, 3, 616000, 0, 0, 4130007, 1, 3),\n+  (1, 1432049, 115, 3, 627000, 0, 0, 4130008, 1, 3),\n+  (1, 1442067, 115, 3, 682000, 0, 0, 4130009, 1, 3),\n+  (1, 1302081, 115, 3, 748000, 0, 0, 4130002, 1, 3),\n+  (1, 1312037, 115, 3, 638000, 0, 0, 4130003, 1, 3),\n+  (1, 1322060, 115, 3, 539000, 0, 0, 4130004, 1, 3),\n+  (1, 1402046, 115, 3, 715000, 0, 0, 4130005, 1, 3),\n+  (1, 1412033, 115, 3, 715000, 0, 0, 4130006, 1, 3),\n+  (1, 1422037, 115, 3, 616000, 0, 0, 4130007, 1, 3),\n+  (1, 1432047, 115, 3, 627000, 0, 0, 4130008, 1, 3),\n+  (1, 1442063, 115, 3, 682000, 0, 0, 4130009, 1, 3),\n+  (2, 1002215, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (2, 1002216, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (2, 1002217, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (2, 1002218, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (2, 1002242, 55, 1, 28000, 0, 0, 4130018, 1, 1),\n+  (2, 1002243, 55, 1, 28000, 0, 0, 4130018, 1, 1),\n+  (2, 1002244, 55, 1, 28000, 0, 0, 4130018, 1, 1),\n+  (2, 1002245, 55, 1, 28000, 0, 0, 4130018, 1, 1),\n+  (2, 1002246, 55, 1, 28000, 0, 0, 4130018, 1, 1),\n+  (2, 1002252, 65, 1, 44000, 0, 0, 4130018, 1, 1),\n+  (2, 1002253, 65, 1, 44000, 0, 0, 4130018, 1, 1),\n+  (2, 1002254, 65, 1, 44000, 0, 0, 4130018, 1, 1),\n+  (2, 1002271, 75, 2, 73000, 0, 0, 4130018, 1, 2),\n+  (2, 1002272, 75, 2, 73000, 0, 0, 4130018, 1, 2),\n+  (2, 1002273, 75, 2, 73000, 0, 0, 4130018, 1, 2),\n+  (2, 1002274, 75, 2, 73000, 0, 0, 4130018, 1, 2),\n+  (2, 1002363, 85, 2, 84000, 0, 0, 4130018, 1, 2),\n+  (2, 1002364, 85, 2, 84000, 0, 0, 4130018, 1, 2),\n+  (2, 1002365, 85, 2, 84000, 0, 0, 4130018, 1, 2),\n+  (2, 1002366, 85, 2, 84000, 0, 0, 4130018, 1, 2),\n+  (2, 1002398, 95, 2, 96000, 0, 0, 4130018, 1, 2),\n+  (2, 1002399, 95, 2, 96000, 0, 0, 4130018, 1, 2),\n+  (2, 1002400, 95, 2, 96000, 0, 0, 4130018, 1, 2),\n+  (2, 1002401, 95, 2, 96000, 0, 0, 4130018, 1, 2),\n+  (2, 1002773, 105, 3, 165000, 0, 0, 4130018, 1, 3),\n+  (2, 1002791, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (2, 1002777, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (2, 1050045, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1050046, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1050047, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1050048, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1050049, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1051030, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1051031, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1051032, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1051033, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1051034, 43, 1, 50000, 0, 0, 4130021, 1, 1),\n+  (2, 1050053, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1050054, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1050055, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1050056, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1051044, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1051045, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1051046, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1051047, 53, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (2, 1050067, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1050068, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1050069, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1050070, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1051052, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1051053, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1051054, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1051055, 63, 1, 66000, 0, 0, 4130021, 1, 1),\n+  (2, 1050072, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1050073, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1050074, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1051056, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1051057, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1051058, 73, 2, 123000, 0, 0, 4130021, 1, 2),\n+  (2, 1050092, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1050093, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1050094, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1050095, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1051094, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1051095, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1051096, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1051097, 83, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (2, 1050102, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1050103, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1050104, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1050105, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1051101, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1051102, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1051103, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1051104, 93, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (2, 1052076, 103, 3, 319000, 0, 0, 4130021, 1, 3),\n+  (2, 1052161, 115, 3, 374000, 0, 0, 4130021, 1, 3),\n+  (2, 1052156, 115, 3, 374000, 0, 0, 4130021, 1, 3),\n+  (2, 1072140, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (2, 1072141, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (2, 1072142, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (2, 1072143, 45, 1, 30000, 0, 0, 4130001, 1, 1),\n+  (2, 1072136, 55, 1, 33000, 0, 0, 4130001, 1, 1),\n+  (2, 1072137, 55, 1, 33000, 0, 0, 4130001, 1, 1),\n+  (2, 1072138, 55, 1, 33000, 0, 0, 4130001, 1, 1),\n+  (2, 1072139, 55, 1, 33000, 0, 0, 4130001, 1, 1),\n+  (2, 1072157, 65, 1, 44000, 0, 0, 4130001, 1, 1),\n+  (2, 1072158, 65, 1, 44000, 0, 0, 4130001, 1, 1),\n+  (2, 1072159, 65, 1, 44000, 0, 0, 4130001, 1, 1),\n+  (2, 1072160, 65, 1, 44000, 0, 0, 4130001, 1, 1),\n+  (2, 1072177, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n+  (2, 1072178, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n+  (2, 1072179, 75, 2, 77000, 0, 0, 4130001, 1, 2),\n+  (2, 1072206, 85, 2, 92000, 0, 0, 4130001, 1, 2),\n+  (2, 1072207, 85, 2, 92000, 0, 0, 4130001, 1, 2),\n+  (2, 1072208, 85, 2, 92000, 0, 0, 4130001, 1, 2),\n+  (2, 1072209, 85, 2, 92000, 0, 0, 4130001, 1, 2),\n+  (2, 1072223, 95, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (2, 1072224, 95, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (2, 1072225, 95, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (2, 1072226, 95, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (2, 1072268, 105, 3, 198000, 0, 0, 4130001, 1, 3),\n+  (2, 1072362, 115, 3, 242000, 0, 0, 4130001, 1, 3),\n+  (2, 1072356, 115, 3, 242000, 0, 0, 4130001, 1, 3),\n+  (2, 1082080, 45, 1, 55000, 0, 0, 4130000, 1, 1),\n+  (2, 1082081, 45, 1, 44000, 0, 0, 4130000, 1, 1),\n+  (2, 1082082, 45, 1, 50000, 0, 0, 4130000, 1, 1),\n+  (2, 1082086, 55, 1, 58000, 0, 0, 4130000, 1, 1),\n+  (2, 1082087, 55, 1, 63000, 0, 0, 4130000, 1, 1),\n+  (2, 1082088, 55, 1, 69000, 0, 0, 4130000, 1, 1),\n+  (2, 1082098, 65, 1, 77000, 0, 0, 4130000, 1, 1),\n+  (2, 1082099, 65, 1, 80000, 0, 0, 4130000, 1, 1),\n+  (2, 1082100, 65, 1, 82000, 0, 0, 4130000, 1, 1),\n+  (2, 1082121, 75, 2, 153000, 0, 0, 4130000, 1, 2),\n+  (2, 1082122, 75, 2, 157000, 0, 0, 4130000, 1, 2),\n+  (2, 1082123, 75, 2, 161000, 0, 0, 4130000, 1, 2),\n+  (2, 1082131, 85, 2, 176000, 0, 0, 4130000, 1, 2),\n+  (2, 1082132, 85, 2, 180000, 0, 0, 4130000, 1, 2),\n+  (2, 1082133, 85, 2, 180000, 0, 0, 4130000, 1, 2),\n+  (2, 1082134, 85, 2, 184000, 0, 0, 4130000, 1, 2),\n+  (2, 1082151, 95, 2, 199000, 0, 0, 4130000, 1, 2),\n+  (2, 1082152, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (2, 1082153, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (2, 1082154, 95, 2, 207000, 0, 0, 4130000, 1, 2),\n+  (2, 1082164, 105, 3, 330000, 0, 0, 4130000, 1, 3),\n+  (2, 1082240, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (2, 1082235, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (2, 1092057, 115, 3, 385000, 0, 0, 4130022, 1, 3),\n+  (2, 1372007, 43, 1, 110000, 0, 0, 4130010, 1, 1),\n+  (2, 1382006, 50, 1, 82000, 0, 0, 4130011, 1, 1),\n+  (2, 1372014, 53, 1, 126000, 0, 0, 4130010, 1, 1),\n+  (2, 1382007, 60, 1, 110000, 0, 0, 4130011, 1, 1),\n+  (2, 1372015, 63, 1, 143000, 0, 0, 4130010, 1, 1),\n+  (2, 1382010, 70, 1, 137000, 0, 0, 4130011, 1, 1),\n+  (2, 1372016, 73, 2, 223000, 0, 0, 4130010, 1, 2),\n+  (2, 1382008, 80, 2, 238000, 0, 0, 4130011, 1, 2),\n+  (2, 1372009, 83, 2, 250000, 0, 0, 4130010, 1, 2),\n+  (2, 1382035, 90, 2, 292000, 0, 0, 4130011, 1, 2),\n+  (2, 1372010, 93, 2, 277000, 0, 0, 4130010, 1, 2),\n+  (2, 1372032, 103, 3, 506000, 0, 0, 4130010, 1, 3),\n+  (2, 1382036, 105, 3, 517000, 0, 0, 4130011, 1, 3),\n+  (2, 1372045, 115, 3, 561000, 0, 0, 4130010, 1, 3),\n+  (2, 1382059, 115, 3, 572000, 0, 0, 4130011, 1, 3),\n+  (2, 1372044, 115, 3, 561000, 0, 0, 4130010, 1, 3),\n+  (2, 1382057, 115, 3, 572000, 0, 0, 4130011, 1, 3),\n+  (4, 1002211, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (4, 1002212, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (4, 1002213, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (4, 1002214, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (4, 1002267, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (4, 1002268, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (4, 1002269, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (4, 1002270, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (4, 1002286, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (4, 1002287, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (4, 1002288, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (4, 1002289, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (4, 1002275, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (4, 1002276, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (4, 1002277, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (4, 1002278, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (4, 1002402, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (4, 1002403, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (4, 1002404, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (4, 1002405, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (4, 1002406, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (4, 1002407, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (4, 1002408, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (4, 1002547, 105, 3, 165000, 0, 0, 4130018, 1, 3),\n+  (4, 1002792, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (4, 1002778, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (4, 1050051, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (4, 1050052, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (4, 1051037, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (4, 1051038, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (4, 1051039, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (4, 1050058, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1050059, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1050060, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1051041, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1051042, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1051043, 55, 1, 58000, 0, 0, 4130021, 1, 1),\n+  (4, 1050061, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1050062, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1050063, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1050064, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1051062, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1051063, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1051064, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1051065, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (4, 1050075, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1050076, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1050077, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1050078, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1051066, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1051067, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1051068, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1051069, 75, 2, 107000, 0, 0, 4130021, 1, 2),\n+  (4, 1050088, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1050089, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1050090, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1050091, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1051082, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1051083, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1051084, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1051085, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (4, 1050106, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1050107, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1050108, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1051105, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1051106, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1051107, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (4, 1052071, 105, 3, 330000, 0, 0, 4130021, 1, 3),\n+  (4, 1052162, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (4, 1052157, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (4, 1072122, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (4, 1072123, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (4, 1072124, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (4, 1072125, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (4, 1072144, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (4, 1072145, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (4, 1072146, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (4, 1072164, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (4, 1072165, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (4, 1072166, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (4, 1072167, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (4, 1072182, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (4, 1072183, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (4, 1072184, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (4, 1072185, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (4, 1072203, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (4, 1072204, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (4, 1072205, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (4, 1072227, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (4, 1072228, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (4, 1072229, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (4, 1072269, 105, 3, 198000, 0, 0, 4130001, 1, 3),\n+  (4, 1072363, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n+  (4, 1072357, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n+  (4, 1082083, 45, 1, 58000, 0, 0, 4130000, 1, 1),\n+  (4, 1082084, 45, 1, 47000, 0, 0, 4130000, 1, 1),\n+  (4, 1082085, 45, 1, 52000, 0, 0, 4130000, 1, 1),\n+  (4, 1082089, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n+  (4, 1082090, 55, 1, 66000, 0, 0, 4130000, 1, 1),\n+  (4, 1082091, 55, 1, 71000, 0, 0, 4130000, 1, 1),\n+  (4, 1082106, 65, 1, 77000, 0, 0, 4130000, 1, 1),\n+  (4, 1082107, 65, 1, 82000, 0, 0, 4130000, 1, 1),\n+  (4, 1082108, 65, 1, 88000, 0, 0, 4130000, 1, 1),\n+  (4, 1082109, 75, 2, 153000, 0, 0, 4130000, 1, 2),\n+  (4, 1082110, 75, 2, 157000, 0, 0, 4130000, 1, 2),\n+  (4, 1082111, 75, 2, 157000, 0, 0, 4130000, 1, 2),\n+  (4, 1082112, 75, 2, 161000, 0, 0, 4130000, 1, 2),\n+  (4, 1082125, 85, 2, 176000, 0, 0, 4130000, 1, 2),\n+  (4, 1082126, 85, 2, 180000, 0, 0, 4130000, 1, 2),\n+  (4, 1082127, 85, 2, 184000, 0, 0, 4130000, 1, 2),\n+  (4, 1082158, 95, 2, 199000, 0, 0, 4130000, 1, 2),\n+  (4, 1082159, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (4, 1082160, 95, 2, 207000, 0, 0, 4130000, 1, 2),\n+  (4, 1082163, 105, 3, 330000, 0, 0, 4130000, 1, 3),\n+  (4, 1082241, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (4, 1082236, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (4, 1452008, 45, 1, 110000, 0, 0, 4130012, 1, 1),\n+  (4, 1462007, 45, 1, 93000, 0, 0, 4130013, 1, 1),\n+  (4, 1452004, 55, 1, 137000, 0, 0, 4130012, 1, 1),\n+  (4, 1462008, 55, 1, 132000, 0, 0, 4130013, 1, 1),\n+  (4, 1452009, 65, 1, 165000, 0, 0, 4130012, 1, 1),\n+  (4, 1452010, 65, 1, 165000, 0, 0, 4130012, 1, 1),\n+  (4, 1452011, 65, 1, 165000, 0, 0, 4130012, 1, 1),\n+  (4, 1462009, 65, 1, 165000, 0, 0, 4130013, 1, 1),\n+  (4, 1452012, 75, 2, 269000, 0, 0, 4130012, 1, 2),\n+  (4, 1452013, 75, 2, 269000, 0, 0, 4130012, 1, 2),\n+  (4, 1452014, 75, 2, 269000, 0, 0, 4130012, 1, 2),\n+  (4, 1452015, 75, 2, 269000, 0, 0, 4130012, 1, 2),\n+  (4, 1462010, 75, 2, 269000, 0, 0, 4130013, 1, 2),\n+  (4, 1462011, 75, 2, 269000, 0, 0, 4130013, 1, 2),\n+  (4, 1462012, 75, 2, 269000, 0, 0, 4130013, 1, 2),\n+  (4, 1462013, 75, 2, 269000, 0, 0, 4130013, 1, 2),\n+  (4, 1452017, 85, 2, 308000, 0, 0, 4130012, 1, 2),\n+  (4, 1462018, 85, 2, 308000, 0, 0, 4130013, 1, 2),\n+  (4, 1452019, 95, 2, 346000, 0, 0, 4130012, 1, 2),\n+  (4, 1452020, 95, 2, 346000, 0, 0, 4130012, 1, 2),\n+  (4, 1452021, 95, 2, 346000, 0, 0, 4130012, 1, 2),\n+  (4, 1462015, 95, 2, 346000, 0, 0, 4130013, 1, 2),\n+  (4, 1462016, 95, 2, 346000, 0, 0, 4130013, 1, 2),\n+  (4, 1462017, 95, 2, 346000, 0, 0, 4130013, 1, 2),\n+  (4, 1452044, 105, 3, 550000, 0, 0, 4130012, 1, 3),\n+  (4, 1462039, 105, 3, 550000, 0, 0, 4130013, 1, 3),\n+  (4, 1452059, 115, 3, 605000, 0, 0, 4130012, 1, 3),\n+  (4, 1462051, 115, 3, 605000, 0, 0, 4130013, 1, 3),\n+  (4, 1452057, 115, 3, 605000, 0, 0, 4130012, 1, 3),\n+  (4, 1462050, 115, 3, 605000, 0, 0, 4130013, 1, 3),\n+  (8, 1002207, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (8, 1002208, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (8, 1002209, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (8, 1002210, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (8, 1002247, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (8, 1002248, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (8, 1002249, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (8, 1002281, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (8, 1002282, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (8, 1002283, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (8, 1002284, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (8, 1002285, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (8, 1002327, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (8, 1002328, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (8, 1002329, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (8, 1002330, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (8, 1002323, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (8, 1002324, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (8, 1002325, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (8, 1002326, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (8, 1002380, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (8, 1002381, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (8, 1002382, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (8, 1002383, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (8, 1002550, 105, 3, 165000, 0, 0, 4130018, 1, 3),\n+  (8, 1002793, 115, 3, 209000, 0, 0, 4130018, 1, 3),\n+  (8, 1002779, 115, 3, 209000, 0, 0, 4130018, 1, 3),\n+  (8, 1040094, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1040095, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1040096, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1040097, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1041077, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1041078, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1041079, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1041080, 45, 1, 41000, 0, 0, 4130019, 1, 1),\n+  (8, 1040098, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1040099, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1040100, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1041094, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1041095, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1041096, 55, 1, 50000, 0, 0, 4130019, 1, 1),\n+  (8, 1040105, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1040106, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1040107, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1041100, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1041101, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1041102, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1041103, 65, 1, 55000, 0, 0, 4130019, 1, 1),\n+  (8, 1040108, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1040109, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1040110, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1041105, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1041106, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1041107, 75, 2, 107000, 0, 0, 4130019, 1, 2),\n+  (8, 1040115, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1040116, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1040117, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1040118, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1041115, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1041116, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1041117, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1041118, 85, 2, 138000, 0, 0, 4130019, 1, 2),\n+  (8, 1060083, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1060084, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1060085, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1060086, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1061076, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1061077, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1061078, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1061079, 45, 1, 33000, 0, 0, 4130020, 1, 1),\n+  (8, 1060087, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1060088, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1060089, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1061093, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1061094, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1061095, 55, 1, 41000, 0, 0, 4130020, 1, 1),\n+  (8, 1060093, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1060094, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1060095, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1061099, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1061100, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1061101, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1061102, 65, 1, 50000, 0, 0, 4130020, 1, 1),\n+  (8, 1060097, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1060098, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1060099, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1061104, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1061105, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1061106, 75, 2, 92000, 0, 0, 4130020, 1, 2),\n+  (8, 1060104, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1060105, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1060106, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1060107, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1061114, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1061115, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1061116, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1061117, 85, 2, 123000, 0, 0, 4130020, 1, 2),\n+  (8, 1050096, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1050097, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1050098, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1050099, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1051090, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1051091, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1051092, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1051093, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (8, 1052072, 105, 3, 330000, 0, 0, 4130021, 1, 3),\n+  (8, 1052163, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (8, 1052158, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (8, 1072128, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (8, 1072129, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (8, 1072130, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (8, 1072131, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (8, 1072150, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (8, 1072151, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (8, 1072152, 55, 1, 39000, 0, 0, 4130001, 1, 1),\n+  (8, 1072161, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (8, 1072162, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (8, 1072163, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (8, 1072172, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (8, 1072173, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (8, 1072174, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (8, 1072192, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (8, 1072193, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (8, 1072194, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (8, 1072195, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (8, 1072213, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (8, 1072214, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (8, 1072215, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (8, 1072216, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (8, 1072272, 105, 3, 215000, 0, 0, 4130001, 1, 3),\n+  (8, 1072364, 115, 3, 248000, 0, 0, 4130001, 1, 3),\n+  (8, 1072358, 115, 3, 248000, 0, 0, 4130001, 1, 3),\n+  (8, 1082065, 45, 1, 47000, 0, 0, 4130000, 1, 1),\n+  (8, 1082066, 45, 1, 52000, 0, 0, 4130000, 1, 1),\n+  (8, 1082067, 45, 1, 50000, 0, 0, 4130000, 1, 1),\n+  (8, 1082092, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n+  (8, 1082093, 55, 1, 66000, 0, 0, 4130000, 1, 1),\n+  (8, 1082094, 55, 1, 71000, 0, 0, 4130000, 1, 1),\n+  (8, 1082095, 65, 1, 82000, 0, 0, 4130000, 1, 1),\n+  (8, 1082096, 65, 1, 88000, 0, 0, 4130000, 1, 1),\n+  (8, 1082097, 65, 1, 93000, 0, 0, 4130000, 1, 1),\n+  (8, 1082118, 75, 2, 153000, 0, 0, 4130000, 1, 2),\n+  (8, 1082119, 75, 2, 157000, 0, 0, 4130000, 1, 2),\n+  (8, 1082120, 75, 2, 161000, 0, 0, 4130000, 1, 2),\n+  (8, 1082142, 85, 2, 165000, 0, 0, 4130000, 1, 2),\n+  (8, 1082143, 85, 2, 165000, 0, 0, 4130000, 1, 2),\n+  (8, 1082144, 85, 2, 165000, 0, 0, 4130000, 1, 2),\n+  (8, 1082135, 95, 2, 199000, 0, 0, 4130000, 1, 2),\n+  (8, 1082136, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (8, 1082137, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (8, 1082138, 95, 2, 207000, 0, 0, 4130000, 1, 2),\n+  (8, 1082167, 105, 3, 330000, 0, 0, 4130000, 1, 3),\n+  (8, 1082242, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (8, 1082237, 115, 3, 363000, 0, 0, 4130000, 1, 3),\n+  (8, 1092059, 115, 3, 385000, 0, 0, 4130022, 1, 3),\n+  (8, 1332003, 45, 1, 121000, 0, 0, 4130014, 1, 1),\n+  (8, 1472018, 45, 1, 55000, 0, 0, 4130015, 1, 1),\n+  (8, 1472019, 45, 1, 57000, 0, 0, 4130015, 1, 1),\n+  (8, 1472020, 45, 1, 57000, 0, 0, 4130015, 1, 1),\n+  (8, 1472021, 45, 1, 60000, 0, 0, 4130015, 1, 1),\n+  (8, 1332016, 45, 1, 121000, 0, 0, 4130014, 1, 1),\n+  (8, 1332015, 55, 1, 137000, 0, 0, 4130014, 1, 1),\n+  (8, 1472022, 55, 1, 137000, 0, 0, 4130015, 1, 1),\n+  (8, 1472023, 55, 1, 140000, 0, 0, 4130015, 1, 1),\n+  (8, 1472024, 55, 1, 140000, 0, 0, 4130015, 1, 1),\n+  (8, 1472025, 55, 1, 143000, 0, 0, 4130015, 1, 1),\n+  (8, 1332017, 55, 1, 137000, 0, 0, 4130014, 1, 1),\n+  (8, 1332018, 65, 1, 154000, 0, 0, 4130014, 1, 1),\n+  (8, 1472026, 65, 1, 165000, 0, 0, 4130015, 1, 1),\n+  (8, 1472027, 65, 1, 167000, 0, 0, 4130015, 1, 1),\n+  (8, 1472028, 65, 1, 167000, 0, 0, 4130015, 1, 1),\n+  (8, 1472029, 65, 1, 170000, 0, 0, 4130015, 1, 1),\n+  (8, 1332019, 65, 1, 154000, 0, 0, 4130014, 1, 1),\n+  (8, 1472031, 75, 2, 308000, 0, 0, 4130015, 1, 2),\n+  (8, 1332022, 75, 2, 238000, 0, 0, 4130014, 1, 2),\n+  (8, 1332023, 75, 2, 238000, 0, 0, 4130014, 1, 2),\n+  (8, 1332027, 85, 2, 261000, 0, 0, 4130014, 1, 2),\n+  (8, 1472033, 85, 2, 346000, 0, 0, 4130015, 1, 2),\n+  (8, 1332026, 85, 2, 261000, 0, 0, 4130014, 1, 2),\n+  (8, 1332052, 95, 2, 308000, 0, 0, 4130014, 1, 2),\n+  (8, 1472053, 95, 2, 392000, 0, 0, 4130015, 1, 2),\n+  (8, 1332051, 95, 2, 308000, 0, 0, 4130014, 1, 2),\n+  (8, 1332050, 105, 3, 495000, 0, 0, 4130014, 1, 3),\n+  (8, 1472051, 105, 3, 627000, 0, 0, 4130015, 1, 3),\n+  (8, 1472052, 105, 3, 627000, 0, 0, 4130015, 1, 3),\n+  (8, 1332049, 105, 3, 495000, 0, 0, 4130014, 1, 3),\n+  (8, 1332075, 115, 3, 550000, 0, 0, 4130014, 1, 3),\n+  (8, 1332076, 115, 3, 550000, 0, 0, 4130014, 1, 3),\n+  (8, 1472071, 115, 3, 693000, 0, 0, 4130015, 1, 3),\n+  (8, 1332073, 115, 3, 550000, 0, 0, 4130014, 1, 3),\n+  (8, 1332074, 115, 3, 561000, 0, 0, 4130014, 1, 3),\n+  (8, 1472068, 115, 3, 693000, 0, 0, 4130015, 1, 3),\n+  (16, 1002631, 45, 1, 22000, 0, 0, 4130018, 1, 1),\n+  (16, 1002634, 55, 1, 30000, 0, 0, 4130018, 1, 1),\n+  (16, 1002637, 65, 1, 47000, 0, 0, 4130018, 1, 1),\n+  (16, 1002640, 75, 2, 77000, 0, 0, 4130018, 1, 2),\n+  (16, 1002643, 85, 2, 88000, 0, 0, 4130018, 1, 2),\n+  (16, 1002646, 95, 2, 100000, 0, 0, 4130018, 1, 2),\n+  (16, 1002649, 105, 3, 165000, 0, 0, 4130018, 1, 3),\n+  (16, 1002794, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (16, 1002780, 115, 3, 187000, 0, 0, 4130018, 1, 3),\n+  (16, 1052116, 45, 1, 52000, 0, 0, 4130021, 1, 1),\n+  (16, 1052119, 55, 1, 55000, 0, 0, 4130021, 1, 1),\n+  (16, 1052122, 65, 1, 63000, 0, 0, 4130021, 1, 1),\n+  (16, 1052125, 75, 2, 138000, 0, 0, 4130021, 1, 2),\n+  (16, 1052128, 85, 2, 153000, 0, 0, 4130021, 1, 2),\n+  (16, 1052131, 95, 2, 184000, 0, 0, 4130021, 1, 2),\n+  (16, 1052134, 105, 3, 330000, 0, 0, 4130021, 1, 3),\n+  (16, 1052164, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (16, 1052159, 115, 3, 396000, 0, 0, 4130021, 1, 3),\n+  (16, 1072303, 45, 1, 28000, 0, 0, 4130001, 1, 1),\n+  (16, 1072306, 55, 1, 36000, 0, 0, 4130001, 1, 1),\n+  (16, 1072309, 65, 1, 50000, 0, 0, 4130001, 1, 1),\n+  (16, 1072312, 75, 2, 84000, 0, 0, 4130001, 1, 2),\n+  (16, 1072315, 85, 2, 107000, 0, 0, 4130001, 1, 2),\n+  (16, 1072318, 95, 2, 130000, 0, 0, 4130001, 1, 2),\n+  (16, 1072321, 105, 3, 198000, 0, 0, 4130001, 1, 3),\n+  (16, 1072365, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n+  (16, 1072359, 115, 3, 220000, 0, 0, 4130001, 1, 3),\n+  (16, 1082198, 45, 1, 47000, 0, 0, 4130000, 1, 1),\n+  (16, 1082201, 55, 1, 60000, 0, 0, 4130000, 1, 1),\n+  (16, 1082204, 65, 1, 82000, 0, 0, 4130000, 1, 1),\n+  (16, 1082207, 75, 2, 153000, 0, 0, 4130000, 1, 2),\n+  (16, 1082210, 85, 2, 176000, 0, 0, 4130000, 1, 2),\n+  (16, 1082213, 95, 2, 203000, 0, 0, 4130000, 1, 2),\n+  (16, 1082216, 105, 3, 330000, 0, 0, 4130000, 1, 3),\n+  (16, 1082243, 115, 3, 369000, 0, 0, 4130000, 1, 3),\n+  (16, 1082238, 115, 3, 369000, 0, 0, 4130000, 1, 3),\n+  (16, 1482007, 45, 1, 71000, 0, 0, 4130016, 1, 1),\n+  (16, 1492007, 45, 1, 77000, 0, 0, 4130017, 1, 1),\n+  (16, 1482008, 55, 1, 132000, 0, 0, 4130016, 1, 1),\n+  (16, 1492008, 55, 1, 137000, 0, 0, 4130017, 1, 1),\n+  (16, 1482009, 65, 1, 165000, 0, 0, 4130016, 1, 1),\n+  (16, 1492009, 65, 1, 170000, 0, 0, 4130017, 1, 1),\n+  (16, 1482010, 75, 2, 269000, 0, 0, 4130016, 1, 2),\n+  (16, 1492010, 75, 2, 269000, 0, 0, 4130017, 1, 2),\n+  (16, 1482011, 85, 2, 300000, 0, 0, 4130016, 1, 2),\n+  (16, 1492011, 85, 2, 308000, 0, 0, 4130017, 1, 2),\n+  (16, 1482012, 95, 2, 338000, 0, 0, 4130016, 1, 2),\n+  (16, 1492012, 95, 2, 346000, 0, 0, 4130017, 1, 2),\n+  (16, 1482013, 105, 3, 561000, 0, 0, 4130016, 1, 3),\n+  (16, 1492013, 105, 3, 572000, 0, 0, 4130017, 1, 3),\n+  (16, 1482024, 115, 3, 616000, 0, 0, 4130016, 1, 3),\n+  (16, 1492025, 115, 3, 627000, 0, 0, 4130017, 1, 3),\n+  (16, 1482023, 115, 3, 616000, 0, 0, 4130016, 1, 3),\n+  (16, 1492023, 115, 3, 627000, 0, 0, 4130017, 1, 3);\n \n INSERT IGNORE INTO `makerrecipedata` (`itemid`, `req_item`, `count`) VALUES\n   (4250000, 4021007, 1),\n@@ -2858,4 +2858,3 @@ INSERT IGNORE INTO `makerrewarddata` (`itemid`, `rewardid`, `quantity`, `prob`)\n   (4251302, 4251301, 9, 4),\n   (4251402, 4251402, 1, 1),\n   (4251402, 4251401, 9, 4);\n-"}, {"sha": "da2278abd52f5b569f8b51b8b575c3cb948f96d4", "filename": "tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleItemInformationProvider.java", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleItemInformationProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleItemInformationProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleItemInformationProvider.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,201 @@\n+/*\n+ This file is part of the OdinMS Maple Story Server\n+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+ Matthias Butz <matze@odinms.de>\n+ Jan Christian Meyer <vimes@odinms.de>\n+\n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+\n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mapleskillmakerfetcher;\n+\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+import provider.MapleData;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataFileEntry;\n+import provider.MapleDataProvider;\n+import provider.MapleDataProviderFactory;\n+import provider.MapleDataTool;\n+/**\n+ *\n+ * @author Ronan\n+ *\n+ */\n+public class MapleItemInformationProvider {\n+    private final static String wzPath = \"../../wz\";\n+    \n+    private static MapleItemInformationProvider instance = null;\n+    protected MapleDataProvider itemData;\n+    protected MapleDataProvider equipData;\n+    protected MapleDataProvider stringData;\n+    protected MapleData eqpStringData;\n+    \n+    protected Map<Integer, Map<String, Integer>> equipStatsCache = new HashMap<>();\n+    protected Map<Integer, String> nameCache = new HashMap<>();\n+    \n+    private MapleItemInformationProvider() {\n+        itemData = MapleDataProviderFactory.getDataProvider(new File(wzPath + \"/Item.wz\"));\n+        equipData = MapleDataProviderFactory.getDataProvider(new File(wzPath + \"/Character.wz\"));\n+        stringData = MapleDataProviderFactory.getDataProvider(new File(wzPath + \"/String.wz\"));\n+        eqpStringData = stringData.getData(\"Eqp.img\");\n+    }\n+\n+    public static MapleItemInformationProvider getInstance() {\n+        if (instance == null) {\n+            instance = new MapleItemInformationProvider();\n+        }\n+        return instance;\n+    }\n+\n+    private MapleData getItemData(int itemId) {\n+        MapleData ret = null;\n+        String idStr = \"0\" + String.valueOf(itemId);\n+        MapleDataDirectoryEntry root = itemData.getRoot();\n+        for (MapleDataDirectoryEntry topDir : root.getSubdirectories()) {\n+            for (MapleDataFileEntry iFile : topDir.getFiles()) {\n+                if (iFile.getName().equals(idStr.substring(0, 4) + \".img\")) {\n+                    ret = itemData.getData(topDir.getName() + \"/\" + iFile.getName());\n+                    if (ret == null) {\n+                        return null;\n+                    }\n+                    ret = ret.getChildByPath(idStr);\n+                    return ret;\n+                } else if (iFile.getName().equals(idStr.substring(1) + \".img\")) {\n+                    return itemData.getData(topDir.getName() + \"/\" + iFile.getName());\n+                }\n+            }\n+        }\n+        root = equipData.getRoot();\n+        for (MapleDataDirectoryEntry topDir : root.getSubdirectories()) {\n+            for (MapleDataFileEntry iFile : topDir.getFiles()) {\n+                if (iFile.getName().equals(idStr + \".img\")) {\n+                    return equipData.getData(topDir.getName() + \"/\" + iFile.getName());\n+                }\n+            }\n+        }\n+        return ret;\n+    }\n+    \n+    public Map<String, Integer> getEquipStats(int itemId) {\n+        if (equipStatsCache.containsKey(itemId)) {\n+            return equipStatsCache.get(itemId);\n+        }\n+        Map<String, Integer> ret = new LinkedHashMap<>();\n+        MapleData item = getItemData(itemId);\n+        if (item == null) {\n+            return null;\n+        }\n+        MapleData info = item.getChildByPath(\"info\");\n+        if (info == null) {\n+            return null;\n+        }\n+        for (MapleData data : info.getChildren()) {\n+            if (data.getName().startsWith(\"inc\")) {\n+                ret.put(data.getName().substring(3), MapleDataTool.getIntConvert(data));\n+            }\n+            /*else if (data.getName().startsWith(\"req\"))\n+             ret.put(data.getName(), MapleDataTool.getInt(data.getName(), info, 0));*/\n+        }\n+        ret.put(\"reqJob\", MapleDataTool.getInt(\"reqJob\", info, 0));\n+        ret.put(\"reqLevel\", MapleDataTool.getInt(\"reqLevel\", info, 0));\n+        ret.put(\"reqDEX\", MapleDataTool.getInt(\"reqDEX\", info, 0));\n+        ret.put(\"reqSTR\", MapleDataTool.getInt(\"reqSTR\", info, 0));\n+        ret.put(\"reqINT\", MapleDataTool.getInt(\"reqINT\", info, 0));\n+        ret.put(\"reqLUK\", MapleDataTool.getInt(\"reqLUK\", info, 0));\n+        ret.put(\"reqPOP\", MapleDataTool.getInt(\"reqPOP\", info, 0));\n+        ret.put(\"cash\", MapleDataTool.getInt(\"cash\", info, 0));\n+        ret.put(\"tuc\", MapleDataTool.getInt(\"tuc\", info, 0));\n+        ret.put(\"cursed\", MapleDataTool.getInt(\"cursed\", info, 0));\n+        ret.put(\"success\", MapleDataTool.getInt(\"success\", info, 0));\n+        ret.put(\"fs\", MapleDataTool.getInt(\"fs\", info, 0));\n+        equipStatsCache.put(itemId, ret);\n+        return ret;\n+    }\n+\n+    private MapleData getStringData(int itemId) {\n+        String cat = \"null\";\n+        MapleData theData;\n+        if ((itemId >= 1010000 && itemId < 1040000) || (itemId >= 1122000 && itemId < 1123000) || (itemId >= 1132000 && itemId < 1133000) || (itemId >= 1142000 && itemId < 1143000)) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Accessory\";\n+        } else if (itemId >= 1000000 && itemId < 1010000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Cap\";\n+        } else if (itemId >= 1102000 && itemId < 1103000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Cape\";\n+        } else if (itemId >= 1040000 && itemId < 1050000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Coat\";\n+        } else if (itemId >= 20000 && itemId < 22000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Face\";\n+        } else if (itemId >= 1080000 && itemId < 1090000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Glove\";\n+        } else if (itemId >= 30000 && itemId < 35000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Hair\";\n+        } else if (itemId >= 1050000 && itemId < 1060000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Longcoat\";\n+        } else if (itemId >= 1060000 && itemId < 1070000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Pants\";\n+        } else if (itemId >= 1802000 && itemId < 1842000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/PetEquip\";\n+        } else if (itemId >= 1112000 && itemId < 1120000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Ring\";\n+        } else if (itemId >= 1092000 && itemId < 1100000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Shield\";\n+        } else if (itemId >= 1070000 && itemId < 1080000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Shoes\";\n+        } else if (itemId >= 1900000 && itemId < 2000000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Taming\";\n+        } else if (itemId >= 1300000 && itemId < 1800000) {\n+            theData = eqpStringData;\n+            cat = \"Eqp/Weapon\";\n+        } else {\n+            return null;\n+        }\n+        if (cat.equalsIgnoreCase(\"null\")) {\n+            return theData.getChildByPath(String.valueOf(itemId));\n+        } else {\n+            return theData.getChildByPath(cat + \"/\" + itemId);\n+        }\n+    }\n+    \n+    public String getName(int itemId) {\n+        if (nameCache.containsKey(itemId)) {\n+            return nameCache.get(itemId);\n+        }\n+        MapleData strings = getStringData(itemId);\n+        if (strings == null) {\n+            return null;\n+        }\n+        String ret = MapleDataTool.getString(\"name\", strings, null);\n+        nameCache.put(itemId, ret);\n+        return ret;\n+    }\n+}"}, {"sha": "e31f2e346e3408f04671a4810ea649890087a685", "filename": "tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleMakerItemEntry.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleMakerItemEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleMakerItemEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleMakerItemEntry.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -46,7 +46,6 @@ public MapleMakerItemEntry(int id, int itemid, int reqLevel, int reqMakerLevel,\n         this.id = id;\n         this.itemid = itemid;\n         this.reqLevel = reqLevel;\n-        //System.out.println(\"id \" + id + \"rq\" + reqLevel);\n         this.reqMakerLevel = reqMakerLevel;\n         this.reqItem = reqItem;\n         this.reqMeso = reqMeso;"}, {"sha": "724c08ee3cde225cc408b0d6a1d6e6ea5d2b66e2", "filename": "tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleSkillMakerFetcher.java", "status": "modified", "additions": 38, "deletions": 4, "changes": 42, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleSkillMakerFetcher.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleSkillMakerFetcher.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/mapleskillmakerfetcher/MapleSkillMakerFetcher.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -21,10 +21,9 @@\n import java.util.ArrayList;\n import java.util.LinkedList;\n import java.util.List;\n+import java.util.Map;\n \n import java.io.*;\n-import static mapleskillmakerfetcher.MapleSkillMakerFetcher.id;\n-\n \n /**\n  * @author RonanLana\n@@ -41,7 +40,7 @@\n     static String username = \"root\";\n     static String password = \"\";\n \n-    static String fileName = \"lib/ItemMake.img.xml\";\n+    static String fileName = \"../../wz/Etc.wz/ItemMake.img.xml\";\n     static String newFile = \"lib/MakerData.sql\";\n \n     static PrintWriter printWriter = null;\n@@ -176,6 +175,7 @@ private static void translateToken(String token) {\n             status -= 1;\n             \n             if(status == 2) {   //close item maker data\n+                generateUpdatedItemFee();   // for equipments, this will try to update reqMeso to be conformant with the client.\n                 makerList.add(new MapleMakerItemEntry(id, itemid, reqLevel, reqMakerLevel, reqItem, reqMeso, reqEquip, catalyst, quantity, tuc, recipeCount, recipeItem, recipeList, randomList));\n                 resetMakerDataFields();\n             } else if(status == 4) {    //close recipe/random item\n@@ -280,6 +280,40 @@ else if(status == 5) {  // inside recipe/random item\n         }\n     }\n     \n+    private static void generateUpdatedItemFee() {\n+        MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n+        float adjPrice = reqMeso;\n+        \n+        if(itemid < 2000000) {\n+            Map<String, Integer> stats = ii.getEquipStats(itemid);\n+            if(stats != null) {\n+                int val = itemid / 100000;\n+                \n+                if(val == 13 || val == 14) {    // is weapon-type\n+                    adjPrice /= 10;\n+                    adjPrice += reqMeso;\n+\n+                    adjPrice /= 1000;\n+                    reqMeso = 1000 * (int) Math.floor(adjPrice);\n+                } else {\n+                    adjPrice /= ((stats.get(\"reqLevel\") >= 108) ? 10 : 11);\n+                    adjPrice += reqMeso;\n+\n+                    adjPrice /= 1000;\n+                    reqMeso = 1000 * (int) Math.ceil(adjPrice);\n+                }\n+            } else {\n+                System.out.println(\"null stats for itemid \" + itemid);\n+            }\n+        } else {\n+            adjPrice /= 10;\n+            adjPrice += reqMeso;\n+\n+            adjPrice /= 1000;\n+            reqMeso = 1000 * (int) Math.ceil(adjPrice);\n+        }\n+    }\n+    \n     private static void WriteMakerTableFile() {\n         printWriter.println(\" # SQL File autogenerated from the MapleSkillMakerFetcher feature by Ronan Lana.\");\n         printWriter.println(\" # Generated data is conformant with the ItemMake.img.xml file used to compile this.\");\n@@ -312,7 +346,7 @@ private static void WriteMakerTableFile() {\n         sb_recipe.append(\";\\r\\n\");\n         \n         sb_reward.setLength(sb_reward.length() - 3);\n-        sb_reward.append(\";\\r\\n\");\n+        sb_reward.append(\";\");\n         \n         printWriter.println(sb_create);\n         printWriter.println(sb_recipe);"}, {"sha": "10ab68219636d6faf90029f5bd485ff3a6648c56", "filename": "tools/MapleSkillMakerFetcher/src/provider/MapleCanvas.java", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleCanvas.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleCanvas.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/MapleCanvas.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,30 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.awt.image.BufferedImage;\n+\n+public interface MapleCanvas {\n+    int getHeight();\n+    int getWidth();\n+    BufferedImage getImage();\n+}"}, {"sha": "4d90a9380442c23c911757c8e49cebc2141cf869", "filename": "tools/MapleSkillMakerFetcher/src/provider/MapleData.java", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleData.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleData.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/MapleData.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,34 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.util.List;\n+import provider.wz.MapleDataType;\n+\n+public interface MapleData extends MapleDataEntity, Iterable<MapleData> {\n+    @Override\n+    public String getName();\n+    public MapleDataType getType();\n+    public List<MapleData> getChildren();\n+    public MapleData getChildByPath(String path);\n+    public Object getData();\n+}"}, {"sha": "cb043e0c945ea92f8e3aaa122e5b00a63c9588c5", "filename": "tools/MapleSkillMakerFetcher/src/provider/MapleDataDirectoryEntry.java", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataDirectoryEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataDirectoryEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/MapleDataDirectoryEntry.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,34 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.util.List;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataDirectoryEntry extends MapleDataEntry {\n+    public List<MapleDataDirectoryEntry> getSubdirectories();\n+    public List<MapleDataFileEntry> getFiles();\n+    public MapleDataEntry getEntry(String name);\n+}"}, {"sha": "03ff77649c8e5acc43bd9dc417bd6a5a5bde9f45", "filename": "tools/MapleSkillMakerFetcher/src/provider/MapleDataEntity.java", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataEntity.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataEntity.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/MapleDataEntity.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,31 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataEntity {\n+    public String getName();\n+    public MapleDataEntity getParent();\n+}"}, {"sha": "62db6d0abeac3165aaa502d4098c15ce9598acab", "filename": "tools/MapleSkillMakerFetcher/src/provider/MapleDataEntry.java", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/MapleDataEntry.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,33 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataEntry extends MapleDataEntity {\n+    public String getName();\n+    public int getSize();\n+    public int getChecksum();\n+    public int getOffset();\n+}"}, {"sha": "902130a612aeb60746ac4fd119b4f88376947472", "filename": "tools/MapleSkillMakerFetcher/src/provider/MapleDataFileEntry.java", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataFileEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataFileEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/MapleDataFileEntry.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,30 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataFileEntry extends MapleDataEntry {\n+    public void setOffset(int offset);\n+}"}, {"sha": "5237b7ac37e4655b807bc6d47ad4bd10a360cc49", "filename": "tools/MapleSkillMakerFetcher/src/provider/MapleDataProvider.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/MapleDataProvider.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,27 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+public interface MapleDataProvider {\n+    MapleData getData(String path);\n+    MapleDataDirectoryEntry getRoot();\n+}"}, {"sha": "5a397d85120e2d1899a67b317f13ee48f0310477", "filename": "tools/MapleSkillMakerFetcher/src/provider/MapleDataProviderFactory.java", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataProviderFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataProviderFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/MapleDataProviderFactory.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,55 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import provider.wz.WZFile;\n+import provider.wz.XMLWZFile;\n+\n+public class MapleDataProviderFactory {\n+    private final static String wzPath = \"../../wz\";\n+\n+    private static MapleDataProvider getWZ(File in, boolean provideImages) {\n+        if (in.getName().toLowerCase().endsWith(\"wz\") && !in.isDirectory()) {\n+            try {\n+                return new WZFile(in, provideImages);\n+            } catch (IOException e) {\n+                throw new RuntimeException(\"Loading WZ File failed\", e);\n+            }\n+        } else {\n+            return new XMLWZFile(in);\n+        }\n+    }\n+\n+    public static MapleDataProvider getDataProvider(File in) {\n+        return getWZ(in, false);\n+    }\n+\n+    public static MapleDataProvider getImageProvidingDataProvider(File in) {\n+        return getWZ(in, true);\n+    }\n+\n+    public static File fileInWZPath(String filename) {\n+        return new File(wzPath, filename);\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "25f4c7f81749a8145359d27437f2d7075c5786c3", "filename": "tools/MapleSkillMakerFetcher/src/provider/MapleDataTool.java", "status": "added", "additions": 145, "deletions": 0, "changes": 145, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataTool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/MapleDataTool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/MapleDataTool.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,145 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.awt.Point;\n+import java.awt.image.BufferedImage;\n+import provider.wz.MapleDataType;\n+\n+public class MapleDataTool {\n+    public static String getString(MapleData data) {\n+        return ((String) data.getData());\n+    }\n+\n+    public static String getString(MapleData data, String def) {\n+        if (data == null || data.getData() == null) {\n+            return def;\n+        } else {\n+            return ((String) data.getData());\n+        }\n+    }\n+\n+    public static String getString(String path, MapleData data) {\n+        return getString(data.getChildByPath(path));\n+    }\n+\n+    public static String getString(String path, MapleData data, String def) {\n+        return getString(data.getChildByPath(path), def);\n+    }\n+\n+    public static double getDouble(MapleData data) {\n+        return ((Double) data.getData()).doubleValue();\n+    }\n+\n+    public static float getFloat(MapleData data) {\n+        return ((Float) data.getData()).floatValue();\n+    }\n+\n+    public static int getInt(MapleData data) {\n+        if (data == null || data.getData() == null) {\n+            return 0;// DEF?\n+        }\n+        return ((Integer) data.getData()).intValue();\n+    }\n+\n+    public static int getInt(String path, MapleData data) {\n+        return getInt(data.getChildByPath(path));\n+    }\n+\n+    public static int getIntConvert(MapleData data) {\n+        if (data.getType() == MapleDataType.STRING) {\n+            return Integer.parseInt(getString(data));\n+        } else {\n+            return getInt(data);\n+        }\n+    }\n+\n+    public static int getIntConvert(String path, MapleData data) {\n+        MapleData d = data.getChildByPath(path);\n+        if (d.getType() == MapleDataType.STRING) {\n+            return Integer.parseInt(getString(d));\n+        } else {\n+            return getInt(d);\n+        }\n+    }\n+\n+    public static int getInt(MapleData data, int def) {\n+        if (data == null || data.getData() == null) {\n+            return  def;\n+        } else if (data.getType() == MapleDataType.STRING) {\n+            return Integer.parseInt(getString(data));\n+        } else {\n+            return ((Integer) data.getData()).intValue();\n+        }\n+    }\n+\n+    public static int getInt(String path, MapleData data, int def) {\n+        return getInt(data.getChildByPath(path), def);\n+    }\n+\n+    public static int getIntConvert(String path, MapleData data, int def) {\n+        MapleData d = data.getChildByPath(path);\n+        if (d == null) {\n+            return def;\n+        }\n+        if (d.getType() == MapleDataType.STRING) {\n+            try {\n+                return Integer.parseInt(getString(d));\n+            } catch (NumberFormatException nfe) {\n+                nfe.printStackTrace();\n+                return def;\n+            }\n+        } else {\n+            return getInt(d, def);\n+        }\n+    }\n+\n+    public static BufferedImage getImage(MapleData data) {\n+        return ((MapleCanvas) data.getData()).getImage();\n+    }\n+\n+    public static Point getPoint(MapleData data) {\n+        return ((Point) data.getData());\n+    }\n+\n+    public static Point getPoint(String path, MapleData data) {\n+        return getPoint(data.getChildByPath(path));\n+    }\n+\n+    public static Point getPoint(String path, MapleData data, Point def) {\n+        final MapleData pointData = data.getChildByPath(path);\n+        if (pointData == null) {\n+            return def;\n+        }\n+        return getPoint(pointData);\n+    }\n+\n+    public static String getFullDataPath(MapleData data) {\n+        String path = \"\";\n+        MapleDataEntity myData = data;\n+        while (myData != null) {\n+            path = myData.getName() + \"/\" + path;\n+            myData = myData.getParent();\n+        }\n+        return path.substring(0, path.length() - 1);\n+    }\n+}"}, {"sha": "21736c2c162063c141117bff66deb9f830b4bc06", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/FileStoredPngMapleCanvas.java", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/FileStoredPngMapleCanvas.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/FileStoredPngMapleCanvas.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/FileStoredPngMapleCanvas.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,70 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n+import provider.MapleCanvas;\n+\n+public class FileStoredPngMapleCanvas implements MapleCanvas {\n+    private File file;\n+    private int width;\n+    private int height;\n+    private BufferedImage image;\n+\n+    public FileStoredPngMapleCanvas(int width, int height, File fileIn) {\n+        this.width = width;\n+        this.height = height;\n+        this.file = fileIn;\n+    }\n+\n+    @Override\n+    public int getHeight() {\n+        return height;\n+    }\n+\n+    @Override\n+    public int getWidth() {\n+        return width;\n+    }\n+\n+    @Override\n+    public BufferedImage getImage() {\n+        loadImageIfNecessary();\n+        return image;\n+    }\n+\n+    private void loadImageIfNecessary() {\n+        if (image == null) {\n+            try {\n+                image = ImageIO.read(file);\n+                // replace the dimensions loaded from the wz by the REAL dimensions from the image - should be equal tho\n+                width = image.getWidth();\n+                height = image.getHeight();\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+    }\n+}"}, {"sha": "8add2ccb36fcfa8f1a683da0562601e9f2c0afda", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/ImgMapleSound.java", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/ImgMapleSound.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/ImgMapleSound.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/ImgMapleSound.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,39 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+public class ImgMapleSound {\n+    private int dataLength, offset;\n+\n+    public ImgMapleSound(int dataLength, int offset) {\n+        this.dataLength = dataLength;\n+        this.offset = offset;\n+    }\n+\n+    public int getDataLength() {\n+        return dataLength;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+}"}, {"sha": "1672a08c598cb21a441ea89664de97fdb9b9c90b", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/ListWZFile.java", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/ListWZFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/ListWZFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/ListWZFile.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,86 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import provider.MapleDataProviderFactory;\n+import tools.data.input.GenericLittleEndianAccessor;\n+import tools.data.input.InputStreamByteStream;\n+import tools.data.input.LittleEndianAccessor;\n+\n+public class ListWZFile {\n+    private LittleEndianAccessor lea;\n+    private List<String> entries = new ArrayList<String>();\n+    private static Collection<String> modernImgs = new HashSet<String>();\n+\n+    public static byte[] xorBytes(byte[] a, byte[] b) {\n+        byte[] wusched = new byte[a.length];\n+        for (int i = 0; i < a.length; i++) {\n+            wusched[i] = (byte) (a[i] ^ b[i]);\n+        }\n+        return wusched;\n+    }\n+\n+    public ListWZFile(File listwz) throws FileNotFoundException {\n+        lea = new GenericLittleEndianAccessor(new InputStreamByteStream(new BufferedInputStream(new FileInputStream(listwz))));\n+        while (lea.available() > 0) {\n+            int l = lea.readInt() * 2;\n+            byte[] chunk = new byte[l];\n+            for (int i = 0; i < chunk.length; i++) {\n+                chunk[i] = lea.readByte();\n+            }\n+            lea.readChar();\n+            final String value = String.valueOf(WZTool.readListString(chunk));\n+            entries.add(value);\n+        }\n+        entries = Collections.unmodifiableList(entries);\n+    }\n+\n+    public List<String> getEntries() {\n+        return entries;\n+    }\n+\n+    public static void init() {\n+        final String listWz = System.getProperty(\"listwz\");\n+        if (listWz != null) {\n+            ListWZFile listwz;\n+            try {\n+                listwz = new ListWZFile(MapleDataProviderFactory.fileInWZPath(\"List.wz\"));\n+                modernImgs = new HashSet<String>(listwz.getEntries());\n+            } catch (FileNotFoundException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    public static boolean isModernImgFile(String path) {\n+        return modernImgs.contains(path);\n+    }\n+}"}, {"sha": "e074d57d14a16e7ccc38449c8f9b10d9176215eb", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/MapleDataType.java", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/MapleDataType.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/MapleDataType.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/MapleDataType.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,26 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+public enum MapleDataType {\n+    NONE, IMG_0x00, SHORT, INT, FLOAT, DOUBLE, STRING, EXTENDED, PROPERTY, CANVAS, VECTOR, CONVEX, SOUND, UOL, UNKNOWN_TYPE, UNKNOWN_EXTENDED_TYPE;\n+}\n\\ No newline at end of file"}, {"sha": "97c2303804d63dbbfc36bb745fb675fff26b61a3", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/PNGMapleCanvas.java", "status": "added", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/PNGMapleCanvas.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/PNGMapleCanvas.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/PNGMapleCanvas.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,151 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.awt.Point;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.DataBuffer;\n+import java.awt.image.DataBufferByte;\n+import java.awt.image.PixelInterleavedSampleModel;\n+import java.awt.image.Raster;\n+import java.awt.image.SampleModel;\n+import java.awt.image.WritableRaster;\n+import java.util.zip.DataFormatException;\n+import java.util.zip.Inflater;\n+import provider.MapleCanvas;\n+\n+public class PNGMapleCanvas implements MapleCanvas {\n+    private static final int[] ZAHLEN = new int[]{2, 1, 0, 3};\n+    private int height;\n+    private int width;\n+    private int dataLength;\n+    private int format;\n+    private byte[] data;\n+\n+    public PNGMapleCanvas(int width, int height, int dataLength, int format, byte[] data) {\n+        super();\n+        this.height = height;\n+        this.width = width;\n+        this.dataLength = dataLength;\n+        this.format = format;\n+        this.data = data;\n+    }\n+\n+    public int getHeight() {\n+        return height;\n+    }\n+\n+    public int getWidth() {\n+        return width;\n+    }\n+\n+    public int getFormat() {\n+        return format;\n+    }\n+\n+    private byte[] getData() {\n+        return data;\n+    }\n+\n+    @Override\n+    public BufferedImage getImage() {\n+        int sizeUncompressed = 0;\n+        int size8888 = 0;\n+        int maxWriteBuf = 2;\n+        int maxHeight = 3;\n+        byte[] writeBuf = new byte[maxWriteBuf];\n+        @SuppressWarnings (\"unused\")\n+        byte[] rowPointers = new byte[maxHeight];\n+        switch (getFormat()) {\n+            case 1:\n+            case 513:\n+                sizeUncompressed = getHeight() * getWidth() * 4;\n+                break;\n+            case 2:\n+                sizeUncompressed = getHeight() * getWidth() * 8;\n+                break;\n+            case 517:\n+                sizeUncompressed = getHeight() * getWidth() / 128;\n+                break;\n+        }\n+        size8888 = getHeight() * getWidth() * 8;\n+        if (size8888 > maxWriteBuf) {\n+            maxWriteBuf = size8888;\n+            writeBuf = new byte[maxWriteBuf];\n+        }\n+        if (getHeight() > maxHeight) {\n+            maxHeight = getHeight();\n+            rowPointers = new byte[maxHeight];\n+        }\n+        Inflater dec = new Inflater();\n+        dec.setInput(getData(), 0, dataLength);\n+        int declen = 0;\n+        byte[] uc = new byte[sizeUncompressed];\n+        try {\n+            declen = dec.inflate(uc);\n+        } catch (DataFormatException ex) {\n+            throw new RuntimeException(\"zlib fucks\", ex);\n+        }\n+        dec.end();\n+        if (getFormat() == 1) {\n+            for (int i = 0; i < sizeUncompressed; i++) {\n+                byte low = (byte) (uc[i] & 0x0F);\n+                byte high = (byte) (uc[i] & 0xF0);\n+                writeBuf[(i << 1)] = (byte) (((low << 4) | low) & 0xFF);\n+                writeBuf[(i << 1) + 1] = (byte) (high | ((high >>> 4) & 0xF));\n+            }\n+        } else if (getFormat() == 2) {\n+            writeBuf = uc;\n+        } else if (getFormat() == 513) {\n+            for (int i = 0; i < declen; i += 2) {\n+                byte bBits = (byte) ((uc[i] & 0x1F) << 3);\n+                byte gBits = (byte) (((uc[i + 1] & 0x07) << 5) | ((uc[i] & 0xE0) >> 3));\n+                byte rBits = (byte) (uc[i + 1] & 0xF8);\n+                writeBuf[(i << 1)] = (byte) (bBits | (bBits >> 5));\n+                writeBuf[(i << 1) + 1] = (byte) (gBits | (gBits >> 6));\n+                writeBuf[(i << 1) + 2] = (byte) (rBits | (rBits >> 5));\n+                writeBuf[(i << 1) + 3] = (byte) 0xFF;\n+            }\n+        } else if (getFormat() == 517) {\n+            byte b = 0x00;\n+            int pixelIndex = 0;\n+            for (int i = 0; i < declen; i++) {\n+                for (int j = 0; j < 8; j++) {\n+                    b = (byte) (((uc[i] & (0x01 << (7 - j))) >> (7 - j)) * 255);\n+                    for (int k = 0; k < 16; k++) {\n+                        pixelIndex = (i << 9) + (j << 6) + k * 2;\n+                        writeBuf[pixelIndex] = b;\n+                        writeBuf[pixelIndex + 1] = b;\n+                        writeBuf[pixelIndex + 2] = b;\n+                        writeBuf[pixelIndex + 3] = (byte) 0xFF;\n+                    }\n+                }\n+            }\n+        }\n+        DataBufferByte imgData = new DataBufferByte(writeBuf, sizeUncompressed);\n+        SampleModel sm = new PixelInterleavedSampleModel(DataBuffer.TYPE_BYTE, getWidth(), getHeight(), 4, getWidth() * 4, ZAHLEN);\n+        WritableRaster imgRaster = Raster.createWritableRaster(sm, imgData, new Point(0, 0));\n+        BufferedImage aa = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_ARGB);\n+        aa.setData(imgRaster);\n+        return aa;\n+    }\n+}"}, {"sha": "d24b8cb2b992c82b360366af581c08599323781e", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/WZDirectoryEntry.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZDirectoryEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZDirectoryEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/WZDirectoryEntry.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,68 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataEntity;\n+import provider.MapleDataEntry;\n+import provider.MapleDataFileEntry;\n+\n+public class WZDirectoryEntry extends WZEntry implements MapleDataDirectoryEntry {\n+    private List<MapleDataDirectoryEntry> subdirs = new ArrayList<MapleDataDirectoryEntry>();\n+    private List<MapleDataFileEntry> files = new ArrayList<MapleDataFileEntry>();\n+    private Map<String, MapleDataEntry> entries = new HashMap<String, MapleDataEntry>();\n+\n+    public WZDirectoryEntry(String name, int size, int checksum, MapleDataEntity parent) {\n+        super(name, size, checksum, parent);\n+    }\n+\n+    public WZDirectoryEntry() {\n+        super(null, 0, 0, null);\n+    }\n+\n+    public void addDirectory(MapleDataDirectoryEntry dir) {\n+        subdirs.add(dir);\n+        entries.put(dir.getName(), dir);\n+    }\n+\n+    public void addFile(MapleDataFileEntry fileEntry) {\n+        files.add(fileEntry);\n+        entries.put(fileEntry.getName(), fileEntry);\n+    }\n+\n+    public List<MapleDataDirectoryEntry> getSubdirectories() {\n+        return Collections.unmodifiableList(subdirs);\n+    }\n+\n+    public List<MapleDataFileEntry> getFiles() {\n+        return Collections.unmodifiableList(files);\n+    }\n+\n+    public MapleDataEntry getEntry(String name) {\n+        return entries.get(name);\n+    }\n+}"}, {"sha": "1e921b208220663ddd15966a89f32f5cfbb4a8a2", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/WZEntry.java", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/WZEntry.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,61 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import provider.MapleDataEntity;\n+import provider.MapleDataEntry;\n+\n+public class WZEntry implements MapleDataEntry {\n+    private String name;\n+    private int size;\n+    private int checksum;\n+    private int offset;\n+    private MapleDataEntity parent;\n+\n+    public WZEntry(String name, int size, int checksum, MapleDataEntity parent) {\n+        super();\n+        this.name = name;\n+        this.size = size;\n+        this.checksum = checksum;\n+        this.parent = parent;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public int getSize() {\n+        return size;\n+    }\n+\n+    public int getChecksum() {\n+        return checksum;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public MapleDataEntity getParent() {\n+        return parent;\n+    }\n+}"}, {"sha": "c6c0abf5377cf42dbf23295649d0b321fb497913", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/WZFile.java", "status": "added", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/WZFile.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,154 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+import provider.MapleData;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataFileEntry;\n+import provider.MapleDataProvider;\n+import tools.data.input.GenericLittleEndianAccessor;\n+import tools.data.input.GenericSeekableLittleEndianAccessor;\n+import tools.data.input.InputStreamByteStream;\n+import tools.data.input.LittleEndianAccessor;\n+import tools.data.input.RandomAccessByteStream;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+public class WZFile implements MapleDataProvider {\n+    static {\n+        ListWZFile.init();\n+    }\n+    private File wzfile;\n+    private LittleEndianAccessor lea;\n+    private SeekableLittleEndianAccessor slea;\n+    private int headerSize;\n+    private WZDirectoryEntry root;\n+    private boolean provideImages;\n+    private int cOffset;\n+\n+    public WZFile(File wzfile, boolean provideImages) throws IOException {\n+        this.wzfile = wzfile;\n+        lea = new GenericLittleEndianAccessor(new InputStreamByteStream(new BufferedInputStream(new FileInputStream(wzfile))));\n+        RandomAccessFile raf = new RandomAccessFile(wzfile, \"r\");\n+        slea = new GenericSeekableLittleEndianAccessor(new RandomAccessByteStream(raf));\n+        root = new WZDirectoryEntry(wzfile.getName(), 0, 0, null);\n+        this.provideImages = provideImages;\n+        load();\n+    }\n+\n+    private void load() throws IOException {\n+        lea.readAsciiString(4);\n+        lea.readInt();\n+        lea.readInt();\n+        headerSize = lea.readInt();\n+        lea.readNullTerminatedAsciiString();\n+        lea.readShort();\n+        parseDirectory(root);\n+        cOffset = (int) lea.getBytesRead();\n+        getOffsets(root);\n+    }\n+\n+    private void getOffsets(MapleDataDirectoryEntry dir) {\n+        for (MapleDataFileEntry file : dir.getFiles()) {\n+            file.setOffset(cOffset);\n+            cOffset += file.getSize();\n+        }\n+        for (MapleDataDirectoryEntry sdir : dir.getSubdirectories()) {\n+            getOffsets(sdir);\n+        }\n+    }\n+\n+    private void parseDirectory(WZDirectoryEntry dir) {\n+        int entries = WZTool.readValue(lea);\n+        for (int i = 0; i < entries; i++) {\n+            byte marker = lea.readByte();\n+            String name = null;\n+            int size, checksum;\n+            switch (marker) {\n+                case 0x02:\n+                    name = WZTool.readDecodedStringAtOffsetAndReset(slea, lea.readInt() + this.headerSize + 1);\n+                    size = WZTool.readValue(lea);\n+                    checksum = WZTool.readValue(lea);\n+                    lea.readInt(); //dummy int\n+                    dir.addFile(new WZFileEntry(name, size, checksum, dir));\n+                    break;\n+                case 0x03:\n+                case 0x04:\n+                    name = WZTool.readDecodedString(lea);\n+                    size = WZTool.readValue(lea);\n+                    checksum = WZTool.readValue(lea);\n+                    lea.readInt(); //dummy int\n+                    if (marker == 3) {\n+                        dir.addDirectory(new WZDirectoryEntry(name, size, checksum, dir));\n+                    } else {\n+                        dir.addFile(new WZFileEntry(name, size, checksum, dir));\n+                    }\n+                    break;\n+                default:\n+            }\n+        }\n+        for (MapleDataDirectoryEntry idir : dir.getSubdirectories()) {\n+            parseDirectory((WZDirectoryEntry) idir);\n+        }\n+    }\n+\n+    public WZIMGFile getImgFile(String path) throws IOException {\n+        String segments[] = path.split(\"/\");\n+        WZDirectoryEntry dir = root;\n+        for (int x = 0; x < segments.length - 1; x++) {\n+            dir = (WZDirectoryEntry) dir.getEntry(segments[x]);\n+            if (dir == null) {\n+                return null;\n+            }\n+        }\n+        WZFileEntry entry = (WZFileEntry) dir.getEntry(segments[segments.length - 1]);\n+        if (entry == null) {\n+            return null;\n+        }\n+        String fullPath = wzfile.getName().substring(0, wzfile.getName().length() - 3).toLowerCase() + \"/\" + path;\n+        return new WZIMGFile(this.wzfile, entry, provideImages, ListWZFile.isModernImgFile(fullPath));\n+    }\n+\n+    @Override\n+    public synchronized MapleData getData(String path) {\n+        try {\n+            WZIMGFile imgFile = getImgFile(path);\n+            if (imgFile == null) {\n+                return null;\n+            }\n+            MapleData ret = imgFile.getRoot();\n+            return ret;\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public MapleDataDirectoryEntry getRoot() {\n+        return root;\n+    }\n+}"}, {"sha": "792371d9cf3ef340e9c895ec2143cf2918a92952", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/WZFileEntry.java", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZFileEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZFileEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/WZFileEntry.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,42 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import provider.MapleDataEntity;\n+import provider.MapleDataFileEntry;\n+\n+public class WZFileEntry extends WZEntry implements MapleDataFileEntry {\n+    private int offset;\n+\n+    public WZFileEntry(String name, int size, int checksum, MapleDataEntity parent) {\n+        super(name, size, checksum, parent);\n+    }\n+\n+    @Override\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public void setOffset(int offset) {\n+        this.offset = offset;\n+    }\n+}"}, {"sha": "385d78518357407cf131b0197f29c175b9815c9c", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/WZIMGEntry.java", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZIMGEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZIMGEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/WZIMGEntry.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,118 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import provider.MapleData;\n+import provider.MapleDataEntity;\n+\n+public class WZIMGEntry implements MapleData {\n+    private String name;\n+    private MapleDataType type;\n+    private List<MapleData> children = new ArrayList<MapleData>(10);\n+    private Object data;\n+    private MapleDataEntity parent;\n+\n+    public WZIMGEntry(MapleDataEntity parent) {\n+        this.parent = parent;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public MapleDataType getType() {\n+        return type;\n+    }\n+\n+    @Override\n+    public List<MapleData> getChildren() {\n+        return Collections.unmodifiableList(children);\n+    }\n+\n+    @Override\n+    public MapleData getChildByPath(String path) {\n+        String segments[] = path.split(\"/\");\n+        if (segments[0].equals(\"..\")) {\n+            return ((MapleData) getParent()).getChildByPath(path.substring(path.indexOf(\"/\") + 1));\n+        }\n+        MapleData ret = this;\n+        for (int x = 0; x < segments.length; x++) {\n+            boolean foundChild = false;\n+            for (MapleData child : ret.getChildren()) {\n+                if (child.getName().equals(segments[x])) {\n+                    ret = child;\n+                    foundChild = true;\n+                    break;\n+                }\n+            }\n+            if (!foundChild) {\n+                return null;\n+            }\n+        }\n+        return ret;\n+    }\n+\n+    @Override\n+    public Object getData() {\n+        return data;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public void setType(MapleDataType type) {\n+        this.type = type;\n+    }\n+\n+    public void setData(Object data) {\n+        this.data = data;\n+    }\n+\n+    public void addChild(WZIMGEntry entry) {\n+        children.add(entry);\n+    }\n+\n+    @Override\n+    public Iterator<MapleData> iterator() {\n+        return getChildren().iterator();\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return getName() + \":\" + getData();\n+    }\n+\n+    public MapleDataEntity getParent() {\n+        return parent;\n+    }\n+\n+    public void finish() {\n+        ((ArrayList<MapleData>) children).trimToSize();\n+    }\n+}"}, {"sha": "bec06c78bdf9568da3ea9819f896e22bbc7f7c44", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/WZIMGFile.java", "status": "added", "additions": 227, "deletions": 0, "changes": 227, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZIMGFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZIMGFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/WZIMGFile.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,227 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.awt.Point;\n+import java.io.DataOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.io.RandomAccessFile;\n+import tools.data.input.GenericSeekableLittleEndianAccessor;\n+import tools.data.input.RandomAccessByteStream;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+public class WZIMGFile {\n+    private WZFileEntry file;\n+    private WZIMGEntry root;\n+    private boolean provideImages;\n+    @SuppressWarnings (\"unused\")\n+    private boolean modernImg;\n+\n+    public WZIMGFile(File wzfile, WZFileEntry file, boolean provideImages, boolean modernImg) throws IOException {\n+        RandomAccessFile raf = new RandomAccessFile(wzfile, \"r\");\n+        SeekableLittleEndianAccessor slea = new GenericSeekableLittleEndianAccessor(new RandomAccessByteStream(raf));\n+        slea.seek(file.getOffset());\n+        this.file = file;\n+        this.provideImages = provideImages;\n+        root = new WZIMGEntry(file.getParent());\n+        root.setName(file.getName());\n+        root.setType(MapleDataType.EXTENDED);\n+        this.modernImg = modernImg;\n+        parseExtended(root, slea, 0);\n+        root.finish();\n+        raf.close();\n+    }\n+\n+    protected void dumpImg(OutputStream out, SeekableLittleEndianAccessor slea) throws IOException {\n+        DataOutputStream os = new DataOutputStream(out);\n+        long oldPos = slea.getPosition();\n+        slea.seek(file.getOffset());\n+        for (int x = 0; x < file.getSize(); x++) {\n+            os.write(slea.readByte());\n+        }\n+        slea.seek(oldPos);\n+    }\n+\n+    public WZIMGEntry getRoot() {\n+        return root;\n+    }\n+\n+    private void parse(WZIMGEntry entry, SeekableLittleEndianAccessor slea) {\n+        byte marker = slea.readByte();\n+        switch (marker) {\n+            case 0: {\n+                String name = WZTool.readDecodedString(slea);\n+                entry.setName(name);\n+                break;\n+            }\n+            case 1: {\n+                String name = WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt());\n+                entry.setName(name);\n+                break;\n+            }\n+            default:\n+                System.out.println(\"Unknown Image identifier: \" + marker + \" at offset \" + (slea.getPosition() - file.getOffset()));\n+        }\n+        marker = slea.readByte();\n+        switch (marker) {\n+            case 0:\n+                entry.setType(MapleDataType.IMG_0x00);\n+                break;\n+            case 2:\n+            case 11: //??? no idea, since 0.49\n+                entry.setType(MapleDataType.SHORT);\n+                entry.setData(Short.valueOf(slea.readShort()));\n+                break;\n+            case 3:\n+                entry.setType(MapleDataType.INT);\n+                entry.setData(Integer.valueOf(WZTool.readValue(slea)));\n+                break;\n+            case 4:\n+                entry.setType(MapleDataType.FLOAT);\n+                entry.setData(Float.valueOf(WZTool.readFloatValue(slea)));\n+                break;\n+            case 5:\n+                entry.setType(MapleDataType.DOUBLE);\n+                entry.setData(Double.valueOf(slea.readDouble()));\n+                break;\n+            case 8:\n+                entry.setType(MapleDataType.STRING);\n+                byte iMarker = slea.readByte();\n+                if (iMarker == 0) {\n+                    entry.setData(WZTool.readDecodedString(slea));\n+                } else if (iMarker == 1) {\n+                    entry.setData(WZTool.readDecodedStringAtOffsetAndReset(slea, slea.readInt() + file.getOffset()));\n+                } else {\n+                    System.out.println(\"Unknown String type \" + iMarker);\n+                }\n+                break;\n+            case 9:\n+                entry.setType(MapleDataType.EXTENDED);\n+                long endOfExtendedBlock = slea.readInt();\n+                endOfExtendedBlock += slea.getPosition();\n+                parseExtended(entry, slea, endOfExtendedBlock);\n+                break;\n+            default:\n+                System.out.println(\"Unknown Image type \" + marker);\n+        }\n+    }\n+\n+    private void parseExtended(WZIMGEntry entry, SeekableLittleEndianAccessor slea, long endOfExtendedBlock) {\n+        byte marker = slea.readByte();\n+        String type;\n+        switch (marker) {\n+            case 0x73:\n+                type = WZTool.readDecodedString(slea);\n+                break;\n+            case 0x1B:\n+                type = WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt());\n+                break;\n+            default:\n+                throw new RuntimeException(\"Unknown extended image identifier: \" + marker + \" at offset \" +\n+                        (slea.getPosition() - file.getOffset()));\n+        }\n+        if (type.equals(\"Property\")) {\n+            entry.setType(MapleDataType.PROPERTY);\n+            slea.readByte();\n+            slea.readByte();\n+            int children = WZTool.readValue(slea);\n+            for (int i = 0; i < children; i++) {\n+                WZIMGEntry cEntry = new WZIMGEntry(entry);\n+                parse(cEntry, slea);\n+                cEntry.finish();\n+                entry.addChild(cEntry);\n+            }\n+        } else if (type.equals(\"Canvas\")) {\n+            entry.setType(MapleDataType.CANVAS);\n+            slea.readByte();\n+            marker = slea.readByte();\n+            if (marker == 0) {\n+                // do nothing\n+            } else if (marker == 1) {\n+                slea.readByte();\n+                slea.readByte();\n+                int children = WZTool.readValue(slea);\n+                for (int i = 0; i < children; i++) {\n+                    WZIMGEntry child = new WZIMGEntry(entry);\n+                    parse(child, slea);\n+                    child.finish();\n+                    entry.addChild(child);\n+                }\n+            } else {\n+                System.out.println(\"Canvas marker != 1 (\" + marker + \")\");\n+            }\n+            int width = WZTool.readValue(slea);\n+            int height = WZTool.readValue(slea);\n+            int format = WZTool.readValue(slea);\n+            int format2 = slea.readByte();\n+            slea.readInt();\n+            int dataLength = slea.readInt() - 1;\n+            slea.readByte();\n+            if (provideImages) {\n+                byte[] pngdata = slea.read(dataLength);\n+                entry.setData(new PNGMapleCanvas(width, height, dataLength, format + format2, pngdata));\n+            } else {\n+                entry.setData(new PNGMapleCanvas(width, height, dataLength, format + format2, null));\n+                slea.skip(dataLength);\n+            }\n+        } else if (type.equals(\"Shape2D#Vector2D\")) {\n+            entry.setType(MapleDataType.VECTOR);\n+            int x = WZTool.readValue(slea);\n+            int y = WZTool.readValue(slea);\n+            entry.setData(new Point(x, y));\n+        } else if (type.equals(\"Shape2D#Convex2D\")) {\n+            int children = WZTool.readValue(slea);\n+            for (int i = 0; i < children; i++) {\n+                WZIMGEntry cEntry = new WZIMGEntry(entry);\n+                parseExtended(cEntry, slea, 0);\n+                cEntry.finish();\n+                entry.addChild(cEntry);\n+            }\n+        } else if (type.equals(\"Sound_DX8\")) {\n+            entry.setType(MapleDataType.SOUND);\n+            slea.readByte();\n+            int dataLength = WZTool.readValue(slea);\n+            WZTool.readValue(slea); // no clue what this is\n+            int offset = (int) slea.getPosition();\n+            entry.setData(new ImgMapleSound(dataLength, offset - file.getOffset()));\n+            slea.seek(endOfExtendedBlock);\n+        } else if (type.equals(\"UOL\")) {\n+            entry.setType(MapleDataType.UOL);\n+            slea.readByte();\n+            byte uolmarker = slea.readByte();\n+            switch (uolmarker) {\n+                case 0:\n+                    entry.setData(WZTool.readDecodedString(slea));\n+                    break;\n+                case 1:\n+                    entry.setData(WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt()));\n+                    break;\n+                default:\n+                    System.out.println(\"Unknown UOL marker: \" + uolmarker + \" \" + entry.getName());\n+            }\n+        } else {\n+            throw new RuntimeException(\"Unhandled extended type: \" + type);\n+        }\n+    }\n+}"}, {"sha": "85e1c8d90b12ad81599c4bc39bd3af48af60deeb", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/WZTool.java", "status": "added", "additions": 187, "deletions": 0, "changes": 187, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZTool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/WZTool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/WZTool.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,187 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import javax.crypto.spec.SecretKeySpec;\n+import tools.data.input.LittleEndianAccessor;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+/*\n+ * Ported Code, see WZFile.java for more info\n+ */\n+public class WZTool {\n+    private static byte[] encKey;\n+\n+    static {\n+        byte[] iv = new byte[]{(byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,\n+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,\n+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,\n+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,};\n+        byte[] key = new byte[]{(byte) 0x13, 0x00, 0x00, 0x00,\n+            (byte) 0x08, 0x00, 0x00, 0x00,\n+            (byte) 0x06, 0x00, 0x00, 0x00,\n+            (byte) 0xB4, 0x00, 0x00, 0x00,\n+            (byte) 0x1B, 0x00, 0x00, 0x00,\n+            (byte) 0x0F, 0x00, 0x00, 0x00,\n+            (byte) 0x33, 0x00, 0x00, 0x00,\n+            (byte) 0x52, 0x00, 0x00, 0x00\n+        };\n+        Cipher cipher = null;\n+        SecretKeySpec skeySpec = new SecretKeySpec(key, \"AES\");\n+        try {\n+            cipher = Cipher.getInstance(\"AES\");\n+        } catch (NoSuchAlgorithmException e) {\n+            e.printStackTrace();\n+        } catch (NoSuchPaddingException e) {\n+            e.printStackTrace();\n+        }\n+        try {\n+            cipher.init(Cipher.ENCRYPT_MODE, skeySpec);\n+        } catch (InvalidKeyException e) {\n+            e.printStackTrace();\n+        }\n+        encKey = new byte[0xFFFF];\n+        for (int i = 0; i < (0xFFFF / 16); i++) {\n+            try {\n+                iv = cipher.doFinal(iv);\n+            } catch (IllegalBlockSizeException e) {\n+                e.printStackTrace();\n+            } catch (BadPaddingException e) {\n+                e.printStackTrace();\n+            }\n+            System.arraycopy(iv, 0, encKey, (i * 16), 16);\n+        }\n+        try {\n+            iv = cipher.doFinal(iv);\n+        } catch (IllegalBlockSizeException e) {\n+            e.printStackTrace();\n+        } catch (BadPaddingException e) {\n+            e.printStackTrace();\n+        }\n+        System.arraycopy(iv, 0, encKey, 65520, 15);\n+    }\n+\n+    public static byte[] readListString(byte[] str) {\n+        for (int i = 0; i < str.length; i++) {\n+            str[i] = (byte) (str[i] ^ encKey[i]);\n+        }\n+        return str;\n+    }\n+\n+    public static String readDecodedString(LittleEndianAccessor llea) {\n+        int strLength;\n+        byte b = llea.readByte();\n+        if (b == 0x00) {\n+            return \"\";\n+        }\n+        if (b >= 0) {\n+            if (b == 0x7F) {\n+                strLength = llea.readInt();\n+            } else {\n+                strLength = (int) b;\n+            }\n+            if (strLength < 0) {\n+                return \"\";\n+            }\n+            byte str[] = new byte[strLength * 2];\n+            for (int i = 0; i < strLength * 2; i++) {\n+                str[i] = llea.readByte();\n+            }\n+            return DecryptUnicodeStr(str);\n+        } else {\n+            if (b == -128) {\n+                strLength = llea.readInt();\n+            } else {\n+                strLength = -b;\n+            }\n+            if (strLength < 0) {\n+                return \"\";\n+            }\n+            byte str[] = new byte[strLength];\n+            for (int i = 0; i < strLength; i++) {\n+                str[i] = llea.readByte();\n+            }\n+            return DecryptAsciiStr(str);\n+        }\n+    }\n+\n+    public static String DecryptAsciiStr(byte[] str) {\n+        byte xorByte = (byte) 0xAA;\n+        for (int i = 0; i < str.length; i++) {\n+            str[i] = (byte) (str[i] ^ xorByte ^ encKey[i]);\n+            xorByte++;\n+        }\n+        return new String(str);\n+    }\n+\n+    public static String DecryptUnicodeStr(byte[] str) {\n+        int xorByte = 0xAAAA;\n+        char[] charRet = new char[str.length / 2];\n+        for (int i = 0; i < str.length; i++) {\n+            str[i] = (byte) (str[i] ^ encKey[i]);\n+        }\n+        for (int i = 0; i < (str.length / 2); i++) {\n+            char toXor = (char) ((str[i] << 8) | str[i + 1]);\n+            charRet[i] = (char) (toXor ^ xorByte);\n+            xorByte++;\n+        }\n+        return String.valueOf(charRet);\n+    }\n+\n+    public static String readDecodedStringAtOffset(SeekableLittleEndianAccessor slea, int offset) {\n+        slea.seek(offset);\n+        return readDecodedString(slea);\n+    }\n+\n+    public static String readDecodedStringAtOffsetAndReset(SeekableLittleEndianAccessor slea, int offset) {\n+        long pos = 0;\n+        pos = slea.getPosition();\n+        slea.seek(offset);\n+        String ret = readDecodedString(slea);\n+        slea.seek(pos);\n+        return ret;\n+    }\n+\n+    public static int readValue(LittleEndianAccessor lea) {\n+        byte b = lea.readByte();\n+        if (b == -128) {\n+            return lea.readInt();\n+        } else {\n+            return ((int) b);\n+        }\n+    }\n+\n+    public static float readFloatValue(LittleEndianAccessor lea) {\n+        byte b = lea.readByte();\n+        if (b == -128) {\n+            return lea.readFloat();\n+        } else {\n+            return 0;\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "151a04c2fd6b1e0e6c2084f2cabb9938ff4bfcd4", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/XMLDomMapleData.java", "status": "added", "additions": 219, "deletions": 0, "changes": 219, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/XMLDomMapleData.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/XMLDomMapleData.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/XMLDomMapleData.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,219 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package provider.wz;\n+\n+import java.awt.Point;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Locale;\n+import java.text.NumberFormat;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+import provider.MapleData;\n+import provider.MapleDataEntity;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NamedNodeMap;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n+import org.xml.sax.SAXException;\n+\n+public class XMLDomMapleData implements MapleData {\n+\tprivate Node node;\n+\tprivate File imageDataDir;\n+        private NumberFormat nf;\n+\n+\tpublic XMLDomMapleData(FileInputStream fis, File imageDataDir) {\n+\t\ttry {\n+\t\t\tDocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n+\t\t\tDocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n+\t\t\tDocument document = documentBuilder.parse(fis);\n+\t\t\tthis.node = document.getFirstChild();\n+\t\t} catch (ParserConfigurationException e) {\n+\t\t\tthrow new RuntimeException(e);\n+\t\t} catch (SAXException e) {\n+\t\t\tthrow new RuntimeException(e);\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new RuntimeException(e);\n+\t\t}\n+\t\tthis.imageDataDir = imageDataDir;\n+                this.nf = NumberFormat.getInstance(Locale.FRANCE);\n+\t}\n+\n+\tprivate XMLDomMapleData(Node node) {\n+\t\tthis.node = node;\n+                this.nf = NumberFormat.getInstance(Locale.FRANCE);\n+\t}\n+\n+\t@Override\n+\tpublic MapleData getChildByPath(String path) {\n+\t\tString segments[] = path.split(\"/\");\n+\t\tif (segments[0].equals(\"..\")) {\n+\t\t\treturn ((MapleData) getParent()).getChildByPath(path.substring(path.indexOf(\"/\") + 1));\n+\t\t}\n+\n+\t\tNode myNode = node;\n+\t\tfor (int x = 0; x < segments.length; x++) {\n+\t\t\tNodeList childNodes = myNode.getChildNodes();\n+\t\t\tboolean foundChild = false;\n+\t\t\tfor (int i = 0; i < childNodes.getLength(); i++) {\n+\t\t\t\tNode childNode = childNodes.item(i);\n+\t\t\t\tif (childNode.getNodeType() == Node.ELEMENT_NODE && childNode.getAttributes().getNamedItem(\"name\").getNodeValue().equals(segments[x])) {\n+\t\t\t\t\tmyNode = childNode;\n+\t\t\t\t\tfoundChild = true;\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (!foundChild) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t}\n+\t\tXMLDomMapleData ret = new XMLDomMapleData(myNode);\n+\t\tret.imageDataDir = new File(imageDataDir, getName() + \"/\" + path).getParentFile();\n+\t\treturn ret;\n+\t}\n+\n+\t@Override\n+\tpublic List<MapleData> getChildren() {\n+\t\tList<MapleData> ret = new ArrayList<MapleData>();\n+\t\tNodeList childNodes = node.getChildNodes();\n+\t\tfor (int i = 0; i < childNodes.getLength(); i++) {\n+\t\t\tNode childNode = childNodes.item(i);\n+\t\t\tif (childNode.getNodeType() == Node.ELEMENT_NODE) {\n+\t\t\t\tXMLDomMapleData child = new XMLDomMapleData(childNode);\n+\t\t\t\tchild.imageDataDir = new File(imageDataDir, getName());\n+\t\t\t\tret.add(child);\n+\t\t\t}\n+\t\t}\n+\t\treturn ret;\n+\t}\n+\n+\t@Override\n+\tpublic Object getData() {\n+\t\tNamedNodeMap attributes = node.getAttributes();\n+\t\tMapleDataType type = getType();\n+\t\tswitch (type) {\n+\t\tcase DOUBLE:\n+\t\tcase FLOAT:\n+\t\tcase INT:\n+                case SHORT: {\n+                        String value = attributes.getNamedItem(\"value\").getNodeValue();\n+                        Number nval;\n+                        \n+                        try {\n+                                nval = nf.parse(value);\n+                        }\n+                        catch(java.text.ParseException pe) {\n+                                pe.printStackTrace();\n+                                nval = 0.0f;\n+                        }\n+                                \n+                        switch (type) {\n+                        case DOUBLE:\n+                                return nval.doubleValue();\n+                        case FLOAT:\n+                                return nval.floatValue();\n+                        case INT:\n+                                return nval.intValue();\n+                        case SHORT:\n+                                return nval.shortValue();\n+                        default:\n+                                return null;\n+                        }\n+                }\n+\t\tcase STRING:\n+\t\tcase UOL: {\n+\t\t\tString value = attributes.getNamedItem(\"value\").getNodeValue();\n+                        return value;\n+\t\t}\n+\t\tcase VECTOR: {\n+\t\t\tString x = attributes.getNamedItem(\"x\").getNodeValue();\n+\t\t\tString y = attributes.getNamedItem(\"y\").getNodeValue();\n+\t\t\treturn new Point(Integer.parseInt(x), Integer.parseInt(y));\n+\t\t}\n+\t\tcase CANVAS: {\n+\t\t\tString width = attributes.getNamedItem(\"width\").getNodeValue();\n+\t\t\tString height = attributes.getNamedItem(\"height\").getNodeValue();\n+\t\t\treturn new FileStoredPngMapleCanvas(Integer.parseInt(width), Integer.parseInt(height), new File(\n+\t\t\t\t\timageDataDir, getName() + \".png\"));\n+\t\t}\n+\t\tdefault:\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic MapleDataType getType() {\n+\t\tString nodeName = node.getNodeName();\n+\t\tif (nodeName.equals(\"imgdir\")) {\n+\t\t\treturn MapleDataType.PROPERTY;\n+\t\t} else if (nodeName.equals(\"canvas\")) {\n+\t\t\treturn MapleDataType.CANVAS;\n+\t\t} else if (nodeName.equals(\"convex\")) {\n+\t\t\treturn MapleDataType.CONVEX;\n+\t\t} else if (nodeName.equals(\"sound\")) {\n+\t\t\treturn MapleDataType.SOUND;\n+\t\t} else if (nodeName.equals(\"uol\")) {\n+\t\t\treturn MapleDataType.UOL;\n+\t\t} else if (nodeName.equals(\"double\")) {\n+\t\t\treturn MapleDataType.DOUBLE;\n+\t\t} else if (nodeName.equals(\"float\")) {\n+\t\t\treturn MapleDataType.FLOAT;\n+\t\t} else if (nodeName.equals(\"int\")) {\n+\t\t\treturn MapleDataType.INT;\n+\t\t} else if (nodeName.equals(\"short\")) {\n+\t\t\treturn MapleDataType.SHORT;\n+\t\t} else if (nodeName.equals(\"string\")) {\n+\t\t\treturn MapleDataType.STRING;\n+\t\t} else if (nodeName.equals(\"vector\")) {\n+\t\t\treturn MapleDataType.VECTOR;\n+\t\t} else if (nodeName.equals(\"null\")) {\n+\t\t\treturn MapleDataType.IMG_0x00;\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic MapleDataEntity getParent() {\n+\t\tNode parentNode = node.getParentNode();\n+\t\tif (parentNode.getNodeType() == Node.DOCUMENT_NODE) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tXMLDomMapleData parentData = new XMLDomMapleData(parentNode);\n+\t\tparentData.imageDataDir = imageDataDir.getParentFile();\n+\t\treturn parentData;\n+\t}\n+\n+\t@Override\n+\tpublic String getName() {\n+\t\treturn node.getAttributes().getNamedItem(\"name\").getNodeValue();\n+\t}\n+\n+\t@Override\n+\tpublic Iterator<MapleData> iterator() {\n+\t\treturn getChildren().iterator();\n+\t}\n+}"}, {"sha": "2a7694fdc97c511f4e0d4b894967b02d813683be", "filename": "tools/MapleSkillMakerFetcher/src/provider/wz/XMLWZFile.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/XMLWZFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/provider/wz/XMLWZFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/provider/wz/XMLWZFile.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,85 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import provider.MapleData;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataProvider;\n+\n+public class XMLWZFile implements MapleDataProvider {\n+    private File root;\n+    private WZDirectoryEntry rootForNavigation;\n+\n+    public XMLWZFile(File fileIn) {\n+        root = fileIn;\n+        rootForNavigation = new WZDirectoryEntry(fileIn.getName(), 0, 0, null);\n+        fillMapleDataEntitys(root, rootForNavigation);\n+    }\n+\n+    private void fillMapleDataEntitys(File lroot, WZDirectoryEntry wzdir) {\n+        for (File file : lroot.listFiles()) {\n+            String fileName = file.getName();\n+            if (file.isDirectory() && !fileName.endsWith(\".img\")) {\n+                WZDirectoryEntry newDir = new WZDirectoryEntry(fileName, 0, 0, wzdir);\n+                wzdir.addDirectory(newDir);\n+                fillMapleDataEntitys(file, newDir);\n+            } else if (fileName.endsWith(\".xml\")) {\n+                wzdir.addFile(new WZFileEntry(fileName.substring(0, fileName.length() - 4), 0, 0, wzdir));\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public MapleData getData(String path) {\n+        File dataFile = new File(root, path + \".xml\");\n+        File imageDataDir = new File(root, path);\n+        if (!dataFile.exists()) {\n+            return null;//bitches\n+        }\n+        FileInputStream fis;\n+        try {\n+            fis = new FileInputStream(dataFile);\n+        } catch (FileNotFoundException e) {\n+            throw new RuntimeException(\"Datafile \" + path + \" does not exist in \" + root.getAbsolutePath());\n+        }\n+        final XMLDomMapleData domMapleData;\n+        try {\n+            domMapleData = new XMLDomMapleData(fis, imageDataDir.getParentFile());\n+        } finally {\n+            try {\n+                fis.close();\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+        return domMapleData;\n+    }\n+\n+    @Override\n+    public MapleDataDirectoryEntry getRoot() {\n+        return rootForNavigation;\n+    }\n+}"}, {"sha": "8cc0c8aa84947f28e2bf1695d146b6c246eddec8", "filename": "tools/MapleSkillMakerFetcher/src/tools/HexTool.java", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/HexTool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/HexTool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/tools/HexTool.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,79 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools;\n+\n+import java.io.ByteArrayOutputStream;\n+\n+public class HexTool {\n+    private static final char[] HEX = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\n+\n+    private static String toString(byte byteValue) {\n+        int tmp = byteValue << 8;\n+        char[] retstr = new char[]{HEX[(tmp >> 12) & 0x0F], HEX[(tmp >> 8) & 0x0F]};\n+        return String.valueOf(retstr);\n+    }\n+\n+    public static String toString(byte[] bytes) {\n+        StringBuilder hexed = new StringBuilder();\n+        for (int i = 0; i < bytes.length; i++) {\n+            hexed.append(toString(bytes[i]));\n+            hexed.append(' ');\n+        }\n+        return hexed.substring(0, hexed.length() - 1);\n+    }\n+\n+    public static byte[] getByteArrayFromHexString(String hex) {\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        int nexti = 0;\n+        int nextb = 0;\n+        boolean highoc = true;\n+        outer:\n+        for (;;) {\n+            int number = -1;\n+            while (number == -1) {\n+                if (nexti == hex.length()) {\n+                    break outer;\n+                }\n+                char chr = hex.charAt(nexti);\n+                if (chr >= '0' && chr <= '9') {\n+                    number = chr - '0';\n+                } else if (chr >= 'a' && chr <= 'f') {\n+                    number = chr - 'a' + 10;\n+                } else if (chr >= 'A' && chr <= 'F') {\n+                    number = chr - 'A' + 10;\n+                } else {\n+                    number = -1;\n+                }\n+                nexti++;\n+            }\n+            if (highoc) {\n+                nextb = number << 4;\n+                highoc = false;\n+            } else {\n+                nextb |= number;\n+                highoc = true;\n+                baos.write(nextb);\n+            }\n+        }\n+        return baos.toByteArray();\n+    }\n+}"}, {"sha": "eac7de21eaac3423b32736fe92c5bd80da94d2a6", "filename": "tools/MapleSkillMakerFetcher/src/tools/data/input/ByteArrayByteStream.java", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/ByteArrayByteStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/ByteArrayByteStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/tools/data/input/ByteArrayByteStream.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,72 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+import tools.HexTool;\n+\n+public class ByteArrayByteStream implements SeekableInputStreamBytestream {\n+    private int pos = 0;\n+    private long bytesRead = 0;\n+    private byte[] arr;\n+\n+    public ByteArrayByteStream(byte[] arr) {\n+        this.arr = arr;\n+    }\n+\n+    @Override\n+    public long getPosition() {\n+        return pos;\n+    }\n+\n+    @Override\n+    public void seek(long offset) throws IOException {\n+        pos = (int) offset;\n+    }\n+\n+    @Override\n+    public long getBytesRead() {\n+        return bytesRead;\n+    }\n+\n+    @Override\n+    public int readByte() {\n+        bytesRead++;\n+        return ((int) arr[pos++]) & 0xFF;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        String nows = \"kevintjuh93 pwns\";//I lol'd\n+        if (arr.length - pos > 0) {\n+            byte[] now = new byte[arr.length - pos];\n+            System.arraycopy(arr, pos, now, 0, arr.length - pos);\n+            nows = HexTool.toString(now);\n+        }\n+        return \"All: \" + HexTool.toString(arr) + \"\\nNow: \" + nows;\n+    }\n+  \n+    @Override\n+    public long available() {\n+        return arr.length - pos;\n+    }\n+}"}, {"sha": "107f71843e5890dc43f8679eb7608ac631165eae", "filename": "tools/MapleSkillMakerFetcher/src/tools/data/input/ByteInputStream.java", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/ByteInputStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/ByteInputStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/tools/data/input/ByteInputStream.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,35 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+/**\n+ * Represents an abstract stream of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public interface ByteInputStream {\n+    int readByte();\n+    long getBytesRead();\n+    long available();\n+}"}, {"sha": "d08a9b8374c3b3a9c38fd898295446e7d3582d50", "filename": "tools/MapleSkillMakerFetcher/src/tools/data/input/GenericLittleEndianAccessor.java", "status": "added", "additions": 239, "deletions": 0, "changes": 239, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/GenericLittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/GenericLittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/tools/data/input/GenericLittleEndianAccessor.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,239 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.awt.Point;\n+import java.io.ByteArrayOutputStream;\n+\n+/**\n+ * Provides a generic interface to a Little Endian stream of bytes.\n+ *\n+ * @version 1.0\n+ * @author Frz\n+ * @since Revision 323\n+ */\n+public class GenericLittleEndianAccessor implements LittleEndianAccessor {\n+    private ByteInputStream bs;\n+\n+    /**\n+     * Class constructor - Wraps the accessor around a stream of bytes.\n+     *\n+     * @param bs The byte stream to wrap the accessor around.\n+     */\n+    public GenericLittleEndianAccessor(ByteInputStream bs) {\n+        this.bs = bs;\n+    }\n+\n+    /**\n+     * Read a single byte from the stream.\n+     *\n+     * @return The byte read.\n+     * @see tools.data.input.ByteInputStream#readByte\n+     */\n+    @Override\n+    public byte readByte() {\n+        return (byte) bs.readByte();\n+    }\n+\n+    /**\n+     * Reads an integer from the stream.\n+     *\n+     * @return The integer read.\n+     */\n+    @Override\n+    public int readInt() {\n+        return bs.readByte() + (bs.readByte() << 8) + (bs.readByte() << 16) + (bs.readByte() << 24);\n+    }\n+\n+    /**\n+     * Reads a short integer from the stream.\n+     *\n+     * @return The short read.\n+     */\n+    @Override\n+    public short readShort() {\n+        return (short) (bs.readByte() + (bs.readByte() << 8));\n+    }\n+\n+    /**\n+     * Reads a single character from the stream.\n+     *\n+     * @return The character read.\n+     */\n+    @Override\n+    public char readChar() {\n+        return (char) readShort();\n+    }\n+\n+    /**\n+     * Reads a long integer from the stream.\n+     *\n+     * @return The long integer read.\n+     */\n+    @Override\n+    public long readLong() {\n+        long byte1 = bs.readByte();\n+        long byte2 = bs.readByte();\n+        long byte3 = bs.readByte();\n+        long byte4 = bs.readByte();\n+        long byte5 = bs.readByte();\n+        long byte6 = bs.readByte();\n+        long byte7 = bs.readByte();\n+        long byte8 = bs.readByte();\n+        return (byte8 << 56) + (byte7 << 48) + (byte6 << 40) + (byte5 << 32) + (byte4 << 24) + (byte3 << 16) + (byte2 << 8) + byte1;\n+    }\n+\n+    /**\n+     * Reads a floating point integer from the stream.\n+     *\n+     * @return The float-type integer read.\n+     */\n+    @Override\n+    public float readFloat() {\n+        return Float.intBitsToFloat(readInt());\n+    }\n+\n+    /**\n+     * Reads a double-precision integer from the stream.\n+     *\n+     * @return The double-type integer read.\n+     */\n+    @Override\n+    public double readDouble() {\n+        return Double.longBitsToDouble(readLong());\n+    }\n+\n+    /**\n+     * Reads an ASCII string from the stream with length <code>n</code>.\n+     *\n+     * @param n Number of characters to read.\n+     * @return The string read.\n+     */\n+    public final String readAsciiString(int n) {\n+        char ret[] = new char[n];\n+        for (int x = 0; x < n; x++) {\n+            ret[x] = (char) readByte();\n+        }\n+        return String.valueOf(ret);\n+    }\n+\n+    /**\n+     * Reads a null-terminated string from the stream.\n+     *\n+     * @return The string read.\n+     */\n+    public final String readNullTerminatedAsciiString() {\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        byte b;\n+        while (true) {\n+            b = readByte();\n+            if (b == 0) {\n+                break;\n+            }\n+            baos.write(b);\n+        }\n+        byte[] buf = baos.toByteArray();\n+        char[] chrBuf = new char[buf.length];\n+        for (int x = 0; x < buf.length; x++) {\n+            chrBuf[x] = (char) buf[x];\n+        }\n+        return String.valueOf(chrBuf);\n+    }\n+\n+    /**\n+     * Gets the number of bytes read from the stream so far.\n+     *\n+     * @return A long integer representing the number of bytes read.\n+     * @see tools.data.input.ByteInputStream#getBytesRead()\n+     */\n+    public long getBytesRead() {\n+        return bs.getBytesRead();\n+    }\n+\n+    /**\n+     * Reads a MapleStory convention lengthed ASCII string.\n+     * This consists of a short integer telling the length of the string,\n+     * then the string itself.\n+     *\n+     * @return The string read.\n+     */\n+    @Override\n+    public String readMapleAsciiString() {\n+        return readAsciiString(readShort());\n+    }\n+\n+    /**\n+     * Reads <code>num</code> bytes off the stream.\n+     *\n+     * @param num The number of bytes to read.\n+     * @return An array of bytes with the length of <code>num</code>\n+     */\n+    @Override\n+    public byte[] read(int num) {\n+        byte[] ret = new byte[num];\n+        for (int x = 0; x < num; x++) {\n+            ret[x] = readByte();\n+        }\n+        return ret;\n+    }\n+\n+    /**\n+     * Reads a MapleStory Position information.\n+     * This consists of 2 short integer.\n+     *\n+     * @return The Position read.\n+     */\n+    @Override\n+    public final Point readPos() {\n+\tfinal int x = readShort();\n+\tfinal int y = readShort();\n+\treturn new Point(x, y);\n+    }\n+\n+    /**\n+     * Skips the current position of the stream <code>num</code> bytes ahead.\n+     *\n+     * @param num Number of bytes to skip.\n+     */\n+    @Override\n+    public void skip(int num) {\n+        for (int x = 0; x < num; x++) {\n+            readByte();\n+        }\n+    }\n+\n+    /**\n+     * @see tools.data.input.ByteInputStream#available\n+     */\n+    @Override\n+    public long available() {\n+        return bs.available();\n+    }\n+\n+    /**\n+     * @see java.lang.Object#toString\n+     */\n+    @Override\n+    public String toString() {\n+        return bs.toString();\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "fdd147d79637904e92445553643117eb0aa6ebf4", "filename": "tools/MapleSkillMakerFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,91 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Provides an abstract accessor to a generic Little Endian byte stream. This\n+ * accessor is seekable.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ * @see tools.data.input.GenericLittleEndianAccessor\n+ */\n+public class GenericSeekableLittleEndianAccessor extends GenericLittleEndianAccessor implements SeekableLittleEndianAccessor {\n+    private SeekableInputStreamBytestream bs;\n+\n+    /**\n+     * Class constructor\n+     * Provide a seekable input stream to wrap this object around.\n+     *\n+     * @param bs The byte stream to wrap this around.\n+     */\n+    public GenericSeekableLittleEndianAccessor(SeekableInputStreamBytestream bs) {\n+        super(bs);\n+        this.bs = bs;\n+    }\n+\n+    /**\n+     * Seek the pointer to <code>offset</code>\n+     *\n+     * @param offset The offset to seek to.\n+     * @see tools.data.input.SeekableInputStreamBytestream#seek\n+     */\n+    @Override\n+    public void seek(long offset) {\n+        try {\n+            bs.seek(offset);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"Seek failed \" + e);\n+        }\n+    }\n+\n+    /**\n+     * Get the current position of the pointer.\n+     *\n+     * @return The current position of the pointer as a long integer.\n+     * @see tools.data.input.SeekableInputStreamBytestream#getPosition\n+     */\n+    @Override\n+    public long getPosition() {\n+        try {\n+            return bs.getPosition();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"getPosition failed\" + e);\n+            return -1;\n+        }\n+    }\n+\n+    /**\n+     * Skip <code>num</code> number of bytes in the stream.\n+     *\n+     * @param num The number of bytes to skip.\n+     */\n+    @Override\n+    public void skip(int num) {\n+        seek(getPosition() + num);\n+    }\n+}"}, {"sha": "70aef3489f8eeaa27e8236c069dd847e069c0a85", "filename": "tools/MapleSkillMakerFetcher/src/tools/data/input/InputStreamByteStream.java", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/InputStreamByteStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/InputStreamByteStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/tools/data/input/InputStreamByteStream.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,93 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+/**\n+ * Provides an abstract wrapper to a stream of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public class InputStreamByteStream implements ByteInputStream {\n+    private InputStream is;\n+    private long read = 0;\n+\n+    /**\n+     * Class constructor.\n+     * Provide an input stream to wrap this around.\n+     *\n+     * @param is The input stream to wrap this object around.\n+     */\n+    public InputStreamByteStream(InputStream is) {\n+        this.is = is;\n+    }\n+\n+    /**\n+     * Reads the next byte from the stream.\n+     *\n+     * @return Then next byte in the stream.\n+     */\n+    @Override\n+    public int readByte() {\n+        int temp;\n+        try {\n+            temp = is.read();\n+            if (temp == -1) {\n+                throw new RuntimeException(\"EOF\");\n+            }\n+            read++;\n+            return temp;\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    /**\n+     * Gets the number of bytes read from the stream.\n+     *\n+     * @return The number of bytes read as a long integer.\n+     */\n+    @Override\n+    public long getBytesRead() {\n+        return read;\n+    }\n+\n+    /**\n+     * Returns the number of bytes left in the stream.\n+     *\n+     * @return The number of bytes available for reading as a long integer.\n+     */\n+    @Override\n+    public long available() {\n+        try {\n+            return is.available();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"ERROR\" + e);\n+            return 0;\n+        }\n+    }\n+}"}, {"sha": "f991dbf537e4230969cf96296d460306fb52c019", "filename": "tools/MapleSkillMakerFetcher/src/tools/data/input/LittleEndianAccessor.java", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/LittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/LittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/tools/data/input/LittleEndianAccessor.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,45 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.awt.Point;\n+\n+/**\n+ * @author Frz\n+ */\n+public interface LittleEndianAccessor {\n+    byte readByte();\n+    char readChar();\n+    short readShort();\n+    int readInt();\n+    Point readPos();\n+    long readLong();\n+    void skip(int num);\n+    byte[] read(int num);\n+    float readFloat();\n+    double readDouble();\n+    String readAsciiString(int n);\n+    String readNullTerminatedAsciiString();\n+    String readMapleAsciiString();\n+    long getBytesRead();\n+    long available();\n+}"}, {"sha": "c0004be17fd1125ee7bff7911c3be489bc488f5c", "filename": "tools/MapleSkillMakerFetcher/src/tools/data/input/RandomAccessByteStream.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/RandomAccessByteStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/RandomAccessByteStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/tools/data/input/RandomAccessByteStream.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,84 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+\n+/**\n+ * Provides an abstract layer to a byte stream. This layer can be accessed\n+ * randomly.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public class RandomAccessByteStream implements SeekableInputStreamBytestream {\n+    private RandomAccessFile raf;\n+    private long read = 0;\n+\n+    public RandomAccessByteStream(RandomAccessFile raf) {\n+        super();\n+        this.raf = raf;\n+    }\n+\n+    @Override\n+    public int readByte() {\n+        int temp;\n+        try {\n+            temp = raf.read();\n+            if (temp == -1) {\n+                throw new RuntimeException(\"EOF\");\n+            }\n+            read++;\n+            return temp;\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void seek(long offset) throws IOException {\n+        raf.seek(offset);\n+    }\n+\n+    @Override\n+    public long getPosition() throws IOException {\n+        return raf.getFilePointer();\n+    }\n+\n+    @Override\n+    public long getBytesRead() {\n+        return read;\n+    }\n+\n+    @Override\n+    public long available() {\n+        try {\n+            return raf.length() - raf.getFilePointer();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"ERROR \" + e);\n+            return 0;\n+        }\n+    }\n+}"}, {"sha": "f4922dc876ef24832968388c0d62c27e9303cf20", "filename": "tools/MapleSkillMakerFetcher/src/tools/data/input/SeekableInputStreamBytestream.java", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/SeekableInputStreamBytestream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/SeekableInputStreamBytestream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/tools/data/input/SeekableInputStreamBytestream.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,51 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Provides an abstract interface to a stream of bytes. This stream can be\n+ * seeked.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since 299\n+ */\n+public interface SeekableInputStreamBytestream extends ByteInputStream {\n+    /**\n+     * Seeks the stream by the specified offset.\n+     *\n+     * @param offset\n+     *            Number of bytes to seek.\n+     * @throws IOException\n+     */\n+    void seek(long offset) throws IOException;\n+\n+    /**\n+     * Gets the current position of the stream.\n+     *\n+     * @return The stream position as a long integer.\n+     * @throws IOException\n+     */\n+    long getPosition() throws IOException;\n+}"}, {"sha": "16b2317f7a5b5d000be9d7f12cd86bdc30d2ed89", "filename": "tools/MapleSkillMakerFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,27 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+public interface SeekableLittleEndianAccessor extends LittleEndianAccessor {\n+    void seek(long offset);\n+    long getPosition();\n+}"}, {"sha": "3275f0ee69d6d495a73311e4a8d4021ef9ddb479", "filename": "tools/MapleSkillMakerReagentIndexer/build.xml", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/build.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/build.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerReagentIndexer/build.xml?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!-- You may freely edit this file. See commented blocks below for -->\n+<!-- some examples of how to customize the build. -->\n+<!-- (If you delete it and reopen the project it will be recreated.) -->\n+<!-- By default, only the Clean and Build commands use this build script. -->\n+<!-- Commands such as Run, Debug, and Test only use this build script if -->\n+<!-- the Compile on Save feature is turned off for the project. -->\n+<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->\n+<!-- in the project's Project Properties dialog box.-->\n+<project name=\"MapleSkillMakerReagentIndexer\" default=\"default\" basedir=\".\">\n+    <description>Builds, tests, and runs the project MapleSkillMakerReagentIndexer.</description>\n+    <import file=\"nbproject/build-impl.xml\"/>\n+    <!--\n+\n+    There exist several targets which are by default empty and which can be \n+    used for execution of your tasks. These targets are usually executed \n+    before and after some main targets. They are: \n+\n+      -pre-init:                 called before initialization of project properties\n+      -post-init:                called after initialization of project properties\n+      -pre-compile:              called before javac compilation\n+      -post-compile:             called after javac compilation\n+      -pre-compile-single:       called before javac compilation of single file\n+      -post-compile-single:      called after javac compilation of single file\n+      -pre-compile-test:         called before javac compilation of JUnit tests\n+      -post-compile-test:        called after javac compilation of JUnit tests\n+      -pre-compile-test-single:  called before javac compilation of single JUnit test\n+      -post-compile-test-single: called after javac compilation of single JUunit test\n+      -pre-jar:                  called before JAR building\n+      -post-jar:                 called after JAR building\n+      -post-clean:               called after cleaning build products\n+\n+    (Targets beginning with '-' are not intended to be called on their own.)\n+\n+    Example of inserting an obfuscator after compilation could look like this:\n+\n+        <target name=\"-post-compile\">\n+            <obfuscate>\n+                <fileset dir=\"${build.classes.dir}\"/>\n+            </obfuscate>\n+        </target>\n+\n+    For list of available properties check the imported \n+    nbproject/build-impl.xml file. \n+\n+\n+    Another way to customize the build is by overriding existing main targets.\n+    The targets of interest are: \n+\n+      -init-macrodef-javac:     defines macro for javac compilation\n+      -init-macrodef-junit:     defines macro for junit execution\n+      -init-macrodef-debug:     defines macro for class debugging\n+      -init-macrodef-java:      defines macro for class execution\n+      -do-jar:                  JAR building\n+      run:                      execution of project \n+      -javadoc-build:           Javadoc generation\n+      test-report:              JUnit report generation\n+\n+    An example of overriding the target for project execution could look like this:\n+\n+        <target name=\"run\" depends=\"MapleSkillMakerReagentIndexer-impl.jar\">\n+            <exec dir=\"bin\" executable=\"launcher.exe\">\n+                <arg file=\"${dist.jar}\"/>\n+            </exec>\n+        </target>\n+\n+    Notice that the overridden target depends on the jar target and not only on \n+    the compile target as the regular run target does. Again, for a list of available \n+    properties which you can use, check the target you are overriding in the\n+    nbproject/build-impl.xml file. \n+\n+    -->\n+</project>"}, {"sha": "02c536569cd167e92e54c1c7c76192bd1e9397c3", "filename": "tools/MapleSkillMakerReagentIndexer/lib/MakerReagentData.sql", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/lib/MakerReagentData.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/lib/MakerReagentData.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerReagentIndexer/lib/MakerReagentData.sql?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,56 @@\n+ # SQL File autogenerated from the MapleSkillMakerReagentIndexer feature by Ronan Lana.\n+ # Generated data is conformant with the Item.wz folder used to compile this.\n+\n+CREATE TABLE IF NOT EXISTS `makerreagentdata` (\n+  `itemid` int(11) NOT NULL,\n+  `stat` varchar(20) NOT NULL,\n+  `value` smallint(6) NOT NULL,\n+  PRIMARY KEY (`itemid`)\n+) ENGINE=MyISAM DEFAULT CHARSET=latin1;\n+\n+INSERT IGNORE INTO `makerreagentdata` (`itemid`, `stat`, `value`) VALUES\n+  (4250000, \"incPAD\", 1),\n+  (4250001, \"incPAD\", 2),\n+  (4250002, \"incPAD\", 3),\n+  (4250100, \"incMAD\", 1),\n+  (4250101, \"incMAD\", 2),\n+  (4250102, \"incMAD\", 3),\n+  (4250200, \"incACC\", 2),\n+  (4250201, \"incACC\", 3),\n+  (4250202, \"incACC\", 5),\n+  (4250300, \"incEVA\", 2),\n+  (4250301, \"incEVA\", 3),\n+  (4250302, \"incEVA\", 5),\n+  (4250400, \"incSpeed\", 2),\n+  (4250401, \"incSpeed\", 3),\n+  (4250402, \"incSpeed\", 5),\n+  (4250500, \"incJump\", 1),\n+  (4250501, \"incJump\", 2),\n+  (4250502, \"incJump\", 3),\n+  (4250600, \"incMaxHP\", 10),\n+  (4250601, \"incMaxHP\", 20),\n+  (4250602, \"incMaxHP\", 30),\n+  (4250700, \"incMaxMP\", 10),\n+  (4250701, \"incMaxMP\", 20),\n+  (4250702, \"incMaxMP\", 30),\n+  (4250800, \"incSTR\", 2),\n+  (4250801, \"incSTR\", 3),\n+  (4250802, \"incSTR\", 5),\n+  (4250900, \"incINT\", 2),\n+  (4250901, \"incINT\", 3),\n+  (4250902, \"incINT\", 5),\n+  (4251000, \"incLUK\", 2),\n+  (4251001, \"incLUK\", 3),\n+  (4251002, \"incLUK\", 5),\n+  (4251100, \"incDEX\", 2),\n+  (4251101, \"incDEX\", 3),\n+  (4251102, \"incDEX\", 5),\n+  (4251200, \"incReqLevel\", -1),\n+  (4251201, \"incReqLevel\", -2),\n+  (4251202, \"incReqLevel\", -3),\n+  (4251300, \"randOption\", 1),\n+  (4251301, \"randOption\", 2),\n+  (4251302, \"randOption\", 3),\n+  (4251400, \"randStat\", 2),\n+  (4251401, \"randStat\", 3),\n+  (4251402, \"randStat\", 5);"}, {"sha": "328e8e5bc3b7f1f7bad2bc0751a933e00c801983", "filename": "tools/MapleSkillMakerReagentIndexer/manifest.mf", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/manifest.mf", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/manifest.mf", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerReagentIndexer/manifest.mf?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,3 @@\n+Manifest-Version: 1.0\n+X-COMMENT: Main-Class will be added automatically by build\n+"}, {"sha": "773305a96f9d3090561a31c33489efe788da58ce", "filename": "tools/MapleSkillMakerReagentIndexer/nbproject/build-impl.xml", "status": "added", "additions": 1448, "deletions": 0, "changes": 1448, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/nbproject/build-impl.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/nbproject/build-impl.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerReagentIndexer/nbproject/build-impl.xml?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,1448 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+*** GENERATED FROM project.xml - DO NOT EDIT  ***\n+***         EDIT ../build.xml INSTEAD         ***\n+\n+For the purpose of easier reading the script\n+is divided into following sections:\n+\n+  - initialization\n+  - compilation\n+  - jar\n+  - execution\n+  - debugging\n+  - javadoc\n+  - test compilation\n+  - test execution\n+  - test debugging\n+  - applet\n+  - cleanup\n+\n+        -->\n+<project xmlns:j2seproject1=\"http://www.netbeans.org/ns/j2se-project/1\" xmlns:j2seproject3=\"http://www.netbeans.org/ns/j2se-project/3\" xmlns:jaxrpc=\"http://www.netbeans.org/ns/j2se-project/jax-rpc\" basedir=\"..\" default=\"default\" name=\"MapleSkillMakerReagentIndexer-impl\">\n+    <fail message=\"Please build using Ant 1.8.0 or higher.\">\n+        <condition>\n+            <not>\n+                <antversion atleast=\"1.8.0\"/>\n+            </not>\n+        </condition>\n+    </fail>\n+    <target depends=\"test,jar,javadoc\" description=\"Build and test whole project.\" name=\"default\"/>\n+    <!-- \n+                ======================\n+                INITIALIZATION SECTION \n+                ======================\n+            -->\n+    <target name=\"-pre-init\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target depends=\"-pre-init\" name=\"-init-private\">\n+        <property file=\"nbproject/private/config.properties\"/>\n+        <property file=\"nbproject/private/configs/${config}.properties\"/>\n+        <property file=\"nbproject/private/private.properties\"/>\n+    </target>\n+    <target depends=\"-pre-init,-init-private\" name=\"-init-user\">\n+        <property file=\"${user.properties.file}\"/>\n+        <!-- The two properties below are usually overridden -->\n+        <!-- by the active platform. Just a fallback. -->\n+        <property name=\"default.javac.source\" value=\"1.4\"/>\n+        <property name=\"default.javac.target\" value=\"1.4\"/>\n+    </target>\n+    <target depends=\"-pre-init,-init-private,-init-user\" name=\"-init-project\">\n+        <property file=\"nbproject/configs/${config}.properties\"/>\n+        <property file=\"nbproject/project.properties\"/>\n+    </target>\n+    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property\" name=\"-do-init\">\n+        <j2seproject1:property name=\"platform.home\" value=\"platforms.${platform.active}.home\"/>\n+        <j2seproject1:property name=\"platform.bootcp\" value=\"platforms.${platform.active}.bootclasspath\"/>\n+        <j2seproject1:property name=\"platform.compiler\" value=\"platforms.${platform.active}.compile\"/>\n+        <j2seproject1:property name=\"platform.javac.tmp\" value=\"platforms.${platform.active}.javac\"/>\n+        <condition property=\"platform.javac\" value=\"${platform.home}/bin/javac\">\n+            <equals arg1=\"${platform.javac.tmp}\" arg2=\"$${platforms.${platform.active}.javac}\"/>\n+        </condition>\n+        <property name=\"platform.javac\" value=\"${platform.javac.tmp}\"/>\n+        <j2seproject1:property name=\"platform.java.tmp\" value=\"platforms.${platform.active}.java\"/>\n+        <condition property=\"platform.java\" value=\"${platform.home}/bin/java\">\n+            <equals arg1=\"${platform.java.tmp}\" arg2=\"$${platforms.${platform.active}.java}\"/>\n+        </condition>\n+        <property name=\"platform.java\" value=\"${platform.java.tmp}\"/>\n+        <j2seproject1:property name=\"platform.javadoc.tmp\" value=\"platforms.${platform.active}.javadoc\"/>\n+        <condition property=\"platform.javadoc\" value=\"${platform.home}/bin/javadoc\">\n+            <equals arg1=\"${platform.javadoc.tmp}\" arg2=\"$${platforms.${platform.active}.javadoc}\"/>\n+        </condition>\n+        <property name=\"platform.javadoc\" value=\"${platform.javadoc.tmp}\"/>\n+        <condition property=\"platform.invalid\" value=\"true\">\n+            <or>\n+                <contains string=\"${platform.javac}\" substring=\"$${platforms.\"/>\n+                <contains string=\"${platform.java}\" substring=\"$${platforms.\"/>\n+                <contains string=\"${platform.javadoc}\" substring=\"$${platforms.\"/>\n+            </or>\n+        </condition>\n+        <fail unless=\"platform.home\">Must set platform.home</fail>\n+        <fail unless=\"platform.bootcp\">Must set platform.bootcp</fail>\n+        <fail unless=\"platform.java\">Must set platform.java</fail>\n+        <fail unless=\"platform.javac\">Must set platform.javac</fail>\n+        <fail if=\"platform.invalid\">\n+ The J2SE Platform is not correctly set up.\n+ Your active platform is: ${platform.active}, but the corresponding property \"platforms.${platform.active}.home\" is not found in the project's properties files. \n+ Either open the project in the IDE and setup the Platform with the same name or add it manually.\n+ For example like this:\n+     ant -Duser.properties.file=&lt;path_to_property_file&gt; jar (where you put the property \"platforms.${platform.active}.home\" in a .properties file)\n+  or ant -Dplatforms.${platform.active}.home=&lt;path_to_JDK_home&gt; jar (where no properties file is used) \n+  </fail>\n+        <available file=\"${manifest.file}\" property=\"manifest.available\"/>\n+        <condition property=\"splashscreen.available\">\n+            <and>\n+                <not>\n+                    <equals arg1=\"${application.splash}\" arg2=\"\" trim=\"true\"/>\n+                </not>\n+                <available file=\"${application.splash}\"/>\n+            </and>\n+        </condition>\n+        <condition property=\"main.class.available\">\n+            <and>\n+                <isset property=\"main.class\"/>\n+                <not>\n+                    <equals arg1=\"${main.class}\" arg2=\"\" trim=\"true\"/>\n+                </not>\n+            </and>\n+        </condition>\n+        <condition property=\"profile.available\">\n+            <and>\n+                <isset property=\"javac.profile\"/>\n+                <length length=\"0\" string=\"${javac.profile}\" when=\"greater\"/>\n+                <matches pattern=\"1\\.[89](\\..*)?\" string=\"${javac.source}\"/>\n+            </and>\n+        </condition>\n+        <condition property=\"do.archive\">\n+            <or>\n+                <not>\n+                    <istrue value=\"${jar.archive.disabled}\"/>\n+                </not>\n+                <istrue value=\"${not.archive.disabled}\"/>\n+            </or>\n+        </condition>\n+        <condition property=\"do.mkdist\">\n+            <and>\n+                <isset property=\"do.archive\"/>\n+                <isset property=\"libs.CopyLibs.classpath\"/>\n+                <not>\n+                    <istrue value=\"${mkdist.disabled}\"/>\n+                </not>\n+            </and>\n+        </condition>\n+        <condition property=\"do.archive+manifest.available\">\n+            <and>\n+                <isset property=\"manifest.available\"/>\n+                <istrue value=\"${do.archive}\"/>\n+            </and>\n+        </condition>\n+        <condition property=\"do.archive+main.class.available\">\n+            <and>\n+                <isset property=\"main.class.available\"/>\n+                <istrue value=\"${do.archive}\"/>\n+            </and>\n+        </condition>\n+        <condition property=\"do.archive+splashscreen.available\">\n+            <and>\n+                <isset property=\"splashscreen.available\"/>\n+                <istrue value=\"${do.archive}\"/>\n+            </and>\n+        </condition>\n+        <condition property=\"do.archive+profile.available\">\n+            <and>\n+                <isset property=\"profile.available\"/>\n+                <istrue value=\"${do.archive}\"/>\n+            </and>\n+        </condition>\n+        <condition property=\"have.tests\">\n+            <or>\n+                <available file=\"${test.src.dir}\"/>\n+            </or>\n+        </condition>\n+        <condition property=\"have.sources\">\n+            <or>\n+                <available file=\"${src.dir}\"/>\n+            </or>\n+        </condition>\n+        <condition property=\"netbeans.home+have.tests\">\n+            <and>\n+                <isset property=\"netbeans.home\"/>\n+                <isset property=\"have.tests\"/>\n+            </and>\n+        </condition>\n+        <condition property=\"no.javadoc.preview\">\n+            <and>\n+                <isset property=\"javadoc.preview\"/>\n+                <isfalse value=\"${javadoc.preview}\"/>\n+            </and>\n+        </condition>\n+        <property name=\"run.jvmargs\" value=\"\"/>\n+        <property name=\"run.jvmargs.ide\" value=\"\"/>\n+        <property name=\"javac.compilerargs\" value=\"\"/>\n+        <property name=\"work.dir\" value=\"${basedir}\"/>\n+        <condition property=\"no.deps\">\n+            <and>\n+                <istrue value=\"${no.dependencies}\"/>\n+            </and>\n+        </condition>\n+        <property name=\"javac.debug\" value=\"true\"/>\n+        <property name=\"javadoc.preview\" value=\"true\"/>\n+        <property name=\"application.args\" value=\"\"/>\n+        <property name=\"source.encoding\" value=\"${file.encoding}\"/>\n+        <property name=\"runtime.encoding\" value=\"${source.encoding}\"/>\n+        <condition property=\"javadoc.encoding.used\" value=\"${javadoc.encoding}\">\n+            <and>\n+                <isset property=\"javadoc.encoding\"/>\n+                <not>\n+                    <equals arg1=\"${javadoc.encoding}\" arg2=\"\"/>\n+                </not>\n+            </and>\n+        </condition>\n+        <property name=\"javadoc.encoding.used\" value=\"${source.encoding}\"/>\n+        <property name=\"includes\" value=\"**\"/>\n+        <property name=\"excludes\" value=\"\"/>\n+        <property name=\"do.depend\" value=\"false\"/>\n+        <condition property=\"do.depend.true\">\n+            <istrue value=\"${do.depend}\"/>\n+        </condition>\n+        <path id=\"endorsed.classpath.path\" path=\"${endorsed.classpath}\"/>\n+        <condition else=\"\" property=\"endorsed.classpath.cmd.line.arg\" value=\"-Xbootclasspath/p:'${toString:endorsed.classpath.path}'\">\n+            <and>\n+                <isset property=\"endorsed.classpath\"/>\n+                <not>\n+                    <equals arg1=\"${endorsed.classpath}\" arg2=\"\" trim=\"true\"/>\n+                </not>\n+            </and>\n+        </condition>\n+        <condition else=\"\" property=\"javac.profile.cmd.line.arg\" value=\"-profile ${javac.profile}\">\n+            <isset property=\"profile.available\"/>\n+        </condition>\n+        <property name=\"jar.index\" value=\"false\"/>\n+        <property name=\"jar.index.metainf\" value=\"${jar.index}\"/>\n+        <property name=\"copylibs.rebase\" value=\"true\"/>\n+        <available file=\"${meta.inf.dir}/persistence.xml\" property=\"has.persistence.xml\"/>\n+        <condition property=\"junit.available\">\n+            <or>\n+                <available classname=\"org.junit.Test\" classpath=\"${run.test.classpath}\"/>\n+                <available classname=\"junit.framework.Test\" classpath=\"${run.test.classpath}\"/>\n+            </or>\n+        </condition>\n+        <condition property=\"testng.available\">\n+            <available classname=\"org.testng.annotations.Test\" classpath=\"${run.test.classpath}\"/>\n+        </condition>\n+        <condition property=\"junit+testng.available\">\n+            <and>\n+                <istrue value=\"${junit.available}\"/>\n+                <istrue value=\"${testng.available}\"/>\n+            </and>\n+        </condition>\n+        <condition else=\"testng\" property=\"testng.mode\" value=\"mixed\">\n+            <istrue value=\"${junit+testng.available}\"/>\n+        </condition>\n+        <condition else=\"\" property=\"testng.debug.mode\" value=\"-mixed\">\n+            <istrue value=\"${junit+testng.available}\"/>\n+        </condition>\n+    </target>\n+    <target name=\"-post-init\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init\" name=\"-init-check\">\n+        <fail unless=\"src.dir\">Must set src.dir</fail>\n+        <fail unless=\"test.src.dir\">Must set test.src.dir</fail>\n+        <fail unless=\"build.dir\">Must set build.dir</fail>\n+        <fail unless=\"dist.dir\">Must set dist.dir</fail>\n+        <fail unless=\"build.classes.dir\">Must set build.classes.dir</fail>\n+        <fail unless=\"dist.javadoc.dir\">Must set dist.javadoc.dir</fail>\n+        <fail unless=\"build.test.classes.dir\">Must set build.test.classes.dir</fail>\n+        <fail unless=\"build.test.results.dir\">Must set build.test.results.dir</fail>\n+        <fail unless=\"build.classes.excludes\">Must set build.classes.excludes</fail>\n+        <fail unless=\"dist.jar\">Must set dist.jar</fail>\n+    </target>\n+    <target name=\"-init-macrodef-property\">\n+        <macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n+            <attribute name=\"name\"/>\n+            <attribute name=\"value\"/>\n+            <sequential>\n+                <property name=\"@{name}\" value=\"${@{value}}\"/>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-macrodef-javac-with-processors\">\n+        <macrodef name=\"javac\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${src.dir}\" name=\"srcdir\"/>\n+            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\n+            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>\n+            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"/>\n+            <attribute default=\"${build.generated.sources.dir}/ap-source-output\" name=\"apgeneratedsrcdir\"/>\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"${javac.debug}\" name=\"debug\"/>\n+            <attribute default=\"${empty.dir}\" name=\"sourcepath\"/>\n+            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"/>\n+            <element name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <property location=\"${build.dir}/empty\" name=\"empty.dir\"/>\n+                <mkdir dir=\"${empty.dir}\"/>\n+                <mkdir dir=\"@{apgeneratedsrcdir}\"/>\n+                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n+                    <src>\n+                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n+                            <include name=\"*\"/>\n+                        </dirset>\n+                    </src>\n+                    <classpath>\n+                        <path path=\"@{classpath}\"/>\n+                    </classpath>\n+                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n+                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"/>\n+                    <compilerarg line=\"${javac.compilerargs}\"/>\n+                    <compilerarg value=\"-processorpath\"/>\n+                    <compilerarg path=\"@{processorpath}:${empty.dir}\"/>\n+                    <compilerarg line=\"${ap.processors.internal}\"/>\n+                    <compilerarg line=\"${annotation.processing.processor.options}\"/>\n+                    <compilerarg value=\"-s\"/>\n+                    <compilerarg path=\"@{apgeneratedsrcdir}\"/>\n+                    <compilerarg line=\"${ap.proc.none.internal}\"/>\n+                    <customize/>\n+                </javac>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-ap-cmdline-properties\" name=\"-init-macrodef-javac-without-processors\" unless=\"ap.supported.internal\">\n+        <macrodef name=\"javac\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${src.dir}\" name=\"srcdir\"/>\n+            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\n+            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>\n+            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"/>\n+            <attribute default=\"${build.generated.sources.dir}/ap-source-output\" name=\"apgeneratedsrcdir\"/>\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"${javac.debug}\" name=\"debug\"/>\n+            <attribute default=\"${empty.dir}\" name=\"sourcepath\"/>\n+            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"/>\n+            <element name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <property location=\"${build.dir}/empty\" name=\"empty.dir\"/>\n+                <mkdir dir=\"${empty.dir}\"/>\n+                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n+                    <src>\n+                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n+                            <include name=\"*\"/>\n+                        </dirset>\n+                    </src>\n+                    <classpath>\n+                        <path path=\"@{classpath}\"/>\n+                    </classpath>\n+                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n+                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"/>\n+                    <compilerarg line=\"${javac.compilerargs}\"/>\n+                    <customize/>\n+                </javac>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors\" name=\"-init-macrodef-javac\">\n+        <macrodef name=\"depend\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${src.dir}\" name=\"srcdir\"/>\n+            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\n+            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>\n+            <sequential>\n+                <depend cache=\"${build.dir}/depcache\" destdir=\"@{destdir}\" excludes=\"${excludes}\" includes=\"${includes}\" srcdir=\"@{srcdir}\">\n+                    <classpath>\n+                        <path path=\"@{classpath}\"/>\n+                    </classpath>\n+                </depend>\n+            </sequential>\n+        </macrodef>\n+        <macrodef name=\"force-recompile\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\n+            <sequential>\n+                <fail unless=\"javac.includes\">Must set javac.includes</fail>\n+                <pathconvert pathsep=\"${line.separator}\" property=\"javac.includes.binary\">\n+                    <path>\n+                        <filelist dir=\"@{destdir}\" files=\"${javac.includes}\"/>\n+                    </path>\n+                    <globmapper from=\"*.java\" to=\"*.class\"/>\n+                </pathconvert>\n+                <tempfile deleteonexit=\"true\" property=\"javac.includesfile.binary\"/>\n+                <echo file=\"${javac.includesfile.binary}\" message=\"${javac.includes.binary}\"/>\n+                <delete>\n+                    <files includesfile=\"${javac.includesfile.binary}\"/>\n+                </delete>\n+                <delete>\n+                    <fileset file=\"${javac.includesfile.binary}\"/>\n+                </delete>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-init\">\n+        <condition else=\"false\" property=\"nb.junit.batch\" value=\"true\">\n+            <and>\n+                <istrue value=\"${junit.available}\"/>\n+                <not>\n+                    <isset property=\"test.method\"/>\n+                </not>\n+            </and>\n+        </condition>\n+        <condition else=\"false\" property=\"nb.junit.single\" value=\"true\">\n+            <and>\n+                <istrue value=\"${junit.available}\"/>\n+                <isset property=\"test.method\"/>\n+            </and>\n+        </condition>\n+    </target>\n+    <target name=\"-init-test-properties\">\n+        <property name=\"test.binaryincludes\" value=\"&lt;nothing&gt;\"/>\n+        <property name=\"test.binarytestincludes\" value=\"\"/>\n+        <property name=\"test.binaryexcludes\" value=\"\"/>\n+    </target>\n+    <target if=\"${nb.junit.single}\" name=\"-init-macrodef-junit-single\" unless=\"${nb.junit.batch}\">\n+        <macrodef name=\"junit\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <element name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <property name=\"junit.forkmode\" value=\"perTest\"/>\n+                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n+                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"/>\n+                    <syspropertyset>\n+                        <propertyref prefix=\"test-sys-prop.\"/>\n+                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\n+                    </syspropertyset>\n+                    <formatter type=\"brief\" usefile=\"false\"/>\n+                    <formatter type=\"xml\"/>\n+                    <jvmarg value=\"-ea\"/>\n+                    <customize/>\n+                </junit>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-batch\" unless=\"${nb.junit.single}\">\n+        <macrodef name=\"junit\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <element name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <property name=\"junit.forkmode\" value=\"perTest\"/>\n+                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n+                    <batchtest todir=\"${build.test.results.dir}\">\n+                        <fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},${excludes}\" includes=\"@{includes}\">\n+                            <filename name=\"@{testincludes}\"/>\n+                        </fileset>\n+                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\n+                            <filename name=\"${test.binarytestincludes}\"/>\n+                        </fileset>\n+                    </batchtest>\n+                    <syspropertyset>\n+                        <propertyref prefix=\"test-sys-prop.\"/>\n+                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\n+                    </syspropertyset>\n+                    <formatter type=\"brief\" usefile=\"false\"/>\n+                    <formatter type=\"xml\"/>\n+                    <jvmarg value=\"-ea\"/>\n+                    <customize/>\n+                </junit>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit\"/>\n+    <target if=\"${testng.available}\" name=\"-init-macrodef-testng\">\n+        <macrodef name=\"testng\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <element name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <condition else=\"\" property=\"testng.methods.arg\" value=\"@{testincludes}.@{testmethods}\">\n+                    <isset property=\"test.method\"/>\n+                </condition>\n+                <union id=\"test.set\">\n+                    <fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},**/*.xml,${excludes}\" includes=\"@{includes}\">\n+                        <filename name=\"@{testincludes}\"/>\n+                    </fileset>\n+                </union>\n+                <taskdef classname=\"org.testng.TestNGAntTask\" classpath=\"${run.test.classpath}\" name=\"testng\"/>\n+                <testng classfilesetref=\"test.set\" failureProperty=\"tests.failed\" jvm=\"${platform.java}\" listeners=\"org.testng.reporters.VerboseReporter\" methods=\"${testng.methods.arg}\" mode=\"${testng.mode}\" outputdir=\"${build.test.results.dir}\" suitename=\"MapleSkillMakerReagentIndexer\" testname=\"TestNG tests\" workingDir=\"${work.dir}\">\n+                    <xmlfileset dir=\"${build.test.classes.dir}\" includes=\"@{testincludes}\"/>\n+                    <propertyset>\n+                        <propertyref prefix=\"test-sys-prop.\"/>\n+                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\n+                    </propertyset>\n+                    <customize/>\n+                </testng>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target name=\"-init-macrodef-test-impl\">\n+        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <echo>No tests executed.</echo>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-macrodef-junit\" if=\"${junit.available}\" name=\"-init-macrodef-junit-impl\">\n+        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <j2seproject3:junit excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n+                    <customize/>\n+                </j2seproject3:junit>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-macrodef-testng\" if=\"${testng.available}\" name=\"-init-macrodef-testng-impl\">\n+        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <j2seproject3:testng excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n+                    <customize/>\n+                </j2seproject3:testng>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl\" name=\"-init-macrodef-test\">\n+        <macrodef name=\"test\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <sequential>\n+                <j2seproject3:test-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n+                    <customize>\n+                        <classpath>\n+                            <path path=\"${run.test.classpath}\"/>\n+                        </classpath>\n+                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n+                        <jvmarg line=\"${run.jvmargs}\"/>\n+                        <jvmarg line=\"${run.jvmargs.ide}\"/>\n+                    </customize>\n+                </j2seproject3:test-impl>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-debug\" unless=\"${nb.junit.batch}\">\n+        <macrodef name=\"junit-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <element name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <property name=\"junit.forkmode\" value=\"perTest\"/>\n+                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n+                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"/>\n+                    <syspropertyset>\n+                        <propertyref prefix=\"test-sys-prop.\"/>\n+                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\n+                    </syspropertyset>\n+                    <formatter type=\"brief\" usefile=\"false\"/>\n+                    <formatter type=\"xml\"/>\n+                    <jvmarg value=\"-ea\"/>\n+                    <jvmarg line=\"${debug-args-line}\"/>\n+                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"/>\n+                    <customize/>\n+                </junit>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-debug-batch\">\n+        <macrodef name=\"junit-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <element name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <property name=\"junit.forkmode\" value=\"perTest\"/>\n+                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n+                    <batchtest todir=\"${build.test.results.dir}\">\n+                        <fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},${excludes}\" includes=\"@{includes}\">\n+                            <filename name=\"@{testincludes}\"/>\n+                        </fileset>\n+                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\n+                            <filename name=\"${test.binarytestincludes}\"/>\n+                        </fileset>\n+                    </batchtest>\n+                    <syspropertyset>\n+                        <propertyref prefix=\"test-sys-prop.\"/>\n+                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\n+                    </syspropertyset>\n+                    <formatter type=\"brief\" usefile=\"false\"/>\n+                    <formatter type=\"xml\"/>\n+                    <jvmarg value=\"-ea\"/>\n+                    <jvmarg line=\"${debug-args-line}\"/>\n+                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"/>\n+                    <customize/>\n+                </junit>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit-debug-impl\">\n+        <macrodef name=\"test-debug-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <j2seproject3:junit-debug excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n+                    <customize/>\n+                </j2seproject3:junit-debug>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target if=\"${testng.available}\" name=\"-init-macrodef-testng-debug\">\n+        <macrodef name=\"testng-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${main.class}\" name=\"testClass\"/>\n+            <attribute default=\"\" name=\"testMethod\"/>\n+            <element name=\"customize2\" optional=\"true\"/>\n+            <sequential>\n+                <condition else=\"-testclass @{testClass}\" property=\"test.class.or.method\" value=\"-methods @{testClass}.@{testMethod}\">\n+                    <isset property=\"test.method\"/>\n+                </condition>\n+                <condition else=\"-suitename MapleSkillMakerReagentIndexer -testname @{testClass} ${test.class.or.method}\" property=\"testng.cmd.args\" value=\"@{testClass}\">\n+                    <matches pattern=\".*\\.xml\" string=\"@{testClass}\"/>\n+                </condition>\n+                <delete dir=\"${build.test.results.dir}\" quiet=\"true\"/>\n+                <mkdir dir=\"${build.test.results.dir}\"/>\n+                <j2seproject3:debug classname=\"org.testng.TestNG\" classpath=\"${debug.test.classpath}\">\n+                    <customize>\n+                        <customize2/>\n+                        <jvmarg value=\"-ea\"/>\n+                        <arg line=\"${testng.debug.mode}\"/>\n+                        <arg line=\"-d ${build.test.results.dir}\"/>\n+                        <arg line=\"-listener org.testng.reporters.VerboseReporter\"/>\n+                        <arg line=\"${testng.cmd.args}\"/>\n+                    </customize>\n+                </j2seproject3:debug>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-macrodef-testng-debug\" if=\"${testng.available}\" name=\"-init-macrodef-testng-debug-impl\">\n+        <macrodef name=\"testng-debug-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${main.class}\" name=\"testClass\"/>\n+            <attribute default=\"\" name=\"testMethod\"/>\n+            <element implicit=\"true\" name=\"customize2\" optional=\"true\"/>\n+            <sequential>\n+                <j2seproject3:testng-debug testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n+                    <customize2/>\n+                </j2seproject3:testng-debug>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-macrodef-junit-debug-impl\" if=\"${junit.available}\" name=\"-init-macrodef-test-debug-junit\">\n+        <macrodef name=\"test-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <attribute default=\"${main.class}\" name=\"testClass\"/>\n+            <attribute default=\"\" name=\"testMethod\"/>\n+            <sequential>\n+                <j2seproject3:test-debug-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n+                    <customize>\n+                        <classpath>\n+                            <path path=\"${run.test.classpath}\"/>\n+                        </classpath>\n+                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n+                        <jvmarg line=\"${run.jvmargs}\"/>\n+                        <jvmarg line=\"${run.jvmargs.ide}\"/>\n+                    </customize>\n+                </j2seproject3:test-debug-impl>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-macrodef-testng-debug-impl\" if=\"${testng.available}\" name=\"-init-macrodef-test-debug-testng\">\n+        <macrodef name=\"test-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${includes}\" name=\"includes\"/>\n+            <attribute default=\"${excludes}\" name=\"excludes\"/>\n+            <attribute default=\"**\" name=\"testincludes\"/>\n+            <attribute default=\"\" name=\"testmethods\"/>\n+            <attribute default=\"${main.class}\" name=\"testClass\"/>\n+            <attribute default=\"\" name=\"testMethod\"/>\n+            <sequential>\n+                <j2seproject3:testng-debug-impl testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n+                    <customize2>\n+                        <syspropertyset>\n+                            <propertyref prefix=\"test-sys-prop.\"/>\n+                            <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\n+                        </syspropertyset>\n+                    </customize2>\n+                </j2seproject3:testng-debug-impl>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng\" name=\"-init-macrodef-test-debug\"/>\n+    <!--\n+                pre NB7.2 profiling section; consider it deprecated\n+            -->\n+    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check\" if=\"profiler.info.jvmargs.agent\" name=\"profile-init\"/>\n+    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre-init\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-post-init\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-macrodef-profile\">\n+        <macrodef name=\"resolve\">\n+            <attribute name=\"name\"/>\n+            <attribute name=\"value\"/>\n+            <sequential>\n+                <property name=\"@{name}\" value=\"${env.@{value}}\"/>\n+            </sequential>\n+        </macrodef>\n+        <macrodef name=\"profile\">\n+            <attribute default=\"${main.class}\" name=\"classname\"/>\n+            <element name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <property environment=\"env\"/>\n+                <resolve name=\"profiler.current.path\" value=\"${profiler.info.pathvar}\"/>\n+                <java classname=\"@{classname}\" dir=\"${profiler.info.dir}\" fork=\"true\" jvm=\"${profiler.info.jvm}\">\n+                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n+                    <jvmarg value=\"${profiler.info.jvmargs.agent}\"/>\n+                    <jvmarg line=\"${profiler.info.jvmargs}\"/>\n+                    <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"/>\n+                    <arg line=\"${application.args}\"/>\n+                    <classpath>\n+                        <path path=\"${run.classpath}\"/>\n+                    </classpath>\n+                    <syspropertyset>\n+                        <propertyref prefix=\"run-sys-prop.\"/>\n+                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>\n+                    </syspropertyset>\n+                    <customize/>\n+                </java>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-check\">\n+        <fail unless=\"profiler.info.jvm\">Must set JVM to use for profiling in profiler.info.jvm</fail>\n+        <fail unless=\"profiler.info.jvmargs.agent\">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent</fail>\n+    </target>\n+    <!--\n+                end of pre NB7.2 profiling section\n+            -->\n+    <target depends=\"-init-debug-args\" name=\"-init-macrodef-nbjpda\">\n+        <macrodef name=\"nbjpdastart\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n+            <attribute default=\"${main.class}\" name=\"name\"/>\n+            <attribute default=\"${debug.classpath}\" name=\"classpath\"/>\n+            <attribute default=\"\" name=\"stopclassname\"/>\n+            <sequential>\n+                <nbjpdastart addressproperty=\"jpda.address\" name=\"@{name}\" stopclassname=\"@{stopclassname}\" transport=\"${debug-transport}\">\n+                    <classpath>\n+                        <path path=\"@{classpath}\"/>\n+                    </classpath>\n+                    <bootclasspath>\n+                        <path path=\"${platform.bootcp}\"/>\n+                    </bootclasspath>\n+                </nbjpdastart>\n+            </sequential>\n+        </macrodef>\n+        <macrodef name=\"nbjpdareload\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n+            <attribute default=\"${build.classes.dir}\" name=\"dir\"/>\n+            <sequential>\n+                <nbjpdareload>\n+                    <fileset dir=\"@{dir}\" includes=\"${fix.classes}\">\n+                        <include name=\"${fix.includes}*.class\"/>\n+                    </fileset>\n+                </nbjpdareload>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target name=\"-init-debug-args\">\n+        <exec executable=\"${platform.java}\" outputproperty=\"version-output\">\n+            <arg value=\"-version\"/>\n+        </exec>\n+        <condition property=\"have-jdk-older-than-1.4\">\n+            <or>\n+                <contains string=\"${version-output}\" substring=\"java version &quot;1.0\"/>\n+                <contains string=\"${version-output}\" substring=\"java version &quot;1.1\"/>\n+                <contains string=\"${version-output}\" substring=\"java version &quot;1.2\"/>\n+                <contains string=\"${version-output}\" substring=\"java version &quot;1.3\"/>\n+            </or>\n+        </condition>\n+        <condition else=\"-Xdebug\" property=\"debug-args-line\" value=\"-Xdebug -Xnoagent -Djava.compiler=none\">\n+            <istrue value=\"${have-jdk-older-than-1.4}\"/>\n+        </condition>\n+        <condition else=\"dt_socket\" property=\"debug-transport-by-os\" value=\"dt_shmem\">\n+            <os family=\"windows\"/>\n+        </condition>\n+        <condition else=\"${debug-transport-by-os}\" property=\"debug-transport\" value=\"${debug.transport}\">\n+            <isset property=\"debug.transport\"/>\n+        </condition>\n+    </target>\n+    <target depends=\"-init-debug-args\" name=\"-init-macrodef-debug\">\n+        <macrodef name=\"debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${main.class}\" name=\"classname\"/>\n+            <attribute default=\"${debug.classpath}\" name=\"classpath\"/>\n+            <element name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\n+                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n+                    <jvmarg line=\"${debug-args-line}\"/>\n+                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"/>\n+                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"/>\n+                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"/>\n+                    <jvmarg line=\"${run.jvmargs}\"/>\n+                    <jvmarg line=\"${run.jvmargs.ide}\"/>\n+                    <classpath>\n+                        <path path=\"@{classpath}\"/>\n+                    </classpath>\n+                    <syspropertyset>\n+                        <propertyref prefix=\"run-sys-prop.\"/>\n+                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>\n+                    </syspropertyset>\n+                    <customize/>\n+                </java>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target name=\"-init-macrodef-java\">\n+        <macrodef name=\"java\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n+            <attribute default=\"${main.class}\" name=\"classname\"/>\n+            <attribute default=\"${run.classpath}\" name=\"classpath\"/>\n+            <attribute default=\"jvm\" name=\"jvm\"/>\n+            <element name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\n+                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n+                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"/>\n+                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"/>\n+                    <jvmarg line=\"${run.jvmargs}\"/>\n+                    <jvmarg line=\"${run.jvmargs.ide}\"/>\n+                    <classpath>\n+                        <path path=\"@{classpath}\"/>\n+                    </classpath>\n+                    <syspropertyset>\n+                        <propertyref prefix=\"run-sys-prop.\"/>\n+                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>\n+                    </syspropertyset>\n+                    <customize/>\n+                </java>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target name=\"-init-macrodef-copylibs\">\n+        <macrodef name=\"copylibs\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <attribute default=\"${manifest.file}\" name=\"manifest\"/>\n+            <element name=\"customize\" optional=\"true\"/>\n+            <sequential>\n+                <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"/>\n+                <pathconvert property=\"run.classpath.without.build.classes.dir\">\n+                    <path path=\"${run.classpath}\"/>\n+                    <map from=\"${build.classes.dir.resolved}\" to=\"\"/>\n+                </pathconvert>\n+                <pathconvert pathsep=\" \" property=\"jar.classpath\">\n+                    <path path=\"${run.classpath.without.build.classes.dir}\"/>\n+                    <chainedmapper>\n+                        <flattenmapper/>\n+                        <filtermapper>\n+                            <replacestring from=\" \" to=\"%20\"/>\n+                        </filtermapper>\n+                        <globmapper from=\"*\" to=\"lib/*\"/>\n+                    </chainedmapper>\n+                </pathconvert>\n+                <taskdef classname=\"org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs\" classpath=\"${libs.CopyLibs.classpath}\" name=\"copylibs\"/>\n+                <copylibs compress=\"${jar.compress}\" excludeFromCopy=\"${copylibs.excludes}\" index=\"${jar.index}\" indexMetaInf=\"${jar.index.metainf}\" jarfile=\"${dist.jar}\" manifest=\"@{manifest}\" rebase=\"${copylibs.rebase}\" runtimeclasspath=\"${run.classpath.without.build.classes.dir}\">\n+                    <fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"/>\n+                    <manifest>\n+                        <attribute name=\"Class-Path\" value=\"${jar.classpath}\"/>\n+                        <customize/>\n+                    </manifest>\n+                </copylibs>\n+            </sequential>\n+        </macrodef>\n+    </target>\n+    <target name=\"-init-presetdef-jar\">\n+        <presetdef name=\"jar\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n+            <jar compress=\"${jar.compress}\" index=\"${jar.index}\" jarfile=\"${dist.jar}\">\n+                <j2seproject1:fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"/>\n+            </jar>\n+        </presetdef>\n+    </target>\n+    <target name=\"-init-ap-cmdline-properties\">\n+        <property name=\"annotation.processing.enabled\" value=\"true\"/>\n+        <property name=\"annotation.processing.processors.list\" value=\"\"/>\n+        <property name=\"annotation.processing.processor.options\" value=\"\"/>\n+        <property name=\"annotation.processing.run.all.processors\" value=\"true\"/>\n+        <property name=\"javac.processorpath\" value=\"${javac.classpath}\"/>\n+        <property name=\"javac.test.processorpath\" value=\"${javac.test.classpath}\"/>\n+        <condition property=\"ap.supported.internal\" value=\"true\">\n+            <not>\n+                <matches pattern=\"1\\.[0-5](\\..*)?\" string=\"${javac.source}\"/>\n+            </not>\n+        </condition>\n+    </target>\n+    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-ap-cmdline-supported\">\n+        <condition else=\"\" property=\"ap.processors.internal\" value=\"-processor ${annotation.processing.processors.list}\">\n+            <isfalse value=\"${annotation.processing.run.all.processors}\"/>\n+        </condition>\n+        <condition else=\"\" property=\"ap.proc.none.internal\" value=\"-proc:none\">\n+            <isfalse value=\"${annotation.processing.enabled}\"/>\n+        </condition>\n+    </target>\n+    <target depends=\"-init-ap-cmdline-properties,-init-ap-cmdline-supported\" name=\"-init-ap-cmdline\">\n+        <property name=\"ap.cmd.line.internal\" value=\"\"/>\n+    </target>\n+    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline\" name=\"init\"/>\n+    <!--\n+                ===================\n+                COMPILATION SECTION\n+                ===================\n+            -->\n+    <target name=\"-deps-jar-init\" unless=\"built-jar.properties\">\n+        <property location=\"${build.dir}/built-jar.properties\" name=\"built-jar.properties\"/>\n+        <delete file=\"${built-jar.properties}\" quiet=\"true\"/>\n+    </target>\n+    <target if=\"already.built.jar.${basedir}\" name=\"-warn-already-built-jar\">\n+        <echo level=\"warn\" message=\"Cycle detected: MapleSkillMakerReagentIndexer was already built\"/>\n+    </target>\n+    <target depends=\"init,-deps-jar-init\" name=\"deps-jar\" unless=\"no.deps\">\n+        <mkdir dir=\"${build.dir}\"/>\n+        <touch file=\"${built-jar.properties}\" verbose=\"false\"/>\n+        <property file=\"${built-jar.properties}\" prefix=\"already.built.jar.\"/>\n+        <antcall target=\"-warn-already-built-jar\"/>\n+        <propertyfile file=\"${built-jar.properties}\">\n+            <entry key=\"${basedir}\" value=\"\"/>\n+        </propertyfile>\n+    </target>\n+    <target depends=\"init,-check-automatic-build,-clean-after-automatic-build\" name=\"-verify-automatic-build\"/>\n+    <target depends=\"init\" name=\"-check-automatic-build\">\n+        <available file=\"${build.classes.dir}/.netbeans_automatic_build\" property=\"netbeans.automatic.build\"/>\n+    </target>\n+    <target depends=\"init\" if=\"netbeans.automatic.build\" name=\"-clean-after-automatic-build\">\n+        <antcall target=\"clean\"/>\n+    </target>\n+    <target depends=\"init,deps-jar\" name=\"-pre-pre-compile\">\n+        <mkdir dir=\"${build.classes.dir}\"/>\n+    </target>\n+    <target name=\"-pre-compile\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target if=\"do.depend.true\" name=\"-compile-depend\">\n+        <pathconvert property=\"build.generated.subdirs\">\n+            <dirset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n+                <include name=\"*\"/>\n+            </dirset>\n+        </pathconvert>\n+        <j2seproject3:depend srcdir=\"${src.dir}:${build.generated.subdirs}\"/>\n+    </target>\n+    <target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend\" if=\"have.sources\" name=\"-do-compile\">\n+        <j2seproject3:javac gensrcdir=\"${build.generated.sources.dir}\"/>\n+        <copy todir=\"${build.classes.dir}\">\n+            <fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>\n+        </copy>\n+    </target>\n+    <target if=\"has.persistence.xml\" name=\"-copy-persistence-xml\">\n+        <mkdir dir=\"${build.classes.dir}/META-INF\"/>\n+        <copy todir=\"${build.classes.dir}/META-INF\">\n+            <fileset dir=\"${meta.inf.dir}\" includes=\"persistence.xml orm.xml\"/>\n+        </copy>\n+    </target>\n+    <target name=\"-post-compile\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile\" description=\"Compile project.\" name=\"compile\"/>\n+    <target name=\"-pre-compile-single\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target depends=\"init,deps-jar,-pre-pre-compile\" name=\"-do-compile-single\">\n+        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes</fail>\n+        <j2seproject3:force-recompile/>\n+        <j2seproject3:javac excludes=\"\" gensrcdir=\"${build.generated.sources.dir}\" includes=\"${javac.includes}\" sourcepath=\"${src.dir}\"/>\n+    </target>\n+    <target name=\"-post-compile-single\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single\" name=\"compile-single\"/>\n+    <!--\n+                ====================\n+                JAR BUILDING SECTION\n+                ====================\n+            -->\n+    <target depends=\"init\" name=\"-pre-pre-jar\">\n+        <dirname file=\"${dist.jar}\" property=\"dist.jar.dir\"/>\n+        <mkdir dir=\"${dist.jar.dir}\"/>\n+    </target>\n+    <target name=\"-pre-jar\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target depends=\"init\" if=\"do.archive\" name=\"-do-jar-create-manifest\" unless=\"manifest.available\">\n+        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"/>\n+        <touch file=\"${tmp.manifest.file}\" verbose=\"false\"/>\n+    </target>\n+    <target depends=\"init\" if=\"do.archive+manifest.available\" name=\"-do-jar-copy-manifest\">\n+        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"/>\n+        <copy file=\"${manifest.file}\" tofile=\"${tmp.manifest.file}\"/>\n+    </target>\n+    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+main.class.available\" name=\"-do-jar-set-mainclass\">\n+        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n+            <attribute name=\"Main-Class\" value=\"${main.class}\"/>\n+        </manifest>\n+    </target>\n+    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+profile.available\" name=\"-do-jar-set-profile\">\n+        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n+            <attribute name=\"Profile\" value=\"${javac.profile}\"/>\n+        </manifest>\n+    </target>\n+    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+splashscreen.available\" name=\"-do-jar-set-splashscreen\">\n+        <basename file=\"${application.splash}\" property=\"splashscreen.basename\"/>\n+        <mkdir dir=\"${build.classes.dir}/META-INF\"/>\n+        <copy failonerror=\"false\" file=\"${application.splash}\" todir=\"${build.classes.dir}/META-INF\"/>\n+        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n+            <attribute name=\"SplashScreen-Image\" value=\"META-INF/${splashscreen.basename}\"/>\n+        </manifest>\n+    </target>\n+    <target depends=\"init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.mkdist\" name=\"-do-jar-copylibs\">\n+        <j2seproject3:copylibs manifest=\"${tmp.manifest.file}\"/>\n+        <echo level=\"info\">To run this application from the command line without Ant, try:</echo>\n+        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"/>\n+        <echo level=\"info\">${platform.java} -jar \"${dist.jar.resolved}\"</echo>\n+    </target>\n+    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.archive\" name=\"-do-jar-jar\" unless=\"do.mkdist\">\n+        <j2seproject1:jar manifest=\"${tmp.manifest.file}\"/>\n+        <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"/>\n+        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"/>\n+        <pathconvert property=\"run.classpath.with.dist.jar\">\n+            <path path=\"${run.classpath}\"/>\n+            <map from=\"${build.classes.dir.resolved}\" to=\"${dist.jar.resolved}\"/>\n+        </pathconvert>\n+        <condition else=\"\" property=\"jar.usage.message\" value=\"To run this application from the command line without Ant, try:${line.separator}${platform.java} -cp ${run.classpath.with.dist.jar} ${main.class}\">\n+            <isset property=\"main.class.available\"/>\n+        </condition>\n+        <condition else=\"debug\" property=\"jar.usage.level\" value=\"info\">\n+            <isset property=\"main.class.available\"/>\n+        </condition>\n+        <echo level=\"${jar.usage.level}\" message=\"${jar.usage.message}\"/>\n+    </target>\n+    <target depends=\"-do-jar-copylibs\" if=\"do.archive\" name=\"-do-jar-delete-manifest\">\n+        <delete>\n+            <fileset file=\"${tmp.manifest.file}\"/>\n+        </delete>\n+    </target>\n+    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest\" name=\"-do-jar-without-libraries\"/>\n+    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest\" name=\"-do-jar-with-libraries\"/>\n+    <target name=\"-post-jar\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target depends=\"init,compile,-pre-jar,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar\" name=\"-do-jar\"/>\n+    <target depends=\"init,compile,-pre-jar,-do-jar,-post-jar\" description=\"Build JAR.\" name=\"jar\"/>\n+    <!--\n+                =================\n+                EXECUTION SECTION\n+                =================\n+            -->\n+    <target depends=\"init,compile\" description=\"Run a main class.\" name=\"run\">\n+        <j2seproject1:java>\n+            <customize>\n+                <arg line=\"${application.args}\"/>\n+            </customize>\n+        </j2seproject1:java>\n+    </target>\n+    <target name=\"-do-not-recompile\">\n+        <property name=\"javac.includes.binary\" value=\"\"/>\n+    </target>\n+    <target depends=\"init,compile-single\" name=\"run-single\">\n+        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\n+        <j2seproject1:java classname=\"${run.class}\"/>\n+    </target>\n+    <target depends=\"init,compile-test-single\" name=\"run-test-with-main\">\n+        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\n+        <j2seproject1:java classname=\"${run.class}\" classpath=\"${run.test.classpath}\"/>\n+    </target>\n+    <!--\n+                =================\n+                DEBUGGING SECTION\n+                =================\n+            -->\n+    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger\">\n+        <j2seproject1:nbjpdastart name=\"${debug.class}\"/>\n+    </target>\n+    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-main-test\">\n+        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${debug.class}\"/>\n+    </target>\n+    <target depends=\"init,compile\" name=\"-debug-start-debuggee\">\n+        <j2seproject3:debug>\n+            <customize>\n+                <arg line=\"${application.args}\"/>\n+            </customize>\n+        </j2seproject3:debug>\n+    </target>\n+    <target depends=\"init,compile,-debug-start-debugger,-debug-start-debuggee\" description=\"Debug project in IDE.\" if=\"netbeans.home\" name=\"debug\"/>\n+    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-stepinto\">\n+        <j2seproject1:nbjpdastart stopclassname=\"${main.class}\"/>\n+    </target>\n+    <target depends=\"init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee\" if=\"netbeans.home\" name=\"debug-stepinto\"/>\n+    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-single\">\n+        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class</fail>\n+        <j2seproject3:debug classname=\"${debug.class}\"/>\n+    </target>\n+    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-single\" if=\"netbeans.home\" name=\"debug-single\"/>\n+    <target depends=\"init,compile-test-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-main-test\">\n+        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class</fail>\n+        <j2seproject3:debug classname=\"${debug.class}\" classpath=\"${debug.test.classpath}\"/>\n+    </target>\n+    <target depends=\"init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test\" if=\"netbeans.home\" name=\"debug-test-with-main\"/>\n+    <target depends=\"init\" name=\"-pre-debug-fix\">\n+        <fail unless=\"fix.includes\">Must set fix.includes</fail>\n+        <property name=\"javac.includes\" value=\"${fix.includes}.java\"/>\n+    </target>\n+    <target depends=\"init,-pre-debug-fix,compile-single\" if=\"netbeans.home\" name=\"-do-debug-fix\">\n+        <j2seproject1:nbjpdareload/>\n+    </target>\n+    <target depends=\"init,-pre-debug-fix,-do-debug-fix\" if=\"netbeans.home\" name=\"debug-fix\"/>\n+    <!--\n+                =================\n+                PROFILING SECTION\n+                =================\n+            -->\n+    <!--\n+                pre NB7.2 profiler integration\n+            -->\n+    <target depends=\"profile-init,compile\" description=\"Profile a project in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre72\">\n+        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\n+        <nbprofiledirect>\n+            <classpath>\n+                <path path=\"${run.classpath}\"/>\n+            </classpath>\n+        </nbprofiledirect>\n+        <profile/>\n+    </target>\n+    <target depends=\"profile-init,compile-single\" description=\"Profile a selected class in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-single-pre72\">\n+        <fail unless=\"profile.class\">Must select one file in the IDE or set profile.class</fail>\n+        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\n+        <nbprofiledirect>\n+            <classpath>\n+                <path path=\"${run.classpath}\"/>\n+            </classpath>\n+        </nbprofiledirect>\n+        <profile classname=\"${profile.class}\"/>\n+    </target>\n+    <target depends=\"profile-init,compile-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-applet-pre72\">\n+        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\n+        <nbprofiledirect>\n+            <classpath>\n+                <path path=\"${run.classpath}\"/>\n+            </classpath>\n+        </nbprofiledirect>\n+        <profile classname=\"sun.applet.AppletViewer\">\n+            <customize>\n+                <arg value=\"${applet.url}\"/>\n+            </customize>\n+        </profile>\n+    </target>\n+    <target depends=\"profile-init,compile-test-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-test-single-pre72\">\n+        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\n+        <nbprofiledirect>\n+            <classpath>\n+                <path path=\"${run.test.classpath}\"/>\n+            </classpath>\n+        </nbprofiledirect>\n+        <junit dir=\"${profiler.info.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" jvm=\"${profiler.info.jvm}\" showoutput=\"true\">\n+            <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"/>\n+            <jvmarg value=\"${profiler.info.jvmargs.agent}\"/>\n+            <jvmarg line=\"${profiler.info.jvmargs}\"/>\n+            <test name=\"${profile.class}\"/>\n+            <classpath>\n+                <path path=\"${run.test.classpath}\"/>\n+            </classpath>\n+            <syspropertyset>\n+                <propertyref prefix=\"test-sys-prop.\"/>\n+                <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\n+            </syspropertyset>\n+            <formatter type=\"brief\" usefile=\"false\"/>\n+            <formatter type=\"xml\"/>\n+        </junit>\n+    </target>\n+    <!--\n+                end of pre NB72 profiling section\n+            -->\n+    <target if=\"netbeans.home\" name=\"-profile-check\">\n+        <condition property=\"profiler.configured\">\n+            <or>\n+                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-agentpath:\"/>\n+                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-javaagent:\"/>\n+            </or>\n+        </condition>\n+    </target>\n+    <target depends=\"-profile-check,-profile-pre72\" description=\"Profile a project in the IDE.\" if=\"profiler.configured\" name=\"profile\" unless=\"profiler.info.jvmargs.agent\">\n+        <startprofiler/>\n+        <antcall target=\"run\"/>\n+    </target>\n+    <target depends=\"-profile-check,-profile-single-pre72\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-single\" unless=\"profiler.info.jvmargs.agent\">\n+        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\n+        <startprofiler/>\n+        <antcall target=\"run-single\"/>\n+    </target>\n+    <target depends=\"-profile-test-single-pre72\" description=\"Profile a selected test in the IDE.\" name=\"profile-test-single\"/>\n+    <target depends=\"-profile-check\" description=\"Profile a selected test in the IDE.\" if=\"profiler.configured\" name=\"profile-test\" unless=\"profiler.info.jvmargs\">\n+        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes</fail>\n+        <startprofiler/>\n+        <antcall target=\"test-single\"/>\n+    </target>\n+    <target depends=\"-profile-check\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-test-with-main\">\n+        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\n+        <startprofiler/>\n+        <antcal target=\"run-test-with-main\"/>\n+    </target>\n+    <target depends=\"-profile-check,-profile-applet-pre72\" if=\"profiler.configured\" name=\"profile-applet\" unless=\"profiler.info.jvmargs.agent\">\n+        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>\n+        <startprofiler/>\n+        <antcall target=\"run-applet\"/>\n+    </target>\n+    <!--\n+                ===============\n+                JAVADOC SECTION\n+                ===============\n+            -->\n+    <target depends=\"init\" if=\"have.sources\" name=\"-javadoc-build\">\n+        <mkdir dir=\"${dist.javadoc.dir}\"/>\n+        <condition else=\"\" property=\"javadoc.endorsed.classpath.cmd.line.arg\" value=\"-J${endorsed.classpath.cmd.line.arg}\">\n+            <and>\n+                <isset property=\"endorsed.classpath.cmd.line.arg\"/>\n+                <not>\n+                    <equals arg1=\"${endorsed.classpath.cmd.line.arg}\" arg2=\"\"/>\n+                </not>\n+            </and>\n+        </condition>\n+        <exec executable=\"${platform.java}\" failonerror=\"false\" outputproperty=\"platform.version.output\">\n+            <arg value=\"-version\"/>\n+        </exec>\n+        <condition else=\"\" property=\"bug5101868workaround\" value=\"*.java\">\n+            <matches multiline=\"true\" pattern=\"1\\.[56](\\..*)?\" string=\"${platform.version.output}\"/>\n+        </condition>\n+        <javadoc additionalparam=\"-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}\" author=\"${javadoc.author}\" charset=\"UTF-8\" destdir=\"${dist.javadoc.dir}\" docencoding=\"UTF-8\" encoding=\"${javadoc.encoding.used}\" executable=\"${platform.javadoc}\" failonerror=\"true\" noindex=\"${javadoc.noindex}\" nonavbar=\"${javadoc.nonavbar}\" notree=\"${javadoc.notree}\" private=\"${javadoc.private}\" source=\"${javac.source}\" splitindex=\"${javadoc.splitindex}\" use=\"${javadoc.use}\" useexternalfile=\"true\" version=\"${javadoc.version}\" windowtitle=\"${javadoc.windowtitle}\">\n+            <classpath>\n+                <path path=\"${javac.classpath}\"/>\n+            </classpath>\n+            <fileset dir=\"${src.dir}\" excludes=\"${bug5101868workaround},${excludes}\" includes=\"${includes}\">\n+                <filename name=\"**/*.java\"/>\n+            </fileset>\n+            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n+                <include name=\"**/*.java\"/>\n+                <exclude name=\"*.java\"/>\n+            </fileset>\n+            <arg line=\"${javadoc.endorsed.classpath.cmd.line.arg}\"/>\n+        </javadoc>\n+        <copy todir=\"${dist.javadoc.dir}\">\n+            <fileset dir=\"${src.dir}\" excludes=\"${excludes}\" includes=\"${includes}\">\n+                <filename name=\"**/doc-files/**\"/>\n+            </fileset>\n+            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n+                <include name=\"**/doc-files/**\"/>\n+            </fileset>\n+        </copy>\n+    </target>\n+    <target depends=\"init,-javadoc-build\" if=\"netbeans.home\" name=\"-javadoc-browse\" unless=\"no.javadoc.preview\">\n+        <nbbrowse file=\"${dist.javadoc.dir}/index.html\"/>\n+    </target>\n+    <target depends=\"init,-javadoc-build,-javadoc-browse\" description=\"Build Javadoc.\" name=\"javadoc\"/>\n+    <!--\n+                =========================\n+                TEST COMPILATION SECTION\n+                =========================\n+            -->\n+    <target depends=\"init,compile\" if=\"have.tests\" name=\"-pre-pre-compile-test\">\n+        <mkdir dir=\"${build.test.classes.dir}\"/>\n+    </target>\n+    <target name=\"-pre-compile-test\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target if=\"do.depend.true\" name=\"-compile-test-depend\">\n+        <j2seproject3:depend classpath=\"${javac.test.classpath}\" destdir=\"${build.test.classes.dir}\" srcdir=\"${test.src.dir}\"/>\n+    </target>\n+    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend\" if=\"have.tests\" name=\"-do-compile-test\">\n+        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" processorpath=\"${javac.test.processorpath}\" srcdir=\"${test.src.dir}\"/>\n+        <copy todir=\"${build.test.classes.dir}\">\n+            <fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>\n+        </copy>\n+    </target>\n+    <target name=\"-post-compile-test\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test\" name=\"compile-test\"/>\n+    <target name=\"-pre-compile-test-single\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test-single\" if=\"have.tests\" name=\"-do-compile-test-single\">\n+        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes</fail>\n+        <j2seproject3:force-recompile destdir=\"${build.test.classes.dir}\"/>\n+        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" excludes=\"\" includes=\"${javac.includes}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"${test.src.dir}\" srcdir=\"${test.src.dir}\"/>\n+        <copy todir=\"${build.test.classes.dir}\">\n+            <fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>\n+        </copy>\n+    </target>\n+    <target name=\"-post-compile-test-single\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single\" name=\"compile-test-single\"/>\n+    <!--\n+                =======================\n+                TEST EXECUTION SECTION\n+                =======================\n+            -->\n+    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run\">\n+        <mkdir dir=\"${build.test.results.dir}\"/>\n+    </target>\n+    <target depends=\"init,compile-test,-pre-test-run\" if=\"have.tests\" name=\"-do-test-run\">\n+        <j2seproject3:test includes=\"${includes}\" testincludes=\"**/*Test.java\"/>\n+    </target>\n+    <target depends=\"init,compile-test,-pre-test-run,-do-test-run\" if=\"have.tests\" name=\"-post-test-run\">\n+        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>\n+    </target>\n+    <target depends=\"init\" if=\"have.tests\" name=\"test-report\"/>\n+    <target depends=\"init\" if=\"netbeans.home+have.tests\" name=\"-test-browse\"/>\n+    <target depends=\"init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse\" description=\"Run unit tests.\" name=\"test\"/>\n+    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run-single\">\n+        <mkdir dir=\"${build.test.results.dir}\"/>\n+    </target>\n+    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single\">\n+        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes</fail>\n+        <j2seproject3:test excludes=\"\" includes=\"${test.includes}\" testincludes=\"${test.includes}\"/>\n+    </target>\n+    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single\" if=\"have.tests\" name=\"-post-test-run-single\">\n+        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>\n+    </target>\n+    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single\" description=\"Run single unit test.\" name=\"test-single\"/>\n+    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single-method\">\n+        <fail unless=\"test.class\">Must select some files in the IDE or set test.class</fail>\n+        <fail unless=\"test.method\">Must select some method in the IDE or set test.method</fail>\n+        <j2seproject3:test excludes=\"\" includes=\"${javac.includes}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"/>\n+    </target>\n+    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method\" if=\"have.tests\" name=\"-post-test-run-single-method\">\n+        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>\n+    </target>\n+    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method\" description=\"Run single unit test.\" name=\"test-single-method\"/>\n+    <!--\n+                =======================\n+                TEST DEBUGGING SECTION\n+                =======================\n+            -->\n+    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test\">\n+        <fail unless=\"test.class\">Must select one file in the IDE or set test.class</fail>\n+        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testincludes=\"${javac.includes}\"/>\n+    </target>\n+    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test-method\">\n+        <fail unless=\"test.class\">Must select one file in the IDE or set test.class</fail>\n+        <fail unless=\"test.method\">Must select some method in the IDE or set test.method</fail>\n+        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testMethod=\"${test.method}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"/>\n+    </target>\n+    <target depends=\"init,compile-test\" if=\"netbeans.home+have.tests\" name=\"-debug-start-debugger-test\">\n+        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${test.class}\"/>\n+    </target>\n+    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test\" name=\"debug-test\"/>\n+    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method\" name=\"debug-test-method\"/>\n+    <target depends=\"init,-pre-debug-fix,compile-test-single\" if=\"netbeans.home\" name=\"-do-debug-fix-test\">\n+        <j2seproject1:nbjpdareload dir=\"${build.test.classes.dir}\"/>\n+    </target>\n+    <target depends=\"init,-pre-debug-fix,-do-debug-fix-test\" if=\"netbeans.home\" name=\"debug-fix-test\"/>\n+    <!--\n+                =========================\n+                APPLET EXECUTION SECTION\n+                =========================\n+            -->\n+    <target depends=\"init,compile-single\" name=\"run-applet\">\n+        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>\n+        <j2seproject1:java classname=\"sun.applet.AppletViewer\">\n+            <customize>\n+                <arg value=\"${applet.url}\"/>\n+            </customize>\n+        </j2seproject1:java>\n+    </target>\n+    <!--\n+                =========================\n+                APPLET DEBUGGING  SECTION\n+                =========================\n+            -->\n+    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-applet\">\n+        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>\n+        <j2seproject3:debug classname=\"sun.applet.AppletViewer\">\n+            <customize>\n+                <arg value=\"${applet.url}\"/>\n+            </customize>\n+        </j2seproject3:debug>\n+    </target>\n+    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet\" if=\"netbeans.home\" name=\"debug-applet\"/>\n+    <!--\n+                ===============\n+                CLEANUP SECTION\n+                ===============\n+            -->\n+    <target name=\"-deps-clean-init\" unless=\"built-clean.properties\">\n+        <property location=\"${build.dir}/built-clean.properties\" name=\"built-clean.properties\"/>\n+        <delete file=\"${built-clean.properties}\" quiet=\"true\"/>\n+    </target>\n+    <target if=\"already.built.clean.${basedir}\" name=\"-warn-already-built-clean\">\n+        <echo level=\"warn\" message=\"Cycle detected: MapleSkillMakerReagentIndexer was already built\"/>\n+    </target>\n+    <target depends=\"init,-deps-clean-init\" name=\"deps-clean\" unless=\"no.deps\">\n+        <mkdir dir=\"${build.dir}\"/>\n+        <touch file=\"${built-clean.properties}\" verbose=\"false\"/>\n+        <property file=\"${built-clean.properties}\" prefix=\"already.built.clean.\"/>\n+        <antcall target=\"-warn-already-built-clean\"/>\n+        <propertyfile file=\"${built-clean.properties}\">\n+            <entry key=\"${basedir}\" value=\"\"/>\n+        </propertyfile>\n+    </target>\n+    <target depends=\"init\" name=\"-do-clean\">\n+        <delete dir=\"${build.dir}\"/>\n+        <delete dir=\"${dist.dir}\" followsymlinks=\"false\" includeemptydirs=\"true\"/>\n+    </target>\n+    <target name=\"-post-clean\">\n+        <!-- Empty placeholder for easier customization. -->\n+        <!-- You can override this target in the ../build.xml file. -->\n+    </target>\n+    <target depends=\"init,deps-clean,-do-clean,-post-clean\" description=\"Clean build products.\" name=\"clean\"/>\n+    <target name=\"-check-call-dep\">\n+        <property file=\"${call.built.properties}\" prefix=\"already.built.\"/>\n+        <condition property=\"should.call.dep\">\n+            <and>\n+                <not>\n+                    <isset property=\"already.built.${call.subproject}\"/>\n+                </not>\n+                <available file=\"${call.script}\"/>\n+            </and>\n+        </condition>\n+    </target>\n+    <target depends=\"-check-call-dep\" if=\"should.call.dep\" name=\"-maybe-call-dep\">\n+        <ant antfile=\"${call.script}\" inheritall=\"false\" target=\"${call.target}\">\n+            <propertyset>\n+                <propertyref prefix=\"transfer.\"/>\n+                <mapper from=\"transfer.*\" to=\"*\" type=\"glob\"/>\n+            </propertyset>\n+        </ant>\n+    </target>\n+</project>"}, {"sha": "af30fbb9f19767f55c1e6cfa7dd3b63519a85dc3", "filename": "tools/MapleSkillMakerReagentIndexer/nbproject/genfiles.properties", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/nbproject/genfiles.properties", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/nbproject/genfiles.properties", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerReagentIndexer/nbproject/genfiles.properties?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,8 @@\n+build.xml.data.CRC32=49f97f2c\n+build.xml.script.CRC32=75bbe280\n+build.xml.stylesheet.CRC32=8064a381@1.75.2.48\n+# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.\n+# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.\n+nbproject/build-impl.xml.data.CRC32=49f97f2c\n+nbproject/build-impl.xml.script.CRC32=919b8bee\n+nbproject/build-impl.xml.stylesheet.CRC32=876e7a8f@1.75.2.48"}, {"sha": "05e10df1c401468908dccc20cc3f620d88181e25", "filename": "tools/MapleSkillMakerReagentIndexer/nbproject/project.properties", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/nbproject/project.properties", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/nbproject/project.properties", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerReagentIndexer/nbproject/project.properties?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,73 @@\n+annotation.processing.enabled=true\n+annotation.processing.enabled.in.editor=false\n+annotation.processing.processor.options=\n+annotation.processing.processors.list=\n+annotation.processing.run.all.processors=true\n+annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output\n+build.classes.dir=${build.dir}/classes\n+build.classes.excludes=**/*.java,**/*.form\n+# This directory is removed when the project is cleaned:\n+build.dir=build\n+build.generated.dir=${build.dir}/generated\n+build.generated.sources.dir=${build.dir}/generated-sources\n+# Only compile against the classpath explicitly listed here:\n+build.sysclasspath=ignore\n+build.test.classes.dir=${build.dir}/test/classes\n+build.test.results.dir=${build.dir}/test/results\n+# Uncomment to specify the preferred debugger connection transport:\n+#debug.transport=dt_socket\n+debug.classpath=\\\n+    ${run.classpath}\n+debug.test.classpath=\\\n+    ${run.test.classpath}\n+# Os arquivos em build.classes.dir que devem ser exclu\\u00eddos do jar de distribui\\u00e7\\u00e3o\n+dist.archive.excludes=\n+# This directory is removed when the project is cleaned:\n+dist.dir=dist\n+dist.jar=${dist.dir}/MapleSkillMakerReagentIndexer.jar\n+dist.javadoc.dir=${dist.dir}/javadoc\n+excludes=\n+includes=**\n+jar.compress=false\n+javac.classpath=\n+# Space-separated list of extra javac options\n+javac.compilerargs=\n+javac.deprecation=false\n+javac.processorpath=\\\n+    ${javac.classpath}\n+javac.source=1.7\n+javac.target=1.7\n+javac.test.classpath=\\\n+    ${javac.classpath}:\\\n+    ${build.classes.dir}\n+javac.test.processorpath=\\\n+    ${javac.test.classpath}\n+javadoc.additionalparam=\n+javadoc.author=false\n+javadoc.encoding=${source.encoding}\n+javadoc.noindex=false\n+javadoc.nonavbar=false\n+javadoc.notree=false\n+javadoc.private=false\n+javadoc.splitindex=true\n+javadoc.use=true\n+javadoc.version=false\n+javadoc.windowtitle=\n+main.class=mapleskillmakerreagentindexer.MapleSkillMakerReagentIndexer\n+manifest.file=manifest.mf\n+meta.inf.dir=${src.dir}/META-INF\n+mkdist.disabled=false\n+platform.active=JDK_1.7\n+run.classpath=\\\n+    ${javac.classpath}:\\\n+    ${build.classes.dir}\n+# Space-separated list of JVM arguments used when running the project.\n+# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.\n+# To set system properties for unit tests define test-sys-prop.name=value:\n+run.jvmargs=\n+run.test.classpath=\\\n+    ${javac.test.classpath}:\\\n+    ${build.test.classes.dir}\n+source.encoding=UTF-8\n+src.dir=src\n+test.src.dir=test"}, {"sha": "24af6599c45d3fd36979047e99e0d973ae0aa54f", "filename": "tools/MapleSkillMakerReagentIndexer/nbproject/project.xml", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/nbproject/project.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/nbproject/project.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerReagentIndexer/nbproject/project.xml?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://www.netbeans.org/ns/project/1\">\n+    <type>org.netbeans.modules.java.j2seproject</type>\n+    <configuration>\n+        <data xmlns=\"http://www.netbeans.org/ns/j2se-project/3\">\n+            <name>MapleSkillMakerReagentIndexer</name>\n+            <explicit-platform explicit-source-supported=\"true\"/>\n+            <source-roots>\n+                <root id=\"src.dir\"/>\n+            </source-roots>\n+            <test-roots>\n+                <root id=\"test.src.dir\"/>\n+            </test-roots>\n+        </data>\n+    </configuration>\n+</project>"}, {"sha": "464db4ab045f46c3e0c3a1e20e1113d4ae8f2070", "filename": "tools/MapleSkillMakerReagentIndexer/src/mapleskillmakerreagentindexer/MapleSkillMakerReagentIndexer.java", "status": "added", "additions": 226, "deletions": 0, "changes": 226, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/src/mapleskillmakerreagentindexer/MapleSkillMakerReagentIndexer.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/src/mapleskillmakerreagentindexer/MapleSkillMakerReagentIndexer.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerReagentIndexer/src/mapleskillmakerreagentindexer/MapleSkillMakerReagentIndexer.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,226 @@\n+/*\n+ *     This file is part of the MapleSolaxiaV2 Maple Story Server\n+ *\n+ * Copyright (C) 2017 RonanLana\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mapleskillmakerreagentindexer;\n+\n+import java.io.BufferedReader;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.io.PrintWriter;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+\n+/**\n+ *\n+ * @author RonanLana\n+ * \n+ * The main objective of this program is to index relevant reagent data\n+ * from the Item.wz folder and generate a SQL table with them, to be used\n+ * by the server source.\n+ * \n+ */\n+public class MapleSkillMakerReagentIndexer {\n+    static String host = \"jdbc:mysql://localhost:3306/maplesolaxia\";\n+    static String driver = \"com.mysql.jdbc.Driver\";\n+    static String username = \"root\";\n+    static String password = \"\";\n+\n+    static String fileName = \"../../wz/Item.wz/Etc/0425.img.xml\";\n+    static String newFile = \"lib/MakerReagentData.sql\";\n+\n+    static PrintWriter printWriter = null;\n+    static InputStreamReader fileReader = null;\n+    static BufferedReader bufferedReader = null;\n+    static byte status = 0;\n+    \n+    static int id = -1;\n+    static List<Pair<Integer, Pair<String, Integer>>> reagentList = new ArrayList<>();\n+    \n+    static int initialStringLength = 50;\n+    \n+    private static String getName(String token) {\n+        int i, j;\n+        char[] dest;\n+        String d;\n+\n+        i = token.lastIndexOf(\"name\");\n+        i = token.indexOf(\"\\\"\", i) + 1; //lower bound of the string\n+        j = token.indexOf(\"\\\"\", i);     //upper bound\n+\n+        dest = new char[initialStringLength];\n+        token.getChars(i, j, dest, 0);\n+\n+        d = new String(dest);\n+        return(d.trim());\n+    }\n+    \n+    private static String getValue(String token) {\n+        int i, j;\n+        char[] dest;\n+        String d;\n+\n+        i = token.lastIndexOf(\"value\");\n+        i = token.indexOf(\"\\\"\", i) + 1; //lower bound of the string\n+        j = token.indexOf(\"\\\"\", i);     //upper bound\n+\n+        dest = new char[initialStringLength];\n+        token.getChars(i, j, dest, 0);\n+\n+        d = new String(dest);\n+        return(d.trim());\n+    }\n+\n+    private static void simpleToken(String token) {\n+        if(token.contains(\"/imgdir\")) {\n+            status -= 1;\n+        }\n+        else if(token.contains(\"imgdir\")) {\n+            status += 1;\n+        }\n+    }\n+    \n+    private static void forwardCursor(int st) {\n+        String line = null;\n+\n+        try {\n+            while(status >= st && (line = bufferedReader.readLine()) != null) {\n+                simpleToken(line);\n+            }\n+        }\n+        catch(Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+    \n+    private static void translateToken(String token) {\n+        String d;\n+\n+        if(token.contains(\"/imgdir\")) {\n+            status -= 1;\n+        }\n+        else if(token.contains(\"imgdir\")) {\n+            if(status == 1) {           //getting id\n+                d = getName(token);\n+                id = Integer.parseInt(d);\n+                System.out.println(\"Parsing maker reagent id \" + id);\n+            } else if(status == 2) {\n+                d = getName(token);\n+                if(!d.equals(\"info\")) {\n+                    System.out.println(\"not info\");\n+                    forwardCursor(status);\n+                }\n+            }\n+            \n+            status += 1;\n+        } else {\n+            if(status == 3) {\n+                if(token.contains(\"int\")) {\n+                    d = getName(token);\n+                    \n+                    if(d.contains(\"inc\") || d.contains(\"rand\")) {\n+                        Integer v = Integer.valueOf(getValue(token));\n+                        Pair<String, Integer> reagBuff = new Pair<>(d, v);\n+                        \n+                        Pair<Integer, Pair<String, Integer>> reagItem = new Pair<>(id, reagBuff);\n+                        reagentList.add(reagItem);\n+                    }\n+                } else {\n+                    if(token.contains(\"canvas\")) {\n+                        forwardCursor(status + 1);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    \n+    private static void SortReagentList() {\n+        Collections.sort(reagentList, new Comparator<Pair<Integer, Pair<String, Integer>>>() {\n+            @Override\n+            public int compare(Pair<Integer, Pair<String, Integer>> p1, Pair<Integer, Pair<String, Integer>> p2) {\n+                return p1.getLeft().compareTo(p2.getLeft());\n+            }\n+        });\n+    }\n+    \n+    private static void WriteMakerReagentTableFile() {\n+        printWriter.println(\" # SQL File autogenerated from the MapleSkillMakerReagentIndexer feature by Ronan Lana.\");\n+        printWriter.println(\" # Generated data is conformant with the Item.wz folder used to compile this.\");\n+        printWriter.println();\n+        \n+        printWriter.println(\"CREATE TABLE IF NOT EXISTS `makerreagentdata` (\");\n+        printWriter.println(\"  `itemid` int(11) NOT NULL,\");\n+        printWriter.println(\"  `stat` varchar(20) NOT NULL,\");\n+        printWriter.println(\"  `value` smallint(6) NOT NULL,\");\n+        printWriter.println(\"  PRIMARY KEY (`itemid`)\");\n+        printWriter.println(\") ENGINE=MyISAM DEFAULT CHARSET=latin1;\");\n+        printWriter.println();\n+        \n+        StringBuilder sb = new StringBuilder(\"INSERT IGNORE INTO `makerreagentdata` (`itemid`, `stat`, `value`) VALUES\\r\\n\");\n+        \n+        for(Pair<Integer, Pair<String, Integer>> it : reagentList) {\n+            sb.append(\"  (\" + it.left + \", \\\"\" + it.right.left + \"\\\", \" + it.right.right + \"),\\r\\n\");\n+        }\n+        \n+        sb.setLength(sb.length() - 3);\n+        sb.append(\";\");\n+        \n+        printWriter.println(sb);\n+    }\n+\n+    private static void WriteMakerReagentTableData() {\n+        // This will reference one line at a time\n+        String line = null;\n+\n+        try {\n+            fileReader = new InputStreamReader(new FileInputStream(fileName), \"UTF-8\");\n+            bufferedReader = new BufferedReader(fileReader);\n+            \n+            while((line = bufferedReader.readLine()) != null) {\n+                translateToken(line);\n+            }\n+            \n+            bufferedReader.close();\n+            fileReader.close();\n+            \n+            SortReagentList();\n+            \n+            printWriter = new PrintWriter(newFile, \"UTF-8\");\n+            WriteMakerReagentTableFile();\n+            printWriter.close();\n+        }\n+\n+        catch(FileNotFoundException ex) {\n+            System.out.println(\"Unable to open file '\" + fileName + \"'\");\n+        }\n+        catch(IOException ex) {\n+            System.out.println(\"Error reading file '\" + fileName + \"'\");\n+        }\n+\n+        catch(Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        WriteMakerReagentTableData();\n+    }\n+}"}, {"sha": "9377cb81784510cdbfc6abda8fc9aeae82d1a822", "filename": "tools/MapleSkillMakerReagentIndexer/src/mapleskillmakerreagentindexer/Pair.java", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/src/mapleskillmakerreagentindexer/Pair.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/tools/MapleSkillMakerReagentIndexer/src/mapleskillmakerreagentindexer/Pair.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleSkillMakerReagentIndexer/src/mapleskillmakerreagentindexer/Pair.java?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -0,0 +1,121 @@\n+/*\n+This file is part of the OdinMS Maple Story Server\n+Copyright (C) 2008 ~ 2010 Patrick Huy <patrick.huy@frz.cc> \n+Matthias Butz <matze@odinms.de>\n+Jan Christian Meyer <vimes@odinms.de>\n+\n+This program is free software: you can redistribute it and/or modify\n+it under the terms of the GNU Affero General Public License version 3\n+as published by the Free Software Foundation. You may not use, modify\n+or distribute this program under any other version of the\n+GNU Affero General Public License.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU Affero General Public License for more details.\n+\n+You should have received a copy of the GNU Affero General Public License\n+along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mapleskillmakerreagentindexer;\n+\n+/**\n+ * Represents a pair of values.\n+ * \n+ * @author Frz\n+ * @since Revision 333\n+ * @version 1.0\n+ * \n+ * @param <E> The type of the left value.\n+ * @param <F> The type of the right value.\n+ */\n+public class Pair<E, F> {\n+\n+    public E left;\n+    public F right;\n+\n+    /**\n+     * Class constructor - pairs two objects together.\n+     *\n+     * @param left The left object.\n+     * @param right The right object.\n+     */\n+    public Pair(E left, F right) {\n+        this.left = left;\n+        this.right = right;\n+    }\n+\n+    /**\n+     * Gets the left value.\n+     *\n+     * @return The left value.\n+     */\n+    public E getLeft() {\n+        return left;\n+    }\n+\n+    /**\n+     * Gets the right value.\n+     *\n+     * @return The right value.\n+     */\n+    public F getRight() {\n+        return right;\n+    }\n+\n+    /**\n+     * Turns the pair into a string.\n+     *\n+     * @return Each value of the pair as a string joined by a colon.\n+     */\n+    @Override\n+    public String toString() {\n+        return left.toString() + \":\" + right.toString();\n+    }\n+\n+    /**\n+     * Gets the hash code of this pair.\n+     */\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((left == null) ? 0 : left.hashCode());\n+        result = prime * result + ((right == null) ? 0 : right.hashCode());\n+        return result;\n+    }\n+\n+    /**\n+     * Checks to see if two pairs are equal.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final Pair other = (Pair) obj;\n+        if (left == null) {\n+            if (other.left != null) {\n+                return false;\n+            }\n+        } else if (!left.equals(other.left)) {\n+            return false;\n+        }\n+        if (right == null) {\n+            if (other.right != null) {\n+                return false;\n+            }\n+        } else if (!right.equals(other.right)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "95f52423badb53dd315c6203b3ddf34842a6b83d", "filename": "wz/Quest.wz/Act.img.xml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/wz/Quest.wz/Act.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/wz/Quest.wz/Act.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/Quest.wz/Act.img.xml?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -34682,7 +34682,6 @@\n     <imgdir name=\"1\">\n     </imgdir>\n     <imgdir name=\"0\">\n-      <int name=\"money\" value=\"-10000\"/>\n     </imgdir>\n   </imgdir>\n   <imgdir name=\"6033\">"}, {"sha": "3c5fa81f82b4cb4be738bc504f3b1e6a383a180d", "filename": "wz/Quest.wz/Check.img.xml", "status": "modified", "additions": 3, "deletions": 53, "changes": 56, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/wz/Quest.wz/Check.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/wz/Quest.wz/Check.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/Quest.wz/Check.img.xml?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -56514,33 +56514,12 @@\n           <int name=\"state\" value=\"2\"/>\n         </imgdir>\n       </imgdir>\n-      <imgdir name=\"infoex\">\n-        <imgdir name=\"0\">\n-          <string name=\"value\" value=\"111\"/>\n-        </imgdir>\n-      </imgdir>\n     </imgdir>\n   </imgdir>\n   <imgdir name=\"6030\">\n     <imgdir name=\"0\">\n       <int name=\"npc\" value=\"2110004\"/>\n       <int name=\"lvmin\" value=\"45\"/>\n-      <int name=\"interval\" value=\"0\"/>\n-      <int name=\"infoNumber\" value=\"6029\"/>\n-      <imgdir name=\"infoex\">\n-        <imgdir name=\"0\">\n-          <string name=\"value\" value=\"000\"/>\n-        </imgdir>\n-        <imgdir name=\"1\">\n-          <string name=\"value\" value=\"010\"/>\n-        </imgdir>\n-        <imgdir name=\"2\">\n-          <string name=\"value\" value=\"011\"/>\n-        </imgdir>\n-        <imgdir name=\"3\">\n-          <string name=\"value\" value=\"001\"/>\n-        </imgdir>\n-      </imgdir>\n       <imgdir name=\"quest\">\n         <imgdir name=\"0\">\n           <int name=\"id\" value=\"6029\"/>\n@@ -56628,32 +56607,18 @@\n     <imgdir name=\"1\">\n       <int name=\"npc\" value=\"2111000\"/>\n       <string name=\"endscript\" value=\"q6030e\"/>\n+      <int name=\"endmeso\" value=\"10000\"/>\n     </imgdir>\n   </imgdir>\n   <imgdir name=\"6031\">\n     <imgdir name=\"1\">\n       <int name=\"npc\" value=\"2012017\"/>\n       <string name=\"endscript\" value=\"q6031e\"/>\n+      <int name=\"endmeso\" value=\"10000\"/>\n     </imgdir>\n     <imgdir name=\"0\">\n       <int name=\"npc\" value=\"2110004\"/>\n       <int name=\"lvmin\" value=\"45\"/>\n-      <int name=\"interval\" value=\"0\"/>\n-      <int name=\"infoNumber\" value=\"6029\"/>\n-      <imgdir name=\"infoex\">\n-        <imgdir name=\"0\">\n-          <string name=\"value\" value=\"000\"/>\n-        </imgdir>\n-        <imgdir name=\"1\">\n-          <string name=\"value\" value=\"100\"/>\n-        </imgdir>\n-        <imgdir name=\"2\">\n-          <string name=\"value\" value=\"101\"/>\n-        </imgdir>\n-        <imgdir name=\"3\">\n-          <string name=\"value\" value=\"001\"/>\n-        </imgdir>\n-      </imgdir>\n       <imgdir name=\"quest\">\n         <imgdir name=\"0\">\n           <int name=\"id\" value=\"6029\"/>\n@@ -56743,22 +56708,6 @@\n     <imgdir name=\"0\">\n       <int name=\"npc\" value=\"2110004\"/>\n       <int name=\"lvmin\" value=\"45\"/>\n-      <int name=\"interval\" value=\"0\"/>\n-      <int name=\"infoNumber\" value=\"6029\"/>\n-      <imgdir name=\"infoex\">\n-        <imgdir name=\"0\">\n-          <string name=\"value\" value=\"000\"/>\n-        </imgdir>\n-        <imgdir name=\"1\">\n-          <string name=\"value\" value=\"100\"/>\n-        </imgdir>\n-        <imgdir name=\"2\">\n-          <string name=\"value\" value=\"110\"/>\n-        </imgdir>\n-        <imgdir name=\"3\">\n-          <string name=\"value\" value=\"010\"/>\n-        </imgdir>\n-      </imgdir>\n       <imgdir name=\"quest\">\n         <imgdir name=\"0\">\n           <int name=\"id\" value=\"6029\"/>\n@@ -56846,6 +56795,7 @@\n     <imgdir name=\"1\">\n       <int name=\"npc\" value=\"2110004\"/>\n       <string name=\"endscript\" value=\"q6032e\"/>\n+      <int name=\"endmeso\" value=\"10000\"/>\n     </imgdir>\n   </imgdir>\n   <imgdir name=\"6033\">"}, {"sha": "3fbc6c45a109161a70d715a85a613f4598f3fc5f", "filename": "wz/Quest.wz/Say.img.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/3b30244239892e62467a937cd65a9cf23477ce52/wz/Quest.wz/Say.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/3b30244239892e62467a937cd65a9cf23477ce52/wz/Quest.wz/Say.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/Quest.wz/Say.img.xml?ref=3b30244239892e62467a937cd65a9cf23477ce52", "patch": "@@ -22668,7 +22668,7 @@\n     <imgdir name=\"0\">\n       <string name=\"0\" value=\"Ahh... What should I do... I wish he was here right now, so he can help me with this... what should I do...\"/>\n       <string name=\"1\" value=\"Ah... are you a traveler? It&apos;s really hard to find anyone willing to travel to Magatia... Nice to meet you. The kid you see right there is my daughter, and her name is #p2111005#. She may have an ever-present smile on her face, but she is actually a very sick child.\"/>\n-      <string name=\"2\" value=\"Even our best magcian, the president of the Zenumist Society, told me he can&apos;t do anything about #p2111005#. Alcadno? ...Alcadno wouldn&apos;t want to do anything with the kid... I don&apos;t know what to do .\"/>\n+      <string name=\"2\" value=\"Even our best magician, the president of the Zenumist Society, told me he can&apos;t do anything about #p2111005#. Alcadno? ...Alcadno wouldn&apos;t want to do anything with the kid... I don&apos;t know what to do .\"/>\n       <string name=\"3\" value=\"If I could get a hold of him, then he could very well help... but it&apos;s so hard to contact him... Ah! Excuse me, but have you ever been to #b#m200000000##k? If you have, then can you do me a big favor?\"/>\n       <imgdir name=\"yes\">\n         <string name=\"0\" value=\"Do you know of #b#p2012018##k at #m200000000#? He is very proficient with Fairy potions, and I&apos;d like for him to help us out. I know he&apos;s capable of curing #p2111005#. If it&apos;s about #p2111004#, then I am sure he&apos;ll help out, no questions asked.  Please visit him and ask for me, okay?\"/>"}]}]},
