{"fetchDate": "2019-12-19", "content": [{"sha": "cdac59326a8da9e8c0b5189540af65afdbedbef6", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6Y2RhYzU5MzI2YThkYTllOGMwYjUxODk1NDBhZjY1YWZkYmVkYmVmNg==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2018-06-07T15:57:56Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2018-06-07T15:57:56Z"}, "message": "Maker & Storage fetch Wz + Buff system & PS / HM patch + Pet Evolution\n\nStorage now fetches transaction fees from the WZ.\nMaker now pulls info about catalyzers from the WZ.\nFixed the enhanced buff system disappearing with some statsup when using multiple-statups items.\nFixed hired merchant now removing owner and visitors at expiration time.\nFixed some concurrent issues with player shops and hired merchants.\nFixed pet evolutions, now not only handing out not-expired pets but also refreshing the expire time as well.\nAdded item replace behaviour on the item expire system.", "tree": {"sha": "25abb59a7169ada4eb7dd967b4d192a434b08ee2", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/25abb59a7169ada4eb7dd967b4d192a434b08ee2"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/cdac59326a8da9e8c0b5189540af65afdbedbef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/cdac59326a8da9e8c0b5189540af65afdbedbef6", "html_url": "https://github.com/ronancpl/HeavenMS/commit/cdac59326a8da9e8c0b5189540af65afdbedbef6", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/cdac59326a8da9e8c0b5189540af65afdbedbef6/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce74680953404d438922f2cd57b925aad5e6babd", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/ce74680953404d438922f2cd57b925aad5e6babd", "html_url": "https://github.com/ronancpl/HeavenMS/commit/ce74680953404d438922f2cd57b925aad5e6babd"}], "stats": {"total": 748, "additions": 486, "deletions": 262}, "files": [{"sha": "a9ac5aba662f04ead2be35547fcbbf4a4a308d23", "filename": "README.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/README.md", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/README.md", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/README.md?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -67,9 +67,11 @@ If you REALLY liked what you have seen on the project, please feel free to donat\n \n Paypal: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=3K8KVTWRLFBQ4\n \n-### Note about public server\n+### Disclaimer\n \n-HeavenMS staff has __no current intention__ to publicly open a server with this source, if that ever comes to happen this note will be lifted. __Don't be scammed!__\n+* HeavenMS staff has __no current intention__ to publicly open a server with this source, if that ever comes to happen this note will be lifted. __Don't be scammed!__\n+\n+* This server source is __NOT intended to be stable__ as is. Proper deadlock review and other maintenance checks are needed in order to make it stable for production use.\n \n ---\n ### Preparing the ambient "}, {"sha": "5ad8868efdc53765a40a361bee4f55b54b0b3c8b", "filename": "docs/feature_list.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/docs/feature_list.md", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/docs/feature_list.md", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/feature_list.md?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -115,6 +115,7 @@ Player potentials:\n * All Equipment levels up.\n * Player level rates.\n * Gain fame by quests.\n+* Pet evolutions functional (not GMS-like).\n \n Server potentials:\n "}, {"sha": "041c1ddaf5c04a862e85ee77ab31552507e08fd3", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -1000,7 +1000,7 @@ Corrigido marriage ring sendo destru\u00eddo indevidamente ao usar certos pergaminho\n Edi\u00e7\u00e3o de localhost: removido bloqueio de uso de AP para jogadores novatos.\n Adicionado server flag que permite mec\u00e2nica de statup para jogadores novatos com level menor que 11. Necess\u00e1rio uso do localhost editado.\n \n-01 - 04 Maio 2018,\n+01 - 04 Junho 2018,\n Corrigido NPC de recrutamento para CafePQ n\u00e3o atuando corretamente com a flag que permite estilo do old-GMS PQ NPCs.\n Corrigido mensagem de an\u00fancio de Strategy Time para todas as guilds que estiverem se registrando quando a fila est\u00e1 vazia (mesmo que outra guild j\u00e1 esteja nessa etapa).\n Edi\u00e7\u00e3o de localhost: removido bloqueio de uso de gemas para WATK/MATK em equipamentos que n\u00e3o s\u00e3o weapons.\n@@ -1010,4 +1010,13 @@ Retirado aspecto aleat\u00f3rio de ganho de closeness em pets ao usar o Pet Food, ad\n Corrigido script da Arwen n\u00e3o retirando itens ao gerar certos itens.\n Corrigido script de viagem para Florina levando jogadores a Lith Harbor mesmo quando entrando por outras regi\u00f5es.\n Corrigido Stance, Berserk, Ninja Storm, Concentrate, Mage skills and other 4th job skills questlines.\n-Novo release: Light.\n\\ No newline at end of file\n+Novo release: Light.\n+\n+05 - 06 Junho 2018,\n+Modificado storage para pegar taxas de transa\u00e7\u00e3o de itens do WZ.\n+Corrigido buff system retirando certos stats incoerentemente ao usar itens que atuam em diversos stats.\n+Corrigido hired merchants agora removendo visitantes e dono quando expira.\n+Item maker agora puxa itemid de catalisadores do WZ.\n+Corrigido sistema de evolu\u00e7\u00e3o de pets passando valor de expira\u00e7\u00e3o com overflow pro novo pet, que resultava em pet inativo.\n+Melhorado prote\u00e7\u00e3o contra acesso concorrente em mais algumas se\u00e7\u00f5es de c\u00f3digo de player shop e hired merchants.\n+Adicionado comportamento de substitui\u00e7\u00e3o de itens ao expirar, cortesia do GabrielSin.\n\\ No newline at end of file"}, {"sha": "cd7b8718540dc1a006047c102af5cf51f8954ac6", "filename": "scripts/event/WeddingCathedral.js", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/scripts/event/WeddingCathedral.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/scripts/event/WeddingCathedral.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/event/WeddingCathedral.js?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -1,3 +1,23 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+\n /**\n  * @author: Ronan\n  * @event: Cathedral Wedding"}, {"sha": "fbf147bad4c88e30c10457f5d2bb414ad7a1b7d8", "filename": "scripts/event/WeddingChapel.js", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/scripts/event/WeddingChapel.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/scripts/event/WeddingChapel.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/event/WeddingChapel.js?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -1,3 +1,23 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+\n /**\n  * @author: Ronan\n  * @event: Chapel Wedding"}, {"sha": "fc5020fa67409cfd44d719f530166214348a2c23", "filename": "scripts/npc/1032102.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/scripts/npc/1032102.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/scripts/npc/1032102.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1032102.js?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -100,7 +100,7 @@ function action(mode, type, selection) {\n \t\t\t\tcm.gainItem(5380000, -1);\n \t\t\t\tcm.evolvePet(i, after);\n                                 \n-\t\t\t\tcm.sendOk(\"Your dragon has now evolved!! It used to be a #i\" + id + \"##t\" + id + \"#, and now it's a #i\" + after + \"##t\" + after + \"#!\");\n+\t\t\t\tcm.sendOk(\"Your dragon has now evolved!! It used to be a #i\" + id + \"# #t\" + id + \"#, and now it's a #i\" + after + \"# #t\" + after + \"#!\");\n \t\t\t\tcm.dispose();\n \t\t\t}\n \t\t} else if (status == 2) {"}, {"sha": "5f21a7940e4ca1e4c04c281f051ff65952e7fae1", "filename": "scripts/npc/9977777.js", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/scripts/npc/9977777.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/scripts/npc/9977777.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9977777.js?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -39,7 +39,7 @@ function addFeature(feature) {\n }\n \n function writeFeatureTab_PQs() {\n-        addFeature(\"HPQ/KPQ/LPQ/LMPQ/OPQ/EllinPQ/PiratePQ/AmoriaPQ.\");\n+        addFeature(\"HPQ/KPQ/LPQ/LMPQ/OPQ/APQ/EllinPQ/PiratePQ.\");\n         addFeature(\"MagatiaPQ/HorntailPQ/TreasurePQ/ElnathPQ.\");\n         addFeature(\"CWKPQ as Expedition-based event.\");\n         addFeature(\"Scarga/Horntail/Showa/Balrog/Zakum/Pinkbean.\");\n@@ -75,6 +75,7 @@ function writeFeatureTab_PlayerSocialNetwork() {\n         addFeature(\"Proper item pickup cooldown on non-owned items.\");\n         addFeature(\"Improved ranking system, with daily movement.\");\n         addFeature(\"Automated support for Player NPCs and Hall of Fame.\");\n+        addFeature(\"Engagement & Wedding system.\");\n }\n \n function writeFeatureTab_CashItems() {\n@@ -127,6 +128,7 @@ function writeFeatureTab_Playerpotentials() {\n         addFeature(\"All Equipment levels up.\");\n         addFeature(\"Player level rates.\");\n         addFeature(\"Gain fame by quests.\");\n+        addFeature(\"Pet evolutions functional (not GMS-like).\");\n }\n \n function writeFeatureTab_Serverpotentials() {\n@@ -165,7 +167,7 @@ function writeFeatureTab_Localhostedits() {\n         addFeature(\"Removed party blocks for novices under level 10.\");\n         addFeature(\"Set a much more higher cap for SPEED.\");\n         addFeature(\"Removed AP usage block for novices.\");\n-        addFeature(\"Removed attack gem block on defensiver gear w/ Maker.\");\n+        addFeature(\"Removed attack gem block on non-weapons w/ Maker.\");\n         addFeature(\"Removed AP excess popup - thanks kevintjuh93!\");\n         addFeature(\"Removed 'GMs can't attack' - thanks kevintjuh93!\");\n         addFeature(\"Removed 'Gained a level!' - thanks PrinceReborn!\");"}, {"sha": "b2d3bb6c23eb13d332eaddde6901bd6fdd7f55cc", "filename": "scripts/quest/4659.js", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/scripts/quest/4659.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/scripts/quest/4659.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/4659.js?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -72,6 +72,12 @@ function end(mode, type, selection) {\n             }\n             \n             var closeness = pet.getCloseness();\n+            if(closeness < 1642) {\n+                qm.sendOk(\"It looks like your pet is not grown enough to be evolved yet. Train it a bit more, util it reaches #blevel 15#k.\");\n+                qm.dispose();\n+                return;\n+            }\n+            \n             var level = pet.getLevel();\n             var fullness = pet.getFullness();\n             var name = pet.getName();"}, {"sha": "226f3f70c6b4c4583ecc163bdc9e595b9c2e20b9", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 160, "deletions": 22, "changes": 182, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -2558,10 +2558,28 @@ public void run() {\n                                 }\n                             }\n                         }\n-                        for (Item item : toberemove) {\n-                            MapleInventoryManipulator.removeFromSlot(client, inv.getType(), item.getPosition(), item.getQuantity(), true);\n+                        \n+                        if(!toberemove.isEmpty()) {\n+                            for (Item item : toberemove) {\n+                                MapleInventoryManipulator.removeFromSlot(client, inv.getType(), item.getPosition(), item.getQuantity(), true);\n+                            }\n+\n+                            MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n+                            for (Item item : toberemove) {\n+                                List<Integer> toadd = new ArrayList<>();\n+                                Pair<Integer, String> replace = ii.getReplaceOnExpire(item.getItemId());\n+                                if (replace.left > 0) {\n+                                    toadd.add(replace.left);\n+                                    if (replace.right != null)\n+                                        dropMessage(replace.right);\n+                                }\n+                                for (Integer itemid : toadd) {\n+                                    MapleInventoryManipulator.addById(client, itemid, (short) 1);\n+                                }\n+                            }\n+\n+                            toberemove.clear();\n                         }\n-                        toberemove.clear();\n                         \n                         if(deletedCoupon) {\n                             updateCouponRates();\n@@ -2911,11 +2929,10 @@ public boolean hasBuffFromSourceid(int sourceid) {\n         List<Pair<MapleBuffStat, Integer>> ret = new ArrayList<>();\n         \n         for(Entry<MapleBuffStat, MapleBuffStatValueHolder> bel : buffEffects.get(sourceid).entrySet()) {\n-            Integer bsrcid = bel.getValue().effect.getBuffSourceId();\n             MapleBuffStat mbs = bel.getKey();\n-            \n             MapleBuffStatValueHolder mbsvh = effects.get(bel.getKey());\n-            if(mbsvh != null && mbsvh.effect.getBuffSourceId() == bsrcid) {\n+            \n+            if(mbsvh != null) {\n                 ret.add(new Pair<>(mbs, mbsvh.value));\n             } else {\n                 ret.add(new Pair<>(mbs, 0));\n@@ -2982,15 +2999,18 @@ private void dropWorstEffectFromItemEffectHolder(MapleBuffStat mbs) {\n     }\n     \n     private MapleBuffStatValueHolder fetchBestEffectFromItemEffectHolder(MapleBuffStat mbs) {\n-        Integer max = Integer.MIN_VALUE;\n+        Pair<Integer, Integer> max = new Pair<>(Integer.MIN_VALUE, 0);\n         MapleBuffStatValueHolder mbsvh = null;\n         for(Entry<Integer, Map<MapleBuffStat, MapleBuffStatValueHolder>> bpl: buffEffects.entrySet()) {\n             MapleBuffStatValueHolder mbsvhi = bpl.getValue().get(mbs);\n             if(mbsvhi != null) {\n-                if(mbsvhi.value > max) {\n-                    max = mbsvhi.value;\n+                if(mbsvhi.value > max.left) {\n+                    max = new Pair<>(mbsvhi.value, mbsvhi.effect.getStatups().size());\n+                    mbsvh = mbsvhi;\n+                } else if(mbsvhi.value == max.left && mbsvhi.effect.getStatups().size() > max.right) {\n+                    max = new Pair<>(mbsvhi.value, mbsvhi.effect.getStatups().size());\n                     mbsvh = mbsvhi;\n-                }    \n+                }\n             }\n         }\n         \n@@ -3021,6 +3041,11 @@ private void debugListAllBuffs() {\n                 System.out.println();\n             }\n             System.out.println(\"-------------------\");\n+            \n+            System.out.println(\"IN ACTION:\");\n+            for(Entry<MapleBuffStat, MapleBuffStatValueHolder> bpl : effects.entrySet()) {\n+                System.out.println(bpl.getKey().name() + \" -> \" + MapleItemInformationProvider.getInstance().getName(bpl.getValue().effect.getSourceId()));\n+            }\n         } finally {\n             chrLock.unlock();\n             effLock.unlock();\n@@ -3211,16 +3236,22 @@ private void updateEffects(Set<MapleBuffStat> removedStats) {\n             }\n             \n             Map<Integer, Pair<MapleStatEffect, Long>> bestEffects = new LinkedHashMap<>();\n+            Set<MapleBuffStat> retrievedStats = new LinkedHashSet<>();\n             for(Entry<MapleBuffStat, Pair<Integer, Integer>> lmsee: maxStatups.entrySet()) {\n+                if(isSingletonStatup(lmsee.getKey())) continue;\n+                \n                 Integer srcid = lmsee.getValue().getLeft();\n                 if(!bestEffects.containsKey(srcid)) {\n-                    bestEffects.put(srcid, retrievedEffects.get(srcid));\n+                    Pair<MapleStatEffect, Long> msel = retrievedEffects.get(srcid);\n+                    \n+                    bestEffects.put(srcid, msel);\n+                    for(Pair<MapleBuffStat, Integer> mbsi : msel.getLeft().getStatups()) {\n+                        retrievedStats.add(mbsi.getLeft());\n+                    }\n                 }\n             }\n             \n-            for(Entry<Integer, Pair<MapleStatEffect, Long>> lmse: bestEffects.entrySet()) {\n-                lmse.getValue().getLeft().updateBuffEffect(this, getActiveStatupsFromSourceid(lmse.getKey()), lmse.getValue().getRight());\n-            }\n+            propagateBuffEffectUpdates(bestEffects, retrievedStats);\n         } finally {\n             chrLock.unlock();\n         }\n@@ -3437,6 +3468,103 @@ public void cancelBuffStats(MapleBuffStat stat) {\n         return extractedStatBuffs;\n     }\n     \n+    private void propagateBuffEffectUpdates(Map<Integer, Pair<MapleStatEffect, Long>> retrievedEffects, Set<MapleBuffStat> retrievedStats) {\n+        if(retrievedStats.isEmpty()) return;\n+        \n+        Map<MapleBuffStat, Pair<Integer, MapleStatEffect>> maxBuffValue = new LinkedHashMap<>();\n+        for(MapleBuffStat mbs : retrievedStats) {\n+            MapleBuffStatValueHolder mbsvh = effects.get(mbs);\n+            if(mbsvh != null) {\n+                retrievedEffects.put(mbsvh.effect.getBuffSourceId(), new Pair<>(mbsvh.effect, mbsvh.startTime));\n+            }\n+            \n+            maxBuffValue.put(mbs, new Pair<>(Integer.MIN_VALUE, (MapleStatEffect) null));\n+        }\n+        \n+        Map<MapleStatEffect, Pair<Integer, Integer>> updateEffects = new LinkedHashMap<>();\n+        \n+        List<MapleStatEffect> recalcMseList = new LinkedList<>();\n+        for(Entry<Integer, Pair<MapleStatEffect, Long>> re : retrievedEffects.entrySet()) {\n+            recalcMseList.add(re.getValue().getLeft());\n+        }\n+        \n+        boolean mageJob = this.getJobStyle() == MapleJob.MAGICIAN;\n+        do {\n+            List<MapleStatEffect> mseList = recalcMseList;\n+            recalcMseList = new LinkedList<>();\n+            \n+            for(MapleStatEffect mse : mseList) {\n+                int mseAmount = 0;\n+                int maxEffectiveStatup = Integer.MIN_VALUE;\n+                for(Pair<MapleBuffStat, Integer> st : mse.getStatups()) {\n+                    MapleBuffStat mbs = st.getLeft();\n+                    \n+                    boolean relevantStatup = true;\n+                    if(mbs == MapleBuffStat.WATK) {  // not relevant for mages\n+                        if(mageJob) relevantStatup = false;\n+                    } else if(mbs == MapleBuffStat.MATK) { // not relevant for non-mages\n+                        if(!mageJob) relevantStatup = false;\n+                    }\n+                    \n+                    Pair<Integer, MapleStatEffect> mbv = maxBuffValue.get(mbs);\n+                    if(mbv == null) {\n+                        continue;\n+                    }\n+                    \n+                    if(mbv.getLeft() < st.getRight()) {\n+                        MapleStatEffect msbe = mbv.getRight();\n+                        if(msbe != null) {\n+                            recalcMseList.add(msbe);\n+                        }\n+                        \n+                        maxBuffValue.put(mbs, new Pair<>(st.getRight(), mse));\n+                        \n+                        if(relevantStatup) {\n+                            if(maxEffectiveStatup < st.getRight()) {\n+                                maxEffectiveStatup = st.getRight();\n+                            }\n+                        }\n+                    }\n+                    \n+                    if(relevantStatup) {\n+                        mseAmount += st.getRight();\n+                    }\n+                }\n+                \n+                updateEffects.put(mse, new Pair<>(maxEffectiveStatup, mseAmount));\n+            }\n+        } while(!recalcMseList.isEmpty());\n+        \n+        List<Pair<MapleStatEffect, Pair<Integer, Integer>>> updateEffectsList = new ArrayList<>();\n+        for(Entry<MapleStatEffect, Pair<Integer, Integer>> ue : updateEffects.entrySet()) {\n+            updateEffectsList.add(new Pair<>(ue.getKey(), ue.getValue()));\n+        }\n+        \n+        Collections.sort(updateEffectsList, new Comparator<Pair<MapleStatEffect, Pair<Integer, Integer>>>()\n+            {\n+                @Override\n+                public int compare( Pair<MapleStatEffect, Pair<Integer, Integer>> o1, Pair<MapleStatEffect, Pair<Integer, Integer>> o2 )\n+                {\n+                    if(o1.getRight().getLeft().equals(o2.getRight().getLeft())) {\n+                        return o1.getRight().getRight().compareTo(o2.getRight().getRight());\n+                    } else {\n+                        return o1.getRight().getLeft().compareTo(o2.getRight().getLeft());\n+                    }\n+                }\n+            });\n+        \n+        List<Pair<Integer, Pair<MapleStatEffect, Long>>> toUpdateEffects = new LinkedList<>();\n+        for(Pair<MapleStatEffect, Pair<Integer, Integer>> msep : updateEffectsList) {\n+            MapleStatEffect mse = msep.getLeft();\n+            toUpdateEffects.add(new Pair<>(mse.getBuffSourceId(), retrievedEffects.get(mse.getBuffSourceId())));\n+        }\n+        \n+        for(Pair<Integer, Pair<MapleStatEffect, Long>> lmse: toUpdateEffects) {\n+            Pair<MapleStatEffect, Long> msel = lmse.getRight();\n+            msel.getLeft().updateBuffEffect(this, getActiveStatupsFromSourceid(lmse.getLeft()), msel.getRight());\n+        }\n+    }\n+    \n     private static MapleBuffStat getSingletonStatupFromEffect(MapleStatEffect mse) {\n         for(Pair<MapleBuffStat, Integer> mbs : mse.getStatups()) {\n             if(isSingletonStatup(mbs.getLeft())) {\n@@ -3583,13 +3711,21 @@ public void run() {\n             if(ServerConstants.USE_BUFF_MOST_SIGNIFICANT) {\n                 toDeploy = new LinkedHashMap<>();\n                 Map<Integer, Pair<MapleStatEffect, Long>> retrievedEffects = new LinkedHashMap<>();\n+                Set<MapleBuffStat> retrievedStats = new LinkedHashSet<>();\n                 \n                 for (Entry<MapleBuffStat, MapleBuffStatValueHolder> statup : appliedStatups.entrySet()) {\n                     MapleBuffStatValueHolder mbsvh = effects.get(statup.getKey());\n-                    if(mbsvh == null || mbsvh.value <= statup.getValue().value) {\n-                        toDeploy.put(statup.getKey(), statup.getValue());\n+                    MapleBuffStatValueHolder statMbsvh = statup.getValue();\n+                    \n+                    if(mbsvh == null || mbsvh.value < statMbsvh.value || (mbsvh.value == statMbsvh.value && mbsvh.effect.getStatups().size() < statMbsvh.effect.getStatups().size())) {\n+                        toDeploy.put(statup.getKey(), statMbsvh);\n                     } else {\n-                        retrievedEffects.put(mbsvh.effect.getBuffSourceId(), new Pair<>(mbsvh.effect, mbsvh.startTime));\n+                        if(!isSingletonStatup(statup.getKey())) {\n+                            retrievedEffects.put(mbsvh.effect.getBuffSourceId(), new Pair<>(mbsvh.effect, mbsvh.startTime));\n+                            for(Pair<MapleBuffStat, Integer> mbs : mbsvh.effect.getStatups()) {\n+                                retrievedStats.add(mbs.getLeft());\n+                            }\n+                        }\n                     }\n                     \n                     Byte val = buffEffectsCount.get(statup.getKey());\n@@ -3600,9 +3736,13 @@ public void run() {\n                 }\n                 \n                 if(!isSilent) {\n-                    for(Entry<Integer, Pair<MapleStatEffect, Long>> lmse: retrievedEffects.entrySet()) {\n-                        lmse.getValue().getLeft().updateBuffEffect(this, getActiveStatupsFromSourceid(lmse.getKey()), lmse.getValue().getRight());\n+                    addItemEffectHolder(sourceid, expirationtime, appliedStatups);\n+                    for (Entry<MapleBuffStat, MapleBuffStatValueHolder> statup : toDeploy.entrySet()) {\n+                        effects.put(statup.getKey(), statup.getValue());\n                     }\n+                    \n+                    retrievedEffects.put(sourceid, new Pair<>(effect, starttime));\n+                    propagateBuffEffectUpdates(retrievedEffects, retrievedStats);\n                 }\n             } else {\n                 for (Entry<MapleBuffStat, MapleBuffStatValueHolder> statup : appliedStatups.entrySet()) {\n@@ -3617,7 +3757,6 @@ public void run() {\n             }\n             \n             addItemEffectHolder(sourceid, expirationtime, appliedStatups);\n-            \n             for (Entry<MapleBuffStat, MapleBuffStatValueHolder> statup : toDeploy.entrySet()) {\n                 effects.put(statup.getKey(), statup.getValue());\n             }\n@@ -4482,8 +4621,7 @@ public void closeHiredMerchant(boolean closeMerchant) {\n         if(closeMerchant) {\n             merchant.removeVisitor(this);\n             this.setHiredMerchant(null);\n-        }\n-        else {\n+        } else {\n             if (merchant.isOwner(this)) {\n                 merchant.setOpen(true);\n             } else {"}, {"sha": "e820def8b1908641685a00852853ec035c9b8f4e", "filename": "src/client/MapleClient.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/client/MapleClient.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/client/MapleClient.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleClient.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -1262,7 +1262,7 @@ public synchronized void announceBossHpBar(MapleMonster mm, final int mobHash, f\n                 }\n \t}\n         \n-\tpublic synchronized void announce(final byte[] packet) {//MINA CORE IS A FUCKING BITCH AND I HATE IT <3\n+        public synchronized void announce(final byte[] packet) {//MINA CORE IS A FUCKING BITCH AND I HATE IT <3\n                 session.write(packet);\n \t}\n "}, {"sha": "c8a3fc98d7287c2ccffc9d4fcd6d9ba0748da4d1", "filename": "src/client/processor/MakerProcessor.java", "status": "modified", "additions": 1, "deletions": 79, "changes": 80, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/client/processor/MakerProcessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/client/processor/MakerProcessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/processor/MakerProcessor.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -90,7 +90,7 @@ public static void makerAction(SeekableLittleEndianAccessor slea, MapleClient c)\n             } else {\n                 if(ItemConstants.isEquipment(toCreate)) {   // only equips uses stimulant and reagents\n                     if(slea.readByte() != 0) {  // stimulant\n-                        stimulantid = getMakerStimulant(toCreate);\n+                        stimulantid = ii.getMakerStimulant(toCreate);\n                         if(!c.getAbstractPlayerInteraction().haveItem(stimulantid)) {\n                             stimulantid = -1;\n                         }\n@@ -270,84 +270,6 @@ private static int getMakerReagentSlots(int itemId) {\n         }\n     }\n     \n-    private static int getMakerStimulant(int itemId) {\n-        EquipType et = EquipType.getEquipTypeById(itemId);\n-        \n-        switch(et) {\n-            case GLOVES:\n-                return 4130000;\n-            \n-            case SHOES:\n-                return 4130001;\n-            \n-            case SWORD:\n-                return 4130002;\n-            \n-            case AXE:\n-                return 4130003;\n-                \n-            case MACE:\n-                return 4130004;\n-            \n-            case SWORD_2H:\n-                return 4130005;\n-            \n-            case AXE_2H:\n-                return 4130006;\n-            \n-            case MACE_2H:\n-                return 4130007;\n-            \n-            case SPEAR:\n-                return 4130008;\n-            \n-            case POLEARM:\n-                return 4130009;\n-            \n-            case WAND:\n-                return 4130010;\n-                \n-            case STAFF:\n-                return 4130011;\n-                    \n-            case BOW:\n-                return 4130012;\n-                        \n-            case CROSSBOW:\n-                return 4130013;\n-                            \n-            case DAGGER:\n-                return 4130014;\n-                                \n-            case CLAW:\n-                return 4130015;\n-                                    \n-            case KNUCKLER:\n-                return 4130016;\n-                                        \n-            case PISTOL:\n-                return 4130017;\n-            \n-            case CAP:\n-                return 4130018;\n-                \n-            case COAT:\n-                return 4130019;\n-                \n-            case PANTS:\n-                return 4130020;\n-                \n-            case LONGCOAT:\n-                return 4130021;\n-                \n-            case SHIELD:\n-                return 4130022;\n-                \n-            default:\n-                return -1;\n-        }\n-    }\n-    \n     private static Pair<Integer, Integer> generateDisassemblyInfo(int itemId) {\n         int recvFee = ii.getMakerDisassembledFee(itemId);\n         if(recvFee > -1) {"}, {"sha": "c722a47c6d71018d22624db7eeb871ff1d0b4641", "filename": "src/client/processor/StorageProcessor.java", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/client/processor/StorageProcessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/client/processor/StorageProcessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/processor/StorageProcessor.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -72,14 +72,15 @@ public static void storageAction(SeekableLittleEndianAccessor slea, MapleClient\n                                                 c.announce(MaplePacketCreator.getStorageError((byte) 0x0C));\n                                                 return;\n                                         }\n-                                        if (chr.getMap().getId() == 910000000) {\n-                                                if (chr.getMeso() < 1000) {\n-                                                        c.announce(MaplePacketCreator.getStorageError((byte) 0x0B));\n-                                                        return;\n-                                                } else {\n-                                                        chr.gainMeso(-1000, false);\n-                                                }\n-                                        }           \n+                                        \n+                                        int takeoutFee = storage.getTakeOutFee();\n+                                        if (chr.getMeso() < takeoutFee) {\n+                                                c.announce(MaplePacketCreator.getStorageError((byte) 0x0B));\n+                                                return;\n+                                        } else {\n+                                                chr.gainMeso(-takeoutFee, false);\n+                                        }\n+                                        \n                                         if (MapleInventoryManipulator.checkSpace(c, item.getItemId(), item.getQuantity(), item.getOwner())) {                \n                                                 item = storage.takeOut(slot);//actually the same but idc\n                                                 String itemName = MapleItemInformationProvider.getInstance().getName(item.getItemId());\n@@ -112,17 +113,19 @@ public static void storageAction(SeekableLittleEndianAccessor slea, MapleClient\n                                         c.announce(MaplePacketCreator.getStorageError((byte) 0x11));\n                                         return;\n                                 }\n-                                short meso = (short) (chr.getMap().getId() == 910000000 ? -500 : -100);\n-                                if (chr.getMeso() < meso) {\n+                                \n+                                int storeFee = storage.getStoreFee();\n+                                if (chr.getMeso() < storeFee) {\n                                         c.announce(MaplePacketCreator.getStorageError((byte) 0x0B));\n                                 } else {\n                                         MapleInventoryType invType = ItemConstants.getInventoryType(itemId);\n                                         Item item = chr.getInventory(invType).getItem(slot).copy();\n-                                        if (item.getItemId() == itemId && (item.getQuantity() >= quantity || ItemConstants.isRechargeable(itemId))) {\n+                                        if (item != null && item.getItemId() == itemId && (item.getQuantity() >= quantity || ItemConstants.isRechargeable(itemId))) {\n                                                 if (ItemConstants.isRechargeable(itemId)) {\n                                                         quantity = item.getQuantity();\n                                                 }\n-                                                chr.gainMeso(meso, false, true, false);\n+                                                \n+                                                chr.gainMeso(-storeFee, false, true, false);\n                                                 MapleKarmaManipulator.toggleKarmaFlagToUntradeable(item);\n                                                 MapleInventoryManipulator.removeFromSlot(c, invType, slot, quantity, false);\n                                                 item.setQuantity(quantity);"}, {"sha": "8c1ac8692e6921e78bb5269d7c56b0d4bfb9b991", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -5,7 +5,7 @@\n \n public class ServerConstants {\n     //Thread Tracker Configuration\n-    public static final boolean USE_THREAD_TRACKER = false;     //[SEVERE] This deadlock auditing thing will bloat the memory as fast as the time frame one takes to lose track of a raindrop on a tempesting day. Only for debugging purposes.\n+    public static final boolean USE_THREAD_TRACKER = true;      //[SEVERE] This deadlock auditing thing will bloat the memory as fast as the time frame one takes to lose track of a raindrop on a tempesting day. Only for debugging purposes.\n     \n     //Database Configuration\n     public static String DB_URL = \"\";\n@@ -20,12 +20,12 @@\n     public static final int CHANNEL_LOAD = 100;                 //Max players per channel (limit actually used to calculate the World server capacity).\n     \n     public static final long RESPAWN_INTERVAL = 10 * 1000;\t//10 seconds, 10000.\n-    public static final long PURGING_INTERVAL =  5 * 60 * 1000;\n+    public static final long PURGING_INTERVAL = 5 * 60 * 1000;\n     public static final long RANKING_INTERVAL = 60 * 60 * 1000;\t//60 minutes, 3600000.\n     public static final long  COUPON_INTERVAL = 60 * 60 * 1000;\t//60 minutes, 3600000.\n     \n-    public static final boolean ENABLE_PIC = true;              //Pick true/false to enable or disable Pic. Delete character needs this feature ENABLED.\n-    public static final boolean ENABLE_PIN = true;              //Pick true/false to enable or disable Pin.\n+    public static final boolean ENABLE_PIC = false;             //Pick true/false to enable or disable Pic. Delete character needs this feature ENABLED.\n+    public static final boolean ENABLE_PIN = false;             //Pick true/false to enable or disable Pin.\n     \n     public static final boolean AUTOMATIC_REGISTER = true;      //Automatically register players when they login with a nonexistent username.\n     public static final boolean BCRYPT_MIGRATION = true;        //Performs a migration from old SHA-1 and SHA-512 password to bcrypt.\n@@ -38,30 +38,30 @@\n     public static boolean SHUTDOWNHOOK;\n     \n     //Server Flags\n-    public static final boolean USE_CUSTOM_KEYSET = false;          //Enables auto-setup of the HeavenMS's custom keybindings when creating characters.\n+    public static final boolean USE_CUSTOM_KEYSET = true;           //Enables auto-setup of the HeavenMS's custom keybindings when creating characters.\n     public static final boolean USE_DEBUG = false;                  //Will enable some text prints on the client, oriented for debugging purposes.\n     public static final boolean USE_DEBUG_SHOW_RCVD_PACKET = false; //Prints on the cmd all received packet ids.\n     public static final boolean USE_DEBUG_SHOW_INFO_EQPEXP = false; //Prints on the cmd all equip exp gain info.\n     \n     public static final boolean USE_MAXRANGE_ECHO_OF_HERO = true;\n     public static final boolean USE_MAXRANGE = true;                //Will send and receive packets from all events on a map, rather than those of only view range.\n     public static final boolean USE_MTS = false;\n-    public static final boolean USE_AUTOHIDE_GM = true;            //When enabled, GMs are automatically hidden when joining. Thanks to Steven Deblois (steven1152).\n-    public static final boolean USE_BUYBACK_SYSTEM = false;         //Enables the HeavenMS-builtin buyback system, to be used by dead players when clicking the MTS button.\n+    public static final boolean USE_AUTOHIDE_GM = false;            //When enabled, GMs are automatically hidden when joining. Thanks to Steven Deblois (steven1152).\n+    public static final boolean USE_BUYBACK_SYSTEM = true;          //Enables the HeavenMS-builtin buyback system, to be used by dead players when clicking the MTS button.\n     public static final boolean USE_FAMILY_SYSTEM = false;\n     public static final boolean USE_DUEY = true;\n     public static final boolean USE_RANDOMIZE_HPMP_GAIN = true;     //Enables randomizing on MaxHP/MaxMP gains and INT accounting for the MaxMP gain.\n     public static final boolean USE_STORAGE_ITEM_SORT = true;       //Enables storage \"Arrange Items\" feature.\n     public static final boolean USE_ITEM_SORT = true;               //Enables inventory \"Item Sort/Merge\" feature.\n     public static final boolean USE_ITEM_SORT_BY_NAME = false;      //Item sorting based on name rather than id.\n     public static final boolean USE_PARTY_SEARCH = false;\n-    public static final boolean USE_PARTY_FOR_STARTERS = false;     //Players level 10 or below can create/invite other players on the given level range.\n-    public static final boolean USE_AUTOASSIGN_STARTERS_AP = true;  //Beginners level 10 or below have their AP autoassigned (they can't choose to levelup a stat). Set true if the localhost doesn't support AP assigning for beginners level 10 or below.\n+    public static final boolean USE_PARTY_FOR_STARTERS = true;      //Players level 10 or below can create/invite other players on the given level range.\n+    public static final boolean USE_AUTOASSIGN_STARTERS_AP = false; //Beginners level 10 or below have their AP autoassigned (they can't choose to levelup a stat). Set true if the localhost doesn't support AP assigning for beginners level 10 or below.\n     public static final boolean USE_AUTOBAN = false;                //Commands the server to detect infractors automatically.\n     public static final boolean USE_AUTOSAVE = true;                //Enables server autosaving feature (saves characters to DB each 1 hour).\n-    public static final boolean USE_SERVER_AUTOASSIGNER = false;    //HeavenMS-builtin autoassigner, uses algorithm based on distributing AP accordingly with required secondary stat on equipments.\n+    public static final boolean USE_SERVER_AUTOASSIGNER = true;     //HeavenMS-builtin autoassigner, uses algorithm based on distributing AP accordingly with required secondary stat on equipments.\n     public static final boolean USE_REFRESH_RANK_MOVE = true;\n-    public static final boolean USE_ENFORCE_HPMP_SWAP = true;       //Forces players to reuse stats (via AP Resetting) located on HP/MP pool only inside the HP/MP stats.\n+    public static final boolean USE_ENFORCE_HPMP_SWAP = false;      //Forces players to reuse stats (via AP Resetting) located on HP/MP pool only inside the HP/MP stats.\n     public static final boolean USE_ENFORCE_MOB_LEVEL_RANGE = true; //Players N levels below the killed mob will gain no experience from defeating it.\n     public static final boolean USE_ENFORCE_JOB_LEVEL_RANGE = false;//Caps the player level on the minimum required to advance their current jobs.\n     public static final boolean USE_ENFORCE_OWL_SUGGESTIONS = false;//Forces the Owl of Minerva to always display the defined item array on GameConstants.OWL_DATA instead of those featured by the players.\n@@ -73,26 +73,26 @@\n     public static final boolean USE_BUFF_MOST_SIGNIFICANT = true;   //When applying buffs, the player will stick with the highest stat boost among the listed, rather than overwriting stats.\n     public static final boolean USE_QUEST_RATE = false;             //Exp/Meso gained by quests uses fixed server exp/meso rate times quest rate as multiplier, instead of player rates.\n     public static final boolean USE_MULTIPLE_SAME_EQUIP_DROP = true;//Enables multiple drops by mobs of the same equipment, number of possible drops based on the quantities provided at the drop data.\n-    public static final boolean USE_BANISHABLE_TOWN_SCROLL = false; //Enables town scrolls to act as if it's a \"player banish\", rendering the antibanish scroll effect available.\n+    public static final boolean USE_BANISHABLE_TOWN_SCROLL = true;  //Enables town scrolls to act as if it's a \"player banish\", rendering the antibanish scroll effect available.\n     public static final boolean USE_OLD_GMS_STYLED_PQ_NPCS = true;  //Enables PQ NPCs with similar behaviour to old GMS style, that skips info about the PQs and immediately tries to register the party in.\n     \n     //Announcement Configuration\n     public static final boolean USE_ANNOUNCE_SHOPITEMSOLD = false;  //Automatic message sent to owner when an item from the Player Shop or Hired Merchant is sold.\n     public static final boolean USE_ANNOUNCE_CHANGEJOB = false;     //Automatic message sent to acquantainces when changing jobs.\n-\n+    \n     //Maker Configuration\n-    public static final boolean USE_MAKER_PERMISSIVE_ATKUP = false; //Allows players to use attack-based strengthening gems on non-weapon items.\n+    public static final boolean USE_MAKER_PERMISSIVE_ATKUP = true;  //Allows players to use attack-based strengthening gems on non-weapon items.\n     public static final boolean USE_MAKER_FEE_HEURISTICS = true;    //Apply compiled values for stimulants and reagents into the Maker fee calculations (max error revolves around 50k mesos). Set false to use basic constant values instead (results are never higher than requested by the client-side).\n     \n     //Commands Configuration\n     public static final boolean BLOCK_GENERATE_CASH_ITEM = false;   //Prevents creation of cash items with the item/drop command.\n     \n     //Server Rates And Experience\n-    public static final int EXP_RATE = 1;\n-    public static final int MESO_RATE = 1;\n-    public static final int DROP_RATE = 1;\n-    public static final int TRAVEL_RATE = 1;                        //Means of transportation rides/departs using 1/N of the default time.\n-    public static final int QUEST_RATE = 1;                         //Multiplier for Exp & Meso gains when completing a quest. Only available when USE_QUEST_RATE is true. Stacks with server Exp & Meso rates.\n+    public static final int EXP_RATE = 10;\n+    public static final int MESO_RATE = 10;\n+    public static final int DROP_RATE = 10;\n+    public static final int TRAVEL_RATE = 10;                       //Means of transportation rides/departs using 1/N of the default time.\n+    public static final int QUEST_RATE = 5;                         //Multiplier for Exp & Meso gains when completing a quest. Only available when USE_QUEST_RATE is true. Stacks with server Exp & Meso rates.\n     public static final double EQUIP_EXP_RATE = 1.0;                //Rate for equipment exp gain, grows linearly. Set 1.0 for default (about 100~200 same-level range mobs killed to pass equip from level 1 to 2).\n     \n     public static final double PARTY_BONUS_EXP_RATE = 1.0;          //Rate for the party exp reward.\n@@ -102,7 +102,7 @@\n     \n     //Miscellaneous Configuration\n     public static String TIMEZONE = \"-GMT3\";\n-    public static boolean USE_DISPLAY_NUMBERS_WITH_COMMA = true;        //Enforce comma on displayed strings (use this when USE_UNITPRICE_WITH_COMMA is active and you still want to display comma-separated thousands).\n+    public static boolean USE_DISPLAY_NUMBERS_WITH_COMMA = true;        //Enforce comma on displayed strings (use this when USE_UNITPRICE_WITH_COMMA is active and you still want to display comma-separated values).\n     public static boolean USE_UNITPRICE_WITH_COMMA = true;              //Set this accordingly with the layout of the unitPrices on Item.wz XML's, whether it's using commas or dots to represent fractions.\n     public static final byte MIN_UNDERLEVEL_TO_EXP_GAIN = 5;            //Characters are unable to get EXP from a mob if their level are under this threshold, only if \"USE_ENFORCE_MOB_LEVEL_RANGE\" is enabled. For bosses, this attribute is doubled.\n     public static final byte MAX_MONITORED_BUFFSTATS = 5;               //Limits accounting for \"dormant\" buff effects, that should take place when stronger stat buffs expires.\n@@ -111,7 +111,7 @@\n     public static final long BLOCK_NPC_RACE_CONDT = (long)(0.5 * 1000); //Time the player client must wait before reopening a conversation with an NPC.\n     public static final long PET_LOOT_UPON_ATTACK = (long)(0.7 * 1000); //Time the pet must wait before trying to pick items up.\n     public static final int TOT_MOB_QUEST_REQUIREMENT = 0;              //Overwrites old 999-mobs requirement for the ToT questline with new requirement value, set 0 for default.\n-    public static final int MOB_REACTOR_REFRESH_TIME = 0;               //Overwrites refresh time for those reactors oriented to inflict damage to bosses (Ice Queen, Riche), set 0 for default.\n+    public static final int MOB_REACTOR_REFRESH_TIME = 30 * 1000;       //Overwrites refresh time for those reactors oriented to inflict damage to bosses (Ice Queen, Riche), set 0 for default.\n     \n     //Dangling Items/Locks Configuration\n     public static final int ITEM_EXPIRE_TIME  = 3 * 60 * 1000;  //Time before items start disappearing. Recommended to be set up to 3 minutes.\n@@ -124,37 +124,37 @@\n     \n     //Some Gameplay Enhancing Configurations\n     //Scroll Configuration\n-    public static final boolean USE_PERFECT_GM_SCROLL = false;  //Scrolls from GMs never uses up slots nor fails.\n-    public static final boolean USE_PERFECT_SCROLLING = false;  //Scrolls doesn't use slots upon failure.\n-    public static final boolean USE_ENHANCED_CHSCROLL = false;  //Equips even more powerful with chaos upgrade.\n-    public static final boolean USE_ENHANCED_CRAFTING = false;  //Apply chaos scroll on every equip crafted.\n-    public static final int SCROLL_CHANCE_RATE = 0;             //Number of rolls for success on a scroll, set 0 for default.\n-    public static final int CHSCROLL_STAT_RATE = 1;             //Number of rolls of stat upgrade on a successfully applied chaos scroll, set 1 for default.\n+    public static final boolean USE_PERFECT_GM_SCROLL = true;   //Scrolls from GMs never uses up slots nor fails.\n+    public static final boolean USE_PERFECT_SCROLLING = true;   //Scrolls doesn't use slots upon failure.\n+    public static final boolean USE_ENHANCED_CHSCROLL = true;   //Equips even more powerful with chaos upgrade.\n+    public static final boolean USE_ENHANCED_CRAFTING = true;   //Apply chaos scroll on every equip crafted.\n+    public static final int SCROLL_CHANCE_RATE = 10;            //Number of rolls for success on a scroll, set 0 for default.\n+    public static final int CHSCROLL_STAT_RATE = 3;             //Number of rolls of stat upgrade on a successfully applied chaos scroll, set 1 for default.\n     public static final int CHSCROLL_STAT_RANGE = 6;            //Stat upgrade range (-N, N) on chaos scrolls.\n     \n     //Beginner Skills Configuration\n-    public static final boolean USE_ULTRA_NIMBLE_FEET = false;  //Haste-like speed & jump upgrade.\n-    public static final boolean USE_ULTRA_RECOVERY = false;     //Massive recovery amounts overtime.\n-    public static final boolean USE_ULTRA_THREE_SNAILS = false; //Massive damage on shell toss.\n+    public static final boolean USE_ULTRA_NIMBLE_FEET = true;   //Haste-like speed & jump upgrade.\n+    public static final boolean USE_ULTRA_RECOVERY = true;      //Massive recovery amounts overtime.\n+    public static final boolean USE_ULTRA_THREE_SNAILS = true;  //Massive damage on shell toss.\n     \n     //Character Configuration\n-    public static final boolean USE_ADD_SLOTS_BY_LEVEL = false; //Slots are added each 20 levels.\n-    public static final boolean USE_ADD_RATES_BY_LEVEL = false; //Rates are added each 20 levels.\n-    public static final boolean USE_STACK_COUPON_RATES = false; //Multiple coupons effects builds up together.\n-    public static final boolean USE_PERFECT_PITCH = false;      //For lvl 30 or above, each lvlup grants player 1 perfect pitch.\n-    public static final int FAME_GAIN_BY_QUEST = 0;             //Fame gain each N quest completes, set 0 to disable.\n+    public static final boolean USE_ADD_SLOTS_BY_LEVEL = true;  //Slots are added each 20 levels.\n+    public static final boolean USE_ADD_RATES_BY_LEVEL = true;  //Rates are added each 20 levels.\n+    public static final boolean USE_STACK_COUPON_RATES = true;  //Multiple coupons effects builds up together.\n+    public static final boolean USE_PERFECT_PITCH = true;       //For lvl 30 or above, each lvlup grants player 1 perfect pitch.\n+    public static final int FAME_GAIN_BY_QUEST = 4;             //Fame gain each N quest completes, set 0 to disable.\n     \n     //Guild Configuration\n     public static final int CREATE_GUILD_COST = 1500000;\n     public static final int CHANGE_EMBLEM_COST = 5000000;\n \n     //Equipment Configuration\n-    public static final boolean USE_EQUIPMNT_LVLUP_SLOTS = false;//Equips can upgrade slots at level up.\n-    public static final boolean USE_EQUIPMNT_LVLUP_POWER = false;//Enable more powerful stat upgrades at equip level up.\n-    public static final boolean USE_SPIKES_AVOID_BANISH = false; //Shoes equipped with spikes prevents mobs from banishing wearer.\n+    public static final boolean USE_EQUIPMNT_LVLUP_SLOTS = true;//Equips can upgrade slots at level up.\n+    public static final boolean USE_EQUIPMNT_LVLUP_POWER = true;//Enable more powerful stat upgrades at equip level up.\n+    public static final boolean USE_SPIKES_AVOID_BANISH = true; //Shoes equipped with spikes prevents mobs from banishing wearer.\n     public static final int MAX_EQUIPMNT_LVLUP_STAT_UP = 10000; //Max stat upgrade an equipment can have on a levelup.\n     public static final int MAX_EQUIPMNT_STAT = 32767;          //Max stat on an equipment by leveling up.\n-    public static final int USE_EQUIPMNT_LVLUP = 1;             //All equips lvlup at max level of N, set 1 to disable.\n+    public static final int USE_EQUIPMNT_LVLUP = 7;             //All equips lvlup at max level of N, set 1 to disable.\n     \n     //Map-Chair Configuration\n     public static final boolean USE_CHAIR_EXTRAHEAL = true;     //Enable map chairs to further recover player's HP and MP (player must have the Chair Mastery skill).\n@@ -188,7 +188,7 @@\n     public static final long EVENT_LOBBY_DELAY = 10;            //Cooldown duration in seconds before reopening an event lobby.\n     \n     //Dojo Configuration\n-    public static final boolean USE_DEADLY_DOJO = true;         //Should bosses really use 1HP,1MP attacks in dojo?\n+    public static final boolean USE_DEADLY_DOJO = false;        //Should bosses really use 1HP,1MP attacks in dojo?\n     public static final int DOJO_ENERGY_ATK = 100;              //Dojo energy gain when deal attack\n     public static final int DOJO_ENERGY_DMG =  20;              //Dojo energy gain when recv attack\n     \n@@ -200,10 +200,10 @@\n     public static final boolean WEDDING_BLESSER_SHOWFX = true;  //Pops bubble sprite effect on players blessing the couple. Setting this false shows the blessing effect on the couple instead.\n \n     //Buyback Configuration\n-    public static final boolean USE_BUYBACK_WITH_MESOS = false; //Enables usage of either mesos or NX for the buyback fee.\n+    public static final boolean USE_BUYBACK_WITH_MESOS = true;  //Enables usage of either mesos or NX for the buyback fee.\n     public static final int BUYBACK_FEE = 7770;                 //Sets the amount needed to buyback.\n     public static final int BUYBACK_MESO_MULTIPLIER = 1000;     //Sets a multiplier for the fee when using meso as the charge unit.\n-    public static final int BUYBACK_RETURN_MINUTES = 1;         //Sets the maximum amount of time the player must wait before decide to buyback.\n+    public static final int BUYBACK_RETURN_MINUTES = 1;         //Sets the maximum amount of time the player can wait before decide to buyback.\n     public static final int BUYBACK_COOLDOWN_MINUTES = 7;       //Sets the time the player must wait before using buyback again.\n     \n     //Event End Timestamp"}, {"sha": "6886a1649d5177281487eba11102fa9c3eaf5f77", "filename": "src/net/server/channel/handlers/PlayerInteractionHandler.java", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/net/server/channel/handlers/PlayerInteractionHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/net/server/channel/handlers/PlayerInteractionHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PlayerInteractionHandler.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -240,21 +240,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     }\n                 } else if (ob instanceof MapleHiredMerchant && chr.getHiredMerchant() == null) {\n                     MapleHiredMerchant merchant = (MapleHiredMerchant) ob;\n-                    if (merchant.isOwner(chr)) {\n-                        merchant.setOpen(false);\n-                        merchant.removeAllVisitors();\n-                        \n-                        c.announce(MaplePacketCreator.getHiredMerchant(chr, merchant, false));\n-                    } else if (!merchant.isOpen()) {\n-                        chr.getClient().announce(MaplePacketCreator.getMiniRoomError(18));\n-                        return;\n-                    } else if (!merchant.addVisitor(chr)) {\n-                        chr.getClient().announce(MaplePacketCreator.getMiniRoomError(2));\n-                        return;\n-                    } else {\n-                        c.announce(MaplePacketCreator.getHiredMerchant(chr, merchant, false));\n-                    }\n-                    chr.setHiredMerchant(merchant);\n+                    merchant.visitShop(chr);\n                 }\n             }\n         } else if (mode == Action.CHAT.getCode()) { // chat lol\n@@ -527,10 +513,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             merchant.clearInexistentItems();\n             \n             if (merchant.getItems().isEmpty()) {\n-                c.announce(MaplePacketCreator.hiredMerchantOwnerLeave());\n-                c.announce(MaplePacketCreator.leaveHiredMerchant(0x00, 0x03));\n-                merchant.closeShop(c, false);\n-                chr.setHasMerchant(false);\n+                merchant.closeOwnerMerchant(chr);\n                 return;\n             }\n             c.announce(MaplePacketCreator.updateHiredMerchant(merchant, chr));\n@@ -579,11 +562,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             if (isTradeOpen(chr)) return;\n             \n             MapleHiredMerchant merchant = chr.getHiredMerchant();\n-            if (merchant != null && merchant.isOwner(chr)) {\n-                c.announce(MaplePacketCreator.hiredMerchantOwnerLeave());\n-                c.announce(MaplePacketCreator.leaveHiredMerchant(0x00, 0x03));\n-                merchant.closeShop(c, false);\n-                chr.setHasMerchant(false);\n+            if (merchant != null) {\n+                merchant.closeOwnerMerchant(chr);\n             }\n         } else if (mode == Action.MAINTENANCE_OFF.getCode()) {\n             if (isTradeOpen(chr)) return;"}, {"sha": "2c74a687ce5b2159a63e08c9676c2644ea3937ec", "filename": "src/net/server/channel/handlers/RemoteStoreHandler.java", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/net/server/channel/handlers/RemoteStoreHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/net/server/channel/handlers/RemoteStoreHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/RemoteStoreHandler.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -38,13 +38,9 @@\n     public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         MapleCharacter chr = c.getPlayer();\n         MapleHiredMerchant hm = getMerchant(c);\n-        if (chr.hasMerchant() && hm != null) {\n+        if (hm != null && hm.isOwner(chr)) {\n             if (hm.getChannel() == chr.getClient().getChannel()) {\n-                hm.setOpen(false);\n-                hm.removeAllVisitors();\n-                chr.setHiredMerchant(hm);\n-                \n-                chr.announce(MaplePacketCreator.getHiredMerchant(chr, hm, false));\n+                hm.visitShop(chr);\n             } else {\n                 c.announce(MaplePacketCreator.remoteChannelChange((byte) (hm.getChannel() - 1)));\n             }"}, {"sha": "7b71198af71253d12317431f571e120d054fcc7d", "filename": "src/scripting/AbstractPlayerInteraction.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/scripting/AbstractPlayerInteraction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/scripting/AbstractPlayerInteraction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/AbstractPlayerInteraction.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -372,7 +372,7 @@ public Item evolvePet(byte slot, int afterId) {\n             MaplePet evolved = null;\n             MaplePet target;\n             \n-            long period = 90 * 24 * 60 * 60 * 1000;    //refreshes expiration date: 90 days\n+            long period = (long) 90 * 24 * 60 * 60 * 1000;    //refreshes expiration date: 90 days\n             \n             target = getPlayer().getPet(slot);\n             if(target == null) {\n@@ -437,8 +437,8 @@ public Item gainItem(int id, short quantity, boolean randomStats, boolean showMe\n \t\tItem item = null;\n                 MaplePet evolved;\n                 int petId = -1;\n-\t\t\n-\t\tif (quantity >= 0) {\n+                \n+                if (quantity >= 0) {\n                         if (ItemConstants.isPet(id)) {\n                                 petId = MaplePet.createPet(id);\n \n@@ -456,6 +456,7 @@ public Item gainItem(int id, short quantity, boolean randomStats, boolean showMe\n                                     evolved.setCloseness(from.getCloseness());\n                                     evolved.setFullness(from.getFullness());\n                                     evolved.setLevel(from.getLevel());\n+                                    evolved.setExpiration(System.currentTimeMillis() + expires);\n                                     evolved.saveToDb();\n                                 }\n "}, {"sha": "edcaf3661c4f3af504e2b612565429e2c587f946", "filename": "src/server/MapleItemInformationProvider.java", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/server/MapleItemInformationProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/server/MapleItemInformationProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleItemInformationProvider.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -69,6 +69,7 @@\n import server.MakerItemFactory.MakerItemCreateEntry;\n import server.life.MapleMonsterInformationProvider;\n import server.life.MapleLifeFactory;\n+import tools.StringUtil;\n \n /**\n  *\n@@ -81,6 +82,7 @@\n     protected MapleDataProvider itemData;\n     protected MapleDataProvider equipData;\n     protected MapleDataProvider stringData;\n+    protected MapleDataProvider etcData;\n     protected MapleData cashStringData;\n     protected MapleData consumeStringData;\n     protected MapleData eqpStringData;\n@@ -112,17 +114,20 @@\n     protected Map<Integer, Boolean> consumeOnPickupCache = new HashMap<>();\n     protected Map<Integer, Boolean> isQuestItemCache = new HashMap<>();\n     protected Map<Integer, Boolean> isPartyQuestItemCache = new HashMap<>();\n+    protected Map<Integer, Pair<Integer, String>> replaceOnExpireCache = new HashMap<>();\n     protected Map<Integer, String> equipmentSlotCache = new HashMap<>();\n     protected Map<Integer, Boolean> noCancelMouseCache = new HashMap<>();\n     protected Map<Integer, Integer> mobCrystalMakerCache = new HashMap<>();\n     protected Map<Integer, Pair<String, Integer>> statUpgradeMakerCache = new HashMap<>();\n     protected Map<Integer, MakerItemFactory.MakerItemCreateEntry> makerItemCache = new HashMap<>();\n+    protected Map<Integer, Integer> makerCatalystCache = new HashMap<>();\n \n     private MapleItemInformationProvider() {\n         loadCardIdData();\n         itemData = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/Item.wz\"));\n         equipData = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/Character.wz\"));\n         stringData = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/String.wz\"));\n+        etcData = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/Etc.wz\"));\n         cashStringData = stringData.getData(\"Cash.img\");\n         consumeStringData = stringData.getData(\"Consume.img\");\n         eqpStringData = stringData.getData(\"Eqp.img\");\n@@ -515,6 +520,20 @@ public int getPrice(int itemId, int quantity) {\n         return retPrice;\n     }\n     \n+    public Pair<Integer, String> getReplaceOnExpire(int itemId) {   // thanks to GabrielSin\n+        if (replaceOnExpireCache.containsKey(itemId)) {\n+            return replaceOnExpireCache.get(itemId);\n+        }\n+ \n+        int itemReplacement = MapleDataTool.getInt(\"info/replace/itemid\", getItemData(itemId), 0);\n+        String msg = MapleDataTool.getString(\"info/replace/msg\", getItemData(itemId));\n+ \n+        Pair<Integer, String> ret = new Pair<>(itemReplacement, msg);\n+        replaceOnExpireCache.put(itemId, ret);\n+ \n+        return ret;\n+    }\n+    \n     protected String getEquipmentSlot(int itemId) {\n         if (equipmentSlotCache.containsKey(itemId)) {\n             return equipmentSlotCache.get(itemId);\n@@ -1869,6 +1888,26 @@ public int getMakerDisassembledFee(Integer itemId) {\n         return fee;\n     }\n     \n+    public int getMakerStimulant(int itemId) {  // thanks to Arnah\n+        Integer itemid = makerCatalystCache.get(itemId);\n+        if(itemid != null) {\n+            return itemid;\n+        }\n+\n+        itemid = -1;\n+        for(MapleData md : etcData.getData(\"ItemMake.img\").getChildren()) {\n+            MapleData me = md.getChildByPath(StringUtil.getLeftPaddedStr(Integer.toString(itemId), '0', 8));\n+\n+            if(me != null) {\n+                itemid = MapleDataTool.getInt(me.getChildByPath(\"catalyst\"), -1);\n+                break;\n+            }\n+        }\n+\n+        makerCatalystCache.put(itemId, itemid);\n+        return itemid;\n+    }\n+    \n     public Set<String> getWhoDrops(Integer itemId) {\n         Set<String> list = new HashSet<>();\n         Connection con = null;"}, {"sha": "3decf252a26e12beaa85640779a43eb937e2a06a", "filename": "src/server/MapleStorage.java", "status": "modified", "additions": 47, "deletions": 1, "changes": 48, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/server/MapleStorage.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/server/MapleStorage.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleStorage.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -22,6 +22,7 @@\n import client.inventory.Item;\n import client.inventory.ItemFactory;\n import client.inventory.MapleInventoryType;\n+import java.io.File;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n@@ -34,6 +35,10 @@\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.locks.Lock;\n+import provider.MapleData;\n+import provider.MapleDataProvider;\n+import provider.MapleDataProviderFactory;\n+import provider.MapleDataTool;\n import tools.locks.MonitoredReentrantLock;\n import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n@@ -45,8 +50,11 @@\n  * @author Matze\n  */\n public class MapleStorage {\n-\n+    private static Map<Integer, Integer> trunkGetCache = new HashMap<>();\n+    private static Map<Integer, Integer> trunkPutCache = new HashMap<>();\n+    \n     private int id;\n+    private int currentNpcid;\n     private int meso;\n     private byte slots;\n     private Map<MapleInventoryType, List<Item>> typeItems = new HashMap<>();\n@@ -247,6 +255,8 @@ public int compare(Item o1, Item o2) {\n             for (MapleInventoryType type : MapleInventoryType.values()) {\n                 typeItems.put(type, new ArrayList<>(storageItems));\n             }\n+            \n+            currentNpcid = npcId;\n             c.announce(MaplePacketCreator.getStorage(npcId, slots, storageItems, meso));\n         } finally {\n             lock.unlock();\n@@ -302,6 +312,42 @@ public void setMeso(int meso) {\n     public void sendMeso(MapleClient c) {\n         c.announce(MaplePacketCreator.mesoStorage(slots, meso));\n     }\n+    \n+    public int getStoreFee() {  // thanks to GabrielSin\n+        int npcId = currentNpcid;\n+        Integer fee = trunkPutCache.get(npcId);\n+        if(fee == null) {\n+            fee = 100;\n+            \n+            MapleDataProvider npc = MapleDataProviderFactory.getDataProvider(new File(\"wz/Npc.wz\"));\n+            MapleData npcData = npc.getData(npcId + \".img\");\n+            if(npcData != null) {\n+                fee = MapleDataTool.getIntConvert(\"info/trunkPut\", npcData, 100);\n+            }\n+            \n+            trunkPutCache.put(npcId, fee);\n+        }\n+        \n+        return fee;\n+    }\n+    \n+    public int getTakeOutFee() {\n+        int npcId = currentNpcid;\n+        Integer fee = trunkGetCache.get(npcId);\n+        if(fee == null) {\n+            fee = 0;\n+            \n+            MapleDataProvider npc = MapleDataProviderFactory.getDataProvider(new File(\"wz/Npc.wz\"));\n+            MapleData npcData = npc.getData(npcId + \".img\");\n+            if(npcData != null) {\n+                fee = MapleDataTool.getIntConvert(\"info/trunkGet\", npcData, 0);\n+            }\n+            \n+            trunkGetCache.put(npcId, fee);\n+        }\n+        \n+        return fee;\n+    }\n \n     public boolean isFull() {\n         lock.lock();"}, {"sha": "d4ba1129335d48f22502c78e723e96b19930e9c9", "filename": "src/server/maps/MapleHiredMerchant.java", "status": "modified", "additions": 90, "deletions": 44, "changes": 134, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/server/maps/MapleHiredMerchant.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/server/maps/MapleHiredMerchant.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleHiredMerchant.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -147,7 +147,7 @@ private int getVisitorSlot(MapleCharacter visitor) {\n         return -1; //Actually 0 because of the +1's.\n     }\n \n-    public void removeAllVisitors() {\n+    private void removeAllVisitors() {\n         visitorLock.lock();\n         try {\n             for (int i = 0; i < 3; i++) {\n@@ -271,6 +271,24 @@ private void announceItemSold(Item item, int mesos) {\n     }\n \n     public void forceClose() {\n+        //Server.getInstance().getChannel(world, channel).removeHiredMerchant(ownerId);\n+        map.broadcastMessage(MaplePacketCreator.destroyHiredMerchant(getOwnerId()));\n+        map.removeMapObject(this);\n+        \n+        MapleCharacter owner = Server.getInstance().getWorld(world).getPlayerStorage().getCharacterById(ownerId);\n+        \n+        visitorLock.lock();\n+        try {\n+            setOpen(false);\n+            removeAllVisitors();\n+            \n+            if(owner != null && owner.isLoggedinWorld() && this == owner.getHiredMerchant()) {\n+                closeOwnerMerchant(owner);\n+            }\n+        } finally {\n+            visitorLock.unlock();\n+        }\n+        \n         Server.getInstance().getWorld(world).unregisterHiredMerchant(this);\n         \n         try {\n@@ -281,11 +299,7 @@ public void forceClose() {\n         } catch (SQLException ex) {\n             ex.printStackTrace();\n         }\n-        //Server.getInstance().getChannel(world, channel).removeHiredMerchant(ownerId);\n-        map.broadcastMessage(MaplePacketCreator.destroyHiredMerchant(getOwnerId()));\n-\n-        map.removeMapObject(this);\n-\t\t\n+\t\n         MapleCharacter player = Server.getInstance().getWorld(world).getPlayerStorage().getCharacterById(ownerId);\n         if(player != null) {\n                 player.setHasMerchant(false);\n@@ -306,55 +320,87 @@ public void forceClose() {\n         map = null;\n     }\n \n-\tpublic void closeShop(MapleClient c, boolean timeout) {\n-            map.removeMapObject(this);\n-            map.broadcastMessage(MaplePacketCreator.destroyHiredMerchant(ownerId));\n-            c.getChannelServer().removeHiredMerchant(ownerId);\n-            \n-            try {\n-                MapleCharacter player = c.getWorldServer().getPlayerStorage().getCharacterById(ownerId);\n-                if(player != null) {\n-                        player.setHasMerchant(false);\n-                } else {\n-                        Connection con = DatabaseConnection.getConnection();\n-                        try (PreparedStatement ps = con.prepareStatement(\"UPDATE characters SET HasMerchant = 0 WHERE id = ?\", Statement.RETURN_GENERATED_KEYS)) {\n-                                ps.setInt(1, ownerId);\n-                                ps.executeUpdate();\n-                        }\n-                        con.close();\n-                }\n+    public void closeOwnerMerchant(MapleCharacter chr) {\n+        if(this.isOwner(chr)) {\n+            chr.announce(MaplePacketCreator.hiredMerchantOwnerLeave());\n+            chr.announce(MaplePacketCreator.leaveHiredMerchant(0x00, 0x03));\n+            this.closeShop(chr.getClient(), false);\n+            chr.setHasMerchant(false);\n+        }\n+    }\n+    \n+    public void closeShop(MapleClient c, boolean timeout) {\n+        map.removeMapObject(this);\n+        map.broadcastMessage(MaplePacketCreator.destroyHiredMerchant(ownerId));\n+        c.getChannelServer().removeHiredMerchant(ownerId);\n \n-                List<MaplePlayerShopItem> copyItems = getItems();\n-                if (check(c.getPlayer(), copyItems) && !timeout) {\n-                    for (MaplePlayerShopItem mpsi : copyItems) {\n-                        if(mpsi.isExist()) {\n-                            if (mpsi.getItem().getInventoryType().equals(MapleInventoryType.EQUIP)) {\n-                                MapleInventoryManipulator.addFromDrop(c, mpsi.getItem(), false);\n-                            } else {\n-                                MapleInventoryManipulator.addById(c, mpsi.getItem().getItemId(), (short) (mpsi.getBundles() * mpsi.getItem().getQuantity()), null, -1, mpsi.getItem().getFlag(), mpsi.getItem().getExpiration());\n-                            }\n-                        }\n-                    }\n-                    \n-                    synchronized (items) {\n-                        items.clear();\n+        try {\n+            MapleCharacter player = c.getWorldServer().getPlayerStorage().getCharacterById(ownerId);\n+            if(player != null) {\n+                    player.setHasMerchant(false);\n+            } else {\n+                    Connection con = DatabaseConnection.getConnection();\n+                    try (PreparedStatement ps = con.prepareStatement(\"UPDATE characters SET HasMerchant = 0 WHERE id = ?\", Statement.RETURN_GENERATED_KEYS)) {\n+                            ps.setInt(1, ownerId);\n+                            ps.executeUpdate();\n                     }\n-                }\n+                    con.close();\n+            }\n \n-                try {\n-                    this.saveItems(timeout);\n-                } catch (Exception e) {\n-                    e.printStackTrace();\n+            List<MaplePlayerShopItem> copyItems = getItems();\n+            if (check(c.getPlayer(), copyItems) && !timeout) {\n+                for (MaplePlayerShopItem mpsi : copyItems) {\n+                    if(mpsi.isExist()) {\n+                        if (mpsi.getItem().getInventoryType().equals(MapleInventoryType.EQUIP)) {\n+                            MapleInventoryManipulator.addFromDrop(c, mpsi.getItem(), false);\n+                        } else {\n+                            MapleInventoryManipulator.addById(c, mpsi.getItem().getItemId(), (short) (mpsi.getBundles() * mpsi.getItem().getQuantity()), null, -1, mpsi.getItem().getFlag(), mpsi.getItem().getExpiration());\n+                        }\n+                    }\n                 }\n \n                 synchronized (items) {\n                     items.clear();\n                 }\n+            }\n+\n+            try {\n+                this.saveItems(timeout);\n             } catch (Exception e) {\n                 e.printStackTrace();\n             }\n-            \n-            Server.getInstance().getWorld(world).unregisterHiredMerchant(this);\n+\n+            synchronized (items) {\n+                items.clear();\n+            }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+\n+        Server.getInstance().getWorld(world).unregisterHiredMerchant(this);\n+    }\n+    \n+    public synchronized void visitShop(MapleCharacter chr) {\n+        visitorLock.lock();\n+        try {\n+            if (this.isOwner(chr)) {\n+                this.setOpen(false);\n+                this.removeAllVisitors();\n+\n+                chr.announce(MaplePacketCreator.getHiredMerchant(chr, this, false));\n+            } else if (!this.isOpen()) {\n+                chr.announce(MaplePacketCreator.getMiniRoomError(18));\n+                return;\n+            } else if (!this.addVisitor(chr)) {\n+                chr.announce(MaplePacketCreator.getMiniRoomError(2));\n+                return;\n+            } else {\n+                chr.announce(MaplePacketCreator.getHiredMerchant(chr, this, false));\n+            }\n+            chr.setHiredMerchant(this);\n+        } finally {\n+            visitorLock.unlock();\n+        }\n     }\n \n     public String getOwner() {"}, {"sha": "39309144e3495bc7581c09ffb8d5869c8320a3be", "filename": "src/server/maps/MapleMap.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/server/maps/MapleMap.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/server/maps/MapleMap.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMap.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -1732,7 +1732,7 @@ public void spawnFakeMonsterOnGroundBelow(MapleMonster mob, Point pos) {\n     }\n \n     public Point getGroundBelow(Point pos) {\n-        Point spos = new Point(pos.x, pos.y - 7); // Using -7 fixes spawning pets causing a lot of issues.\n+        Point spos = new Point(pos.x, pos.y - 14); // Using -14 fixes spawning pets causing a lot of issues.\n         spos = calcPointBelow(spos);\n         spos.y--;//shouldn't be null!\n         return spos;"}, {"sha": "7e3b45c5f3e4397506c9cfd925db443630d7aac9", "filename": "src/server/maps/MaplePlayerShop.java", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/server/maps/MaplePlayerShop.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/src/server/maps/MaplePlayerShop.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MaplePlayerShop.java?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -99,20 +99,15 @@ public boolean isOwner(MapleCharacter c) {\n     }\n \n     private void addVisitor(MapleCharacter visitor) {\n-        visitorLock.lock();\n-        try {\n-            for (int i = 0; i < 3; i++) {\n-                if (visitors[i] == null) {\n-                    visitors[i] = visitor;\n-                    visitor.setSlot(i);\n-                    this.broadcast(MaplePacketCreator.getPlayerShopNewVisitor(visitor, i + 1));\n-                    \n-                    if(i == 2) visitor.getMap().broadcastMessage(MaplePacketCreator.addCharBox(owner, 1));\n-                    break;\n-                }\n+        for (int i = 0; i < 3; i++) {\n+            if (visitors[i] == null) {\n+                visitors[i] = visitor;\n+                visitor.setSlot(i);\n+                this.broadcast(MaplePacketCreator.getPlayerShopNewVisitor(visitor, i + 1));\n+\n+                if(i == 2) visitor.getMap().broadcastMessage(MaplePacketCreator.addCharBox(owner, 1));\n+                break;\n             }\n-        } finally {\n-            visitorLock.unlock();\n         }\n     }\n \n@@ -490,18 +485,18 @@ public boolean isBanned(String name) {\n     }\n     \n     public synchronized boolean visitShop(MapleCharacter chr) {\n-        if(!open.get()) {\n-            chr.dropMessage(1, \"This store is not yet open.\");\n-            return false;\n-        }\n-        \n         if (this.isBanned(chr.getName())) {\n             chr.dropMessage(1, \"You have been banned from this store.\");\n             return false;\n         }\n         \n         visitorLock.lock();\n         try {\n+            if(!open.get()) {\n+                chr.dropMessage(1, \"This store is not yet open.\");\n+                return false;\n+            }\n+            \n             if (this.hasFreeSlot() && !this.isVisitor(chr)) {\n                 this.addVisitor(chr);\n                 chr.setPlayerShop(this);"}, {"sha": "e1cac2e83f2359c1395d6d4ac62a3bba2e371873", "filename": "wz/Quest.wz/Check.img.xml", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/cdac59326a8da9e8c0b5189540af65afdbedbef6/wz/Quest.wz/Check.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/cdac59326a8da9e8c0b5189540af65afdbedbef6/wz/Quest.wz/Check.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/Quest.wz/Check.img.xml?ref=cdac59326a8da9e8c0b5189540af65afdbedbef6", "patch": "@@ -51761,7 +51761,6 @@\n   <imgdir name=\"4659\">\n     <imgdir name=\"0\">\n       <int name=\"npc\" value=\"9102001\"/>\n-      <int name=\"pettamenessmin\" value=\"1642\"/>\n       <int name=\"interval\" value=\"0\"/>\n       <imgdir name=\"pet\">\n         <imgdir name=\"0\">\n@@ -51770,7 +51769,6 @@\n       </imgdir>\n     </imgdir>\n     <imgdir name=\"1\">\n-      <int name=\"pettamenessmin\" value=\"1642\"/>\n       <string name=\"endscript\" value=\"q4659e\"/>\n       <imgdir name=\"pet\">\n         <imgdir name=\"0\">"}]}]},
