{"fetchDate": "2019-12-19", "content": [{"sha": "c46ff8292965354f33105fa17511dbf7af3cfc7b", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6YzQ2ZmY4MjkyOTY1MzU0ZjMzMTA1ZmExNzUxMWRiZjdhZjNjZmM3Yg==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-11-09T22:20:21Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-11-09T22:20:21Z"}, "message": "Major schedules & DB refactor\n\nRefactored many calls for TimerManager's schedules throughout the source.\nSwitched all tables using MyISAM to InnoDB: on a multi-threaded environment such as this, table-locking is an instant no-no, and other gains MyISAM would have over InnoDB are minimal.\nAltered getConnection() to properly throw an exception (good practice!) in case of no available connection instead of a mere null.", "tree": {"sha": "358375bc8b90cbf855cbffd016b936f90d66f3e1", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/358375bc8b90cbf855cbffd016b936f90d66f3e1"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/c46ff8292965354f33105fa17511dbf7af3cfc7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/c46ff8292965354f33105fa17511dbf7af3cfc7b", "html_url": "https://github.com/ronancpl/HeavenMS/commit/c46ff8292965354f33105fa17511dbf7af3cfc7b", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/c46ff8292965354f33105fa17511dbf7af3cfc7b/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9677e6f3f5c9d331ff0781cbc9bd68041653de74", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/9677e6f3f5c9d331ff0781cbc9bd68041653de74", "html_url": "https://github.com/ronancpl/HeavenMS/commit/9677e6f3f5c9d331ff0781cbc9bd68041653de74"}], "stats": {"total": 950, "additions": 588, "deletions": 362}, "files": [{"sha": "04cc30f5808322add463b512c64547f6360ef3c0", "filename": "README.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/README.md", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/README.md", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/README.md?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -69,7 +69,8 @@ Hamachi is optional, though. You don't have to install Hamachi if you want to ma\n \n Set the \"MapleSolaxia\" folder on a place of your preference. It is recommended for use \"C:\\Nexon\\MapleSolaxia\".\n \n-Setting up the SQL: open MySQL Query Browser, and define these parameters at startup and click OK:\n+Setting up the SQL: open MySQL Query Browser, define these parameters at startup and click OK.\n+\n Server Host: localhost\t\tPort: 3306\t\tUsername: root\n \n Now it must be done CAREFULLY:\n@@ -80,7 +81,7 @@ Now it is OPTIONAL, you don't need to run it if you don't want, as it will simpl\n \n 3. File -> Open Script... -> Browse for \"C:\\Nexon\\MapleSolaxia\\sql\" -> db_shopupdate.sql, and execute it.\n \n-At the end of the execution of these SQLs, you should have installed a database schema named \"maplesolaxia\". REGISTER YOUR FIRST ACCOUNT to be used in-game by creating manually a entry on the table \"accounts\" at that database with a login and a password.\n+At the end of the execution of these SQLs, you should have installed a database schema named \"maplesolaxia\". REGISTER YOUR FIRST ACCOUNT to be used in-game by creating manually an entry on the table \"accounts\" at that database with a login and a password.\n \n Configure the IP you want to use for your MapleStory server in \"configuration.ini\" file, or set it as \"localhost\" if you want to run it only on your machine. Alternatively, you can use the IP given by Hamachi to use on a Hamachi network, or you can use a non-Hamachi method of port-forwarding. Neither will be approached here.\n "}, {"sha": "e23f7eec1d4fea8555ae2926867d7cacc9ee792d", "filename": "dist/MapleSolaxia.jar", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/dist/MapleSolaxia.jar", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/dist/MapleSolaxia.jar", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/dist/MapleSolaxia.jar?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b"}, {"sha": "1a28ca525e86e01ba149ca53258da85d21c1a907", "filename": "docs/feature_list.txt", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/docs/feature_list.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/docs/feature_list.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/feature_list.txt?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -1,6 +1,6 @@\n ========== MapleSolaxiaV2 ==========\n Credits:\n-Ronan - Freelance Developer\n+Ronan - Developer\n Vcoc - Freelance Developer\n \n ---------------------------\n@@ -81,17 +81,27 @@ Server potentials:\n * Custom jail system (needs provided custom wz).\n * Delete Character 100% (requires ENABLE_PIC activated).\n * Autosaver (periodically saves on DB current state of every player in-game).\n-* Both fixed and randomized versions of HP/MP growth rate abailable, regarding player job (enable one at ServerConstants). Placeholder for HP/MP washing feature.\n+* Both fixed and randomized versions of HP/MP growth rate available, regarding player job (enable one at ServerConstants). Placeholder for HP/MP washing feature.\n \n Admin/GM commands:\n * Server commands layered by GM levels.\n * Spawn Zakum/Horntail/Pinkbean 100%.\n * New commands.\n \n+External tools:\n+* MapleArrowFetcher - Updates min/max quantity dropped on all arrows drop data, calculations based on mob level and whether it's a boss or not.\n+* MapleCouponInstaller - Retrieves coupon info from the WZ and makes a SQL table with it. The server will use that table to gather info regarding rates and intervals.\n+* MapleIdRetriever - Two behaviors: generates a SQL table with relation (id, name) of the handbook given as input. Given a file with names, outputs a file with ids.\n+* MapleMesoFetcher - Creates meso drop data for mobs with more than 4 items (thus overworld mobs), calculations based on mob level and whether it's a boss or not.\n+* MapleQuestItemFetcher - Searches the SQL tables and project files and reports in all relevant data regarding missing/erroneous quest items.\n+* MobBookIndexer - Generates a SQL table with all relations of cardid and mobid present in the mob book.\n+* MobBookUpdate - Generates a wz.xml that is a copy of the original MonsterBook.wz.xml, except it updates the drop data info in the book with those currently on DB.\n+\n Project:\n * Organized project code.\n * Highly configurable server (see all server flags at ServerConstants).\n * Fixed/added some missing packets for MoveEnvironment, summons and others.\n * Reviewed many Java object aspects that needed concurrency protection.\n+* Heavily reviewed future task management inside the project. Way less trivial schedules are spawned now, relieving task overload on the TimerManager.\n \n ---------------------------\n\\ No newline at end of file"}, {"sha": "5d165adbbe29ec492f4976696655d1af1c62715d", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -650,4 +650,13 @@ Implementado nova ferramenta: MapleQuestItemFetcher. Ela vasculha a DB e os XMLs\n \n 05 Novembro 2017,\n Adicionado sistema de level cap para jobs correntes.\n-Revisto acesso concorrente sobre o componente EM da classe EIM.\n\\ No newline at end of file\n+Revisto acesso concorrente sobre o componente EM da classe EIM.\n+\n+07 Novembro 2017,\n+Refatorado esquema de schedules por toda a source, diminuindo drasticamente as chamadas ao TimerManager.\n+Refatorado algumas chamadas \ufffd DB, busca somente aquilo que \ufffd necess\ufffdrio.\n+\n+08 - 09 Novembro 2017,\n+Adicionado packet para extra slot pendant.\n+Corrigido poss\ufffdvel bug em MapleMapFactory.\n+Modificado todas as DB tables agora utilizando InnoDB (ganhos do MyISAM em contraste se tornou \ufffdnfimo, para casos cr\ufffdticos).\n\\ No newline at end of file"}, {"sha": "6df9a9d3f55bac3563fd48981c22cff0673adf84", "filename": "sql/db_database.sql", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/sql/db_database.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/sql/db_database.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_database.sql?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -206,7 +206,7 @@ CREATE TABLE IF NOT EXISTS `temp_data` (\n   `chance` int(11) NOT NULL DEFAULT '0',\n   PRIMARY KEY (`dropperid`, `itemid`),\n   KEY `mobid` (`dropperid`)\n-) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=0 ;\n+) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=0 ;\n \n INSERT IGNORE INTO `temp_data` (`id`, `dropperid`, `itemid`, `minimum_quantity`, `maximum_quantity`, `questid`, `chance`) VALUES\n (1, 9400121, 4000138, 1, 1, 0, 600000),\n@@ -15929,15 +15929,15 @@ CREATE TABLE IF NOT EXISTS `monsterbook` (\n   `charid` int(11) unsigned NOT NULL,\n   `cardid` int(11) NOT NULL,\n   `level` int(1) DEFAULT '1'\n-) ENGINE=MyISAM DEFAULT CHARSET=latin1;\n+) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n \n CREATE TABLE IF NOT EXISTS `monstercarddata` (\n   `id` int(11) NOT NULL AUTO_INCREMENT,\n   `cardid` int(11) NOT NULL DEFAULT '0',\n   `mobid` int(11) NOT NULL DEFAULT '0',\n   PRIMARY KEY (`id`) USING BTREE,\n   UNIQUE KEY `id` (`id`)\n-) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=309 ;\n+) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=309 ;\n \n INSERT INTO `monstercarddata` (`id`, `cardid`, `mobid`) VALUES\n (1, 2380000, 100100),\n@@ -16313,7 +16313,7 @@ CREATE TABLE IF NOT EXISTS `nxcode` (\n   `type` int(11) NOT NULL DEFAULT '0',\n   `item` int(11) NOT NULL DEFAULT '10000',\n   PRIMARY KEY (`code`)\n-) ENGINE=MyISAM DEFAULT CHARSET=latin1;\n+) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n \n CREATE TABLE IF NOT EXISTS `nxcoupons` (\n   `id` int(11) NOT NULL AUTO_INCREMENT,\n@@ -16418,7 +16418,7 @@ CREATE TABLE IF NOT EXISTS `questactions` (\n   `status` int(11) NOT NULL DEFAULT '0',\n   `data` blob NOT NULL,\n   PRIMARY KEY (`questactionid`)\n-) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n+) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n CREATE TABLE IF NOT EXISTS `questprogress` (\n   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n@@ -16434,7 +16434,7 @@ CREATE TABLE IF NOT EXISTS `questrequirements` (\n   `status` int(11) NOT NULL DEFAULT '0',\n   `data` blob NOT NULL,\n   PRIMARY KEY (`questrequirementid`)\n-) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n+) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n CREATE TABLE IF NOT EXISTS `queststatus` (\n   `queststatusid` int(10) unsigned NOT NULL AUTO_INCREMENT,\n@@ -16456,7 +16456,7 @@ CREATE TABLE IF NOT EXISTS `reactordrops` (\n   `questid` int(5) NOT NULL DEFAULT '-1',\n   PRIMARY KEY (`reactordropid`),\n   KEY `reactorid` (`reactorid`)\n-) ENGINE=MyISAM  DEFAULT CHARSET=latin1 PACK_KEYS=1 AUTO_INCREMENT=841 ;\n+) ENGINE=InnoDB  DEFAULT CHARSET=latin1 PACK_KEYS=1 AUTO_INCREMENT=841 ;\n \n INSERT INTO `reactordrops` (`reactordropid`, `reactorid`, `itemid`, `chance`, `questid`) VALUES\n (1, 2001, 4031161, 1, 1008),\n@@ -17339,7 +17339,7 @@ CREATE TABLE IF NOT EXISTS `shopitems` (\n   `pitch` int(11) NOT NULL DEFAULT '0',\n   `position` int(11) NOT NULL COMMENT 'sort is an arbitrary field designed to give leeway when modifying shops. The lowest number is 104 and it increments by 4 for each item to allow decent space for swapping/inserting/removing items.',\n   PRIMARY KEY (`shopitemid`)\n-) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=20047 ;\n+) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=20047 ;\n \n INSERT INTO `shopitems` (`shopitemid`, `shopid`, `itemid`, `price`, `pitch`, `position`) VALUES\n (1, 11000, 1332005, 500, 0, 104),\n@@ -20967,7 +20967,7 @@ CREATE TABLE IF NOT EXISTS `shops` (\n   `shopid` int(10) unsigned NOT NULL AUTO_INCREMENT,\n   `npcid` int(11) NOT NULL DEFAULT '0',\n   PRIMARY KEY (`shopid`)\n-) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=10000000 ;\n+) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=10000000 ;\n \n INSERT INTO `shops` (`shopid`, `npcid`) VALUES\n (11000, 11000),\n@@ -21256,7 +21256,7 @@ CREATE TABLE IF NOT EXISTS `skillmacros` (\n   `name` varchar(13) DEFAULT NULL,\n   `shout` tinyint(1) NOT NULL DEFAULT '0',\n   PRIMARY KEY (`id`)\n-) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n+) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n CREATE TABLE IF NOT EXISTS `skills` (\n   `id` int(11) NOT NULL AUTO_INCREMENT,"}, {"sha": "d309ad2ff62a3ea5cbeeedbedbc4a50238818557", "filename": "sql/db_drops.sql", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/sql/db_drops.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/sql/db_drops.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_drops.sql?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -19885,7 +19885,7 @@ USE `maplesolaxia`;\n     PRIMARY KEY (`id`),\n     UNIQUE KEY (`dropperid`, `itemid`),\n     KEY `mobid` (`dropperid`)\n-  ) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n+  ) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n \t#pass (sorted) data from one table to another\n   INSERT INTO drop_data (dropperid, itemid, minimum_quantity, maximum_quantity, questid, chance)\n@@ -21223,7 +21223,7 @@ USE `maplesolaxia`;\n     `mobid` int(11) NOT NULL DEFAULT '0',\n     PRIMARY KEY (`id`) USING BTREE,\n     UNIQUE KEY `id` (`id`)\n-  ) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n+  ) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n   INSERT INTO `monstercarddata` (`cardid`, `mobid`) (SELECT itemid, min(dropperid) FROM drop_data where itemid>=2380000 and itemid<2390000 group by itemid);\n "}, {"sha": "7dae8d9148e471426497ff83e8c3ed3699992713", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 98, "deletions": 39, "changes": 137, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -257,21 +257,22 @@\n     private Map<Integer, MapleCoolDownValueHolder> coolDowns = new LinkedHashMap<>();\n     private EnumMap<MapleDisease, MapleDiseaseValueHolder> diseases = new EnumMap<>(MapleDisease.class);\n     private Map<Integer, MapleDoor> doors = new LinkedHashMap<>();\n+    private Map<MapleQuest, Long> questExpirations = new LinkedHashMap<>();\n     private ScheduledFuture<?> dragonBloodSchedule;\n     private ScheduledFuture<?> hpDecreaseTask;\n     private ScheduledFuture<?> beholderHealingSchedule, beholderBuffSchedule, berserkSchedule;\n     private ScheduledFuture<?> skillCooldownTask = null;\n     private ScheduledFuture<?> buffExpireTask = null;\n     private ScheduledFuture<?> itemExpireTask = null;\n     private ScheduledFuture<?> diseaseExpireTask = null;\n+    private ScheduledFuture<?> questExpireTask = null;\n     private ScheduledFuture<?> recoveryTask = null;\n     private ScheduledFuture<?> extraRecoveryTask = null;\n     private ScheduledFuture<?> chairRecoveryTask = null;\n     private ScheduledFuture<?> pendantOfSpirit = null; //1122017\n-    private List<ScheduledFuture<?>> timers = new ArrayList<>();\n     private Lock chrLock = new ReentrantLock(true);\n     private Lock effLock = new ReentrantLock(true);\n-    private Lock petLock = new ReentrantLock(true);\n+    private Lock petLock = new ReentrantLock(true); // for quest tasks as well\n     private Lock prtLock = new ReentrantLock();\n     private Map<Integer, Set<Integer>> excluded = new LinkedHashMap<>();\n     private Set<Integer> excludedItems = new LinkedHashSet<>();\n@@ -2088,13 +2089,15 @@ private void doHurtHp() {\n             addHP(-getMap().getHPDec());\n             lastHpDec = System.currentTimeMillis();\n         }\n-        \n-        hpDecreaseTask = TimerManager.getInstance().schedule(new Runnable() {\n+    }\n+    \n+    private void startHpDecreaseTask(long lastHpTask) {\n+        hpDecreaseTask = TimerManager.getInstance().register(new Runnable() {\n             @Override\n             public void run() {\n                 doHurtHp();\n             }\n-        }, 10000);\n+        }, 10000, 10000 - lastHpTask);\n     }\n     \n     public void resetHpDecreaseTask() {\n@@ -2103,16 +2106,7 @@ public void resetHpDecreaseTask() {\n         }\n         \n         long lastHpTask = System.currentTimeMillis() - lastHpDec;\n-        if(lastHpTask >= 10000) {\n-            doHurtHp();\n-        } else {\n-            hpDecreaseTask = TimerManager.getInstance().schedule(new Runnable() {\n-                @Override\n-                public void run() {\n-                    doHurtHp();\n-                }\n-            }, 10000 - lastHpTask);\n-        }\n+        startHpDecreaseTask((lastHpTask > 10000) ? 10000 : lastHpTask);\n     }\n     \n     public void dropMessage(String message) {\n@@ -2127,10 +2121,6 @@ public String emblemCost() {\n         return nf.format(MapleGuild.CHANGE_EMBLEM_COST);\n     }\n \n-    public List<ScheduledFuture<?>> getTimers() {\n-        return timers;\n-    }\n-\n     private void enforceMaxHpMp() {\n         List<Pair<MapleStat, Integer>> stats = new ArrayList<>(2);\n         if (getMp() > getCurrentMaxMp()) {\n@@ -7221,7 +7211,7 @@ public void showHint(String msg) {\n     public void showNote() {\n         try {\n             Connection con = DatabaseConnection.getConnection();\n-            try (PreparedStatement ps = con.prepareStatement(\"SELECT * FROM notes WHERE `to`=? AND `deleted` = 0\", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)) {\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT * FROM notes WHERE `to` = ? AND `deleted` = 0\", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)) {\n                 ps.setString(1, this.getName());\n                 try (ResultSet rs = ps.executeQuery()) {\n                     rs.last();\n@@ -7466,15 +7456,83 @@ private void expireQuest(MapleQuest quest) {\n         updateQuest(newStatus);\n     }\n     \n-    public void questTimeLimit(final MapleQuest quest, int seconds) {\n-        ScheduledFuture<?> sf = TimerManager.getInstance().schedule(new Runnable() {\n-            @Override\n-            public void run() {\n-                expireQuest(quest);\n+    public void cancelQuestExpirationTask() {\n+        petLock.lock();\n+        try {\n+            if (questExpireTask != null) {\n+                questExpireTask.cancel(false);\n+                questExpireTask = null;\n+            }\n+        } finally {\n+            petLock.unlock();\n+        }\n+    }\n+    \n+    public void questExpirationTask() {\n+        petLock.lock();\n+        try {\n+            if(!questExpirations.isEmpty()) {\n+                if(questExpireTask == null) {\n+                    questExpireTask = TimerManager.getInstance().register(new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            runQuestExpireTask();\n+                        }\n+                    }, 10 * 1000);\n+                }\n+            }\n+        } finally {\n+            petLock.unlock();\n+        }\n+    }\n+    \n+    private void runQuestExpireTask() {\n+        petLock.lock();\n+        try {\n+            long timeNow = System.currentTimeMillis();\n+            List<MapleQuest> expireList = new LinkedList<>();\n+            \n+            for(Entry<MapleQuest, Long> qe : questExpirations.entrySet()) {\n+                if(qe.getValue() <= timeNow) expireList.add(qe.getKey());\n+            }\n+            \n+            if(!expireList.isEmpty()) {\n+                for(MapleQuest quest : expireList) {\n+                    expireQuest(quest);\n+                    questExpirations.remove(quest);\n+                }\n+                \n+                if(questExpirations.isEmpty()) {\n+                    questExpireTask.cancel(false);\n+                    questExpireTask = null;\n+                }\n+            }\n+        } finally {\n+            petLock.unlock();\n+        }\n+    }\n+    \n+    private void registerQuestExpire(MapleQuest quest, long time) {\n+        petLock.lock();\n+        try {\n+            if(questExpireTask == null) {\n+                questExpireTask = TimerManager.getInstance().register(new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        runQuestExpireTask();\n+                    }\n+                }, 10 * 1000);\n             }\n-        }, seconds * 1000);\n+            \n+            questExpirations.put(quest, System.currentTimeMillis() + time);\n+        } finally {\n+            petLock.unlock();\n+        }\n+    }\n+    \n+    public void questTimeLimit(final MapleQuest quest, int seconds) {\n+        registerQuestExpire(quest, seconds * 1000);\n         announce(MaplePacketCreator.addQuestTimeLimit(quest.getId(), seconds * 1000));\n-        timers.add(sf);\n     }\n     \n     public void questTimeLimit2(final MapleQuest quest, long expires) {\n@@ -7483,14 +7541,7 @@ public void questTimeLimit2(final MapleQuest quest, long expires) {\n         if(timeLeft <= 0) {\n             expireQuest(quest);\n         } else {\n-            ScheduledFuture<?> sf = TimerManager.getInstance().schedule(new Runnable() {\n-                @Override\n-                public void run() {\n-                    expireQuest(quest);\n-                }\n-            }, timeLeft);\n-\n-            timers.add(sf);\n+            registerQuestExpire(quest, timeLeft);\n         }\n     }\n \n@@ -7903,10 +7954,19 @@ public final void empty(final boolean remove) {\n         cancelSkillCooldownTask();\n         cancelExpirationTask();\n         \n-        for (ScheduledFuture<?> sf : timers) {\n-            sf.cancel(false);\n+        petLock.lock();\n+        try {\n+            if (questExpireTask != null) {\n+                questExpireTask.cancel(false);\n+                questExpireTask = null;\n+                \n+                questExpirations.clear();\n+                questExpirations = null;\n+            }\n+        } finally {\n+            petLock.unlock();\n         }\n-        timers.clear();\n+        \n         if (maplemount != null) {\n             maplemount.empty();\n             maplemount = null;\n@@ -7921,7 +7981,6 @@ public final void empty(final boolean remove) {\n             family = null;\n             client = null;\n             map = null;\n-            timers = null;\n         }\n     }\n "}, {"sha": "6b3068888c0710a92c76a7c133c04ed99913da91", "filename": "src/client/MapleClient.java", "status": "modified", "additions": 14, "deletions": 34, "changes": 48, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/client/MapleClient.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/client/MapleClient.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleClient.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -41,7 +41,6 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import java.util.concurrent.ScheduledFuture;\n import java.util.concurrent.locks.Lock;\n import java.util.concurrent.locks.ReentrantLock;\n \n@@ -70,7 +69,6 @@\n import scripting.quest.QuestScriptManager;\n import server.life.MapleMonster;\n import server.MapleTrade;\n-import server.TimerManager;\n import server.maps.*;\n import server.quest.MapleQuest;\n import tools.LogHelper;\n@@ -101,7 +99,6 @@\n \tprivate int gmlevel;\n \tprivate Set<String> macs = new HashSet<>();\n \tprivate Map<String, ScriptEngine> engines = new HashMap<>();\n-\tprivate ScheduledFuture<?> idleTask = null;\n \tprivate byte characterSlots = 3;\n \tprivate byte loginattempt = 0;\n \tprivate String pin = null;\n@@ -941,15 +938,13 @@ public final synchronized void disconnect(boolean shutdown, boolean cashshop) {/\n \t}\n \n \tprivate void clear() {  //usable when defining client = null shortly after\n+                Server.getInstance().unregisterLoginState(this);\n+            \n \t\tthis.accountName = null;\n \t\tthis.macs = null;\n \t\tthis.hwid = null;\n \t\tthis.birthday = null;\n \t\t//this.engines = null;\n-\t\tif (this.idleTask != null) {\n-\t\t\tthis.idleTask.cancel(true);\n-\t\t\tthis.idleTask = null;\n-\t\t}\n \t\tthis.player = null;\n \t\tthis.receive = null;\n \t\tthis.send = null;\n@@ -1005,25 +1000,17 @@ public void pongReceived() {\n \t\tlastPong = System.currentTimeMillis();\n \t}\n \n-\tpublic void sendPing() {\n-\t\tfinal long then = System.currentTimeMillis();\n-\t\tannounce(MaplePacketCreator.getPing());\n-\t\tTimerManager.getInstance().schedule(new Runnable() {\n-\n-\t\t\t@Override\n-\t\t\tpublic void run() {\n-\t\t\t\ttry {\n-\t\t\t\t\tif (lastPong < then) {\n-\t\t\t\t\t\tif (session != null && session.isConnected()) {\n-\t\t\t\t\t\t\tsession.close(false);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t} catch (NullPointerException e) {\n-                                    e.printStackTrace();\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}, 15000);\n-\t}\n+        public void testPing(long timeThen) {\n+                try {\n+                        if (lastPong < timeThen) {\n+                                if (session != null && session.isConnected()) {\n+                                        session.close(false);\n+                                }\n+                        }\n+                } catch (NullPointerException e) {\n+                    e.printStackTrace();\n+                }\n+        }\n \t\n \tpublic String getHWID() {\n \t\treturn hwid;\n@@ -1053,14 +1040,6 @@ public void removeScriptEngine(String name) {\n                 engines.remove(name);\n \t}\n \n-\tpublic ScheduledFuture<?> getIdleTask() {\n-\t\treturn idleTask;\n-\t}\n-\n-\tpublic void setIdleTask(ScheduledFuture<?> idleTask) {\n-\t\tthis.idleTask = idleTask;\n-\t}\n-\n \tpublic NPCConversationManager getCM() {\n \t\treturn NPCScriptManager.getInstance().getCM(this);\n \t}\n@@ -1321,6 +1300,7 @@ public void changeChannel(int channel) {\n                 player.cancelBuffExpireTask();\n                 player.cancelDiseaseExpireTask();\n                 player.cancelSkillCooldownTask();\n+                player.cancelQuestExpirationTask();\n \t\t//Cancelling magicdoor? Nope\n \t\t//Cancelling mounts? Noty\n \t\tif (player.getBuffedValue(MapleBuffStat.PUPPET) != null) {"}, {"sha": "fc5be29d05f1efa82d32d3ad72dc8796c230fec9", "filename": "src/client/command/Commands.java", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/client/command/Commands.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/client/command/Commands.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/Commands.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -349,6 +349,10 @@ public static boolean executeSolaxiaCommandLv0(Channel cserv, Server srv, MapleC\n \t\t\tbreak;\n                     \n \t\tcase \"staff\":\n+                        player.yellowMessage(\"MapleSolaxiaV2 Staff\");\n+                        player.yellowMessage(\"Ronan - Developer\");\n+                        player.yellowMessage(\"Vcoc - Freelance Developer\");\n+                        player.yellowMessage(\"\");\n \t\t\tplayer.yellowMessage(\"MapleSolaxia Staff\");\n \t\t\tplayer.yellowMessage(\"Aria - Administrator\");\n \t\t\tplayer.yellowMessage(\"Twdtwd - Administrator\");\n@@ -358,9 +362,6 @@ public static boolean executeSolaxiaCommandLv0(Channel cserv, Server srv, MapleC\n \t\t\tplayer.yellowMessage(\"SourMjolk - Game Master\");\n \t\t\tplayer.yellowMessage(\"Kanade - Game Master\");\n \t\t\tplayer.yellowMessage(\"Kitsune - Game Master\");\n-                        player.yellowMessage(\"MapleSolaxiaV2 Staff\");\n-                        player.yellowMessage(\"Ronan - Freelance Developer\");\n-                        player.yellowMessage(\"Vcoc - Freelance Developer\");\n \t\t\tbreak;\n                     \n \t\tcase \"lastrestart\":\n@@ -451,7 +452,7 @@ public static boolean executeSolaxiaCommandLv0(Channel cserv, Server srv, MapleC\n \t\t\t\t\toutput += \"#b\" + data.getRight() + \"#k is dropped by:\\r\\n\";\n \t\t\t\t\ttry {\n                                                 Connection con = DatabaseConnection.getConnection();\n-\t\t\t\t\t\tPreparedStatement ps = con.prepareStatement(\"SELECT * FROM drop_data WHERE itemid = ? LIMIT 50\");\n+\t\t\t\t\t\tPreparedStatement ps = con.prepareStatement(\"SELECT dropperid FROM drop_data WHERE itemid = ? LIMIT 50\");\n \t\t\t\t\t\tps.setInt(1, data.getLeft());\n \t\t\t\t\t\tResultSet rs = ps.executeQuery();\n \t\t\t\t\t\twhile(rs.next()) {\n@@ -1513,11 +1514,13 @@ public static boolean executeSolaxiaCommandLv3(Channel cserv, Server srv, MapleC\n                     \n                 case \"reloadmap\":\n \t\t\tMapleMap oldMap = c.getPlayer().getMap();\n-\t\t\tMapleMap newMap = c.getChannelServer().getMapFactory().getMap(player.getMapId());\n+\t\t\tMapleMap newMap = c.getChannelServer().getMapFactory().resetMap(player.getMapId());\n+                        int callerid = c.getPlayer().getId();\n+                        \n \t\t\tfor (MapleCharacter ch : oldMap.getCharacters()) {\n \t\t\t\tch.changeMap(newMap);\n+                                if(ch.getId() != callerid) ch.dropMessage(\"You have been relocated due to map reloading. Sorry for the inconvenience.\");\n \t\t\t}\n-\t\t\toldMap = null;\n \t\t\tnewMap.respawn();\n                     break;\n "}, {"sha": "1ff812035970c9aca25b828133a3a0056090b81c", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -85,6 +85,7 @@\n     //Dangling Items Configuration\n     public static final int ITEM_EXPIRE_TIME  = 3 * 60 * 1000;  //Time before items start disappearing. Recommended to be set up to 3 minutes.\n     public static final int ITEM_MONITOR_TIME = 5 * 60 * 1000;  //Interval between item monitoring tasks on maps, which checks for dangling (null) item objects on the map item history.\n+    public static final int ITEM_EXPIRE_CHECK = 10 * 1000;      //Interval between item expiring tasks on maps, which checks and makes disappear expired items.\n     public static final int ITEM_LIMIT_ON_MAP = 200;            //Max number of items allowed on a map.\n     \n     //Some Gameplay Enhancing Configurations"}, {"sha": "7107ade5a10055c56c6684401a722da6188e5e69", "filename": "src/net/MapleServerHandler.java", "status": "modified", "additions": 83, "deletions": 2, "changes": 85, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/MapleServerHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/MapleServerHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/MapleServerHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -42,23 +42,42 @@\n import client.MapleClient;\n import constants.ServerConstants;\n \n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+import java.util.concurrent.ScheduledFuture;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import server.TimerManager;\n+\n public class MapleServerHandler extends IoHandlerAdapter {\n \n     private PacketProcessor processor;\n     private int world = -1, channel = -1;\n     private static final SimpleDateFormat sdf = new SimpleDateFormat(\"dd-MM-yyyy HH:mm\");\n     private static AtomicLong sessionId = new AtomicLong(7777);\n     \n+    private Lock idleLock = new ReentrantLock(true);\n+    private Lock tempLock = new ReentrantLock(true);\n+    private Map<MapleClient, Long> idleSessions = new HashMap<>(100);\n+    private Map<MapleClient, Long> tempIdleSessions = new HashMap<>();\n+    private ScheduledFuture<?> idleManager = null;\n+    \n     public MapleServerHandler() {\n         this.processor = PacketProcessor.getProcessor(-1, -1);\n+        \n+        idleManagerTask();\n     }\n \n     public MapleServerHandler(int world, int channel) {\n         this.processor = PacketProcessor.getProcessor(world, channel);\n         this.world = world;\n         this.channel = channel;\n+        \n+        idleManagerTask();\n     }\n-\n+    \n     @Override\n     public void exceptionCaught(IoSession session, Throwable cause) throws Exception {\n     \tSystem.out.println(\"disconnect by exception\");\n@@ -155,8 +174,70 @@ public void messageSent(IoSession session, Object message) {\n     public void sessionIdle(final IoSession session, final IdleStatus status) throws Exception {\n         MapleClient client = (MapleClient) session.getAttribute(MapleClient.CLIENT_KEY);\n         if (client != null) {\n-            client.sendPing();\n+            registerIdleSession(client);\n         }\n         super.sessionIdle(session, status);\n     }\n+    \n+    private void registerIdleSession(MapleClient c) {\n+        if(idleLock.tryLock()) {\n+            idleSessions.put(c, System.currentTimeMillis());\n+            c.announce(MaplePacketCreator.getPing());\n+            \n+            idleLock.unlock();\n+        } else {\n+            tempLock.lock();\n+            try {\n+                tempIdleSessions.put(c, System.currentTimeMillis());\n+                c.announce(MaplePacketCreator.getPing());\n+            } finally {\n+                tempLock.unlock();\n+            }\n+        }\n+    }\n+    \n+    private void manageIdleSessions() {\n+        long timeNow = System.currentTimeMillis();\n+        long timeThen = timeNow - 15000;\n+        \n+        idleLock.lock();\n+        try {\n+            for(Entry<MapleClient, Long> mc : idleSessions.entrySet()) {\n+                if(timeNow - mc.getValue() >= 15000) {\n+                    mc.getKey().testPing(timeThen);\n+                }\n+            }\n+            \n+            idleSessions.clear();\n+            \n+            if(!tempIdleSessions.isEmpty()) {\n+                tempLock.lock();\n+                try {\n+                    for(Entry<MapleClient, Long> mc : tempIdleSessions.entrySet()) {\n+                        idleSessions.put(mc.getKey(), mc.getValue());\n+                    }\n+                    \n+                    tempIdleSessions.clear();\n+                } finally {\n+                    tempLock.unlock();\n+                }\n+            }\n+        } finally {\n+            idleLock.unlock();\n+        }\n+    }\n+    \n+    private void idleManagerTask() {\n+        this.idleManager = TimerManager.getInstance().register(new Runnable() {\n+            @Override\n+            public void run() {\n+                manageIdleSessions();\n+            }\n+        }, 10000);\n+    }\n+    \n+    private void cancelIdleManagerTask() {\n+        this.idleManager.cancel(false);\n+        this.idleManager = null;\n+    }\n }"}, {"sha": "ca6190921ee17f2ec44aed5a4eb309e912cecd17", "filename": "src/net/SendOpcode.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/SendOpcode.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/SendOpcode.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/SendOpcode.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -132,7 +132,7 @@\n     NOTIFY_LEVELUP(0x69),\n     NOTIFY_MARRIAGE(0x6A),\n     NOTIFY_JOB_CHANGE(0x6B),\n-    //SET_BUY_EQUIP_EXT(0x6C),//lol?\n+    //SET_BUY_EQUIP_EXT(0x6C),  //probably extra pendant slot for other versions?\n     MAPLE_TV_USE_RES(0x6D), //It's not blank, It's a popup nibs\n     AVATAR_MEGAPHONE_RESULT(0x6E),//bot useless..\n     SET_AVATAR_MEGAPHONE(0x6F),\n@@ -145,7 +145,7 @@\n     NEW_YEAR_CARD_RES(0x76),\n     RANDOM_MORPH_RES(0x77),\n     CANCEL_NAME_CHANGE_BY_OTHER(0x78),\n-    SET_BUY_EQUIP_EXT(0x79),\n+    SET_EXTRA_PENDANT_SLOT(0x79),\n     SCRIPT_PROGRESS_MESSAGE(0x7A),\n     DATA_CRC_CHECK_FAILED(0x7B),\n     MACRO_SYS_DATA_INIT(0x7C),"}, {"sha": "45d71ac0da1cd3554c99aa847526fe714715ed4c", "filename": "src/net/server/Server.java", "status": "modified", "additions": 60, "deletions": 3, "changes": 63, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/Server.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/Server.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/Server.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -37,6 +37,7 @@\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n import java.util.Properties;\n import java.util.Set;\n import java.util.concurrent.locks.ReentrantLock;\n@@ -63,6 +64,7 @@\n import tools.DatabaseConnection;\n import tools.FilePrinter;\n import tools.Pair;\n+import client.MapleClient;\n import client.MapleCharacter;\n import client.SkillFactory;\n import constants.ItemConstants;\n@@ -82,7 +84,8 @@\n     private static Server instance = null;\n     private List<Pair<Integer, String>> worldRecommendedList = new LinkedList<>();\n     private final Map<Integer, MapleGuild> guilds = new LinkedHashMap<>();\n-    private final Lock shutdownLock = new ReentrantLock();\n+    private final Map<MapleClient, Long> inLoginState = new LinkedHashMap<>();\n+    private final Lock srvLock = new ReentrantLock();\n     private final PlayerBuffStorage buffStorage = new PlayerBuffStorage();\n     private final Map<Integer, MapleAlliance> alliances = new LinkedHashMap<>();\n     private boolean online = false;\n@@ -279,6 +282,7 @@ public void run() {\n         TimerManager tMan = TimerManager.getInstance();\n         tMan.start();\n         tMan.register(tMan.purge(), ServerConstants.PURGING_INTERVAL);//Purging ftw...\n+        disconnectIdlesOnLoginTask();\n         \n         long timeLeft = getTimeLeftForNextHour();\n         tMan.register(new CouponWorker(), ServerConstants.COUPON_INTERVAL, timeLeft);\n@@ -720,11 +724,64 @@ public World getWorld(int id) {\n         return worlds;\n     }\n \n+    public void registerLoginState(MapleClient c) {\n+        srvLock.lock();\n+        try {\n+            inLoginState.put(c, System.currentTimeMillis() + 600000);\n+        } finally {\n+            srvLock.unlock();\n+        }\n+    }\n+    \n+    public void unregisterLoginState(MapleClient c) {\n+        srvLock.lock();\n+        try {\n+            inLoginState.remove(c);\n+        } finally {\n+            srvLock.unlock();\n+        }\n+    }\n+    \n+    private void disconnectIdlesOnLoginState() {\n+        srvLock.lock();\n+        try {\n+            List<MapleClient> toDisconnect = new LinkedList<>();\n+            long timeNow = System.currentTimeMillis();\n+            \n+            for(Entry<MapleClient, Long> mc : inLoginState.entrySet()) {\n+                if(timeNow > mc.getValue()) {\n+                    toDisconnect.add(mc.getKey());\n+                }\n+            }\n+            \n+            for(MapleClient c : toDisconnect) {\n+                if(c.isLoggedIn()) {\n+                    c.disconnect(false, false);\n+                } else {\n+                    c.getSession().close(true);\n+                }\n+                \n+                inLoginState.remove(c);\n+            }\n+        } finally {\n+            srvLock.unlock();\n+        }\n+    }\n+    \n+    private void disconnectIdlesOnLoginTask() {\n+        TimerManager.getInstance().register(new Runnable() {\n+            @Override\n+            public void run() {\n+                disconnectIdlesOnLoginState();\n+            }\n+        }, 300000);\n+    }\n+    \n     public final Runnable shutdown(final boolean restart) {//no player should be online when trying to shutdown!\n         return new Runnable() {\n             @Override\n             public void run() {\n-                shutdownLock.lock();\n+                srvLock.lock();\n                 \n                 try {\n                     System.out.println((restart ? \"Restarting\" : \"Shutting down\") + \" the server!\\r\\n\");\n@@ -788,7 +845,7 @@ public void run() {\n                         getInstance().run();//DID I DO EVERYTHING?! D:\n                     }\n                 } finally {\n-                    shutdownLock.unlock();\n+                    srvLock.unlock();\n                 }\n             }\n         };"}, {"sha": "f6ec2614c50e275d76ec9c97b123c40d1deb9dcd", "filename": "src/net/server/channel/handlers/BBSOperationHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/channel/handlers/BBSOperationHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/channel/handlers/BBSOperationHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/BBSOperationHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -297,7 +297,7 @@ public static void displayThread(MapleClient client, int threadid, boolean bIsTh\n         if (mc.getGuildId() <= 0) {\n             return;\n         }\n-        Connection con = null;\n+        Connection con;\n         try {\n             con = DatabaseConnection.getConnection();\n             PreparedStatement ps2;"}, {"sha": "986cd30001dbe021fc730588f7dd30c41cb4716a", "filename": "src/net/server/channel/handlers/EnterCashShopHandler.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/channel/handlers/EnterCashShopHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/channel/handlers/EnterCashShopHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/EnterCashShopHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -65,6 +65,7 @@ public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n             mc.cancelDiseaseExpireTask();\n             mc.cancelSkillCooldownTask();\n             mc.cancelExpirationTask();\n+            mc.cancelQuestExpirationTask();\n \n             c.announce(MaplePacketCreator.openCashShop(c, false));\n             c.announce(MaplePacketCreator.showCashInventory(c));"}, {"sha": "f4072f1da7d7ca4412d33bd15c3acf2dadfdf333", "filename": "src/net/server/channel/handlers/EnterMTSHandler.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/channel/handlers/EnterMTSHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/channel/handlers/EnterMTSHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/EnterMTSHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -74,6 +74,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         chr.cancelDiseaseExpireTask();\n         chr.cancelSkillCooldownTask();\n         chr.cancelExpirationTask();\n+        chr.cancelQuestExpirationTask();\n         \n         chr.saveToDB();\n         chr.getMap().removePlayer(c.getPlayer());"}, {"sha": "5e5b19b270687858788a887fecb74430d83cbb83", "filename": "src/net/server/channel/handlers/MTSHandler.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/channel/handlers/MTSHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/channel/handlers/MTSHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MTSHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -343,15 +343,15 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 }\n             } else if (op == 9) { //add to cart\n                 int id = slea.readInt(); //id of the item\n-                Connection con = null;\n+                Connection con;\n                 try {\n                     con = DatabaseConnection.getConnection();\n-                    try (PreparedStatement ps1 = con.prepareStatement(\"SELECT * FROM mts_items WHERE id = ? AND seller <> ?\")) {\n-                        ps1.setInt(1, id);//Previene que agregues al cart tus propios items\n+                    try (PreparedStatement ps1 = con.prepareStatement(\"SELECT id FROM mts_items WHERE id = ? AND seller <> ?\")) {\n+                        ps1.setInt(1, id);  //Dummy query, prevents adding to cart self owned items\n                         ps1.setInt(2, c.getPlayer().getId());\n                         try (ResultSet rs1 = ps1.executeQuery()) {\n                             if (rs1.next()) {\n-                                PreparedStatement ps = con.prepareStatement(\"SELECT * FROM mts_cart WHERE cid = ? AND itemid = ?\");\n+                                PreparedStatement ps = con.prepareStatement(\"SELECT cid FROM mts_cart WHERE cid = ? AND itemid = ?\");\n                                 ps.setInt(1, c.getPlayer().getId());\n                                 ps.setInt(2, id);\n                                 try (ResultSet rs = ps.executeQuery()) {"}, {"sha": "79a4ad6f93920724cc6e7e3f9f8011907edb6860", "filename": "src/net/server/channel/handlers/PlayerLoggedinHandler.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/channel/handlers/PlayerLoggedinHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/channel/handlers/PlayerLoggedinHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PlayerLoggedinHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -267,6 +267,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         player.diseaseExpireTask();\n         player.skillCooldownTask();\n         player.expirationTask();\n+        player.questExpirationTask();\n         if (GameConstants.hasSPTable(player.getJob()) && player.getJob().getId() != 2001) {\n                 player.createDragon();\n         }"}, {"sha": "29814cddc8484bce72a16990b6b0ea718601b849", "filename": "src/net/server/guild/MapleAlliance.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/guild/MapleAlliance.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/guild/MapleAlliance.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/guild/MapleAlliance.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -208,7 +208,7 @@ public static MapleAlliance loadAlliance(int id) {\n             ps.close();\n             rs.close();\n             \n-            ps = con.prepareStatement(\"SELECT * FROM allianceguilds WHERE allianceid = ?\");\n+            ps = con.prepareStatement(\"SELECT guildid FROM allianceguilds WHERE allianceid = ?\");\n             ps.setInt(1, id);\n             rs = ps.executeQuery();\n             "}, {"sha": "93f51774a239515bcb9fb53663aca5dbf7c89fba", "filename": "src/net/server/handlers/KeepAliveHandler.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/KeepAliveHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/KeepAliveHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/KeepAliveHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -26,10 +26,12 @@\n import tools.data.input.SeekableLittleEndianAccessor;\n \n public class KeepAliveHandler implements MaplePacketHandler {\n+    @Override\n     public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         c.pongReceived();\n     }\n \n+    @Override\n     public boolean validateState(MapleClient c) {\n         return true;\n     }"}, {"sha": "1ed5cfaa23b7a696a313db6bc8a00c3b068f1dcc", "filename": "src/net/server/handlers/login/CharSelectedHandler.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/CharSelectedHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/CharSelectedHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/CharSelectedHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -41,9 +41,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             return;\n         }\n \n-        if (c.getIdleTask() != null) {\n-            c.getIdleTask().cancel(true);\n-        }\n+        Server.getInstance().unregisterLoginState(c);\n         c.updateLoginState(MapleClient.LOGIN_SERVER_TRANSITION);\n         String[] socket = Server.getInstance().getIP(c.getWorld(), c.getChannel()).split(\":\");\n         try {"}, {"sha": "1863f604983913ba0aa51df9ed851796d595ff0f", "filename": "src/net/server/handlers/login/CharSelectedWithPicHandler.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/CharSelectedWithPicHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/CharSelectedWithPicHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/CharSelectedWithPicHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -26,9 +26,7 @@ public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n             return;\n         }\n         if (c.checkPic(pic)) {\n-            if (c.getIdleTask() != null) {\n-                c.getIdleTask().cancel(true);\n-            }\n+            Server.getInstance().unregisterLoginState(c);\n             c.updateLoginState(MapleClient.LOGIN_SERVER_TRANSITION);\n \n             String[] socket = Server.getInstance().getIP(c.getWorld(), c.getChannel()).split(\":\");"}, {"sha": "cb60064f7c55b04d5cb47f6d39fa67b186964d0e", "filename": "src/net/server/handlers/login/LoginPasswordHandler.java", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/LoginPasswordHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/LoginPasswordHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/LoginPasswordHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -24,6 +24,7 @@\n import java.util.Calendar;\n \n import net.MaplePacketHandler;\n+import net.server.Server;\n import server.TimerManager;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n@@ -73,12 +74,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n     \n     private static void login(MapleClient c){\n         c.announce(MaplePacketCreator.getAuthSuccess(c));//why the fk did I do c.getAccountName()?\n-        final MapleClient client = c;\n-        c.setIdleTask(TimerManager.getInstance().schedule(new Runnable() {\n-            @Override\n-            public void run() {\n-                client.disconnect(false, false);\n-            }\n-        }, 600000));\n+        \n+        Server.getInstance().registerLoginState(c);\n     }\n }"}, {"sha": "3221bc0af18f3eb408cdb82cfc9caa76abacb70f", "filename": "src/net/server/handlers/login/PickCharHandler.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/PickCharHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/PickCharHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/PickCharHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -49,9 +49,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             e.printStackTrace();\n             c.setChannel(1);\n         }\n-        if (c.getIdleTask() != null) {\n-            c.getIdleTask().cancel(true);\n-        }\n+        Server.getInstance().unregisterLoginState(c);\n         c.updateLoginState(MapleClient.LOGIN_SERVER_TRANSITION);\n         String[] socket = Server.getInstance().getIP(c.getWorld(), c.getChannel()).split(\":\");\n         try {"}, {"sha": "75e16ac2113ec6d9eb46b247e985a34ab0669666", "filename": "src/net/server/handlers/login/RegisterPicHandler.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/RegisterPicHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/RegisterPicHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/RegisterPicHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -29,9 +29,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         String pic = slea.readMapleAsciiString();\n         if (c.getPic() == null || c.getPic().equals(\"\")) {\n             c.setPic(pic);\n-            if (c.getIdleTask() != null) {\n-                c.getIdleTask().cancel(true);\n-            }\n+            Server.getInstance().unregisterLoginState(c);\n             c.updateLoginState(MapleClient.LOGIN_SERVER_TRANSITION);\n             String[] socket = Server.getInstance().getIP(c.getWorld(), c.getChannel()).split(\":\");\n             try {"}, {"sha": "8fdb27897ec7da6b15126bb802455c881280d6ab", "filename": "src/net/server/handlers/login/SetGenderHandler.java", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/SetGenderHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/SetGenderHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/SetGenderHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -24,7 +24,7 @@\n \n import client.MapleClient;\n import net.AbstractMaplePacketHandler;\n-import server.TimerManager;\n+import net.server.Server;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n@@ -40,12 +40,8 @@ public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n             c.setGender(slea.readByte());\n             c.announce(MaplePacketCreator.getAuthSuccess(c));\n             final MapleClient client = c;\n-            c.setIdleTask(TimerManager.getInstance().schedule(new Runnable() {\n-                @Override\n-                public void run() {\n-                    client.getSession().close(true);\n-                }\n-            }, 600000));\n+            \n+            Server.getInstance().registerLoginState(c);\n         }\n     }\n "}, {"sha": "e73b49b589bb3a060f90c24e98ac593af23aa9f6", "filename": "src/net/server/handlers/login/ViewAllCharSelectedWithPicHandler.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/ViewAllCharSelectedWithPicHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/ViewAllCharSelectedWithPicHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/ViewAllCharSelectedWithPicHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -29,9 +29,7 @@ public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n             return;\n         }\n         if (c.checkPic(pic)) {\n-            if (c.getIdleTask() != null) {\n-                c.getIdleTask().cancel(true);\n-            }\n+            Server.getInstance().unregisterLoginState(c);\n             c.updateLoginState(MapleClient.LOGIN_SERVER_TRANSITION);\n \n             String[] socket = Server.getInstance().getIP(c.getWorld(), c.getChannel()).split(\":\");"}, {"sha": "b8706b890de5833931ae001ed226eb0c498012e9", "filename": "src/net/server/handlers/login/ViewAllPicRegisterHandler.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/ViewAllPicRegisterHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/net/server/handlers/login/ViewAllPicRegisterHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/ViewAllPicRegisterHandler.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -28,9 +28,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         slea.readMapleAsciiString();\n         String pic = slea.readMapleAsciiString();\n         c.setPic(pic);\n-        if (c.getIdleTask() != null) {\n-            c.getIdleTask().cancel(true);\n-        }\n+        Server.getInstance().unregisterLoginState(c);\n         c.updateLoginState(MapleClient.LOGIN_SERVER_TRANSITION);\n         String[] socket = Server.getInstance().getIP(c.getWorld(), channel).split(\":\");\n         try {"}, {"sha": "c7e78eecd4f3fc05fc4098a5bf3c23b80965f4c4", "filename": "src/server/MapleItemInformationProvider.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/server/MapleItemInformationProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/server/MapleItemInformationProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleItemInformationProvider.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -1508,7 +1508,7 @@ public boolean canWearEquipment(MapleCharacter chr, Equip equip, int dst) {\n         Connection con = null;\n         try {\n             con = DatabaseConnection.getConnection();\n-            PreparedStatement ps = con.prepareStatement(\"SELECT * FROM drop_data WHERE itemid = ? LIMIT 50\");\n+            PreparedStatement ps = con.prepareStatement(\"SELECT dropperid FROM drop_data WHERE itemid = ? LIMIT 50\");\n             ps.setInt(1, itemId);\n             ResultSet rs = ps.executeQuery();\n             while(rs.next()) {"}, {"sha": "7975da95919215d254b5ff0d6deee89a7b45461a", "filename": "src/server/MapleShop.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/server/MapleShop.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/server/MapleShop.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleShop.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -236,7 +236,7 @@ public static MapleShop createFromDB(int id, boolean isShopId) {\n                 con.close();\n                 return null;\n             }\n-            ps = con.prepareStatement(\"SELECT * FROM shopitems WHERE shopid = ? ORDER BY position DESC\");\n+            ps = con.prepareStatement(\"SELECT itemid, price, pitch FROM shopitems WHERE shopid = ? ORDER BY position DESC\");\n             ps.setInt(1, shopId);\n             rs = ps.executeQuery();\n             List<Integer> recharges = new ArrayList<>(rechargeableItems);"}, {"sha": "5f9a8876f4874c84a8063e28eaf0b4a1545885d2", "filename": "src/server/life/MapleMonsterInformationProvider.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/server/life/MapleMonsterInformationProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/server/life/MapleMonsterInformationProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleMonsterInformationProvider.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -111,7 +111,7 @@ private void retrieveGlobal() {\n                 Connection con = null;\n \t\ttry {\n                         con = DatabaseConnection.getConnection();\n-\t\t\tps = con.prepareStatement(\"SELECT * FROM drop_data WHERE dropperid = ?\");\n+\t\t\tps = con.prepareStatement(\"SELECT itemid, chance, minimum_quantity, maximum_quantity, questid FROM drop_data WHERE dropperid = ?\");\n \t\t\tps.setInt(1, monsterId);\n \t\t\trs = ps.executeQuery();\n "}, {"sha": "15d6b947b113269daa837a5529b60e63f28305c1", "filename": "src/server/maps/MapleMap.java", "status": "modified", "additions": 42, "deletions": 21, "changes": 63, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/server/maps/MapleMap.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/server/maps/MapleMap.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMap.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -98,6 +98,7 @@\n     private Map<Integer, MaplePortal> portals = new HashMap<>();\n     private Map<Integer, Integer> backgroundTypes = new HashMap<>();\n     private Map<String, Integer> environment = new LinkedHashMap<>();\n+    private Map<MapleMapItem, Long> droppedItems = new LinkedHashMap<>();\n     private LinkedList<WeakReference<MapleMapObject>> registeredDrops = new LinkedList<>();\n     private List<Rectangle> areas = new ArrayList<>();\n     private MapleFootholdTree footholds = null;\n@@ -130,6 +131,7 @@\n     private int mobCapacity = -1;\n     private ScheduledFuture<?> mapMonitor = null;\n     private ScheduledFuture<?> itemMonitor = null;\n+    private ScheduledFuture<?> expireItemsTask = null;\n     private short itemMonitorTimeout;\n     private Pair<Integer, String> timeMob = null;\n     private short mobInterval = 5000;\n@@ -368,7 +370,6 @@ private void spawnAndAddRangedMapObject(MapleMapObject mapobject, DelayedPacketC\n     \n     private void spawnRangedMapObject(MapleMapObject mapobject, DelayedPacketCreation packetbakery, SpawnCondition condition) {\n         chrRLock.lock();\n-        \n         try {\n             int curOID = getUsableOID();\n             mapobject.setObjectId(curOID);\n@@ -585,6 +586,9 @@ private void stopItemMonitor() {\n         try {\n             itemMonitor.cancel(false);\n             itemMonitor = null;\n+            \n+            expireItemsTask.cancel(false);\n+            expireItemsTask = null;\n         } finally {\n             chrWLock.unlock();\n         }\n@@ -621,6 +625,13 @@ public void run() {\n                     if(!registeredDrops.isEmpty()) cleanItemMonitor();\n                 }\n             }, ServerConstants.ITEM_MONITOR_TIME, ServerConstants.ITEM_MONITOR_TIME);\n+            \n+            expireItemsTask = TimerManager.getInstance().register(new Runnable() {\n+                @Override\n+                public void run() {\n+                    makeDisappearExpiredItemDrops();\n+                }\n+            }, ServerConstants.ITEM_EXPIRE_CHECK, ServerConstants.ITEM_EXPIRE_CHECK);\n                     \n             itemMonitorTimeout = 1;\n         } finally {\n@@ -637,7 +648,7 @@ private boolean hasItemMonitor() {\n         }\n     }\n     \n-    private void registerItemDrop(MapleMapItem mdrop) {\n+    private void instantiateItemDrop(MapleMapItem mdrop) {\n         if(droppedItemCount.get() >= ServerConstants.ITEM_LIMIT_ON_MAP) {\n             MapleMapObject mapobj;\n             \n@@ -654,10 +665,9 @@ private void registerItemDrop(MapleMapItem mdrop) {\n             makeDisappearItemFromMap(mapobj);\n         }\n         \n-        if(!everlast) TimerManager.getInstance().schedule(new ExpireMapItemJob(mdrop), ServerConstants.ITEM_EXPIRE_TIME);\n-        \n         objectWLock.lock();\n         try {\n+            if(!everlast) registerItemDrop(mdrop);\n             registeredDrops.add(new WeakReference<>((MapleMapObject) mdrop));\n         } finally {\n             objectWLock.unlock();\n@@ -666,6 +676,31 @@ private void registerItemDrop(MapleMapItem mdrop) {\n         droppedItemCount.incrementAndGet();\n     }\n     \n+    private void registerItemDrop(MapleMapItem mdrop) {\n+        droppedItems.put(mdrop, System.currentTimeMillis() + ServerConstants.ITEM_EXPIRE_TIME);\n+    }\n+    \n+    private void makeDisappearExpiredItemDrops() {\n+        objectWLock.lock();\n+        try {\n+            List<MapleMapItem> toDisappear = new LinkedList<>();\n+            long timeNow = System.currentTimeMillis();\n+            \n+            for(Entry<MapleMapItem, Long> it : droppedItems.entrySet()) {\n+                if(it.getValue() < timeNow) {\n+                    toDisappear.add(it.getKey());\n+                }\n+            }\n+            \n+            for(MapleMapItem mmi : toDisappear) {\n+                makeDisappearItemFromMap(mmi);\n+                droppedItems.remove(mmi);\n+            }\n+        } finally {\n+            objectWLock.unlock();\n+        }\n+    }\n+    \n     public void pickItemDrop(byte[] pickupPacket, MapleMapItem mdrop) {\n         broadcastMessage(pickupPacket, mdrop.getPosition());\n         \n@@ -686,7 +721,7 @@ public void sendPackets(MapleClient c) {\n             }\n         }, null);\n \n-        registerItemDrop(mdrop);\n+        instantiateItemDrop(mdrop);\n         activateItemReactors(mdrop, chr.getClient());\n     }\n \n@@ -702,7 +737,7 @@ public void sendPackets(MapleClient c) {\n             }\n         }, null);\n \n-        registerItemDrop(mdrop);\n+        instantiateItemDrop(mdrop);\n     }\n \n     public final void disappearingItemDrop(final MapleMapObject dropper, final MapleCharacter owner, final Item item, final Point pos) {\n@@ -1719,7 +1754,7 @@ public void sendPackets(MapleClient c) {\n         }, null);\n         broadcastMessage(MaplePacketCreator.dropItemFromMapObject(mdrop, dropper.getPosition(), droppos, (byte) 0));\n \n-        registerItemDrop(mdrop);\n+        instantiateItemDrop(mdrop);\n         activateItemReactors(mdrop, owner.getClient());\n     }\n     \n@@ -2694,20 +2729,6 @@ public void makeDisappearItemFromMap(MapleMapItem mapitem) {\n         }\n     }\n \n-    private class ExpireMapItemJob implements Runnable {\n-\n-        private MapleMapItem mapitem;\n-\n-        public ExpireMapItemJob(MapleMapItem mapitem) {\n-            this.mapitem = mapitem;\n-        }\n-\n-        @Override\n-        public void run() {\n-            makeDisappearItemFromMap(mapitem);\n-        }\n-    }\n-\n     private class ActivateItemReactor implements Runnable {\n \n         private MapleMapItem mapitem;"}, {"sha": "556794dca99c2a88d900b3fe335cf22fd4a1cd4e", "filename": "src/server/maps/MapleMapFactory.java", "status": "modified", "additions": 205, "deletions": 193, "changes": 398, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/server/maps/MapleMapFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/server/maps/MapleMapFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMapFactory.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -69,8 +69,18 @@ public MapleMapFactory(EventInstanceManager eim, MapleDataProvider source, Maple\n         this.mapsWLock = rrwl.writeLock();\n     }\n     \n-    public MapleMap getMap(int mapid) {\n-        Integer omapid = Integer.valueOf(mapid);\n+    public MapleMap resetMap(int mapid) {\n+        mapsWLock.lock();\n+        try {\n+            maps.remove(Integer.valueOf(mapid));\n+        } finally {\n+            mapsWLock.unlock();\n+        }\n+        \n+        return getMap(mapid);\n+    }\n+    \n+    private synchronized MapleMap loadMapFromWz(int mapid, Integer omapid) {\n         MapleMap map;\n         \n         mapsRLock.lock();\n@@ -79,213 +89,215 @@ public MapleMap getMap(int mapid) {\n         } finally {\n             mapsRLock.unlock();\n         }\n+\n+        if (map != null) {\n+            return map;\n+        }\n         \n-        if (map == null) {\n-            synchronized (this) {\n-                mapsRLock.lock();\n-                try {\n-                    map = maps.get(omapid);\n-                } finally {\n-                    mapsRLock.unlock();\n-                }\n-                \n-                if (map != null) {\n-                    return map;\n-                }\n-                String mapName = getMapName(mapid);\n-                MapleData mapData = source.getData(mapName);\n-                MapleData infoData = mapData.getChildByPath(\"info\");\n-                \n-                String link = MapleDataTool.getString(infoData.getChildByPath(\"link\"), \"\");\n-                if (!link.equals(\"\")) { //nexon made hundreds of dojo maps so to reduce the size they added links.\n-                    mapName = getMapName(Integer.parseInt(link));\n-                    mapData = source.getData(mapName);\n-                }\n-                float monsterRate = 0;\n-                MapleData mobRate = infoData.getChildByPath(\"mobRate\");\n-                if (mobRate != null) {\n-                    monsterRate = ((Float) mobRate.getData()).floatValue();\n-                }\n-                map = new MapleMap(mapid, world, channel, MapleDataTool.getInt(\"returnMap\", infoData), monsterRate);\n-                map.setEventInstance(event);\n-                \n-                String onFirstEnter = MapleDataTool.getString(infoData.getChildByPath(\"onFirstUserEnter\"), String.valueOf(mapid));\n-                map.setOnFirstUserEnter(onFirstEnter.equals(\"\") ? String.valueOf(mapid) : onFirstEnter);\n-                \n-                String onEnter = MapleDataTool.getString(infoData.getChildByPath(\"onUserEnter\"), String.valueOf(mapid));\n-                map.setOnUserEnter(onEnter.equals(\"\") ? String.valueOf(mapid) : onEnter);\n-                \n-                map.setFieldLimit(MapleDataTool.getInt(infoData.getChildByPath(\"fieldLimit\"), 0));\n-                map.setMobInterval((short) MapleDataTool.getInt(infoData.getChildByPath(\"createMobInterval\"), 5000));\n-                PortalFactory portalFactory = new PortalFactory();\n-                for (MapleData portal : mapData.getChildByPath(\"portal\")) {\n-                    map.addPortal(portalFactory.makePortal(MapleDataTool.getInt(portal.getChildByPath(\"pt\")), portal));\n-                }\n-                MapleData timeMob = infoData.getChildByPath(\"timeMob\");\n-                if (timeMob != null) {\n-                    map.timeMob(MapleDataTool.getInt(timeMob.getChildByPath(\"id\")),\n-                            MapleDataTool.getString(timeMob.getChildByPath(\"message\")));\n-                }\n+        String mapName = getMapName(mapid);\n+        MapleData mapData = source.getData(mapName);\n+        MapleData infoData = mapData.getChildByPath(\"info\");\n \n-                int bounds[] = new int[4];\n-                bounds[0] = MapleDataTool.getInt(infoData.getChildByPath(\"VRTop\"));\n-                bounds[1] = MapleDataTool.getInt(infoData.getChildByPath(\"VRBottom\"));\n-                \n-                if(bounds[0] == bounds[1]) {    // old-style baked map\n-                    MapleData minimapData = mapData.getChildByPath(\"miniMap\");\n-                    if(minimapData != null) {\n-                        bounds[0] = MapleDataTool.getInt(minimapData.getChildByPath(\"centerX\")) * -1;\n-                        bounds[1] = MapleDataTool.getInt(minimapData.getChildByPath(\"centerY\")) * -1;\n-                        bounds[2] = MapleDataTool.getInt(minimapData.getChildByPath(\"height\"));\n-                        bounds[3] = MapleDataTool.getInt(minimapData.getChildByPath(\"width\"));\n-\n-                        map.setMapPointBoundings(bounds[0], bounds[1], bounds[2], bounds[3]);\n-                    }\n-                } else {\n-                    bounds[2] = MapleDataTool.getInt(infoData.getChildByPath(\"VRLeft\"));\n-                    bounds[3] = MapleDataTool.getInt(infoData.getChildByPath(\"VRRight\"));\n-                    \n-                    map.setMapLineBoundings(bounds[0], bounds[1], bounds[2], bounds[3]);\n-                }\n-                \n-                List<MapleFoothold> allFootholds = new LinkedList<>();\n-                Point lBound = new Point();\n-                Point uBound = new Point();\n-                for (MapleData footRoot : mapData.getChildByPath(\"foothold\")) {\n-                    for (MapleData footCat : footRoot) {\n-                        for (MapleData footHold : footCat) {\n-                            int x1 = MapleDataTool.getInt(footHold.getChildByPath(\"x1\"));\n-                            int y1 = MapleDataTool.getInt(footHold.getChildByPath(\"y1\"));\n-                            int x2 = MapleDataTool.getInt(footHold.getChildByPath(\"x2\"));\n-                            int y2 = MapleDataTool.getInt(footHold.getChildByPath(\"y2\"));\n-                            MapleFoothold fh = new MapleFoothold(new Point(x1, y1), new Point(x2, y2), Integer.parseInt(footHold.getName()));\n-                            fh.setPrev(MapleDataTool.getInt(footHold.getChildByPath(\"prev\")));\n-                            fh.setNext(MapleDataTool.getInt(footHold.getChildByPath(\"next\")));\n-                            if (fh.getX1() < lBound.x) {\n-                                lBound.x = fh.getX1();\n-                            }\n-                            if (fh.getX2() > uBound.x) {\n-                                uBound.x = fh.getX2();\n-                            }\n-                            if (fh.getY1() < lBound.y) {\n-                                lBound.y = fh.getY1();\n-                            }\n-                            if (fh.getY2() > uBound.y) {\n-                                uBound.y = fh.getY2();\n-                            }\n-                            allFootholds.add(fh);\n-                        }\n-                    }\n-                }\n-                MapleFootholdTree fTree = new MapleFootholdTree(lBound, uBound);\n-                for (MapleFoothold fh : allFootholds) {\n-                    fTree.insert(fh);\n-                }\n-                map.setFootholds(fTree);\n-                if (mapData.getChildByPath(\"area\") != null) {\n-                    for (MapleData area : mapData.getChildByPath(\"area\")) {\n-                        int x1 = MapleDataTool.getInt(area.getChildByPath(\"x1\"));\n-                        int y1 = MapleDataTool.getInt(area.getChildByPath(\"y1\"));\n-                        int x2 = MapleDataTool.getInt(area.getChildByPath(\"x2\"));\n-                        int y2 = MapleDataTool.getInt(area.getChildByPath(\"y2\"));\n-                        map.addMapleArea(new Rectangle(x1, y1, (x2 - x1), (y2 - y1)));\n+        String link = MapleDataTool.getString(infoData.getChildByPath(\"link\"), \"\");\n+        if (!link.equals(\"\")) { //nexon made hundreds of dojo maps so to reduce the size they added links.\n+            mapName = getMapName(Integer.parseInt(link));\n+            mapData = source.getData(mapName);\n+        }\n+        float monsterRate = 0;\n+        MapleData mobRate = infoData.getChildByPath(\"mobRate\");\n+        if (mobRate != null) {\n+            monsterRate = ((Float) mobRate.getData()).floatValue();\n+        }\n+        map = new MapleMap(mapid, world, channel, MapleDataTool.getInt(\"returnMap\", infoData), monsterRate);\n+        map.setEventInstance(event);\n+\n+        String onFirstEnter = MapleDataTool.getString(infoData.getChildByPath(\"onFirstUserEnter\"), String.valueOf(mapid));\n+        map.setOnFirstUserEnter(onFirstEnter.equals(\"\") ? String.valueOf(mapid) : onFirstEnter);\n+\n+        String onEnter = MapleDataTool.getString(infoData.getChildByPath(\"onUserEnter\"), String.valueOf(mapid));\n+        map.setOnUserEnter(onEnter.equals(\"\") ? String.valueOf(mapid) : onEnter);\n+\n+        map.setFieldLimit(MapleDataTool.getInt(infoData.getChildByPath(\"fieldLimit\"), 0));\n+        map.setMobInterval((short) MapleDataTool.getInt(infoData.getChildByPath(\"createMobInterval\"), 5000));\n+        PortalFactory portalFactory = new PortalFactory();\n+        for (MapleData portal : mapData.getChildByPath(\"portal\")) {\n+            map.addPortal(portalFactory.makePortal(MapleDataTool.getInt(portal.getChildByPath(\"pt\")), portal));\n+        }\n+        MapleData timeMob = infoData.getChildByPath(\"timeMob\");\n+        if (timeMob != null) {\n+            map.timeMob(MapleDataTool.getInt(timeMob.getChildByPath(\"id\")),\n+                    MapleDataTool.getString(timeMob.getChildByPath(\"message\")));\n+        }\n+\n+        int bounds[] = new int[4];\n+        bounds[0] = MapleDataTool.getInt(infoData.getChildByPath(\"VRTop\"));\n+        bounds[1] = MapleDataTool.getInt(infoData.getChildByPath(\"VRBottom\"));\n+\n+        if(bounds[0] == bounds[1]) {    // old-style baked map\n+            MapleData minimapData = mapData.getChildByPath(\"miniMap\");\n+            if(minimapData != null) {\n+                bounds[0] = MapleDataTool.getInt(minimapData.getChildByPath(\"centerX\")) * -1;\n+                bounds[1] = MapleDataTool.getInt(minimapData.getChildByPath(\"centerY\")) * -1;\n+                bounds[2] = MapleDataTool.getInt(minimapData.getChildByPath(\"height\"));\n+                bounds[3] = MapleDataTool.getInt(minimapData.getChildByPath(\"width\"));\n+\n+                map.setMapPointBoundings(bounds[0], bounds[1], bounds[2], bounds[3]);\n+            }\n+        } else {\n+            bounds[2] = MapleDataTool.getInt(infoData.getChildByPath(\"VRLeft\"));\n+            bounds[3] = MapleDataTool.getInt(infoData.getChildByPath(\"VRRight\"));\n+\n+            map.setMapLineBoundings(bounds[0], bounds[1], bounds[2], bounds[3]);\n+        }\n+\n+        List<MapleFoothold> allFootholds = new LinkedList<>();\n+        Point lBound = new Point();\n+        Point uBound = new Point();\n+        for (MapleData footRoot : mapData.getChildByPath(\"foothold\")) {\n+            for (MapleData footCat : footRoot) {\n+                for (MapleData footHold : footCat) {\n+                    int x1 = MapleDataTool.getInt(footHold.getChildByPath(\"x1\"));\n+                    int y1 = MapleDataTool.getInt(footHold.getChildByPath(\"y1\"));\n+                    int x2 = MapleDataTool.getInt(footHold.getChildByPath(\"x2\"));\n+                    int y2 = MapleDataTool.getInt(footHold.getChildByPath(\"y2\"));\n+                    MapleFoothold fh = new MapleFoothold(new Point(x1, y1), new Point(x2, y2), Integer.parseInt(footHold.getName()));\n+                    fh.setPrev(MapleDataTool.getInt(footHold.getChildByPath(\"prev\")));\n+                    fh.setNext(MapleDataTool.getInt(footHold.getChildByPath(\"next\")));\n+                    if (fh.getX1() < lBound.x) {\n+                        lBound.x = fh.getX1();\n                     }\n-                }\n-                try {\n-                    Connection con = DatabaseConnection.getConnection();\n-                    try (PreparedStatement ps = con.prepareStatement(\"SELECT * FROM playernpcs WHERE map = ?\")) {\n-                        ps.setInt(1, omapid);\n-                        try (ResultSet rs = ps.executeQuery()) {\n-                            while (rs.next()) {\n-                                map.addMapObject(new PlayerNPCs(rs));\n-                            }\n-                        }\n+                    if (fh.getX2() > uBound.x) {\n+                        uBound.x = fh.getX2();\n                     }\n-                    \n-                    con.close();\n-                } catch (SQLException e) {\n-                    e.printStackTrace();\n-                }\n-                \n-                for (MapleData life : mapData.getChildByPath(\"life\")) {\n-                    String id = MapleDataTool.getString(life.getChildByPath(\"id\"));\n-                    String type = MapleDataTool.getString(life.getChildByPath(\"type\"));\n-                    if (id.equals(\"9001105\")) {\n-                        id = \"9001108\";//soz\n+                    if (fh.getY1() < lBound.y) {\n+                        lBound.y = fh.getY1();\n                     }\n-                    AbstractLoadedMapleLife myLife = loadLife(life, id, type);\n-                    if (myLife instanceof MapleMonster) {\n-                        MapleMonster monster = (MapleMonster) myLife;\n-                        int mobTime = MapleDataTool.getInt(\"mobTime\", life, 0);\n-                        int team = MapleDataTool.getInt(\"team\", life, -1);\n-                        if (mobTime == -1) { //does not respawn, force spawn once\n-                            map.spawnMonster(monster);\n-                        } else {\n-                            map.addMonsterSpawn(monster, mobTime, team);\n-                        }\n-                        \n-                        //should the map be reseted, use allMonsterSpawn list of monsters to spawn them again\n-                        map.addAllMonsterSpawn(monster, mobTime, team);\n-                    } else {\n-                        map.addMapObject(myLife);\n+                    if (fh.getY2() > uBound.y) {\n+                        uBound.y = fh.getY2();\n                     }\n+                    allFootholds.add(fh);\n                 }\n-                \n-                if (mapData.getChildByPath(\"reactor\") != null) {\n-                    for (MapleData reactor : mapData.getChildByPath(\"reactor\")) {\n-                        String id = MapleDataTool.getString(reactor.getChildByPath(\"id\"));\n-                        if (id != null) {\n-                            MapleReactor newReactor = loadReactor(reactor, id);\n-                            map.spawnReactor(newReactor);\n-                        }\n+            }\n+        }\n+        MapleFootholdTree fTree = new MapleFootholdTree(lBound, uBound);\n+        for (MapleFoothold fh : allFootholds) {\n+            fTree.insert(fh);\n+        }\n+        map.setFootholds(fTree);\n+        if (mapData.getChildByPath(\"area\") != null) {\n+            for (MapleData area : mapData.getChildByPath(\"area\")) {\n+                int x1 = MapleDataTool.getInt(area.getChildByPath(\"x1\"));\n+                int y1 = MapleDataTool.getInt(area.getChildByPath(\"y1\"));\n+                int x2 = MapleDataTool.getInt(area.getChildByPath(\"x2\"));\n+                int y2 = MapleDataTool.getInt(area.getChildByPath(\"y2\"));\n+                map.addMapleArea(new Rectangle(x1, y1, (x2 - x1), (y2 - y1)));\n+            }\n+        }\n+        try {\n+            Connection con = DatabaseConnection.getConnection();\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT * FROM playernpcs WHERE map = ?\")) {\n+                ps.setInt(1, omapid);\n+                try (ResultSet rs = ps.executeQuery()) {\n+                    while (rs.next()) {\n+                        map.addMapObject(new PlayerNPCs(rs));\n                     }\n                 }\n-                try {\n-                    map.setMapName(MapleDataTool.getString(\"mapName\", nameData.getChildByPath(getMapStringName(omapid)), \"\"));\n-                    map.setStreetName(MapleDataTool.getString(\"streetName\", nameData.getChildByPath(getMapStringName(omapid)), \"\"));\n-                } catch (Exception e) {\n-                    e.printStackTrace();\n-                    System.err.println(\"Not found mapid \" + omapid);\n-                    \n-                    map.setMapName(\"\");\n-                    map.setStreetName(\"\");\n-                }\n+            }\n \n-                map.setClock(mapData.getChildByPath(\"clock\") != null);\n-                map.setEverlast(infoData.getChildByPath(\"everlast\") != null);\n-                map.setTown(infoData.getChildByPath(\"town\") != null);\n-                map.setHPDec(MapleDataTool.getIntConvert(\"decHP\", infoData, 0));\n-                map.setHPDecProtect(MapleDataTool.getIntConvert(\"protectItem\", infoData, 0));\n-                map.setForcedReturnMap(MapleDataTool.getInt(infoData.getChildByPath(\"forcedReturn\"), 999999999));\n-                map.setBoat(mapData.getChildByPath(\"shipObj\") != null);\n-                map.setTimeLimit(MapleDataTool.getIntConvert(\"timeLimit\", infoData, -1));\n-                map.setFieldType(MapleDataTool.getIntConvert(\"fieldType\", infoData, 0));\n-                map.setMobCapacity(MapleDataTool.getIntConvert(\"fixedMobCapacity\", infoData, 500));//Is there a map that contains more than 500 mobs?\n-                \n-                HashMap<Integer, Integer> backTypes = new HashMap<>();\n-                try {\n-                    for (MapleData layer : mapData.getChildByPath(\"back\")) { // yolo\n-                        int layerNum = Integer.parseInt(layer.getName());\n-                        int type = MapleDataTool.getInt(layer.getChildByPath(\"type\"), 0);\n-                        \n-                        backTypes.put(layerNum, type);\n-                    }\n-                } catch (Exception e) {\n-                    e.printStackTrace();\n-                    // swallow cause I'm cool\n+            con.close();\n+        } catch (SQLException e) {\n+            e.printStackTrace();\n+        }\n+\n+        for (MapleData life : mapData.getChildByPath(\"life\")) {\n+            String id = MapleDataTool.getString(life.getChildByPath(\"id\"));\n+            String type = MapleDataTool.getString(life.getChildByPath(\"type\"));\n+            AbstractLoadedMapleLife myLife = loadLife(life, id, type);\n+            if (myLife instanceof MapleMonster) {\n+                MapleMonster monster = (MapleMonster) myLife;\n+                int mobTime = MapleDataTool.getInt(\"mobTime\", life, 0);\n+                int team = MapleDataTool.getInt(\"team\", life, -1);\n+                if (mobTime == -1) { //does not respawn, force spawn once\n+                    map.spawnMonster(monster);\n+                } else {\n+                    map.addMonsterSpawn(monster, mobTime, team);\n                 }\n-                map.setBackgroundTypes(backTypes);\n-                \n-                mapsWLock.lock();\n-                try {\n-                    maps.put(omapid, map);\n-                } finally {\n-                    mapsWLock.unlock();\n+\n+                //should the map be reseted, use allMonsterSpawn list of monsters to spawn them again\n+                map.addAllMonsterSpawn(monster, mobTime, team);\n+            } else {\n+                map.addMapObject(myLife);\n+            }\n+        }\n+\n+        if (mapData.getChildByPath(\"reactor\") != null) {\n+            for (MapleData reactor : mapData.getChildByPath(\"reactor\")) {\n+                String id = MapleDataTool.getString(reactor.getChildByPath(\"id\"));\n+                if (id != null) {\n+                    MapleReactor newReactor = loadReactor(reactor, id);\n+                    map.spawnReactor(newReactor);\n                 }\n             }\n         }\n+        try {\n+            map.setMapName(MapleDataTool.getString(\"mapName\", nameData.getChildByPath(getMapStringName(omapid)), \"\"));\n+            map.setStreetName(MapleDataTool.getString(\"streetName\", nameData.getChildByPath(getMapStringName(omapid)), \"\"));\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            System.err.println(\"Not found mapid \" + omapid);\n+\n+            map.setMapName(\"\");\n+            map.setStreetName(\"\");\n+        }\n+\n+        map.setClock(mapData.getChildByPath(\"clock\") != null);\n+        map.setEverlast(infoData.getChildByPath(\"everlast\") != null);\n+        map.setTown(infoData.getChildByPath(\"town\") != null);\n+        map.setHPDec(MapleDataTool.getIntConvert(\"decHP\", infoData, 0));\n+        map.setHPDecProtect(MapleDataTool.getIntConvert(\"protectItem\", infoData, 0));\n+        map.setForcedReturnMap(MapleDataTool.getInt(infoData.getChildByPath(\"forcedReturn\"), 999999999));\n+        map.setBoat(mapData.getChildByPath(\"shipObj\") != null);\n+        map.setTimeLimit(MapleDataTool.getIntConvert(\"timeLimit\", infoData, -1));\n+        map.setFieldType(MapleDataTool.getIntConvert(\"fieldType\", infoData, 0));\n+        map.setMobCapacity(MapleDataTool.getIntConvert(\"fixedMobCapacity\", infoData, 500));//Is there a map that contains more than 500 mobs?\n+\n+        HashMap<Integer, Integer> backTypes = new HashMap<>();\n+        try {\n+            for (MapleData layer : mapData.getChildByPath(\"back\")) { // yolo\n+                int layerNum = Integer.parseInt(layer.getName());\n+                int type = MapleDataTool.getInt(layer.getChildByPath(\"type\"), 0);\n+\n+                backTypes.put(layerNum, type);\n+            }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            // swallow cause I'm cool\n+        }\n+        map.setBackgroundTypes(backTypes);\n+\n+        mapsWLock.lock();\n+        try {\n+            maps.put(omapid, map);\n+        } finally {\n+            mapsWLock.unlock();\n+        }\n+        \n         return map;\n     }\n+    \n+    public MapleMap getMap(int mapid) {\n+        Integer omapid = Integer.valueOf(mapid);\n+        MapleMap map;\n+        \n+        mapsRLock.lock();\n+        try {\n+            map = maps.get(omapid);\n+        } finally {\n+            mapsRLock.unlock();\n+        }\n+        \n+        return (map != null) ? map : loadMapFromWz(mapid, omapid);\n+    }\n \n     public boolean isMapLoaded(int mapId) {\n         mapsRLock.lock();"}, {"sha": "a9403b13806bafa66431e5b64d2f5c361d0e15a3", "filename": "src/tools/DatabaseConnection.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/tools/DatabaseConnection.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/tools/DatabaseConnection.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/DatabaseConnection.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -26,16 +26,16 @@ public static Connection getConnection() throws SQLException {\n         }\n         \n         int denies = 0;\n-        while(true) {   // There is no way it can pass with a null out of here\n+        while(true) {   // There is no way it can pass with a null out of here?\n             try {\n                 return DriverManager.getConnection(ServerConstants.DB_URL, ServerConstants.DB_USER, ServerConstants.DB_PASS);\n             } catch (SQLException sqle) {\n                 denies++;\n                 \n                 if(denies == 3) {\n-                    // Give up, return null :3\n-                    FilePrinter.printError(FilePrinter.SQL_EXCEPTION, \"SQL Driver refused to give a connection after \" + denies + \" tries.\");\n-                    return null;\n+                    // Give up, throw exception. Nothing good will come from this.\n+                    FilePrinter.printError(FilePrinter.SQL_EXCEPTION, \"SQL Driver refused to give a connection after \" + denies + \" tries. Problem: \" + sqle.getMessage());\n+                    throw sqle;\n                 }\n             }\n         }"}, {"sha": "4d1ba1d2881fe0934bba418c313e9ed8fbe132a2", "filename": "src/tools/MaplePacketCreator.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/tools/MaplePacketCreator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/c46ff8292965354f33105fa17511dbf7af3cfc7b/src/tools/MaplePacketCreator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MaplePacketCreator.java?ref=c46ff8292965354f33105fa17511dbf7af3cfc7b", "patch": "@@ -313,6 +313,13 @@ private static void addCharEquips(final MaplePacketLittleEndianWriter mplew, Map\n                         }\n                 }\n         }\n+        \n+        public static byte[] setExtraPendantSlot(boolean toggleExtraSlot) {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.SET_EXTRA_PENDANT_SLOT.getValue());\n+                mplew.writeBool(toggleExtraSlot);\n+                return mplew.getPacket();\n+        }\n \n         private static void addCharEntry(final MaplePacketLittleEndianWriter mplew, MapleCharacter chr, boolean viewall) {\n                 addCharStats(mplew, chr);"}]}]},
