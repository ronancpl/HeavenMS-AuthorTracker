{"fetchDate": "2019-12-19", "content": [{"sha": "2295317a84f31673361b72ba1003cc60f5c1cc51", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6MjI5NTMxN2E4NGYzMTY3MzM2MWI3MmJhMTAwM2NjNjBmNWMxY2M1MQ==", "commit": {"author": {"name": "kolakcc", "email": "kolakcc@gmail.com", "date": "2019-08-14T23:47:00Z"}, "committer": {"name": "Ronan Lana", "email": "rcpl2010@gmail.com", "date": "2019-08-14T23:47:00Z"}, "message": "Script engine refactor preparation (#492)\n\n* Fix Invocable casting, remove useless script engine cache\r\n\r\n* Remove useless script retry\r\n\r\n* Remove null reference in EventManager", "tree": {"sha": "8519dfaf92670366d29da1fa1826abb058e12b50", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/8519dfaf92670366d29da1fa1826abb058e12b50"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/2295317a84f31673361b72ba1003cc60f5c1cc51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/2295317a84f31673361b72ba1003cc60f5c1cc51", "html_url": "https://github.com/ronancpl/HeavenMS/commit/2295317a84f31673361b72ba1003cc60f5c1cc51", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/2295317a84f31673361b72ba1003cc60f5c1cc51/comments", "author": {"login": "kolakcc", "id": 22007894, "node_id": "MDQ6VXNlcjIyMDA3ODk0", "avatar_url": "https://avatars0.githubusercontent.com/u/22007894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kolakcc", "html_url": "https://github.com/kolakcc", "followers_url": "https://api.github.com/users/kolakcc/followers", "following_url": "https://api.github.com/users/kolakcc/following{/other_user}", "gists_url": "https://api.github.com/users/kolakcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/kolakcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kolakcc/subscriptions", "organizations_url": "https://api.github.com/users/kolakcc/orgs", "repos_url": "https://api.github.com/users/kolakcc/repos", "events_url": "https://api.github.com/users/kolakcc/events{/privacy}", "received_events_url": "https://api.github.com/users/kolakcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "993398180e8bf56f9cd9791d55ef4295c3979b04", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/993398180e8bf56f9cd9791d55ef4295c3979b04", "html_url": "https://github.com/ronancpl/HeavenMS/commit/993398180e8bf56f9cd9791d55ef4295c3979b04"}], "stats": {"total": 126, "additions": 62, "deletions": 64}, "files": [{"sha": "77e84e3397131168158a270b1539450d28f116e1", "filename": "src/client/MapleClient.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/2295317a84f31673361b72ba1003cc60f5c1cc51/src/client/MapleClient.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/2295317a84f31673361b72ba1003cc60f5c1cc51/src/client/MapleClient.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleClient.java?ref=2295317a84f31673361b72ba1003cc60f5c1cc51", "patch": "@@ -44,6 +44,7 @@\n import java.util.concurrent.Semaphore;\n import java.util.concurrent.locks.Lock;\n \n+import jdk.nashorn.api.scripting.NashornScriptEngine;\n import tools.*;\n \n import javax.script.ScriptEngine;\n@@ -106,7 +107,7 @@\n \tprivate long lastPong;\n \tprivate int gmlevel;\n \tprivate Set<String> macs = new HashSet<>();\n-\tprivate Map<String, ScriptEngine> engines = new HashMap<>();\n+\tprivate Map<String, NashornScriptEngine> engines = new HashMap<>();\n \tprivate byte characterSlots = 3;\n \tprivate byte loginattempt = 0;\n \tprivate String pin = \"\";\n@@ -1174,11 +1175,11 @@ public void setGMLevel(int level) {\n \t\tgmlevel = level;\n \t}\n \n-\tpublic void setScriptEngine(String name, ScriptEngine e) {\n+\tpublic void setScriptEngine(String name, NashornScriptEngine e) {\n                 engines.put(name, e);\n \t}\n \n-\tpublic ScriptEngine getScriptEngine(String name) {\n+\tpublic NashornScriptEngine getScriptEngine(String name) {\n \t\treturn engines.get(name);\n \t}\n "}, {"sha": "1fdf81c3e41febbf125e4919839e1db63728c8d3", "filename": "src/scripting/AbstractScriptManager.java", "status": "modified", "additions": 29, "deletions": 33, "changes": 62, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/2295317a84f31673361b72ba1003cc60f5c1cc51/src/scripting/AbstractScriptManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/2295317a84f31673361b72ba1003cc60f5c1cc51/src/scripting/AbstractScriptManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/AbstractScriptManager.java?ref=2295317a84f31673361b72ba1003cc60f5c1cc51", "patch": "@@ -27,58 +27,54 @@\n import java.io.FileReader;\n import java.io.IOException;\n \n-import javax.script.Invocable;\n-import javax.script.ScriptEngine;\n-import javax.script.ScriptEngineManager;\n-import javax.script.ScriptException;\n+import javax.script.*;\n \n import constants.ServerConstants;\n+import jdk.nashorn.api.scripting.NashornScriptEngine;\n+import jdk.nashorn.api.scripting.NashornScriptEngineFactory;\n import tools.FilePrinter;\n \n /**\n  *\n  * @author Matze\n  */\n public abstract class AbstractScriptManager {\n-\n-    protected ScriptEngine engine;\n-    private ScriptEngineManager sem;\n+    private ScriptEngineFactory sef;\n \n     protected AbstractScriptManager() {\n-        sem = new ScriptEngineManager();\n+        sef = new ScriptEngineManager().getEngineByName(\"javascript\").getFactory();\n     }\n \n-    protected Invocable getInvocable(String path, MapleClient c) {\n+    protected NashornScriptEngine getScriptEngine(String path) {\n         path = \"scripts/\" + path;\n-        engine = null;\n-        if (c != null) {\n-            try {\n-                engine = c.getScriptEngine(path);\n-            } catch (NullPointerException npe) {\n-                c = null;   // player disconnected\n+        File scriptFile = new File(path);\n+        if (!scriptFile.exists()) {\n+            return null;\n+        }\n+        NashornScriptEngine engine = (NashornScriptEngine) sef.getScriptEngine();\n+        try (FileReader fr = new FileReader(scriptFile)) {\n+            if (ServerConstants.JAVA_8){\n+                engine.eval(\"load('nashorn:mozilla_compat.js');\" + System.lineSeparator());\n             }\n+            engine.eval(fr);\n+        } catch (final ScriptException | IOException t) {\n+            FilePrinter.printError(FilePrinter.INVOCABLE + path.substring(12), t, path);\n+            return null;\n         }\n+\n+        return engine;\n+    }\n+\n+    protected NashornScriptEngine getScriptEngine(String path, MapleClient c) {\n+        String cachePath = \"scripts/\" + path;\n+        NashornScriptEngine engine = c.getScriptEngine(cachePath);\n+\n         if (engine == null) {\n-            File scriptFile = new File(path);\n-            if (!scriptFile.exists()) {\n-                return null;\n-            }\n-            engine = sem.getEngineByName(\"javascript\");\n-            if (c != null) {\n-                c.setScriptEngine(path, engine);\n-            }\n-            try (FileReader fr = new FileReader(scriptFile)) {\n-            \tif (ServerConstants.JAVA_8){\n-            \t\tengine.eval(\"load('nashorn:mozilla_compat.js');\" + System.lineSeparator());\n-            \t}\n-                engine.eval(fr);\n-            } catch (final ScriptException | IOException t) {\n-                FilePrinter.printError(FilePrinter.INVOCABLE + path.substring(12, path.length()), t, path);\n-                return null;\n-            }\n+            engine = getScriptEngine(cachePath);\n+            c.setScriptEngine(path, engine);\n         }\n \n-        return (Invocable) engine;\n+        return engine;\n     }\n \n     protected void resetContext(String path, MapleClient c) {"}, {"sha": "87af1a564a19b084af3367baafa5939ee1f32a8a", "filename": "src/scripting/event/EventScriptManager.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/2295317a84f31673361b72ba1003cc60f5c1cc51/src/scripting/event/EventScriptManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/2295317a84f31673361b72ba1003cc60f5c1cc51/src/scripting/event/EventScriptManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/event/EventScriptManager.java?ref=2295317a84f31673361b72ba1003cc60f5c1cc51", "patch": "@@ -54,7 +54,7 @@ public EventScriptManager(Channel cserv, String[] scripts) {\n         super();\n         for (String script : scripts) {\n             if (!script.equals(\"\")) {\n-                Invocable iv = getInvocable(\"event/\" + script + \".js\", null);\n+                Invocable iv = getScriptEngine(\"event/\" + script + \".js\");\n                 events.put(script, new EventEntry(iv, new EventManager(cserv, iv, script)));\n             }\n         }\n@@ -88,7 +88,7 @@ private void reloadScripts() {\n         Channel cserv = events.values().iterator().next().em.getChannelServer();\n         for (Entry<String, EventEntry> entry : events.entrySet()) {\n             String script = entry.getKey();\n-            Invocable iv = getInvocable(\"event/\" + script + \".js\", null);\n+            Invocable iv = getScriptEngine(\"event/\" + script + \".js\");\n             events.put(script, new EventEntry(iv, new EventManager(cserv, iv, script)));\n         }\n     }"}, {"sha": "1abc218633766986427ee43493fa189b6f4792e8", "filename": "src/scripting/npc/NPCScriptManager.java", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/2295317a84f31673361b72ba1003cc60f5c1cc51/src/scripting/npc/NPCScriptManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/2295317a84f31673361b72ba1003cc60f5c1cc51/src/scripting/npc/NPCScriptManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/npc/NPCScriptManager.java?ref=2295317a84f31673361b72ba1003cc60f5c1cc51", "patch": "@@ -30,7 +30,10 @@\n import java.util.Map;\n \n import javax.script.Invocable;\n+import javax.script.ScriptEngine;\n import javax.script.ScriptException;\n+\n+import jdk.nashorn.api.scripting.NashornScriptEngine;\n import net.server.world.MaplePartyCharacter;\n \n import scripting.AbstractScriptManager;\n@@ -56,7 +59,7 @@ public static NPCScriptManager getInstance() {\n     public boolean isNpcScriptAvailable(MapleClient c, String fileName) {\n         Invocable iv = null;\n         if (fileName != null) {\n-            iv = getInvocable(\"npc/\" + fileName + \".js\", c);\n+            iv = getScriptEngine(\"npc/\" + fileName + \".js\", c);\n         }\n \n         return iv != null;\n@@ -90,24 +93,19 @@ public void start(String filename, MapleClient c, int npc, List<MaplePartyCharac\n                 return;\n             }\n             cms.put(c, cm);\n-            Invocable iv = null;\n-            iv = getInvocable(\"npc/\" + filename + \".js\", c);\n+            NashornScriptEngine iv = getScriptEngine(\"npc/\" + filename + \".js\", c);\n \n             if (iv == null) {\n                 c.getPlayer().dropMessage(1, npc + \"\");\n                 cm.dispose();\n                 return;\n             }\n-            engine.put(\"cm\", cm);\n+            iv.put(\"cm\", cm);\n             scripts.put(c, iv);\n             try {\n                 iv.invokeFunction(\"start\", chrs);\n             } catch (final NoSuchMethodException nsme) {\n-                try {\n-                    iv.invokeFunction(\"start\", chrs);\n-                } catch (final NoSuchMethodException nsma) {\n-                    nsma.printStackTrace();\n-                }\n+                nsme.printStackTrace();\n             }\n \n         } catch (final UndeclaredThrowableException ute) {\n@@ -127,25 +125,25 @@ private boolean start(MapleClient c, int npc, int oid, String fileName, MapleCha\n             }\n             if (c.canClickNPC()) {\n                 cms.put(c, cm);\n-                Invocable iv = null;\n+                NashornScriptEngine iv = null;\n                 if (!itemScript) {\n                     if (fileName != null) {\n-                        iv = getInvocable(\"npc/\" + fileName + \".js\", c);\n+                        iv = getScriptEngine(\"npc/\" + fileName + \".js\", c);\n                     }\n                 } else {\n                     if (fileName != null) {     // thanks MiLin for drafting NPC-based item scripts\n-                        iv = getInvocable(\"item/\" + fileName + \".js\", c);\n+                        iv = getScriptEngine(\"item/\" + fileName + \".js\", c);\n                     }\n                 }\n                 if (iv == null) {\n-                    iv = getInvocable(\"npc/\" + npc + \".js\", c);\n+                    iv = getScriptEngine(\"npc/\" + npc + \".js\", c);\n                     cm.resetItemScript();\n                 }\n                 if (iv == null) {\n                     dispose(c);\n                     return false;\n                 }\n-                engine.put(engineName, cm);\n+                iv.put(engineName, cm);\n                 scripts.put(c, iv);\n                 c.setClickedNPC();\n                 try {"}, {"sha": "46b7dc7f6e4bde83ca262fd8e9f9c16f9951578a", "filename": "src/scripting/quest/QuestScriptManager.java", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/2295317a84f31673361b72ba1003cc60f5c1cc51/src/scripting/quest/QuestScriptManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/2295317a84f31673361b72ba1003cc60f5c1cc51/src/scripting/quest/QuestScriptManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/quest/QuestScriptManager.java?ref=2295317a84f31673361b72ba1003cc60f5c1cc51", "patch": "@@ -27,6 +27,7 @@\n \n import javax.script.Invocable;\n \n+import jdk.nashorn.api.scripting.NashornScriptEngine;\n import scripting.AbstractScriptManager;\n import server.quest.MapleQuest;\n import tools.FilePrinter;\n@@ -62,10 +63,10 @@ public void start(MapleClient c, short questid, int npc) {\n                         }\n                         if(c.canClickNPC()) {\n                                 qms.put(c, qm);\n-                                Invocable iv = getInvocable(\"quest/\" + questid + \".js\", c);\n+                                NashornScriptEngine iv = getScriptEngine(\"quest/\" + questid + \".js\", c);\n                                 if (iv == null) {\n                                         if(GameConstants.isMedalQuest(questid)) {   // start generic medal quest\n-                                                iv = getInvocable(\"quest/medalQuest.js\", c);\n+                                                iv = getScriptEngine(\"quest/medalQuest.js\", c);\n                                         } else {\n                                                 FilePrinter.printError(FilePrinter.QUEST_UNCODED, \"START Quest \" + questid + \" is uncoded.\");\n                                         }\n@@ -74,7 +75,7 @@ public void start(MapleClient c, short questid, int npc) {\n                                         qm.dispose();\n                                         return;\n                                 }\n-                                engine.put(\"qm\", qm);\n+                                iv.put(\"qm\", qm);\n                                 scripts.put(c, iv);\n                                 c.setClickedNPC();\n                                 iv.invokeFunction(\"start\", (byte) 1, (byte) 0, 0);\n@@ -117,17 +118,17 @@ public void end(MapleClient c, short questid, int npc) {\n \t\t\t}\n \t\t\tif(c.canClickNPC()){\n \t\t\t\tqms.put(c, qm);\n-\t\t\t\tInvocable iv = getInvocable(\"quest/\" + questid + \".js\", c);\n+\t\t\t\tNashornScriptEngine iv = getScriptEngine(\"quest/\" + questid + \".js\", c);\n \t\t\t\tif (iv == null) {\n                                         if(GameConstants.isMedalQuest(questid)) {   // start generic medal quest\n-                                                iv = getInvocable(\"quest/medalQuest.js\", c);\n+                                                iv = getScriptEngine(\"quest/medalQuest.js\", c);\n                                         } else {\n                                                 FilePrinter.printError(FilePrinter.QUEST_UNCODED, \"END Quest \" + questid + \" is uncoded.\");\n                                                 qm.dispose();\n                                                 return;\n                                         }\n \t\t\t\t}\n-\t\t\t\tengine.put(\"qm\", qm);\n+\t\t\t\tiv.put(\"qm\", qm);\n \t\t\t\tscripts.put(c, iv);\n \t\t\t\tc.setClickedNPC();\n \t\t\t\tiv.invokeFunction(\"end\", (byte) 1, (byte) 0, 0);"}, {"sha": "e4d1cb438917d0bc1aa297afb3bd1027e710ded0", "filename": "src/scripting/reactor/ReactorScriptManager.java", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/2295317a84f31673361b72ba1003cc60f5c1cc51/src/scripting/reactor/ReactorScriptManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/2295317a84f31673361b72ba1003cc60f5c1cc51/src/scripting/reactor/ReactorScriptManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/reactor/ReactorScriptManager.java?ref=2295317a84f31673361b72ba1003cc60f5c1cc51", "patch": "@@ -31,6 +31,8 @@\n import java.util.Map;\n import javax.script.Invocable;\n import javax.script.ScriptException;\n+\n+import jdk.nashorn.api.scripting.NashornScriptEngine;\n import scripting.AbstractScriptManager;\n import server.maps.MapleReactor;\n import server.maps.ReactorDropEntry;\n@@ -52,11 +54,11 @@ public static ReactorScriptManager getInstance() {\n     \n     public void onHit(MapleClient c, MapleReactor reactor) {\n         try {\n-            Invocable iv = getInvocable(\"reactor/\" + reactor.getId() + \".js\", c);\n+            NashornScriptEngine iv = getScriptEngine(\"reactor/\" + reactor.getId() + \".js\", c);\n             if (iv == null) return;\n             \n             ReactorActionManager rm = new ReactorActionManager(c, reactor, iv);\n-            engine.put(\"rm\", rm);\n+            iv.put(\"rm\", rm);\n             iv.invokeFunction(\"hit\");\n         } catch (final NoSuchMethodException e) {} //do nothing, hit is OPTIONAL\n         \n@@ -67,11 +69,11 @@ public void onHit(MapleClient c, MapleReactor reactor) {\n \n     public void act(MapleClient c, MapleReactor reactor) {\n         try {\n-            Invocable iv = getInvocable(\"reactor/\" + reactor.getId() + \".js\", c);\n+            NashornScriptEngine iv = getScriptEngine(\"reactor/\" + reactor.getId() + \".js\", c);\n             if (iv == null) return;\n             \n             ReactorActionManager rm = new ReactorActionManager(c, reactor, iv);\n-            engine.put(\"rm\", rm);\n+            iv.put(\"rm\", rm);\n             iv.invokeFunction(\"act\");\n         } catch (final ScriptException | NoSuchMethodException | NullPointerException e) {\n             FilePrinter.printError(FilePrinter.REACTOR + reactor.getId() + \".txt\", e);\n@@ -116,11 +118,11 @@ public void untouch(MapleClient c, MapleReactor reactor) {\n \n     private void touching(MapleClient c, MapleReactor reactor, boolean touching) {\n         try {\n-            Invocable iv = getInvocable(\"reactor/\" + reactor.getId() + \".js\", c);\n+            NashornScriptEngine iv = getScriptEngine(\"reactor/\" + reactor.getId() + \".js\", c);\n             if (iv == null) return;\n             \n             ReactorActionManager rm = new ReactorActionManager(c, reactor, iv);\n-            engine.put(\"rm\", rm);\n+            iv.put(\"rm\", rm);\n             if (touching) {\n                 iv.invokeFunction(\"touch\");\n             } else {"}]}]},
