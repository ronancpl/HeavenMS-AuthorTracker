{"fetchDate": "2019-12-19", "content": [{"sha": "5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6NWYxYWJmM2ZiM2NhMmM4ZWViMTAxYzlmNjlkMDI2NmIwNzEwZmU4Yg==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-10-27T15:00:36Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-10-27T15:00:36Z"}, "message": "HikariCP config + MaxHP/MP & EXP overhaul + Venom fix\n\nOverhauled the HikariCP connection, now it properly tries the best to hand out a DB connection. Fixed \"commands\" NPC crashing out players when entering the command multiple times in a short time. Rebalanced HP/MP gain on leveling up/AP resetting. Rebalanced HP/MP loss when AP resetting to use the same amount they would be earning on levelup. Fixed EXP distribution now computing overall monster maxHP plus heal instead of flat monter maxHP, that rendered on distributions of over 100% of the raw EXP. Added concurrency protection on MapleMonster. Fixed an issue on venom skills that would let an \"1 dmg\" appear to the client alongside the DOT.", "tree": {"sha": "674f7c1a3ed01e4f96d64d3a38a11ba46ed27c64", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/674f7c1a3ed01e4f96d64d3a38a11ba46ed27c64"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "html_url": "https://github.com/ronancpl/HeavenMS/commit/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08658f406b769b36a27c54a9b469b03f7b175767", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/08658f406b769b36a27c54a9b469b03f7b175767", "html_url": "https://github.com/ronancpl/HeavenMS/commit/08658f406b769b36a27c54a9b469b03f7b175767"}], "stats": {"total": 1115, "additions": 755, "deletions": 360}, "files": [{"sha": "318aaf3acf693db5afe012b7d3c97f72bda55f79", "filename": "build/built-jar.properties", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/built-jar.properties", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/built-jar.properties", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/built-jar.properties?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -1,4 +1,4 @@\n-#Sun, 22 Oct 2017 15:23:02 -0200\n+#Fri, 27 Oct 2017 11:16:00 -0200\n \n \n C\\:\\\\Nexon\\\\MapleSolaxia\\\\MapleSolaxiaV2="}, {"sha": "e1d0b47d5fe08eb6ca554b1e5141a773c3588839", "filename": "build/classes/constants/ServerConstants.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/constants/ServerConstants.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/constants/ServerConstants.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/constants/ServerConstants.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "4adc7278ec16b7df324904bb9aa607d2ec0fc8c7", "filename": "build/classes/net/server/channel/handlers/AbstractDealDamageHandler.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/net/server/channel/handlers/AbstractDealDamageHandler.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/net/server/channel/handlers/AbstractDealDamageHandler.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/channel/handlers/AbstractDealDamageHandler.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "afc2f5aee551e156092cabd673fb786561a628a4", "filename": "build/classes/net/server/channel/handlers/DistributeAPHandler.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/net/server/channel/handlers/DistributeAPHandler.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/net/server/channel/handlers/DistributeAPHandler.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/channel/handlers/DistributeAPHandler.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "3e7e3f008a5fec945cc976b2bd638c9717d05d05", "filename": "build/classes/net/server/channel/handlers/DistributeSPHandler.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/net/server/channel/handlers/DistributeSPHandler.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/net/server/channel/handlers/DistributeSPHandler.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/channel/handlers/DistributeSPHandler.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "ab66f8d400aecc65dc9e24acb5167b0214228a79", "filename": "build/classes/net/server/channel/handlers/UseCashItemHandler$1.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/net/server/channel/handlers/UseCashItemHandler$1.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/net/server/channel/handlers/UseCashItemHandler$1.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/channel/handlers/UseCashItemHandler$1.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "941f896101e769d1e5a6d29a5374031d3667ac34", "filename": "build/classes/net/server/channel/handlers/UseCashItemHandler.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/net/server/channel/handlers/UseCashItemHandler.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/net/server/channel/handlers/UseCashItemHandler.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/channel/handlers/UseCashItemHandler.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "9765f7f0636da17eadfedc0fdb0dcf52fe9c0d23", "filename": "build/classes/scripting/AbstractPlayerInteraction.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/scripting/AbstractPlayerInteraction.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/scripting/AbstractPlayerInteraction.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/scripting/AbstractPlayerInteraction.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "c87c4af83fc01968bd54a22f8e112184c2ac2bad", "filename": "build/classes/server/life/MapleMonster$1.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$1.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$1.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleMonster$1.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "d95e96dba1480aabfe935ae1d57465dc53822475", "filename": "build/classes/server/life/MapleMonster$2.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$2.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$2.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleMonster$2.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "08dcc4a1275bbabf000e3340148e5938441c15e7", "filename": "build/classes/server/life/MapleMonster$3.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$3.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$3.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleMonster$3.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "ebf19e2fd598a119994075040eadb866b458e82b", "filename": "build/classes/server/life/MapleMonster$4.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$4.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$4.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleMonster$4.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "e5780de744067035367c674510d814ee48064c83", "filename": "build/classes/server/life/MapleMonster$5.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$5.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$5.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleMonster$5.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "8dc22c01ffb5bd6b3a4137a75d27561c0ba6c075", "filename": "build/classes/server/life/MapleMonster$6.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$6.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$6.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleMonster$6.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "ce3aea590df126299a46d3c8e0a4d96999655cc9", "filename": "build/classes/server/life/MapleMonster$DamageTask.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$DamageTask.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster$DamageTask.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleMonster$DamageTask.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "eae7027ff46878b67a2b3a1ece8740b4b284bc34", "filename": "build/classes/server/life/MapleMonster.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/life/MapleMonster.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleMonster.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "cb98bf2e39f1137806492e2edac0e54b41ee7eda", "filename": "build/classes/server/maps/MapleMap.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/maps/MapleMap.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/server/maps/MapleMap.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/maps/MapleMap.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "b5d376309dcc05e3a373f2ad013e8fdbc1197aa7", "filename": "build/classes/tools/DatabaseConnection.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/tools/DatabaseConnection.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/tools/DatabaseConnection.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/tools/DatabaseConnection.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "38ef879f6c5b987e2cca8c58b3c69775ce9580f9", "filename": "build/classes/tools/FilePrinter.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/tools/FilePrinter.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/build/classes/tools/FilePrinter.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/tools/FilePrinter.class?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "7a59496cbf669e4b6bebb1720726296ea274eb42", "filename": "dist/MapleSolaxia.jar", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/dist/MapleSolaxia.jar", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/dist/MapleSolaxia.jar", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/dist/MapleSolaxia.jar?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b"}, {"sha": "9c46f20edfc55f09a724c70c9bf9489f8d403919", "filename": "docs/feature_list.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/docs/feature_list.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/docs/feature_list.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/feature_list.txt?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -76,6 +76,7 @@ Server potentials:\n * Owl of Minerva.\n * Pet item ignore.\n * Autosaver (periodically saves on DB current state of every player in-game).\n+* Fixed and randomized versions of HP/MP growth rate, regarding player job. Placeholder for HP/MP washing feature.\n \n Admin/GM commands:\n * Server commands layered by GM levels."}, {"sha": "d9e57f10a5fcd024b6da212fcb5a53731898c80b", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -602,4 +602,16 @@ Corrigido Map chair n\n Corrigido itens com ownership diferente sendo agrupados num mesmo slot, perdendo a referencia de dono.\n Implementado feature \"Arrange Items\" do MapleStorage. Ele faz os devidos agrupamentos de itens e organiza os itens do storage.\n Corrigido storage mesclando itens que deveriam ser \ufffdnicos (que n\ufffdo poderiam haver mais de um num mesmo slot, ou no invent\ufffdrio do jogador).\n-Corrigido bug onde colocar um pet equipado no Cash Inventory e voltar ao jogo causaria crash no jogador.\n\\ No newline at end of file\n+Corrigido bug onde colocar um pet equipado no Cash Inventory e voltar ao jogo causaria crash no jogador.\n+\n+23 - 24 Outubro 2017,\n+Adicionado prote\ufffd\ufffdo contra acesso concorrente em m\ufffddulos de MapleMonster.\n+Corrigido bug com Venom fazendo aparecer \"dano 1\" no DOT.\n+Corrigido sistema de EXP agora contabilizando devidamente HP curado pelo mob na distribui\ufffd\ufffdo do EXP.\n+\n+25 Outubro 2017,\n+Corrigido alguns problemas com as configs de inicializa\ufffd\ufffdo do HikariCP.\n+Corrigido bug com inicializa\ufffd\ufffdo de NPC scripts podendo desconectar o jogador se instaciado m\ufffdltiplas vezes.\n+\n+26 Outubro 2017,\n+Adicionado feature de randomiza\ufffd\ufffdo dos stats ganhos de HP e MP. Stat ganho de MP leva na contabiliza\ufffd\ufffdo INT do jogador.\n\\ No newline at end of file"}, {"sha": "59390d982f184ac4ea1f78bf0ebe6eea7090c622", "filename": "nbproject/private/private.properties", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/nbproject/private/private.properties", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/nbproject/private/private.properties", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/nbproject/private/private.properties?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -7,4 +7,4 @@ file.reference.slf4j-api-1.6.6.jar=C:\\\\Nexon\\\\MapleSolaxia\\\\MapleSolaxiaV2\\\\core\n file.reference.slf4j-jdk14-1.7.5.jar=C:\\\\Nexon\\\\MapleSolaxia\\\\MapleSolaxiaV2\\\\cores\\\\slf4j-jdk14-1.7.5.jar\n javac.debug=true\n javadoc.preview=true\n-user.properties.file=C:\\\\Users\\\\RonanLana\\\\AppData\\\\Roaming\\\\NetBeans\\\\8.0.2\\\\build.properties\n+user.properties.file=C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\NetBeans\\\\8.0.2\\\\build.properties"}, {"sha": "3287222d2649466c0eb42828a5c7b3b74b3426ed", "filename": "nbproject/private/private.xml", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/nbproject/private/private.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/nbproject/private/private.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/nbproject/private/private.xml?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -2,15 +2,6 @@\n <project-private xmlns=\"http://www.netbeans.org/ns/project-private/1\">\n     <editor-bookmarks xmlns=\"http://www.netbeans.org/ns/editor-bookmarks/2\" lastBookmarkId=\"2\"/>\n     <open-files xmlns=\"http://www.netbeans.org/ns/projectui-open-files/2\">\n-        <group>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/channel/handlers/PlayerLoggedinHandler.java</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/client/command/Commands.java</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/channel/handlers/CashOperationHandler.java</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/server/quest/requirements/QuestRequirement.java</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/channel/handlers/InventoryMergeHandler.java</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/server/MapleStorage.java</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/client/MapleCharacter.java</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/server/MapleStorageInventory.java</file>\n-        </group>\n+        <group/>\n     </open-files>\n </project-private>"}, {"sha": "c6d7bbc9d37ce1aa17aca65d7fcac8a2b4fc031e", "filename": "scripts/npc/9000021.js", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/scripts/npc/9000021.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/scripts/npc/9000021.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9000021.js?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -35,6 +35,11 @@ function action(mode, type, selection) {\n     if (mode < 0)\n         cm.dispose();\n     else {\n+        if (mode == 0 && type > 0) {\n+            cm.dispose();\n+            return;\n+        }\n+        \n         if (mode == 1)\n             status++;\n         else"}, {"sha": "5e32b4c60870f2a6a29dbc1c05a4b354d4e260ff", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -40,6 +40,7 @@\n     public static final boolean USE_MTS = false;\n     public static final boolean USE_FAMILY_SYSTEM = false;\n     public static final boolean USE_DUEY = true;\n+    public static final boolean USE_RANDOMIZE_HPMP_GAIN = true;     //Enables randomizing on MaxHP/MaxMP gains and INT accounting for the MaxMP gain.\n     public static final boolean USE_STORAGE_ITEM_SORT = true;       //Enables storage \"Arrange Items\" feature.\n     public static final boolean USE_ITEM_SORT = true;               //Enables inventory \"Item Sort/Merge\" feature.\n     public static final boolean USE_ITEM_SORT_BY_NAME = false;      //Item sorting based on name rather than id.\n@@ -49,7 +50,7 @@\n     public static final boolean USE_AUTOSAVE = true;                //Enables server autosaving feature (saves characters to DB each 1 hour).\n     public static final boolean USE_SERVER_AUTOASSIGNER = true;     //Server-builtin autoassigner, uses algorithm based on distributing AP accordingly with required secondary stat on equipments.\n     public static final boolean USE_REFRESH_RANK_MOVE = true;\n-    public static final boolean USE_ENFORCE_OWL_SUGGESTIONS = false;//Forces the Owl of Minerva to always display the defined item array on GameConstants.OWL_DATA instead of the featured by the players.\n+    public static final boolean USE_ENFORCE_OWL_SUGGESTIONS = false;//Forces the Owl of Minerva to always display the defined item array on GameConstants.OWL_DATA instead of those featured by the players.\n     public static final boolean USE_ENFORCE_UNMERCHABLE_PET = true; //Forces players to not sell pets via merchants. (since non-named pets gets dirty name and other possible DB-related issues)\n     public static final boolean USE_ENFORCE_MDOOR_POSITION = true;  //Forces mystic door to be spawned near spawnpoints. (since things bugs out other way, and this helps players to locate the door faster)\n     public static final boolean USE_ERASE_PERMIT_ON_OPENSHOP = true;//Forces \"shop permit\" item to be consumed when player deploy his/her player shop.\n@@ -70,9 +71,11 @@\n     \n     public static final int PARTY_EXPERIENCE_MOD = 1;               //Change for event stuff.\n     \n-    public static final byte MAX_MONITORED_BUFFSTATS = 5;       //Limits accounting for \"dormant\" buff effects, that should take place when stronger stat buffs expires.\n-    public static final int MAX_AP = 32767;                     //Max AP allotted on the auto-assigner.\n-    public static final int MAX_EVENT_LEVELS = 8;               //Event has different levels of rewarding system.\n+    //Miscellaneous COnfiguration\n+    public static final byte MIN_UNDERLEVEL_FOR_EXP_GAIN = 5;            //Characters are unable to get EXP from a mob if their level are under this threshold, only if \"USE_UNDERLEVELED_EXP_BLOCK\" is enabled.\n+    public static final byte MAX_MONITORED_BUFFSTATS = 5;           //Limits accounting for \"dormant\" buff effects, that should take place when stronger stat buffs expires.\n+    public static final int MAX_AP = 32767;                             //Max AP allotted on the auto-assigner.\n+    public static final int MAX_EVENT_LEVELS = 8;                       //Event has different levels of rewarding system.\n     public static final long BLOCK_NPC_RACE_CONDT = (long)(0.5 * 1000); //Time the player client must wait before reopening a conversation with an NPC.\n     public static final long PET_LOOT_UPON_ATTACK = (long)(0.7 * 1000); //Time the pet must wait before trying to pick items up.\n     "}, {"sha": "8e12bebde86807d4677b9f23068c2299908e6500", "filename": "src/net/server/channel/handlers/AbstractDealDamageHandler.java", "status": "modified", "additions": 70, "deletions": 69, "changes": 139, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/net/server/channel/handlers/AbstractDealDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/net/server/channel/handlers/AbstractDealDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/AbstractDealDamageHandler.java?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -582,19 +582,20 @@ protected AttackInfo parseDamage(LittleEndianAccessor lea, MapleCharacter chr, b\n             ret.speed = lea.readByte();\n             lea.skip(4);\n         }\n-        int calcDmgMax = 0;\n-\t\t\n-\t\t// Find the base damage to base futher calculations on.\n-\t\t// Several skills have their own formula in this section.\n+        \n+        // Find the base damage to base futher calculations on.\n+        // Several skills have their own formula in this section.\n+        int calcDmgMax = 0;\t\n+        \n         if(magic && ret.skill != 0) {\n             calcDmgMax = (chr.getTotalMagic() * chr.getTotalMagic() / 1000 + chr.getTotalMagic()) / 30 + chr.getTotalInt() / 200;\n         } else if(ret.skill == 4001344 || ret.skill == NightWalker.LUCKY_SEVEN || ret.skill == NightLord.TRIPLE_THROW) {\n             calcDmgMax = (chr.getTotalLuk() * 5) * chr.getTotalWatk() / 100;\n         } else if(ret.skill == DragonKnight.DRAGON_ROAR) {\n             calcDmgMax = (chr.getTotalStr() * 4 + chr.getTotalDex()) * chr.getTotalWatk() / 100;\n-\t\t} else if(ret.skill == NightLord.VENOMOUS_STAR || ret.skill == Shadower.VENOMOUS_STAB) {\n-\t\t\tcalcDmgMax = (int) (18.5 * (chr.getTotalStr() + chr.getTotalLuk()) + chr.getTotalDex() * 2) / 100 * chr.calculateMaxBaseDamage(chr.getTotalWatk());\n-\t\t} else {\n+        } else if(ret.skill == NightLord.VENOMOUS_STAR || ret.skill == Shadower.VENOMOUS_STAB) {\n+            calcDmgMax = (int) (18.5 * (chr.getTotalStr() + chr.getTotalLuk()) + chr.getTotalDex() * 2) / 100 * chr.calculateMaxBaseDamage(chr.getTotalWatk());\n+        } else {\n             calcDmgMax = chr.calculateMaxBaseDamage(chr.getTotalWatk());\n         }\n \n@@ -739,74 +740,74 @@ else if(orbs >= 5)\n             }\n             \n             if(ret.skill != 0) {\n-                Skill skill = SkillFactory.getSkill(ret.skill);\n-                if(skill.getElement() != Element.NEUTRAL && chr.getBuffedValue(MapleBuffStat.ELEMENTAL_RESET) == null) {\n-                    // The skill has an element effect, so we need to factor that in.\n-                    if(monster != null) {\n-                        ElementalEffectiveness eff = monster.getEffectiveness(skill.getElement());\n-                        if(eff == ElementalEffectiveness.WEAK) {\n+                    Skill skill = SkillFactory.getSkill(ret.skill);\n+                    if(skill.getElement() != Element.NEUTRAL && chr.getBuffedValue(MapleBuffStat.ELEMENTAL_RESET) == null) {\n+                        // The skill has an element effect, so we need to factor that in.\n+                        if(monster != null) {\n+                            ElementalEffectiveness eff = monster.getElementalEffectiveness(skill.getElement());\n+                            if(eff == ElementalEffectiveness.WEAK) {\n+                                calcDmgMax *= 1.5;\n+                            } else if(eff == ElementalEffectiveness.STRONG) {\n+                                //calcDmgMax *= 0.5;\n+                            }\n+                        } else {\n+                            // Since we already know the skill has an elemental attribute, but we dont know if the monster is weak or not, lets\n+                            // take the safe approach and just assume they are weak.\n                             calcDmgMax *= 1.5;\n-                        } else if(eff == ElementalEffectiveness.STRONG) {\n-                            //calcDmgMax *= 0.5;\n                         }\n-                    } else {\n-                        // Since we already know the skill has an elemental attribute, but we dont know if the monster is weak or not, lets\n-                        // take the safe approach and just assume they are weak.\n-                        calcDmgMax *= 1.5;\n                     }\n-                }\n-\t\t\t\tif(ret.skill == FPWizard.POISON_BREATH || ret.skill == FPMage.POISON_MIST || ret.skill == FPArchMage.FIRE_DEMON || ret.skill == ILArchMage.ICE_DEMON) {\n-\t\t\t\t\tif(monster != null) {\n-\t\t\t\t\t\t// Turns out poison is completely server side, so I don't know why I added this. >.<\n-\t\t\t\t\t\t//calcDmgMax = monster.getHp() / (70 - chr.getSkillLevel(skill));\n-\t\t\t\t\t}\n-\t\t\t\t} else if(ret.skill == Hermit.SHADOW_WEB) {\n-\t\t\t\t\tif(monster != null) {\n-\t\t\t\t\t\tcalcDmgMax = monster.getHp() / (50 - chr.getSkillLevel(skill));\n-\t\t\t\t\t}\n-\t\t\t\t}\n+                    if(ret.skill == FPWizard.POISON_BREATH || ret.skill == FPMage.POISON_MIST || ret.skill == FPArchMage.FIRE_DEMON || ret.skill == ILArchMage.ICE_DEMON) {\n+                            if(monster != null) {\n+                                    // Turns out poison is completely server side, so I don't know why I added this. >.<\n+                                    //calcDmgMax = monster.getHp() / (70 - chr.getSkillLevel(skill));\n+                            }\n+                    } else if(ret.skill == Hermit.SHADOW_WEB) {\n+                            if(monster != null) {\n+                                    calcDmgMax = monster.getHp() / (50 - chr.getSkillLevel(skill));\n+                            }\n+                    }\n             }\n             \n             for (int j = 0; j < ret.numDamage; j++) {\n-                int damage = lea.readInt();\n-                int hitDmgMax = calcDmgMax;\n-                if(ret.skill == Buccaneer.BARRAGE) {\n-                    if(j > 3)\n-                        hitDmgMax *= Math.pow(2, (j - 3));\n-                }\n-\t\t\t\tif(shadowPartner) {\n-\t\t\t\t\t// For shadow partner, the second half of the hits only do 50% damage. So calc that\n-\t\t\t\t\t// in for the crit effects.\n-\t\t\t\t\tif(j >= ret.numDamage / 2) {\n-\t\t\t\t\t\thitDmgMax *= 0.5;\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\t\n-\t\t\t\tif(ret.skill == Marksman.SNIPE) {\n-\t\t\t\t\tdamage = 195000 + Randomizer.nextInt(5000);\n-\t\t\t\t\thitDmgMax = 200000;\n-\t\t\t\t}\n-\t\t\t\t\n-                                int maxWithCrit = hitDmgMax;\n-\t\t\t\tif(canCrit) // They can crit, so up the max.\n-\t\t\t\t\tmaxWithCrit *= 2;\n-\t\t\t\t\n-\t\t\t\t// Warn if the damage is over 1.5x what we calculated above.\n-                                if(damage > maxWithCrit * 1.5) {\n-                                    AutobanFactory.DAMAGE_HACK.alert(chr, \"DMG: \" + damage + \" MaxDMG: \" + maxWithCrit + \" SID: \" + ret.skill + \" MobID: \" + (monster != null ? monster.getId() : \"null\") + \" Map: \" + chr.getMap().getMapName() + \" (\" + chr.getMapId() + \")\");\n-                                }\n-\t\t\t\t\n-\t\t\t\t// Add a ab point if its over 5x what we calculated.\n-\t\t\t\tif(damage > maxWithCrit  * 5) {\n-\t\t\t\t\tAutobanFactory.DAMAGE_HACK.addPoint(chr.getAutobanManager(), \"DMG: \" + damage + \" MaxDMG: \" + maxWithCrit + \" SID: \" + ret.skill + \" MobID: \" + (monster != null ? monster.getId() : \"null\") + \" Map: \" + chr.getMap().getMapName() + \" (\" + chr.getMapId() + \")\");\n-\t\t\t\t}\n-\t\t\t\t\n-\t\t\t\tif (ret.skill == Marksman.SNIPE || (canCrit && damage > hitDmgMax)) {\n-\t\t\t\t\t// If the skill is a crit, inverse the damage to make it show up on clients.\n-                    damage = -Integer.MAX_VALUE + damage - 1;\n-                }\n-                \n-                allDamageNumbers.add(damage);\n+                    int damage = lea.readInt();\n+                    int hitDmgMax = calcDmgMax;\n+                    if(ret.skill == Buccaneer.BARRAGE) {\n+                        if(j > 3)\n+                            hitDmgMax *= Math.pow(2, (j - 3));\n+                    }\n+                    if(shadowPartner) {\n+                            // For shadow partner, the second half of the hits only do 50% damage. So calc that\n+                            // in for the crit effects.\n+                            if(j >= ret.numDamage / 2) {\n+                                    hitDmgMax *= 0.5;\n+                            }\n+                    }\n+\n+                    if(ret.skill == Marksman.SNIPE) {\n+                            damage = 195000 + Randomizer.nextInt(5000);\n+                            hitDmgMax = 200000;\n+                    }\n+\n+                    int maxWithCrit = hitDmgMax;\n+                    if(canCrit) // They can crit, so up the max.\n+                            maxWithCrit *= 2;\n+\n+                    // Warn if the damage is over 1.5x what we calculated above.\n+                    if(damage > maxWithCrit * 1.5) {\n+                        AutobanFactory.DAMAGE_HACK.alert(chr, \"DMG: \" + damage + \" MaxDMG: \" + maxWithCrit + \" SID: \" + ret.skill + \" MobID: \" + (monster != null ? monster.getId() : \"null\") + \" Map: \" + chr.getMap().getMapName() + \" (\" + chr.getMapId() + \")\");\n+                    }\n+\n+                    // Add a ab point if its over 5x what we calculated.\n+                    if(damage > maxWithCrit  * 5) {\n+                            AutobanFactory.DAMAGE_HACK.addPoint(chr.getAutobanManager(), \"DMG: \" + damage + \" MaxDMG: \" + maxWithCrit + \" SID: \" + ret.skill + \" MobID: \" + (monster != null ? monster.getId() : \"null\") + \" Map: \" + chr.getMap().getMapName() + \" (\" + chr.getMapId() + \")\");\n+                    }\n+\n+                    if (ret.skill == Marksman.SNIPE || (canCrit && damage > hitDmgMax)) {\n+                            // If the skill is a crit, inverse the damage to make it show up on clients.\n+                            damage = -Integer.MAX_VALUE + damage - 1;\n+                    }\n+\n+                    allDamageNumbers.add(damage);\n             }\n             if (ret.skill != Corsair.RAPID_FIRE || ret.skill != Aran.HIDDEN_FULL_DOUBLE || ret.skill != Aran.HIDDEN_FULL_TRIPLE || ret.skill != Aran.HIDDEN_OVER_DOUBLE || ret.skill != Aran.HIDDEN_OVER_TRIPLE) {\n             \tlea.skip(4);"}, {"sha": "92274b49ebdf228fc495868f83255a2aedfc2a0e", "filename": "src/net/server/channel/handlers/DistributeAPHandler.java", "status": "modified", "additions": 157, "deletions": 26, "changes": 183, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/net/server/channel/handlers/DistributeAPHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/net/server/channel/handlers/DistributeAPHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/DistributeAPHandler.java?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -27,31 +27,34 @@\n import client.MapleStat;\n import client.Skill;\n import client.SkillFactory;\n+import constants.ServerConstants;\n import constants.skills.BlazeWizard;\n import constants.skills.Brawler;\n import constants.skills.DawnWarrior;\n import constants.skills.Magician;\n import constants.skills.Warrior;\n import net.AbstractMaplePacketHandler;\n import tools.MaplePacketCreator;\n+import tools.Randomizer;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n public final class DistributeAPHandler extends AbstractMaplePacketHandler {\n     private static final int max = 32767;\n \n+    @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         slea.readInt();\n         int num = slea.readInt();\n         if (c.getPlayer().getRemainingAp() > 0) {\n-            if (addStat(c, num)) { \n+            if (addStat(c, num, false)) {\n                 c.getPlayer().setRemainingAp(c.getPlayer().getRemainingAp() - 1);\n                 c.getPlayer().updateSingleStat(MapleStat.AVAILABLEAP, c.getPlayer().getRemainingAp());\n             }\n         }\n         c.announce(MaplePacketCreator.enableActions());\n     }\n-    \n-    static boolean addStat(MapleClient c, int apTo) {\n+\n+    public static boolean addStat(MapleClient c, int apTo, boolean usedAPReset) {\n         switch (apTo) {\n             case 64: // Str\n                 if (c.getPlayer().getStr() >= max) {\n@@ -90,74 +93,202 @@ static boolean addStat(MapleClient c, int apTo) {\n         return true;\n     }\n \n-    static int addHP(MapleClient c) {\n+    private static int addHP(MapleClient c) {\n         MapleCharacter player = c.getPlayer();\n         MapleJob job = player.getJob();\n         int MaxHP = player.getMaxHp();\n         if (player.getHpMpApUsed() > 9999 || MaxHP >= 30000) {\n             return MaxHP;\n         }\n-        if (job.isA(MapleJob.WARRIOR) || job.isA(MapleJob.DAWNWARRIOR1) || job.isA(MapleJob.ARAN1)) {\n+        \n+        return MaxHP + calcHpChange(player, job, false);\n+    }\n+    \n+    public static int calcHpChange(MapleCharacter player, MapleJob job, boolean usedAPReset) {\n+        int MaxHP = 0;\n+        \n+        if (job.isA(MapleJob.WARRIOR) || job.isA(MapleJob.DAWNWARRIOR1)) {\n             Skill increaseHP = SkillFactory.getSkill(job.isA(MapleJob.DAWNWARRIOR1) ? DawnWarrior.MAX_HP_INCREASE : Warrior.IMPROVED_MAXHP);\n             int sLvl = player.getSkillLevel(increaseHP);\n-            \n+\n             if(sLvl > 0)\n                 MaxHP += increaseHP.getEffect(sLvl).getY();\n-            \n-            MaxHP += 20;\n+\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if (usedAPReset) {\n+                    MaxHP += 18;\n+                } else {\n+                    MaxHP += Randomizer.rand(18, 22);\n+                }\n+            } else {\n+                MaxHP += 20;\n+            }\n+        } else if(job.isA(MapleJob.ARAN1)) {\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if (usedAPReset) {\n+                    MaxHP += 26;\n+                } else {\n+                    MaxHP += Randomizer.rand(26, 30);\n+                }\n+            } else {\n+                MaxHP += 28;\n+            }\n         } else if (job.isA(MapleJob.MAGICIAN) || job.isA(MapleJob.BLAZEWIZARD1)) {\n-            MaxHP += 6;\n-        } else if (job.isA(MapleJob.BOWMAN) || job.isA(MapleJob.WINDARCHER1) || job.isA(MapleJob.THIEF) || job.isA(MapleJob.NIGHTWALKER1)) {\n-            MaxHP += 16;\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if (usedAPReset) {\n+                    MaxHP += 5;\n+                } else {\n+                    MaxHP += Randomizer.rand(5, 9);\n+                }\n+            } else {\n+                MaxHP += 6;\n+            }\n+        } else if (job.isA(MapleJob.THIEF) || job.isA(MapleJob.NIGHTWALKER1)) {\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if (usedAPReset) {\n+                    MaxHP += 14;\n+                } else {\n+                    MaxHP += Randomizer.rand(14, 18);\n+                }\n+            } else {\n+                MaxHP += 16;\n+            }\n+        } else if(job.isA(MapleJob.BOWMAN) || job.isA(MapleJob.WINDARCHER1)) {\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if (usedAPReset) {\n+                    MaxHP += 14;\n+                } else {\n+                    MaxHP += Randomizer.rand(14, 18);\n+                }\n+            } else {\n+                MaxHP += 16;\n+            }\n         } else if (job.isA(MapleJob.PIRATE) || job.isA(MapleJob.THUNDERBREAKER1)) {\n             Skill increaseHP = SkillFactory.getSkill(Brawler.IMPROVE_MAX_HP);\n             int sLvl = player.getSkillLevel(increaseHP);\n-            \n+\n             if(sLvl > 0)\n                 MaxHP += increaseHP.getEffect(sLvl).getY();\n-            \n-            MaxHP += 18;\n-        } else {\n+\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if (usedAPReset) {\n+                    MaxHP += 16;\n+                } else {\n+                    MaxHP += Randomizer.rand(16, 20);\n+                }\n+            } else {\n+                MaxHP += 18;\n+            }\n+        } else if (usedAPReset) {\n             MaxHP += 8;\n+        } else {\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                MaxHP += Randomizer.rand(8, 12);\n+            } else {\n+                MaxHP += 10;\n+            }\n         }\n         return MaxHP;\n     }\n \n-    static int addMP(MapleClient c) {\n+    private static int addMP(MapleClient c) {\n         MapleCharacter player = c.getPlayer();\n         int MaxMP = player.getMaxMp();\n         MapleJob job = player.getJob();\n         if (player.getHpMpApUsed() > 9999 || player.getMaxMp() >= 30000) {\n             return MaxMP;\n         }\n+        \n+        return MaxMP + calcMpChange(player, job, false);\n+    }\n+    \n+    public static int calcMpChange(MapleCharacter player, MapleJob job, boolean usedAPReset) {\n+        int MaxMP = 0;\n+        \n         if (job.isA(MapleJob.WARRIOR) || job.isA(MapleJob.DAWNWARRIOR1) || job.isA(MapleJob.ARAN1)) {\n-            MaxMP += 2;\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if(!usedAPReset) {\n+                    MaxMP += (Randomizer.rand(2, 4) + (player.getInt() / 10));\n+                }\n+                else {\n+                    MaxMP += (2 + (player.getInt() / 10));\n+                }\n+            } else {\n+                MaxMP += 3;\n+            }\n         } else if (job.isA(MapleJob.MAGICIAN) || job.isA(MapleJob.BLAZEWIZARD1)) {\n             Skill increaseMP = SkillFactory.getSkill(job.isA(MapleJob.BLAZEWIZARD1) ? BlazeWizard.INCREASING_MAX_MP : Magician.IMPROVED_MAX_MP_INCREASE);\n             int sLvl = player.getSkillLevel(increaseMP);\n-            \n+\n             if(sLvl > 0)\n                 MaxMP += increaseMP.getEffect(sLvl).getY();\n-            \n-            MaxMP += 18;\n-        } else if (job.isA(MapleJob.BOWMAN) || job.isA(MapleJob.WINDARCHER1) || job.isA(MapleJob.THIEF) || job.isA(MapleJob.NIGHTWALKER1)) {\n-            MaxMP += 10;\n+\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if(!usedAPReset) {\n+                    MaxMP += (Randomizer.rand(12, 16) + (player.getInt() / 20));\n+                }\n+                else {\n+                    MaxMP += (12 + (player.getInt() / 20));\n+                }\n+            } else {\n+                MaxMP += 18;\n+            }\n+        } else if (job.isA(MapleJob.BOWMAN) || job.isA(MapleJob.WINDARCHER1)) {\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if(!usedAPReset) {\n+                    MaxMP += (Randomizer.rand(6, 8) + (player.getInt() / 10));\n+                }\n+                else {\n+                    MaxMP += (6 + (player.getInt() / 10));\n+                }\n+            } else {\n+                MaxMP += 10;\n+            }\n+        } else if(job.isA(MapleJob.THIEF) || job.isA(MapleJob.NIGHTWALKER1)) {\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if(!usedAPReset) {\n+                    MaxMP += (Randomizer.rand(6, 8) + (player.getInt() / 10));\n+                }\n+                else {\n+                    MaxMP += (6 + (player.getInt() / 10));\n+                }\n+            } else {\n+                MaxMP += 10;\n+            }\n         } else if (job.isA(MapleJob.PIRATE) || job.isA(MapleJob.THUNDERBREAKER1)) {\n-            MaxMP += 14;\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if(!usedAPReset) {\n+                    MaxMP += (Randomizer.rand(7, 9) + (player.getInt() / 10));\n+                }\n+                else {\n+                    MaxMP += (7 + (player.getInt() / 10));\n+                }\n+            } else {\n+                MaxMP += 14;\n+            }\n         } else {\n-            MaxMP += 6;\n+            if(ServerConstants.USE_RANDOMIZE_HPMP_GAIN) {\n+                if(!usedAPReset) {\n+                    MaxMP += (Randomizer.rand(4, 6) + (player.getInt() / 10));\n+                }\n+                else {\n+                    MaxMP += (4 + (player.getInt() / 10));\n+                }\n+            } else {\n+                MaxMP += 6;\n+            }\n         }\n         return MaxMP;\n     }\n \n-    static void addHP(MapleCharacter player, int MaxHP) {\n+    private static void addHP(MapleCharacter player, int MaxHP) {\n         MaxHP = Math.min(30000, MaxHP);\n         player.setHpMpApUsed(player.getHpMpApUsed() + 1);\n         player.setMaxHp(MaxHP);\n         player.updateSingleStat(MapleStat.MAXHP, MaxHP);\n     }\n \n-    static void addMP(MapleCharacter player, int MaxMP) {\n+    private static void addMP(MapleCharacter player, int MaxMP) {\n         MaxMP = Math.min(30000, MaxMP);\n         player.setHpMpApUsed(player.getHpMpApUsed() + 1);\n         player.setMaxMp(MaxMP);"}, {"sha": "fdc0577443b194adf8e5f86e33118a871472472c", "filename": "src/net/server/channel/handlers/DistributeSPHandler.java", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/net/server/channel/handlers/DistributeSPHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/net/server/channel/handlers/DistributeSPHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/DistributeSPHandler.java?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -39,18 +39,19 @@\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         slea.readInt();\n         int skillid = slea.readInt();\n-\t\tif (skillid == Aran.HIDDEN_FULL_DOUBLE || skillid == Aran.HIDDEN_FULL_TRIPLE || skillid == Aran.HIDDEN_OVER_DOUBLE || skillid == Aran.HIDDEN_OVER_TRIPLE) {\n-\t\t\tc.getSession().write(MaplePacketCreator.enableActions());\n-\t\t\treturn;\n-\t\t}\n+        if (skillid == Aran.HIDDEN_FULL_DOUBLE || skillid == Aran.HIDDEN_FULL_TRIPLE || skillid == Aran.HIDDEN_OVER_DOUBLE || skillid == Aran.HIDDEN_OVER_TRIPLE) {\n+            c.getSession().write(MaplePacketCreator.enableActions());\n+            return;\n+        }\n+        \n         MapleCharacter player = c.getPlayer();\n         int remainingSp = player.getRemainingSpBySkill(GameConstants.getSkillBook(skillid/10000));\n         boolean isBeginnerSkill = false;\n         if ((!GameConstants.isPQSkillMap(player.getMapId()) && GameConstants.isPqSkill(skillid)) || (!player.isGM() && GameConstants.isGMSkills(skillid)) || (!GameConstants.isInJobTree(skillid, player.getJob().getId()) && !player.isGM())) {\n-        \tAutobanFactory.PACKET_EDIT.alert(player, \"tried to packet edit in distributing sp.\");\n-        \tFilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + \".txt\", c.getPlayer().getName() + \" tried to use skill \" + skillid + \" without it being in their job.\\r\\n\");\n-    \t\tc.disconnect(true, false);\n-                return;\n+            AutobanFactory.PACKET_EDIT.alert(player, \"tried to packet edit in distributing sp.\");\n+            FilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + \".txt\", c.getPlayer().getName() + \" tried to use skill \" + skillid + \" without it being in their job.\\r\\n\");\n+            c.disconnect(true, false);\n+            return;\n         }\n         if (skillid % 10000000 > 999 && skillid % 10000000 < 1003) {\n             int total = 0;\n@@ -63,7 +64,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         Skill skill = SkillFactory.getSkill(skillid);\n         int curLevel = player.getSkillLevel(skill);\n         if ((remainingSp > 0 && curLevel + 1 <= (skill.isFourthJob() ? player.getMasterLevel(skill) : skill.getMaxLevel()))) {\n-        \tif (!isBeginnerSkill) {\n+            if (!isBeginnerSkill) {\n                 player.setRemainingSp(player.getRemainingSpBySkill(GameConstants.getSkillBook(skillid/10000)) - 1, GameConstants.getSkillBook(skillid/10000));\n             }       \t\n             player.updateSingleStat(MapleStat.AVAILABLESP, player.getRemainingSpBySkill(GameConstants.getSkillBook(skillid/10000)));"}, {"sha": "b331ff44e630c36c0995e8102c0f36c75e5bcfb3", "filename": "src/net/server/channel/handlers/UseCashItemHandler.java", "status": "modified", "additions": 58, "deletions": 61, "changes": 119, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/net/server/channel/handlers/UseCashItemHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/net/server/channel/handlers/UseCashItemHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/UseCashItemHandler.java?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -63,7 +63,7 @@\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         final MapleCharacter player = c.getPlayer();\n         if (System.currentTimeMillis() - player.getLastUsedCashItem() < 3000) {\n-            player.dropMessage(1, \"You have used a cash item recently. Wait a moment and try again.\");\n+            player.dropMessage(1, \"You have used a cash item recently. Wait a moment, then try again.\");\n             c.announce(MaplePacketCreator.enableActions());\n             return;\n         }\n@@ -83,6 +83,11 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             return;\n         }\n         if (itemType == 505) { // AP/SP reset\n+            if(!player.isAlive()) {\n+                c.announce(MaplePacketCreator.enableActions());\n+                return;\n+            }\n+            \n             if (itemId > 5050000) {\n                 int SPTo = slea.readInt();\n                 int SPFrom = slea.readInt();\n@@ -101,80 +106,76 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 switch (APFrom) {\n                     case 64: // str\n                         if (player.getStr() < 5) {\n+                            c.getPlayer().message(\"You don't have the minimum STR required to swap.\");\n+                            c.announce(MaplePacketCreator.enableActions());\n                             return;\n                         }\n                         player.addStat(1, -1);\n                         break;\n                     case 128: // dex\n                         if (player.getDex() < 5) {\n+                            c.getPlayer().message(\"You don't have the minimum DEX required to swap.\");\n+                            c.announce(MaplePacketCreator.enableActions());\n                             return;\n                         }\n                         player.addStat(2, -1);\n                         break;\n                     case 256: // int\n                         if (player.getInt() < 5) {\n+                            c.getPlayer().message(\"You don't have the minimum INT required to swap.\");\n+                            c.announce(MaplePacketCreator.enableActions());\n                             return;\n                         }\n                         player.addStat(3, -1);\n                         break;\n                     case 512: // luk\n                         if (player.getLuk() < 5) {\n+                            c.getPlayer().message(\"You don't have the minimum LUK required to swap.\");\n+                            c.announce(MaplePacketCreator.enableActions());\n                             return;\n                         }\n                         player.addStat(4, -1);\n                         break;\n                     case 2048: // HP\n                     \tif (APTo != 8192) {\n-                    \t\tc.announce(MaplePacketCreator.enableActions());\n-                    \t\treturn;\n+                            c.getPlayer().message(\"You can only swap HP ability points to MP.\");\n+                            c.announce(MaplePacketCreator.enableActions());\n+                            return;\n                     \t}\n-                        int hplose = 0;\n-                        final int jobid = player.getJob().getId();\n-                        if (jobid == 0 || jobid == 1000 || jobid == 2000 || jobid >= 1200 && jobid <= 1211) { // Beginner\n-                            hplose -= 12;\n-                        } else if (jobid >= 100 && jobid <= 132) { // Warrior\n-                            Skill improvinghplose = SkillFactory.getSkill(1000001);\n-                            int improvinghploseLevel = c.getPlayer().getSkillLevel(improvinghplose);\n-                            hplose -= 24;\n-                            if (improvinghploseLevel >= 1) {\n-                                hplose -= improvinghplose.getEffect(improvinghploseLevel).getY();\n-                            }\n-                        } else if (jobid >= 200 && jobid <= 232) { // Magician\n-                            hplose -= 10;\n-                        } else if (jobid >= 500 && jobid <= 522) { // Pirate\n-                            Skill improvinghplose = SkillFactory.getSkill(5100000);\n-                            int improvinghploseLevel = c.getPlayer().getSkillLevel(improvinghplose);\n-                            hplose -= 22;\n-                            if (improvinghploseLevel > 0) {\n-                                hplose -= improvinghplose.getEffect(improvinghploseLevel).getY();\n-                            }\n-                        } else if (jobid >= 1100 && jobid <= 1111) { // Soul Master\n-                            Skill improvinghplose = SkillFactory.getSkill(11000000);\n-                            int improvinghploseLevel = c.getPlayer().getSkillLevel(improvinghplose);\n-                            hplose -= 27;\n-                            if (improvinghploseLevel >= 1) {\n-                                hplose -= improvinghplose.getEffect(improvinghploseLevel).getY();\n-                            }\n-                        } else if ((jobid >= 1300 && jobid <= 1311) || (jobid >= 1400 && jobid <= 1411)) { // Wind Breaker and Night Walker\n-                            hplose -= 17;\n-                        } else if (jobid >= 300 && jobid <= 322 || jobid >= 400 && jobid <= 422 || jobid >= 2000 && jobid <= 2112) { // Aran\n-                            hplose -= 20;\n-                        } else { // GameMaster\n-                            hplose -= 20;\n+                        \n+                        int hp = player.getHp();\n+                        int level_ = player.getLevel();\n+                        \n+                        boolean canWash_ = true;\n+                        if (hp < level_ * 14 + 148) {\n+                            canWash_ = false;\n+                        }\n+                        \n+                        if (!canWash_) {\n+                            c.getPlayer().message(\"You don't have the minimum HP pool required to swap.\");\n+                            c.announce(MaplePacketCreator.enableActions());\n+                            return;\n                         }\n-                        player.setHp(player.getHp() + hplose);\n-                        player.setMaxHp(player.getMaxHp() + hplose);\n-                        statupdate.add(new Pair<>(MapleStat.HP, player.getHp()));\n-                        statupdate.add(new Pair<>(MapleStat.MAXHP, player.getMaxHp()));\n+                        \n+                        int hplose = -DistributeAPHandler.calcHpChange(player, player.getJob(), true);\n+                        int nextHp = Math.max(1, player.getHp() + hplose), nextMaxHp = Math.max(50, player.getMaxHp() + hplose);\n+\n+                        player.setHp(nextHp);\n+                        player.setMaxHp(nextMaxHp);\n+                        statupdate.add(new Pair<>(MapleStat.HP, nextHp));\n+                        statupdate.add(new Pair<>(MapleStat.MAXHP, nextMaxHp));\n+                        \n                         break;\n                     case 8192: // MP\n                     \tif (APTo != 2048) {\n-                    \t\tc.announce(MaplePacketCreator.enableActions());\n-                    \t\treturn;\n+                            c.getPlayer().message(\"You can only swap MP ability points to HP.\");\n+                            c.announce(MaplePacketCreator.enableActions());\n+                            return;\n                     \t}\n                         int mp = player.getMp();\n                         int level = player.getLevel();\n                         MapleJob job = player.getJob();\n+                        \n                         boolean canWash = true;\n                         if (job.isA(MapleJob.SPEARMAN) && mp < 4 * level + 156) {\n                             canWash = false;\n@@ -185,30 +186,26 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                         } else if (mp < level * 14 + 148) {\n                             canWash = false;\n                         }\n-                        if (canWash) {\n-                            int minmp = 0;\n-                            if (job.isA(MapleJob.WARRIOR) || job.isA(MapleJob.DAWNWARRIOR1) || job.isA(MapleJob.ARAN1)) {\n-                                minmp += 4;\n-                            } else if (job.isA(MapleJob.MAGICIAN) || job.isA(MapleJob.BLAZEWIZARD1)) {\n-                                minmp += 36;\n-                            } else if (job.isA(MapleJob.BOWMAN) || job.isA(MapleJob.WINDARCHER1) || job.isA(MapleJob.THIEF) || job.isA(MapleJob.NIGHTWALKER1)) {\n-                                minmp += 12;\n-                            } else if (job.isA(MapleJob.PIRATE) || job.isA(MapleJob.THUNDERBREAKER1)) {\n-                                minmp += 16;\n-                            } else {\n-                                minmp += 8;\n-                            }                       \n-                            player.setMp(player.getMp() - minmp);\n-                            player.setMaxMp(player.getMaxMp() - minmp);\n-                            statupdate.add(new Pair<>(MapleStat.MP, player.getMp()));\n-                            statupdate.add(new Pair<>(MapleStat.MAXMP, player.getMaxMp()));\n-                            break;\n+                        \n+                        if (!canWash) {\n+                            c.getPlayer().message(\"You don't have the minimum MP pool required to swap.\");\n+                            c.announce(MaplePacketCreator.enableActions());\n+                            return;\n                         }\n+                        \n+                        int mplose = -DistributeAPHandler.calcMpChange(player, job, true);\n+                        int nextMp = Math.max(0, player.getMp() + mplose), nextMaxMp = Math.max(5, player.getMaxMp() + mplose);\n+\n+                        player.setHp(nextMp);\n+                        player.setMaxHp(nextMaxMp);\n+                        statupdate.add(new Pair<>(MapleStat.HP, nextMp));\n+                        statupdate.add(new Pair<>(MapleStat.MAXHP, nextMaxMp));\n+                        break;\n                     default:\n                         c.announce(MaplePacketCreator.updatePlayerStats(MaplePacketCreator.EMPTY_STATUPDATE, true, c.getPlayer()));\n                         return;\n                 }\n-                DistributeAPHandler.addStat(c, APTo);\n+                DistributeAPHandler.addStat(c, APTo, true);\n                 c.announce(MaplePacketCreator.updatePlayerStats(statupdate, true, c.getPlayer()));\n             }\n             remove(c, itemId);"}, {"sha": "381e5c8c53cf864f9efe3ac74eb237a028fc429a", "filename": "src/scripting/AbstractPlayerInteraction.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/scripting/AbstractPlayerInteraction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/scripting/AbstractPlayerInteraction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/AbstractPlayerInteraction.java?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -249,6 +249,8 @@ public void openNpc(int npcid) {\n \t}\n \n \tpublic void openNpc(int npcid, String script) {\n+                if(c.getCM() != null) return;\n+            \n \t\tc.removeClickedNPC();\n \t\tNPCScriptManager.getInstance().dispose(c);\n \t\tNPCScriptManager.getInstance().start(c, npcid, script, null);"}, {"sha": "6a04b9344bf506e131e1d0bf8afc70f267d37204", "filename": "src/server/life/MapleMonster.java", "status": "modified", "additions": 373, "deletions": 159, "changes": 532, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/server/life/MapleMonster.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/server/life/MapleMonster.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleMonster.java?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -31,7 +31,6 @@\n import client.status.MonsterStatusEffect;\n import constants.ServerConstants;\n import constants.skills.FPMage;\n-import constants.skills.Hermit;\n import constants.skills.ILMage;\n import constants.skills.NightLord;\n import constants.skills.NightWalker;\n@@ -51,6 +50,7 @@\n import java.util.LinkedHashSet;\n import java.util.Set;\n import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.locks.ReentrantLock;\n import net.server.world.MapleParty;\n import net.server.world.MaplePartyCharacter;\n@@ -66,12 +66,14 @@\n public class MapleMonster extends AbstractLoadedMapleLife {\n     private ChangeableStats ostats = null;  //unused, v83 WZs offers no support for changeable stats.\n     private MapleMonsterStats stats;\n-    private int hp, mp;\n+    private AtomicInteger hp = new AtomicInteger(1);\n+    private AtomicLong maxHpPlusHeal = new AtomicLong(1);\n+    private int mp;\n     private WeakReference<MapleCharacter> controller = new WeakReference<>(null);\n     private boolean controllerHasAggro, controllerKnowsAboutAggro;\n     private Collection<MonsterListener> listeners = new LinkedList<>();\n     private EnumMap<MonsterStatus, MonsterStatusEffect> stati = new EnumMap<>(MonsterStatus.class);\n-    private ArrayList<MonsterStatus> alreadyBuffed = new ArrayList<MonsterStatus>();\n+    private ArrayList<MonsterStatus> alreadyBuffed = new ArrayList<>();\n     private MapleMap map;\n     private int VenomMultiplier = 0;\n     private boolean fake = false;\n@@ -82,7 +84,9 @@\n     private int team;\n     private final HashMap<Integer, AtomicInteger> takenDamage = new HashMap<>();\n \n+    private ReentrantLock externalLock = new ReentrantLock();\n     private ReentrantLock monsterLock = new ReentrantLock();\n+    private ReentrantLock statiLock = new ReentrantLock();\n \n     public MapleMonster(int id, MapleMonsterStats stats) {\n         super(id);\n@@ -95,18 +99,20 @@ public MapleMonster(MapleMonster monster) {\n     }\n     \n     public void lockMonster() {\n-        monsterLock.lock();\n+        externalLock.lock();\n     }\n     \n     public void unlockMonster() {\n-        monsterLock.unlock();\n+        externalLock.unlock();\n     }\n \n     private void initWithStats(MapleMonsterStats stats) {\n         setStance(5);\n         this.stats = stats;\n-        hp = stats.getHp();\n+        hp.set(stats.getHp());\n         mp = stats.getMp();\n+        \n+        maxHpPlusHeal.set(hp.get());\n     }\n \n     public void disableDrops() {\n@@ -122,11 +128,11 @@ public void setMap(MapleMap map) {\n     }\n \n     public int getHp() {\n-        return hp;\n+        return hp.get();\n     }\n \n     public void setHp(int hp) {\n-        this.hp = hp;\n+        this.hp.set(hp);\n     }\n \n     public int getMaxHp() {\n@@ -209,12 +215,13 @@ public synchronized void damage(MapleCharacter from, int damage) { // may be poi\n         if (!isAlive()) {\n             return;\n         }\n-        int trueDamage = Math.min(hp, damage); // since magic happens otherwise B^)\n+        int curHp = hp.get();\n+        int trueDamage = Math.min(curHp, damage); // since magic happens otherwise B^)\n         \n         if(ServerConstants.USE_DEBUG == true) from.dropMessage(5, \"Hitted MOB \" + this.getId() + \", OID \" + this.getObjectId());\n         dispatchMonsterDamaged(from, trueDamage);\n \n-        hp -= trueDamage;\n+        hp.set(curHp - trueDamage);\n         if (!takenDamage.containsKey(from.getId())) {\n             takenDamage.put(from.getId(), new AtomicInteger(trueDamage));\n         } else {\n@@ -225,7 +232,7 @@ public synchronized void damage(MapleCharacter from, int damage) { // may be poi\n             from.setPlayerAggro(this.hashCode());\n             from.getMap().broadcastBossHpMessage(this, this.hashCode(), makeBossHPBarPacket(), getPosition());\n         } else if (!isBoss()) {\n-            int remainingHP = (int) Math.max(1, hp * 100f / getMaxHp());\n+            int remainingHP = (int) Math.max(1, hp.get() * 100f / getMaxHp());\n             byte[] packet = MaplePacketCreator.showMonsterHP(getObjectId(), remainingHP);\n             if (from.getParty() != null) {\n                 for (MaplePartyCharacter mpc : from.getParty().getMembers()) {\n@@ -241,17 +248,24 @@ public synchronized void damage(MapleCharacter from, int damage) { // may be poi\n     }\n \n     public void heal(int hp, int mp) {\n+        int hpHealed = hp;\n         int hp2Heal = getHp() + hp;\n         int mp2Heal = getMp() + mp;\n-        if (hp2Heal >= getMaxHp()) {\n-            hp2Heal = getMaxHp();\n+        \n+        int maxHp = getMaxHp();\n+        int maxMp = getMaxMp();\n+        if (hp2Heal >= maxHp) {\n+            hpHealed = hp2Heal - maxHp;\n+            hp2Heal = maxHp;\n         }\n-        if (mp2Heal >= getMaxMp()) {\n-            mp2Heal = getMaxMp();\n+        if (mp2Heal >= maxMp) {\n+            mp2Heal = maxMp;\n         }\n         setHp(hp2Heal);\n         setMp(mp2Heal);\n         getMap().broadcastMessage(MaplePacketCreator.healMonster(getObjectId(), hp));\n+        \n+        maxHpPlusHeal.addAndGet(hpHealed);\n     }\n \n     public boolean isAttackedBy(MapleCharacter chr) {\n@@ -273,7 +287,7 @@ private void distributeExperienceToParty(int pid, int exp, int killer, Set<Maple\n         }\n             \n         int partyLevel = 0;\n-        int leechMinLevel = (ServerConstants.USE_UNDERLEVELED_EXP_BLOCK) ? getLevel() - 20 : 0;    //NO EXP WILL BE GIVEN for those who are underleveled!\n+        int leechMinLevel = (ServerConstants.USE_UNDERLEVELED_EXP_BLOCK) ? getLevel() - ServerConstants.MIN_UNDERLEVEL_FOR_EXP_GAIN : 0;    //NO EXP WILL BE GIVEN for those who are underleveled!\n \n         int leechCount = 0;\n         for (MapleCharacter mc : members) {\n@@ -307,15 +321,15 @@ public void distributeExperience(int killerId) {\n             return;\n         }\n         int exp = getExp();\n-        int totalHealth = getMaxHp();\n+        long totalHealth = maxHpPlusHeal.get();\n         Map<Integer, Integer> expDist = new HashMap<>();\n         Map<Integer, Integer> partyExp = new HashMap<>();\n         \n-        float exp8 = (0.8f * exp); // 80% of pool is split amongst all the damagers\n-        float exp2 = (0.2f * exp); // 20% of pool goes to the killer or his/her party\n+        float exp8perHp = (0.8f * exp) / totalHealth;   // 80% of pool is split amongst all the damagers\n+        float exp2 = (0.2f * exp);                      // 20% of pool goes to the killer or his/her party\n         \n         for (Entry<Integer, AtomicInteger> damage : takenDamage.entrySet()) {\n-            expDist.put(damage.getKey(), (int) (Math.min((exp8 * damage.getValue().get()) / totalHealth, Integer.MAX_VALUE)));\n+            expDist.put(damage.getKey(), (int) (Math.min((exp8perHp * damage.getValue().get()), Integer.MAX_VALUE)));\n         }\n         \n         Collection<MapleCharacter> chrs = map.getCharacters();\n@@ -333,7 +347,7 @@ public void distributeExperience(int killerId) {\n                     long pXP = (long)xp + (partyExp.containsKey(pID) ? partyExp.get(pID) : 0);\n                     partyExp.put(pID, (int)Math.min(pXP, Integer.MAX_VALUE));\n                 } else {\n-                    if(!ServerConstants.USE_UNDERLEVELED_EXP_BLOCK || mc.getLevel() >= getLevel() - 20) {\n+                    if(!ServerConstants.USE_UNDERLEVELED_EXP_BLOCK || mc.getLevel() >= getLevel() - ServerConstants.MIN_UNDERLEVEL_FOR_EXP_GAIN) {\n                         //NO EXP WILL BE GIVEN for those who are underleveled!\n                         giveExpToCharacter(mc, xp, isKiller, 1);\n                     } else {\n@@ -379,8 +393,14 @@ public void giveExpToCharacter(MapleCharacter attacker, int exp, boolean isKille\n                         personalExp *= 1.0 + (holySymbol.doubleValue() / 100.0);\n                     }\n                 }\n-                if (stati.containsKey(MonsterStatus.SHOWDOWN)) {\n-                    personalExp *= (stati.get(MonsterStatus.SHOWDOWN).getStati().get(MonsterStatus.SHOWDOWN).doubleValue() / 100.0 + 1.0);\n+                \n+                statiLock.lock();\n+                try {\n+                    if (stati.containsKey(MonsterStatus.SHOWDOWN)) {\n+                        personalExp *= (stati.get(MonsterStatus.SHOWDOWN).getStati().get(MonsterStatus.SHOWDOWN).doubleValue() / 100.0 + 1.0);\n+                    }\n+                } finally {\n+                    statiLock.unlock();\n                 }\n             }\n             \n@@ -393,9 +413,10 @@ public void giveExpToCharacter(MapleCharacter attacker, int exp, boolean isKille\n     public MapleCharacter killBy(final MapleCharacter killer) {\n         distributeExperience(killer != null ? killer.getId() : 0);\n \n-        if (getController() != null) { // this can/should only happen when a hidden gm attacks the monster\n-            getController().getClient().announce(MaplePacketCreator.stopControllingMonster(this.getObjectId()));\n-            getController().stopControllingMonster(this);\n+        MapleCharacter controller = getController();\n+        if (controller != null) { // this can/should only happen when a hidden gm attacks the monster\n+            controller.getClient().announce(MaplePacketCreator.stopControllingMonster(this.getObjectId()));\n+            controller.stopControllingMonster(this);\n         }\n \n         final List<Integer> toSpawn = this.getRevives(); // this doesn't work (?)\n@@ -427,24 +448,26 @@ public MapleCharacter killBy(final MapleCharacter killer) {\n                 }\n             }\n             \n-            TimerManager.getInstance().schedule(new Runnable() {\n-                @Override\n-                public void run() {\n-                    for (Integer mid : toSpawn) {\n-                        final MapleMonster mob = MapleLifeFactory.getMonster(mid);\n-                        mob.setPosition(getPosition());\n-                        if (dropsDisabled()) {\n-                            mob.disableDrops();\n-                        }\n-                        reviveMap.spawnMonster(mob);\n-                        \n-                        if(mob.getId() >= 8810010 && mob.getId() <= 8810017 && reviveMap.isHorntailDefeated()) {\n-                            for(int i = 8810018; i >= 8810010; i--)\n-                                reviveMap.killMonster(reviveMap.getMonsterById(i), killer, true);\n+            if(toSpawn.size() > 0) {\n+                TimerManager.getInstance().schedule(new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        for (Integer mid : toSpawn) {\n+                            final MapleMonster mob = MapleLifeFactory.getMonster(mid);\n+                            mob.setPosition(getPosition());\n+                            if (dropsDisabled()) {\n+                                mob.disableDrops();\n+                            }\n+                            reviveMap.spawnMonster(mob);\n+\n+                            if(mob.getId() >= 8810010 && mob.getId() <= 8810017 && reviveMap.isHorntailDefeated()) {\n+                                for(int i = 8810018; i >= 8810010; i--)\n+                                    reviveMap.killMonster(reviveMap.getMonsterById(i), killer, true);\n+                            }\n                         }\n                     }\n-                }\n-            }, getAnimationTime(\"die1\"));\n+                }, getAnimationTime(\"die1\"));\n+            }\n         }\n         else {  // is this even necessary?\n             System.out.println(\"[CRITICAL LOSS] toSpawn is null for \" + this.getName());\n@@ -468,7 +491,7 @@ public void dispatchMonsterKilled() {\n         }\n     }\n     \n-    public void dispatchMonsterDamaged(MapleCharacter from, int trueDmg) {\n+    private void dispatchMonsterDamaged(MapleCharacter from, int trueDmg) {\n         for (MonsterListener listener : listeners.toArray(new MonsterListener[listeners.size()])) {\n             listener.monsterDamaged(from, trueDmg);\n         }\n@@ -488,15 +511,25 @@ private int getHighestDamagerId() {\n     }\n \n     public boolean isAlive() {\n-        return this.hp > 0;\n+        return this.hp.get() > 0;\n     }\n \n     public MapleCharacter getController() {\n-        return controller.get();\n+        monsterLock.lock();\n+        try {\n+            return controller.get();\n+        } finally {\n+            monsterLock.unlock();\n+        }\n     }\n \n     public void setController(MapleCharacter controller) {\n-        this.controller = new WeakReference<>(controller);\n+        monsterLock.lock();\n+        try {\n+            this.controller = new WeakReference<>(controller);\n+        } finally {\n+            monsterLock.unlock();\n+        }\n     }\n \n     public void switchController(MapleCharacter newController, boolean immediateAggro) {\n@@ -521,25 +554,45 @@ public void addListener(MonsterListener listener) {\n     }\n \n     public boolean isControllerHasAggro() {\n-        return fake ? false : controllerHasAggro;\n+        monsterLock.lock();\n+        try {\n+            return fake ? false : controllerHasAggro;\n+        } finally {\n+            monsterLock.unlock();\n+        }\n     }\n \n     public void setControllerHasAggro(boolean controllerHasAggro) {\n-        if (fake) {\n-            return;\n+        monsterLock.lock();\n+        try {\n+            if (fake) {\n+                return;\n+            }\n+            this.controllerHasAggro = controllerHasAggro;\n+        } finally {\n+            monsterLock.unlock();\n         }\n-        this.controllerHasAggro = controllerHasAggro;\n     }\n \n     public boolean isControllerKnowsAboutAggro() {\n-        return fake ? false : controllerKnowsAboutAggro;\n+        monsterLock.lock();\n+        try {\n+            return fake ? false : controllerKnowsAboutAggro;\n+        } finally {\n+            monsterLock.unlock();\n+        }\n     }\n \n     public void setControllerKnowsAboutAggro(boolean controllerKnowsAboutAggro) {\n-        if (fake) {\n-            return;\n+        monsterLock.lock();\n+        try {\n+            if (fake) {\n+                return;\n+            }\n+            this.controllerKnowsAboutAggro = controllerKnowsAboutAggro;\n+        } finally {\n+            monsterLock.unlock();\n         }\n-        this.controllerKnowsAboutAggro = controllerKnowsAboutAggro;\n     }\n \n     public byte[] makeBossHPBarPacket() {\n@@ -560,11 +613,17 @@ public void sendSpawnData(MapleClient c) {\n         } else {\n             c.announce(MaplePacketCreator.spawnMonster(this, false));\n         }\n-        if (stati.size() > 0) {\n-            for (final MonsterStatusEffect mse : this.stati.values()) {\n-                c.announce(MaplePacketCreator.applyMonsterStatus(getObjectId(), mse, null));\n+        statiLock.lock();\n+        try {\n+            if (stati.size() > 0) {\n+                for (final MonsterStatusEffect mse : this.stati.values()) {\n+                    c.announce(MaplePacketCreator.applyMonsterStatus(getObjectId(), mse, null));\n+                }\n             }\n+        } finally {\n+            statiLock.unlock();\n         }\n+        \n         if (hasBossHPBar()) {\n             if (this.getMap().countMonster(8810026) > 0 && this.getMap().getId() == 240060200) {\n                 this.getMap().killAllMonsters();\n@@ -588,19 +647,52 @@ public boolean isMobile() {\n         return stats.isMobile();\n     }\n \n-    public ElementalEffectiveness getEffectiveness(Element e) {\n-        if (stati.size() > 0 && stati.get(MonsterStatus.DOOM) != null) {\n-            return ElementalEffectiveness.NORMAL; // like blue snails\n+    public ElementalEffectiveness getElementalEffectiveness(Element e) {\n+        statiLock.lock();\n+        try {\n+            if (stati.get(MonsterStatus.DOOM) != null) {\n+                return ElementalEffectiveness.NORMAL; // like blue snails\n+            }\n+        } finally {\n+            statiLock.unlock();\n+        }\n+        \n+        monsterLock.lock();\n+        try {\n+            return stats.getEffectiveness(e);\n+        } finally {\n+            monsterLock.unlock();\n+        }\n+    }\n+    \n+    private ElementalEffectiveness getMonsterEffectiveness(Element e) {\n+        monsterLock.lock();\n+        try {\n+            return stats.getEffectiveness(e);\n+        } finally {\n+            monsterLock.unlock();\n         }\n-        return stats.getEffectiveness(e);\n     }\n \n+    private int broadcastStatusEffect(final MonsterStatusEffect status) {\n+        int animationTime = status.getSkill().getAnimationTime();\n+        byte[] packet = MaplePacketCreator.applyMonsterStatus(getObjectId(), status, null);\n+        map.broadcastMessage(packet, getPosition());\n+        \n+        MapleCharacter controller = getController();\n+        if (controller != null && !controller.isMapObjectVisible(this)) {\n+            controller.getClient().announce(packet);\n+        }\n+        \n+        return animationTime;\n+    }\n+    \n     public boolean applyStatus(MapleCharacter from, final MonsterStatusEffect status, boolean poison, long duration) {\n         return applyStatus(from, status, poison, duration, false);\n     }\n \n     public boolean applyStatus(MapleCharacter from, final MonsterStatusEffect status, boolean poison, long duration, boolean venom) {\n-        switch (stats.getEffectiveness(status.getSkill().getElement())) {\n+        switch (getMonsterEffectiveness(status.getSkill().getElement())) {\n             case IMMUNE:\n             case STRONG:\n             case NEUTRAL:\n@@ -609,27 +701,27 @@ public boolean applyStatus(MapleCharacter from, final MonsterStatusEffect status\n             case WEAK:\n                 break;\n             default: {\n-                System.out.println(\"Unknown elemental effectiveness: \" + stats.getEffectiveness(status.getSkill().getElement()));\n+                System.out.println(\"Unknown elemental effectiveness: \" + getMonsterEffectiveness(status.getSkill().getElement()));\n                 return false;\n             }\n         }\n \n         if (status.getSkill().getId() == FPMage.ELEMENT_COMPOSITION) { // fp compo\n-            ElementalEffectiveness effectiveness = stats.getEffectiveness(Element.POISON);\n+            ElementalEffectiveness effectiveness = getMonsterEffectiveness(Element.POISON);\n             if (effectiveness == ElementalEffectiveness.IMMUNE || effectiveness == ElementalEffectiveness.STRONG) {\n                 return false;\n             }\n         } else if (status.getSkill().getId() == ILMage.ELEMENT_COMPOSITION) { // il compo\n-            ElementalEffectiveness effectiveness = stats.getEffectiveness(Element.ICE);\n+            ElementalEffectiveness effectiveness = getMonsterEffectiveness(Element.ICE);\n             if (effectiveness == ElementalEffectiveness.IMMUNE || effectiveness == ElementalEffectiveness.STRONG) {\n                 return false;\n             }\n         } else if (status.getSkill().getId() == NightLord.VENOMOUS_STAR || status.getSkill().getId() == Shadower.VENOMOUS_STAB || status.getSkill().getId() == NightWalker.VENOM) {// venom\n-            if (stats.getEffectiveness(Element.POISON) == ElementalEffectiveness.WEAK) {\n+            if (getMonsterEffectiveness(Element.POISON) == ElementalEffectiveness.WEAK) {\n                 return false;\n             }\n         }\n-        if (poison && getHp() <= 1) {\n+        if (poison && hp.get() <= 1) {\n             return false;\n         }\n \n@@ -642,17 +734,24 @@ public boolean applyStatus(MapleCharacter from, final MonsterStatusEffect status\n             }\n         }\n \n-        for (MonsterStatus stat : statis.keySet()) {\n-            final MonsterStatusEffect oldEffect = stati.get(stat);\n-            if (oldEffect != null) {\n-                oldEffect.removeActiveStatus(stat);\n-                if (oldEffect.getStati().isEmpty()) {\n-                    oldEffect.cancelTask();\n-                    oldEffect.cancelDamageSchedule();\n+        if(statis.size() > 0) {\n+            statiLock.lock();\n+            try {\n+                for (MonsterStatus stat : statis.keySet()) {\n+                    final MonsterStatusEffect oldEffect = stati.get(stat);\n+                    if (oldEffect != null) {\n+                        oldEffect.removeActiveStatus(stat);\n+                        if (oldEffect.getStati().isEmpty()) {\n+                            oldEffect.cancelTask();\n+                            oldEffect.cancelDamageSchedule();\n+                        }\n+                    }\n                 }\n+            } finally {\n+                statiLock.unlock();\n             }\n         }\n-\n+        \n         TimerManager timerManager = TimerManager.getInstance();\n         final Runnable cancelTask = new Runnable() {\n \n@@ -661,26 +760,38 @@ public void run() {\n                 if (isAlive()) {\n                     byte[] packet = MaplePacketCreator.cancelMonsterStatus(getObjectId(), status.getStati());\n                     map.broadcastMessage(packet, getPosition());\n-                    if (getController() != null && !getController().isMapObjectVisible(MapleMonster.this)) {\n-                        getController().getClient().announce(packet);\n+                    \n+                    MapleCharacter controller = getController();\n+                    if (controller != null && !controller.isMapObjectVisible(MapleMonster.this)) {\n+                        controller.getClient().announce(packet);\n                     }\n                 }\n-                for (MonsterStatus stat : status.getStati().keySet()) {\n-                    stati.remove(stat);\n+                \n+                statiLock.lock();\n+                try {\n+                    for (MonsterStatus stat : status.getStati().keySet()) {\n+                        stati.remove(stat);\n+                    }\n+                } finally {\n+                    statiLock.unlock();\n                 }\n+                \n                 setVenomMulti(0);\n                 status.cancelDamageSchedule();\n             }\n         };\n+        \n+        int animationTime;\n         if (poison) {\n             int poisonLevel = from.getSkillLevel(status.getSkill());\n             int poisonDamage = Math.min(Short.MAX_VALUE, (int) (getMaxHp() / (70.0 - poisonLevel) + 0.999));\n             status.setValue(MonsterStatus.POISON, Integer.valueOf(poisonDamage));\n+            animationTime = broadcastStatusEffect(status);\n             status.setDamageSchedule(timerManager.register(new DamageTask(poisonDamage, from, status, cancelTask, 0), 1000, 1000));\n         } else if (venom) {\n             if (from.getJob() == MapleJob.NIGHTLORD || from.getJob() == MapleJob.SHADOWER || from.getJob().isA(MapleJob.NIGHTWALKER3)) {\n-                int poisonLevel, matk, id = from.getJob().getId();\n-                int skill = (id == 412 ? NightLord.VENOMOUS_STAR : (id == 422 ? Shadower.VENOMOUS_STAB : NightWalker.VENOM));\n+                int poisonLevel, matk, jobid = from.getJob().getId();\n+                int skill = (jobid == 412 ? NightLord.VENOMOUS_STAR : (jobid == 422 ? Shadower.VENOMOUS_STAB : NightWalker.VENOM));\n                 poisonLevel = from.getSkillLevel(SkillFactory.getSkill(skill));\n                 if (poisonLevel <= 0) {\n                     return false;\n@@ -699,13 +810,19 @@ public void run() {\n                 }\n                 poisonDamage = Math.min(Short.MAX_VALUE, poisonDamage);\n                 status.setValue(MonsterStatus.VENOMOUS_WEAPON, Integer.valueOf(poisonDamage));\n+                status.setValue(MonsterStatus.POISON, Integer.valueOf(poisonDamage));\n+                animationTime = broadcastStatusEffect(status);\n                 status.setDamageSchedule(timerManager.register(new DamageTask(poisonDamage, from, status, cancelTask, 0), 1000, 1000));\n             } else {\n                 return false;\n             }\n-\n+            /*\n         } else if (status.getSkill().getId() == Hermit.SHADOW_WEB || status.getSkill().getId() == NightWalker.SHADOW_WEB) { //Shadow Web\n-            status.setDamageSchedule(timerManager.schedule(new DamageTask((int) (getMaxHp() / 50.0 + 0.999), from, status, cancelTask, 1), 3500));\n+            int webDamage = (int) (getMaxHp() / 50.0 + 0.999);\n+            status.setValue(MonsterStatus.SHADOW_WEB, Integer.valueOf(webDamage));\n+            animationTime = broadcastStatusEffect(status);\n+            status.setDamageSchedule(timerManager.schedule(new DamageTask(webDamage, from, status, cancelTask, 1), 3500));\n+            */\n         } else if (status.getSkill().getId() == 4121004 || status.getSkill().getId() == 4221004) { // Ninja Ambush\n             final Skill skill = SkillFactory.getSkill(status.getSkill().getId());\n             final byte level = from.getSkillLevel(skill);\n@@ -715,19 +832,23 @@ public void run() {\n              }*/\n \n             status.setValue(MonsterStatus.NINJA_AMBUSH, Integer.valueOf(damage));\n+            animationTime = broadcastStatusEffect(status);\n             status.setDamageSchedule(timerManager.register(new DamageTask(damage, from, status, cancelTask, 2), 1000, 1000));\n+        } else {\n+            animationTime = broadcastStatusEffect(status);\n         }\n-        for (MonsterStatus stat : status.getStati().keySet()) {\n-            stati.put(stat, status);\n-            alreadyBuffed.add(stat);\n-        }\n-        int animationTime = status.getSkill().getAnimationTime();\n-        byte[] packet = MaplePacketCreator.applyMonsterStatus(getObjectId(), status, null);\n-        map.broadcastMessage(packet, getPosition());\n-        if (getController() != null && !getController().isMapObjectVisible(this)) {\n-            getController().getClient().announce(packet);\n+        \n+        statiLock.lock();\n+        try {\n+            for (MonsterStatus stat : status.getStati().keySet()) {\n+                stati.put(stat, status);\n+                alreadyBuffed.add(stat);\n+            }\n+        } finally {\n+            statiLock.unlock();\n         }\n-        status.setCancelTask(timerManager.schedule(cancelTask, duration + animationTime));\n+        \n+        status.setCancelTask(timerManager.schedule(cancelTask, duration + animationTime - 100));\n         return true;\n     }\n \n@@ -740,54 +861,92 @@ public void run() {\n                 if (isAlive()) {\n                     byte[] packet = MaplePacketCreator.cancelMonsterStatus(getObjectId(), stats);\n                     map.broadcastMessage(packet, getPosition());\n-                    if (getController() != null && !getController().isMapObjectVisible(MapleMonster.this)) {\n-                        getController().getClient().announce(packet);\n+                    \n+                    MapleCharacter controller = getController();\n+                    if (controller != null && !controller.isMapObjectVisible(MapleMonster.this)) {\n+                        controller.getClient().announce(packet);\n                     }\n-                    for (final MonsterStatus stat : stats.keySet()) {\n-                        stati.remove(stat);\n+                    \n+                    statiLock.lock();\n+                    try {\n+                        for (final MonsterStatus stat : stats.keySet()) {\n+                            stati.remove(stat);\n+                        }\n+                    } finally {\n+                        statiLock.unlock();\n                     }\n                 }\n             }\n         };\n         final MonsterStatusEffect effect = new MonsterStatusEffect(stats, null, skill, true);\n         byte[] packet = MaplePacketCreator.applyMonsterStatus(getObjectId(), effect, reflection);\n         map.broadcastMessage(packet, getPosition());\n-        for (MonsterStatus stat : stats.keySet()) {\n-            stati.put(stat, effect);\n-            alreadyBuffed.add(stat);\n+        \n+        statiLock.lock();\n+        try {\n+            for (MonsterStatus stat : stats.keySet()) {\n+                stati.put(stat, effect);\n+                alreadyBuffed.add(stat);\n+            }\n+        } finally {\n+            statiLock.unlock();\n         }\n-        if (getController() != null && !getController().isMapObjectVisible(this)) {\n-            getController().getClient().announce(packet);\n+        \n+        MapleCharacter controller = getController();\n+        if (controller != null && !controller.isMapObjectVisible(this)) {\n+            controller.getClient().announce(packet);\n         }\n         effect.setCancelTask(timerManager.schedule(cancelTask, duration));\n     }\n \n     public void debuffMob(int skillid) {\n         //skillid is not going to be used for now until I get warrior debuff working\n         MonsterStatus[] stats = {MonsterStatus.WEAPON_ATTACK_UP, MonsterStatus.WEAPON_DEFENSE_UP, MonsterStatus.MAGIC_ATTACK_UP, MonsterStatus.MAGIC_DEFENSE_UP};\n-        for (int i = 0; i < stats.length; i++) {\n-            if (isBuffed(stats[i])) {\n-                final MonsterStatusEffect oldEffect = stati.get(stats[i]);\n-                byte[] packet = MaplePacketCreator.cancelMonsterStatus(getObjectId(), oldEffect.getStati());\n-                map.broadcastMessage(packet, getPosition());\n-                if (getController() != null && !getController().isMapObjectVisible(MapleMonster.this)) {\n-                    getController().getClient().announce(packet);\n+        statiLock.lock();\n+        try {\n+            for (int i = 0; i < stats.length; i++) {\n+                if (isBuffed(stats[i])) {\n+                    final MonsterStatusEffect oldEffect = stati.get(stats[i]);\n+                    byte[] packet = MaplePacketCreator.cancelMonsterStatus(getObjectId(), oldEffect.getStati());\n+                    map.broadcastMessage(packet, getPosition());\n+\n+                    MapleCharacter controller = getController();\n+                    if (controller != null && !controller.isMapObjectVisible(MapleMonster.this)) {\n+                        controller.getClient().announce(packet);\n+                    }\n+                    stati.remove(stats[i]);\n                 }\n-                stati.remove(stats);\n             }\n+        } finally {\n+            statiLock.unlock();\n         }\n     }\n \n     public boolean isBuffed(MonsterStatus status) {\n-        return stati.containsKey(status);\n+        statiLock.lock();\n+        try {\n+            return stati.containsKey(status);\n+        } finally {\n+            statiLock.unlock();\n+        }\n     }\n \n     public void setFake(boolean fake) {\n-        this.fake = fake;\n+        monsterLock.lock();\n+        try {\n+            this.fake = fake;\n+        } finally {\n+            monsterLock.unlock();\n+        }\n     }\n \n     public boolean isFake() {\n-        return fake;\n+        monsterLock.lock();\n+        try {\n+            return fake;\n+        } finally {\n+            monsterLock.unlock();\n+        }\n     }\n \n     public MapleMap getMap() {\n@@ -806,17 +965,29 @@ public boolean canUseSkill(MobSkill toUse) {\n         if (toUse == null) {\n             return false;\n         }\n-        for (Pair<Integer, Integer> skill : usedSkills) {\n-            if (skill.getLeft() == toUse.getSkillId() && skill.getRight() == toUse.getSkillLevel()) {\n-                return false;\n+        \n+        monsterLock.lock();\n+        try {\n+            for (Pair<Integer, Integer> skill : usedSkills) {\n+                if (skill.getLeft() == toUse.getSkillId() && skill.getRight() == toUse.getSkillLevel()) {\n+                    return false;\n+                }\n             }\n+        } finally {\n+            monsterLock.unlock();\n         }\n+        \n         if (toUse.getLimit() > 0) {\n-            if (this.skillsUsed.containsKey(new Pair<>(toUse.getSkillId(), toUse.getSkillLevel()))) {\n-                int times = this.skillsUsed.get(new Pair<>(toUse.getSkillId(), toUse.getSkillLevel()));\n-                if (times >= toUse.getLimit()) {\n-                    return false;\n+            monsterLock.lock();\n+            try {\n+                if (this.skillsUsed.containsKey(new Pair<>(toUse.getSkillId(), toUse.getSkillLevel()))) {\n+                    int times = this.skillsUsed.get(new Pair<>(toUse.getSkillId(), toUse.getSkillLevel()));\n+                    if (times >= toUse.getLimit()) {\n+                        return false;\n+                    }\n                 }\n+            } finally {\n+                monsterLock.unlock();\n             }\n         }\n         if (toUse.getSkillId() == 200) {\n@@ -835,36 +1006,47 @@ public boolean canUseSkill(MobSkill toUse) {\n     }\n \n     public void usedSkill(final int skillId, final int level, long cooltime) {\n-        this.usedSkills.add(new Pair<>(skillId, level));\n-        if (this.skillsUsed.containsKey(new Pair<>(skillId, level))) {\n-            int times = this.skillsUsed.get(new Pair<>(skillId, level)) + 1;\n-            this.skillsUsed.remove(new Pair<>(skillId, level));\n-            this.skillsUsed.put(new Pair<>(skillId, level), times);\n-        } else {\n-            this.skillsUsed.put(new Pair<>(skillId, level), 1);\n+        monsterLock.lock();\n+        try {\n+            this.usedSkills.add(new Pair<>(skillId, level));\n+            if (this.skillsUsed.containsKey(new Pair<>(skillId, level))) {\n+                int times = this.skillsUsed.get(new Pair<>(skillId, level)) + 1;\n+                this.skillsUsed.remove(new Pair<>(skillId, level));\n+                this.skillsUsed.put(new Pair<>(skillId, level), times);\n+            } else {\n+                this.skillsUsed.put(new Pair<>(skillId, level), 1);\n+            }\n+        } finally {\n+            monsterLock.unlock();\n         }\n+        \n         final MapleMonster mons = this;\n         TimerManager tMan = TimerManager.getInstance();\n         tMan.schedule(\n-                new Runnable() {\n+            new Runnable() {\n \n-                    @Override\n-                    public void run() {\n-                        mons.clearSkill(skillId, level);\n-                    }\n-                }, cooltime);\n+                @Override\n+                public void run() {\n+                    mons.clearSkill(skillId, level);\n+                }\n+            }, cooltime);\n     }\n \n     public void clearSkill(int skillId, int level) {\n-        int index = -1;\n-        for (Pair<Integer, Integer> skill : usedSkills) {\n-            if (skill.getLeft() == skillId && skill.getRight() == level) {\n-                index = usedSkills.indexOf(skill);\n-                break;\n+        monsterLock.lock();\n+        try {\n+            int index = -1;\n+            for (Pair<Integer, Integer> skill : usedSkills) {\n+                if (skill.getLeft() == skillId && skill.getRight() == level) {\n+                    index = usedSkills.indexOf(skill);\n+                    break;\n+                }\n             }\n-        }\n-        if (index != -1) {\n-            usedSkills.remove(index);\n+            if (index != -1) {\n+                usedSkills.remove(index);\n+            }\n+        } finally {\n+            monsterLock.unlock();\n         }\n     }\n \n@@ -900,16 +1082,19 @@ private DamageTask(int dealDamage, MapleCharacter chr, MonsterStatusEffect statu\n \n         @Override\n         public void run() {\n+            int curHp = hp.get();\n+            if(curHp <= 0) return;\n+            \n             int damage = dealDamage;\n-            if (damage >= hp) {\n-                damage = hp - 1;\n+            if (damage >= curHp) {\n+                damage = curHp - 1;\n                 if (type == 1 || type == 2) {\n                     map.broadcastMessage(MaplePacketCreator.damageMonster(getObjectId(), damage), getPosition());\n                     cancelTask.run();\n                     status.getCancelTask().cancel(false);\n                 }\n             }\n-            if (hp > 1 && damage > 0) {\n+            if (curHp > 1 && damage > 0) {\n                 damage(chr, damage);\n                 if (type == 1) {\n                     map.broadcastMessage(MaplePacketCreator.damageMonster(getObjectId(), damage), getPosition());\n@@ -931,23 +1116,38 @@ public void addStolen(int itemId) {\n     }\n \n     public void setTempEffectiveness(Element e, ElementalEffectiveness ee, long milli) {\n-        final Element fE = e;\n-        final ElementalEffectiveness fEE = stats.getEffectiveness(e);\n-        if (!stats.getEffectiveness(e).equals(ElementalEffectiveness.WEAK)) {\n-            stats.setEffectiveness(e, ee);\n-            TimerManager.getInstance().schedule(new Runnable() {\n+        monsterLock.lock();\n+        try {\n+            final Element fE = e;\n+            final ElementalEffectiveness fEE = stats.getEffectiveness(e);\n+            if (!fEE.equals(ElementalEffectiveness.WEAK)) {\n+                stats.setEffectiveness(e, ee);\n+                TimerManager.getInstance().schedule(new Runnable() {\n \n-                @Override\n-                public void run() {\n-                    stats.removeEffectiveness(fE);\n-                    stats.setEffectiveness(fE, fEE);\n-                }\n-            }, milli);\n+                    @Override\n+                    public void run() {\n+                        monsterLock.lock();\n+                        try {\n+                            stats.removeEffectiveness(fE);\n+                            stats.setEffectiveness(fE, fEE);\n+                        } finally {\n+                            monsterLock.unlock();\n+                        }\n+                    }\n+                }, milli);\n+            }\n+        } finally {\n+            monsterLock.unlock();\n         }\n     }\n \n     public Collection<MonsterStatus> alreadyBuffedStats() {\n-        return Collections.unmodifiableCollection(alreadyBuffed);\n+        statiLock.lock();\n+        try {\n+            return Collections.unmodifiableCollection(alreadyBuffed);\n+        } finally {\n+            statiLock.unlock();\n+        }\n     }\n \n     public BanishInfo getBanish() {\n@@ -967,7 +1167,21 @@ public int getPADamage() {\n     }\n \n     public Map<MonsterStatus, MonsterStatusEffect> getStati() {\n-        return stati;\n+        statiLock.lock();\n+        try {\n+            return Collections.unmodifiableMap(stati);\n+        } finally {\n+            statiLock.unlock();\n+        }\n+    }\n+    \n+    public MonsterStatusEffect getStati(MonsterStatus ms) {\n+        statiLock.lock();\n+        try {\n+            return stati.get(ms);\n+        } finally {\n+            statiLock.unlock();\n+        }\n     }\n     \n     // ---- one can always have fun trying these pieces of codes below in-game rofl ----\n@@ -985,7 +1199,7 @@ public final int getMobMaxHp() {\n     \n     public final void setOverrideStats(final OverrideMonsterStats ostats) {\n         this.ostats = new ChangeableStats(stats, ostats);\n-        this.hp = ostats.getHp();\n+        this.hp.set(ostats.getHp());\n         this.mp = ostats.getMp();\n     }\n \t\n@@ -998,7 +1212,7 @@ public final void changeLevel(final int newLevel, boolean pqMob) {\n             return;\n         }\n         this.ostats = new ChangeableStats(stats, newLevel, pqMob);\n-        this.hp = ostats.getHp();\n+        this.hp.set(ostats.getHp());\n         this.mp = ostats.getMp();\n     }\n     "}, {"sha": "db59f5f0741b015f47356866c842f62ce80281b3", "filename": "src/server/maps/MapleMap.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/server/maps/MapleMap.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/server/maps/MapleMap.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMap.java?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -515,9 +515,9 @@ private void dropFromMonster(final MapleCharacter chr, final MapleMonster mob) {\n         byte d = 1;\n         Point pos = new Point(0, mob.getPosition().y);\n \n-        Map<MonsterStatus, MonsterStatusEffect> stati = mob.getStati();\n-        if (stati.containsKey(MonsterStatus.SHOWDOWN)) {\n-            chRate *= (stati.get(MonsterStatus.SHOWDOWN).getStati().get(MonsterStatus.SHOWDOWN).doubleValue() / 100.0 + 1.0);\n+        MonsterStatusEffect stati = mob.getStati(MonsterStatus.SHOWDOWN);\n+        if (stati != null) {\n+            chRate *= (stati.getStati().get(MonsterStatus.SHOWDOWN).doubleValue() / 100.0 + 1.0);\n         }\n \n         final MapleMonsterInformationProvider mi = MapleMonsterInformationProvider.getInstance();"}, {"sha": "21c7fac711a9d1223e5f54c1c90601f5030a4de9", "filename": "src/tools/DatabaseConnection.java", "status": "modified", "additions": 52, "deletions": 16, "changes": 68, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/tools/DatabaseConnection.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/tools/DatabaseConnection.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/DatabaseConnection.java?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -1,6 +1,8 @@\n package tools;\n \n import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n import java.sql.DriverManager;\n import java.sql.SQLException;\n import com.zaxxer.hikari.HikariConfig;\n@@ -18,13 +20,51 @@\n     \n     public static Connection getConnection() throws SQLException {\n         if(ds != null) {\n-            return ds.getConnection();\n-        } else {\n-            return DriverManager.getConnection(ServerConstants.DB_URL, ServerConstants.DB_USER, ServerConstants.DB_PASS);\n+            try {\n+                return ds.getConnection();\n+            } catch (SQLException sqle) {}\n+        }\n+        \n+        int denies = 0;\n+        while(true) {   // There is no way it can pass with a null out of here\n+            try {\n+                return DriverManager.getConnection(ServerConstants.DB_URL, ServerConstants.DB_USER, ServerConstants.DB_PASS);\n+            } catch (SQLException sqle) {\n+                denies++;\n+                \n+                if(denies == 3) {\n+                    // Give up, return null :3\n+                    FilePrinter.printError(FilePrinter.SQL_EXCEPTION, \"SQL Driver refused to give a connection after \" + denies + \" tries.\");\n+                    return null;\n+                }\n+            }\n+        }\n+    }\n+    \n+    private static int getNumberOfAccounts() {\n+        try {\n+            Connection con = DriverManager.getConnection(ServerConstants.DB_URL, ServerConstants.DB_USER, ServerConstants.DB_PASS);\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT count(*) FROM accounts\")) {\n+                try (ResultSet rs = ps.executeQuery()) {\n+                    rs.next();\n+                    return rs.getInt(1);\n+                }\n+            } finally {\n+                con.close();\n+            }\n+        } catch(SQLException sqle) {\n+            return 20;\n         }\n     }\n     \n     public DatabaseConnection() {\n+        try {\n+            Class.forName(\"com.mysql.jdbc.Driver\"); // touch the mysql driver\n+        } catch (ClassNotFoundException e) {\n+            System.out.println(\"[SEVERE] SQL Driver Not Found. Consider death by clams.\");\n+            e.printStackTrace();\n+        }\n+        \n         ds = null;\n         \n         if(ServerConstants.DB_EXPERIMENTAL_POOL) {\n@@ -36,22 +76,18 @@ public DatabaseConnection() {\n             config.setUsername(ServerConstants.DB_USER);\n             config.setPassword(ServerConstants.DB_PASS);\n             \n-            config.addDataSourceProperty(\"connectionTimeout\", \"30000\");\n-            config.addDataSourceProperty(\"maximumPoolSize\", \"100\");\n+            int poolSize = getNumberOfAccounts() * 10;     // make sure pool size is comfortable for the worst case scenario\n+            if(poolSize < 100) poolSize = 100;\n+            else if(poolSize > 10000) poolSize = 10000;\n             \n-            config.addDataSourceProperty(\"cachePrepStmts\", \"true\");\n-            config.addDataSourceProperty(\"prepStmtCacheSize\", \"250\");\n-            config.addDataSourceProperty(\"prepStmtCacheSqlLimit\", \"2048\");\n+            config.setConnectionTimeout(30 * 1000);\n+            config.setMaximumPoolSize(poolSize);\n+            \n+            config.addDataSourceProperty(\"cachePrepStmts\", true);\n+            config.addDataSourceProperty(\"prepStmtCacheSize\", 250);\n+            config.addDataSourceProperty(\"prepStmtCacheSqlLimit\", 2048);\n \n             ds = new HikariDataSource(config);\n-        } else {\n-            try {\n-                Class.forName(\"com.mysql.jdbc.Driver\"); // touch the mysql driver\n-            } catch (ClassNotFoundException e) {\n-                System.out.println(\"[SEVERE] SQL Driver Not Found. Consider death by clams.\");\n-                e.printStackTrace();\n-                return;\n-            }\n         }\n     }\n }"}, {"sha": "340129765c019aa03f718af9eeb7282e3174467f", "filename": "src/tools/FilePrinter.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/tools/FilePrinter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b/src/tools/FilePrinter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/FilePrinter.java?ref=5f1abf3fb3ca2c8eeb101c9f69d0266b0710fe8b", "patch": "@@ -19,6 +19,7 @@\n             ERROR38 = \"error38.txt\",\n             PACKET_LOG = \"log.txt\",\n             EXCEPTION = \"exceptions.txt\",\n+            SQL_EXCEPTION = \"sqlexceptions.txt\",\n             PACKET_HANDLER = \"PacketHandler/\",\n             PORTAL = \"portals/\",\n             NPC = \"npcs/\","}]}]},
