{"fetchDate": "2019-12-19", "content": [{"sha": "9538c415e1c70eee5da68289d82e12e6abd8a856", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6OTUzOGM0MTVlMWM3MGVlZTVkYTY4Mjg5ZDgyZTEyZTZhYmQ4YTg1Ng==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-03-10T04:30:22Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-03-10T04:30:22Z"}, "message": "Trade results + Map-Ownership & Fishing + P. EXP distribution rework\n\nFixed an issue where players could lose priority over recently dropped items after switching maps.\nAdjusted EXP bonus buffs to also cover party bonus gains.\nFixed items taken back from merchants not properly checking for stacking opportunities in player inventory.\nFixed some merchant references in visitors' player object not being properly cleared when owner closes shop.\nAdjusted merchants to automatically close as soon as the merchant owner finishes maintenance process with it having no items in store.\nAdded trade result opcodes. Trade results now should work almost as intended originally.\nImplemented server-side check for portal distance when deploying player shops and merchants.\nImplemented server-side check for whether local or remote IP is being used when logging in a local/remote server (this should mitigate a few of the issues people may find when trying to log in game world).\nImplemented commands designed for management of opened IO sessions.\nFixed chalkboard not showing up for owner player when changing maps.\nAdded \"time left\" functionality for merchant owners managing the opened store.\nFixed skillbooks not showing properly for other players in the map.\nFixed commands using lowercased-version of content inputted by player.\nImplemented the Fredrick expected fee on using the Store Bank service.\nImplemented \"exclusive invitation management\" in the system. Inviters are notified the invited players are already managing an invite, should it be visually \"in-progress\" for that one.\nImplemented \"map ownership\". Non-map owners are unable to farm in an area if they are not party members with the owner or until the ownership rescinds.\nAdjusted inventory sort feature, now sorting projectile items in such a fashion that commonly stronger versions comes before the basic ones.\nAdded a visual effect that shows up when obtaining Aran skills.\nRevised party EXP gain system. Party bonuses now accounts a fraction of the accumulated EXP gained by members when defeating a mob, and raw EXP gained by a player is kept the same regardless of him/her being in a party or not (thus a bonus being REALLY a bonus).\nImplemented a custom fishing system in the source, on which during \"seasonal\" times (that gets arbitrarily defined by both day-of-year and time-of-day) fishes are more likely to be hooked. Such likelihood also improved depending on the amount of mesos spent as lure.", "tree": {"sha": "a7188387fc4a0c10216c81e4f7f7a6157df7ffec", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/a7188387fc4a0c10216c81e4f7f7a6157df7ffec"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/9538c415e1c70eee5da68289d82e12e6abd8a856", "comment_count": 3, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/9538c415e1c70eee5da68289d82e12e6abd8a856", "html_url": "https://github.com/ronancpl/HeavenMS/commit/9538c415e1c70eee5da68289d82e12e6abd8a856", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/9538c415e1c70eee5da68289d82e12e6abd8a856/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "799870df63f4c855d6e5f828704f7b69c53aa800", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/799870df63f4c855d6e5f828704f7b69c53aa800", "html_url": "https://github.com/ronancpl/HeavenMS/commit/799870df63f4c855d6e5f828704f7b69c53aa800"}], "stats": {"total": 3849, "additions": 2977, "deletions": 872}, "files": [{"sha": "e9613c79d545cc8cd61180c5703f29fcd37bf695", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -1660,4 +1660,55 @@ Incrementado mensagem custom de venda de produtos pelo mercante.\n \n 13 - 14 Fevereiro 2019,\n Corrigido limites na fun\u00e7\u00e3o isWeapon, que n\u00e3o contabilizaria certos itens corretamente.\n-Resolvido comportamento de puppets usando o novo sistema de aggro.\n\\ No newline at end of file\n+Resolvido comportamento de puppets usando o novo sistema de aggro.\n+\n+18 Fevereiro 2019,\n+Corrigido um caso onde jogador em party poderia perder prioridade sobre loots recentes no ch\u00e3o ao mudar de mapas.\n+Ajustado contabiliza\u00e7\u00e3o de buffs no ganho de exp, agora bonus de party tamb\u00e9m contabiliza ganho pelos buffs.\n+Corrigido mercantes n\u00e3o checando estoque de itens apropriadamente ao pegar de volta itens colocados nos mercantes.\n+Corrigido refer\u00eancias a lojas de jogadores n\u00e3o sendo devidamente liberadas para visitantes quando dono fecha a loja, levando a problemas de update visuais no mapa ao realizar certas a\u00e7\u00f5es.\n+Ajustado mercantes para automaticamente fechar a loja assim que dono tenta sair da loja deixando a mesma vazia.\n+Adicionado opcodes de resultado de trades entre jogadores.\n+Incrementado resultados de trades, agora utilizando um conjunto de respostas mais parecido com o do GMS.\n+\n+19 - 20 Fevereiro 2019,\n+Implementado checagem de dist\u00e2ncia a portais no mapa em cria\u00e7\u00e3o de loja/mercante de jogador.\n+Implementado checagem de IP localhost ao tentar logar em server com IP de produ\u00e7\u00e3o.\n+Ajustado quests de door bosses, agora entregando emblemas a jogadores no in\u00edcio e retirando os mesmos ao terminar a quest. O item emblema \u00e9 um dos requerimentos para acessar o boss da \u00e1rea.\n+Corrigido problema no sistema de login utilizando flag de detec\u00e7\u00e3o de m\u00faltiplas sess\u00f5es abertas n\u00e3o tratando hashcodes negativos de IP.\n+Adicionado comandos de desenvolvedor que permitem visualizar situa\u00e7\u00f5es de conex\u00e3o de jogadores (avalia\u00e7\u00e3o de stack de IP abertos no servidor e sess\u00f5es logadas).\n+\n+21 Fevereiro 2019,\n+Corrigido chalkboard n\u00e3o aparecendo corretamente para o usu\u00e1rio do item ao trocar mapas.\n+Revisado chalkboard agora removendo unidade do invent\u00e1rio ao usar.\n+Implementado checagem por chalkboard em salas do FM.\n+Adicionado opcodes de mensagens gen\u00e9ricas de guild.\n+\n+22 Fevereiro 2019,\n+Corrigido l\u00edder de alian\u00e7a de guilds n\u00e3o sendo permitido convidar guilds logo ap\u00f3s aumentar a capacidade da alian\u00e7a.\n+Corrigido impossibilidade de abrir novos mercantes logo assim que \u00faltimo mercante expirou.\n+Implementado visualiza\u00e7\u00e3o do \"tempo de sobra\" ao reentrar no mercante (somente sendo dono da loja).\n+Ajustado resultado de skillbooks n\u00e3o aparecendo para todos jogadores no mapa.\n+Corrigido alguns comandos utilizando letras min\u00fasculas em conte\u00fados de mensagens.\n+\n+23 Fevereiro 2019,\n+Adicionado funcionalidade de colocar tipo de cash a adicionar no comando GiveNx.\n+Implementado taxas de manuten\u00e7\u00e3o de mesos/itens no Fredrick. Ap\u00f3s 100 dias, itens guardados s\u00e3o removidos conforme descri\u00e7\u00e3o de utiliza\u00e7\u00e3o das lojas.\n+Incrementado comportamento do NPC Fredrick. Como na descri\u00e7\u00e3o do servi\u00e7o (ao abrir mercantes), itens guardados agora podem ser removidos ap\u00f3s 100 dias, e h\u00e1 a perda de 1% da valia do montante vendido a cada dia que se passa sem os itens serem recuperados pelo jogador.\n+\n+25 - 28 Fevereiro 2019,\n+Adicionado n\u00famero de locks dispon\u00edveis para se\u00e7\u00e3o de login e controle de item factory.\n+Incrementado quantidade de locks de atividades dispon\u00edveis por canal, visando uma carga relevante de pessoas online.\n+Corrigido abertura de invent\u00e1rio (comportamento do trade) sendo feita mesmo em cen\u00e1rios onde n\u00e3o \u00e9 poss\u00edvel nem convidar o outro jogador.\n+Implementado sistema de gerenciamento de convites para as diversas modalidades no jogo (party, guild, messenger, etc).\n+Ajustado mercantes, agora salvando dados do jogador dono da loja a todo movimento de itens na loja n\u00e3o-aberta (quando o mesmo ainda est\u00e1 gerenciando itens na loja).\n+Implementado funcionalidade de arrendamento de mapas. Jogadores podem se tornar donos de mapa e evitar outros de farmar nos mesmos.\n+Ajustado ordenador de invent\u00e1rios, agora deixando itens proj\u00e9teis (flechas, shurikens e balas) em ordem confort\u00e1vel para uso do jogador.\n+\n+01 Mar\u00e7o 2019,\n+Adicionado efeito visual em ganho de Aran skills.\n+Implementado mec\u00e2nica de pescaria no c\u00f3digo-fonte.\n+\n+09 Mar\u00e7o 2019,\n+Corrigido membros de party n\u00e3o recebendo bonus devidamente ap\u00f3s membros sairem do mapa/party em alguns casos.\n+Revisado sistema de experi\u00eancia em party. Ganhos de bonus agora levam em conta valores-base que membros de party ganham ao derrotar um mob para definir o ganho geral da equipe. Contabiliza\u00e7\u00e3o de ganhos remodelado, buscando por um modo de distribui\u00e7\u00e3o mais coerente.\n\\ No newline at end of file"}, {"sha": "a44a45e8fb3a6f01222df4062f269f9b0fc5f542", "filename": "launchtest.bat", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/launchtest.bat", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/launchtest.bat", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/launchtest.bat?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,61 @@\n+REM 'launchtest.bat' Author: Tochi\n+@echo off\n+set a=0\n+title HeavenMS: Offline\n+color 1b\n+:clear\n+cls\n+echo HeavenMS Server Launcher\n+echo.\n+echo Commands:\n+echo -------------------------------------------------------------\n+echo start - Start HeavenMS server\n+echo shutdown - Shut down HeavenMS server and close Launcher File\n+echo restart - Restart HeavenMS Launcher File\n+echo clear - Clear this window\n+echo -------------------------------------------------------------\n+echo.\n+\n+:command\n+set /p s=\"Enter command: \"\n+if \"%s%\"==\"start\" goto :start\n+if \"%s%\"==\"shutdown\" goto :shutdown\n+if \"%s%\"==\"restart\" goto :restart\n+if \"%s%\"==\"clear\" goto :clear\n+echo Wrong Command.\n+echo.\n+goto :command\n+\n+:start\n+if \"%a%\"==\"1\" (\n+echo HeavenMS is already active!\n+echo.\n+goto :command\n+)\n+color 4c\n+echo This might take a while....\n+echo.\n+title HeavenMS: activating\n+echo Server Launching...\n+start /b launch.bat\n+color 2a\n+title HeavenMS: Online\n+set a=1\n+ping localhost -w 10000 >nul\n+echo.\n+goto :command\n+\n+:shutdown\n+color 4c\n+title HeavenMS: Shutting Down...\n+echo The Server Launcher will be close in a few seconds.\n+ping localhost -w 100000 >nul\n+taskkill /im cmd.exe\n+\n+:restart\n+color 4c\n+title HeavenMS: Restarting...\n+echo Please type 'start' in command box after bat file have been restarted.\n+ping localhost -w 100000 >nul\n+start launch.bat\n+taskkill /im cmd.exe\n\\ No newline at end of file"}, {"sha": "3e01a7ae2950bcc9aaafcf4bc68f84b40824c842", "filename": "scripts/npc/2010009.js", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/2010009.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/2010009.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2010009.js?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -56,7 +56,7 @@ function action(mode, type, selection) {\n             cm.sendNext(\"Guild Union is just as it says, a union of a number of guilds to form a super group. I am in charge of managing these Guild Unions.\");\n             cm.dispose();\n         } else if (selection == 1) {\n-            cm.sendNext(\"To make a Guild Union, two and only two Guild Masters need to be in a party and both must be present on this room on the same channel. The leader of this party will be assigned as the Guild Union Master.\");\n+            cm.sendNext(\"To make a Guild Union, two and only #btwo Guild Masters need to be in a party#k and #bboth must be present on this room#k on the same channel. The leader of this party will be assigned as the Guild Union Master.\\r\\n\\r\\nInitially, #bonly two guilds#k can make part of the new Union, but over the time you can #rexpand#k the Union capacity by talking to me when the time comes and investing in an estipulated fee.\");\n             cm.dispose();\n         } else if(selection == 2) {\n             if(!cm.isLeader()) {\n@@ -80,7 +80,7 @@ function action(mode, type, selection) {\n             \n             var rank = cm.getPlayer().getMGC().getAllianceRank();\n             if (rank == 1)\n-                cm.sendYesNo(\"Do you want to increase your Alliance by one guild slot? The fee for this procedure is #b\" + increaseCost + \" mesos#k.\");\n+                cm.sendYesNo(\"Do you want to increase your Alliance by #rone guild#k slot? The fee for this procedure is #b\" + increaseCost + \" mesos#k.\");\n             else {\n                 cm.sendNext(\"Only the Guild Union Master can expand the number of guilds in the Union.\");\n                 cm.dispose();"}, {"sha": "6fea1725b97d6452d466ff8f620449e83e235166", "filename": "scripts/npc/9201128.js", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9201128.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9201128.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9201128.js?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -1,5 +1,6 @@\n var map = 677000004;\n var quest = 28179;\n+var questItem = 4032491;\n var status = -1;\n \n function start(mode, type, selection) {\n@@ -15,7 +16,12 @@ function action(mode, type, selection) {\n     }\n     if (status == 0) {\n         if (cm.isQuestStarted(quest)) {\n-            cm.sendYesNo(\"Would you like to move to #b#m\" + map + \"##k?\");\n+            if (cm.haveItem(questItem)) {\n+                cm.sendYesNo(\"Would you like to move to #b#m\" + map + \"##k?\");\n+            } else {\n+                cm.sendOk(\"The entrance is blocked by a force that can only be lifted by those holding an emblem.\");\n+                cm.dispose();\n+            }\n         } else {\n             cm.sendOk(\"The entrance is blocked by a strange force.\");\n             cm.dispose();"}, {"sha": "44362c3756e48436618a99419f5a21adffade45f", "filename": "scripts/npc/9201129.js", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9201129.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9201129.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9201129.js?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -1,5 +1,6 @@\n var map = 677000000;\n var quest = 28198;\n+var questItem = 4032495;\n var status = -1;\n \n function start(mode, type, selection) {\n@@ -15,7 +16,12 @@ function action(mode, type, selection) {\n     }\n     if (status == 0) {\n         if (cm.isQuestStarted(quest)) {\n-            cm.sendYesNo(\"Would you like to move to #b#m\" + map + \"##k?\");\n+            if (cm.haveItem(questItem)) {\n+                cm.sendYesNo(\"Would you like to move to #b#m\" + map + \"##k?\");\n+            } else {\n+                cm.sendOk(\"The entrance is blocked by a force that can only be lifted by those holding an emblem.\");\n+                cm.dispose();\n+            }\n         } else {\n             cm.sendOk(\"The entrance is blocked by a strange force.\");\n             cm.dispose();"}, {"sha": "795bcde1d587375b4ba8a138a83e7c62aa025820", "filename": "scripts/npc/9201130.js", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9201130.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9201130.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9201130.js?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -1,5 +1,6 @@\n var map = 677000008;\n var quest = 28219;\n+var questItem = 4032493;\n var status = -1;\n \n function start(mode, type, selection) {\n@@ -15,7 +16,12 @@ function action(mode, type, selection) {\n     }\n     if (status == 0) {\n         if (cm.isQuestStarted(quest)) {\n-            cm.sendYesNo(\"Would you like to move to #b#m\" + map + \"##k?\");\n+            if (cm.haveItem(questItem)) {\n+                cm.sendYesNo(\"Would you like to move to #b#m\" + map + \"##k?\");\n+            } else {\n+                cm.sendOk(\"The entrance is blocked by a force that can only be lifted by those holding an emblem.\");\n+                cm.dispose();\n+            }\n         } else {\n             cm.sendOk(\"The entrance is blocked by a strange force.\");\n             cm.dispose();"}, {"sha": "ab545d7784dc2299565287788f9dbbef2a5b0612", "filename": "scripts/npc/9201131.js", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9201131.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9201131.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9201131.js?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -1,5 +1,6 @@\n var map = 677000002;\n var quest = 28238;\n+var questItem = 4032492;\n var status = -1;\n \n function start(mode, type, selection) {\n@@ -15,7 +16,12 @@ function action(mode, type, selection) {\n     }\n     if (status == 0) {\n         if (cm.isQuestStarted(quest)) {\n-            cm.sendYesNo(\"Would you like to move to #b#m\" + map + \"##k?\");\n+            if (cm.haveItem(questItem)) {\n+                cm.sendYesNo(\"Would you like to move to #b#m\" + map + \"##k?\");\n+            } else {\n+                cm.sendOk(\"The entrance is blocked by a force that can only be lifted by those holding an emblem.\");\n+                cm.dispose();\n+            }\n         } else {\n             cm.sendOk(\"The entrance is blocked by a strange force.\");\n             cm.dispose();"}, {"sha": "a790f832f6a46cfbf15fc0f7097cedfea8812637", "filename": "scripts/npc/9201132.js", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9201132.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9201132.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9201132.js?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -1,5 +1,6 @@\n var map = 677000006;\n var quest = 28256;\n+var questItem = 4032494;\n var status = -1;\n \n function start(mode, type, selection) {\n@@ -15,7 +16,12 @@ function action(mode, type, selection) {\n     }\n     if (status == 0) {\n         if (cm.isQuestStarted(quest)) {\n-            cm.sendYesNo(\"Would you like to move to #b#m\" + map + \"##k?\");\n+            if (cm.haveItem(questItem)) {\n+                cm.sendYesNo(\"Would you like to move to #b#m\" + map + \"##k?\");\n+            } else {\n+                cm.sendOk(\"The entrance is blocked by a force that can only be lifted by those holding an emblem.\");\n+                cm.dispose();\n+            }\n         } else {\n             cm.sendOk(\"The entrance is blocked by a strange force.\");\n             cm.dispose();"}, {"sha": "6e3a3079d6afc9fb628caffde67d0642d82f9e58", "filename": "scripts/npc/9977777.js", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9977777.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/scripts/npc/9977777.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9977777.js?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -87,6 +87,8 @@ function writeFeatureTab_PlayerSocialNetwork() {\n         addFeature(\"Engagement & Wedding system with ring effects.\");\n         addFeature(\"Equipments displays to everyone it's level & EXP info.\");\n         addFeature(\"Further improved the existent minigame mechanics.\");\n+        addFeature(\"Trade complete using handshake synchronization.\");\n+        addFeature(\"GMS-like trade results displaying after transactions.\");\n }\n \n function writeFeatureTab_CashItems() {\n@@ -123,11 +125,11 @@ function writeFeatureTab_MonstersMapsReactors() {\n         addFeature(\"Added meso drop data for many missing mobs.\");\n         addFeature(\"Monsterbook displays updated drop data info.\");\n         addFeature(\"Every skill/mastery book is now obtainable.\");\n-        addFeature(\"Enhanced aggro system: real-time DPS aggro detection.\");\n+        addFeature(\"Enhanced aggro system, with real-time DPS detection.\");\n+        addFeature(\"Puppets keep targeted mobs nearby on new aggro.\");\n         addFeature(\"Mobs now can drop more than one of the same equip.\");\n         addFeature(\"Mobs only drop items collectable by the player/party.\");\n         addFeature(\"Mobs shouldn't fall from foothold too often now.\");\n-        addFeature(\"Puppets holds targeted mobs nearby on new aggro feat.\");\n         addFeature(\"Properly applying MP cost on non-skill mob moves.\");\n         addFeature(\"Limited underling mob spawns.\");\n         addFeature(\"Implemented mob banish by touch & skill move.\");\n@@ -173,6 +175,7 @@ function writeFeatureTab_Playerpotentials() {\n         addFeature(\"Reviewed keybinding system.\");\n         addFeature(\"Character slots per world/server-wide.\");\n         addFeature(\"Optional cash shop inventory separated by classes.\");\n+        addFeature(\"Players manage 'same-typed' invites exclusively.\");\n }\n \n function writeFeatureTab_Serverpotentials() {\n@@ -188,6 +191,7 @@ function writeFeatureTab_Serverpotentials() {\n         addFeature(\"Players-appointed bestsellers for Owl and Cash Shop.\");\n         addFeature(\"Tweaked pet/mount hunger to a balanced growth rate.\");\n         addFeature(\"Consistent experience and meso gain system.\");\n+        addFeature(\"Fredrick Store Bank warn/delete unclaimed items.\");\n         addFeature(\"NPC crafters won't take items freely anymore.\");\n         addFeature(\"Duey: pkg rcvd popup and many delivery mechanics.\");\n         addFeature(\"Pet pickup gives preference to player attacks.\");\n@@ -198,6 +202,8 @@ function writeFeatureTab_Serverpotentials() {\n         addFeature(\"M. book announcer displays info based on demand.\");\n         addFeature(\"Custom jail system.\");\n         addFeature(\"Custom buyback system, uses mesos / NX, via MTS.\");\n+        addFeature(\"Custom fishing system having 'seasonal' catch times.\");\n+        addFeature(\"Custom map leasing system.\");\n         addFeature(\"Delete Character.\");\n         addFeature(\"Smooth view-all-char, now showing all account chars.\");\n         addFeature(\"Centralized servertime, boosting handler performance.\");"}, {"sha": "aaaf8c9f6b09f644c4c068b3c93e4e9d6c17bf6e", "filename": "sql/db_database.sql", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/sql/db_database.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/sql/db_database.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_database.sql?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -12866,6 +12866,15 @@ CREATE TABLE IF NOT EXISTS `family_character` (\n   INDEX (cid, familyid)\n ) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n \n+CREATE TABLE IF NOT EXISTS `fredstorage` (\n+  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n+  `cid` int(10) unsigned NOT NULL,\n+  `daynotes` int(4) unsigned NOT NULL,\n+  `timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n+  UNIQUE KEY `cid_2` (`cid`),\n+  PRIMARY KEY (`id`)\n+) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n+\n CREATE TABLE IF NOT EXISTS `gifts` (\n   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n   `to` int(11) NOT NULL,"}, {"sha": "ccc2792c6b81cc0e5bf0a987cdb5bdcbdee4bdc9", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 127, "deletions": 22, "changes": 149, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -54,6 +54,7 @@\n import net.server.PlayerBuffValueHolder;\n import net.server.PlayerCoolDownValueHolder;\n import net.server.Server;\n+import net.server.coordinator.MapleInviteCoordinator;\n import net.server.guild.MapleAlliance;\n import net.server.guild.MapleGuild;\n import net.server.guild.MapleGuildCharacter;\n@@ -125,6 +126,7 @@\n import client.inventory.manipulator.MapleCashidGenerator;\n import client.inventory.manipulator.MapleInventoryManipulator;\n import client.newyear.NewYearCardRecord;\n+import client.processor.FredrickProcessor;\n import constants.ExpTable;\n import constants.GameConstants;\n import constants.ItemConstants;\n@@ -167,7 +169,7 @@\n public class MapleCharacter extends AbstractMapleCharacterObject {\n     private static final MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n     private static final String LEVEL_200 = \"[Congrats] %s has reached Level %d! Congratulate %s on such an amazing achievement!\";\n-    private static final String[] BLOCKED_NAMES = {\"admin\", \"owner\", \"moderator\", \"intern\", \"donor\", \"administrator\", \"help\", \"helper\", \"alert\", \"notice\", \"maplestory\", \"fuck\", \"wizet\", \"fucking\", \"negro\", \"fuk\", \"fuc\", \"penis\", \"pussy\", \"asshole\", \"gay\",\n+    private static final String[] BLOCKED_NAMES = {\"admin\", \"owner\", \"moderator\", \"intern\", \"donor\", \"administrator\", \"FREDRICK\", \"help\", \"helper\", \"alert\", \"notice\", \"maplestory\", \"fuck\", \"wizet\", \"fucking\", \"negro\", \"fuk\", \"fuc\", \"penis\", \"pussy\", \"asshole\", \"gay\",\n         \"nigger\", \"homo\", \"suck\", \"cum\", \"shit\", \"shitty\", \"condom\", \"security\", \"official\", \"rape\", \"nigga\", \"sex\", \"tit\", \"boner\", \"orgy\", \"clit\", \"asshole\", \"fatass\", \"bitch\", \"support\", \"gamemaster\", \"cock\", \"gaay\", \"gm\",\n         \"operate\", \"master\", \"sysop\", \"party\", \"GameMaster\", \"community\", \"message\", \"event\", \"test\", \"meso\", \"Scania\", \"yata\", \"AsiaSoft\", \"henesys\"};\n     \n@@ -208,6 +210,7 @@\n     private boolean usedStorage = false;\n     private String name;\n     private String chalktext;\n+    private String commandtext;\n     private String dataString;\n     private String search = null;\n     private AtomicBoolean mapTransitioning = new AtomicBoolean(true);  // player client is currently trying to change maps or log in the game map\n@@ -313,7 +316,7 @@\n     private short extraRecInterval;\n     private int targetHpBarHash = 0;\n     private long targetHpBarTime = 0;\n-    private long nextUnderlevelTime = 0;\n+    private long nextWarningTime = 0;\n     private int banishMap = -1;\n     private int banishSp = -1;\n     private long banishTime = 0;\n@@ -1055,9 +1058,12 @@ public synchronized void changeJob(MapleJob newJob) {\n             gainSp(spGain, GameConstants.getSkillBook(newJob.getId()), true);\n         }\n         \n-        if (newJob.getId() % 10 > 1) {\n+        // thanks xinyifly for finding out job advancements awarding APs\n+        /*\n+        if (newJob.getId() % 10 >= 1) {\n             gainAp(5, true);\n         }\n+        */\n         \n         if (!isGM()) {\n             for (byte i = 1; i < 5; i++) {\n@@ -1578,6 +1584,10 @@ public void notifyMapTransferToPartner(int mapid) {\n             }\n         }\n     }\n+    \n+    public void removeIncomingInvites() {\n+        MapleInviteCoordinator.removePlayerIncomingInvites(id);\n+    }\n \n     private void changeMapInternal(final MapleMap to, final Point pos, final byte[] warpPacket) {\n         if(!canWarpMap) return;\n@@ -1586,6 +1596,7 @@ private void changeMapInternal(final MapleMap to, final Point pos, final byte[]\n         \n         this.unregisterChairBuff();\n         this.clearBanishPlayerData();\n+        MapleTrade.cancelTrade(this, MapleTrade.TradeResult.UNSUCCESSFUL_ANOTHER_MAP);\n         this.closePlayerInteractions();\n         \n         client.announce(warpPacket);\n@@ -1947,6 +1958,16 @@ public boolean canHold(int itemid) {\n     public boolean canHold(int itemid, int quantity) {\n         return client.getAbstractPlayerInteraction().canHold(itemid, quantity);\n     }\n+    \n+    public boolean canHoldUniques(List<Integer> itemids) {\n+        for (Integer itemid : itemids) {\n+            if (ii.isPickupRestricted(itemid) && this.haveItem(itemid)) {\n+                return false;\n+            }\n+        }\n+        \n+        return true;\n+    }\n \n     public boolean isRidingBattleship() {\n         Integer bv = getBuffedValue(MapleBuffStat.MONSTER_RIDING);\n@@ -4131,15 +4152,15 @@ public boolean registerChairBuff() {\n     public int getChair() {\n         return chair.get();\n     }\n-\n+    \n     public String getChalkboard() {\n         return this.chalktext;\n     }\n-\n+    \n     public MapleClient getClient() {\n         return client;\n     }\n-\n+    \n     public final List<MapleQuestStatus> getCompletedQuests() {\n         synchronized (quests) {\n             List<MapleQuestStatus> ret = new LinkedList<>();\n@@ -4738,6 +4759,32 @@ public int getMeso() {\n     public int getMerchantMeso() {\n         return merchantmeso;\n     }\n+    \n+    public int getMerchantNetMeso() {\n+        int elapsedDays = 0;\n+        \n+        try {\n+            Connection con = DatabaseConnection.getConnection();\n+            \n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT `timestamp` FROM `fredstorage` WHERE `cid` = ?\")) {\n+                ps.setInt(1, id);\n+                try (ResultSet rs = ps.executeQuery()) {\n+                    if (rs.next()) {\n+                        elapsedDays = FredrickProcessor.timestampElapsedDays(rs.getTimestamp(1), System.currentTimeMillis());\n+                    }\n+                }\n+            }\n+            \n+            con.close();\n+        } catch (SQLException e) {\n+            e.printStackTrace();\n+        }\n+        \n+        if (elapsedDays > 100) elapsedDays = 100;\n+        \n+        int netMeso = (merchantmeso * (100 - elapsedDays)) / 100;\n+        return netMeso;\n+    }\n \n     public int getMesosTraded() {\n         return mesosTraded;\n@@ -4980,7 +5027,7 @@ public void closeNpcShop() {\n     }\n     \n     public void closeTrade() {\n-        MapleTrade.cancelTrade(this);\n+        MapleTrade.cancelTrade(this, MapleTrade.TradeResult.PARTNER_CANCEL);\n     }\n     \n     public void closePlayerShop() {\n@@ -5024,9 +5071,13 @@ public void closeHiredMerchant(boolean closeMerchant) {\n         MapleHiredMerchant merchant = this.getHiredMerchant();\n         if(merchant == null) return;\n         \n-        if(closeMerchant) {\n-            merchant.removeVisitor(this);\n-            this.setHiredMerchant(null);\n+        if (closeMerchant) {\n+            if (merchant.isOwner(this) && merchant.getItems().isEmpty()) {\n+                merchant.forceClose();\n+            } else {\n+                merchant.removeVisitor(this);\n+                this.setHiredMerchant(null);\n+            }\n         } else {\n             if (merchant.isOwner(this)) {\n                 merchant.setOpen(true);\n@@ -5674,13 +5725,21 @@ public boolean isGuildLeader() {    // true on guild master or jr. master\n         return guildid > 0 && guildRank < 3;\n     }\n     \n+    public boolean attemptCatchFish(int baitLevel) {\n+        return GameConstants.isFishingArea(mapid) && this.getPosition().getY() > 0 && ItemConstants.isFishingChair(chair.get()) && this.getWorldServer().registerFisherPlayer(this, baitLevel);\n+    }\n+    \n     public void leaveMap() {\n         releaseControlledMonsters();\n         visibleMapObjects.clear();\n         setChair(0);\n         if (hpDecreaseTask != null) {\n             hpDecreaseTask.cancel(false);\n         }\n+        \n+        if (map.unclaimOwnership(this)) {\n+            map.dropMessage(5, \"This lawn is now free real estate.\");\n+        }\n     }\n     \n     private int getChangedJobSp(MapleJob newJob) {\n@@ -6950,7 +7009,12 @@ private void playerDead() {\n     }\n     \n     private void unsitChairInternal() {\n-        if (chair.get() != 0) {\n+        int chairid = chair.get();\n+        if (chairid != 0) {\n+            if (ItemConstants.isFishingChair(chairid)) {\n+                this.getWorldServer().unregisterFisherPlayer(this);\n+            }\n+            \n             setChair(0);\n             if (unregisterChairBuff()) {\n                 getMap().broadcastMessage(this, MaplePacketCreator.cancelForeignChairSkillEffect(this.getId()), false);\n@@ -8085,10 +8149,14 @@ public void sendMacros() {\n     }\n \n     public void sendNote(String to, String msg, byte fame) throws SQLException {\n+        sendNote(to, this.getName(), msg, fame);\n+    }\n+    \n+    public static void sendNote(String to, String from, String msg, byte fame) throws SQLException {\n         Connection con = DatabaseConnection.getConnection();\n         try (PreparedStatement ps = con.prepareStatement(\"INSERT INTO notes (`to`, `from`, `message`, `timestamp`, `fame`) VALUES (?, ?, ?, ?, ?)\", Statement.RETURN_GENERATED_KEYS)) {\n             ps.setString(1, to);\n-            ps.setString(2, this.getName());\n+            ps.setString(2, from);\n             ps.setString(3, msg);\n             ps.setLong(4, Server.getInstance().getCurrentTime());\n             ps.setByte(5, fame);\n@@ -8262,7 +8330,7 @@ public void setMerchantMeso(int set) {\n     }\n     \n     public synchronized void withdrawMerchantMesos() {\n-        int merchantMeso = this.getMerchantMeso();\n+        int merchantMeso = this.getMerchantNetMeso();\n         if (merchantMeso > 0) {\n             int possible = Integer.MAX_VALUE - merchantMeso;\n             \n@@ -8275,6 +8343,17 @@ public synchronized void withdrawMerchantMesos() {\n                     this.setMerchantMeso(0);\n                 }\n             }\n+        } else {\n+            int playerMeso = this.getMeso();\n+            int nextMeso = playerMeso + merchantMeso;\n+            \n+            if (nextMeso < 0) {\n+                this.gainMeso(-playerMeso, false);\n+                this.setMerchantMeso(merchantMeso + playerMeso);\n+            } else {\n+                this.gainMeso(merchantMeso, false);\n+                this.setMerchantMeso(0);\n+            }\n         }\n     }\n \n@@ -8461,6 +8540,8 @@ public void setName(String name) {\n     }\n \n     public void changeName(String name) {\n+        FredrickProcessor.removeFredrickReminders(this.getId());\n+        \n         this.name = name;\n         try {\n             Connection con = DatabaseConnection.getConnection();\n@@ -8830,16 +8911,32 @@ public void timeoutFromDojo() {\n     }\n     \n     public void showUnderleveledInfo(MapleMonster mob) {\n-        chrLock.lock();\n-        try {\n-            long curTime = Server.getInstance().getCurrentTime();\n-            if(nextUnderlevelTime < curTime) {\n-                nextUnderlevelTime = curTime + (60 * 1000);   // show underlevel info again after 1 minute\n-                \n-                showHint(\"You have gained #rno experience#k from defeating #e#b\" + mob.getName() + \"#k#n (lv. #b\" + mob.getLevel() + \"#k)! Take note you must have around the same level as the mob to start earning EXP from it.\");\n+        long curTime = Server.getInstance().getCurrentTime();\n+        if(nextWarningTime < curTime) {\n+            nextWarningTime = curTime + (60 * 1000);   // show underlevel info again after 1 minute\n+            \n+            showHint(\"You have gained #rno experience#k from defeating #e#b\" + mob.getName() + \"#k#n (lv. #b\" + mob.getLevel() + \"#k)! Take note you must have around the same level as the mob to start earning EXP from it.\");\n+        }\n+    }\n+    \n+    public void showMapOwnershipInfo(MapleCharacter mapOwner) {\n+        long curTime = Server.getInstance().getCurrentTime();\n+        if(nextWarningTime < curTime) {\n+            nextWarningTime = curTime + (60 * 1000);   // show underlevel info again after 1 minute\n+            \n+            String medal = \"\";\n+            Item medalItem = mapOwner.getInventory(MapleInventoryType.EQUIPPED).getItem((short) -49);\n+            if (medalItem != null) {\n+                medal = \"<\" + ii.getName(medalItem.getItemId()) + \"> \";\n             }\n-        } finally {\n-            chrLock.unlock();\n+            \n+            List<String> strLines = new LinkedList<>();\n+            strLines.add(\"\");\n+            strLines.add(\"\");\n+            strLines.add(\"\");\n+            strLines.add(this.getClient().getChannelServer().getServerMessage().isEmpty() ? 0 : 1, \"Get off my lawn!!\");\n+            \n+            this.announce(MaplePacketCreator.getAvatarMega(mapOwner, medal, this.getClient().getChannel(), 5390006, strLines, true));\n         }\n     }\n     \n@@ -9844,6 +9941,14 @@ public void addJailExpirationTime(long time) {\n     public void removeJailExpirationTime() {\n         jailExpiration = 0;\n     }\n+    \n+    public String getLastCommandMessage() {\n+        return this.commandtext;\n+    }\n+    \n+    public void setLastCommandMessage(String text) {\n+        this.commandtext = text;\n+    }\n \n     public int getRewardPoints() {\n         Connection con = null;"}, {"sha": "7cd65524ed0f88a04119c9a40394e77c6526b21c", "filename": "src/client/MapleClient.java", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/MapleClient.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/MapleClient.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleClient.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -118,12 +118,18 @@\n         private final Semaphore actionsSemaphore = new Semaphore(7);\n \tprivate final Lock lock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT, true);\n         private final Lock encoderLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_ENCODER, true);\n-        private static final Lock loginLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_LOGIN, true);\n+        private static final Lock loginLocks[] = new Lock[200];  // thanks Masterrulax & try2hack for pointing out a bottleneck issue here\n \tprivate int votePoints;\n \tprivate int voteTime = -1;\n         private int visibleWorlds;\n \tprivate long lastNpcClick;\n \tprivate long sessionId;\n+        \n+        static {\n+            for (int i = 0; i < 200; i++) {\n+                loginLocks[i] = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_LOGIN, true);\n+            }\n+        }\n \n         public MapleClient(MapleAESOFB send, MapleAESOFB receive, IoSession session) {\n \t\tthis.send = send;\n@@ -434,6 +440,7 @@ public void banMacs() {\n \t}\n \n \tpublic int finishLogin() {\n+                Lock loginLock = loginLocks[this.getAccID() % 200];\n                 loginLock.lock();\n                 try {\n                     if (getLoginState() > LOGIN_NOTLOGGEDIN) { // 0 = LOGIN_NOTLOGGEDIN, 1= LOGIN_SERVER_TRANSITION, 2 = LOGIN_LOGGEDIN\n@@ -535,8 +542,15 @@ public int login(String login, String pwd, String nibbleHwid) {\n \t\t\tps.setString(1, login);\n \t\t\trs = ps.executeQuery();\n \t\t\tif (rs.next()) {\n-\t\t\t\tboolean banned = (rs.getByte(\"banned\") == 1);\n \t\t\t\taccId = rs.getInt(\"id\");\n+                                if (accId == 0) {\n+                                        // odd case where accId is actually attributed as 0 (further on this leads to getLoginState ACCID = 0, an absurd), thanks Thora for finding this issue\n+                                        return 15;\n+                                } else if (accId < 0) {\n+                                        FilePrinter.printError(FilePrinter.LOGIN_EXCEPTION, \"Tried to login with accid \" + accId);\n+                                }\n+                                \n+                                boolean banned = (rs.getByte(\"banned\") == 1);\n \t\t\t\tgmlevel = 0;\n \t\t\t\tpin = rs.getString(\"pin\");\n \t\t\t\tpic = rs.getString(\"pic\");\n@@ -861,6 +875,7 @@ private void removePlayer(World wserv, boolean serverTransition) {\n \t\ttry {\n                         player.setDisconnectedFromChannelWorld();\n                         player.notifyMapTransferToPartner(-1);\n+                        player.removeIncomingInvites();\n                         player.cancelAllBuffs(true);\n                         \n                         player.closePlayerInteractions();\n@@ -1000,8 +1015,8 @@ private void disconnectInternal(boolean shutdown, boolean cashshop) {//once per\n                                 MapleSessionCoordinator.getInstance().closeSession(session, false);\n                                 session.removeAttribute(MapleClient.CLIENT_KEY);\n                         }\n-                    \n-                        engines.clear();\n+                        \n+                        engines = null; // thanks Tochi for pointing out a NPE here\n                 }\n \t}\n \n@@ -1413,7 +1428,7 @@ public void changeChannel(int channel) {\n                 }\n                 \n \t\tif (player.getTrade() != null) {\n-\t\t\tMapleTrade.cancelTrade(getPlayer());\n+\t\t\tMapleTrade.cancelTrade(getPlayer(), MapleTrade.TradeResult.PARTNER_CANCEL);\n \t\t}\n \n \t\tMapleHiredMerchant merchant = player.getHiredMerchant();\n@@ -1429,6 +1444,7 @@ public void changeChannel(int channel) {\n                 server.getPlayerBuffStorage().addDiseasesToStorage(player.getId(), player.getAllDiseases());\n                 player.setDisconnectedFromChannelWorld();\n                 player.notifyMapTransferToPartner(-1);\n+                player.removeIncomingInvites();\n \t\tplayer.cancelAllBuffs(true);\n                 player.cancelAllDebuffs();\n                 player.cancelBuffExpireTask();"}, {"sha": "3a899c22311a9059e86cfbb3ae503b4f0a0bb528", "filename": "src/client/command/CommandsExecutor.java", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/CommandsExecutor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/CommandsExecutor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/CommandsExecutor.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -93,8 +93,16 @@ public void handle(MapleClient client, String message){\n     }\n     \n     private void handleInternal(MapleClient client, String message){\n-        final String[] spitedMessage = message.toLowerCase().substring(1).split(\"[ ]\");\n-        final String commandName = spitedMessage[0];\n+        final String splitRegex = \"[ ]\";\n+        String[] splitedMessage = message.substring(1).split(splitRegex, 2);\n+        if (splitedMessage.length < 2) {\n+            splitedMessage = new String[]{splitedMessage[0], \"\"};\n+        }\n+        \n+        client.getPlayer().setLastCommandMessage(splitedMessage[1]);    // thanks Tochi & Nulliphite for noticing string messages being marshalled lowercase\n+        final String commandName = splitedMessage[0].toLowerCase();\n+        final String[] lowercaseParams = splitedMessage[1].toLowerCase().split(splitRegex);\n+        \n         final RegisteredCommand command = registeredCommands.get(commandName);\n         if (command == null){\n             client.getPlayer().yellowMessage(\"Command '\" + commandName + \"' is not available. See @commands for a list of available commands.\");\n@@ -105,8 +113,8 @@ private void handleInternal(MapleClient client, String message){\n             return;\n         }\n         String[] params;\n-        if (spitedMessage.length > 1) {\n-             params = Arrays.copyOfRange(spitedMessage, 1, spitedMessage.length);\n+        if (lowercaseParams.length > 0) {\n+             params = Arrays.copyOfRange(lowercaseParams, 0, lowercaseParams.length);\n         } else {\n             params = new String[]{};\n         }\n@@ -194,6 +202,7 @@ private void registerLv0Commands(){\n         addCommand(\"luk\", StatLukCommand.class);\n         addCommand(\"enableauth\", EnableAuthCommand.class);\n         addCommand(\"toggleexp\", ToggleExpCommand.class);\n+        addCommand(\"mylawn\", MapOwnerClaimCommand.class);\n         \n         commandsNameDesc.add(levelCommandsCursor);\n     }\n@@ -331,6 +340,7 @@ private void registerLv4Commands(){\n         addCommand(\"droprate\", 4, DropRateCommand.class);\n         addCommand(\"questrate\", 4, QuestRateCommand.class);\n         addCommand(\"travelrate\", 4, TravelRateCommand.class);\n+        addCommand(\"fishrate\", 4, FishingRateCommand.class);\n         addCommand(\"itemvac\", 4, ItemVacCommand.class);\n         addCommand(\"forcevac\", 4, ForceVacCommand.class);\n         addCommand(\"zakum\", 4, ZakumCommand.class);\n@@ -356,6 +366,8 @@ private void registerLv5Commands(){\n         addCommand(\"set\", 5, SetCommand.class);\n         addCommand(\"showpackets\", 5, ShowPacketsCommand.class);\n         addCommand(\"showmovelife\", 5, ShowMoveLifeCommand.class);\n+        addCommand(\"showsessions\", 5, ShowSessionsCommand.class);\n+        addCommand(\"iplist\", 5, IpListCommand.class);\n         \n         commandsNameDesc.add(levelCommandsCursor);\n     }"}, {"sha": "a5f604c14f02640f51f8d07b885dbbcdd8386160", "filename": "src/client/command/commands/gm0/GachaCommand.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm0/GachaCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm0/GachaCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm0/GachaCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -27,7 +27,6 @@\n import client.MapleClient;\n import server.MapleItemInformationProvider;\n import server.gachapon.MapleGachapon;\n-import tools.MaplePacketCreator;\n \n public class GachaCommand extends Command {\n     {\n@@ -37,7 +36,7 @@\n     @Override\n     public void execute(MapleClient c, String[] params) {\n         MapleGachapon.Gachapon gacha = null;\n-        String search = joinStringFrom(params,0);\n+        String search = c.getPlayer().getLastCommandMessage();\n         String gachaName = \"\";\n         String [] names = {\"Henesys\", \"Ellinia\", \"Perion\", \"Kerning City\", \"Sleepywood\", \"Mushroom Shrine\", \"Showa Spa Male\", \"Showa Spa Female\", \"New Leaf City\", \"Nautilus Harbor\"};\n         int [] ids = {9100100, 9100101, 9100102, 9100103, 9100104, 9100105, 9100106, 9100107, 9100109, 9100117};"}, {"sha": "b9f2a553f9b0dd7951f1b5c926f4dda9fa7bc6d1", "filename": "src/client/command/commands/gm0/GmCommand.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm0/GmCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm0/GmCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm0/GmCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -50,7 +50,7 @@ public void execute(MapleClient c, String[] params) {\n             player.dropMessage(5, \"Your message was too short. Please provide as much detail as possible.\");\n             return;\n         }\n-        String message = joinStringFrom(params, 0);\n+        String message = player.getLastCommandMessage();\n         Server.getInstance().broadcastGMMessage(c.getWorld(), MaplePacketCreator.sendYellowTip(\"[GM MESSAGE]:\" + MapleCharacter.makeMapleReadable(player.getName()) + \": \" + message));\n         Server.getInstance().broadcastGMMessage(c.getWorld(), MaplePacketCreator.serverNotice(1, message));\n         FilePrinter.printError(FilePrinter.COMMAND_GM, MapleCharacter.makeMapleReadable(player.getName()) + \": \" + message);"}, {"sha": "eac30717e6b5b080ee6f3a0804d565c42fcc3f66", "filename": "src/client/command/commands/gm0/MapOwnerClaimCommand.java", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm0/MapOwnerClaimCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm0/MapOwnerClaimCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm0/MapOwnerClaimCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,62 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server, commands OdinMS-based\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+\n+/*\n+   @Author: Ronan\n+*/\n+package client.command.commands.gm0;\n+\n+import client.command.Command;\n+import client.MapleCharacter;\n+import client.MapleClient;\n+import constants.ServerConstants;\n+\n+public class MapOwnerClaimCommand extends Command {\n+    {\n+        setDescription(\"\");\n+    }\n+\n+    @Override\n+    public void execute(MapleClient c, String[] params) {\n+        if (c.tryacquireClient()) {\n+            try {\n+                MapleCharacter chr = c.getPlayer();\n+                \n+                if (ServerConstants.USE_MAP_OWNERSHIP_SYSTEM) {\n+                    if (chr.getEventInstance() == null) {\n+                        if (chr.getMap().unclaimOwnership(chr)) {\n+                            chr.dropMessage(5, \"This lawn is now free real estate.\");\n+                        } else if (chr.getMap().claimOwnership(chr)) {\n+                            chr.dropMessage(5, \"You have leased this lawn for a while, until you leave here or after 1 minute of inactivity.\");\n+                        } else {\n+                            chr.dropMessage(5, \"This lawn has already been leased by another player.\");\n+                        }\n+                    } else {\n+                        chr.dropMessage(5, \"This lawn cannot be leased.\");\n+                    }\n+                } else {\n+                    chr.dropMessage(5, \"Feature unavailable.\");\n+                }\n+            } finally {\n+                c.releaseClient();\n+            }\n+        }\n+    }\n+}"}, {"sha": "27bdbd102fefaff50e4573c4c61f78b096c2cc37", "filename": "src/client/command/commands/gm0/ReportBugCommand.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm0/ReportBugCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm0/ReportBugCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm0/ReportBugCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -43,7 +43,7 @@ public void execute(MapleClient c, String[] params) {\n             player.dropMessage(5, \"Message too short and not sent. Please do @bug <bug>\");\n             return;\n         }\n-        String message = joinStringFrom(params, 0);\n+        String message = player.getLastCommandMessage();\n         Server.getInstance().broadcastGMMessage(c.getWorld(), MaplePacketCreator.sendYellowTip(\"[BUG]:\" + MapleCharacter.makeMapleReadable(player.getName()) + \": \" + message));\n         Server.getInstance().broadcastGMMessage(c.getWorld(), MaplePacketCreator.serverNotice(1, message));\n         FilePrinter.printError(FilePrinter.COMMAND_BUG, MapleCharacter.makeMapleReadable(player.getName()) + \": \" + message);"}, {"sha": "e13c9c6339a6a5666ab636655916063d30f55389", "filename": "src/client/command/commands/gm1/WhatDropsFromCommand.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm1/WhatDropsFromCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm1/WhatDropsFromCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm1/WhatDropsFromCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -46,7 +46,7 @@ public void execute(MapleClient c, String[] params) {\n             player.dropMessage(5, \"Please do @whatdropsfrom <monster name>\");\n             return;\n         }\n-        String monsterName = joinStringFrom(params, 0);\n+        String monsterName = player.getLastCommandMessage();\n         String output = \"\";\n         int limit = 3;\n         Iterator<Pair<Integer, String>> listIterator = MapleMonsterInformationProvider.getMobsIDsFromName(monsterName).iterator();"}, {"sha": "955c1a1b839f35d746ded0f6a2911c02c6a395f9", "filename": "src/client/command/commands/gm1/WhoDropsCommand.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm1/WhoDropsCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm1/WhoDropsCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm1/WhoDropsCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -51,7 +51,7 @@ public void execute(MapleClient c, String[] params) {\n         \n         if (c.tryacquireClient()) {\n             try {\n-                String searchString = joinStringFrom(params, 0);\n+                String searchString = player.getLastCommandMessage();\n                 String output = \"\";\n                 Iterator<Pair<Integer, String>> listIterator = MapleItemInformationProvider.getInstance().getItemDataByName(searchString).iterator();\n                 if(listIterator.hasNext()) {"}, {"sha": "cae5b4bf0e0a283b9e2aa02d4673db5d80a0df72", "filename": "src/client/command/commands/gm3/GiveNxCommand.java", "status": "modified", "additions": 29, "deletions": 7, "changes": 36, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm3/GiveNxCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm3/GiveNxCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm3/GiveNxCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -36,24 +36,46 @@\n     public void execute(MapleClient c, String[] params) {\n         MapleCharacter player = c.getPlayer();\n         if (params.length < 1) {\n-            player.yellowMessage(\"Syntax: !givenx [<playername>] <gainnx>\");\n+            player.yellowMessage(\"Syntax: !givenx [nx, mp, np] [<playername>] <gainnx>\");\n             return;\n         }\n \n-        String recv;\n-        int value;\n+        String recv, typeStr = \"nx\";\n+        int value, type = 1;\n         if (params.length > 1) {\n-            recv = params[0];\n-            value = Integer.parseInt(params[1]);\n+            if (params[0].length() == 2) {\n+                switch (params[0]) {\n+                    case \"mp\":  // maplePoint\n+                        type = 2;\n+                        break;\n+                    case \"np\":  // nxPrepaid\n+                        type = 4;\n+                        break;\n+                    default:\n+                        type = 1;\n+                }\n+                typeStr = params[0];\n+                \n+                if (params.length > 2) {\n+                    recv = params[1];\n+                    value = Integer.parseInt(params[2]);\n+                } else {\n+                    recv = c.getPlayer().getName();\n+                    value = Integer.parseInt(params[1]);\n+                }\n+            } else {\n+                recv = params[0];\n+                value = Integer.parseInt(params[1]);\n+            }\n         } else {\n             recv = c.getPlayer().getName();\n             value = Integer.parseInt(params[0]);\n         }\n \n         MapleCharacter victim = c.getWorldServer().getPlayerStorage().getCharacterByName(recv);\n         if (victim != null) {\n-            victim.getCashShop().gainCash(1, value);\n-            player.message(\"NX given.\");\n+            victim.getCashShop().gainCash(type, value);\n+            player.message(typeStr.toUpperCase() + \" given.\");\n         } else {\n             player.message(\"Player '\" + recv + \"' could not be found.\");\n         }"}, {"sha": "988a3574e9b7eaa56a3b410b1e267c1f57c584ff", "filename": "src/client/command/commands/gm3/MusicCommand.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm3/MusicCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm3/MusicCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm3/MusicCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -57,7 +57,7 @@ public void execute(MapleClient c, String[] params) {\n             return;\n         }\n         \n-        String song = joinStringFrom(params, 0);\n+        String song = player.getLastCommandMessage();\n         for (String s : GameConstants.GAME_SONGS) {\n             if (s.equalsIgnoreCase(song)) {    // thanks Masterrulax for finding an issue here\n                 player.getMap().broadcastMessage(MaplePacketCreator.musicChange(s));"}, {"sha": "8726b33cb5b563f915ec0f60f43a0778724c724e", "filename": "src/client/command/commands/gm3/NoticeCommand.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm3/NoticeCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm3/NoticeCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm3/NoticeCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -37,6 +37,6 @@\n     @Override\n     public void execute(MapleClient c, String[] params) {\n         MapleCharacter player = c.getPlayer();\n-        Server.getInstance().broadcastMessage(c.getWorld(), MaplePacketCreator.serverNotice(6, \"[Notice] \" + joinStringFrom(params, 0)));\n+        Server.getInstance().broadcastMessage(c.getWorld(), MaplePacketCreator.serverNotice(6, \"[Notice] \" + player.getLastCommandMessage()));\n     }\n }"}, {"sha": "9fb325113ce5dee7fcc33ef596de7e5f880ec4f7", "filename": "src/client/command/commands/gm4/FishingRateCommand.java", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm4/FishingRateCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm4/FishingRateCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm4/FishingRateCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,48 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server, commands OdinMS-based\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+\n+/*\n+   @Author: Ronan\n+*/\n+package client.command.commands.gm4;\n+\n+import client.command.Command;\n+import client.MapleClient;\n+import client.MapleCharacter;\n+import tools.MaplePacketCreator;\n+\n+public class FishingRateCommand extends Command {\n+    {\n+        setDescription(\"\");\n+    }\n+\n+    @Override\n+    public void execute(MapleClient c, String[] params) {\n+        MapleCharacter player = c.getPlayer();\n+        if (params.length < 1) {\n+            player.yellowMessage(\"Syntax: !fishrate <newrate>\");\n+            return;\n+        }\n+\n+        int fishrate = Math.max(Integer.parseInt(params[0]), 1);\n+        c.getWorldServer().setFishingRate(fishrate);\n+        c.getWorldServer().broadcastPacket(MaplePacketCreator.serverNotice(6, \"[Rate] Fishing Rate has been changed to \" + fishrate + \"x.\"));\n+    }\n+}"}, {"sha": "ee2a657055a86d3e75bd44e85828f513f37cd73c", "filename": "src/client/command/commands/gm4/ServerMessageCommand.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm4/ServerMessageCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm4/ServerMessageCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm4/ServerMessageCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -34,7 +34,7 @@\n \n     @Override\n     public void execute(MapleClient c, String[] params) {\n-        //MapleCharacter player = c.getPlayer();\n-        c.getWorldServer().setServerMessage(joinStringFrom(params, 0));\n+        MapleCharacter player = c.getPlayer();\n+        c.getWorldServer().setServerMessage(player.getLastCommandMessage());\n     }\n }"}, {"sha": "517ca62525684d39a386ef89dbcab2b0b6e0c80e", "filename": "src/client/command/commands/gm5/DebugCommand.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm5/DebugCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm5/DebugCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm5/DebugCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -77,7 +77,7 @@ public void execute(MapleClient c, String[] params) {\n                 break;\n \n             case \"packet\":\n-                player.getMap().broadcastMessage(MaplePacketCreator.customPacket(joinStringFrom(params, 1)));\n+                //player.getMap().broadcastMessage(MaplePacketCreator.customPacket(joinStringFrom(params, 1)));\n                 break;\n \n             case \"portal\":"}, {"sha": "8442aac8947e824dc66d4f9595744f911e52f88b", "filename": "src/client/command/commands/gm5/IpListCommand.java", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm5/IpListCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm5/IpListCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm5/IpListCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,60 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package client.command.commands.gm5;\n+\n+import java.util.Collection;\n+import client.MapleClient;\n+import client.MapleCharacter;\n+import client.command.Command;\n+import constants.GameConstants;\n+import net.server.Server;\n+import net.server.world.World;\n+\n+/**\n+ *\n+ * @author Mist\n+ * @author Blood (Tochi)\n+ * @author Ronan\n+ */\n+public class IpListCommand extends Command {\n+    {\n+        setDescription(\"\");\n+    }\n+\n+    @Override\n+    public void execute(MapleClient c, String[] params) {\n+        String str = \"Player-IP relation:\";\n+        \n+        for (World w : Server.getInstance().getWorlds()) {\n+            Collection<MapleCharacter> chars = w.getPlayerStorage().getAllCharacters();\n+            \n+            if (!chars.isEmpty()) {\n+                str += \"\\r\\n\" + GameConstants.WORLD_NAMES[w.getId()] + \"\\r\\n\";\n+                \n+                for (MapleCharacter chr : chars) {\n+                    str += \"  \" + chr.getName() + \" - \" + chr.getClient().getSession().getRemoteAddress() + \"\\r\\n\";\n+                }\n+            }\n+        }\n+        \n+        c.getAbstractPlayerInteraction().npcTalk(22000, str);\n+    }\n+    \n+}\n\\ No newline at end of file"}, {"sha": "f48d0cfd84523d91a1f87c2201d9d9907c8adcae", "filename": "src/client/command/commands/gm5/ShowSessionsCommand.java", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm5/ShowSessionsCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/command/commands/gm5/ShowSessionsCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm5/ShowSessionsCommand.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,39 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package client.command.commands.gm5;\n+\n+import client.MapleClient;\n+import client.command.Command;\n+import net.server.coordinator.MapleSessionCoordinator;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class ShowSessionsCommand extends Command {\n+    {\n+        setDescription(\"\");\n+    }\n+\n+    @Override\n+    public void execute(MapleClient c, String[] params) {\n+        MapleSessionCoordinator.getInstance().printSessionTrace(c);\n+    }\n+}"}, {"sha": "49fa62af2ed08a71838b7d7b405605826421e5da", "filename": "src/client/inventory/ItemFactory.java", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/inventory/ItemFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/inventory/ItemFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/ItemFactory.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -28,10 +28,10 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.concurrent.locks.Lock;\n-import tools.DatabaseConnection;\n-import tools.Pair;\n import net.server.audit.locks.MonitoredLockType;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import tools.DatabaseConnection;\n+import tools.Pair;\n \n /**\n  *\n@@ -48,8 +48,14 @@\n     CASH_OVERALL(7, true);\n     private final int value;\n     private final boolean account;\n-    private static final Lock lock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.ITEM, true);\n-\n+    private static final Lock locks[] = new Lock[200];  // thanks Masterrulax for pointing out a bottleneck issue here\n+    \n+    static {\n+        for (int i = 0; i < 200; i++) {\n+            locks[i] = MonitoredReentrantLockFactory.createLock(MonitoredLockType.ITEM, true);\n+        }\n+    }\n+    \n     private ItemFactory(int value, boolean account) {\n         this.value = value;\n         this.account = account;\n@@ -192,6 +198,7 @@ private void saveItemsCommon(List<Pair<Item, MapleInventoryType>> items, int id,\n         PreparedStatement pse = null;\n         ResultSet rs = null;\n \n+        Lock lock = locks[id % 200];\n         lock.lock();\n         try {\n             StringBuilder query = new StringBuilder();\n@@ -357,6 +364,7 @@ private void saveItemsMerchant(List<Pair<Item, MapleInventoryType>> items, List<\n         PreparedStatement pse = null;\n         ResultSet rs = null;\n \n+        Lock lock = locks[id % 200];\n         lock.lock();\n         try {\n             ps = con.prepareStatement(\"DELETE FROM `inventorymerchant` WHERE `characterid` = ?\");"}, {"sha": "104dfc9b139749ed864c677f2b5f933c4e604da3", "filename": "src/client/inventory/MapleInventory.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/inventory/MapleInventory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/inventory/MapleInventory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/MapleInventory.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -435,8 +435,8 @@ public short getNumFreeSlot() {\n         }\n     }\n     \n-    public static boolean checkSpot(MapleCharacter chr, Item item) {\n-        return !chr.getInventory(item.getInventoryType()).isFull();\n+    public static boolean checkSpot(MapleCharacter chr, Item item) {    // thanks Vcoc for noticing pshops not checking item stacks when taking item back\n+        return checkSpotsAndOwnership(chr, Collections.singletonList(new Pair<>(item, item.getInventoryType())));\n     }\n     \n     public static boolean checkSpots(MapleCharacter chr, List<Pair<Item, MapleInventoryType>> items) {"}, {"sha": "429000e075a2f63e6d479661da06115cf63fbfac", "filename": "src/client/processor/FredrickProcessor.java", "status": "modified", "additions": 225, "deletions": 9, "changes": 234, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/processor/FredrickProcessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/client/processor/FredrickProcessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/processor/FredrickProcessor.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -31,9 +31,16 @@\n import client.inventory.MapleInventoryType;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n import java.sql.SQLException;\n+import java.sql.Timestamp;\n+import java.util.LinkedList;\n import java.util.List;\n import client.inventory.manipulator.MapleInventoryManipulator;\n+import constants.ServerConstants;\n+import java.util.Collections;\n+import net.server.Server;\n+import net.server.world.World;\n import server.MapleItemInformationProvider;\n import server.maps.MapleHiredMerchant;\n import tools.DatabaseConnection;\n@@ -43,14 +50,220 @@\n \n /**\n  *\n- * @author RonanLana - synchronization of Fredrick modules\n+ * @author RonanLana - synchronization of Fredrick modules & operation results\n  */\n public class FredrickProcessor {\n-    private static boolean canRetrieveFromFredrick(MapleCharacter chr, List<Pair<Item, MapleInventoryType>> items) {\n-        if (!chr.canHoldMeso(chr.getMerchantMeso())) {\n-            return false;\n+    \n+    private static int[] dailyReminders = new int[]{2, 5, 10, 15, 30, 60, 90, Integer.MAX_VALUE};\n+    \n+    private static byte canRetrieveFromFredrick(MapleCharacter chr, List<Pair<Item, MapleInventoryType>> items) {\n+        if (!MapleInventory.checkSpotsAndOwnership(chr, items)) {\n+            List<Integer> itemids = new LinkedList<>();\n+            for (Pair<Item, MapleInventoryType> it : items) {\n+                itemids.add(it.getLeft().getItemId());\n+            }\n+            \n+            if (chr.canHoldUniques(itemids)) {\n+                return 0x22;\n+            } else {\n+                return 0x20;\n+            }\n+        }\n+        \n+        int netMeso = chr.getMerchantNetMeso();\n+        if (netMeso > 0) {\n+            if (!chr.canHoldMeso(netMeso)) {\n+                return 0x1F;\n+            }\n+        } else {\n+            if (chr.getMeso() < -1 * netMeso) {\n+                return 0x21;\n+            }\n+        }\n+        \n+        return 0x0;\n+    }\n+    \n+    public static int timestampElapsedDays(Timestamp then, long timeNow) {\n+        return (int) ((timeNow - then.getTime()) / (1000 * 60 * 60 * 24));\n+    }\n+    \n+    private static String fredrickReminderMessage(int daynotes) {\n+        String msg;\n+        \n+        if (daynotes < 4) {\n+            msg = \"Hi customer! I am Fredrick, the Union Chief of the Hired Merchant Union. A reminder that \" + dailyReminders[daynotes] + \" days have passed since you used our service. Please reclaim your stored goods at FM Entrance.\";\n+        } else {\n+            msg = \"Hi customer! I am Fredrick, the Union Chief of the Hired Merchant Union. \" + dailyReminders[daynotes] + \" days have passed since you used our service. Consider claiming back the items before we move them away for refund.\";\n+        }\n+        \n+        return msg;\n+    }\n+    \n+    private static void removeFredrickLog(int cid) {\n+        try {\n+            Connection con = DatabaseConnection.getConnection();\n+            removeFredrickLog(con, cid);\n+            con.close();\n+        } catch (SQLException sqle) {\n+            sqle.printStackTrace();\n+        }\n+    }\n+    \n+    private static void removeFredrickLog(Connection con, int cid) throws SQLException {\n+        try (PreparedStatement ps = con.prepareStatement(\"DELETE FROM `fredstorage` WHERE `cid` = ?\")) {\n+            ps.setInt(1, cid);\n+            ps.execute();\n+        }\n+    }\n+    \n+    public static void insertFredrickLog(int cid) {\n+        try {\n+            Connection con = DatabaseConnection.getConnection();\n+            \n+            removeFredrickLog(con, cid);\n+            try (PreparedStatement ps = con.prepareStatement(\"INSERT INTO `fredstorage` (`cid`, `daynotes`, `timestamp`) VALUES (?, 0, ?)\")) {\n+                ps.setInt(1, cid);\n+                ps.setTimestamp(2, new Timestamp(System.currentTimeMillis()));\n+                ps.execute();\n+            }\n+            \n+            con.close();\n+        } catch (SQLException sqle) {\n+            sqle.printStackTrace();\n+        }\n+    }\n+    \n+    public static void removeFredrickReminders(int cid) {\n+        removeFredrickReminders(Collections.singletonList(new Pair<>(cid, 0)));\n+    }\n+    \n+    private static void removeFredrickReminders(List<Pair<Integer, Integer>> expiredCids) {\n+        List<String> expiredCnames = new LinkedList<>();\n+        for (Pair<Integer, Integer> id : expiredCids) {\n+            String name = MapleCharacter.getNameById(id.getLeft());\n+            if (name != null) {\n+                expiredCnames.add(name);\n+            }\n+        }\n+        \n+        try {\n+            Connection con = DatabaseConnection.getConnection();\n+            try (PreparedStatement ps = con.prepareStatement(\"DELETE FROM `notes` WHERE `from` LIKE ? AND `to` LIKE ?\")) {\n+                ps.setString(1, \"FREDRICK\");\n+                \n+                for (String cname : expiredCnames) {\n+                    ps.setString(2, cname);\n+                    ps.executeBatch();\n+                }\n+            }\n+            con.close();\n+        } catch (SQLException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+    \n+    public static void runFredrickSchedule() {\n+        try {\n+            Connection con = DatabaseConnection.getConnection();\n+            \n+            List<Pair<Integer, Integer>> expiredCids = new LinkedList<>();\n+            List<Pair<Pair<Integer, String>, Integer>> notifCids = new LinkedList<>();\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT * FROM fredstorage f LEFT JOIN (SELECT id, name, world, lastLogoutTime FROM characters) AS c ON c.id = f.cid\")) {\n+                try (ResultSet rs = ps.executeQuery()) {\n+                    long curTime = System.currentTimeMillis();\n+                    \n+                    while (rs.next()) {\n+                        int cid = rs.getInt(\"cid\");\n+                        int world = rs.getInt(\"world\");\n+                        Timestamp ts = rs.getTimestamp(\"timestamp\");\n+                        int daynotes = Math.min(dailyReminders.length - 1, rs.getInt(\"daynotes\"));\n+                        \n+                        int elapsedDays = timestampElapsedDays(ts, curTime);\n+                        if (elapsedDays > 100) {\n+                            expiredCids.add(new Pair<>(cid, world));\n+                        } else {\n+                            int notifDay = dailyReminders[daynotes];\n+                            \n+                            if (elapsedDays >= notifDay) {\n+                                do {\n+                                    daynotes++;\n+                                    notifDay = dailyReminders[daynotes];\n+                                } while (elapsedDays >= notifDay);\n+                                \n+                                Timestamp logoutTs = rs.getTimestamp(\"lastLogoutTime\");\n+                                int inactivityDays = timestampElapsedDays(logoutTs, curTime);\n+                                \n+                                if (inactivityDays < 7 || daynotes >= dailyReminders.length - 1) {  // don't spam inactive players\n+                                    String name = rs.getString(\"name\");\n+                                    notifCids.add(new Pair<>(new Pair<>(cid, name), daynotes));\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+            \n+            if (!expiredCids.isEmpty()) {\n+                try (PreparedStatement ps = con.prepareStatement(\"DELETE FROM `inventoryitems` WHERE `type` = ? AND `characterid` = ?\")) {\n+                    ps.setInt(1, ItemFactory.MERCHANT.getValue());\n+\n+                    for (Pair<Integer, Integer> cid : expiredCids) {\n+                        ps.setInt(2, cid.getLeft());\n+                        ps.addBatch();\n+                    }\n+                    \n+                    ps.executeBatch();\n+                }\n+                \n+                try (PreparedStatement ps = con.prepareStatement(\"UPDATE `characters` SET `MerchantMesos` = 0 WHERE `id` = ?\")) {\n+                    for (Pair<Integer, Integer> cid : expiredCids) {\n+                        ps.setInt(1, cid.getLeft());\n+                        ps.addBatch();\n+                        \n+                        World wserv = Server.getInstance().getWorld(cid.getRight());\n+                        if (wserv != null) {\n+                            MapleCharacter chr = wserv.getPlayerStorage().getCharacterById(cid.getLeft());\n+                            if (chr != null) {\n+                                chr.setMerchantMeso(0);\n+                            }\n+                        }\n+                    }\n+                    \n+                    ps.executeBatch();\n+                }\n+                \n+                removeFredrickReminders(expiredCids);\n+                \n+                try (PreparedStatement ps = con.prepareStatement(\"DELETE FROM `fredstorage` WHERE `cid` = ?\")) {\n+                    for (Pair<Integer, Integer> cid : expiredCids) {\n+                        ps.setInt(1, cid.getLeft());\n+                        ps.addBatch();\n+                    }\n+                    \n+                    ps.executeBatch();\n+                }\n+            }\n+            \n+            if (!notifCids.isEmpty()) {\n+                try (PreparedStatement ps = con.prepareStatement(\"UPDATE `fredstorage` SET `daynotes` = ? WHERE `cid` = ?\")) {\n+                    for (Pair<Pair<Integer, String>, Integer> cid : notifCids) {\n+                        ps.setInt(1, cid.getRight());\n+                        ps.setInt(2, cid.getLeft().getLeft());\n+                        ps.addBatch();\n+                        \n+                        String msg = fredrickReminderMessage(cid.getRight() - 1);\n+                        MapleCharacter.sendNote(cid.getLeft().getRight(), \"FREDRICK\", msg, (byte) 0);\n+                    }\n+                    \n+                    ps.executeBatch();\n+                }\n+            }\n+            \n+            con.close();\n+        } catch (SQLException e) {\n+            e.printStackTrace();\n         }\n-        return MapleInventory.checkSpotsAndOwnership(chr, items);\n     }\n \n     private static boolean deleteFredrickItems(int cid) {\n@@ -77,13 +290,15 @@ public static void fredrickRetrieveItems(MapleClient c) {     // thanks Gustav f\n                 List<Pair<Item, MapleInventoryType>> items;\n                 try {\n                     items = ItemFactory.MERCHANT.loadItems(chr.getId(), false);\n-                    if (!canRetrieveFromFredrick(chr, items)) {\n-                        chr.announce(MaplePacketCreator.fredrickMessage((byte) 0x21));\n+                    \n+                    byte response = canRetrieveFromFredrick(chr, items);\n+                    if (response != 0) {\n+                        chr.announce(MaplePacketCreator.fredrickMessage(response));\n                         return;\n                     }\n-\n+                    \n                     chr.withdrawMerchantMesos();\n-\n+                    \n                     if (deleteFredrickItems(chr.getId())) {\n                         MapleHiredMerchant merchant = chr.getHiredMerchant();\n \n@@ -98,6 +313,7 @@ public static void fredrickRetrieveItems(MapleClient c) {     // thanks Gustav f\n                         }\n \n                         chr.announce(MaplePacketCreator.fredrickMessage((byte) 0x1E));\n+                        removeFredrickLog(chr.getId());\n                     } else {\n                         chr.message(\"An unknown error has occured.\");\n                     }"}, {"sha": "b77cfe642383fadd18cb4a256184d68efe3b249d", "filename": "src/constants/GameConstants.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/constants/GameConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/constants/GameConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/GameConstants.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -592,6 +592,10 @@ public static boolean isPqSkillMap(int mapid) {\n     \treturn isDojo(mapid) || isPyramid(mapid);\n     }\n     \n+    public static boolean isFishingArea(int mapid) {\n+    \treturn mapid == 120010000 || mapid == 251000100 || mapid == 541010110;\n+    }\n+    \n     public static boolean isFinisherSkill(int skillId) {\n         return skillId > 1111002 && skillId < 1111007 || skillId == 11111002 || skillId == 11111003;\n     }"}, {"sha": "fbbbfc900bb4d08341427b74a446a7733429aa28", "filename": "src/constants/ItemConstants.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/constants/ItemConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/constants/ItemConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ItemConstants.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -224,6 +224,10 @@ public static boolean isEquipment(int itemId) {\n         return itemId < 2000000 && itemId != 0;\n     }\n \n+    public static boolean isFishingChair(int itemId) {\n+        return itemId == 3011000;\n+    }\n+    \n     public static boolean isMedal(int itemId) {\n         return itemId >= 1140000 && itemId < 1143000;\n     }"}, {"sha": "cd07a535c838305f0fbcbbfe154d68e650f0f12c", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -20,6 +20,7 @@\n     public static final int WLDLIST_SIZE = 21;                  //Max possible worlds on the server.\n     public static final int CHANNEL_SIZE = 20;                  //Max possible channels per world (which is 20, based on the channel list on login phase).\n     public static final int CHANNEL_LOAD = 100;                 //Max players per channel (limit actually used to calculate the World server capacity).\n+    public static final int CHANNEL_LOCKS = 20;                 //Total number of structure management locks each channel has.\n     \n     public static final long RESPAWN_INTERVAL = 10 * 1000;\t//10 seconds, 10000.\n     public static final long PURGING_INTERVAL = 5 * 60 * 1000;\n@@ -92,6 +93,7 @@\n     public static final boolean USE_ENFORCE_ITEM_SUGGESTION = false;//Forces the Owl of Minerva and the Cash Shop to always display the defined item array instead of those featured by the players.\n     public static final boolean USE_ENFORCE_UNMERCHABLE_CASH = true;//Forces players to not sell CASH items via merchants.\n     public static final boolean USE_ENFORCE_UNMERCHABLE_PET = true; //Forces players to not sell pets via merchants. (since non-named pets gets dirty name and other possible DB-related issues)\n+    public static final boolean USE_ENFORCE_MERCHANT_SAVE = true;   //Forces automatic DB save on merchant owners, at every item movement on shop.\n     public static final boolean USE_ENFORCE_MDOOR_POSITION = false; //Forces mystic door to be spawned near spawnpoints.\n     public static final boolean USE_SPAWN_LOOT_ON_ANIMATION = false;//Makes loot appear some time after the mob has been killed (following the mob death animation, instead of instantly).\n     public static final boolean USE_SPAWN_RELEVANT_LOOT = true;     //Forces to only spawn loots that are collectable by the player or any of their party members.\n@@ -103,8 +105,9 @@\n     public static final boolean USE_MULTIPLE_SAME_EQUIP_DROP = true;//Enables multiple drops by mobs of the same equipment, number of possible drops based on the quantities provided at the drop data.\n     public static final boolean USE_BANISHABLE_TOWN_SCROLL = true;  //Enables town scrolls to act as if it's a \"player banish\", rendering the antibanish scroll effect available.\n     public static final boolean USE_ENABLE_FULL_RESPAWN = true;     //At respawn task, always respawn missing mobs when they're available. Spawn count doesn't depend on how many players are currently there.\n-    public static final boolean USE_ENABLE_CHAT_LOG = true;         //Write in-game chat to log\n-    public static final boolean USE_REBIRTH_SYSTEM = false;       //Flag to enable/disable rebirth system\n+    public static final boolean USE_ENABLE_CHAT_LOG = false;        //Write in-game chat to log\n+    public static final boolean USE_REBIRTH_SYSTEM = false;         //Flag to enable/disable rebirth system\n+    public static final boolean USE_MAP_OWNERSHIP_SYSTEM = true;    //Flag to enable/disable map ownership system\n     \n     //Events/PQs Configuration\n     public static final boolean USE_OLD_GMS_STYLED_PQ_NPCS = true;  //Enables PQ NPCs with similar behaviour to old GMS style, that skips info about the PQs and immediately tries to register the party in.\n@@ -137,10 +140,11 @@\n     public static final int DROP_RATE = 10;\n     public static final int BOSS_DROP_RATE = 10;                    //NOTE: Boss drop rate OVERRIDES common drop rate, for bosses-only.\n     public static final int QUEST_RATE = 5;                         //Multiplier for Exp & Meso gains when completing a quest. Only available when USE_QUEST_RATE is true. Stacks with server Exp & Meso rates.\n+    public static final int FISHING_RATE = 10;                      //Multiplier for success likelihood on meso thrown during fishing.\n     public static final int TRAVEL_RATE = 10;                       //Means of transportation rides/departs using 1/N of the default time.\n     \n     public static final double EQUIP_EXP_RATE = 1.0;                //Rate for equipment exp gain, grows linearly. Set 1.0 for default (about 100~200 same-level range mobs killed to pass equip from level 1 to 2).\n-    public static final double PARTY_BONUS_EXP_RATE = 1.0;          //Rate for the party exp reward.\n+    public static final float PARTY_BONUS_EXP_RATE = 1.0f;          //Rate for the party exp bonus reward.\n     public static final double PQ_BONUS_EXP_RATE = 0.5;             //Rate for the PQ exp reward.\n     \n     public static final int PARTY_EXPERIENCE_MOD = 1;               //Change for event stuff."}, {"sha": "2b8d2643053d136537fb3d0b597a923058122a19", "filename": "src/net/PacketProcessor.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/PacketProcessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/PacketProcessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/PacketProcessor.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -231,6 +231,7 @@ public void reset(int channel) {\n             registerHandler(RecvOpcode.ADMIN_COMMAND, new AdminCommandHandler());\n             registerHandler(RecvOpcode.ADMIN_LOG, new AdminLogHandler());\n             registerHandler(RecvOpcode.ALLIANCE_OPERATION, new AllianceOperationHandler());\n+            registerHandler(RecvOpcode.DENY_ALLIANCE_REQUEST, new DenyAllianceRequestHandler());\n             registerHandler(RecvOpcode.USE_SOLOMON_ITEM, new UseSolomonHandler());\n             registerHandler(RecvOpcode.USE_GACHA_EXP, new UseGachaExpHandler());\n             registerHandler(RecvOpcode.NEW_YEAR_CARD_REQUEST, new NewYearCardHandler());"}, {"sha": "15a2278227bd8f8cfcc62f5f9e5f79b0b3ad1d68", "filename": "src/net/opcodes/RecvOpcode.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/opcodes/RecvOpcode.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/opcodes/RecvOpcode.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/opcodes/RecvOpcode.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -144,6 +144,7 @@\n     WEDDING_TALK(0x8B),\n     WEDDING_TALK_MORE(0x8B),\n     ALLIANCE_OPERATION(0x8F),\n+    DENY_ALLIANCE_REQUEST(0x90),\n     OPEN_FAMILY(0x92),\n     ADD_FAMILY(0x93),\n     ACCEPT_FAMILY(0x96),"}, {"sha": "3632e139d0c5af57eab559772ffabdbeb2affa3f", "filename": "src/net/server/Server.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/Server.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/Server.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/Server.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -60,6 +60,8 @@\n import net.server.worker.CharacterDiseaseWorker;\n import net.server.worker.CouponWorker;\n import net.server.worker.EventRecallCoordinatorWorker;\n+import net.server.worker.FredrickWorker;\n+import net.server.worker.InvitationWorker;\n import net.server.worker.LoginCoordinatorWorker;\n import net.server.worker.LoginStorageWorker;\n import net.server.worker.RankingCommandWorker;\n@@ -398,11 +400,12 @@ private int initWorld(Properties p) {\n             int bossdroprate = getWorldProperty(p, \"bossdroprate\", i, ServerConstants.BOSS_DROP_RATE);\n             int questrate = getWorldProperty(p, \"questrate\", i, ServerConstants.QUEST_RATE);\n             int travelrate = getWorldProperty(p, \"travelrate\", i, ServerConstants.TRAVEL_RATE);\n+            int fishingrate = getWorldProperty(p, \"fishrate\", i, ServerConstants.FISHING_RATE);\n             \n             World world = new World(i,\n                     Integer.parseInt(p.getProperty(\"flag\" + i)),\n                     p.getProperty(\"eventmessage\" + i),\n-                    exprate, droprate, bossdroprate, mesorate, questrate, travelrate);\n+                    exprate, droprate, bossdroprate, mesorate, questrate, travelrate, fishingrate);\n \n             worldRecommendedList.add(new Pair<>(i, p.getProperty(\"whyamirecommended\" + i)));\n             worlds.add(world);\n@@ -915,6 +918,8 @@ public void init() {\n         tMan.register(new LoginCoordinatorWorker(), 60 * 60 * 1000, timeLeft);\n         tMan.register(new EventRecallCoordinatorWorker(), 60 * 60 * 1000, timeLeft);\n         tMan.register(new LoginStorageWorker(), 2 * 60 * 1000, 2 * 60 * 1000);\n+        tMan.register(new FredrickWorker(), 60 * 60 * 1000, 60 * 60 * 1000);\n+        tMan.register(new InvitationWorker(), 30 * 1000, 30 * 1000);\n         \n         long timeToTake = System.currentTimeMillis();\n         SkillFactory.loadAllSkills();"}, {"sha": "08b9aab87fa1c746ebc4e74e78306f460f3cd350", "filename": "src/net/server/channel/Channel.java", "status": "modified", "additions": 35, "deletions": 22, "changes": 57, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/Channel.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/Channel.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/Channel.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -33,6 +33,7 @@\n import java.util.Map;\n import java.util.Map.Entry;\n import java.util.Set;\n+import java.util.WeakHashMap;\n import java.util.concurrent.ScheduledFuture;\n import java.util.concurrent.locks.ReentrantReadWriteLock;\n import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n@@ -89,18 +90,19 @@\n     private String ip, serverMessage;\n     private MapleMapFactory mapFactory;\n     private EventScriptManager eventSM;\n-    private MobStatusScheduler mobStatusSchedulers[] = new MobStatusScheduler[4];\n-    private MobAnimationScheduler mobAnimationSchedulers[] = new MobAnimationScheduler[4];\n-    private MobClearSkillScheduler mobClearSkillSchedulers[] = new MobClearSkillScheduler[4];\n-    private MobMistScheduler mobMistSchedulers[] = new MobMistScheduler[4];\n-    private FaceExpressionScheduler faceExpressionSchedulers[] = new FaceExpressionScheduler[4];\n-    private EventScheduler eventSchedulers[] = new EventScheduler[4];\n-    private OverallScheduler channelSchedulers[] = new OverallScheduler[4];\n+    private MobStatusScheduler mobStatusSchedulers[] = new MobStatusScheduler[ServerConstants.CHANNEL_LOCKS];\n+    private MobAnimationScheduler mobAnimationSchedulers[] = new MobAnimationScheduler[ServerConstants.CHANNEL_LOCKS];\n+    private MobClearSkillScheduler mobClearSkillSchedulers[] = new MobClearSkillScheduler[ServerConstants.CHANNEL_LOCKS];\n+    private MobMistScheduler mobMistSchedulers[] = new MobMistScheduler[ServerConstants.CHANNEL_LOCKS];\n+    private FaceExpressionScheduler faceExpressionSchedulers[] = new FaceExpressionScheduler[ServerConstants.CHANNEL_LOCKS];\n+    private EventScheduler eventSchedulers[] = new EventScheduler[ServerConstants.CHANNEL_LOCKS];\n+    private OverallScheduler channelSchedulers[] = new OverallScheduler[ServerConstants.CHANNEL_LOCKS];\n     private Map<Integer, MapleHiredMerchant> hiredMerchants = new HashMap<>();\n     private final Map<Integer, Integer> storedVars = new HashMap<>();\n     private Set<Integer> playersAway = new HashSet<>();\n     private List<MapleExpedition> expeditions = new ArrayList<>();\n     private List<MapleExpeditionType> expedType = new ArrayList<>();\n+    private Set<MapleMap> ownedMaps = Collections.synchronizedSet(Collections.newSetFromMap(new WeakHashMap<MapleMap, Boolean>()));\n     private MapleEvent event;\n     private boolean finishedShutdown = false;\n     private int usedDojo = 0;\n@@ -130,7 +132,7 @@\n     private ReadLock merchRlock = merchantLock.readLock();\n     private WriteLock merchWlock = merchantLock.writeLock();\n     \n-    private MonitoredReentrantLock faceLock[] = new MonitoredReentrantLock[4];\n+    private MonitoredReentrantLock faceLock[] = new MonitoredReentrantLock[ServerConstants.CHANNEL_LOCKS];\n     \n     private MonitoredReentrantLock lock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHANNEL, true);\n     \n@@ -168,7 +170,7 @@ public Channel(final int world, final int channel, long startTime) {\n                 dojoTask[i] = null;\n             }\n             \n-            for(int i = 0; i < 4; i++) {\n+            for(int i = 0; i < ServerConstants.CHANNEL_LOCKS; i++) {\n                 faceLock[i] = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHANNEL_FACEEXPRS, true);\n                 \n                 mobStatusSchedulers[i] = new MobStatusScheduler();\n@@ -235,7 +237,7 @@ private void closeChannelSchedules() {\n             }\n         }\n \n-        for(int i = 0; i < 4; i++) {\n+        for(int i = 0; i < ServerConstants.CHANNEL_LOCKS; i++) {\n             if(mobStatusSchedulers[i] != null) {\n                 mobStatusSchedulers[i].dispose();\n                 mobStatusSchedulers[i] = null;\n@@ -285,7 +287,7 @@ public void run() {\n     }\n     \n     private void emptyLocks() {\n-        for(int i = 0; i < 4; i++) {\n+        for(int i = 0; i < ServerConstants.CHANNEL_LOCKS; i++) {\n             faceLock[i] = faceLock[i].dispose();\n         }\n         \n@@ -968,22 +970,33 @@ public void dropMessage(int type, String message) {\n         }\n     }\n     \n-    private static int getChannelSchedulerIndex(int mapid) {\n-        if(mapid >= 250000000) {\n-            if(mapid >= 900000000) {\n-                return 3;\n-            } else {\n-                return 2;\n+    public void registerOwnedMap(MapleMap map) {\n+        ownedMaps.add(map);\n+    }\n+    \n+    public void unregisterOwnedMap(MapleMap map) {\n+        ownedMaps.remove(map);\n+    }\n+    \n+    public void runCheckOwnedMapsSchedule() {\n+        if (!ownedMaps.isEmpty()) {\n+            List<MapleMap> ownedMapsList;\n+            \n+            synchronized (ownedMaps) {\n+                ownedMapsList = new ArrayList<>(ownedMaps);\n             }\n-        } else {\n-            if(mapid >= 200000000) {\n-                return 1;\n-            } else {\n-                return 0;\n+            \n+            for (MapleMap map : ownedMapsList) {\n+                map.checkMapOwnerActivity();\n             }\n         }\n     }\n     \n+    private static int getChannelSchedulerIndex(int mapid) {\n+        int section = 1000000000 / ServerConstants.CHANNEL_LOCKS;\n+        return mapid / section;\n+    }\n+    \n     public void registerMobStatus(int mapid, MonsterStatusEffect mse, Runnable cancelAction, long duration) {\n         registerMobStatus(mapid, mse, cancelAction, duration, null, -1);\n     }"}, {"sha": "854b6f097985cb643e0067565183ea25b3094b83", "filename": "src/net/server/channel/handlers/AbstractDealDamageHandler.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/AbstractDealDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/AbstractDealDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/AbstractDealDamageHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -136,6 +136,10 @@ public MapleStatEffect getAttackEffect(MapleCharacter chr, Skill theSkill) {\n     }\n \n     protected synchronized void applyAttack(AttackInfo attack, final MapleCharacter player, int attackCount) {\n+        if (player.getMap().isOwnershipRestricted(player)) {\n+            return;\n+        }\n+        \n         Skill theSkill = null;\n         MapleStatEffect attackEffect = null;\n         final int job = player.getJob().getId();"}, {"sha": "8e440a44a4e06b26ca984a0fde70a78b5f58b18b", "filename": "src/net/server/channel/handlers/AdminCommandHandler.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/AdminCommandHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/AdminCommandHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/AdminCommandHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -132,7 +132,6 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     MapleMonster monster = (MapleMonster) monsterx.get(x);\n                     if (monster.getId() == mobToKill) {\n                         c.getPlayer().getMap().killMonster(monster, c.getPlayer(), true);\n-                        //monster.giveExpToCharacter(c.getPlayer(), monster.getExp(), true, 1); already being done\n                     }\n                 }\n                 break;"}, {"sha": "0c74c76142c2a29930818e800a6e26175097217a", "filename": "src/net/server/channel/handlers/AllianceOperationHandler.java", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/AllianceOperationHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/AllianceOperationHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/AllianceOperationHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -61,7 +61,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             }\n         } else {\n             if (b == 4) {\n-                chr.dropMessage(\"Your guild is already registered on a Guild Alliance.\");\n+                chr.dropMessage(5, \"Your guild is already registered on a guild alliance.\");\n                 c.announce(MaplePacketCreator.enableActions());\n                 return;\n             }\n@@ -88,27 +88,16 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             case 0x03: // Send Invite\n                 String guildName = slea.readMapleAsciiString();\n                 \n-                if(alliance.getGuilds().size() == alliance.getCapacity()) {\n-                    chr.dropMessage(\"Your alliance cannot comport any more guilds at the moment.\");\n+                if (alliance.getGuilds().size() == alliance.getCapacity()) {\n+                    chr.dropMessage(5, \"Your alliance cannot comport any more guilds at the moment.\");\n                 } else {\n-                    MapleGuild mg = Server.getInstance().getGuildByName(guildName);\n-                    if(mg == null) {\n-                        chr.dropMessage(\"The entered guild does not exist.\");\n-                    }\n-                    else {\n-                        MapleCharacter victim = mg.getMGC(mg.getLeaderId()).getCharacter();\n-                        \n-                        if (victim == null) {\n-                            chr.dropMessage(\"The master of the guild that you offered an invitation is currently not online.\");\n-                        } else {\n-                            victim.getClient().announce(MaplePacketCreator.sendAllianceInvitation(alliance.getId(), chr));\n-                        }\n-                    }\n+                    MapleAlliance.sendInvitation(c, guildName, alliance.getId());\n                 }\n                 \n                 break;\n             case 0x04: { // Accept Invite\n-                if (chr.getGuild().getAllianceId() != 0 || chr.getGuildRank() != 1 || chr.getGuildId() < 1) {\n+                MapleGuild guild = chr.getGuild();\n+                if (guild.getAllianceId() != 0 || chr.getGuildRank() != 1 || chr.getGuildId() < 1) {\n                     return;\n                 }\n                 \n@@ -120,6 +109,15 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     return;\n                 }\n                 \n+                if (!MapleAlliance.answerInvitation(c.getPlayer().getId(), guild.getName(), alliance.getId(), true)) {\n+                    return;\n+                }\n+                \n+                if (alliance.getGuilds().size() == alliance.getCapacity()) {\n+                    chr.dropMessage(5, \"Your alliance cannot comport any more guilds at the moment.\");\n+                    return;\n+                }\n+                \n                 int guildid = chr.getGuildId();\n \n                 Server.getInstance().addGuildtoAlliance(alliance.getId(), guildid);\n@@ -132,7 +130,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 Server.getInstance().allianceMessage(alliance.getId(), MaplePacketCreator.addGuildToAlliance(alliance, guildid, c), -1, -1);\n                 Server.getInstance().allianceMessage(alliance.getId(), MaplePacketCreator.updateAllianceInfo(alliance, c.getWorld()), -1, -1);\n                 Server.getInstance().allianceMessage(alliance.getId(), MaplePacketCreator.allianceNotice(alliance.getId(), alliance.getNotice()), -1, -1);\n-                chr.getGuild().dropMessage(\"Your guild has joined the [\" + alliance.getName() + \"] union.\");\n+                guild.dropMessage(\"Your guild has joined the [\" + alliance.getName() + \"] union.\");\n                \n                 break;\n             }"}, {"sha": "9ebb36ccb6c627f26c0648056d9e29aa1228013e", "filename": "src/net/server/channel/handlers/CashOperationHandler.java", "status": "modified", "additions": 304, "deletions": 296, "changes": 600, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/CashOperationHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/CashOperationHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/CashOperationHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -57,317 +57,325 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             return;\n         }\n         \n-        final int action = slea.readByte();\n-        if (action == 0x03 || action == 0x1E) {\n-            slea.readByte();\n-            final int useNX = slea.readInt();\n-            final int snCS = slea.readInt();\n-            CashItem cItem = CashItemFactory.getItem(snCS);\n-            if (!canBuy(chr, cItem, cs.getCash(useNX))) {\n-                FilePrinter.printError(FilePrinter.ITEM, \"Denied to sell cash item with SN \" + snCS);   // preventing NPE here thanks to MedicOP\n-                c.enableCSActions();\n-                return;\n-            }\n-            \n-            if (action == 0x03) { // Item\n-                if (ItemConstants.isCashStore(cItem.getItemId()) && chr.getLevel() < 16) {\n-                    c.enableCSActions();\n-                    return;\n-                } else if (ItemConstants.isRateCoupon(cItem.getItemId()) && !ServerConstants.USE_SUPPLY_RATE_COUPONS) {\n-                    chr.dropMessage(1, \"Rate coupons are currently unavailable to purchase.\");\n-                    c.enableCSActions();\n-                    return;\n-                } else if (ItemConstants.isMapleLife(cItem.getItemId()) && chr.getLevel() < 30) {\n-                    c.enableCSActions();\n-                    return;\n-                }\n-                \n-                Item item = cItem.toItem();\n-                cs.addToInventory(item);\n-                c.announce(MaplePacketCreator.showBoughtCashItem(item, c.getAccID()));\n-            } else { // Package\n-                List<Item> cashPackage = CashItemFactory.getPackage(cItem.getItemId());\n-                for (Item item : cashPackage) {\n-                    cs.addToInventory(item);\n-                }\n-                c.announce(MaplePacketCreator.showBoughtCashPackage(cashPackage, c.getAccID()));\n-            }\n-            cs.gainCash(useNX, cItem, chr.getWorld());\n-            c.announce(MaplePacketCreator.showCash(chr));\n-        } else if (action == 0x04) {//TODO check for gender\n-            int birthday = slea.readInt();\n-            CashItem cItem = CashItemFactory.getItem(slea.readInt());\n-            Map<String, String> recipient = MapleCharacter.getCharacterFromDatabase(slea.readMapleAsciiString());\n-            String message = slea.readMapleAsciiString();\n-            if (!canBuy(chr, cItem, cs.getCash(4)) || message.length() < 1 || message.length() > 73) {\n-                c.enableCSActions();\n-                return;\n-            }\n-            if (!checkBirthday(c, birthday)) {\n-                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC4));\n-                return;\n-            } else if (recipient == null) {\n-                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xA9));\n-                return;\n-            } else if (recipient.get(\"accountid\").equals(String.valueOf(c.getAccID()))) {\n-                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xA8));\n-                return;\n-            }\n-            cs.gift(Integer.parseInt(recipient.get(\"id\")), chr.getName(), message, cItem.getSN());\n-            c.announce(MaplePacketCreator.showGiftSucceed(recipient.get(\"name\"), cItem));\n-            cs.gainCash(4, cItem, chr.getWorld());\n-            c.announce(MaplePacketCreator.showCash(chr));\n+        if (c.tryacquireClient()) {     // thanks Thora for finding out an exploit within cash operations\n             try {\n-                chr.sendNote(recipient.get(\"name\"), chr.getName() + \" has sent you a gift! Go check out the Cash Shop.\", (byte) 0); //fame or not\n-            } catch (SQLException ex) {\n-                ex.printStackTrace();\n-            }\n-            MapleCharacter receiver = c.getChannelServer().getPlayerStorage().getCharacterByName(recipient.get(\"name\"));\n-            if (receiver != null) receiver.showNote();\n-        } else if (action == 0x05) { // Modify wish list\n-            cs.clearWishList();\n-            for (byte i = 0; i < 10; i++) {\n-                int sn = slea.readInt();\n-                CashItem cItem = CashItemFactory.getItem(sn);\n-                if (cItem != null && cItem.isOnSale() && sn != 0) {\n-                    cs.addToWishList(sn);\n-                }\n-            }\n-            c.announce(MaplePacketCreator.showWishList(chr, true));\n-        } else if (action == 0x06) { // Increase Inventory Slots\n-            slea.skip(1);\n-            int cash = slea.readInt();\n-            byte mode = slea.readByte();\n-            if (mode == 0) {\n-                byte type = slea.readByte();\n-                if (cs.getCash(cash) < 4000) {\n-                    c.enableCSActions();\n-                    return;\n-                }\n-                if (chr.gainSlots(type, 4, false)) {\n-                    c.announce(MaplePacketCreator.showBoughtInventorySlots(type, chr.getSlots(type)));\n-                    cs.gainCash(cash, -4000);\n-                    c.announce(MaplePacketCreator.showCash(chr));\n-                }\n-            } else {\n-                CashItem cItem = CashItemFactory.getItem(slea.readInt());\n-                int type = (cItem.getItemId() - 9110000) / 1000;\n-                if (!canBuy(chr, cItem, cs.getCash(cash))) {\n-                    c.enableCSActions();\n-                    return;\n-                }\n-                if (chr.gainSlots(type, 8, false)) {\n-                    c.announce(MaplePacketCreator.showBoughtInventorySlots(type, chr.getSlots(type)));\n-                    cs.gainCash(cash, cItem, chr.getWorld());\n+                final int action = slea.readByte();\n+                if (action == 0x03 || action == 0x1E) {\n+                    slea.readByte();\n+                    final int useNX = slea.readInt();\n+                    final int snCS = slea.readInt();\n+                    CashItem cItem = CashItemFactory.getItem(snCS);\n+                    if (!canBuy(chr, cItem, cs.getCash(useNX))) {\n+                        FilePrinter.printError(FilePrinter.ITEM, \"Denied to sell cash item with SN \" + snCS);   // preventing NPE here thanks to MedicOP\n+                        c.enableCSActions();\n+                        return;\n+                    }\n+\n+                    if (action == 0x03) { // Item\n+                        if (ItemConstants.isCashStore(cItem.getItemId()) && chr.getLevel() < 16) {\n+                            c.enableCSActions();\n+                            return;\n+                        } else if (ItemConstants.isRateCoupon(cItem.getItemId()) && !ServerConstants.USE_SUPPLY_RATE_COUPONS) {\n+                            chr.dropMessage(1, \"Rate coupons are currently unavailable to purchase.\");\n+                            c.enableCSActions();\n+                            return;\n+                        } else if (ItemConstants.isMapleLife(cItem.getItemId()) && chr.getLevel() < 30) {\n+                            c.enableCSActions();\n+                            return;\n+                        }\n+\n+                        Item item = cItem.toItem();\n+                        cs.addToInventory(item);\n+                        c.announce(MaplePacketCreator.showBoughtCashItem(item, c.getAccID()));\n+                    } else { // Package\n+                        List<Item> cashPackage = CashItemFactory.getPackage(cItem.getItemId());\n+                        for (Item item : cashPackage) {\n+                            cs.addToInventory(item);\n+                        }\n+                        c.announce(MaplePacketCreator.showBoughtCashPackage(cashPackage, c.getAccID()));\n+                    }\n+                    cs.gainCash(useNX, cItem, chr.getWorld());\n                     c.announce(MaplePacketCreator.showCash(chr));\n-                }\n-            }\n-        } else if (action == 0x07) { // Increase Storage Slots\n-            slea.skip(1);\n-            int cash = slea.readInt();\n-            byte mode = slea.readByte();\n-            if (mode == 0) {\n-                if (cs.getCash(cash) < 4000) {\n-                    c.enableCSActions();\n-                    return;\n-                }\n-                if (chr.getStorage().gainSlots(4)) {\n-                    FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" bought 4 slots to their account storage.\");\n-                    chr.setUsedStorage();\n-                    \n-                    c.announce(MaplePacketCreator.showBoughtStorageSlots(chr.getStorage().getSlots()));\n-                    cs.gainCash(cash, -4000);\n+                } else if (action == 0x04) {//TODO check for gender\n+                    int birthday = slea.readInt();\n+                    CashItem cItem = CashItemFactory.getItem(slea.readInt());\n+                    Map<String, String> recipient = MapleCharacter.getCharacterFromDatabase(slea.readMapleAsciiString());\n+                    String message = slea.readMapleAsciiString();\n+                    if (!canBuy(chr, cItem, cs.getCash(4)) || message.length() < 1 || message.length() > 73) {\n+                        c.enableCSActions();\n+                        return;\n+                    }\n+                    if (!checkBirthday(c, birthday)) {\n+                        c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC4));\n+                        return;\n+                    } else if (recipient == null) {\n+                        c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xA9));\n+                        return;\n+                    } else if (recipient.get(\"accountid\").equals(String.valueOf(c.getAccID()))) {\n+                        c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xA8));\n+                        return;\n+                    }\n+                    cs.gift(Integer.parseInt(recipient.get(\"id\")), chr.getName(), message, cItem.getSN());\n+                    c.announce(MaplePacketCreator.showGiftSucceed(recipient.get(\"name\"), cItem));\n+                    cs.gainCash(4, cItem, chr.getWorld());\n                     c.announce(MaplePacketCreator.showCash(chr));\n-                }\n-            } else {\n-                CashItem cItem = CashItemFactory.getItem(slea.readInt());\n+                    try {\n+                        chr.sendNote(recipient.get(\"name\"), chr.getName() + \" has sent you a gift! Go check out the Cash Shop.\", (byte) 0); //fame or not\n+                    } catch (SQLException ex) {\n+                        ex.printStackTrace();\n+                    }\n+                    MapleCharacter receiver = c.getChannelServer().getPlayerStorage().getCharacterByName(recipient.get(\"name\"));\n+                    if (receiver != null) receiver.showNote();\n+                } else if (action == 0x05) { // Modify wish list\n+                    cs.clearWishList();\n+                    for (byte i = 0; i < 10; i++) {\n+                        int sn = slea.readInt();\n+                        CashItem cItem = CashItemFactory.getItem(sn);\n+                        if (cItem != null && cItem.isOnSale() && sn != 0) {\n+                            cs.addToWishList(sn);\n+                        }\n+                    }\n+                    c.announce(MaplePacketCreator.showWishList(chr, true));\n+                } else if (action == 0x06) { // Increase Inventory Slots\n+                    slea.skip(1);\n+                    int cash = slea.readInt();\n+                    byte mode = slea.readByte();\n+                    if (mode == 0) {\n+                        byte type = slea.readByte();\n+                        if (cs.getCash(cash) < 4000) {\n+                            c.enableCSActions();\n+                            return;\n+                        }\n+                        if (chr.gainSlots(type, 4, false)) {\n+                            c.announce(MaplePacketCreator.showBoughtInventorySlots(type, chr.getSlots(type)));\n+                            cs.gainCash(cash, -4000);\n+                            c.announce(MaplePacketCreator.showCash(chr));\n+                        }\n+                    } else {\n+                        CashItem cItem = CashItemFactory.getItem(slea.readInt());\n+                        int type = (cItem.getItemId() - 9110000) / 1000;\n+                        if (!canBuy(chr, cItem, cs.getCash(cash))) {\n+                            c.enableCSActions();\n+                            return;\n+                        }\n+                        if (chr.gainSlots(type, 8, false)) {\n+                            c.announce(MaplePacketCreator.showBoughtInventorySlots(type, chr.getSlots(type)));\n+                            cs.gainCash(cash, cItem, chr.getWorld());\n+                            c.announce(MaplePacketCreator.showCash(chr));\n+                        }\n+                    }\n+                } else if (action == 0x07) { // Increase Storage Slots\n+                    slea.skip(1);\n+                    int cash = slea.readInt();\n+                    byte mode = slea.readByte();\n+                    if (mode == 0) {\n+                        if (cs.getCash(cash) < 4000) {\n+                            c.enableCSActions();\n+                            return;\n+                        }\n+                        if (chr.getStorage().gainSlots(4)) {\n+                            FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" bought 4 slots to their account storage.\");\n+                            chr.setUsedStorage();\n \n-                if (!canBuy(chr, cItem, cs.getCash(cash))) {\n-                    c.enableCSActions();\n-                    return;\n-                }\n-                if (chr.getStorage().gainSlots(8)) {    // thanks ABaldParrot & Thora for detecting storage issues here\n-                    FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" bought 8 slots to their account storage.\");\n-                    chr.setUsedStorage();\n-                    \n-                    c.announce(MaplePacketCreator.showBoughtStorageSlots(chr.getStorage().getSlots()));\n-                    cs.gainCash(cash, cItem, chr.getWorld());\n-                    c.announce(MaplePacketCreator.showCash(chr));\n-                }\n-            }\n-        } else if (action == 0x08) { // Increase Character Slots\n-            slea.skip(1); \n-            int cash = slea.readInt();\n-            CashItem cItem = CashItemFactory.getItem(slea.readInt());\n+                            c.announce(MaplePacketCreator.showBoughtStorageSlots(chr.getStorage().getSlots()));\n+                            cs.gainCash(cash, -4000);\n+                            c.announce(MaplePacketCreator.showCash(chr));\n+                        }\n+                    } else {\n+                        CashItem cItem = CashItemFactory.getItem(slea.readInt());\n \n-            if (!canBuy(chr, cItem, cs.getCash(cash))) {\n-                c.enableCSActions();\n-                return;\n-            }\n+                        if (!canBuy(chr, cItem, cs.getCash(cash))) {\n+                            c.enableCSActions();\n+                            return;\n+                        }\n+                        if (chr.getStorage().gainSlots(8)) {    // thanks ABaldParrot & Thora for detecting storage issues here\n+                            FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" bought 8 slots to their account storage.\");\n+                            chr.setUsedStorage();\n \n-            if (c.gainCharacterSlot()) {\n-                c.announce(MaplePacketCreator.showBoughtCharacterSlot(c.getCharacterSlots()));\n-                cs.gainCash(cash, cItem, chr.getWorld());\n-                c.announce(MaplePacketCreator.showCash(chr));\n-            } else {\n-                chr.dropMessage(1, \"You have already used up all 12 extra character slots.\");\n-                c.enableCSActions();\n-                return;\n-            }\n-        } else if (action == 0x0D) { // Take from Cash Inventory\n-            Item item = cs.findByCashId(slea.readInt());\n-            if (item == null) {\n-                c.enableCSActions();\n-                return;\n-            }\n-            if (chr.getInventory(item.getInventoryType()).addItem(item) != -1) {\n-                cs.removeFromInventory(item);\n-                c.announce(MaplePacketCreator.takeFromCashInventory(item));\n-                \n-                if(item instanceof Equip) {\n-                    Equip equip = (Equip) item;\n-                    if(equip.getRingId() >= 0) {\n-                        MapleRing ring = MapleRing.loadFromDb(equip.getRingId());\n-                        chr.addPlayerRing(ring);\n+                            c.announce(MaplePacketCreator.showBoughtStorageSlots(chr.getStorage().getSlots()));\n+                            cs.gainCash(cash, cItem, chr.getWorld());\n+                            c.announce(MaplePacketCreator.showCash(chr));\n+                        }\n                     }\n-                }\n-            }\n-        } else if (action == 0x0E) { // Put into Cash Inventory\n-            int cashId = slea.readInt();\n-            slea.skip(4);\n-            \n-            byte invType = slea.readByte();\n-            if (invType < 1 || invType > 5) {\n-                c.disconnect(false, false);\n-                return;\n-            }\n-            \n-            MapleInventory mi = chr.getInventory(MapleInventoryType.getByType(invType));\n-            Item item = mi.findByCashId(cashId);\n-            if (item == null) {\n-                c.enableCSActions();\n-                return;\n-            } else if (c.getPlayer().getPetIndex(item.getPetId()) > -1) {\n-                chr.getClient().announce(MaplePacketCreator.serverNotice(1, \"You cannot put the pet you currently equip into the Cash Shop inventory.\"));\n-                c.enableCSActions();\n-                return;\n-            } else if (ItemConstants.isWeddingRing(item.getItemId()) || ItemConstants.isWeddingToken(item.getItemId())) {\n-                chr.getClient().announce(MaplePacketCreator.serverNotice(1, \"You cannot put relationship items into the Cash Shop inventory.\"));\n-                c.enableCSActions();\n-                return;\n-            }\n-            cs.addToInventory(item);\n-            mi.removeSlot(item.getPosition());\n-            c.announce(MaplePacketCreator.putIntoCashInventory(item, c.getAccID()));\n-        } else if (action == 0x1D) { //crush ring (action 28)\n-            int birthday = slea.readInt();\n-            if (checkBirthday(c, birthday)) {\n-                int toCharge = slea.readInt();\n-                int SN = slea.readInt();\n-                String recipientName = slea.readMapleAsciiString();\n-                String text = slea.readMapleAsciiString();\n-                CashItem itemRing = CashItemFactory.getItem(SN);\n-                MapleCharacter partner = c.getChannelServer().getPlayerStorage().getCharacterByName(recipientName);\n-                if (partner == null) {\n-                    chr.getClient().announce(MaplePacketCreator.serverNotice(1, \"The partner you specified cannot be found.\\r\\nPlease make sure your partner is online and in the same channel.\"));\n-                } else {\n-                \t\n-                  /*  if (partner.getGender() == chr.getGender()) {\n-                        chr.dropMessage(\"You and your partner are the same gender, please buy a friendship ring.\");\n+                } else if (action == 0x08) { // Increase Character Slots\n+                    slea.skip(1); \n+                    int cash = slea.readInt();\n+                    CashItem cItem = CashItemFactory.getItem(slea.readInt());\n+\n+                    if (!canBuy(chr, cItem, cs.getCash(cash))) {\n+                        c.enableCSActions();\n+                        return;\n+                    }\n+\n+                    if (c.gainCharacterSlot()) {\n+                        c.announce(MaplePacketCreator.showBoughtCharacterSlot(c.getCharacterSlots()));\n+                        cs.gainCash(cash, cItem, chr.getWorld());\n+                        c.announce(MaplePacketCreator.showCash(chr));\n+                    } else {\n+                        chr.dropMessage(1, \"You have already used up all 12 extra character slots.\");\n+                        c.enableCSActions();\n+                        return;\n+                    }\n+                } else if (action == 0x0D) { // Take from Cash Inventory\n+                    Item item = cs.findByCashId(slea.readInt());\n+                    if (item == null) {\n                         c.enableCSActions();\n                         return;\n-                    }*/ //Gotta let them faggots marry too, hence why this is commented out <3 \n-                \t\n-                    if(itemRing.toItem() instanceof Equip) {\n-                        Equip eqp = (Equip) itemRing.toItem();\n-                        Pair<Integer, Integer> rings = MapleRing.createRing(itemRing.getItemId(), chr, partner);\n-                        eqp.setRingId(rings.getLeft());\n-                        cs.addToInventory(eqp);\n-                        c.announce(MaplePacketCreator.showBoughtCashItem(eqp, c.getAccID()));\n-                        cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), rings.getRight());\n-                        cs.gainCash(toCharge, itemRing, chr.getWorld());\n-                        chr.addCrushRing(MapleRing.loadFromDb(rings.getLeft()));\n-                        try {\n-                            chr.sendNote(partner.getName(), text, (byte) 1);\n-                        } catch (SQLException ex) {\n-                            ex.printStackTrace();\n+                    }\n+                    if (chr.getInventory(item.getInventoryType()).addItem(item) != -1) {\n+                        cs.removeFromInventory(item);\n+                        c.announce(MaplePacketCreator.takeFromCashInventory(item));\n+\n+                        if(item instanceof Equip) {\n+                            Equip equip = (Equip) item;\n+                            if(equip.getRingId() >= 0) {\n+                                MapleRing ring = MapleRing.loadFromDb(equip.getRingId());\n+                                chr.addPlayerRing(ring);\n+                            }\n                         }\n-                        partner.showNote();\n-                    }   \n-                }\n-            } else {\n-                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC4));\n-            }\n-                \n-            c.announce(MaplePacketCreator.showCash(c.getPlayer()));\n-        } else if (action == 0x20) {\n-            int serialNumber = slea.readInt();  // thanks GabrielSin for detecting a potential exploit with 1 meso cash items.\n-            if (serialNumber / 10000000 != 8) {\n-                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC0));\n-                return;\n-            }\n-            \n-            CashItem item = CashItemFactory.getItem(serialNumber);\n-            if (item == null || !item.isOnSale()) {\n-                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC0));\n-                return;\n-            }\n-            \n-            int itemId = item.getItemId();\n-            int itemPrice = item.getPrice();\n-            if (itemPrice <= 0) {\n-                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC0));\n-                return;\n-            }\n-            \n-            if (chr.getMeso() >= itemPrice) {\n-                if (chr.canHold(itemId)) {\n-                    chr.gainMeso(-itemPrice, false);\n-                    MapleInventoryManipulator.addById(c, itemId, (short) 1, \"\", -1);\n-                    c.announce(MaplePacketCreator.showBoughtQuestItem(itemId));\n-                }\n-            }\n-            c.announce(MaplePacketCreator.showCash(c.getPlayer()));\n-        } else if (action == 0x23) { //Friendship :3\n-            int birthday = slea.readInt();\n-            if (checkBirthday(c, birthday)) {\n-                int payment = slea.readByte();\n-                slea.skip(3); //0s\n-                int snID = slea.readInt();\n-                CashItem itemRing = CashItemFactory.getItem(snID);\n-                String sentTo = slea.readMapleAsciiString();\n-                int available = slea.readShort() - 1;\n-                String text = slea.readAsciiString(available);\n-                slea.readByte();\n-                MapleCharacter partner = c.getChannelServer().getPlayerStorage().getCharacterByName(sentTo);\n-                if (partner == null) {\n-                    chr.dropMessage(\"The partner you specified cannot be found.\\r\\nPlease make sure your partner is online and in the same channel.\");\n-                } else {\n-                    // Need to check to make sure its actually an equip and the right SN...\n-                    if(itemRing.toItem() instanceof Equip) {\n-                        Equip eqp = (Equip) itemRing.toItem();\n-                        Pair<Integer, Integer> rings = MapleRing.createRing(itemRing.getItemId(), chr, partner);\n-                        eqp.setRingId(rings.getLeft());\n-                        cs.addToInventory(eqp);\n-                        c.announce(MaplePacketCreator.showBoughtCashItem(eqp, c.getAccID()));\n-                        cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), rings.getRight());\n-                        cs.gainCash(payment, -itemRing.getPrice());\n-                        chr.addFriendshipRing(MapleRing.loadFromDb(rings.getLeft()));\n-                        try {\n-                            chr.sendNote(partner.getName(), text, (byte) 1);\n-                        } catch (SQLException ex) {\n-                            ex.printStackTrace();\n+                    }\n+                } else if (action == 0x0E) { // Put into Cash Inventory\n+                    int cashId = slea.readInt();\n+                    slea.skip(4);\n+\n+                    byte invType = slea.readByte();\n+                    if (invType < 1 || invType > 5) {\n+                        c.disconnect(false, false);\n+                        return;\n+                    }\n+\n+                    MapleInventory mi = chr.getInventory(MapleInventoryType.getByType(invType));\n+                    Item item = mi.findByCashId(cashId);\n+                    if (item == null) {\n+                        c.enableCSActions();\n+                        return;\n+                    } else if (c.getPlayer().getPetIndex(item.getPetId()) > -1) {\n+                        chr.getClient().announce(MaplePacketCreator.serverNotice(1, \"You cannot put the pet you currently equip into the Cash Shop inventory.\"));\n+                        c.enableCSActions();\n+                        return;\n+                    } else if (ItemConstants.isWeddingRing(item.getItemId()) || ItemConstants.isWeddingToken(item.getItemId())) {\n+                        chr.getClient().announce(MaplePacketCreator.serverNotice(1, \"You cannot put relationship items into the Cash Shop inventory.\"));\n+                        c.enableCSActions();\n+                        return;\n+                    }\n+                    cs.addToInventory(item);\n+                    mi.removeSlot(item.getPosition());\n+                    c.announce(MaplePacketCreator.putIntoCashInventory(item, c.getAccID()));\n+                } else if (action == 0x1D) { //crush ring (action 28)\n+                    int birthday = slea.readInt();\n+                    if (checkBirthday(c, birthday)) {\n+                        int toCharge = slea.readInt();\n+                        int SN = slea.readInt();\n+                        String recipientName = slea.readMapleAsciiString();\n+                        String text = slea.readMapleAsciiString();\n+                        CashItem itemRing = CashItemFactory.getItem(SN);\n+                        MapleCharacter partner = c.getChannelServer().getPlayerStorage().getCharacterByName(recipientName);\n+                        if (partner == null) {\n+                            chr.getClient().announce(MaplePacketCreator.serverNotice(1, \"The partner you specified cannot be found.\\r\\nPlease make sure your partner is online and in the same channel.\"));\n+                        } else {\n+\n+                          /*  if (partner.getGender() == chr.getGender()) {\n+                                chr.dropMessage(5, \"You and your partner are the same gender, please buy a friendship ring.\");\n+                                c.enableCSActions();\n+                                return;\n+                            }*/ //Gotta let them faggots marry too, hence why this is commented out <3 \n+\n+                            if(itemRing.toItem() instanceof Equip) {\n+                                Equip eqp = (Equip) itemRing.toItem();\n+                                Pair<Integer, Integer> rings = MapleRing.createRing(itemRing.getItemId(), chr, partner);\n+                                eqp.setRingId(rings.getLeft());\n+                                cs.addToInventory(eqp);\n+                                c.announce(MaplePacketCreator.showBoughtCashItem(eqp, c.getAccID()));\n+                                cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), rings.getRight());\n+                                cs.gainCash(toCharge, itemRing, chr.getWorld());\n+                                chr.addCrushRing(MapleRing.loadFromDb(rings.getLeft()));\n+                                try {\n+                                    chr.sendNote(partner.getName(), text, (byte) 1);\n+                                } catch (SQLException ex) {\n+                                    ex.printStackTrace();\n+                                }\n+                                partner.showNote();\n+                            }   \n+                        }\n+                    } else {\n+                        c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC4));\n+                    }\n+\n+                    c.announce(MaplePacketCreator.showCash(c.getPlayer()));\n+                } else if (action == 0x20) {\n+                    int serialNumber = slea.readInt();  // thanks GabrielSin for detecting a potential exploit with 1 meso cash items.\n+                    if (serialNumber / 10000000 != 8) {\n+                        c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC0));\n+                        return;\n+                    }\n+\n+                    CashItem item = CashItemFactory.getItem(serialNumber);\n+                    if (item == null || !item.isOnSale()) {\n+                        c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC0));\n+                        return;\n+                    }\n+\n+                    int itemId = item.getItemId();\n+                    int itemPrice = item.getPrice();\n+                    if (itemPrice <= 0) {\n+                        c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC0));\n+                        return;\n+                    }\n+\n+                    if (chr.getMeso() >= itemPrice) {\n+                        if (chr.canHold(itemId)) {\n+                            chr.gainMeso(-itemPrice, false);\n+                            MapleInventoryManipulator.addById(c, itemId, (short) 1, \"\", -1);\n+                            c.announce(MaplePacketCreator.showBoughtQuestItem(itemId));\n+                        }\n+                    }\n+                    c.announce(MaplePacketCreator.showCash(c.getPlayer()));\n+                } else if (action == 0x23) { //Friendship :3\n+                    int birthday = slea.readInt();\n+                    if (checkBirthday(c, birthday)) {\n+                        int payment = slea.readByte();\n+                        slea.skip(3); //0s\n+                        int snID = slea.readInt();\n+                        CashItem itemRing = CashItemFactory.getItem(snID);\n+                        String sentTo = slea.readMapleAsciiString();\n+                        int available = slea.readShort() - 1;\n+                        String text = slea.readAsciiString(available);\n+                        slea.readByte();\n+                        MapleCharacter partner = c.getChannelServer().getPlayerStorage().getCharacterByName(sentTo);\n+                        if (partner == null) {\n+                            chr.dropMessage(5, \"The partner you specified cannot be found. Please make sure your partner is online and in the same channel.\");\n+                        } else {\n+                            // Need to check to make sure its actually an equip and the right SN...\n+                            if(itemRing.toItem() instanceof Equip) {\n+                                Equip eqp = (Equip) itemRing.toItem();\n+                                Pair<Integer, Integer> rings = MapleRing.createRing(itemRing.getItemId(), chr, partner);\n+                                eqp.setRingId(rings.getLeft());\n+                                cs.addToInventory(eqp);\n+                                c.announce(MaplePacketCreator.showBoughtCashItem(eqp, c.getAccID()));\n+                                cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), rings.getRight());\n+                                cs.gainCash(payment, -itemRing.getPrice());\n+                                chr.addFriendshipRing(MapleRing.loadFromDb(rings.getLeft()));\n+                                try {\n+                                    chr.sendNote(partner.getName(), text, (byte) 1);\n+                                } catch (SQLException ex) {\n+                                    ex.printStackTrace();\n+                                }\n+                                partner.showNote();\n+                            }\n                         }\n-                        partner.showNote();\n+                    } else {\n+                        c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC4));\n                     }\n+\n+                    c.announce(MaplePacketCreator.showCash(c.getPlayer()));\n+                } else {\n+                    System.out.println(\"Unhandled action: \" + action + \"\\n\" + slea);\n                 }\n-            } else {\n-                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC4));\n+            } finally {\n+                c.releaseClient();\n             }\n-                \n-            c.announce(MaplePacketCreator.showCash(c.getPlayer()));\n         } else {\n-            System.out.println(\"Unhandled action: \" + action + \"\\n\" + slea);\n+            c.announce(MaplePacketCreator.enableActions());\n         }\n     }\n "}, {"sha": "8f2bd4b4d3522e93d93bd8dcdba53336b4780a1d", "filename": "src/net/server/channel/handlers/ChangeMapHandler.java", "status": "modified", "additions": 58, "deletions": 54, "changes": 112, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/ChangeMapHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/ChangeMapHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/ChangeMapHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -52,7 +52,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n \t\t\treturn;\n \t\t}\n \t\tif (chr.getTrade() != null) {\n-\t\t\tMapleTrade.cancelTrade(chr);\n+\t\t\tMapleTrade.cancelTrade(chr, MapleTrade.TradeResult.UNSUCCESSFUL_ANOTHER_MAP);\n \t\t}\n \t\tif (slea.available() == 0) { //Cash Shop :)\n \t\t\tif(!chr.getCashShop().isOpened()) {\n@@ -79,66 +79,70 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n \t\t\t\tMaplePortal portal = chr.getMap().getPortal(startwp);\n \t\t\t\tslea.readByte();\n \t\t\t\tboolean wheel = slea.readShort() > 0;\n-\t\t\t\tif (targetid != -1 && !chr.isAlive()) {\n-                                        MapleMap map = chr.getMap();\n-                                        if (wheel && chr.haveItemWithId(5510000, false)) {\n-                                                // thanks lucasziron for showing revivePlayer() also being triggered by Wheel\n-                                                \n-                                                MapleInventoryManipulator.removeById(c, MapleInventoryType.CASH, 5510000, 1, true, false);\n-                                                chr.announce(MaplePacketCreator.showWheelsLeft(chr.getItemQuantity(5510000, false)));\n+                                \n+                                if (targetid != -1) {\n+                                        if (!chr.isAlive()) {\n+                                                MapleMap map = chr.getMap();\n+                                                if (wheel && chr.haveItemWithId(5510000, false)) {\n+                                                        // thanks lucasziron for showing revivePlayer() also being triggered by Wheel\n \n-                                                chr.updateHp(50);\n-                                                chr.changeMap(map, map.findClosestPlayerSpawnpoint(chr.getPosition()));\n-                                        } else {\n-                                                boolean executeStandardPath = true;\n-                                                if (chr.getEventInstance() != null) {\n-                                                        executeStandardPath = chr.getEventInstance().revivePlayer(chr);\n-                                                }\n-                                                if (executeStandardPath) {\n-                                                        chr.respawn(map.getReturnMapId());\n-                                                }\n-                                        }\n-\t\t\t\t} else if (targetid != -1) {\n-                                        if(chr.isGM()) {\n-                                                MapleMap to = chr.getWarpMap(targetid);\n-                                                chr.changeMap(to, to.getPortal(0));\n-                                        }\n-                                        else {\n-                                                final int divi = chr.getMapId() / 100;\n-                                                boolean warp = false;\n-                                                if (divi == 0) {\n-                                                        if (targetid == 10000) {\n-                                                                warp = true;\n-                                                        }\n-                                                } else if (divi == 20100) {\n-                                                        if (targetid == 104000000) {\n-                                                                c.announce(MaplePacketCreator.lockUI(false));\n-                                                                c.announce(MaplePacketCreator.disableUI(false));\n-                                                                warp = true;\n-                                                        }\n-                                                } else if (divi == 9130401) { // Only allow warp if player is already in Intro map, or else = hack\n-                                                        if (targetid == 130000000 || targetid / 100 == 9130401) { // Cygnus introduction\n-                                                                warp = true;\n-                                                        }\n-                                                } else if (divi == 9140900) { // Aran Introduction\n-                                                        if (targetid == 914090011 || targetid == 914090012 || targetid == 914090013 || targetid == 140090000) {\n-                                                                warp = true;\n-                                                        }\n-                                                } else if (divi / 10 == 1020) { // Adventurer movie clip Intro\n-                                                        if (targetid == 1020000) {\n-                                                                warp = true;\n+                                                        MapleInventoryManipulator.removeById(c, MapleInventoryType.CASH, 5510000, 1, true, false);\n+                                                        chr.announce(MaplePacketCreator.showWheelsLeft(chr.getItemQuantity(5510000, false)));\n+\n+                                                        chr.updateHp(50);\n+                                                        chr.changeMap(map, map.findClosestPlayerSpawnpoint(chr.getPosition()));\n+                                                } else {\n+                                                        boolean executeStandardPath = true;\n+                                                        if (chr.getEventInstance() != null) {\n+                                                                executeStandardPath = chr.getEventInstance().revivePlayer(chr);\n                                                         }\n-                                                } else if(divi / 10 >= 980040 && divi / 10 <= 980045) {\n-                                                        if(targetid == 980040000) {\n-                                                                warp = true;\n+                                                        if (executeStandardPath) {\n+                                                                chr.respawn(map.getReturnMapId());\n                                                         }\n                                                 }\n-                                                if (warp) {\n-                                                        final MapleMap to = chr.getWarpMap(targetid);\n+                                        } else {\n+                                                if(chr.isGM()) {\n+                                                        MapleMap to = chr.getWarpMap(targetid);\n                                                         chr.changeMap(to, to.getPortal(0));\n                                                 }\n+                                                else {\n+                                                        final int divi = chr.getMapId() / 100;\n+                                                        boolean warp = false;\n+                                                        if (divi == 0) {\n+                                                                if (targetid == 10000) {\n+                                                                        warp = true;\n+                                                                }\n+                                                        } else if (divi == 20100) {\n+                                                                if (targetid == 104000000) {\n+                                                                        c.announce(MaplePacketCreator.lockUI(false));\n+                                                                        c.announce(MaplePacketCreator.disableUI(false));\n+                                                                        warp = true;\n+                                                                }\n+                                                        } else if (divi == 9130401) { // Only allow warp if player is already in Intro map, or else = hack\n+                                                                if (targetid == 130000000 || targetid / 100 == 9130401) { // Cygnus introduction\n+                                                                        warp = true;\n+                                                                }\n+                                                        } else if (divi == 9140900) { // Aran Introduction\n+                                                                if (targetid == 914090011 || targetid == 914090012 || targetid == 914090013 || targetid == 140090000) {\n+                                                                        warp = true;\n+                                                                }\n+                                                        } else if (divi / 10 == 1020) { // Adventurer movie clip Intro\n+                                                                if (targetid == 1020000) {\n+                                                                        warp = true;\n+                                                                }\n+                                                        } else if(divi / 10 >= 980040 && divi / 10 <= 980045) {\n+                                                                if(targetid == 980040000) {\n+                                                                        warp = true;\n+                                                                }\n+                                                        }\n+                                                        if (warp) {\n+                                                                final MapleMap to = chr.getWarpMap(targetid);\n+                                                                chr.changeMap(to, to.getPortal(0));\n+                                                        }\n+                                                }\n                                         }\n-\t\t\t\t}\n+                                }\n+                                \n \t\t\t\tif (portal != null && !portal.getPortalStatus()) {\n \t\t\t\t\tc.announce(MaplePacketCreator.blockedMessage(1));\n \t\t\t\t\tc.announce(MaplePacketCreator.enableActions());"}, {"sha": "fdafc0d709baf14b60d1862fab8b6513c812a2d7", "filename": "src/net/server/channel/handlers/ChangeMapSpecialHandler.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/ChangeMapSpecialHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/ChangeMapSpecialHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/ChangeMapSpecialHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -25,6 +25,7 @@\n import net.AbstractMaplePacketHandler;\n import server.MaplePortal;\n import server.MapleTrade;\n+import server.MapleTrade.TradeResult;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n@@ -44,7 +45,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     return;\n             }\n             if (c.getPlayer().getTrade() != null) {\n-                    MapleTrade.cancelTrade(c.getPlayer());\n+                    MapleTrade.cancelTrade(c.getPlayer(), TradeResult.UNSUCCESSFUL_ANOTHER_MAP);\n             }\n             portal.enterPortal(c);   \n     }"}, {"sha": "497660d247d2177e3490c2dd3515d740852fb5c6", "filename": "src/net/server/channel/handlers/CloseChalkboardHandler.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/CloseChalkboardHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/CloseChalkboardHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/CloseChalkboardHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -31,6 +31,8 @@\n  * @author Xterminator\n  */\n public final class CloseChalkboardHandler extends AbstractMaplePacketHandler {\n+    \n+    @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         c.getPlayer().setChalkboard(null);\n         c.getPlayer().getMap().broadcastMessage(MaplePacketCreator.useChalkboard(c.getPlayer(), true));"}, {"sha": "bf5c63d771139842743130973e63c08f4b39f20c", "filename": "src/net/server/channel/handlers/DenyAllianceRequestHandler.java", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/DenyAllianceRequestHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/DenyAllianceRequestHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/DenyAllianceRequestHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,47 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.handlers;\n+\n+import client.MapleClient;\n+import client.MapleCharacter;\n+import net.AbstractMaplePacketHandler;\n+import net.server.guild.MapleAlliance;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+/**\n+ * @author Ronan\n+ */\n+public final class DenyAllianceRequestHandler extends AbstractMaplePacketHandler {\n+\n+    @Override\n+    public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n+        slea.readByte();\n+        String inviterName = slea.readMapleAsciiString();\n+        String guildName = slea.readMapleAsciiString();\n+        \n+        MapleCharacter chr = c.getWorldServer().getPlayerStorage().getCharacterByName(inviterName);\n+        if (chr != null) {\n+            MapleAlliance alliance = chr.getAlliance();\n+            if (alliance != null) {\n+                MapleAlliance.answerInvitation(c.getPlayer().getId(), guildName, alliance.getId(), false);\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "e68e116c155dfe411f3736a6c3efce07b6a72dc9", "filename": "src/net/server/channel/handlers/DenyGuildRequestHandler.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/DenyGuildRequestHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/DenyGuildRequestHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/DenyGuildRequestHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -24,19 +24,21 @@\n import client.MapleCharacter;\n import client.MapleClient;\n import net.AbstractMaplePacketHandler;\n-import tools.MaplePacketCreator;\n+import net.server.guild.MapleGuild;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n /**\n  *\n  * @author Xterminator\n  */\n public final class DenyGuildRequestHandler extends AbstractMaplePacketHandler {\n+    \n+    @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         slea.readByte();\n-        MapleCharacter cfrom = c.getChannelServer().getPlayerStorage().getCharacterByName(slea.readMapleAsciiString());\n+        MapleCharacter cfrom = c.getWorldServer().getPlayerStorage().getCharacterByName(slea.readMapleAsciiString());\n         if (cfrom != null) {\n-            cfrom.getClient().announce(MaplePacketCreator.denyGuildInvitation(c.getPlayer().getName()));\n+            MapleGuild.answerInvitation(c.getPlayer().getId(), c.getPlayer().getName(), cfrom.getGuildId(), false);\n         }\n     }\n }"}, {"sha": "19b18d84a3c1af88bcaa27f60b1a65e8c78e637d", "filename": "src/net/server/channel/handlers/DenyPartyRequestHandler.java", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/DenyPartyRequestHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/DenyPartyRequestHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/DenyPartyRequestHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -24,15 +24,22 @@\n import client.MapleCharacter;\n import client.MapleClient;\n import net.AbstractMaplePacketHandler;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n public final class DenyPartyRequestHandler extends AbstractMaplePacketHandler {\n+    \n+    @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         slea.readByte();\n         MapleCharacter cfrom = c.getChannelServer().getPlayerStorage().getCharacterByName(slea.readMapleAsciiString());\n         if (cfrom != null) {\n-            cfrom.getClient().announce(MaplePacketCreator.partyStatusMessage(23, c.getPlayer().getName()));\n+            if (MapleInviteCoordinator.answerInvite(InviteType.PARTY, c.getPlayer().getId(), cfrom.getPartyId(), false).getLeft() == InviteResult.DENIED) {\n+                cfrom.getClient().announce(MaplePacketCreator.partyStatusMessage(23, c.getPlayer().getName()));\n+            }\n         }\n     }\n }"}, {"sha": "f58b1a0d4a0f978a11370c9897f068ae4efa2395", "filename": "src/net/server/channel/handlers/EnterCashShopHandler.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/EnterCashShopHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/EnterCashShopHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/EnterCashShopHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -68,6 +68,7 @@ public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n             Server.getInstance().getPlayerBuffStorage().addDiseasesToStorage(mc.getId(), mc.getAllDiseases());\n             mc.setAwayFromChannelWorld();\n             mc.notifyMapTransferToPartner(-1);\n+            mc.removeIncomingInvites();\n             mc.cancelAllBuffs(true);\n             mc.cancelAllDebuffs();\n             mc.cancelBuffExpireTask();"}, {"sha": "4bab7b410f858b76b63670db169afb6f81cd5a03", "filename": "src/net/server/channel/handlers/EnterMTSHandler.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/EnterMTSHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/EnterMTSHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/EnterMTSHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -93,6 +93,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             Server.getInstance().getPlayerBuffStorage().addDiseasesToStorage(chr.getId(), chr.getAllDiseases());\n             chr.setAwayFromChannelWorld();\n             chr.notifyMapTransferToPartner(-1);\n+            chr.removeIncomingInvites();\n             chr.cancelAllBuffs(true);\n             chr.cancelAllDebuffs();\n             chr.cancelBuffExpireTask();"}, {"sha": "20bce7afb58a34192abb2459d7c1af6998a24336", "filename": "src/net/server/channel/handlers/GuildOperationHandler.java", "status": "modified", "additions": 11, "deletions": 67, "changes": 78, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/GuildOperationHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/GuildOperationHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/GuildOperationHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -28,7 +28,6 @@\n import client.MapleClient;\n import net.AbstractMaplePacketHandler;\n import tools.data.input.SeekableLittleEndianAccessor;\n-import java.util.Iterator;\n import tools.MaplePacketCreator;\n import client.MapleCharacter;\n import net.server.Server;\n@@ -47,50 +46,8 @@ private boolean isGuildNameAcceptable(String name) {\n         return true;\n     }\n \n-    private class Invited {\n-        public String name;\n-        public int gid;\n-        public long expiration;\n-\n-        public Invited(String n, int id) {\n-            name = n.toLowerCase();\n-            gid = id;\n-            expiration = currentServerTime() + 60 * 60 * 1000;\n-        }\n-\n-        @Override\n-        public boolean equals(Object other) {\n-            if (!(other instanceof Invited)) {\n-                return false;\n-            }\n-            Invited oth = (Invited) other;\n-            return (gid == oth.gid && name.equals(oth));\n-        }\n-\n-        @Override\n-        public int hashCode() {\n-            int hash = 3;\n-            hash = 83 * hash + (this.name != null ? this.name.hashCode() : 0);\n-            hash = 83 * hash + this.gid;\n-            return hash;\n-        }\n-    }\n-    private java.util.List<Invited> invited = new java.util.LinkedList<Invited>();\n-    private long nextPruneTime = currentServerTime() + 20 * 60 * 1000;\n-\n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-        if (currentServerTime() >= nextPruneTime) {\n-            Iterator<Invited> itr = invited.iterator();\n-            Invited inv;\n-            while (itr.hasNext()) {\n-                inv = itr.next();\n-                if (currentServerTime() >= inv.expiration) {\n-                    itr.remove();\n-                }\n-            }\n-            nextPruneTime = currentServerTime() + 20 * 60 * 1000;\n-        }\n         MapleCharacter mc = c.getPlayer();\n         byte type = slea.readByte();\n         int allianceId = -1;\n@@ -134,16 +91,13 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 if (mc.getGuildId() <= 0 || mc.getGuildRank() > 2) {\n                     return;\n                 }\n-                String name = slea.readMapleAsciiString();\n-                MapleGuildResponse mgr = MapleGuild.sendInvite(c, name);\n+                \n+                String targetName = slea.readMapleAsciiString();\n+                MapleGuildResponse mgr = MapleGuild.sendInvitation(c, targetName);\n                 if (mgr != null) {\n-                    c.announce(mgr.getPacket());\n-                } else {\n-                    Invited inv = new Invited(name, mc.getGuildId());\n-                    if (!invited.contains(inv)) {\n-                        invited.add(inv);\n-                    }\n-                }\n+                    c.announce(mgr.getPacket(targetName));\n+                } else {} // already sent invitation, do nothing\n+                \n                 break;\n             case 0x06:\n                 if (mc.getGuildId() > 0) {\n@@ -156,28 +110,18 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     System.out.println(\"[hax] \" + mc.getName() + \" attempted to join a guild with a different character id.\");\n                     return;\n                 }\n-                name = mc.getName().toLowerCase();\n-                Iterator<Invited> itr = invited.iterator();\n-                boolean bOnList = false;\n-                while (itr.hasNext()) {\n-                    Invited inv = itr.next();\n-                    if (gid == inv.gid && name.equals(inv.name)) {\n-                        bOnList = true;\n-                        itr.remove();\n-                        break;\n-                    }\n-                }\n-                if (!bOnList) {\n-                    System.out.println(\"[hax] \" + mc.getName() + \" is trying to join a guild that never invited him/her (or that the invitation has expired)\");\n+                \n+                if (!MapleGuild.answerInvitation(cid, mc.getName(), gid, true)) {\n                     return;\n                 }\n+                \n                 mc.getMGC().setGuildId(gid); // joins the guild\n                 mc.getMGC().setGuildRank(5); // start at lowest rank\n                 mc.getMGC().setAllianceRank(5);\n                 \n                 int s = Server.getInstance().addGuildMember(mc.getMGC(), mc);\n                 if (s == 0) {\n-                    c.getPlayer().dropMessage(1, \"The Guild you are trying to join is already full.\");\n+                    c.getPlayer().dropMessage(1, \"The guild you are trying to join is already full.\");\n                     mc.getMGC().setGuildId(0);\n                     return;\n                 }\n@@ -193,7 +137,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 break;\n             case 0x07:\n                 cid = slea.readInt();\n-                name = slea.readMapleAsciiString();\n+                String name = slea.readMapleAsciiString();\n                 if (cid != mc.getId() || !name.equals(mc.getName()) || mc.getGuildId() <= 0) {\n                     System.out.println(\"[hax] \" + mc.getName() + \" tried to quit guild under the name \\\"\" + name + \"\\\" and current guild id of \" + mc.getGuildId() + \".\");\n                     return;"}, {"sha": "c48a8d93905c63f42ffccb88a8383e293eec0fdb", "filename": "src/net/server/channel/handlers/InventorySortHandler.java", "status": "modified", "additions": 77, "deletions": 1, "changes": 78, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/InventorySortHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/InventorySortHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/InventorySortHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -72,6 +72,28 @@ private void PartitionByItemId(int Esq, int Dir, ArrayList<Item> A) {\n         } while (i <= j);\n     }\n     \n+    private void PartitionByItemIdReverse(int Esq, int Dir, ArrayList<Item> A) {\n+        Item x, w;\n+\n+        i = Esq;\n+        j = Dir;\n+        \n+        x = A.get((i + j) / 2);\n+        do {\n+            while (x.getItemId() < A.get(i).getItemId()) i++;\n+            while (x.getItemId() > A.get(j).getItemId()) j--;\n+            \n+            if (i <= j) {\n+                w = A.get(i);\n+                A.set(i, A.get(j));\n+                A.set(j, w);\n+\n+                i++;\n+                j--;\n+            }\n+        } while (i <= j);\n+    }\n+    \n     private void PartitionByName(int Esq, int Dir, ArrayList<Item> A) {\n         Item x, w;\n \n@@ -163,10 +185,64 @@ void MapleQuicksort(int Esq, int Dir, ArrayList<Item> A, int sort) {\n         if (i < Dir) MapleQuicksort(i, Dir, A, sort);\n     }\n     \n+    private static int getItemSubtype(Item it) {\n+        return it.getItemId() / 10000;\n+    }\n+    \n+    private int[] BinarySearchElement(ArrayList<Item> A, int rangeId) {\n+        int st = 0, en = A.size() - 1;\n+        \n+        int mid = -1, idx = -1;\n+        while (en >= st) {\n+            idx = (st + en) / 2;\n+            mid = getItemSubtype(A.get(idx));\n+            \n+            if (mid == rangeId) {\n+                break;\n+            } else if (mid < rangeId) {\n+                st = idx + 1;\n+            } else {\n+                en = idx - 1;\n+            }\n+        }\n+        \n+        if (en < st) {\n+            return null;\n+        }\n+        \n+        st = idx - 1;\n+        en = idx + 1;\n+        while (st >= 0 && getItemSubtype(A.get(st)) == rangeId) {\n+            st -= 1;\n+        }\n+        st += 1;\n+        \n+        while (en < A.size() && getItemSubtype(A.get(en)) == rangeId) {\n+            en += 1;\n+        }\n+        en -= 1;\n+        \n+        return new int[]{st, en};\n+    }\n+    \n+    public void reverseSortSublist(ArrayList<Item> A, int[] range) {\n+        if (range != null) {\n+            PartitionByItemIdReverse(range[0], range[1], A);\n+        }\n+    }\n+    \n     public PairedQuicksort(ArrayList<Item> A, int primarySort, int secondarySort) {\n         intersect = new ArrayList<>();\n         \n-        if(A.size() > 0) MapleQuicksort(0, A.size() - 1, A, primarySort);\n+        if(A.size() > 0) {\n+            MapleQuicksort(0, A.size() - 1, A, primarySort);\n+            \n+            if (A.get(0).getInventoryType().equals(MapleInventoryType.USE)) {   // thanks KDA & Vcoc for suggesting stronger projectiles coming before weaker ones\n+                reverseSortSublist(A, BinarySearchElement(A, 206));  // arrows\n+                reverseSortSublist(A, BinarySearchElement(A, 207));  // stars\n+                reverseSortSublist(A, BinarySearchElement(A, 233));  // bullets\n+            }\n+        }\n         \n         intersect.add(0);\n         for(int ind = 1; ind < A.size(); ind++) {"}, {"sha": "bed3e23e7bb693c34718dc32ec33b57f10d60547", "filename": "src/net/server/channel/handlers/MesoDropHandler.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/MesoDropHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/MesoDropHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MesoDropHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -47,7 +47,12 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 int meso = slea.readInt();\n                 if (meso <= player.getMeso() && meso > 9 && meso < 50001) {\n                         player.gainMeso(-meso, false, true, false);\n-                        player.getMap().spawnMesoDrop(meso, player.getPosition(), player, player, true, (byte) 2);\n+                        \n+                        if (player.attemptCatchFish(meso)) {\n+                                player.getMap().disappearingMesoDrop(meso, player, player, player.getPosition());\n+                        } else {\n+                                player.getMap().spawnMesoDrop(meso, player.getPosition(), player, player, true, (byte) 2);\n+                        }\n                 }\n         }\n }\n\\ No newline at end of file"}, {"sha": "1d652a77a016840c90794d4567c573dc8d70c031", "filename": "src/net/server/channel/handlers/MessengerHandler.java", "status": "modified", "additions": 80, "deletions": 60, "changes": 140, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/MessengerHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/MessengerHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MessengerHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -24,84 +24,104 @@\n import client.MapleCharacter;\n import client.MapleClient;\n import net.AbstractMaplePacketHandler;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n import net.server.world.MapleMessenger;\n import net.server.world.MapleMessengerCharacter;\n import net.server.world.World;\n import tools.MaplePacketCreator;\n+import tools.Pair;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n public final class MessengerHandler extends AbstractMaplePacketHandler {\n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-        String input;\n-        byte mode = slea.readByte();\n-        MapleCharacter player = c.getPlayer();\n-        World world = c.getWorldServer();\n-        MapleMessenger messenger = player.getMessenger();\n-        switch (mode) {\n-            case 0x00:\n-                if (messenger == null) {\n+        c.tryacquireClient();\n+        try {\n+            String input;\n+            byte mode = slea.readByte();\n+            MapleCharacter player = c.getPlayer();\n+            World world = c.getWorldServer();\n+            MapleMessenger messenger = player.getMessenger();\n+            switch (mode) {\n+                case 0x00:\n                     int messengerid = slea.readInt();\n-                    if (messengerid == 0) {\n-                        MapleMessengerCharacter messengerplayer = new MapleMessengerCharacter(player, 0);\n-                        messenger = world.createMessenger(messengerplayer);\n-                        player.setMessenger(messenger);\n-                        player.setMessengerPosition(0);\n-                    } else {\n-                        messenger = world.getMessenger(messengerid);\n-                        int position = messenger.getLowestPosition();\n-                        MapleMessengerCharacter messengerplayer = new MapleMessengerCharacter(player, position);\n-                        if (messenger.getMembers().size() < 3) {\n+                    if (messenger == null) {\n+                        if (messengerid == 0) {\n+                            MapleInviteCoordinator.removeInvite(InviteType.MESSENGER, player.getId());\n+                            \n+                            MapleMessengerCharacter messengerplayer = new MapleMessengerCharacter(player, 0);\n+                            messenger = world.createMessenger(messengerplayer);\n                             player.setMessenger(messenger);\n-                            player.setMessengerPosition(position);\n-                            world.joinMessenger(messenger.getId(), messengerplayer, player.getName(), messengerplayer.getChannel());\n-                        }\n-                    }\n-                }\n-                break;\n-            case 0x02:\n-                player.closePlayerMessenger();\n-                break;\n-            case 0x03:\n-                if (messenger.getMembers().size() < 3) {\n-                    input = slea.readMapleAsciiString();\n-                    MapleCharacter target = c.getChannelServer().getPlayerStorage().getCharacterByName(input);\n-                    if (target != null) {\n-                        if (target.getMessenger() == null) {\n-                            target.getClient().announce(MaplePacketCreator.messengerInvite(c.getPlayer().getName(), messenger.getId()));\n-                            c.announce(MaplePacketCreator.messengerNote(input, 4, 1));\n+                            player.setMessengerPosition(0);\n                         } else {\n-                            c.announce(MaplePacketCreator.messengerChat(player.getName() + \" : \" + input + \" is already using Maple Messenger\"));\n+                            messenger = world.getMessenger(messengerid);\n+                            if (messenger != null) {\n+                                Pair<InviteResult, MapleCharacter> inviteRes = MapleInviteCoordinator.answerInvite(InviteType.MESSENGER, player.getId(), messengerid, true);\n+                                InviteResult res = inviteRes.getLeft();\n+                                if (res == InviteResult.ACCEPTED) {\n+                                    int position = messenger.getLowestPosition();\n+                                    MapleMessengerCharacter messengerplayer = new MapleMessengerCharacter(player, position);\n+                                    if (messenger.getMembers().size() < 3) {\n+                                        player.setMessenger(messenger);\n+                                        player.setMessengerPosition(position);\n+                                        world.joinMessenger(messenger.getId(), messengerplayer, player.getName(), messengerplayer.getChannel());\n+                                    }\n+                                } else {\n+                                    player.message(\"Could not verify your Maple Messenger accept since the invitation rescinded.\");\n+                                }\n+                            }\n                         }\n                     } else {\n-                        if (world.find(input) > -1) {\n-                            world.messengerInvite(c.getPlayer().getName(), messenger.getId(), input, c.getChannel());\n+                        MapleInviteCoordinator.answerInvite(InviteType.MESSENGER, player.getId(), messengerid, false);\n+                    }\n+                    break;\n+                case 0x02:\n+                    player.closePlayerMessenger();\n+                    break;\n+                case 0x03:\n+                    if (messenger == null) {\n+                        c.announce(MaplePacketCreator.messengerChat(player.getName() + \" : This Maple Messenger is currently unavailable. Please quit this chat.\"));\n+                    } else if (messenger.getMembers().size() < 3) {\n+                        input = slea.readMapleAsciiString();\n+                        MapleCharacter target = c.getChannelServer().getPlayerStorage().getCharacterByName(input);\n+                        if (target != null) {\n+                            if (target.getMessenger() == null) {\n+                                if (MapleInviteCoordinator.createInvite(InviteType.MESSENGER, c.getPlayer(), messenger.getId(), target.getId())) {\n+                                    target.getClient().announce(MaplePacketCreator.messengerInvite(c.getPlayer().getName(), messenger.getId()));\n+                                    c.announce(MaplePacketCreator.messengerNote(input, 4, 1));\n+                                } else {\n+                                    c.announce(MaplePacketCreator.messengerChat(player.getName() + \" : \" + input + \" is already managing a Maple Messenger invitation\"));\n+                                }\n+                            } else {\n+                                c.announce(MaplePacketCreator.messengerChat(player.getName() + \" : \" + input + \" is already using Maple Messenger\"));\n+                            }\n                         } else {\n-                            c.announce(MaplePacketCreator.messengerNote(input, 4, 0));\n+                            if (world.find(input) > -1) {\n+                                world.messengerInvite(c.getPlayer().getName(), messenger.getId(), input, c.getChannel());\n+                            } else {\n+                                c.announce(MaplePacketCreator.messengerNote(input, 4, 0));\n+                            }\n                         }\n+                    } else {\n+                        c.announce(MaplePacketCreator.messengerChat(player.getName() + \" : You cannot have more than 3 people in the Maple Messenger\"));\n                     }\n-                } else {\n-                    c.announce(MaplePacketCreator.messengerChat(player.getName() + \" : You cannot have more than 3 people in the Maple Messenger\"));\n-                }\n-                break;\n-            case 0x05:\n-                String targeted = slea.readMapleAsciiString();\n-                MapleCharacter target = c.getChannelServer().getPlayerStorage().getCharacterByName(targeted);\n-                if (target != null) {\n-                    if (target.getMessenger() != null) {\n-                        target.getClient().announce(MaplePacketCreator.messengerNote(player.getName(), 5, 0));\n+                    break;\n+                case 0x05:\n+                    String targeted = slea.readMapleAsciiString();\n+                    world.declineChat(targeted, player);\n+                    break;\n+                case 0x06:\n+                    if (messenger != null) {\n+                        MapleMessengerCharacter messengerplayer = new MapleMessengerCharacter(player, player.getMessengerPosition());\n+                        input = slea.readMapleAsciiString();\n+                        world.messengerChat(messenger, input, messengerplayer.getName());\n                     }\n-                } else {\n-                    world.declineChat(targeted, player.getName());\n-                }\n-                break;\n-            case 0x06:\n-                if (messenger != null) {\n-                    MapleMessengerCharacter messengerplayer = new MapleMessengerCharacter(player, player.getMessengerPosition());\n-                    input = slea.readMapleAsciiString();\n-                    world.messengerChat(messenger, input, messengerplayer.getName());\n-                }\n-                break;\n+                    break;\n+            }\n+        } finally {\n+            c.releaseClient();\n         }\n     }\n }"}, {"sha": "cf7530c9b9f9dbd2b10314d5cbf7d925fdaba2e6", "filename": "src/net/server/channel/handlers/PartyOperationHandler.java", "status": "modified", "additions": 32, "deletions": 16, "changes": 48, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/PartyOperationHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/PartyOperationHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PartyOperationHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -31,9 +31,14 @@\n import client.MapleCharacter;\n import client.MapleClient;\n import constants.ServerConstants;\n-import java.util.List;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n import scripting.event.EventInstanceManager;\n import server.maps.MapleMap;\n+import tools.Pair;\n+\n+import java.util.List;\n \n public final class PartyOperationHandler extends AbstractMaplePacketHandler {\n     \n@@ -101,26 +106,33 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             }\n             case 3: { // join\n                 int partyid = slea.readInt();\n-                if (party == null) {\n-                    party = world.getParty(partyid);\n-                    if (party != null) {\n-                        if (party.getMembers().size() < 6) {\n-                            partyplayer = new MaplePartyCharacter(player);\n-                            player.getMap().addPartyMember(player);\n+                \n+                Pair<InviteResult, MapleCharacter> inviteRes = MapleInviteCoordinator.answerInvite(InviteType.PARTY, player.getId(), partyid, true);\n+                InviteResult res = inviteRes.getLeft();\n+                if (res == InviteResult.ACCEPTED) {\n+                    if (party == null) {\n+                        party = world.getParty(partyid);\n+                        if (party != null) {\n+                            if (party.getMembers().size() < 6) {\n+                                partyplayer = new MaplePartyCharacter(player);\n+                                player.getMap().addPartyMember(player);\n \n-                            world.updateParty(party.getId(), PartyOperation.JOIN, partyplayer);\n-                            player.receivePartyMemberHP();\n-                            player.updatePartyMemberHP();\n-                            \n-                            player.partyOperationUpdate(party, null);\n+                                world.updateParty(party.getId(), PartyOperation.JOIN, partyplayer);\n+                                player.receivePartyMemberHP();\n+                                player.updatePartyMemberHP();\n+\n+                                player.partyOperationUpdate(party, null);\n+                            } else {\n+                                c.announce(MaplePacketCreator.partyStatusMessage(17));\n+                            }\n                         } else {\n-                            c.announce(MaplePacketCreator.partyStatusMessage(17));\n+                            c.announce(MaplePacketCreator.serverNotice(5, \"The person you have invited to the party is already in one.\"));\n                         }\n                     } else {\n-                        c.announce(MaplePacketCreator.serverNotice(5, \"The person you have invited to the party is already in one.\"));\n+                        c.announce(MaplePacketCreator.serverNotice(5, \"You can't join the party as you are already in one.\"));\n                     }\n                 } else {\n-                    c.announce(MaplePacketCreator.serverNotice(5, \"You can't join the party as you are already in one.\"));\n+                    c.announce(MaplePacketCreator.serverNotice(5, \"You couldn't join the party due to an expired invitation request.\"));\n                 }\n                 break;\n             }\n@@ -154,7 +166,11 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                             c.announce(MaplePacketCreator.partyCreated(party, partyplayer.getId()));\n                         }\n                         if (party.getMembers().size() < 6) {\n-                            invited.getClient().announce(MaplePacketCreator.partyInvite(player));\n+                            if (MapleInviteCoordinator.createInvite(InviteType.PARTY, player, party.getId(), invited.getId())) {\n+                                invited.getClient().announce(MaplePacketCreator.partyInvite(player));\n+                            } else {\n+                                c.announce(MaplePacketCreator.partyStatusMessage(22, invited.getName()));\n+                            }\n                         } else {\n                             c.announce(MaplePacketCreator.partyStatusMessage(17));\n                         }"}, {"sha": "32a13008f0ef6c85ab4732d0e60747fc2a50edc4", "filename": "src/net/server/channel/handlers/PlayerInteractionHandler.java", "status": "modified", "additions": 33, "deletions": 17, "changes": 50, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/PlayerInteractionHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/PlayerInteractionHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PlayerInteractionHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -36,7 +36,6 @@\n import server.MapleItemInformationProvider;\n import server.MapleTrade;\n import constants.GameConstants;\n-import java.sql.SQLException;\n import server.maps.FieldLimit;\n import server.maps.MapleHiredMerchant;\n import server.maps.MapleMapObject;\n@@ -48,6 +47,9 @@\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n+import java.awt.Point;\n+import java.sql.SQLException;\n+\n /**\n  *\n  * @author Matze\n@@ -146,7 +148,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 }\n \n                 byte createType = slea.readByte();\n-                if (createType == 3) {// trade\n+                if (createType == 3) {  // trade\n                     MapleTrade.startTrade(chr);\n                 } else if (createType == 1) { // omok mini game\n                     int status = establishMiniroomStatus(chr, true);\n@@ -234,7 +236,15 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                         chr.getClient().announce(MaplePacketCreator.getMiniRoomError(status));\n                         return;\n                     }\n-\n+                    \n+                    try {\n+                        Point cpos = chr.getPosition();\n+                        if (chr.getMap().findClosestWarpPortal(cpos).getPosition().distance(cpos) < 120.0) {\n+                            chr.getClient().announce(MaplePacketCreator.getMiniRoomError(10));\n+                            return;\n+                        }\n+                    } catch (NullPointerException npe) {}\n+                    \n                     String desc = slea.readMapleAsciiString();\n                     slea.skip(3);\n                     int itemId = slea.readInt();\n@@ -259,20 +269,22 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     }\n                 }\n             } else if (mode == Action.INVITE.getCode()) {\n-                int otherPlayer = slea.readInt();\n-                if (chr.getId() == chr.getMap().getCharacterById(otherPlayer).getId()) {\n+                int otherCid = slea.readInt();\n+                MapleCharacter other = chr.getMap().getCharacterById(otherCid);\n+                if (other == null || chr.getId() == other.getId()) {\n                     return;\n                 }\n-                MapleTrade.inviteTrade(chr, chr.getMap().getCharacterById(otherPlayer));\n+                \n+                MapleTrade.inviteTrade(chr, other);\n             } else if (mode == Action.DECLINE.getCode()) {\n                 MapleTrade.declineTrade(chr);\n             } else if (mode == Action.VISIT.getCode()) {\n                 if (chr.getTrade() != null && chr.getTrade().getPartner() != null) {\n                     if (!chr.getTrade().isFullTrade() && !chr.getTrade().getPartner().isFullTrade()) {\n-                            MapleTrade.visitTrade(chr, chr.getTrade().getPartner().getChr());\n+                        MapleTrade.visitTrade(chr, chr.getTrade().getPartner().getChr());\n                     } else {\n-                            chr.getClient().announce(MaplePacketCreator.getMiniRoomError(2));\n-                            return;\n+                        chr.getClient().announce(MaplePacketCreator.getMiniRoomError(2));\n+                        return;\n                     }\n                 } else {\n                     if (isTradeOpen(chr)) return;\n@@ -329,7 +341,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 }\n             } else if (mode == Action.EXIT.getCode()) {\n                 if (chr.getTrade() != null) {\n-                    MapleTrade.cancelTrade(chr);\n+                    MapleTrade.cancelTrade(chr, MapleTrade.TradeResult.PARTNER_CANCEL);\n                 } else {\n                     chr.closePlayerShop();\n                     chr.closeMiniGame();\n@@ -627,6 +639,10 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     \n                     c.announce(MaplePacketCreator.updateHiredMerchant(merchant, chr));\n                     \n+                    if (ServerConstants.USE_ENFORCE_MERCHANT_SAVE) {\n+                        chr.saveCharToDB(false);\n+                    }\n+                    \n                     try {\n                         merchant.saveItems(false);   // thanks Masterrulax for realizing yet another dupe with merchants/Fredrick\n                     } catch (SQLException ex) {\n@@ -726,14 +742,14 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n \n                 MapleHiredMerchant merchant = chr.getHiredMerchant();\n                 if(merchant != null) {\n-                    if (merchant.getItems().isEmpty() && merchant.isOwner(chr)) {\n-                        merchant.closeShop(c, false);\n-                        chr.setHasMerchant(false);\n-                    }\n                     if (merchant.isOwner(chr)) {\n-                        merchant.clearMessages();\n-                        merchant.setOpen(true);\n-                        merchant.getMap().broadcastMessage(MaplePacketCreator.updateHiredMerchantBox(merchant));\n+                        if (merchant.getItems().isEmpty()) {\n+                            merchant.closeOwnerMerchant(chr);\n+                        } else {\n+                            merchant.clearMessages();\n+                            merchant.setOpen(true);\n+                            merchant.getMap().broadcastMessage(MaplePacketCreator.updateHiredMerchantBox(merchant));\n+                        }\n                     }\n                 }\n "}, {"sha": "919d9c5fa8aabf689be4cc850319dfc98a6f68c9", "filename": "src/net/server/channel/handlers/SkillBookHandler.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/SkillBookHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/SkillBookHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/SkillBookHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -32,7 +32,6 @@\n import client.inventory.manipulator.MapleInventoryManipulator;\n import server.MapleItemInformationProvider;\n import tools.MaplePacketCreator;\n-import tools.Randomizer;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n public final class SkillBookHandler extends AbstractMaplePacketHandler {\n@@ -75,7 +74,9 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             } else {\n                 canuse = false;\n             }\n-            player.getClient().announce(MaplePacketCreator.skillBookSuccess(player, skill, maxlevel, canuse, success));\n+            \n+            // thanks Vcoc for noting skill book result not showing for all in area\n+            player.getMap().broadcastMessage(MaplePacketCreator.skillBookResult(player, skill, maxlevel, canuse, success));\n         }\n     }\n }"}, {"sha": "5604eee16a7a021fd59d5fe0e143bb6ecb755043", "filename": "src/net/server/channel/handlers/SummonDamageHandler.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/SummonDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/SummonDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/SummonDamageHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -84,6 +84,9 @@ public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n             allDamage.add(new SummonAttackEntry(monsterOid, damage));\n         }\n         player.getMap().broadcastMessage(player, MaplePacketCreator.summonAttack(player.getId(), summon.getObjectId(), direction, allDamage), summon.getPosition());\n+        if (player.getMap().isOwnershipRestricted(player)) {\n+            return;\n+        }\n         for (SummonAttackEntry attackEntry : allDamage) {\n             int damage = attackEntry.getDamage();\n             MapleMonster target = player.getMap().getMonsterByOid(attackEntry.getMonsterOid());"}, {"sha": "00bd0c5b208b63e22d341f6461018edfc351ce6e", "filename": "src/net/server/channel/handlers/UseCashItemHandler.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/UseCashItemHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/channel/handlers/UseCashItemHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/UseCashItemHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -400,9 +400,16 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         } else if (itemType == 533) {\n             NPCScriptManager.getInstance().start(c, 9010009, null);\n         } else if (itemType == 537) {\n+            if (GameConstants.isFreeMarketRoom(player.getMapId())) {\n+                player.dropMessage(5, \"You cannot use the chalkboard here.\");\n+                player.getClient().announce(MaplePacketCreator.enableActions());\n+                return;\n+            }\n+            \n             player.setChalkboard(slea.readMapleAsciiString());\n             player.getMap().broadcastMessage(MaplePacketCreator.useChalkboard(player, false));\n             player.getClient().announce(MaplePacketCreator.enableActions());\n+            remove(c, position, itemId);\n         } else if (itemType == 539) {\n             List<String> strLines = new LinkedList<>();\n             for (int i = 0; i < 4; i++) {"}, {"sha": "ac5bf189460694c7c6eef7cd391cc17a2c5e2cb5", "filename": "src/net/server/coordinator/MapleInviteCoordinator.java", "status": "added", "additions": 149, "deletions": 0, "changes": 149, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/coordinator/MapleInviteCoordinator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/coordinator/MapleInviteCoordinator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/coordinator/MapleInviteCoordinator.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,149 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.coordinator;\n+\n+import client.MapleCharacter;\n+import tools.Pair;\n+\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Set;\n+import java.util.HashSet;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class MapleInviteCoordinator {\n+    \n+    public enum InviteResult {\n+        ACCEPTED,\n+        DENIED,\n+        NOT_FOUND;\n+    }\n+    \n+    public enum InviteType {\n+        //BUDDY, (not needed)\n+        //FAMILY, (not implemented)\n+        MESSENGER,\n+        TRADE,\n+        PARTY,\n+        GUILD,\n+        ALLIANCE;\n+        \n+        final ConcurrentHashMap<Integer, Object> invites;\n+        final ConcurrentHashMap<Integer, MapleCharacter> inviteFrom;\n+        final ConcurrentHashMap<Integer, Integer> inviteTimeouts;\n+\n+        private InviteType() {\n+            invites = new ConcurrentHashMap<>();\n+            inviteTimeouts = new ConcurrentHashMap<>();\n+            inviteFrom = new ConcurrentHashMap<>();\n+        }\n+\n+        private Map<Integer, Object> getRequestsTable() {\n+            return invites;\n+        }\n+        \n+        private Map<Integer, Integer> getRequestsTimeoutTable() {\n+            return inviteTimeouts;\n+        }\n+        \n+        private MapleCharacter removeRequest(Integer target) {\n+            invites.remove(target);\n+            MapleCharacter from = inviteFrom.remove(target);\n+            inviteTimeouts.remove(target);\n+            \n+            return from;\n+        }\n+        \n+        private boolean addRequest(MapleCharacter from, Object referenceFrom, int targetCid) {\n+            Object v = invites.putIfAbsent(targetCid, referenceFrom);\n+            if (v != null) {    // there was already an entry\n+                return false;\n+            }\n+            \n+            inviteFrom.put(targetCid, from);\n+            inviteTimeouts.put(targetCid, 0);\n+            \n+            return true;\n+        }\n+        \n+        private boolean hasRequest(int targetCid) {\n+            return invites.containsKey(targetCid);\n+        }\n+    }\n+    \n+    // note: referenceFrom is a specific value that represents the \"common association\" created between the sender/recver parties\n+    public static boolean createInvite(InviteType type, MapleCharacter from, Object referenceFrom, int targetCid) {\n+        return type.addRequest(from, referenceFrom, targetCid);\n+    }\n+    \n+    public static boolean hasInvite(InviteType type, int targetCid) {\n+        return type.hasRequest(targetCid);\n+    }\n+    \n+    public static Pair<InviteResult, MapleCharacter> answerInvite(InviteType type, int targetCid, Object referenceFrom, boolean answer) {\n+        Map<Integer, Object> table = type.getRequestsTable();\n+        \n+        MapleCharacter from = null;\n+        InviteResult result = InviteResult.NOT_FOUND;\n+        \n+        Object reference = table.get(targetCid);\n+        if (referenceFrom.equals(reference)) {\n+            from = type.removeRequest(targetCid);\n+            if (from != null && !from.isLoggedinWorld()) from = null;\n+            \n+            result = answer ? InviteResult.ACCEPTED : InviteResult.DENIED;\n+        }\n+        \n+        return new Pair<>(result, from);\n+    }\n+    \n+    public static void removeInvite(InviteType type, int targetCid) {\n+        type.removeRequest(targetCid);\n+    }\n+    \n+    public static void removePlayerIncomingInvites(int cid) {\n+        for (InviteType it : InviteType.values()) {\n+            it.removeRequest(cid);\n+        }\n+    }\n+    \n+    public static void runTimeoutSchedule() {\n+        for (InviteType it : InviteType.values()) {\n+            Map<Integer, Integer> timeoutTable = it.getRequestsTimeoutTable();\n+            \n+            if (!timeoutTable.isEmpty()) {\n+                Set<Entry<Integer, Integer>> entrySet = new HashSet<>(timeoutTable.entrySet());\n+                for (Entry<Integer, Integer> e : entrySet) {\n+                    int eVal = e.getValue();\n+\n+                    if (eVal > 5) { // 3min to expire\n+                        it.removeRequest(e.getKey());\n+                    } else {\n+                        timeoutTable.put(e.getKey(), eVal + 1);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "234f684512367dcfc20ec7d7ebb3a00502d22a05", "filename": "src/net/server/coordinator/MapleSessionCoordinator.java", "status": "modified", "additions": 111, "deletions": 5, "changes": 116, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/coordinator/MapleSessionCoordinator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/coordinator/MapleSessionCoordinator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/coordinator/MapleSessionCoordinator.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -34,6 +34,8 @@\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.HashMap;\n@@ -215,7 +217,7 @@ private static boolean attemptAccessAccount(String nibbleHwid, int accountId, bo\n     }\n     \n     private Lock getCoodinatorLock(String remoteHost) {\n-        return poolLock.get(remoteHost.hashCode() % 100);\n+        return poolLock.get(Math.abs(remoteHost.hashCode()) % 100);\n     }\n     \n     private static String getRemoteIp(IoSession session) {\n@@ -318,7 +320,12 @@ public void closeLoginSession(IoSession session) {\n             \n             MapleClient client = getSessionClient(session);\n             if (client != null) {\n-                onlineClients.remove(client.getAccID());\n+                MapleClient loggedClient = onlineClients.get(client.getAccID());\n+                \n+                // do not remove an online game session here, only login session\n+                if (loggedClient != null && loggedClient.getSessionId() == client.getSessionId()) {\n+                    onlineClients.remove(client.getAccID());\n+                }\n             }\n         }\n     }\n@@ -466,15 +473,24 @@ public AntiMulticlientResult attemptGameSession(IoSession session, int accountId\n     }\n     \n     public void closeSession(IoSession session, Boolean immediately) {\n-        String hwid = (String) session.removeAttribute(MapleClient.CLIENT_HWID);\n+        String hwid = (String) session.removeAttribute(MapleClient.CLIENT_NIBBLEHWID); // making sure to clean up calls to this function on login phase\n         onlineRemoteHwids.remove(hwid);\n         \n-        hwid = (String) session.removeAttribute(MapleClient.CLIENT_NIBBLEHWID); // making sure to clean up calls to this function on login phase\n+        hwid = (String) session.removeAttribute(MapleClient.CLIENT_HWID);\n         onlineRemoteHwids.remove(hwid);\n         \n         MapleClient client = getSessionClient(session);\n         if (client != null) {\n-            onlineClients.remove(client.getAccID());\n+            if (hwid != null) { // is a game session\n+                onlineClients.remove(client.getAccID());\n+            } else {\n+                MapleClient loggedClient = onlineClients.get(client.getAccID());\n+                \n+                // do not remove an online game session here, only login session\n+                if (loggedClient != null && loggedClient.getSessionId() == client.getSessionId()) {\n+                    onlineClients.remove(client.getAccID());\n+                }\n+            }\n         }\n         \n         if (immediately != null) {\n@@ -523,4 +539,94 @@ public void runUpdateHwidHistory() {\n     public void runUpdateLoginHistory() {\n         loginStorage.updateLoginHistory();\n     }\n+    \n+    public void printSessionTrace() {\n+        if (!onlineClients.isEmpty()) {\n+            List<Entry<Integer, MapleClient>> elist = new ArrayList<>(onlineClients.entrySet());\n+            Collections.sort(elist, new Comparator<Entry<Integer, MapleClient>>() {\n+                @Override\n+                public int compare(Entry<Integer, MapleClient> e1, Entry<Integer, MapleClient> e2) {\n+                    return e1.getKey().compareTo(e2.getKey());\n+                }\n+            });\n+            \n+            System.out.println(\"Current online clients: \");\n+            for (Entry<Integer, MapleClient> e : elist) {\n+                System.out.println(\"  \" + e.getKey());\n+            }\n+        }\n+        \n+        if (!onlineRemoteHwids.isEmpty()) {\n+            List<String> slist = new ArrayList<>(onlineRemoteHwids);\n+            Collections.sort(slist);\n+            \n+            System.out.println(\"Current online HWIDs: \");\n+            for (String s : slist) {\n+                System.out.println(\"  \" + s);\n+            }\n+        }\n+        \n+        if (!loginRemoteHosts.isEmpty()) {\n+            List<Entry<String, Set<IoSession>>> elist = new ArrayList<>(loginRemoteHosts.entrySet());\n+            \n+            Collections.sort(elist, new Comparator<Entry<String, Set<IoSession>>>() {\n+                @Override\n+                public int compare(Entry<String, Set<IoSession>> e1, Entry<String, Set<IoSession>> e2) {\n+                    return e1.getKey().compareTo(e2.getKey());\n+                }\n+            });\n+            \n+            System.out.println(\"Current login sessions: \");\n+            for (Entry<String, Set<IoSession>> e : elist) {\n+                System.out.println(\"  \" + e.getKey() + \", size: \" + e.getValue().size());\n+            }\n+        }\n+    }\n+    \n+    public void printSessionTrace(MapleClient c) {\n+        String str = \"Opened server sessions:\\r\\n\\r\\n\";\n+        \n+        if (!onlineClients.isEmpty()) {\n+            List<Entry<Integer, MapleClient>> elist = new ArrayList<>(onlineClients.entrySet());\n+            Collections.sort(elist, new Comparator<Entry<Integer, MapleClient>>() {\n+                @Override\n+                public int compare(Entry<Integer, MapleClient> e1, Entry<Integer, MapleClient> e2) {\n+                    return e1.getKey().compareTo(e2.getKey());\n+                }\n+            });\n+            \n+            str += (\"Current online clients:\\r\\n\");\n+            for (Entry<Integer, MapleClient> e : elist) {\n+                str += (\"  \" + e.getKey() + \"\\r\\n\");\n+            }\n+        }\n+        \n+        if (!onlineRemoteHwids.isEmpty()) {\n+            List<String> slist = new ArrayList<>(onlineRemoteHwids);\n+            Collections.sort(slist);\n+            \n+            str += (\"Current online HWIDs:\\r\\n\");\n+            for (String s : slist) {\n+                str += (\"  \" + s + \"\\r\\n\");\n+            }\n+        }\n+        \n+        if (!loginRemoteHosts.isEmpty()) {\n+            List<Entry<String, Set<IoSession>>> elist = new ArrayList<>(loginRemoteHosts.entrySet());\n+            \n+            Collections.sort(elist, new Comparator<Entry<String, Set<IoSession>>>() {\n+                @Override\n+                public int compare(Entry<String, Set<IoSession>> e1, Entry<String, Set<IoSession>> e2) {\n+                    return e1.getKey().compareTo(e2.getKey());\n+                }\n+            });\n+            \n+            str += (\"Current login sessions:\\r\\n\");\n+            for (Entry<String, Set<IoSession>> e : elist) {\n+                str += (\"  \" + e.getKey() + \", IP: \" + e.getValue() + \"\\r\\n\");\n+            }\n+        }\n+        \n+        c.getAbstractPlayerInteraction().npcTalk(2140000, str);\n+    }\n }"}, {"sha": "91c4a785174a9c4b7e03646f89d5adb07e3457e0", "filename": "src/net/server/guild/MapleAlliance.java", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/guild/MapleAlliance.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/guild/MapleAlliance.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/guild/MapleAlliance.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -29,11 +29,16 @@\n import java.util.List;\n \n import client.MapleCharacter;\n+import client.MapleClient;\n import net.server.Server;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n import net.server.world.MapleParty;\n import net.server.world.MaplePartyCharacter;\n import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n+import tools.Pair;\n \n /**\n  *\n@@ -465,4 +470,50 @@ public void dropMessage(int type, String message) {\n     public void broadcastMessage(byte[] packet) {\n         Server.getInstance().allianceMessage(allianceId, packet, -1, -1);\n     }\n+    \n+    public static void sendInvitation(MapleClient c, String targetGuildName, int allianceId) {\n+        MapleGuild mg = Server.getInstance().getGuildByName(targetGuildName);\n+        if(mg == null) {\n+            c.getPlayer().dropMessage(5, \"The entered guild does not exist.\");\n+        } else {\n+            if (mg.getAllianceId() > 0) {\n+                c.getPlayer().dropMessage(5, \"The entered guild is already registered on a guild alliance.\");\n+            } else {\n+                MapleCharacter victim = mg.getMGC(mg.getLeaderId()).getCharacter();\n+                if (victim == null) {\n+                    c.getPlayer().dropMessage(5, \"The master of the guild that you offered an invitation is currently not online.\");\n+                } else {\n+                    if (MapleInviteCoordinator.createInvite(InviteType.ALLIANCE, c.getPlayer(), allianceId, victim.getId())) {\n+                        victim.getClient().announce(MaplePacketCreator.allianceInvite(allianceId, c.getPlayer()));\n+                    } else {\n+                        c.getPlayer().dropMessage(5, \"The master of the guild that you offered an invitation is currently managing another invite.\");\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    \n+    public static boolean answerInvitation(int targetId, String targetGuildName, int allianceId, boolean answer) {\n+        Pair<InviteResult, MapleCharacter> res = MapleInviteCoordinator.answerInvite(InviteType.ALLIANCE, targetId, allianceId, answer);\n+        \n+        String msg;\n+        MapleCharacter sender = res.getRight();\n+        switch (res.getLeft()) {\n+            case ACCEPTED:\n+                return true;\n+                \n+            case DENIED:\n+                msg = \"[\" + targetGuildName + \"] guild has denied your guild alliance invitation.\";\n+                break;\n+                \n+            default:\n+                msg = \"The guild alliance request has not been accepted, since the invitation expired.\";\n+        }\n+        \n+        if (sender != null) {\n+            sender.dropMessage(5, msg);\n+        }\n+        \n+        return false;\n+    }\n }"}, {"sha": "8fccd15f412d5388b53074097ff53d4d1a0b7b00", "filename": "src/net/server/guild/MapleGuild.java", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/guild/MapleGuild.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/guild/MapleGuild.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/guild/MapleGuild.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -44,7 +44,11 @@\n import net.server.channel.Channel;\n import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n+import tools.Pair;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n+import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n \n public class MapleGuild {\n     \n@@ -702,16 +706,45 @@ public void removeGP(int amount){\n         this.guildMessage(MaplePacketCreator.updateGP(this.id, this.gp));\n     }\n \n-    public static MapleGuildResponse sendInvite(MapleClient c, String targetName) {\n+    public static MapleGuildResponse sendInvitation(MapleClient c, String targetName) {\n         MapleCharacter mc = c.getChannelServer().getPlayerStorage().getCharacterByName(targetName);\n         if (mc == null) {\n             return MapleGuildResponse.NOT_IN_CHANNEL;\n         }\n         if (mc.getGuildId() > 0) {\n             return MapleGuildResponse.ALREADY_IN_GUILD;\n         }\n-        mc.getClient().announce(MaplePacketCreator.guildInvite(c.getPlayer().getGuildId(), c.getPlayer().getName()));\n-        return null;\n+        \n+        MapleCharacter sender = c.getPlayer();\n+        if (MapleInviteCoordinator.createInvite(InviteType.GUILD, sender, sender.getGuildId(), mc.getId())) {\n+            mc.getClient().announce(MaplePacketCreator.guildInvite(sender.getGuildId(), sender.getName()));\n+            return null;\n+        } else {\n+            return MapleGuildResponse.MANAGING_INVITE;\n+        }\n+    }\n+    \n+    public static boolean answerInvitation(int targetId, String targetName, int guildId, boolean answer) {\n+        Pair<InviteResult, MapleCharacter> res = MapleInviteCoordinator.answerInvite(InviteType.GUILD, targetId, guildId, answer);\n+        \n+        MapleGuildResponse mgr;\n+        MapleCharacter sender = res.getRight();\n+        switch (res.getLeft()) {\n+            case ACCEPTED:\n+                return true;\n+                \n+            case DENIED:\n+                mgr = MapleGuildResponse.DENIED_INVITE;\n+                break;\n+                \n+            default:\n+                mgr = MapleGuildResponse.NOT_FOUND_INVITE;\n+        }\n+        \n+        if (mgr != null && sender != null) {\n+            sender.announce(mgr.getPacket(targetName));\n+        }\n+        return false;\n     }\n \n     public static void displayGuildRanks(MapleClient c, int npcid) {"}, {"sha": "b8c04e18321308e79e6dc40102fc2fd7ca886df1", "filename": "src/net/server/guild/MapleGuildResponse.java", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/guild/MapleGuildResponse.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/guild/MapleGuildResponse.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/guild/MapleGuildResponse.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -26,14 +26,22 @@\n public enum MapleGuildResponse {\n     NOT_IN_CHANNEL(0x2a),\n     ALREADY_IN_GUILD(0x28),\n-    NOT_IN_GUILD(0x2d);\n+    NOT_IN_GUILD(0x2d),\n+    NOT_FOUND_INVITE(0x2e),\n+    MANAGING_INVITE(0x36),\n+    DENIED_INVITE(0x37);\n+    \n     private int value;\n \n     private MapleGuildResponse(int val) {\n         value = val;\n     }\n \n-    public final byte[] getPacket() {\n-        return MaplePacketCreator.genericGuildMessage((byte) value);\n+    public final byte[] getPacket(String targetName) {\n+        if (value >= MANAGING_INVITE.value) {\n+            return MaplePacketCreator.responseGuildMessage((byte) value, targetName);\n+        } else {\n+            return MaplePacketCreator.genericGuildMessage((byte) value);\n+        }\n     }\n }"}, {"sha": "3c6b4f7226ce7aad2c11a2a9c8a1b7c9c7a32a8c", "filename": "src/net/server/handlers/login/CreateCharHandler.java", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/handlers/login/CreateCharHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/handlers/login/CreateCharHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/CreateCharHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -28,25 +28,24 @@\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n-public final class CreateCharHandler extends AbstractMaplePacketHandler {\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Set;\n \n-\tprivate static int[] IDs = {\n+public final class CreateCharHandler extends AbstractMaplePacketHandler {\n+        \n+        private final static Set<Integer> IDs = new HashSet<>(Arrays.asList(new Integer[]{\n \t\t1302000, 1312004, 1322005, 1442079,// weapons\n \t\t1040002, 1040006, 1040010, 1041002, 1041006, 1041010, 1041011, 1042167,// bottom\n \t\t1060002, 1060006, 1061002, 1061008, 1062115, // top\n \t\t1072001, 1072005, 1072037, 1072038, 1072383,// shoes\n \t\t30000, 30010,30020, 30030, 31000, 31040, 31050,// hair  \n \t\t20000, 20001, 20002, 21000, 21001, 21002, 21201, 20401, 20402, 21700, 20100  //face\n \t\t//#NeverTrustStevenCode\n-\t};\n+\t}));\n \n-\tprivate static boolean isLegal(int toCompare) {\n-\t\tfor (int i = 0; i < IDs.length; i++) {\n-\t\t\tif (IDs[i] == toCompare) {\n-\t\t\t\treturn true;\n-\t\t\t}      \n-\t\t}\n-\t\treturn false;\n+\tprivate static boolean isLegal(Integer toCompare) {\n+                return IDs.contains(toCompare);\n \t}         \t\n \n "}, {"sha": "edfb2b65e94d912f40491673b1de2dd1e4439120", "filename": "src/net/server/handlers/login/LoginPasswordHandler.java", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/handlers/login/LoginPasswordHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/handlers/login/LoginPasswordHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/LoginPasswordHandler.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -38,8 +38,10 @@\n import java.sql.ResultSet;\n import java.sql.Statement;\n import java.io.UnsupportedEncodingException;\n+import java.net.InetSocketAddress;\n import java.security.MessageDigest;\n import java.security.NoSuchAlgorithmException;\n+import org.apache.mina.core.session.IoSession;\n \n public final class LoginPasswordHandler implements MaplePacketHandler {\n \n@@ -54,9 +56,18 @@ private static String hashpwSHA512(String pwd) throws NoSuchAlgorithmException,\n         return HexTool.toString(digester.digest()).replace(\" \", \"\").toLowerCase();\n     }\n \n+    private static String getRemoteIp(IoSession session) {\n+        return ((InetSocketAddress) session.getRemoteAddress()).getAddress().getHostAddress();\n+    }\n+    \n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-\n+        String remoteHost = getRemoteIp(c.getSession());\n+        if (remoteHost.startsWith(\"127.\") && !ServerConstants.HOST.startsWith(\"127.\")) {\n+            c.announce(MaplePacketCreator.getLoginFailed(13));   // cannot login as localhost if it's not a test server\n+            return;\n+        }\n+        \n         String login = slea.readMapleAsciiString();\n         String pwd = slea.readMapleAsciiString();\n         c.setAccountName(login);"}, {"sha": "56eeb5fe467bd74956d363bb3f541ddf08bf676b", "filename": "src/net/server/worker/FishingWorker.java", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/worker/FishingWorker.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/worker/FishingWorker.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/worker/FishingWorker.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,37 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.worker;\n+\n+import net.server.world.World;\n+\n+/**\n+ * @author Ronan\n+ */\n+public class FishingWorker extends BaseWorker implements Runnable {\n+    \n+    @Override\n+    public void run() {\n+        wserv.runCheckFishingSchedule();\n+    }\n+    \n+    public FishingWorker(World world) {\n+        super(world);\n+    }\n+}"}, {"sha": "2845fb80aba0b4ac2e24a4c6e5e68da34d0347b9", "filename": "src/net/server/worker/FredrickWorker.java", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/worker/FredrickWorker.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/worker/FredrickWorker.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/worker/FredrickWorker.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,33 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.worker;\n+\n+import client.processor.FredrickProcessor;\n+\n+/**\n+ * @author Ronan\n+ */\n+public class FredrickWorker implements Runnable {\n+    \n+    @Override\n+    public void run() {\n+        FredrickProcessor.runFredrickSchedule();\n+    }\n+}"}, {"sha": "87a171bef4d7a5d702d38ceec1c63c8c25552c05", "filename": "src/net/server/worker/InvitationWorker.java", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/worker/InvitationWorker.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/worker/InvitationWorker.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/worker/InvitationWorker.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,33 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.worker;\n+\n+import net.server.coordinator.MapleInviteCoordinator;\n+\n+/**\n+ * @author Ronan\n+ */\n+public class InvitationWorker implements Runnable {\n+    \n+    @Override\n+    public void run() {\n+        MapleInviteCoordinator.runTimeoutSchedule();\n+    }\n+}"}, {"sha": "adc201de26e8f1cf8600339e3f4752ec3867436c", "filename": "src/net/server/worker/MapOwnershipWorker.java", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/worker/MapOwnershipWorker.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/worker/MapOwnershipWorker.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/worker/MapOwnershipWorker.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,40 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.worker;\n+\n+import net.server.world.World;\n+import net.server.channel.Channel;\n+\n+/**\n+ * @author Ronan\n+ */\n+public class MapOwnershipWorker extends BaseWorker implements Runnable {\n+    \n+    @Override\n+    public void run() {\n+        for (Channel ch : wserv.getChannels()) {\n+            ch.runCheckOwnedMapsSchedule();\n+        }\n+    }\n+    \n+    public MapOwnershipWorker(World world) {\n+        super(world);\n+    }\n+}"}, {"sha": "062282a6a146226b23e26e69be298e79451700fe", "filename": "src/net/server/world/World.java", "status": "modified", "additions": 99, "deletions": 18, "changes": 117, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/world/World.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/net/server/world/World.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/World.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -55,6 +55,7 @@\n import java.util.Set;\n import java.util.HashSet;\n import java.util.PriorityQueue;\n+import java.util.WeakHashMap;\n import java.util.concurrent.ScheduledFuture;\n \n import scripting.event.EventInstanceManager;\n@@ -65,7 +66,9 @@\n import server.maps.MaplePlayerShopItem;\n import server.maps.AbstractMapleMapObject;\n import net.server.worker.CharacterAutosaverWorker;\n+import net.server.worker.FishingWorker;\n import net.server.worker.HiredMerchantWorker;\n+import net.server.worker.MapOwnershipWorker;\n import net.server.worker.MountTirednessWorker;\n import net.server.worker.PetFullnessWorker;\n import net.server.worker.ServerMessageWorker;\n@@ -86,6 +89,10 @@\n import net.server.audit.locks.MonitoredReentrantLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n+import tools.packets.Fishing;\n \n /**\n  *\n@@ -94,7 +101,7 @@\n  */\n public class World {\n \n-    private int id, flag, exprate, droprate, bossdroprate, mesorate, questrate, travelrate;\n+    private int id, flag, exprate, droprate, bossdroprate, mesorate, questrate, travelrate, fishingrate;\n     private String eventmsg;\n     private List<Channel> channels = new ArrayList<>();\n     private Map<Integer, Byte> pnpcStep = new HashMap<>();\n@@ -155,10 +162,14 @@\n     private ScheduledFuture<?> timedMapObjectsSchedule;\n     private MonitoredReentrantLock timedMapObjectLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.WORLD_MAPOBJS, true);\n     \n+    private Map<MapleCharacter, Integer> fishingAttempters = Collections.synchronizedMap(new WeakHashMap<MapleCharacter, Integer>());\n+    \n     private ScheduledFuture<?> charactersSchedule;\n     private ScheduledFuture<?> marriagesSchedule;\n+    private ScheduledFuture<?> mapOwnershipSchedule;\n+    private ScheduledFuture<?> fishingSchedule;\n     \n-    public World(int world, int flag, String eventmsg, int exprate, int droprate, int bossdroprate, int mesorate, int questrate, int travelrate) {\n+    public World(int world, int flag, String eventmsg, int exprate, int droprate, int bossdroprate, int mesorate, int questrate, int travelrate, int fishingrate) {\n         this.id = world;\n         this.flag = flag;\n         this.eventmsg = eventmsg;\n@@ -168,7 +179,8 @@ public World(int world, int flag, String eventmsg, int exprate, int droprate, in\n         this.mesorate = mesorate;\n         this.questrate = questrate;\n         this.travelrate = travelrate;\n-        runningPartyId.set(1);\n+        this.fishingrate = fishingrate;\n+        runningPartyId.set(1000000001); // partyid must not clash with charid to solve update item looting issues, found thanks to Vcoc\n         runningMessengerId.set(1);\n         \n         petUpdate = Server.getInstance().getCurrentTime();\n@@ -186,6 +198,8 @@ public World(int world, int flag, String eventmsg, int exprate, int droprate, in\n         timedMapObjectsSchedule = tman.register(new TimedMapObjectWorker(this), 60 * 1000, 60 * 1000);\n         charactersSchedule = tman.register(new CharacterAutosaverWorker(this), 60 * 60 * 1000, 60 * 60 * 1000);\n         marriagesSchedule = tman.register(new WeddingReservationWorker(this), ServerConstants.WEDDING_RESERVATION_INTERVAL * 60 * 1000, ServerConstants.WEDDING_RESERVATION_INTERVAL * 60 * 1000);\n+        mapOwnershipSchedule = tman.register(new MapOwnershipWorker(this), 20 * 1000, 20 * 1000);\n+        fishingSchedule = tman.register(new FishingWorker(this), 10 * 1000, 10 * 1000);\n         \n     }\n \n@@ -362,14 +376,22 @@ public int getTravelRate() {\n         return travelrate;\n     }\n     \n-    public void setTravelRate(int quest) {\n-        this.travelrate = quest;\n+    public void setTravelRate(int travel) {\n+        this.travelrate = travel;\n     }\n     \n     public int getTransportationTime(int travelTime) {\n         return (int) Math.ceil(travelTime / travelrate);\n     }\n     \n+    public int getFishingRate() {\n+        return fishingrate;\n+    }\n+    \n+    public void setFishingRate(int quest) {\n+        this.fishingrate = quest;\n+    }\n+    \n     public void loadAccountCharactersView(Integer accountId, List<MapleCharacter> chars) {\n         SortedMap<Integer, MapleCharacter> charsMap = new TreeMap<>();\n         for(MapleCharacter chr : chars) {\n@@ -985,14 +1007,23 @@ public void leaveMessenger(int messengerid, MapleMessengerCharacter target) {\n \n     public void messengerInvite(String sender, int messengerid, String target, int fromchannel) {\n         if (isConnected(target)) {\n-            MapleMessenger messenger = getPlayerStorage().getCharacterByName(target).getMessenger();\n-            if (messenger == null) {\n-                getPlayerStorage().getCharacterByName(target).getClient().announce(MaplePacketCreator.messengerInvite(sender, messengerid));\n-                MapleCharacter from = getChannel(fromchannel).getPlayerStorage().getCharacterByName(sender);\n-                from.getClient().announce(MaplePacketCreator.messengerNote(target, 4, 1));\n-            } else {\n-                MapleCharacter from = getChannel(fromchannel).getPlayerStorage().getCharacterByName(sender);\n-                from.getClient().announce(MaplePacketCreator.messengerChat(sender + \" : \" + target + \" is already using Maple Messenger\"));\n+            MapleCharacter targetChr = getPlayerStorage().getCharacterByName(target);\n+            if (targetChr != null) {\n+                MapleMessenger messenger = targetChr.getMessenger();\n+                if (messenger == null) {\n+                    MapleCharacter from = getChannel(fromchannel).getPlayerStorage().getCharacterByName(sender);\n+                    if (from != null) {\n+                        if (MapleInviteCoordinator.createInvite(InviteType.MESSENGER, from, messengerid, targetChr.getId())) {\n+                            targetChr.getClient().announce(MaplePacketCreator.messengerInvite(sender, messengerid));\n+                            from.getClient().announce(MaplePacketCreator.messengerNote(target, 4, 1));\n+                        } else {\n+                            from.announce(MaplePacketCreator.messengerChat(sender + \" : \" + target + \" is already managing a Maple Messenger invitation\"));\n+                        }\n+                    }\n+                } else {\n+                    MapleCharacter from = getChannel(fromchannel).getPlayerStorage().getCharacterByName(sender);\n+                    from.getClient().announce(MaplePacketCreator.messengerChat(sender + \" : \" + target + \" is already using Maple Messenger\"));\n+                }\n             }\n         }\n     }\n@@ -1043,11 +1074,13 @@ public void messengerChat(MapleMessenger messenger, String chattext, String name\n         }\n     }\n \n-    public void declineChat(String target, String namefrom) {\n-        if (isConnected(target)) {\n-            MapleCharacter chr = getPlayerStorage().getCharacterByName(target);\n-            if (chr != null && chr.getMessenger() != null) {\n-                chr.getClient().announce(MaplePacketCreator.messengerNote(namefrom, 5, 0));\n+    public void declineChat(String sender, MapleCharacter player) {\n+        if (isConnected(sender)) {\n+            MapleCharacter senderChr = getPlayerStorage().getCharacterByName(sender);\n+            if (senderChr != null && senderChr.getMessenger() != null) {\n+                if (MapleInviteCoordinator.answerInvite(InviteType.MESSENGER, player.getId(), senderChr.getMessenger().getId(), false).getLeft() == InviteResult.DENIED) {\n+                    senderChr.getClient().announce(MaplePacketCreator.messengerNote(player.getName(), 5, 0));\n+                }\n             }\n         }\n     }\n@@ -1890,6 +1923,44 @@ public void dropMessage(int type, String message) {\n         }\n     }\n     \n+    public boolean registerFisherPlayer(MapleCharacter chr, int baitLevel) {\n+        synchronized (fishingAttempters) {\n+            if (fishingAttempters.containsKey(chr)) {\n+                return false;\n+            }\n+\n+            fishingAttempters.put(chr, baitLevel);\n+            return true;\n+        }\n+    }\n+    \n+    public int unregisterFisherPlayer(MapleCharacter chr) {\n+        Integer baitLevel = fishingAttempters.remove(chr);\n+        if (baitLevel != null) {\n+            return baitLevel;\n+        } else {\n+            return 0;\n+        }\n+    }\n+    \n+    public void runCheckFishingSchedule() {\n+        double[] fishingLikelihoods = Fishing.fetchFishingLikelihood();\n+        double yearLikelihood = fishingLikelihoods[0], timeLikelihood = fishingLikelihoods[1];\n+        \n+        if (!fishingAttempters.isEmpty()) {\n+            List<MapleCharacter> fishingAttemptersList;\n+            \n+            synchronized (fishingAttempters) {\n+                fishingAttemptersList = new ArrayList<>(fishingAttempters.keySet());\n+            }\n+            \n+            for (MapleCharacter chr : fishingAttemptersList) {\n+                int baitLevel = unregisterFisherPlayer(chr);\n+                Fishing.doFishing(chr, baitLevel, yearLikelihood, timeLikelihood);\n+            }\n+        }\n+    }\n+    \n     private void clearWorldData() {\n         List<MapleParty> pList;\n         partyLock.lock();\n@@ -1966,6 +2037,16 @@ public final void shutdown() {\n             marriagesSchedule = null;\n         }\n         \n+        if(mapOwnershipSchedule != null) {\n+            mapOwnershipSchedule.cancel(false);\n+            mapOwnershipSchedule = null;\n+        }\n+        \n+        if(fishingSchedule != null) {\n+            fishingSchedule.cancel(false);\n+            fishingSchedule = null;\n+        }\n+        \n         players.disconnectAll();\n         players = null;\n         "}, {"sha": "e3141842182f88211d932c148dc5a8f6d74c7498", "filename": "src/scripting/AbstractPlayerInteraction.java", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/scripting/AbstractPlayerInteraction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/scripting/AbstractPlayerInteraction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/AbstractPlayerInteraction.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -848,18 +848,18 @@ public void teachSkill(int skillid, byte level, byte masterLevel, long expiratio\n     }\n \n \tpublic void teachSkill(int skillid, byte level, byte masterLevel, long expiration, boolean force) {\n-\t    Skill skill = SkillFactory.getSkill(skillid);\n-\t    \n-\t    if (!force && level > -1) {\n+            Skill skill = SkillFactory.getSkill(skillid);\n             MapleCharacter.SkillEntry skillEntry = getPlayer().getSkills().get(skill);\n-\n             if (skillEntry != null) {\n-                getPlayer().changeSkillLevel(skill, (byte) Math.max(skillEntry.skillevel, level), Math.max(skillEntry.masterlevel, masterLevel), expiration == -1 ? -1 : Math.max(skillEntry.expiration, expiration));\n-                return;\n+                if (!force && level > -1) {\n+                    getPlayer().changeSkillLevel(skill, (byte) Math.max(skillEntry.skillevel, level), Math.max(skillEntry.masterlevel, masterLevel), expiration == -1 ? -1 : Math.max(skillEntry.expiration, expiration));\n+                    return;\n+                }\n+            } else if (GameConstants.isAranSkills(skillid)) {\n+                c.announce(MaplePacketCreator.showInfo(\"Effect/BasicEff.img/AranGetSkill\"));\n             }\n-        }\n-        \n-        getPlayer().changeSkillLevel(skill, level, masterLevel, expiration);\n+            \n+            getPlayer().changeSkillLevel(skill, level, masterLevel, expiration);\n \t}\n \n \tpublic void removeEquipFromSlot(short slot) {"}, {"sha": "b856f461d1e057cfc84a507d6189edc1059e608e", "filename": "src/scripting/event/EventManager.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/scripting/event/EventManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/scripting/event/EventManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/event/EventManager.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -21,6 +21,7 @@\n */\n package scripting.event;\n \n+import tools.exceptions.EventInstanceInProgressException;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.Map;"}, {"sha": "906e33c2fa298648185b21119cbf6d55aaaf44d9", "filename": "src/scripting/npc/NPCConversationManager.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/scripting/npc/NPCConversationManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/scripting/npc/NPCConversationManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/npc/NPCConversationManager.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -435,6 +435,8 @@ public void upgradeAlliance() {\n                 \n                 Server.getInstance().allianceMessage(alliance.getId(), MaplePacketCreator.getGuildAlliances(alliance, c.getWorld()), -1, -1);\n                 Server.getInstance().allianceMessage(alliance.getId(), MaplePacketCreator.allianceNotice(alliance.getId(), alliance.getNotice()), -1, -1);\n+                \n+                c.announce(MaplePacketCreator.updateAllianceInfo(alliance, c.getWorld()));  // thanks Vcoc for finding an alliance update to leader issue\n         }\n \n \tpublic void disbandAlliance(MapleClient c, int allianceId) {"}, {"sha": "13a096f8b227a117f6f4562fd2c6e11414cc9262", "filename": "src/server/MapleTrade.java", "status": "modified", "additions": 147, "deletions": 47, "changes": 194, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/MapleTrade.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/MapleTrade.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleTrade.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -36,14 +36,38 @@\n import client.inventory.manipulator.MapleKarmaManipulator;\n import constants.GameConstants;\n import constants.ServerConstants;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n import tools.Pair;\n \n /**\n  *\n  * @author Matze\n- * @author Ronan - concurrency safety & check available slots\n+ * @author Ronan - concurrency safety & check available slots & trade results\n  */\n public class MapleTrade {\n+    \n+    public enum TradeResult {\n+        NO_RESPONSE(1),\n+        PARTNER_CANCEL(2),\n+        SUCCESSFUL(7),\n+        UNSUCCESSFUL(8),\n+        UNSUCCESSFUL_UNIQUE_ITEM_LIMIT(9),\n+        UNSUCCESSFUL_ANOTHER_MAP(12),\n+        UNSUCCESSFUL_DAMAGED_FILES(13);\n+        \n+        private final int res;\n+\n+        private TradeResult(int res) {\n+            this.res = res;\n+        }\n+        \n+        private byte getValue() {\n+            return (byte) res;\n+        }\n+    }\n+    \n     private MapleTrade partner = null;\n     private List<Item> items = new ArrayList<>();\n     private List<Item> exchangeItems;\n@@ -88,6 +112,7 @@ private void fetchExchangedItems() {\n     }\n \n     private void completeTrade() {\n+        byte result;\n         boolean show = ServerConstants.USE_DEBUG;\n         items.clear();\n         meso = 0;\n@@ -106,18 +131,21 @@ private void completeTrade() {\n             } else {\n                 chr.dropMessage(1, \"Transaction completed. You received \" + GameConstants.numberWithCommas(exchangeMeso) + \" mesos.\");\n             }\n+            \n+            result = TradeResult.NO_RESPONSE.getValue();\n         } else {\n-            chr.dropMessage(1, \"Transaction completed.\");\n+            result = TradeResult.SUCCESSFUL.getValue();\n         }\n         \n         exchangeMeso = 0;\n         if (exchangeItems != null) {\n             exchangeItems.clear();\n         }\n-        chr.getClient().announce(MaplePacketCreator.getTradeCompletion(number));\n+        \n+        chr.getClient().announce(MaplePacketCreator.getTradeResult(number, result));\n     }\n \n-    private void cancel() {\n+    private void cancel(byte result) {\n         boolean show = ServerConstants.USE_DEBUG;\n         \n         for (Item item : items) {\n@@ -134,7 +162,8 @@ private void cancel() {\n         if (exchangeItems != null) {\n             exchangeItems.clear();\n         }\n-        chr.getClient().announce(MaplePacketCreator.getTradeCancel(number));\n+        \n+        chr.getClient().announce(MaplePacketCreator.getTradeResult(number, result));\n     }\n \n     private boolean isLocked() {\n@@ -224,6 +253,15 @@ private boolean fitsInInventory() {\n         return MapleInventory.checkSpotsAndOwnership(chr, tradeItems);\n     }\n     \n+    private boolean fitsUniquesInInventory() {\n+        List<Integer> exchangeItemids = new LinkedList<>();\n+        for (Item item : exchangeItems) {\n+            exchangeItemids.add(item.getItemId());\n+        }\n+        \n+        return chr.canHoldUniques(exchangeItemids);\n+    }\n+    \n     private synchronized boolean checkTradeCompleteHandshake(boolean updateSelf) {\n         MapleTrade self, other;\n                 \n@@ -259,40 +297,50 @@ public static void completeTrade(MapleCharacter c) {\n             partner.fetchExchangedItems();\n             \n             if (!local.fitsMeso()) {\n-                cancelTrade(c);\n+                cancelTrade(local.getChr(), TradeResult.UNSUCCESSFUL);\n                 c.message(\"There is not enough meso inventory space to complete the trade.\");\n                 partner.getChr().message(\"Partner does not have enough meso inventory space to complete the trade.\");\n                 return;\n             } else if (!partner.fitsMeso()) {\n-                cancelTrade(c);\n+                cancelTrade(partner.getChr(), TradeResult.UNSUCCESSFUL);\n                 c.message(\"Partner does not have enough meso inventory space to complete the trade.\");\n                 partner.getChr().message(\"There is not enough meso inventory space to complete the trade.\");\n                 return;\n             }\n             \n             if (!local.fitsInInventory()) {\n-                cancelTrade(c);\n-                c.message(\"There is not enough inventory space to complete the trade.\");\n-                partner.getChr().message(\"Partner does not have enough inventory space to complete the trade.\");\n+                if (local.fitsUniquesInInventory()) {\n+                    cancelTrade(local.getChr(), TradeResult.UNSUCCESSFUL);\n+                    c.message(\"There is not enough inventory space to complete the trade.\");\n+                    partner.getChr().message(\"Partner does not have enough inventory space to complete the trade.\");\n+                } else {\n+                    cancelTrade(local.getChr(), TradeResult.UNSUCCESSFUL_UNIQUE_ITEM_LIMIT);\n+                    partner.getChr().message(\"Partner cannot hold more than one one-of-a-kind item at a time.\");\n+                }\n                 return;\n             } else if (!partner.fitsInInventory()) {\n-                cancelTrade(c);\n-                c.message(\"Partner does not have enough inventory space to complete the trade.\");\n-                partner.getChr().message(\"There is not enough inventory space to complete the trade.\");\n+                if (partner.fitsUniquesInInventory()) {\n+                    cancelTrade(partner.getChr(), TradeResult.UNSUCCESSFUL);\n+                    c.message(\"Partner does not have enough inventory space to complete the trade.\");\n+                    partner.getChr().message(\"There is not enough inventory space to complete the trade.\");\n+                } else {\n+                    cancelTrade(partner.getChr(), TradeResult.UNSUCCESSFUL_UNIQUE_ITEM_LIMIT);\n+                    c.message(\"Partner cannot hold more than one one-of-a-kind item at a time.\");\n+                }\n                 return;\n             }\n             \n             if (local.getChr().getLevel() < 15) {\n                 if (local.getChr().getMesosTraded() + local.exchangeMeso > 1000000) {\n-                    cancelTrade(c);\n+                    cancelTrade(local.getChr(), TradeResult.NO_RESPONSE);\n                     local.getChr().getClient().announce(MaplePacketCreator.serverNotice(1, \"Characters under level 15 may not trade more than 1 million mesos per day.\"));\n                     return;\n                 } else {\n                     local.getChr().addMesosTraded(local.exchangeMeso);\n                 }\n             } else if (partner.getChr().getLevel() < 15) {\n                 if (partner.getChr().getMesosTraded() + partner.exchangeMeso > 1000000) {\n-                    cancelTrade(c);\n+                    cancelTrade(partner.getChr(), TradeResult.NO_RESPONSE);\n                     partner.getChr().getClient().announce(MaplePacketCreator.serverNotice(1, \"Characters under level 15 may not trade more than 1 million mesos per day.\"));\n                     return;\n                 } else {\n@@ -309,74 +357,122 @@ public static void completeTrade(MapleCharacter c) {\n         }\n     }\n     \n-    private static void cancelTradeInternal(MapleCharacter chr) {\n+    private static void cancelTradeInternal(MapleCharacter chr, byte selfResult, byte partnerResult) {\n         MapleTrade trade = chr.getTrade();\n         if(trade == null) return;\n         \n-        trade.cancel();\n+        trade.cancel(selfResult);\n         if (trade.getPartner() != null) {\n-            trade.getPartner().cancel();\n+            trade.getPartner().cancel(partnerResult);\n             trade.getPartner().getChr().setTrade(null);\n+            \n+            MapleInviteCoordinator.answerInvite(InviteType.TRADE, trade.getChr().getId(), trade.getPartner().getChr().getId(), false);\n+            MapleInviteCoordinator.answerInvite(InviteType.TRADE, trade.getPartner().getChr().getId(), trade.getChr().getId(), false);\n         }\n         chr.setTrade(null);\n     }\n     \n-    private synchronized void tradeCancelHandshake(boolean updateSelf) {\n+    private synchronized void tradeCancelHandshake(boolean updateSelf, byte result) {\n+        byte selfResult, partnerResult;\n         MapleTrade self;\n-                \n+        \n+        partnerResult = result;\n+        selfResult = (result == TradeResult.PARTNER_CANCEL.getValue() ? TradeResult.NO_RESPONSE.getValue() : result);\n+        \n         if (updateSelf) {\n             self = this;\n         } else {\n             self = this.getPartner();\n         }\n         \n-        cancelTradeInternal(self.getChr());\n+        cancelTradeInternal(self.getChr(), selfResult, partnerResult);\n     }\n     \n-    private void cancelHandshake() {  // handshake checkout thanks to Ronan\n-        if (this.getChr().getId() < this.getPartner().getChr().getId()) {\n-            this.tradeCancelHandshake(true);\n+    private void cancelHandshake(byte result) {  // handshake checkout thanks to Ronan\n+        MapleTrade partner = this.getPartner();\n+        if (partner == null || this.getChr().getId() < partner.getChr().getId()) {\n+            this.tradeCancelHandshake(true, result);\n         } else {\n-            this.getPartner().tradeCancelHandshake(false);\n+            partner.tradeCancelHandshake(false, result);\n         }\n     }\n \n-    public static void cancelTrade(MapleCharacter chr) {\n+    public static void cancelTrade(MapleCharacter chr, TradeResult result) {\n         MapleTrade trade = chr.getTrade();\n         if(trade == null) return;\n         \n-        trade.cancelHandshake();\n+        trade.cancelHandshake(result.getValue());\n     }\n     \n     public static void startTrade(MapleCharacter c) {\n         if (c.getTrade() == null) {\n             c.setTrade(new MapleTrade((byte) 0, c));\n-            c.getClient().announce(MaplePacketCreator.getTradeStart(c.getClient(), c.getTrade(), (byte) 0));\n-        } else {\n-            c.message(\"You are already in a trade.\");\n         }\n     }\n-\n+    \n+    private static boolean hasTradeInviteBack(MapleCharacter c1, MapleCharacter c2) {\n+        MapleTrade other = c2.getTrade();\n+        if (other != null) {\n+            MapleTrade otherPartner = other.getPartner();\n+            if (otherPartner != null) {\n+                if (otherPartner.getChr().getId() == c1.getId()) {\n+                    return true;\n+                }\n+            }\n+        }\n+        \n+        return false;\n+    }\n+    \n     public static void inviteTrade(MapleCharacter c1, MapleCharacter c2) {\n-        if (c2.getTrade() == null) {\n-            c2.setTrade(new MapleTrade((byte) 1, c2));\n-            c2.getTrade().setPartner(c1.getTrade());\n-            c1.getTrade().setPartner(c2.getTrade());\n-            c2.getClient().announce(MaplePacketCreator.getTradeInvite(c1));\n+        if (MapleInviteCoordinator.hasInvite(InviteType.TRADE, c1.getId())) {\n+            if (hasTradeInviteBack(c1, c2)) {\n+                c1.message(\"You are already managing this player's trade invitation.\");\n+            } else {\n+                c1.message(\"You are already managing someone's trade invitation.\");\n+            }\n+            \n+            return;\n+        } else if (c1.getTrade().isFullTrade()) {\n+            c1.message(\"You are already in a trade.\");\n+            return;\n+        }\n+        \n+        if (MapleInviteCoordinator.createInvite(InviteType.TRADE, c1, c1.getId(), c2.getId())) {\n+            if (c2.getTrade() == null) {\n+                c2.setTrade(new MapleTrade((byte) 1, c2));\n+                c2.getTrade().setPartner(c1.getTrade());\n+                c1.getTrade().setPartner(c2.getTrade());\n+                \n+                c1.getClient().announce(MaplePacketCreator.getTradeStart(c1.getClient(), c1.getTrade(), (byte) 0));\n+                c2.getClient().announce(MaplePacketCreator.tradeInvite(c1));\n+            } else {\n+                c1.message(\"The other player is already trading with someone else.\");\n+                cancelTrade(c1, TradeResult.NO_RESPONSE);\n+                MapleInviteCoordinator.answerInvite(InviteType.TRADE, c2.getId(), c1.getId(), false);\n+            }\n         } else {\n-            c1.message(\"The other player is already trading with someone else.\");\n-            cancelTrade(c1);\n+            c1.message(\"The other player is already managing someone else's trade invitation.\");\n+            cancelTrade(c1, TradeResult.NO_RESPONSE);\n         }\n     }\n \n     public static void visitTrade(MapleCharacter c1, MapleCharacter c2) {\n-        if (c1.getTrade() != null && c1.getTrade().getPartner() == c2.getTrade() && c2.getTrade() != null && c2.getTrade().getPartner() == c1.getTrade()) {\n-            c2.getClient().announce(MaplePacketCreator.getTradePartnerAdd(c1));\n-            c1.getClient().announce(MaplePacketCreator.getTradeStart(c1.getClient(), c1.getTrade(), (byte) 1));\n-            c1.getTrade().setFullTrade(true);\n-            c2.getTrade().setFullTrade(true);\n+        Pair<InviteResult, MapleCharacter> inviteRes = MapleInviteCoordinator.answerInvite(InviteType.TRADE, c1.getId(), c2.getId(), true);\n+        \n+        InviteResult res = inviteRes.getLeft();\n+        if (res == InviteResult.ACCEPTED) {\n+            if (c1.getTrade() != null && c1.getTrade().getPartner() == c2.getTrade() && c2.getTrade() != null && c2.getTrade().getPartner() == c1.getTrade()) {\n+                c2.getClient().announce(MaplePacketCreator.getTradePartnerAdd(c1));\n+                c1.getClient().announce(MaplePacketCreator.getTradeStart(c1.getClient(), c1.getTrade(), (byte) 1));\n+                c1.getTrade().setFullTrade(true);\n+                c2.getTrade().setFullTrade(true);\n+            } else {\n+                c1.message(\"The other player has already closed the trade.\");\n+            }\n         } else {\n-            c1.message(\"The other player has already closed the trade.\");\n+            c1.message(\"This trade invitation already rescinded.\");\n+            cancelTrade(c1, TradeResult.NO_RESPONSE);\n         }\n     }\n \n@@ -385,11 +481,15 @@ public static void declineTrade(MapleCharacter c) {\n         if (trade != null) {\n             if (trade.getPartner() != null) {\n                 MapleCharacter other = trade.getPartner().getChr();\n-                other.getTrade().cancel();\n+                if (MapleInviteCoordinator.answerInvite(InviteType.TRADE, c.getId(), other.getId(), false).getLeft() == InviteResult.DENIED) {\n+                    other.message(c.getName() + \" has declined your trade request.\");\n+                }\n+                \n+                other.getTrade().cancel(TradeResult.PARTNER_CANCEL.getValue());\n                 other.setTrade(null);\n-                other.message(c.getName() + \" has declined your trade request.\");\n+                \n             }\n-            trade.cancel();\n+            trade.cancel(TradeResult.NO_RESPONSE.getValue());\n             c.setTrade(null);\n         }\n     }"}, {"sha": "b4e4f29a0046b26393c5553008e9814c1fdf7953", "filename": "src/server/life/MapleMonster.java", "status": "modified", "additions": 109, "deletions": 65, "changes": 174, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/life/MapleMonster.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/life/MapleMonster.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleMonster.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -460,47 +460,50 @@ public void heal(int hp, int mp) {\n     public boolean isAttackedBy(MapleCharacter chr) {\n         return takenDamage.containsKey(chr.getId());\n     }\n-\n-    private void distributeExperienceToParty(int pid, float exp, int killer, int killerLevel, Set<MapleCharacter> underleveled, int minThresholdLevel) {\n-        List<MapleCharacter> members = new LinkedList<>();\n-        MapleCharacter pchar = getMap().getAnyCharacterFromParty(pid);\n+    \n+    private void distributeExperienceToParty(int pid, float exp, int mostDamageCid, int minThresholdLevel, int killerLevel, Set<MapleCharacter> underleveled, Map<MapleCharacter, Float> partyExpReward) {\n+        MapleCharacter pchar = getMap().getAnyCharacterFromParty(pid);  // thanks G h o s t, Alfred, Vcoc, BHB for poiting out a bug in detecting party members after membership transactions in a party took place\n+        \n+        List<MapleCharacter> members;\n         if(pchar != null) {\n-            for(MapleCharacter chr : pchar.getPartyMembersOnSameMap()) {\n-                members.add(chr);\n-            }\n+            members = pchar.getPartyMembersOnSameMap();\n         } else {\n-            MapleCharacter chr = getMap().getCharacterById(killer);\n-            if(chr == null) return;\n-            \n-            members.add(chr);\n+            members = new LinkedList<>();\n         }\n         \n         List<MapleCharacter> expSharers = new LinkedList<>();\n-        int expSharersLevel = 0;\n+        int expSharersMaxLevel = 1;\n+        boolean hasMostDamageCid = false;\n         for (MapleCharacter mc : members) {\n+            if (mc.getId() == mostDamageCid) {\n+                hasMostDamageCid = true;\n+            }\n+            \n             if (mc.getLevel() >= minThresholdLevel) {    //NO EXP WILL BE GIVEN for those who are underleveled!\n                 if (Math.abs(killerLevel - mc.getLevel()) < ServerConstants.MIN_RANGELEVEL_TO_EXP_LEECH) {\n                     // thanks Thora for pointing out leech level limitation\n                     \n-                    expSharersLevel += mc.getLevel();\n+                    if (expSharersMaxLevel < mc.getLevel()) {\n+                        expSharersMaxLevel = mc.getLevel();\n+                    }\n                     expSharers.add(mc);\n                 }\n             } else {\n                 underleveled.add(mc);\n             }\n         }\n-\n-        final int mostDamageCid = getHighestDamagerId();\n-\n+        \n+        int numExpSharers = expSharers.size();\n+        \n+        // PARTY BONUS: 2p -> +2% , 3p -> +4% , 4p -> +6% , 5p -> +8% , 6p -> +10%\n+        // MOST DAMAGE BONUS: 1.5x bonus\n+        final float partyModifier = numExpSharers <= 1 ? 0.0f : 0.02f * (numExpSharers - 1);\n+        final float mostDamageModifier = hasMostDamageCid ? 1.5f : 1.0f;\n+        final float partyExp = exp * partyModifier * mostDamageModifier;\n+        \n         for (MapleCharacter mc : expSharers) {\n-            int id = mc.getId();\n-            boolean isKiller = killer == id;\n-            boolean mostDamage = mostDamageCid == id;\n-            float xp = ((0.80f * exp * mc.getLevel()) / expSharersLevel);\n-            if (mostDamage) {\n-                xp += (0.20f * exp);\n-            }\n-            giveExpToCharacter(mc, xp, isKiller, expSharers.size());\n+            float levelPenaltyModifier = (float) Math.sqrt(((float) mc.getLevel()) / expSharersMaxLevel);\n+            partyExpReward.put(mc, partyExp * levelPenaltyModifier);\n         }\n     }\n \n@@ -518,11 +521,26 @@ private int calcThresholdLevel(boolean isPqMob) {\n         }\n     }\n     \n+    private void propagateExperienceGains(Map<MapleCharacter, Float> personalExpReward, Map<MapleCharacter, Float> partyExpReward) {\n+        Set<MapleCharacter> expRewardPlayers = new HashSet<>(personalExpReward.keySet());\n+        expRewardPlayers.addAll(partyExpReward.keySet());\n+        \n+        for (MapleCharacter chr : expRewardPlayers) {\n+            Float personalExp = personalExpReward.get(chr);\n+            Float partyExp = partyExpReward.get(chr);\n+            \n+            this.giveExpToCharacter(chr, personalExp, partyExp);\n+        }\n+    }\n+    \n     private void distributeExperience(int killerId) {\n         if (isAlive()) {\n             return;\n         }\n         \n+        Map<MapleCharacter, Float> personalExpReward = new HashMap<>();\n+        Map<MapleCharacter, Float> partyExpReward = new HashMap<>();\n+        \n         EventInstanceManager eim = getMap().getEventInstance();\n         int minThresholdLevel = calcThresholdLevel(eim != null), killerLevel = Integer.MAX_VALUE;\n         int exp = getExp();\n@@ -553,18 +571,18 @@ private void distributeExperience(int killerId) {\n                     xp += exp2;\n                 }\n                 \n-                MapleParty p = mc.getParty();\n-                if (p != null) {\n-                    int pID = p.getId();\n-                    float pXP = xp + (partyExp.containsKey(pID) ? partyExp.get(pID) : 0);\n-                    partyExp.put(pID, pXP);\n-                } else {\n-                    if(mc.getLevel() >= minThresholdLevel) {\n-                        //NO EXP WILL BE GIVEN for those who are underleveled!\n-                        giveExpToCharacter(mc, xp, isKiller, 1);\n-                    } else {\n-                        underleveled.add(mc);\n+                if(mc.getLevel() >= minThresholdLevel) {\n+                    //NO EXP WILL BE GIVEN for those who are underleveled!\n+                    personalExpReward.put(mc, xp);\n+                    \n+                    MapleParty p = mc.getParty();\n+                    if (p != null) {    // for party bonus exp\n+                        int pID = p.getId();\n+                        float pXP = xp + (partyExp.containsKey(pID) ? partyExp.get(pID) : 0);\n+                        partyExp.put(pID, pXP);\n                     }\n+                } else {\n+                    underleveled.add(mc);\n                 }\n             }\n         }\n@@ -587,52 +605,78 @@ private void distributeExperience(int killerId) {\n             }\n         }\n         \n+        int mostDamageCid = this.getHighestDamagerId();\n         for (Entry<Integer, Float> party : partyExp.entrySet()) {\n-            distributeExperienceToParty(party.getKey(), party.getValue(), killerId, killerLevel, underleveled, minThresholdLevel);\n+            distributeExperienceToParty(party.getKey(), party.getValue(), mostDamageCid, minThresholdLevel, killerLevel, underleveled, partyExpReward);\n         }\n         \n         for(MapleCharacter mc : underleveled) {\n             mc.showUnderleveledInfo(this);\n         }\n+        \n+        propagateExperienceGains(personalExpReward, partyExpReward);\n     }\n+    \n+    private float getStatusExpMultiplier(MapleCharacter attacker) {\n+        float multiplier = 1.0f;\n+        \n+        // thanks Prophecy & Aika for finding out Holy Symbol not being applied on party bonuses\n+        Integer holySymbol = attacker.getBuffedValue(MapleBuffStat.HOLY_SYMBOL);\n+        if (holySymbol != null) {\n+            multiplier *= (1.0 + (holySymbol.doubleValue() / 100.0));\n+        }\n \n-    private void giveExpToCharacter(MapleCharacter attacker, float exp, boolean isKiller, int numExpSharers) {\n-        //PARTY BONUS: 2p -> +2% , 3p -> +4% , 4p -> +6% , 5p -> +8% , 6p -> +10%\n-        final float partyModifier = numExpSharers <= 1 ? 0.0f : 0.02f * (numExpSharers - 1);\n+        statiLock.lock();\n+        try {\n+            MonsterStatusEffect mse = stati.get(MonsterStatus.SHOWDOWN);\n+            if (mse != null) {\n+                multiplier *= (1.0 + (mse.getStati().get(MonsterStatus.SHOWDOWN).doubleValue() / 100.0));\n+            }\n+        } finally {\n+            statiLock.unlock();\n+        }\n         \n-        int partyExp = 0;\n-        if (attacker.getHp() > 0) {\n-            exp *= attacker.getExpRate();\n+        return multiplier;\n+    }\n+    \n+    private static int expValueToInteger(double exp) {\n+        if (exp > Integer.MAX_VALUE) {\n+            exp = Integer.MAX_VALUE;\n+        } else if (exp < Integer.MIN_VALUE) {\n+            exp = Integer.MIN_VALUE;\n+        }\n+        \n+        return (int) exp;\n+    }\n+    \n+    private void giveExpToCharacter(MapleCharacter attacker, Float personalExp, Float partyExp) {\n+        if (attacker.isAlive()) {\n+            if (personalExp != null) {\n+                personalExp *= getStatusExpMultiplier(attacker);\n+                personalExp *= attacker.getExpRate();\n+            } else {\n+                personalExp = 0.0f;\n+            }\n             \n             Integer expBonus = attacker.getBuffedValue(MapleBuffStat.EXP_INCREASE);\n-            if (expBonus != null) {     // exp increase buff found thanks to HighKey21\n-                exp += expBonus;\n+            if (expBonus != null) {     // exp increase player buff found thanks to HighKey21\n+                personalExp += expBonus;\n             }\n-            \n-            int personalExp = (int) exp;\n-            if (exp <= Integer.MAX_VALUE) {  // assuming no negative xp here\n-                if (partyModifier > 0.0f) {\n-                    partyExp = (int) (personalExp * partyModifier * ServerConstants.PARTY_BONUS_EXP_RATE);\n-                }\n-                Integer holySymbol = attacker.getBuffedValue(MapleBuffStat.HOLY_SYMBOL);\n-                if (holySymbol != null) {\n-                    personalExp *= 1.0 + (holySymbol.doubleValue() / 100.0);\n-                }\n \n-                statiLock.lock();\n-                try {\n-                    if (stati.containsKey(MonsterStatus.SHOWDOWN)) {\n-                        personalExp *= (stati.get(MonsterStatus.SHOWDOWN).getStati().get(MonsterStatus.SHOWDOWN).doubleValue() / 100.0 + 1.0);\n-                    }\n-                } finally {\n-                    statiLock.unlock();\n-                }\n+            int _personalExp = expValueToInteger(personalExp); // assuming no negative xp here\n+            \n+            if (partyExp != null) {\n+                partyExp *= getStatusExpMultiplier(attacker);\n+                partyExp *= attacker.getExpRate();\n+                partyExp *= ServerConstants.PARTY_BONUS_EXP_RATE;\n             } else {\n-                personalExp = Integer.MAX_VALUE;\n+                partyExp = 0.0f;\n             }\n             \n-            attacker.gainExp(personalExp, partyExp, true, false, isKiller);\n-            attacker.increaseEquipExp(personalExp);\n+            int _partyExp = expValueToInteger(partyExp);\n+            \n+            attacker.gainExp(_personalExp, _partyExp, true, false, false);\n+            attacker.increaseEquipExp(_personalExp);\n             attacker.updateQuestMobCount(getId());\n         }\n     }"}, {"sha": "be8b169c87fdb4feaec8278f5955297d7ebd2699", "filename": "src/server/maps/MapleGenericPortal.java", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/maps/MapleGenericPortal.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/maps/MapleGenericPortal.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleGenericPortal.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -22,6 +22,8 @@\n package server.maps;\n \n import client.MapleClient;\n+import client.MapleCharacter;\n+import constants.GameConstants;\n import java.awt.Point;\n import scripting.portal.PortalScriptManager;\n import server.MaplePortal;\n@@ -140,13 +142,18 @@ public void enterPortal(MapleClient c) {\n                 npe.printStackTrace();\n             }\n         } else if (getTargetMapId() != 999999999) {\n-            MapleMap to = c.getPlayer().getEventInstance() == null ? c.getChannelServer().getMapFactory().getMap(getTargetMapId()) : c.getPlayer().getEventInstance().getMapInstance(getTargetMapId());\n-            MaplePortal pto = to.getPortal(getTarget());\n-            if (pto == null) {// fallback for missing portals - no real life case anymore - interesting for not implemented areas\n-                pto = to.getPortal(0);\n+            MapleCharacter chr = c.getPlayer();\n+            if (!(chr.getChalkboard() != null && GameConstants.isFreeMarketRoom(getTargetMapId()))) {\n+                MapleMap to = chr.getEventInstance() == null ? c.getChannelServer().getMapFactory().getMap(getTargetMapId()) : chr.getEventInstance().getMapInstance(getTargetMapId());\n+                MaplePortal pto = to.getPortal(getTarget());\n+                if (pto == null) {// fallback for missing portals - no real life case anymore - interesting for not implemented areas\n+                    pto = to.getPortal(0);\n+                }\n+                chr.changeMap(to, pto); //late resolving makes this harder but prevents us from loading the whole world at once\n+                changed = true;\n+            } else {\n+                chr.dropMessage(5, \"You cannot enter this map with the chalkboard opened.\");\n             }\n-            c.getPlayer().changeMap(to, pto); //late resolving makes this harder but prevents us from loading the whole world at once\n-            changed = true;\n         }\n         if (!changed) {\n             c.announce(MaplePacketCreator.enableActions());"}, {"sha": "0fca0338c7e940560c318dd7ef8c8c67a479629b", "filename": "src/server/maps/MapleHiredMerchant.java", "status": "modified", "additions": 44, "deletions": 14, "changes": 58, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/maps/MapleHiredMerchant.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/maps/MapleHiredMerchant.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleHiredMerchant.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -29,6 +29,7 @@\n import client.inventory.MapleInventoryType;\n import client.inventory.manipulator.MapleInventoryManipulator;\n import client.inventory.manipulator.MapleKarmaManipulator;\n+import client.processor.FredrickProcessor;\n import com.mysql.jdbc.Statement;\n import constants.ServerConstants;\n import java.sql.Connection;\n@@ -191,6 +192,14 @@ private void removeAllVisitors() {\n             visitorLock.unlock();\n         }\n     }\n+    \n+    private void removeOwner(MapleCharacter owner) {\n+        if (owner.getHiredMerchant() == this) {\n+            owner.announce(MaplePacketCreator.hiredMerchantOwnerLeave());\n+            owner.announce(MaplePacketCreator.leaveHiredMerchant(0x00, 0x03));\n+            owner.setHiredMerchant(null);\n+        }\n+    }\n \n     public void withdrawMesos(MapleCharacter chr) {\n         if (isOwner(chr)) {\n@@ -220,6 +229,10 @@ public void takeItemBack(int slot, MapleCharacter chr) {\n                 removeFromSlot(slot);\n                 chr.announce(MaplePacketCreator.updateHiredMerchant(this, chr));\n             }\n+            \n+            if (ServerConstants.USE_ENFORCE_MERCHANT_SAVE) {\n+                chr.saveCharToDB(false);\n+            }\n         }\n     }\n     \n@@ -228,15 +241,17 @@ private static boolean canBuy(MapleClient c, Item newItem) {\n     }\n     \n     private int getQuantityLeft(int itemid) {\n-        int count = 0;\n-        \n-        for (MaplePlayerShopItem mpsi : items) {\n-            if (mpsi.getItem().getItemId() == itemid) {\n-                count += (mpsi.getBundles() * mpsi.getItem().getQuantity());\n+        synchronized (items) {\n+            int count = 0;\n+            \n+            for (MaplePlayerShopItem mpsi : items) {\n+                if (mpsi.getItem().getItemId() == itemid) {\n+                    count += (mpsi.getBundles() * mpsi.getItem().getQuantity());\n+                }\n             }\n+            \n+            return count;\n         }\n-        \n-        return count;\n     }\n     \n     public void buy(MapleClient c, int item, short quantity) {\n@@ -291,10 +306,14 @@ public void buy(MapleClient c, int item, short quantity) {\n                         }\n                     }\n                 } else {\n-                    c.getPlayer().dropMessage(1, \"Your inventory is full. Please clean a slot before buying this item.\");\n+                    c.getPlayer().dropMessage(1, \"Your inventory is full. Please clear a slot before buying this item.\");\n+                    c.announce(MaplePacketCreator.enableActions());\n+                    return;\n                 }\n             } else {\n                 c.getPlayer().dropMessage(1, \"You don't have enough mesos to purchase this item.\");\n+                c.announce(MaplePacketCreator.enableActions());\n+                return;\n             }\n             try {\n                 this.saveItems(false);\n@@ -365,17 +384,18 @@ public void forceClose() {\n \n     public void closeOwnerMerchant(MapleCharacter chr) {\n         if(this.isOwner(chr)) {\n-            chr.announce(MaplePacketCreator.hiredMerchantOwnerLeave());\n-            chr.announce(MaplePacketCreator.leaveHiredMerchant(0x00, 0x03));\n             this.closeShop(chr.getClient(), false);\n             chr.setHasMerchant(false);\n         }\n     }\n     \n-    public void closeShop(MapleClient c, boolean timeout) {\n+    private void closeShop(MapleClient c, boolean timeout) {\n         map.removeMapObject(this);\n         map.broadcastMessage(MaplePacketCreator.removeHiredMerchantBox(ownerId));\n         c.getChannelServer().removeHiredMerchant(ownerId);\n+        \n+        this.removeAllVisitors();\n+        this.removeOwner(c.getPlayer());\n \n         try {\n             MapleCharacter player = c.getWorldServer().getPlayerStorage().getCharacterById(ownerId);\n@@ -412,14 +432,18 @@ public void closeShop(MapleClient c, boolean timeout) {\n             } catch (Exception e) {\n                 e.printStackTrace();\n             }\n+            \n+            if (ServerConstants.USE_ENFORCE_MERCHANT_SAVE) {\n+                c.getPlayer().saveCharToDB(false);\n+            }\n \n             synchronized (items) {\n                 items.clear();\n             }\n         } catch (Exception e) {\n             e.printStackTrace();\n         }\n-\n+        \n         Server.getInstance().getWorld(world).unregisterHiredMerchant(this);\n     }\n     \n@@ -611,6 +635,8 @@ public void saveItems(boolean shutdown) throws SQLException {\n         Connection con = DatabaseConnection.getConnection();\n         ItemFactory.MERCHANT.saveItems(itemsWithType, bundles, this.ownerId, con);\n         con.close();\n+        \n+        FredrickProcessor.insertFredrickLog(this.ownerId);\n     }\n \n     private static boolean check(MapleCharacter chr, List<MaplePlayerShopItem> items) {\n@@ -629,8 +655,12 @@ public int getChannel() {\n         return channel;\n     }\n \n-    public int getTimeLeft() {\n-        return (int) ((System.currentTimeMillis() - start) / 1000);\n+    public int getTimeOpen() {\n+        double openTime = (System.currentTimeMillis() - start) / 60000;\n+        openTime /= 1440;   // heuristics since engineered method to count time here is unknown\n+        openTime *= 1318;\n+        \n+        return (int) Math.ceil(openTime);\n     }\n \n     public void clearMessages() {"}, {"sha": "2f2e7026b1e4e9eb9d958b0ba0b47aab4b251951", "filename": "src/server/maps/MapleMap.java", "status": "modified", "additions": 95, "deletions": 16, "changes": 111, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/maps/MapleMap.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/maps/MapleMap.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMap.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -31,6 +31,7 @@\n import client.inventory.MaplePet;\n import client.status.MonsterStatus;\n import client.status.MonsterStatusEffect;\n+import constants.GameConstants;\n import constants.ItemConstants;\n import constants.ServerConstants;\n import java.awt.Point;\n@@ -150,6 +151,8 @@\n     private Pair<Integer, String> timeMob = null;\n     private short mobInterval = 5000;\n     private boolean allowSummons = true; // All maps should have this true at the beginning\n+    private MapleCharacter mapOwner = null;\n+    private long mapOwnerLastActivityTime = Long.MAX_VALUE;\n     \n     // HPQ\n     private int riceCakes = 0;\n@@ -1088,6 +1091,18 @@ public final void disappearingItemDrop(final MapleMapObject dropper, final Maple\n             mdrop.unlockItem();\n         }\n     }\n+    \n+    public final void disappearingMesoDrop(final int meso, final MapleMapObject dropper, final MapleCharacter owner, final Point pos) {\n+        final Point droppos = calcDropPos(pos, pos);\n+        final MapleMapItem mdrop = new MapleMapItem(meso, droppos, dropper, owner, owner.getClient(), (byte) 1, false);\n+        \n+        mdrop.lockItem();\n+        try {\n+            broadcastItemDropMessage(mdrop, dropper.getPosition(), droppos, (byte) 3, mdrop.getPosition());\n+        } finally {\n+            mdrop.unlockItem();\n+        }\n+    }\n \n     public MapleMonster getMonsterById(int id) {\n         objectRLock.lock();\n@@ -2254,23 +2269,13 @@ public void run() {\n     }\n     \n     public MapleCharacter getAnyCharacterFromParty(int partyid) {\n-        chrRLock.lock();\n-        try {\n-            Set<Integer> list = mapParty.get(partyid);\n-            if(list == null) return null;\n-            \n-            for(Integer cid : list) {\n-                for (MapleCharacter c : this.characters) {\n-                    if (c.getId() == cid) {\n-                        return c;\n-                    }\n-                }\n+        for (MapleCharacter chr : this.getAllPlayers()) {\n+            if (chr.getPartyId() == partyid) {\n+                return chr;\n             }\n-            \n-            return null;\n-        } finally {\n-            chrRLock.unlock();\n         }\n+        \n+        return null;\n     }\n     \n     private void addPartyMemberInternal(MapleCharacter chr) {\n@@ -2451,6 +2456,14 @@ public void run() {\n         \n         chr.removeSandboxItems();\n         \n+        if (chr.getChalkboard() != null) {\n+            if (!GameConstants.isFreeMarketRoom(mapid)) {\n+                chr.announce(MaplePacketCreator.useChalkboard(chr, false)); // update player's chalkboard when changing maps found thanks to Vcoc\n+            } else {\n+                chr.setChalkboard(null);\n+            }\n+        }\n+        \n         if (chr.isHidden()) {\n             broadcastGMSpawnPlayerMapObjectMessage(chr, chr, true);\n             chr.announce(MaplePacketCreator.getGMEffect(0x10, (byte) 1));\n@@ -2479,10 +2492,11 @@ public void run() {\n         } finally {\n             objectWLock.unlock();\n         }\n+        \n         if (chr.getPlayerShop() != null) {\n             addMapObject(chr.getPlayerShop());\n         }\n-\n+        \n         final MapleDragon dragon = chr.getDragon();\n         if (dragon != null) {\n             dragon.setPosition(chr.getPosition());\n@@ -2557,6 +2571,19 @@ public MaplePortal getRandomPlayerSpawnpoint() {\n         return portal != null ? portal : getPortal(0);\n     }\n     \n+    public MaplePortal findClosestWarpPortal(Point from) {\n+        MaplePortal closest = null;\n+        double shortestDistance = Double.POSITIVE_INFINITY;\n+        for (MaplePortal portal : portals.values()) {\n+            double distance = portal.getPosition().distanceSq(from);\n+            if (portal.getType() == MaplePortal.MAP_PORTAL && distance < shortestDistance && portal.getTargetMapId() == 999999999) {\n+                closest = portal;\n+                shortestDistance = distance;\n+            }\n+        }\n+        return closest;\n+    }\n+    \n     public MaplePortal findClosestPlayerSpawnpoint(Point from) {\n         MaplePortal closest = null;\n         double shortestDistance = Double.POSITIVE_INFINITY;\n@@ -4021,6 +4048,58 @@ public void monsterHealed(int trueHeal) {\n         }\n     }\n     \n+    public boolean claimOwnership(MapleCharacter chr) {\n+        if (mapOwner == null) {\n+            mapOwner = chr;\n+            mapOwnerLastActivityTime = Server.getInstance().getCurrentTime();\n+            \n+            getChannelServer().registerOwnedMap(this);\n+            return true;\n+        } else {\n+            return chr == mapOwner;\n+        }\n+    }\n+    \n+    public boolean unclaimOwnership(MapleCharacter chr) {\n+        if (mapOwner == chr) {\n+            mapOwner = null;\n+            mapOwnerLastActivityTime = Long.MAX_VALUE;\n+            \n+            getChannelServer().unregisterOwnedMap(this);\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n+    \n+    private void refreshOwnership() {\n+        mapOwnerLastActivityTime = Server.getInstance().getCurrentTime();\n+    }\n+    \n+    public boolean isOwnershipRestricted(MapleCharacter chr) {\n+        MapleCharacter owner = mapOwner;\n+        \n+        if (owner != null) {\n+            if (owner != chr && !owner.isPartyMember(chr)) {    // thanks Vcoc & BHB for suggesting the map ownership feature\n+                chr.showMapOwnershipInfo(owner);\n+                return true;\n+            } else {\n+                this.refreshOwnership();\n+            }\n+        }\n+        \n+        return false;\n+    }\n+    \n+    public void checkMapOwnerActivity() {\n+        long timeNow = Server.getInstance().getCurrentTime();\n+        if (timeNow - mapOwnerLastActivityTime > 60000) {\n+            if (unclaimOwnership(mapOwner)) {\n+                this.dropMessage(5, \"This lawn is now free real estate.\");\n+            }\n+        }\n+    }\n+    \n     public void dispose() {\n         for(MapleMonster mm : this.getMonsters()) {\n             mm.dispose();"}, {"sha": "43ba5746f9c641ec8cf9fe1d77d085e59765d83a", "filename": "src/server/maps/MaplePlayerShop.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/maps/MaplePlayerShop.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/server/maps/MaplePlayerShop.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MaplePlayerShop.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -146,6 +146,7 @@ public void forceRemoveVisitor(MapleCharacter visitor) {\n         try {\n             for (int i = 0; i < 3; i++) {\n                 if (visitors[i] != null && visitors[i].getId() == visitor.getId()) {\n+                    visitors[i].setPlayerShop(null);\n                     visitors[i] = null;\n                     visitor.setSlot(-1);\n                     \n@@ -298,7 +299,7 @@ public boolean buy(MapleClient c, int item, short quantity) {\n                                 }\n                             }\n                         } else {\n-                            c.getPlayer().dropMessage(1, \"Your inventory is full. Please clean a slot before buying this item.\");\n+                            c.getPlayer().dropMessage(1, \"Your inventory is full. Please clear a slot before buying this item.\");\n                             c.announce(MaplePacketCreator.enableActions());\n                             return false;\n                         }"}, {"sha": "a6c40a9e886bd8adc9c10a885208e2732deb729c", "filename": "src/tools/FilePrinter.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/tools/FilePrinter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/tools/FilePrinter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/FilePrinter.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -28,6 +28,7 @@\n             PACKET_LOG = \"game/Log.txt\",\n             CASHITEM_BOUGHT = \"interactions/CashLog.txt\",\n             EXCEPTION = \"game/Exceptions.txt\",\n+            LOGIN_EXCEPTION = \"game/LoginExceptions.txt\",\n             TRADE_EXCEPTION = \"game/TradeExceptions.txt\",\n             SQL_EXCEPTION = \"game/SqlExceptions.txt\",\n             PACKET_HANDLER = \"game/packethandler/\","}, {"sha": "b0bd9689597a72c52f4cd945397eb0bf6a0d10d0", "filename": "src/tools/MaplePacketCreator.java", "status": "modified", "additions": 61, "deletions": 32, "changes": 93, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/tools/MaplePacketCreator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/tools/MaplePacketCreator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MaplePacketCreator.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -1065,7 +1065,7 @@ public int compare(Pair<MapleStat, Integer> o1, Pair<MapleStat, Integer> o2) {\n                 mplew.writeShort(chr.getHp());\n                 mplew.writeBool(false);\n                 mplew.writeLong(getTime(Server.getInstance().getCurrentTime()));\n-                mplew.skip(14);\n+                mplew.skip(18);\n                 return mplew.getPacket();\n         }\n         \n@@ -1082,7 +1082,7 @@ public int compare(Pair<MapleStat, Integer> o1, Pair<MapleStat, Integer> o2) {\n                 mplew.writeInt(spawnPosition.x);    // spawn position placement thanks to Arnah (Vertisy)\n                 mplew.writeInt(spawnPosition.y);\n                 mplew.writeLong(getTime(Server.getInstance().getCurrentTime()));\n-                mplew.skip(14);\n+                mplew.skip(18);\n                 return mplew.getPacket();\n         }\n         \n@@ -3175,7 +3175,7 @@ private static void writeLongMaskChair(final MaplePacketLittleEndianWriter mplew\n                 return mplew.getPacket();\n         }\n \n-        public static byte[] getTradeInvite(MapleCharacter c) {\n+        public static byte[] tradeInvite(MapleCharacter c) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.PLAYER_INTERACTION.getValue());\n                 mplew.write(PlayerInteractionHandler.Action.INVITE.getCode());\n@@ -3309,21 +3309,22 @@ private static void writeLongMaskChair(final MaplePacketLittleEndianWriter mplew\n                 return mplew.getPacket();\n         }\n \n-        public static byte[] getTradeCompletion(byte number) {\n-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter(5);\n-                mplew.writeShort(SendOpcode.PLAYER_INTERACTION.getValue());\n-                mplew.write(PlayerInteractionHandler.Action.EXIT.getCode());\n-                mplew.write(number);\n-                mplew.write(6);\n-                return mplew.getPacket();\n-        }\n-\n-        public static byte[] getTradeCancel(byte number) {\n+        /**\n+         * Possible values for <code>operation</code>:<br> 2: Trade cancelled by the\n+         * other character<br> 7: Trade successful<br> 8: Trade unsuccessful<br> \n+         * 9: Cannot carry more one-of-a-kind items<br> 12: Cannot trade on different maps<br>\n+         * 13: Cannot trade, game files damaged<br> \n+         *\n+         * @param number\n+         * @param operation\n+         * @return\n+         */\n+        public static byte[] getTradeResult(byte number, byte operation) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter(5);\n                 mplew.writeShort(SendOpcode.PLAYER_INTERACTION.getValue());\n                 mplew.write(PlayerInteractionHandler.Action.EXIT.getCode());\n                 mplew.write(number);\n-                mplew.write(2);\n+                mplew.write(operation);\n                 return mplew.getPacket();\n         }\n         \n@@ -3783,11 +3784,9 @@ private static void writeLongMaskChair(final MaplePacketLittleEndianWriter mplew\n          * party. 13: You have yet to join a party.\n          * 16: Already have joined a party. 17: The party you're trying to join is\n          * already in full capacity. 19: Unable to find the requested character in\n-         * this channel. 21: Player is blocking any party invitations. 22: Player\n-         * is taking care of another invitation. 23: Player denied request.\n-         * 25: Cannot kick another user in this map. 28/29: Leadership can only be\n-         * given to a party member in the vicinity. 30: Change leadership only on\n-         * same channel.\n+         * this channel. 25: Cannot kick another user in this map. 28/29: Leadership\n+         * can only be given to a party member in the vicinity. 30: Change leadership\n+         * only on same channel.\n          *\n          * @param message\n          * @return\n@@ -3800,7 +3799,8 @@ private static void writeLongMaskChair(final MaplePacketLittleEndianWriter mplew\n         }\n \n         /**\n-         * 23: 'Char' have denied request to the party.\n+         * 21: Player is blocking any party invitations, 22: Player is taking care of\n+         * another invitation, 23: Player have denied request to the party.\n          *\n          * @param message\n          * @param charname\n@@ -4372,23 +4372,41 @@ private static void writeIntMask(final MaplePacketLittleEndianWriter mplew, Map<\n         }\n \n         /**\n-         * 'Char' has denied your guild invitation.\n+         * Gets a Heracle/guild message packet.\n          *\n-         * @param charname\n-         * @return\n+         * Possible values for <code>code</code>:<br> 28: guild name already in use<br>\n+         * 31: problem in locating players during agreement<br> 33/40: already joined a guild<br>\n+         * 35: Cannot make guild<br> 36: problem in player agreement<br> 38: problem during forming guild<br> \n+         * 41: max number of players in joining guild<br> 42: character can't be found this channel<br> \n+         * 45/48: character not in guild<br> 52: problem in disbanding guild<br> 56: admin cannot make guild<br>\n+         * 57: problem in increasing guild size<br> \n+         * \n+         *\n+         * @param code The response code.\n+         * @return The guild message packet.\n          */\n-        public static byte[] denyGuildInvitation(String charname) {\n+        public static byte[] genericGuildMessage(byte code) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.GUILD_OPERATION.getValue());\n-                mplew.write(0x37);\n-                mplew.writeMapleAsciiString(charname);\n+                mplew.write(code);\n                 return mplew.getPacket();\n         }\n-\n-        public static byte[] genericGuildMessage(byte code) {\n+        \n+        /**\n+         * Gets a guild message packet appended with target name.\n+         * \n+         * 53: player not accepting guild invites<br>\n+         * 54: player already managing an invite<br> 55: player denied an invite<br> \n+         * \n+         * @param code The response code.\n+         * @param targetName The initial player target of the invitation.\n+         * @return The guild message packet.\n+         */\n+        public static byte[] responseGuildMessage(byte code, String targetName) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.GUILD_OPERATION.getValue());\n                 mplew.write(code);\n+                mplew.writeMapleAsciiString(targetName);\n                 return mplew.getPacket();\n         }\n \n@@ -4937,7 +4955,7 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n                 return mplew.getPacket();\n         }\n \n-        public static byte[] skillBookSuccess(MapleCharacter chr, int skillid, int maxlevel, boolean canuse, boolean success) {\n+        public static byte[] skillBookResult(MapleCharacter chr, int skillid, int maxlevel, boolean canuse, boolean success) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.SKILL_LEARN_ITEM_RESULT.getValue());\n                 mplew.writeInt(chr.getId());\n@@ -5378,7 +5396,7 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n                 mplew.writeInt(9030000); // Fredrick\n                 mplew.writeInt(32272); //id\n                 mplew.skip(5);\n-                mplew.writeInt(chr.getMerchantMeso());\n+                mplew.writeInt(chr.getMerchantNetMeso());\n                 mplew.write(0);\n                 try {\n                         List<Pair<Item, MapleInventoryType>> items = ItemFactory.MERCHANT.loadItems(chr.getId(), false);\n@@ -5578,7 +5596,8 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n                 }\n                 mplew.writeMapleAsciiString(hm.getOwner());\n                 if (hm.isOwner(chr)) {\n-                        mplew.writeInt(hm.getTimeLeft());\n+                        mplew.writeShort(0);\n+                        mplew.writeShort(hm.getTimeOpen());\n                         mplew.write(firstTime ? 1 : 0);\n                         List<MapleHiredMerchant.SoldItem> sold = hm.getSold();\n                         mplew.write(sold.size());\n@@ -6348,6 +6367,16 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n                 mplew.writeInt(1);\n                 return mplew.getPacket();\n         }\n+        \n+        public static byte[] showForeignInfo(int cid, String path) {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.SHOW_FOREIGN_EFFECT.getValue());\n+                mplew.writeInt(cid);\n+                mplew.write(0x17);\n+                mplew.writeMapleAsciiString(path);\n+                mplew.writeInt(1);\n+                return mplew.getPacket();\n+        }\n \n         /**\n          * Sends a UI utility. 0x01 - Equipment Inventory. 0x02 - Stat Window. 0x03\n@@ -6875,7 +6904,7 @@ private static void getGuildInfo(final MaplePacketLittleEndianWriter mplew, Mapl\n                 return mplew.getPacket();\n         }\n         \n-        public static byte[] sendAllianceInvitation(int allianceid, MapleCharacter chr) {\n+        public static byte[] allianceInvite(int allianceid, MapleCharacter chr) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.ALLIANCE_OPERATION.getValue());\n                 mplew.write(0x03);"}, {"sha": "3a6d750908e664e74eb904a9e7ea250a135c9c65", "filename": "src/tools/exceptions/EventInstanceInProgressException.java", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/tools/exceptions/EventInstanceInProgressException.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/tools/exceptions/EventInstanceInProgressException.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/exceptions/EventInstanceInProgressException.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -17,7 +17,7 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package scripting.event;\n+package tools.exceptions;\n \n \n /**", "previous_filename": "src/scripting/event/EventInstanceInProgressException.java"}, {"sha": "b7d1c7c90ada6da62dd299dda41c0e34c806e41c", "filename": "src/tools/packets/Fishing.java", "status": "added", "additions": 199, "deletions": 0, "changes": 199, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/src/tools/packets/Fishing.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/src/tools/packets/Fishing.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/packets/Fishing.java?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -0,0 +1,199 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.packets;\n+\n+import client.MapleCharacter;\n+import constants.GameConstants;\n+import constants.ItemConstants;\n+import constants.ServerConstants;\n+import server.MapleItemInformationProvider;\n+import tools.MaplePacketCreator;\n+\n+import java.util.Calendar;\n+\n+/** \n+ * \n+ * @author FateJiki (RaGeZONE)\n+ * @author Ronan - timing pattern\n+ */ \n+public class Fishing { \n+    \n+    private static double getFishingLikelihood(int x) {\n+        return 50.0 + 7.0 * (7.0 * Math.sin(x)) * (Math.cos(Math.pow(x, 0.777)));\n+    }\n+    \n+    public static double[] fetchFishingLikelihood() {\n+        Calendar calendar = Calendar.getInstance();\n+        int dayOfYear = calendar.get(Calendar.DAY_OF_YEAR);\n+        \n+        int hours = calendar.get(Calendar.HOUR);\n+        int minutes = calendar.get(Calendar.MINUTE);\n+        int seconds = calendar.get(Calendar.SECOND);\n+        \n+        double yearLikelihood = getFishingLikelihood(dayOfYear);\n+        double timeLikelihood = getFishingLikelihood(hours + minutes + seconds);\n+        \n+        return new double[]{yearLikelihood, timeLikelihood};\n+    }\n+    \n+    private static boolean hitFishingTime(MapleCharacter chr, int baitLevel, double yearLikelihood, double timeLikelihood) {\n+        double baitLikelihood = 0.0002 * chr.getWorldServer().getFishingRate() * baitLevel;   // can improve 10.0 at \"max level 50000\" on rate 1x\n+        \n+        if (ServerConstants.USE_DEBUG) {\n+            chr.dropMessage(5, \"----- FISHING RESULT -----\");\n+            chr.dropMessage(5, \"Likelihoods - Year: \" + yearLikelihood + \" Time: \" + timeLikelihood + \" Meso: \" + baitLikelihood);\n+            chr.dropMessage(5, \"Score rolls - Year: \" + (0.23 * yearLikelihood) + \" Time: \" + (0.77 * timeLikelihood) + \" Meso: \" + baitLikelihood);\n+        }\n+        \n+        return (0.23 * yearLikelihood) + (0.77 * timeLikelihood) + (baitLikelihood) > 57.777;\n+    }\n+    \n+    public static void doFishing(MapleCharacter chr, int baitLevel, double yearLikelihood, double timeLikelihood){\n+        // thanks Fadi, Vcoc for suggesting a custom fishing system\n+        \n+        if (!chr.isLoggedinWorld() || !chr.isAlive()) {\n+            return;\n+        }\n+        \n+        if (!GameConstants.isFishingArea(chr.getMapId())) {\n+            chr.dropMessage(\"You are not in a fishing area!\");\n+            return;\n+        }\n+        \n+        if (chr.getLevel() < 30) {\n+            chr.dropMessage(5, \"You must be above level 30 to fish!\");\n+            return;\n+        }\n+        \n+        String fishingEffect;\n+        if (!hitFishingTime(chr, baitLevel, yearLikelihood, timeLikelihood)) {\n+            fishingEffect = \"Effect/BasicEff.img/Catch/Fail\";\n+        } else {\n+            String rewardStr = \"\";\n+            fishingEffect = \"Effect/BasicEff.img/Catch/Success\";\n+            \n+            int rand = (int)(3.0 * Math.random()); \n+            switch(rand){ \n+                case 0:\n+                    int mesoAward = (int)(1400.0 * Math.random() + 1201) * chr.getMesoRate() + (15 * chr.getLevel() / 5);\n+                    chr.gainMeso(mesoAward, true, true, true);\n+                    \n+                    rewardStr = mesoAward + \" mesos.\";\n+                    break; \n+                case 1:\n+                    int expAward = (int)(645.0 * Math.random() + 620.0) * chr.getExpRate() + (15 * chr.getLevel() / 4); \n+                    chr.gainExp(expAward, true, true);\n+                    \n+                    rewardStr = expAward + \" EXP.\";\n+                    break; \n+                case 2:\n+                    int itemid = getRandomItem();\n+                    rewardStr = \"a(n) \" + MapleItemInformationProvider.getInstance().getName(itemid) + \".\";\n+                    \n+                    if (chr.canHold(itemid)) {\n+                        chr.getClient().getAbstractPlayerInteraction().gainItem(itemid, true);\n+                    } else {\n+                        chr.showHint(\"Couldn't catch a(n) #r\" + MapleItemInformationProvider.getInstance().getName(itemid) + \"#k due to #e#b\" + ItemConstants.getInventoryType(itemid) + \"#k#n inventory limit.\");\n+                        rewardStr += \".. but has goofed up due to full inventory.\";\n+                    }\n+                    break; \n+            } \n+            \n+            chr.getMap().dropMessage(6, chr.getName() + \" found \" + rewardStr);\n+        }\n+\n+        chr.announce(MaplePacketCreator.showInfo(fishingEffect));\n+        chr.getMap().broadcastMessage(chr, MaplePacketCreator.showForeignInfo(chr.getId(), fishingEffect), false);\n+    } \n+    \n+    public static int getRandomItem(){ \n+        int rand = (int)(100.0 * Math.random()); \n+        int[] commons = {1002851, 2002020, 2002020, 2000006, 2000018, 2002018, 2002024, 2002027, 2002027, 2000018, 2000018, 2000018 , 2000018, 2002030, 2002018, 2000016}; // filler' up \n+        int[] uncommons = {1000025, 1002662, 1002812, 1002850, 1002881, 1002880, 1012072, 4020009, 2043220, 2043022, 2040543, 2044420, 2040943, 2043713, 2044220, 2044120, 2040429, 2043220, 2040943}; // filler' uptoo \n+        int[] rares = {1002859, 1002553, 01002762, 01002763, 01002764, 01002765, 01002766, 01002663, 1002788, 1002949, 2049100, 2340000, 2040822,2040822,2040822,2040822,2040822,2040822,2040822,2040822}; // filler' uplast \n+        \n+        if(rand >= 25){ \n+            return commons[(int)(commons.length * Math.random())]; \n+        } else if(rand <= 7 && rand >= 4){ \n+            return uncommons[(int)(uncommons.length * Math.random())]; \n+        } else { \n+            return rares[(int)(rares.length * Math.random())]; \n+        }\n+    }\n+    \n+    private static void debugFishingLikelihood() {\n+        long a[] = new long[365], b[] = new long[365];\n+        long hits = 0, hits10 = 0, total = 0;\n+        \n+        for (int i = 0; i < 365; i++) {\n+            double yearLikelihood = getFishingLikelihood(i);\n+            \n+            int dayHits = 0, dayHits10 = 0;\n+            for (int k = 0; k < 24; k++) {\n+                for (int l = 0; l < 60; l++) {\n+                    for (int m = 0; m < 60; m++) {\n+                        double timeLikelihood = getFishingLikelihood(k + l + m);\n+                        \n+                        if ((0.23 * yearLikelihood) + (0.77 * timeLikelihood) > 57.777) {\n+                            hits++;\n+                            dayHits++;\n+                        }\n+                        \n+                        if ((0.23 * yearLikelihood) + (0.77 * timeLikelihood) + 10.0 > 57.777) {\n+                            hits10++;\n+                            dayHits10++;\n+                        }\n+                        \n+                        total++;\n+                    }\n+                }\n+            }\n+            \n+            a[i] = dayHits;\n+            b[i] = dayHits10;\n+        }\n+        \n+        long maxhit = 0, minhit = Long.MAX_VALUE;\n+        for (int i = 0; i < 365; i++) {\n+            if (maxhit < a[i]) {\n+                maxhit = a[i];\n+            }\n+            \n+            if (minhit > a[i]) {\n+                minhit = a[i];\n+            }\n+        }\n+        \n+        long maxhit10 = 0, minhit10 = Long.MAX_VALUE;\n+        for (int i = 0; i < 365; i++) {\n+            if (maxhit10 < b[i]) {\n+                maxhit10 = b[i];\n+            }\n+            \n+            if (minhit10 > b[i]) {\n+                minhit10 = b[i];\n+            }\n+        }\n+        \n+        System.out.println(\"Diary   min \" + minhit + \" max \" + maxhit);\n+        System.out.println(\"Diary10 min \" + minhit10 + \" max \" + maxhit10);\n+        System.out.println(\"Hits: \" + hits + \"Hits10: \" + hits10 + \" Total: \" + total + \"   --  %1000: \" + (hits * 1000 / total) + \", +10 %1000: \" + (hits10 * 1000 / total));\n+    }\n+} "}, {"sha": "5e0137afbd0748f6e628ebbfeec3d1dc004e706b", "filename": "wz/Effect.wz/BasicEff.img.xml", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/wz/Effect.wz/BasicEff.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/wz/Effect.wz/BasicEff.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/Effect.wz/BasicEff.img.xml?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -247,9 +247,28 @@\n         <int name=\"delay\" value=\"60\"/>\n       </canvas>\n     </imgdir>\n-    <canvas name=\"Fail\" width=\"98\" height=\"38\">\n-      <vector name=\"origin\" x=\"49\" y=\"37\"/>\n-    </canvas>\n+    <imgdir name=\"Fail\">\n+      <canvas name=\"0\" width=\"33\" height=\"104\">\n+        <vector name=\"origin\" x=\"21\" y=\"106\"/>\n+        <int name=\"delay\" value=\"60\"/>\n+      </canvas>\n+      <canvas name=\"1\" width=\"35\" height=\"95\">\n+        <vector name=\"origin\" x=\"22\" y=\"107\"/>\n+        <int name=\"delay\" value=\"60\"/>\n+      </canvas>\n+      <canvas name=\"2\" width=\"37\" height=\"99\">\n+        <vector name=\"origin\" x=\"23\" y=\"107\"/>\n+        <int name=\"delay\" value=\"60\"/>\n+      </canvas>\n+      <canvas name=\"3\" width=\"35\" height=\"106\">\n+        <vector name=\"origin\" x=\"22\" y=\"107\"/>\n+        <int name=\"delay\" value=\"60\"/>\n+      </canvas>\n+      <canvas name=\"4\" width=\"33\" height=\"106\">\n+        <vector name=\"origin\" x=\"21\" y=\"106\"/>\n+        <int name=\"delay\" value=\"60\"/>\n+      </canvas>\n+    </imgdir>\n   </imgdir>\n   <imgdir name=\"Combo\">\n     <imgdir name=\"0\">"}, {"sha": "b257813231b351b0335e63c52deb1cee6cfac525", "filename": "wz/Quest.wz/Act.img.xml", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/wz/Quest.wz/Act.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/wz/Quest.wz/Act.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/Quest.wz/Act.img.xml?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -15075,6 +15075,10 @@\n           <int name=\"id\" value=\"4032496\"/>\n           <int name=\"count\" value=\"1\"/>\n         </imgdir>\n+        <imgdir name=\"2\">\n+          <int name=\"id\" value=\"4032491\"/>\n+          <int name=\"count\" value=\"-1\"/>\n+        </imgdir>\n       </imgdir>\n     </imgdir>\n   </imgdir>\n@@ -15288,6 +15292,10 @@\n           <int name=\"id\" value=\"4032496\"/>\n           <int name=\"count\" value=\"1\"/>\n         </imgdir>\n+        <imgdir name=\"2\">\n+          <int name=\"id\" value=\"4032495\"/>\n+          <int name=\"count\" value=\"-1\"/>\n+        </imgdir>\n       </imgdir>\n     </imgdir>\n   </imgdir>\n@@ -15501,6 +15509,12 @@\n   </imgdir>\n   <imgdir name=\"28219\">\n     <imgdir name=\"0\">\n+      <imgdir name=\"item\">\n+        <imgdir name=\"0\">\n+          <int name=\"id\" value=\"4032493\"/>\n+          <int name=\"count\" value=\"1\"/>\n+        </imgdir>\n+      </imgdir>\n     </imgdir>\n     <imgdir name=\"1\">\n       <int name=\"exp\" value=\"5000\"/>\n@@ -15513,6 +15527,10 @@\n           <int name=\"id\" value=\"4032496\"/>\n           <int name=\"count\" value=\"1\"/>\n         </imgdir>\n+        <imgdir name=\"2\">\n+          <int name=\"id\" value=\"4032493\"/>\n+          <int name=\"count\" value=\"-1\"/>\n+        </imgdir>\n       </imgdir>\n     </imgdir>\n   </imgdir>\n@@ -15736,6 +15754,12 @@\n   </imgdir>\n   <imgdir name=\"28238\">\n     <imgdir name=\"0\">\n+      <imgdir name=\"item\">\n+        <imgdir name=\"0\">\n+          <int name=\"id\" value=\"4032492\"/>\n+          <int name=\"count\" value=\"1\"/>\n+        </imgdir>\n+      </imgdir>\n     </imgdir>\n     <imgdir name=\"1\">\n       <int name=\"exp\" value=\"5000\"/>\n@@ -15748,6 +15772,10 @@\n           <int name=\"id\" value=\"4032496\"/>\n           <int name=\"count\" value=\"1\"/>\n         </imgdir>\n+        <imgdir name=\"2\">\n+          <int name=\"item\" value=\"4032492\"/>\n+          <int name=\"count\" value=\"-1\"/>\n+        </imgdir>\n       </imgdir>\n     </imgdir>\n   </imgdir>\n@@ -15934,10 +15962,22 @@\n     </imgdir>\n     <imgdir name=\"1\">\n       <int name=\"exp\" value=\"700\"/>\n+      <imgdir name=\"item\">\n+        <imgdir name=\"0\">\n+          <int name=\"id\" value=\"4032494\"/>\n+          <int name=\"count\" value=\"-1\"/>\n+        </imgdir>\n+      </imgdir>\n     </imgdir>\n   </imgdir>\n   <imgdir name=\"28256\">\n     <imgdir name=\"0\">\n+      <imgdir name=\"item\">\n+        <imgdir name=\"0\">\n+          <int name=\"id\" value=\"4032494\"/>\n+          <int name=\"count\" value=\"1\"/>\n+        </imgdir>\n+      </imgdir>\n     </imgdir>\n     <imgdir name=\"1\">\n       <int name=\"exp\" value=\"5000\"/>\n@@ -15950,6 +15990,10 @@\n           <int name=\"id\" value=\"4032496\"/>\n           <int name=\"count\" value=\"1\"/>\n         </imgdir>\n+        <imgdir name=\"2\">\n+          <int name=\"id\" value=\"4032494\"/>\n+          <int name=\"count\" value=\"-1\"/>\n+        </imgdir>\n       </imgdir>\n     </imgdir>\n   </imgdir>"}, {"sha": "30c363625a67cafafab7d5858153b7e5a7d3e60f", "filename": "wz/Quest.wz/Check.img.xml", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/9538c415e1c70eee5da68289d82e12e6abd8a856/wz/Quest.wz/Check.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/9538c415e1c70eee5da68289d82e12e6abd8a856/wz/Quest.wz/Check.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/Quest.wz/Check.img.xml?ref=9538c415e1c70eee5da68289d82e12e6abd8a856", "patch": "@@ -29056,6 +29056,12 @@\n           <int name=\"count\" value=\"1\"/>\n         </imgdir>\n       </imgdir>\n+      <imgdir name=\"item\">\n+        <imgdir name=\"0\">\n+          <int name=\"id\" value=\"4032491\"/>\n+          <int name=\"count\" value=\"1\"/>\n+        </imgdir>\n+      </imgdir>\n     </imgdir>\n   </imgdir>\n   <imgdir name=\"28180\">\n@@ -29715,6 +29721,12 @@\n           <int name=\"count\" value=\"1\"/>\n         </imgdir>\n       </imgdir>\n+      <imgdir name=\"item\">\n+        <imgdir name=\"0\">\n+          <int name=\"id\" value=\"4032495\"/>\n+          <int name=\"count\" value=\"1\"/>\n+        </imgdir>\n+      </imgdir>\n     </imgdir>\n     <imgdir name=\"0\">\n       <int name=\"npc\" value=\"1032001\"/>\n@@ -30367,6 +30379,12 @@\n           <int name=\"count\" value=\"1\"/>\n         </imgdir>\n       </imgdir>\n+      <imgdir name=\"item\">\n+        <imgdir name=\"0\">\n+          <int name=\"id\" value=\"4032493\"/>\n+          <int name=\"count\" value=\"1\"/>\n+        </imgdir>\n+      </imgdir>\n     </imgdir>\n     <imgdir name=\"0\">\n       <int name=\"npc\" value=\"1052001\"/>\n@@ -30968,6 +30986,12 @@\n           <int name=\"count\" value=\"1\"/>\n         </imgdir>\n       </imgdir>\n+      <imgdir name=\"item\">\n+        <imgdir name=\"0\">\n+          <int name=\"id\" value=\"4032492\"/>\n+          <int name=\"count\" value=\"1\"/>\n+        </imgdir>\n+      </imgdir>\n     </imgdir>\n     <imgdir name=\"0\">\n       <int name=\"npc\" value=\"1012100\"/>\n@@ -31542,6 +31566,12 @@\n           <int name=\"count\" value=\"1\"/>\n         </imgdir>\n       </imgdir>\n+      <imgdir name=\"item\">\n+        <imgdir name=\"0\">\n+          <int name=\"id\" value=\"4032494\"/>\n+          <int name=\"count\" value=\"1\"/>\n+        </imgdir>\n+      </imgdir>\n     </imgdir>\n     <imgdir name=\"0\">\n       <int name=\"npc\" value=\"1090000\"/>"}]}]},
