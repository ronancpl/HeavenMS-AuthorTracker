{"fetchDate": "2019-12-19", "content": [{"sha": "64af2cfa00fab7a72a6078edceb15f2987d72dd0", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6NjRhZjJjZmEwMGZhYjdhNzJhNjA3OGVkY2ViMTVmMjk4N2Q3MmRkMA==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-11-01T15:34:26Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-11-01T15:34:26Z"}, "message": "Updated Meso & Arrow drops + Aran change jobs fix + improved concurrency\n\nAdded meso drop data for many mobs that were missing mesos.\nEnhanced arrow drop data, now dropping bundles instead of unitary items.\nFixed issues with several Aran change jobs crashing the player shortly after changing jobs.\nImproved concurrency in MapleGuild, MapleAlliance and MaplePlayerShop.\nNew tools: MapleArrowFetcher and MapleMesoFetcher, that were used to compile the updated drop data info.", "tree": {"sha": "ecf697939b5f2d10413c4189d4811ecce8515b5a", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/ecf697939b5f2d10413c4189d4811ecce8515b5a"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/64af2cfa00fab7a72a6078edceb15f2987d72dd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/64af2cfa00fab7a72a6078edceb15f2987d72dd0", "html_url": "https://github.com/ronancpl/HeavenMS/commit/64af2cfa00fab7a72a6078edceb15f2987d72dd0", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/64af2cfa00fab7a72a6078edceb15f2987d72dd0/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44949aea37d1c3b482790ef5a50922a2ceb6555e", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/44949aea37d1c3b482790ef5a50922a2ceb6555e", "html_url": "https://github.com/ronancpl/HeavenMS/commit/44949aea37d1c3b482790ef5a50922a2ceb6555e"}], "stats": {"total": 45064, "additions": 44793, "deletions": 271}, "files": [{"sha": "98066efaee3d2951c1d3fa803bb020ab74927470", "filename": "build/built-jar.properties", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/built-jar.properties", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/built-jar.properties", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/built-jar.properties?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -1,4 +1,4 @@\n-#Sat, 28 Oct 2017 23:16:56 -0200\n+#Tue, 31 Oct 2017 11:20:58 -0200\n \n \n C\\:\\\\Nexon\\\\MapleSolaxia\\\\MapleSolaxiaV2="}, {"sha": "87398f4d8025822adf655bafc3517f3a3a7bd643", "filename": "build/classes/client/MapleCharacter$1.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$1.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$1.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$1.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "eff6f78768b512c9a2fddfb7b92d80e61d436b00", "filename": "build/classes/client/MapleCharacter$10.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$10.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$10.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$10.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "e0a2a33c7a1ce0c3258d13305e2316b1e57f8afa", "filename": "build/classes/client/MapleCharacter$11.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$11.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$11.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$11.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "50664fb8c91b2e5c9215658729a20619c79ec940", "filename": "build/classes/client/MapleCharacter$12.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$12.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$12.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$12.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "f77c87cfc3fbbd7e1ea8ac0519b2738327d0aea4", "filename": "build/classes/client/MapleCharacter$13.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$13.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$13.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$13.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "30e938084465a70e1c392fd5da718134ad609b9a", "filename": "build/classes/client/MapleCharacter$14.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$14.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$14.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$14.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "aa84d348efea1efcab9be7818d35f6237b8b935b", "filename": "build/classes/client/MapleCharacter$15.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$15.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$15.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$15.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "f663b38dd90b1bae41532f0e36bf9009b9777b6c", "filename": "build/classes/client/MapleCharacter$16.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$16.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$16.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$16.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "1cc80b6723915a2fd51618aec0c1f328432fcdbe", "filename": "build/classes/client/MapleCharacter$17.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$17.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$17.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$17.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "7270f391d5f936ba2a5079f9eb53c04e03c5b1c1", "filename": "build/classes/client/MapleCharacter$18.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$18.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$18.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$18.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "c5d622de8d0080264484a47e0e5382fd6ec6d5c6", "filename": "build/classes/client/MapleCharacter$19.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$19.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$19.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$19.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "1f87caa233203b8689566f13d84f16d17231f30d", "filename": "build/classes/client/MapleCharacter$2.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$2.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$2.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$2.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "020c0f7762514a35cebecb68509c5e086c8a5ad1", "filename": "build/classes/client/MapleCharacter$3.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$3.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$3.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$3.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "d559e93775800cb0357b1333e47920d35f79ac02", "filename": "build/classes/client/MapleCharacter$4.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$4.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$4.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$4.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "20d1f4b110cd49e33abafd19630e5e2f2d7733c3", "filename": "build/classes/client/MapleCharacter$5.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$5.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$5.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$5.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "636bd005639120f0007aaf720c904f2eb0ac4e55", "filename": "build/classes/client/MapleCharacter$6.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$6.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$6.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$6.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "303f3ecd4576714b5b454c2c7de8c2943d4ceb47", "filename": "build/classes/client/MapleCharacter$7.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$7.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$7.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$7.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "2b3a7ebf0da93d9f1a0b8ec5ce4bff8a654fe055", "filename": "build/classes/client/MapleCharacter$8.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$8.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$8.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$8.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "b47a0da589886fa3ee345e61963945d0bd52418b", "filename": "build/classes/client/MapleCharacter$9.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$9.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$9.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$9.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "2180fcb4c549f0b385adddf28d22c3459601000b", "filename": "build/classes/client/MapleCharacter$FameStatus.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$FameStatus.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$FameStatus.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$FameStatus.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "b9fca1d6f848aed70a398d6a74a6e76379ab1ea0", "filename": "build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "4ff5af6d3157dfd6c173703f33aceea3403cdb13", "filename": "build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "e15774c7ecc17b48b75287a1bf01eb584ee964b4", "filename": "build/classes/client/MapleCharacter$SkillEntry.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$SkillEntry.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter$SkillEntry.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$SkillEntry.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "11ac99aead827424dc56f741894ef2e74ad4fffa", "filename": "build/classes/client/MapleCharacter.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/MapleCharacter.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "26c329a4f60cb24fa007c9fd25527eae59dc130a", "filename": "build/classes/client/command/Commands.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/command/Commands.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/command/Commands.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/command/Commands.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "a53437ccad4f1d3ace6ac74a34b1d567106013c5", "filename": "build/classes/client/inventory/MaplePet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/inventory/MaplePet.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/client/inventory/MaplePet.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/inventory/MaplePet.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "4df2e188be3500a72f53bed4c55458ec555969f7", "filename": "build/classes/net/server/guild/MapleAlliance.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/net/server/guild/MapleAlliance.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/net/server/guild/MapleAlliance.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/guild/MapleAlliance.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "9ecd9503855082884a53f752b3cbb126cd2bda71", "filename": "build/classes/net/server/guild/MapleGuild$BCOp.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/net/server/guild/MapleGuild$BCOp.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/net/server/guild/MapleGuild$BCOp.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/guild/MapleGuild$BCOp.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "48cad75b36344e700c72bc0054e24584c33e097a", "filename": "build/classes/net/server/guild/MapleGuild.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/net/server/guild/MapleGuild.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/net/server/guild/MapleGuild.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/guild/MapleGuild.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "d9f2584b502f1342cd882700c7e53f2190ac8fd1", "filename": "build/classes/server/MaplePlayerShop.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/server/MaplePlayerShop.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/build/classes/server/MaplePlayerShop.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/MaplePlayerShop.class?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "6a909156ad5af6eadb7a0797d64426532bcacdb6", "filename": "dist/MapleSolaxia.jar", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/dist/MapleSolaxia.jar", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/dist/MapleSolaxia.jar", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/dist/MapleSolaxia.jar?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "2a68a933f138603b9fe97aabfb0ceff465fed584", "filename": "docs/feature_list.txt", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/feature_list.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/feature_list.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/feature_list.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -45,43 +45,47 @@ Cash & Items:\n * New scroll: antibanish. For use only in cases where bosses send a player back to town.\n * Inventory system properly checks for item slot free space and ownership.\n * Storage with \"Arrange Items\" feature functional.\n+* Vega's spell.\n+* Owl of Minerva.\n+* Pet item ignore.\n+\n+Monsters & Maps:\n+* Every monsterbook card is now droppable by overworld mobs.\n+* Added meso drop data for basically every missing overworld mob.\n+* Monsterbook displays drop data info conformant with the underlying DB (needs custom wz). See more on the MobBookUpdate feature.\n+* Every skill/mastery book is now droppable by mobs.\n+* Added Boss HP Bar for dozens of bosses (needs provided custom wz).\n+* If multiple bosses are on the same area, client will prioritize Boss HP bar of the target of the player.\n+* Boats, elevator and other travelling mechanics fully working.\n \n PQ potentials:\n * Lobby system - Multiple PQ instances on same channel.\n * Expedition system - Multiples parties can attempt on a same instance (lobbies and expeds are mutually-exclusive).\n * Guild queue system - Guilds can register themselves on a queue for the GPQ.\n * EIM Pool system - After the first instance setup, next event instances are loaded beforehand and set on a pooling queue, optimizing future loadouts.\n \n-Server potentials:\n-* Multi-worlds 100%.\n+Player potentials:\n * Adventurer Mount quests 100%.\n * All Equipment levels up.\n * Player level rates.\n * Gain fame by quests.\n-* Every monsterbook card is now droppable by overworld mobs.\n-* Monsterbook displays drop data info conformant with the underlying DB (needs custom wz). See more on the MobBookUpdate feature.\n-* Mastery book announcer displays droppers of needed books of a player, by reading underlying DB.\n-* Every skill/mastery book is now droppable by mobs.\n+\n+Server potentials:\n+* Multi-worlds 100%.\n * Inventory auto-gather and auto-sorting feature.\n * Enhanced auto-pot system: pet uses as many potions as necessary to reach the desired threshold.\n * Enhanced buff system: smartly checks for the best available buff effects to be active on the player.\n * Enhanced AP auto-assigner: exactly matches AP with the needed for the player's current level, surplus assigned to the primary attribute.\n-* Added Boss HP Bar for dozens of bosses (needs provided custom wz).\n-* If multiple bosses are on the same area, client will prioritize Boss HP bar of the target of the player.\n+* Mastery book announcer displays droppers of needed books of a player, by reading underlying DB.\n * Custom jail system (needs provided custom wz).\n * Delete Character 100% (requires ENABLE_PIC activated).\n-* Boats, elevator and other travelling mechanics fully working.\n-* Enabled Hired Merchant being able to be used anywhere but FM Entrance and other few places.\n-* Vega's spell.\n-* Owl of Minerva.\n-* Pet item ignore.\n * Autosaver (periodically saves on DB current state of every player in-game).\n-* Fixed and randomized versions of HP/MP growth rate, regarding player job. Placeholder for HP/MP washing feature.\n+* Both fixed and randomized versions of HP/MP growth rate abailable, regarding player job (enable one at ServerConstants). Placeholder for HP/MP washing feature.\n \n Admin/GM commands:\n * Server commands layered by GM levels.\n-* New commands.\n * Spawn Zakum/Horntail/Pinkbean 100%.\n+* New commands.\n \n Project:\n * Organized project code."}, {"sha": "d83cdad8fc375eb186e4bd20407848b1b6fa35d8", "filename": "docs/mcpq/blob/2042002.js", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/2042002.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/2042002.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/blob/2042002.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "previous_filename": "docs/mcpq/2042002.js"}, {"sha": "48b733b64851368d0a72db44563e3524803251d6", "filename": "docs/mcpq/blob/MCBattlefield.java", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCBattlefield.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCBattlefield.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/blob/MCBattlefield.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "previous_filename": "docs/mcpq/MCBattlefield.java"}, {"sha": "ad2ba9aa37758451e043e57cfd4cc541fbfd9585", "filename": "docs/mcpq/blob/MCField.java", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCField.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCField.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/blob/MCField.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "previous_filename": "docs/mcpq/MCField.java"}, {"sha": "d53f1ab4858ee1ddee88f62b3dcdcb828d5b246e", "filename": "docs/mcpq/blob/MCGuardian.java", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCGuardian.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCGuardian.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/blob/MCGuardian.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "previous_filename": "docs/mcpq/MCGuardian.java"}, {"sha": "77960735509e34d100a434a367b12cb8cd4ee172", "filename": "docs/mcpq/blob/MCParty.java", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCParty.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCParty.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/blob/MCParty.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "previous_filename": "docs/mcpq/MCParty.java"}, {"sha": "43b6c7bb6fb5f8b9cb4f9bb251cba7e93f611915", "filename": "docs/mcpq/blob/MCSkill.java", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCSkill.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCSkill.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/blob/MCSkill.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "previous_filename": "docs/mcpq/MCSkill.java"}, {"sha": "9f6a314008624d50262786fca38dc7706fa3aba5", "filename": "docs/mcpq/blob/MCSkillFactory.java", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCSkillFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCSkillFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/blob/MCSkillFactory.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "previous_filename": "docs/mcpq/MCSkillFactory.java"}, {"sha": "6d8e4912bdb96ff32eacb6655136fa7dcc2670f5", "filename": "docs/mcpq/blob/MCTracker.java", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCTracker.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCTracker.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/blob/MCTracker.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "previous_filename": "docs/mcpq/MCTracker.java"}, {"sha": "8835e75619ad1f661e287017ff89ad76700c1f1b", "filename": "docs/mcpq/blob/MCWZData.java", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCWZData.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MCWZData.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/blob/MCWZData.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "previous_filename": "docs/mcpq/MCWZData.java"}, {"sha": "208790d1bf07e993f961a6181220d44058187aad", "filename": "docs/mcpq/blob/MonsterCarnival.java", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MonsterCarnival.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/blob/MonsterCarnival.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/blob/MonsterCarnival.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "previous_filename": "docs/mcpq/MonsterCarnival.java"}, {"sha": "8b5fcb5a4e70ac7fed1e1f29dceb64d344d2fd03", "filename": "docs/mcpq/readme.txt", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/readme.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/readme.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/readme.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -1 +1,3 @@\n-Extra classes for Monster Carnival. Can possibly be used for implementing MCPQ.\n\\ No newline at end of file\n+Blob contains extra classes for Monster Carnival. Can possibly be used for implementing MCPQ.\n+\n+Scripts and Src contains the code changed on OdinMS to have CPQ working.\n\\ No newline at end of file"}, {"sha": "a081c3f01d96d0fd4484957513544fc4c8677ac3", "filename": "docs/mcpq/scripts/npc/2042000.js", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/npc/2042000.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/npc/2042000.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/scripts/npc/2042000.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,82 @@\n+/**  *  [MENTION=19862]id[/MENTION] 2042000\n+ *    [MENTION=806871]NPC[/MENTION] Spiegelmann\n+ *    [MENTION=836108]Function[/MENTION] Monster Carnival Lobby NPC\n+ * @author s4nta\n+ */\n+\n+// Relevant Monster Carnival classes\n+var MonsterCarnival = net.sf.odinms.server.partyquest.mcpq.MonsterCarnival;\n+var MCTracker = net.sf.odinms.server.partyquest.mcpq.MCTracker;\n+var MCParty = net.sf.odinms.server.partyquest.mcpq.MCParty;\n+var MCField = net.sf.odinms.server.partyquest.mcpq.MCField;\n+var MCTeam = net.sf.odinms.server.partyquest.mcpq.MCField.MCTeam;\n+\n+// NPC variables\n+var status = -1;\n+var carnival, field;\n+var room = -1;\n+\n+function start() {\n+    if (cm.getMapId() != 980000000) {\n+        MCTracker.log(\"Spiegelmann called on invalid map \" + cm.getMapId() + \" by player \" + cm.getName());\n+        cm.sendOk(\"You are not authorized to do this.\");\n+        cm.dispose();\n+        return;\n+    }\n+    action(1, 0, 0);\n+}\n+\n+function action(mode, type, selection) {\n+    if (mode == -1) {\n+        cm.dispose();\n+        return;\n+    }\n+    if (mode == 1) status++;\n+    else status--;\n+\n+    if (status == 0) {\n+        if (cm.getParty() == null) {\n+            cm.sendOk(\"You are not in a party.\");\n+            cm.dispose();\n+            return;\n+        } else if (!cm.isLeader()) {\n+            cm.sendOk(\"If you want to try Carnival PQ, please tell the #bleader of your party#k to talk to me.\");\n+            cm.dispose();\n+            return;\n+        }\n+        carnival = MonsterCarnival.getMonsterCarnival(cm.getChannel());\n+        cm.sendSimple(carnival.getNPCAvailableFields());\n+    } else if (status == 1) {\n+        room = selection;\n+        if (room < 1 || room > 6) {\n+            cm.sendOk(\"That is not a valid room.\");\n+            cm.dispose();\n+            return;\n+        }\n+        var code = carnival.registerStatus(cm.getParty(), selection);\n+        if (code == MonsterCarnival.STATUS_FIELD_FULL) {\n+            cm.sendOk(\"This room is currently full.\")\n+        } else if (code == MonsterCarnival.STATUS_PARTY_SIZE) {\n+            cm.sendOk(\"Your party is not the right size for this field.\");\n+        } else if (code == MonsterCarnival.STATUS_PARTY_LEVEL) {\n+            cm.sendOk(\"Please check to see that the members in your party are between level 30 and 50.\");\n+        } else if (code == MonsterCarnival.STATUS_PARTY_MISSING) {\n+            cm.sendOk(\"Please make sure everyone in your party is in this lobby.\");\n+        } else if (code == MonsterCarnival.STATUS_FIELD_INVALID) {\n+            cm.sendOk(\"Unauthorized request.\");\n+        }\n+\n+        if (code == MonsterCarnival.STATUS_PROCEED) {\n+            field = carnival.getField(room);\n+            party = carnival.createParty(cm.getParty());\n+            field.register(party, MCTeam.RED);\n+            cm.sendOk(\"You will have 3 minutes to accept challenges from other parties.\");\n+        } else if (code == MonsterCarnival.STATUS_REQUEST) {\n+            cm.sendOk(\"Sending request to room \" + room + \". You will be automatically warped in if they accept your challenge.\");\n+            field = carnival.getField(room);\n+            party = carnival.createParty(cm.getParty());\n+            field.request(party);\n+        }\n+        cm.dispose();\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "c8ec9d2d588a0c2e0e7700273c6a3304368dace8", "filename": "docs/mcpq/scripts/npc/2042002.js", "status": "added", "additions": 326, "deletions": 0, "changes": 326, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/npc/2042002.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/npc/2042002.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/scripts/npc/2042002.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,326 @@\n+/** * [MENTION=19862]id[/MENTION] 2042002\n+ *  [MENTION=806871]NPC[/MENTION] Spiegelmann\n+ *  [MENTION=836108]Function[/MENTION] Monster Carnival NPC\n+ * @author s4nta\n+ *  [MENTION=497496]cred[/MENTION]its xirengfx (for store code, CPQ description)\n+ */\n+var DISABLED = false;\n+\n+var SavedLocationType = Packages.net.sf.odinms.server.maps.SavedLocationType;\n+\n+// Relevant Monster Carnival classes\n+var MonsterCarnival = Packages.net.sf.odinms.server.partyquest.mcpq.MonsterCarnival;\n+var MCTracker = Packages.net.sf.odinms.server.partyquest.mcpq.MCTracker;\n+var MCParty = Packages.net.sf.odinms.server.partyquest.mcpq.MCParty;\n+var MCField = Packages.net.sf.odinms.server.partyquest.mcpq.MCField;\n+\n+// NPC variables\n+var status = -1;\n+var store = false;\n+var ctx = -1; //context\n+var storeInfo;\n+var purchaseId;\n+var purchaseCost;\n+\n+// Reference\n+var coinId = 4001129;\n+var coinIcon = \"#i\" + coinId + \"#\";\n+var infoMaps = [220000000, 200000000, 103000000, 540000000]; // ludi, orbis, kerning, singapore\n+var gradeS = 600\n+var gradeA = 500\n+var gradeB = 400\n+var gradeC = 300\n+var gradeD = 200\n+var gradeE = 100\n+\n+var expRewards = [[150000, 100000], // S Winner/Loser\n+                  [100000, 70000], // A Winner/Loser\n+                  [75000, 43250], // B Winner/Loser\n+                  [50000, 25000], // C Winner/Loser\n+                  [25000, 12500], // D Winner/Loser\n+                  [12500, 6250],  // E Winner/Loser\n+                  [5000, 2500]    // F Winner/Loser\n+                  ];\n+\n+// Exchange stores\n+var warrior = [[1302004, 7], [1402006, 7], [1302009, 10], [1402007, 10],\n+               [1302010, 20], [1402003, 20], [1312006, 7], [1412004, 7],\n+               [1312007, 10], [1412005, 10], [1312018, 20], [1412003, 20],\n+               [1322015, 7], [1422008, 7], [1322016, 10], [1422007, 10],\n+               [1322017, 20], [1422005, 20], [1432003, 7], [1442003, 7],\n+               [1432005, 10], [1442009, 10], [1442005, 20], [1432004, 20]];\n+\n+var magician = [[1372001, 7], [1382018, 7], [1372012, 10], [1382019, 10],\n+                [1382001, 20], [1372007, 20]];\n+\n+var archer = [[1452006, 7], [1452007, 10], [1452008, 20], [1462005, 7],\n+              [1462006, 10], [1462007, 20]];\n+\n+var thief = [[1472013, 7], [1472017, 10], [1472021, 20], [1332014, 7],\n+             [1332011, 10], [1332031, 10], [1332016, 20], [1332034, 20]];\n+\n+var pirate = [[1482005, 7], [1482006, 10], [1482007, 20], [1492005, 7],\n+              [1492006, 10], [1492007, 20]];\n+\n+var necklace = [[1122007, 50], [2041211, 40]];\n+\n+// Long Text Descriptions\n+var infoText = \"You wish to know about the Monster Carnival? Very well. The Monster Carnival is a place of trilling battles and exciting competiton against people just as strong and motivated as yourself. You must summon monsters and defeat the monsters summoned by the opposing party. That's the essence of the Monster Carnival. Once you enter the Carnival Field, the task is to earn CP by hunter monsters from the opposing party and use those CP's to distract the opposing party from hunting monsters. There are three ways to distract the other party; Summon a Monster, Skill or Protector. Please remember this though, it's never a good idea to save up CP just for the sake of it. The CP's you've used will also help determine the winner and the loser of the carnival.\";\n+var no = \"You do not have enough Maple Coins for this item. Come back to me when you acquire more!\";\n+\n+function getGrade(cp) {\n+    // Returns index of corresponding expRewards pair.\n+    if (cp >= gradeS) {\n+        return 0;\n+    } else if (cp >= gradeA) {\n+        return 1;\n+    } else if (cp >= gradeB) {\n+        return 2;\n+    } else if (cp >= gradeC) {\n+        return 3;\n+    } else if (cp >= gradeD) {\n+        return 4;\n+    } else if (cp >= gradeE) {\n+        return 5;\n+    } else {\n+        return 6;\n+    }\n+}\n+\n+function isTownMap(map) {\n+    for (var i = 0; i < infoMaps.length; i++) {\n+        if (infoMaps[i] == map) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+function isExitMap(map) {\n+    return map == 980000010;\n+}\n+\n+function isWinnerMap(map) {\n+    return (map >= 980000000 && map <= 980000700 && map % 10 == 3);\n+}\n+\n+function isLoserMap(map) {\n+    return (map >= 980000000 && map <= 980000700 && map % 10 == 4);\n+}\n+\n+var CONTEXT_NONE = -1;\n+var CONTEXT_TOWN = 0;\n+var CONTEXT_EXIT = 1;\n+var CONTEXT_WIN  = 2;\n+var CONTEXT_LOSE = 3;\n+\n+function start() {  \n+    if (DISABLED) {\n+        cm.sendOk(\"CPQ is temporarily unavailable.\");\n+        cm.dispose();\n+        return;\n+    }\n+    m = cm.getMapId();\n+    if (isTownMap(m)) {\n+        ctx = CONTEXT_TOWN;\n+    } else if (isExitMap(m)) {\n+        ctx = CONTEXT_EXIT;\n+    } else if (isWinnerMap(m)) {\n+        ctx = CONTEXT_WIN;\n+    } else if (isLoserMap(m)) {\n+        ctx = CONTEXT_LOSE;\n+    } else {\n+        ctx = CONTEXT_NONE;\n+    }\n+\n+    action(1, 0, 0);\n+}\n+\n+function doLoserMap(mode, type, selection) {\n+    if (cm.getPlayer().getMCPQParty() == null) {\n+        cm.warp(MonsterCarnival.MAP_LOBBY);\n+        cm.dispose();\n+        return;\n+    }\n+\n+    if (mode == -1) {\n+        cm.dispose();\n+    } else {\n+        if (mode == 1) status++;\n+        else status--;\n+\n+        if (status == 0) {\n+            cm.sendNext(\"Unfortunately, you did not manage to win this round. Better luck next time!\");\n+        } else if (status == 1) {\n+            var points = cm.getPlayer().getMCPQParty().getTotalCP();\n+            var grade = getGrade(points);\n+            var letterGrade = \"ABCDF\"[grade];\n+            var expReward = expRewards[grade][1];\n+\n+            cm.sendNext(\"Your grade is: #b\" + letterGrade + \"\\r\\n\\r\\n#kEXP Reward: \" + expReward);\n+            cm.gainExp(expReward);\n+        } else if (status == 2) {\n+            cm.warp(MonsterCarnival.MAP_LOBBY);\n+            cm.dispose();\n+        }\n+    }\n+}\n+\n+function doWinnerMap(mode, type, selection) {\n+    if (cm.getPlayer().getMCPQParty() == null) {\n+        cm.warp(MonsterCarnival.MAP_LOBBY);\n+        cm.dispose();\n+        return;\n+    }\n+\n+    if (mode == -1) {\n+        cm.dispose();\n+    } else {\n+        if (mode == 1) status++;\n+        else status--;\n+\n+        if (status == 0) {\n+            cm.sendNext(\"Congratulations! You managed to defeat the enemy team!\");\n+        } else if (status == 1) {\n+            var points = cm.getPlayer().getMCPQParty().getTotalCP();\n+            var grade = getGrade(points);\n+            var letterGrade = \"ABCDF\"[grade];\n+            var expReward = expRewards[grade][0];\n+\n+            cm.sendNext(\"Your grade is: #b\" + letterGrade + \"\\r\\n\\r\\n#kEXP Reward: \" + expReward);\n+            cm.gainExp(expReward);\n+        } else if (status == 2) {\n+            cm.warp(MonsterCarnival.MAP_LOBBY);\n+            cm.dispose();\n+        }\n+    }\n+}\n+\n+function doTown(mode, type, selection) {\n+    if (mode == -1) {\n+        cm.sendOk(\"Be sure to vote for the server every 24 hours!\");\n+        cm.dispose();\n+    } else {\n+        if (mode == 1) status++;\n+        else status--;\n+\n+        if (status == 0) {\n+            cm.sendSimple(\"What would you like to do? If you have never participated in the Monster Carnival, you'll need to know a thing or two about it before joining.\\r\\n\\r\\n#b#L0#Go to the Monster Carnival Field#l\\r\\n#L1#Learn about the Monster Carnival#l\\r\\n#L2#Trade Maple Coin#l\");\n+        } else if (status == 1) {\n+            if (selection == 0) {\n+                if (cm.getChar().getLevel() < MonsterCarnival.MIN_LEVEL || cm.getChar().getLevel() > MonsterCarnival.MAX_LEVEL) {\n+                    cm.sendOk(\"You must be between level \" + MonsterCarnival.MIN_LEVEL + \" and level \" + MonsterCarnival.MAX_LEVEL + \" to enter.\");\n+                    cm.dispose();\n+                    return;\n+                }\n+                cm.getChar().saveLocation(SavedLocationType.MONSTER_CARNIVAL);\n+                cm.warp(MonsterCarnival.MAP_LOBBY, 4);\n+                cm.dispose();\n+                return;\n+            } else if (selection == 1) {\n+                cm.sendPrev(infoText);\n+                cm.dispose();\n+                return;\n+            } else if (selection == 2) {\n+                store = true;\n+                cm.sendSimple(\"Select a category:\\r\\n\" +\n+                    \"#L101##bTrade Maple Coins for Warrior Weapons\\r\\n\" +\n+                    \"#L102#Trade Maple Coins for Magician Weapons\\r\\n\" +\n+                    \"#L103#Trade Maple Coins for Bowman Weapons\\r\\n\" +\n+                    \"#L104#Trade Maple Coins for Thief Weapons\\r\\n\" +\n+                    \"#L105#Trade Maple Coins for Pirate Weapons\\r\\n\" +\n+                    \"#L106#Trade Maple Coins for a Necklace\");\n+            }\n+        } else if (status == 2) {\n+            if (store) {\n+                switch (selection) {\n+                    case 101:\n+                        storeInfo = warrior;\n+                        break;\n+                    case 102:\n+                        storeInfo = magician;\n+                        break;\n+                    case 103:\n+                        storeInfo = archer;\n+                        break;\n+                    case 104:\n+                        storeInfo = thief;\n+                        break;\n+                    case 105:\n+                        storeInfo = pirate;\n+                        break;\n+                    case 106:\n+                        storeInfo = necklace;\n+                        break;\n+                    default:\n+                        storeInfo = [];\n+                }\n+                if (storeInfo.length == 0) {\n+                    cm.sendOk(\"That store doesn't exist.\");\n+                    cm.dispose();\n+                    return;\n+                }\n+                var storeText = \"\";\n+                for (var i = 0; i < storeInfo.length; ++i) {\n+                    var wepId = storeInfo[i][0];\n+                    var cost = storeInfo[i][1];\n+                    storeText += \"#L\" + i + \"##v\" + wepId + \"# - #z\" + wepId + \"# - \" + cost + \" \" + coinIcon + \"#l\\r\\n\";\n+                }\n+                cm.sendSimple(storeText);\n+            } else {\n+                MCTracker.log(\"[MCPQ_Info] CONTEXT_TOWN: Invalid status 2\");\n+            }\n+        } else if (status == 3) {\n+            if (store) {\n+                purchaseId = storeInfo[selection][0];\n+                purchaseCost = storeInfo[selection][1];\n+\n+                if (cm.haveItem(coinId, purchaseCost)) {\n+                    cm.sendYesNo(\"Are you sure you want to purchase #i\" + purchaseId + \"#? You will have #r#e\" + (cm.itemQuantity(coinId) - purchaseCost) + \" \" + coinIcon + \"##k#n remaining.\");\n+                } else {\n+                    cm.sendOk(\"You don't have enough \" + coinIcon + \".\");\n+                    cm.dispose();\n+                }\n+            } else {\n+                MCTracker.log(\"[MCPQ_Info] CONTEXT_TOWN: Invalid status 3\");\n+            }\n+        } else if (status == 4) {\n+            if (store) {\n+                if (cm.haveItem(coinId, purchaseCost)) {\n+                    cm.gainItem(coinId, -purchaseCost);\n+                    cm.gainItem(purchaseId);\n+                    cm.sendOk(\"Congratulations! Enjoy your new item.\");\n+                    cm.dispose();\n+                }\n+            } else {\n+                MCTracker.log(\"[MCPQ_Info] CONTEXT_TOWN: Invalid status 4\");\n+            }\n+        }\n+    }\n+}\n+\n+function doExit() {\n+    cm.warp(MonsterCarnival.MAP_LOBBY);\n+    cm.sendOk(\"Hope you had fun in the Carnival PQ!\");\n+    cm.dispose();\n+}\n+\n+function action(mode, type, selection) {\n+    switch (ctx) {\n+        case CONTEXT_TOWN:\n+            doTown(mode, type, selection);\n+            break;\n+        case CONTEXT_EXIT:\n+            doExit();\n+            break;\n+        case CONTEXT_LOSE:\n+            doLoserMap(mode, type, selection);\n+            break;\n+        case CONTEXT_WIN:\n+            doWinnerMap(mode, type, selection);\n+            break;\n+        default:\n+            MCTracker.log(\"[MCPQ_INFO] Invalid context (value: \" + ctx + \")\");\n+            cm.dispose();\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "3b55415e3b9d7f5417e1e26b555b2b7055e574e7", "filename": "docs/mcpq/scripts/npc/2042003.js", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/npc/2042003.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/npc/2042003.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/scripts/npc/2042003.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,88 @@\n+/** *  [MENTION=19862]id[/MENTION] 2042003\n+ *    [MENTION=806871]NPC[/MENTION] Assistant Red\n+ *    [MENTION=836108]Function[/MENTION] Monster Carnival Waiting Room NPC\n+ * @author s4nta\n+ */\n+\n+// Relevant Monster Carnival classes\n+var MonsterCarnival = net.sf.odinms.server.partyquest.mcpq.MonsterCarnival;\n+var MCTracker = net.sf.odinms.server.partyquest.mcpq.MCTracker;\n+var MCParty = net.sf.odinms.server.partyquest.mcpq.MCParty;\n+var MCField = net.sf.odinms.server.partyquest.mcpq.MCField;\n+var MCTeam = net.sf.odinms.server.partyquest.mcpq.MCField.MCTeam;\n+\n+// NPC variables\n+var status = -1;\n+var carnival, field;\n+var room = -1;\n+\n+function start() {\n+    if (!MonsterCarnival.isLobbyMap(cm.getMapId())) {\n+        MCTracker.log(\"Assistant called on invalid map \" + cm.getMapId() + \" by player \" + cm.getName());\n+        cm.sendOk(\"You are not authorized to do this.\");\n+        cm.dispose();\n+        return;\n+    }\n+    action(1, 0, 0);\n+}\n+\n+function action(mode, type, selection) {\n+    if (mode == -1) {\n+        cm.dispose();\n+        return;\n+    }\n+    if (mode == 1) status++;\n+    else status--;\n+\n+    if (status == 0) {\n+        if (cm.getParty() == null) {\n+            cm.warp(MonsterCarnival.MAP_LOBBY);\n+            cm.dispose();\n+            return;\n+        }\n+        options = [\"#L1#Leave the room #r#e(WARNING: Abusing this will block you from future Carnival PQs)#b#n.#l\",\n+                   \"#L2#Close NPC#l\"];\n+        if (cm.isLeader()) {\n+            options.unshift(\"#L0#View pending challenges#l\");\n+        }\n+\n+        text = \"Welcome to Carnival PQ. I am #rAssistant Red#k. What can I do for you?#b\\r\\n\";\n+        for (var i = 0; i < options.length; i++) {\n+            text += options[i];\n+            text += \"\\r\\n\";\n+        }\n+        cm.sendSimple(text);\n+    } else if (status == 1) {\n+        field = cm.getChar().getMCPQField();\n+        if (selection == 0) {\n+            if (!cm.isLeader()) {\n+                cm.sendOk(\"You are not authorized to do this.\");\n+                cm.dispose();\n+                return;\n+            }\n+            if (!field.hasPendingRequests()) {\n+                cm.sendOk(\"There are no pending requests at this time.\");\n+                cm.dispose();\n+                return;\n+            }\n+            cm.sendSimple(field.getNPCRequestString());\n+        } else if (selection == 1) {\n+            if (field != null) {\n+                field.deregister(true);\n+            } else {\n+                cm.warp(MonsterCarnival.MAP_EXIT);\n+            }\n+            cm.dispose();\n+        } else {\n+            cm.dispose();\n+        }\n+    } else if (status == 2) {\n+        var code = field.acceptRequest(selection);\n+        if (code == 1) {\n+            cm.sendOk(\"The challenge was accepted.\");\n+        } else {\n+            cm.sendOk(\"An unknown error occurred.\");\n+        }\n+        cm.dispose();\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "33d074269edfb9e26c83f1a42831da7ea21a9055", "filename": "docs/mcpq/scripts/npc/2042004.js", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/npc/2042004.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/npc/2042004.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/scripts/npc/2042004.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,88 @@\n+/** *  [MENTION=19862]id[/MENTION] 2042004\n+ *    [MENTION=806871]NPC[/MENTION] Assistant Blue\n+ *    [MENTION=836108]Function[/MENTION] Monster Carnival Waiting Room NPC\n+ * @author s4nta\n+ */\n+\n+// Relevant Monster Carnival classes\n+var MonsterCarnival = net.sf.odinms.server.partyquest.mcpq.MonsterCarnival;\n+var MCTracker = net.sf.odinms.server.partyquest.mcpq.MCTracker;\n+var MCParty = net.sf.odinms.server.partyquest.mcpq.MCParty;\n+var MCField = net.sf.odinms.server.partyquest.mcpq.MCField;\n+var MCTeam = net.sf.odinms.server.partyquest.mcpq.MCField.MCTeam;\n+\n+// NPC variables\n+var status = -1;\n+var carnival, field;\n+var room = -1;\n+\n+function start() {\n+    if (!MonsterCarnival.isLobbyMap(cm.getMapId())) {\n+        MCTracker.log(\"Assistant called on invalid map \" + cm.getMapId() + \" by player \" + cm.getName());\n+        cm.sendOk(\"You are not authorized to do this.\");\n+        cm.dispose();\n+        return;\n+    }\n+    action(1, 0, 0);\n+}\n+\n+function action(mode, type, selection) {\n+    if (mode == -1) {\n+        cm.dispose();\n+        return;\n+    }\n+    if (mode == 1) status++;\n+    else status--;\n+\n+    if (status == 0) {\n+        if (cm.getParty() == null) {\n+            cm.warp(MonsterCarnival.MAP_LOBBY);\n+            cm.dispose();\n+            return;\n+        }\n+        options = [\"#L1#Leave the room #r#e(WARNING: Abusing this will block you from future Carnival PQs)#b#n.#l\",\n+                   \"#L2#Close NPC#l\"];\n+        if (cm.isLeader()) {\n+            options.unshift(\"#L0#View pending challenges#l\");\n+        }\n+\n+        text = \"Welcome to Carnival PQ. I am #bAssistant Blue#k. What can I do for you?#b\\r\\n\";\n+        for (var i = 0; i < options.length; i++) {\n+            text += options[i];\n+            text += \"\\r\\n\";\n+        }\n+        cm.sendSimple(text);\n+    } else if (status == 1) {\n+        field = cm.getChar().getMCPQField();\n+        if (selection == 0) {\n+            if (!cm.isLeader()) {\n+                cm.sendOk(\"You are not authorized to do this.\");\n+                cm.dispose();\n+                return;\n+            }\n+            if (!field.hasPendingRequests()) {\n+                cm.sendOk(\"There are no pending requests at this time.\");\n+                cm.dispose();\n+                return;\n+            }\n+            cm.sendSimple(field.getNPCRequestString());\n+        } else if (selection == 1) {\n+            if (field != null) {\n+                field.deregister(true);\n+            } else {\n+                cm.warp(MonsterCarnival.MAP_EXIT);\n+            }\n+            cm.dispose();\n+        } else {\n+            cm.dispose();\n+        }\n+    } else if (status == 2) {\n+        var code = field.acceptRequest(selection);\n+        if (code == 1) {\n+            cm.sendOk(\"The challenge was accepted.\");\n+        } else {\n+            cm.sendOk(\"An unknown error occurred.\");\n+        }\n+        cm.dispose();\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "bb940cab4c2d5e2c74022187f0b0a84ba70af1a7", "filename": "docs/mcpq/scripts/portal/MCrevive1.js", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive1.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive1.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/scripts/portal/MCrevive1.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,8 @@\n+function enter(pi) {   player = pi.getPlayer();\n+   if (player.getMCPQField() != null) {\n+       player.getMCPQField().onRevive(player);\n+   } else {\n+       pi.warp(980000000);\n+   }\n+   return true;\n+}\n\\ No newline at end of file"}, {"sha": "bb940cab4c2d5e2c74022187f0b0a84ba70af1a7", "filename": "docs/mcpq/scripts/portal/MCrevive2.js", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive2.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive2.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/scripts/portal/MCrevive2.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,8 @@\n+function enter(pi) {   player = pi.getPlayer();\n+   if (player.getMCPQField() != null) {\n+       player.getMCPQField().onRevive(player);\n+   } else {\n+       pi.warp(980000000);\n+   }\n+   return true;\n+}\n\\ No newline at end of file"}, {"sha": "bb940cab4c2d5e2c74022187f0b0a84ba70af1a7", "filename": "docs/mcpq/scripts/portal/MCrevive3.js", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive3.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive3.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/scripts/portal/MCrevive3.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,8 @@\n+function enter(pi) {   player = pi.getPlayer();\n+   if (player.getMCPQField() != null) {\n+       player.getMCPQField().onRevive(player);\n+   } else {\n+       pi.warp(980000000);\n+   }\n+   return true;\n+}\n\\ No newline at end of file"}, {"sha": "bb940cab4c2d5e2c74022187f0b0a84ba70af1a7", "filename": "docs/mcpq/scripts/portal/MCrevive4.js", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive4.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive4.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/scripts/portal/MCrevive4.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,8 @@\n+function enter(pi) {   player = pi.getPlayer();\n+   if (player.getMCPQField() != null) {\n+       player.getMCPQField().onRevive(player);\n+   } else {\n+       pi.warp(980000000);\n+   }\n+   return true;\n+}\n\\ No newline at end of file"}, {"sha": "bb940cab4c2d5e2c74022187f0b0a84ba70af1a7", "filename": "docs/mcpq/scripts/portal/MCrevive5.js", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive5.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive5.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/scripts/portal/MCrevive5.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,8 @@\n+function enter(pi) {   player = pi.getPlayer();\n+   if (player.getMCPQField() != null) {\n+       player.getMCPQField().onRevive(player);\n+   } else {\n+       pi.warp(980000000);\n+   }\n+   return true;\n+}\n\\ No newline at end of file"}, {"sha": "bb940cab4c2d5e2c74022187f0b0a84ba70af1a7", "filename": "docs/mcpq/scripts/portal/MCrevive6.js", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive6.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/MCrevive6.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/scripts/portal/MCrevive6.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,8 @@\n+function enter(pi) {   player = pi.getPlayer();\n+   if (player.getMCPQField() != null) {\n+       player.getMCPQField().onRevive(player);\n+   } else {\n+       pi.warp(980000000);\n+   }\n+   return true;\n+}\n\\ No newline at end of file"}, {"sha": "728e8ed2f030faea8a578e13387c90d5e252ba93", "filename": "docs/mcpq/scripts/portal/mc_out.js", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/mc_out.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/scripts/portal/mc_out.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/scripts/portal/mc_out.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,51 @@\n+/*\n+    This file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+                       Matthias Butz <matze@odinms.de>\n+                       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License version 3\n+    as published by the Free Software Foundation. You may not use, modify\n+    or distribute this program under any other version of the\n+    GNU Affero General Public License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+\n+importPackage(Packages.net.sf.odinms.server.maps);\n+\n+/*\n+Return from MCPQ map.\n+*/\n+\n+function enter(pi) {\n+    var returnMap = pi.getPlayer().getSavedLocation(SavedLocationType.MONSTER_CARNIVAL);\n+    if (returnMap < 0) {\n+        returnMap = 100000000; // to fix people who entered the fm trough an unconventional way\n+    }\n+    var target = pi.getPlayer().getClient().getChannelServer().getMapFactory().getMap(returnMap);\n+    var targetPortal;\n+\n+    if (returnMap == 230000000) {\n+        targetPortal = target.getPortal(\"market01\");\n+    } else {\n+        targetPortal = target.getPortal(\"market00\");\n+    }\n+\n+    if (targetPortal == null)\n+        targetPortal = target.getPortal(0);\n+\n+    if (pi.getPlayer().getMapId() != target) {\n+        pi.getPlayer().clearSavedLocation(SavedLocationType.MONSTER_CARNIVAL);\n+        pi.getPlayer().changeMap(target, targetPortal);\n+        return true;\n+    }\n+    return false;\n+}\n\\ No newline at end of file"}, {"sha": "ad631236d3c99701a575a375f0261c7e486b86db", "filename": "docs/mcpq/src/ChangeMapHandler.txt", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/ChangeMapHandler.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/ChangeMapHandler.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/ChangeMapHandler.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,5 @@\n+Under the respawn map change code (!c.getPlayer().isAlive()), add before executeStandardPath is done:\n+PHP Code:\n+if (player.getMCPQField() != null) {    player.getMCPQField().onPlayerRespawn(player);\n+    return;\n+}\n\\ No newline at end of file"}, {"sha": "949abab24ec2dfe0ff1ece28e2ef963fe737d33d", "filename": "docs/mcpq/src/ItemPickupHandler.txt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/ItemPickupHandler.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/ItemPickupHandler.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/ItemPickupHandler.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,22 @@\n+Add before items are added to inventory, or after mesos are handled:\n+PHP Code:\n+\n+else if (c.getPlayer().getMCPQField() != null) {   // CPQ Handling    boolean consumed = c.getPlayer().getMCPQField().onItemPickup(c.getPlayer(), mapitem);\n+    if (consumed) {\n+        c.getPlayer().getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 2, c.getPlayer().getId()),\n+                mapitem.getPosition());\n+        c.getPlayer().getCheatTracker().pickupComplete();\n+        c.getPlayer().getMap().removeMapObject(ob);\n+    } else {\n+        if (MapleInventoryManipulator.addFromDrop(c, mapitem.getItem(), true)) {\n+            c.getPlayer().getMap().broadcastMessage(\n+                    MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 2, c.getPlayer().getId()),\n+                    mapitem.getPosition());\n+            c.getPlayer().getCheatTracker().pickupComplete();\n+            c.getPlayer().getMap().removeMapObject(ob);\n+        } else {\n+            c.getPlayer().getCheatTracker().pickupComplete();\n+            return;\n+        }\n+    }\n+}  \n\\ No newline at end of file"}, {"sha": "87f8ca1b0b3fd41c640076d84e67236c4d3a4745", "filename": "docs/mcpq/src/MapleCharacter.txt", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleCharacter.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleCharacter.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/MapleCharacter.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,73 @@\n+client/MapleCharacter.java\n+Add fields:\n+PHP Code:\n+private MCField.MCTeam MCPQTeam;private MCParty MCPQParty;\n+private MCField MCPQField;\n+private int availableCP = 0;\n+private int totalCP = 0;  \n+under playerDead() method:\n+PHP Code:\n+if (player.getMap().isTown()) {    XPdummy *= 0.01;\n+} else if (MonsterCarnival.isBattlefieldMap(player.getMapId())) {\n+    XPdummy = 0;\n+}  \n+under the giveDebuff() method, add a field that force adds the disease if some variable cpq is set, regardless of buffs.\n+method signature:\n+PHP Code:\n+public void giveDebuff(MapleDisease disease, MobSkill skill, boolean cpq)  \n+Add these methods:\n+PHP Code:\n+public int getTeam() {    if (this.MCPQTeam == null) {\n+        return -1;\n+    }\n+    return this.MCPQTeam.code;\n+}\n+\n+public MCField.MCTeam getMCPQTeam() {\n+    return MCPQTeam;\n+}\n+\n+public void setMCPQTeam(MCField.MCTeam MCPQTeam) {\n+    this.MCPQTeam = MCPQTeam;\n+}\n+\n+public MCParty getMCPQParty() {\n+    return MCPQParty;\n+}\n+\n+public void setMCPQParty(MCParty MCPQParty) {\n+    this.MCPQParty = MCPQParty;\n+}\n+\n+public MCField getMCPQField() {\n+    return MCPQField;\n+}\n+\n+public void setMCPQField(MCField MCPQField) {\n+    this.MCPQField = MCPQField;\n+}\n+\n+public int getAvailableCP() {\n+    return availableCP;\n+}\n+\n+public void setAvailableCP(int availableCP) {\n+    this.availableCP = availableCP;\n+}\n+\n+public int getTotalCP() {\n+    return totalCP;\n+}\n+\n+public void setTotalCP(int totalCP) {\n+    this.totalCP = totalCP;\n+}\n+\n+public void gainCP(int cp) {\n+    this.availableCP += cp;\n+    this.totalCP += cp;\n+}\n+\n+public void loseCP(int cp) {\n+    this.availableCP -= cp;\n+}  "}, {"sha": "12d5d27364fe65425f32671cb0025c729b05e4fe", "filename": "docs/mcpq/src/MapleClient.txt", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleClient.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleClient.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/MapleClient.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,5 @@\n+Add this under disconnect() (right after event instance calls onPlayerDisconnect, preferably):\n+PHP Code:\n+if (chr.getMCPQField() != null) {\n+\tchr.getMCPQField().onPlayerDisconnected(player);\n+}\n\\ No newline at end of file"}, {"sha": "bd11eaec18eb6cf9b63a235e45941dbb7e70534e", "filename": "docs/mcpq/src/MapleLifeFactory.txt", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleLifeFactory.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleLifeFactory.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/MapleLifeFactory.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,3 @@\n+Add to getMonster(int monsterId):\n+PHP Code:\n+stats.setCp(MapleDataTool.getIntConvert(\"getCP\", monsterInfoData, 0));  \n\\ No newline at end of file"}, {"sha": "bb1fdf1adcbeae5c0b7d5c5ee0f343dfc6bfea22", "filename": "docs/mcpq/src/MapleMap.txt", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleMap.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleMap.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/MapleMap.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,80 @@\n+Add fields:\n+PHP Code:\n+private boolean respawning = true;\n+private MCWZData mcpqData;  \n+Add methods:\n+PHP Code:\n+public final List<MapleMonster> getAllMonsters() {    return getAllMapObjects(MapleMapObjectType.MONSTER);\n+}\n+\n+public void addMonsterSpawn(MapleMonster monster, int mobTime, int team) {\n+    Point newpos = calcPointBelow(monster.getPosition());\n+    newpos.y -= 1;\n+    SpawnPoint sp = new SpawnPoint(monster, newpos, mobTime, team);\n+    monsterSpawn.add(sp);\n+    if (!respawning) return;\n+\n+    if (sp.shouldSpawn() || mobTime == -1) {\n+        sp.spawnMonster(this);\n+    }\n+}\n+\n+public void setReactorState(MapleReactor reactor, byte state) {\n+    synchronized (this.mapobjects) {\n+        reactor.setState(state);\n+        broadcastMessage(MaplePacketCreator.triggerReactor(reactor, state));\n+    }\n+}\n+\n+public <E extends MapleMapObject> List<E> getAllMapObjects(MapleMapObjectType type) {\n+    List<E> ret = new ArrayList<>();\n+    synchronized (mapobjects) {\n+        for (MapleMapObject l : mapobjects.values()) {\n+            if (l.getType() == type) {\n+                ret.add((E) l);\n+            }\n+        }\n+    }\n+    return ret;\n+}\n+\n+public void clearDrops() {\n+    List<MapleMapItem> items = getAllMapObjects(MapleMapObjectType.ITEM);\n+    for (MapleMapItem itemmo : items) {\n+        removeMapObject(itemmo);\n+        broadcastMessage(MaplePacketCreator.removeItemFromMap(itemmo.getObjectId(), 0, 0));\n+    }\n+}\n+\n+public Collection<SpawnPoint> getSpawnPoints() {\n+    return monsterSpawn;\n+}\n+\n+public void respawn() {\n+    for (SpawnPoint sp : this.monsterSpawn) {\n+        if (sp.shouldSpawn()) {\n+            sp.spawnMonster(this);\n+        }\n+    }\n+}\n+\n+public void beginSpawning() {\n+    this.respawning = true;\n+    this.respawn();\n+}\n+\n+public boolean isRespawning() {\n+    return respawning;\n+}\n+\n+public void setRespawning(boolean respawning) {\n+    this.respawning = respawning;\n+}\n+\n+public MCWZData getMCPQData() {\n+    return this.mcpqData;\n+}\n+\n+public void setMCPQData(MCWZData data) {\n+    this.mcpqData = data;\n+}  "}, {"sha": "96869862318984e6bbae19042ce3a71e773cde3d", "filename": "docs/mcpq/src/MapleMapFactory.txt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleMapFactory.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleMapFactory.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/MapleMapFactory.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,22 @@\n+Add to getMap() method, under where it parses PQ areas:\n+PHP Code:\n+MapleData mcData = mapData.getChildByPath(\"monsterCarnival\");if (mcData != null) {\n+    MCWZData mcpqInfo = new MCWZData(mcData);\n+    map.setMCPQData(mcpqInfo);\n+    map.setRespawning(false);\n+}  \n+Add to getMap() method, under where it parses mobTime:\n+PHP Code:\n+int team = MapleDataTool.getInt(\"team\", life, -1);  \n+Change addMonsterSpawn() method call to the following, using the new SpawnPoint construction we defined in MapleMap:\n+PHP Code:\n+map.addMonsterSpawn(monster, mobTime, team);  \n+Add the method:\n+PHP Code:\n+public MapleMap instanceMap(int mapid, boolean respawns, boolean npcs) {    return instanceMap(mapid, respawns, npcs, true);\n+}  \n+and \n+\n+PHP Code:\n+public MapleMap instanceMap(int mapid, boolean respawns, boolean npcs, boolean reactors)  \n+, where the code is the same as getMap but does not try to load from cache and does not store into cache."}, {"sha": "5adb975020f94582a0f21572b7ebc5c73bb1a344", "filename": "docs/mcpq/src/MapleMonster.txt", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleMonster.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleMonster.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/MapleMonster.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,31 @@\n+Add fields:\n+PHP Code:\n+private int team = -1; \n+\n+Add methods:\n+PHP Code:\n+public int getCP() {    return stats.getCp();\n+}\n+\n+public int getTeam() {\n+    return team;\n+}\n+\n+public void setTeam(int team) {\n+    this.team = team;\n+}\n+\n+public void dispel() {\n+    if (!isAlive()) return;\n+\n+    for (MonsterStatus i : MonsterStatus.values()) {\n+        if (monsterBuffs.contains(i)) {\n+            removeMonsterBuff(i);\n+            MaplePacket packet = MaplePacketCreator.cancelMonsterStatus(getObjectId(), Collections.singletonMap(i, Integer.valueOf(1)));\n+            map.broadcastMessage(packet, getPosition());\n+            if (getController() != null && !getController().isMapObjectVisible(MapleMonster.this)) {\n+                getController().getClient().getSession().write(packet);\n+            }\n+        }\n+    }\n+}  "}, {"sha": "196b71b9ea4d68ad3482efa1d97c472f589a8109", "filename": "docs/mcpq/src/MapleMonsterStats.txt", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleMonsterStats.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleMonsterStats.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/MapleMonsterStats.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,13 @@\n+Add field:\n+PHP Code:\n+private int cp;\n+\n+Add methods:\n+PHP Code:\n+public int getCp() {\n+\treturn cp;\n+}\n+\n+public void setCp(int cp) {\n+    this.cp = cp;\n+}  \n\\ No newline at end of file"}, {"sha": "2ea3c55073ed6c388ef52cf39d95b818fbf95e53", "filename": "docs/mcpq/src/MapleReactor.txt", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleReactor.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleReactor.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/MapleReactor.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,6 @@\n+Under hitReactor(), add before standard handling:\n+PHP Code:\n+if (c.getPlayer().getMCPQField() != null) {\n+\tc.getPlayer().getMCPQField().onGuardianHit(c.getPlayer(), this);\n+    return;\n+}\n\\ No newline at end of file"}, {"sha": "041bf661c440db4e1f95135e7ac6c24865bf8f13", "filename": "docs/mcpq/src/MapleStatEffect.txt", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleStatEffect.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MapleStatEffect.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/MapleStatEffect.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,27 @@\n+Add fields:\n+PHP Code:\n+private boolean consumeOnPickup, party;\n+private int cp, nuffSkill;\n+\n+Add to stat parsing (loadFromData()):\n+PHP Code:\n+\n+ret.cp = MapleDataTool.getInt(\"cp\", source, 0);ret.party = MapleDataTool.getInt(\"party\", source, 0) > 0;\n+ret.consumeOnPickup = MapleDataTool.getInt(\"consumeOnPickup\", source, 0) > 0;\n+ret.nuffSkill = MapleDataTool.getInt(\"nuffSkill\", source, -1);  \n+Add methods:\n+PHP Code:\n+public int getCP() {    return cp;\n+}\n+\n+public boolean isParty() {\n+    return party;\n+}\n+\n+public boolean isConsumeOnPickup() {\n+    return consumeOnPickup;\n+}\n+\n+public int getNuffSkill() {\n+    return nuffSkill;\n+}  \n\\ No newline at end of file"}, {"sha": "c36ef0b9b0cf179775f9addf1f5bcf65b9e2cb5b", "filename": "docs/mcpq/src/MobSkill.txt", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MobSkill.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MobSkill.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/MobSkill.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,23 @@\n+Add to applyEffect():\n+\n+PHP Code:\n+case 150:    monStat = MonsterStatus.WEAPON_ATTACK_UP;\n+    break;\n+case 151:\n+    monStat = MonsterStatus.WEAPON_DEFENSE_UP;\n+    break;\n+case 152:\n+    monStat = MonsterStatus.MAGIC_ATTACK_UP;\n+    break;\n+case 153:\n+    monStat = MonsterStatus.MAGIC_DEFENSE_UP;\n+    break;\n+case 154:\n+    monStat = MonsterStatus.ACC;\n+    break;\n+case 155:\n+    monStat = MonsterStatus.AVOID;\n+    break;\n+case 156:\n+    monStat = MonsterStatus.SPEED;\n+    break;  "}, {"sha": "c34ec7fc8daa2595f8ec7f49e3cbda0aea309006", "filename": "docs/mcpq/src/MonterCarnivalHandler.txt", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MonterCarnivalHandler.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/MonterCarnivalHandler.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/MonterCarnivalHandler.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,41 @@\n+package net.sf.odinms.net.channel.handler;\n+import net.sf.odinms.client.MapleCharacter;\n+import net.sf.odinms.client.MapleClient;\n+import net.sf.odinms.net.AbstractMaplePacketHandler;\n+import net.sf.odinms.server.partyquest.mcpq.MCField;\n+import net.sf.odinms.server.partyquest.mcpq.MCTracker;\n+import net.sf.odinms.server.partyquest.mcpq.MonsterCarnival;\n+import net.sf.odinms.tools.data.input.SeekableLittleEndianAccessor;\n+\n+/**\n+ * Packet handler for Monster Carnival.\n+ * @author s4nta\n+ */\n+public class MonsterCarnivalHandler extends AbstractMaplePacketHandler {\n+\n+    @Override\n+    public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n+        int tab = slea.readByte();\n+        int num = slea.readByte();\n+        MapleCharacter chr = c.getPlayer();\n+\n+        if (MonsterCarnival.DEBUG) {\n+            MCTracker.log(\"[MCHandler] \" + chr.getName() + \" used tab \"  + tab + \" num \" + num);\n+            System.out.println(\"[MCHandler] \" + chr.getName() + \" used tab \"  + tab + \" num \" + num);\n+        }\n+\n+        if (chr.getMCPQField() == null || chr.getMCPQParty() == null) {\n+            MCTracker.log(\"[MCHandler] \" + chr.getName() + \" attempting to use Monster Carnival handler without being in Monster Carnival\");\n+            return;\n+        }\n+\n+        MCField field = chr.getMCPQField();\n+        if (tab == 0) {\n+            field.onAddSpawn(c.getPlayer(), num);\n+        } else if (tab == 1) {\n+            field.onUseSkill(c.getPlayer(), num);\n+        } else if (tab == 2) { // status\n+            field.onGuardianSummon(c.getPlayer(), num);\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "2c1f32caa291330700eb94e341348f132caeaaa3", "filename": "docs/mcpq/src/PetLootHandler.txt", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/PetLootHandler.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/PetLootHandler.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/PetLootHandler.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,20 @@\n+else if (c.getPlayer().getMCPQField() != null) {   // CPQ Handling\n+                    boolean consumed = c.getPlayer().getMCPQField().onItemPickup(c.getPlayer(), mapitem);\n+                    if (consumed) {\n+                        c.getPlayer().getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 2, c.getPlayer().getId()),\n+                                mapitem.getPosition());\n+                        c.getPlayer().getCheatTracker().pickupComplete();\n+                        c.getPlayer().getMap().removeMapObject(ob);\n+                    } else {\n+                        if (MapleInventoryManipulator.addFromDrop(c, mapitem.getItem(), true)) {\n+                            c.getPlayer().getMap().broadcastMessage(\n+                                    MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 2, c.getPlayer().getId()),\n+                                    mapitem.getPosition());\n+                            c.getPlayer().getCheatTracker().pickupComplete();\n+                            c.getPlayer().getMap().removeMapObject(ob);\n+                        } else {\n+                            c.getPlayer().getCheatTracker().pickupComplete();\n+                            return;\n+                        }\n+                    }\n+                }\n\\ No newline at end of file"}, {"sha": "107be7067df16b07da0244f92fb6b91bc298d651", "filename": "docs/mcpq/src/SpawnPoint.txt", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/SpawnPoint.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mcpq/src/SpawnPoint.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mcpq/src/SpawnPoint.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,35 @@\n+Add field:\n+PHP Code:\n+private int team = -1;  \n+Add constructor:\n+PHP Code:\n+public SpawnPoint(MapleMonster monster, Point pos, int mobTime, int team) {    super();\n+    this.monster = monster;\n+    this.pos = new Point(pos);\n+    this.mobTime = mobTime;\n+    this.immobile = !monster.isMobile();\n+    this.nextPossibleSpawn = System.currentTimeMillis();\n+    this.team = team;\n+}  \n+Add monster death listener under spawnMonster():\n+PHP Code:\n+if (team > -1) {    final int cp = mob.getCP();\n+    mob.addListener(new MonsterListener() {\n+\n+        @Override\n+        public void monsterKilled(MapleMonster monster, MapleCharacter highestDamageChar) {\n+            if (highestDamageChar == null) {\n+                return;\n+            }\n+\n+            if (highestDamageChar.getMCPQParty() == null) {\n+                MCTracker.log(\"Attempted to give CP to character without assigned MCPQ Party.\");\n+                return;\n+            }\n+\n+            highestDamageChar.getMCPQField().monsterKilled(highestDamageChar, cp);\n+\n+        }\n+    });\n+    mob.setTeam(team);\n+}\n\\ No newline at end of file"}, {"sha": "af2f4aa868281c7a4417d01599e0821f12efb1c6", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -118,7 +118,7 @@ Inclus\n \n 01 - 02 Abril 2017,\n Corre\ufffd\ufffdo de bug que impedia carregamento do mapa Singapore: Spooky World.\n-Adi\ufffd\ufffdo dos cards de mob restantes no drop_data do BD.\n+Adi\ufffd\ufffdo dos cards de mob restantes no drop_data do DB.\n \n 03 Abril 2017,\n Inclus\ufffdo de scripts para interceptar condi\ufffd\ufffdes de corrida em eventos de viagem.\n@@ -623,4 +623,12 @@ Corrigido storage n\n Corrigido sistema de buffs n\ufffdo computando buffs com valor zero n\ufffdo sendo apropriadamente ativados no jogador.\n \n 29 Outubro 2017,\n-Adicionado drop data para diversas vers\ufffdes de Fairy, Yetis e Pepes.\n\\ No newline at end of file\n+Adicionado drop data para diversas vers\ufffdes de Fairy, Yetis e Pepes.\n+Adicionado prote\ufffd\ufffdo contra acesso concorrente em MapleGuild e MapleAlliance.\n+\n+30 Outubro 2017,\n+Adicionado drop data de mesos para o restante dos mobs que dropam 4 ou mais itens.\n+\n+31 Outubro 2017,\n+Corrigido bug ao mudar classe de Aran desconectando o jogador.\n+Corrigido drop data de flechas agora dropando bundles ao inv\ufffds de uma quantidade unit\ufffdria.\n\\ No newline at end of file"}, {"sha": "3287222d2649466c0eb42828a5c7b3b74b3426ed", "filename": "nbproject/private/private.xml", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/nbproject/private/private.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/nbproject/private/private.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/nbproject/private/private.xml?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -2,8 +2,6 @@\n <project-private xmlns=\"http://www.netbeans.org/ns/project-private/1\">\n     <editor-bookmarks xmlns=\"http://www.netbeans.org/ns/editor-bookmarks/2\" lastBookmarkId=\"2\"/>\n     <open-files xmlns=\"http://www.netbeans.org/ns/projectui-open-files/2\">\n-        <group>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/scripts/quest/21001.js</file>\n-        </group>\n+        <group/>\n     </open-files>\n </project-private>"}, {"sha": "e7ba9a104090155a11be3661dcea601ba2321aa6", "filename": "scripts/npc/1200003.js", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/npc/1200003.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/npc/1200003.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1200003.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -33,20 +33,20 @@ function action(mode, type, selection) {\n \t\tstatus++;\n \t\tif (status == 0) {\n \t\t\tfor(var i=0; i < menu.length; i++) {\n-\t\t\t\t\tvar display = \"\\r\\n#L\"+i+\"##b Lith Harbor (800 mesos)#k\";\n-\t\t\t\t}\t\t\t\n-\t\t\t\tcm.sendSimple(\"Are you trying to leave Rien? Board this ship and I'll take you from #bRien#k to #bLith Harbor#k and back. for a #bfee of 800#k Mesos. Would you like to head over to Lith Harbor now? It'll take about a minute to get there.\\r\\n\"+display);\n+                                var display = \"\\r\\n#L\"+i+\"##b Lith Harbor (800 mesos)#k\";\n+                        }\t\t\t\n+                        cm.sendSimple(\"Are you trying to leave Rien? Board this ship and I'll take you from #bRien#k to #bLith Harbor#k and back. for a #bfee of 800#k Mesos. Would you like to head over to Lith Harbor now? It'll take about a minute to get there.\\r\\n\"+display);\n \t\t\t\n-\t\t\t} else if(status == 1) {\n-\t\t\t { if(cm.getMeso() < 800) {\n-\t\t\t\t\tcm.sendNext(\"Hmm... Are you sure you have #b800#k Mesos? Check your Inventory and make sure you have enough. You must pay the fee or I can't let you get on...\");\n-\t\t\t\t\tcm.dispose();\n-\t\t\t\t} else {\n-\t\t\t\t\t\t\tcm.gainMeso(-800);\n-\t\t\t\t\t\t\tcm.warp(200090070);\n-\t\t\t\t\t\t\tcm.dispose();\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n\\ No newline at end of file\n+                } else if(status == 1) {\n+                        if(cm.getMeso() < 800) {\n+                                cm.sendNext(\"Hmm... Are you sure you have #b800#k Mesos? Check your Inventory and make sure you have enough. You must pay the fee or I can't let you get on...\");\n+                                cm.dispose();\n+                        } else {\n+                                cm.gainMeso(-800);\n+                                cm.warp(200090070);\n+                                cm.dispose();\n+                        }\n+\t\t\t\t\n+                }\n+        }\n+}\n\\ No newline at end of file"}, {"sha": "12d99695b791b0a21b0057106102463fc8d2aa7e", "filename": "scripts/npc/1200004.js", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/npc/1200004.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/npc/1200004.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1200004.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -33,20 +33,19 @@ function action(mode, type, selection) {\n \t\tstatus++;\n \t\tif (status == 0) {\n \t\t\tfor(var i=0; i < menu.length; i++) {\n-\t\t\t\t\tvar display = \"\\r\\n#L\"+i+\"##b Rien (800 mesos)#k\";\n-\t\t\t\t}\t\t\t\n-\t\t\t\tcm.sendSimple(\"Are you thinking about leaving Victoria Island and heading to our town? If you board this ship, I can take you from #bLith Harbor#k to #bRien#k and back. But you must pay a #bfee of 800#k Mesos. Would you like to go to Rien? It'll take about a minute to get there.\\r\\n\"+display);\n+                                var display = \"\\r\\n#L\"+i+\"##b Rien (800 mesos)#k\";\n+                        }\n+                        cm.sendSimple(\"Are you thinking about leaving Victoria Island and heading to our town? If you board this ship, I can take you from #bLith Harbor#k to #bRien#k and back. But you must pay a #bfee of 800#k Mesos. Would you like to go to Rien? It'll take about a minute to get there.\\r\\n\"+display);\n \t\t\t\n-\t\t\t} else if(status == 1) {\n-\t\t\t { if(cm.getMeso() < 800) {\n-\t\t\t\t\tcm.sendNext(\"Hmm... Are you sure you have #b800#k Mesos? Check your Inventory and make sure you have enough. You must pay the fee or I can't let you get on...\");\n-\t\t\t\t\tcm.dispose();\n-\t\t\t\t} else {\n-\t\t\t\t\t\t\tcm.gainMeso(-800);\n-\t\t\t\t\t\t\tcm.warp(200090060);\n-\t\t\t\t\t\t\tcm.dispose();\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n\\ No newline at end of file\n+                } else if(status == 1) {\n+                        if(cm.getMeso() < 800) {\n+                                cm.sendNext(\"Hmm... Are you sure you have #b800#k Mesos? Check your Inventory and make sure you have enough. You must pay the fee or I can't let you get on...\");\n+                                cm.dispose();\n+                        } else {\n+                                cm.gainMeso(-800);\n+                                cm.warp(200090060);\n+                                cm.dispose();\n+                        }\n+                }\n+        }\n+}\n\\ No newline at end of file"}, {"sha": "4bd6a91d19a7581a5fd2bef840cc83238f245d8d", "filename": "scripts/portal/enterInfo.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/portal/enterInfo.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/portal/enterInfo.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/enterInfo.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -1,4 +1,5 @@\n function enter(pi) {\n     pi.playPortalSound();\n     pi.warp(104000004, 1);\n+    return true;\n }\n\\ No newline at end of file"}, {"sha": "c1f5e1d1a13f99a31358d2ec49ac55a1fab7c3f3", "filename": "scripts/quest/21101.js", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/quest/21101.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/quest/21101.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/21101.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -38,22 +38,19 @@ function start(mode, type, selection) {\n     } else if (status == 1) {\n         if (qm.getPlayer().getJob().getId() == 2000) {\n             if(!qm.canHold(1142129)) {\n-                    cm.sendOk(\"Wow, your #bequip#k inventory is full. I need you to make at least 1 empty slot to complete this quest.\");\n+                    cm.sendOk(\"Wow, your #bequip#k inventory is full. You need to make at least 1 empty slot to complete this quest.\");\n                     qm.dispose();\n                     return;\n             }\n             qm.gainItem(1142129, true);\n-            qm.completeQuest();\n+            \n             qm.changeJobById(2100);\n-            qm.getPlayer().setStr(35);\n-            qm.getPlayer().setDex(4);\n-            qm.getPlayer().setRemainingAp((qm.getPlayer().getLevel() - 1) * 5 - 22);\n-            qm.getPlayer().setRemainingSp((qm.getPlayer().getLevel() - 10) * 3 + 1);\n-            qm.getPlayer().setMaxHp(qm.getPlayer().getMaxHp() + 275);\n-            qm.getPlayer().setMaxMp(qm.getPlayer().getMaxMp() + 15);\n+            qm.resetStats();\n             \n             //qm.teachSkill(21000000, 0, 10, -1);   //learned later...\n             //qm.teachSkill(21001003, 0, 20, -1);   //learned later...\n+            \n+            qm.completeQuest();\n \n             //qm.getPlayer().changeSkillLevel(SkillFactory.getSkill(20009000), 0, -1);\n             //qm.getPlayer().changeSkillLevel(SkillFactory.getSkill(20009000), 1, 0);"}, {"sha": "c43ed93259010c815d6b4b1ed038bbeab0923fd8", "filename": "scripts/quest/21201.js", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/quest/21201.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/quest/21201.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/21201.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -56,12 +56,13 @@ function end(mode, type, selection) {\n \t\t\t}\n \t\t\t\n \t\t\tqm.gainItem(1142130, true);\n-\t\t\tqm.getPlayer().setMaxMp(qm.getPlayer().getMaxMp() + 275);\n+                        \n \t\t\tqm.changeJobById(2110);\n \t\t\tqm.teachSkill(21100000, 0, 20, -1);\n \t\t\tqm.teachSkill(21100002, 0, 30, -1);\n \t\t\tqm.teachSkill(21100004, 0, 20, -1);\n \t\t\tqm.teachSkill(21100005, 0, 20, -1);\n+                        \n \t\t\tqm.completeQuest();\n \t\t}\n \t\tqm.sendNext(\"Your level isn't what it used to be back in your glory days, so I can't restore all of your old abilities. But the few I can restore should help you level up faster. Now hurry up and train so you can return to the old you.\");    "}, {"sha": "db20a8e9a7a67e0193c8e11b0c270e1b6b4a5ce2", "filename": "scripts/quest/21302.js", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/quest/21302.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/quest/21302.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/21302.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -44,10 +44,10 @@ function end(mode, type, selection) {\n \t\t\t}\n \t\t\t\n \t\t\tqm.gainItem(1142131, true);\n-\t\t\tqm.getPlayer().setMaxMp(qm.getPlayer().getMaxMp() + 275);\n-\t\t\tqm.getPlayer().setMaxHp(qm.getPlayer().getMaxHp() + 275);\n+                        \n \t\t\tqm.changeJobById(2111);\n \t\t\tqm.teachSkill(21110002, 0, 20, -1);\n+                        \n \t\t\tqm.completeQuest();\n \t\t}\n \t\tqm.sendNext(\"Come on, keep training so you can get all your abilities back, and that way we can explore together once more!\");    "}, {"sha": "f26db43190d2e4fa737c727a0f78035f531bfae6", "filename": "scripts/quest/21766.js", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/quest/21766.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/quest/21766.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/21766.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,22 @@\n+var status = -1;\n+\n+function start(mode, type, selection) {\n+\tstatus++;\n+\tif (status == 0) {\n+\t\tqm.sendNext(\"Hey! Can you do me a favor? #p20000# seems a bit strange these days...\");\n+\t} else if (status == 1) {\n+\t\tqm.sendNext(\"He used to scowl and whine about his arthritis until just recently, but he''s suddenly become all happy and smiley!!\");\n+\t} else if (status == 2) {\n+\t\tqm.sendNext(\"I have a feeling there is a secret behind that wooden box. Could you stealthily look into the wooden box next to #p20000#?\");\n+\t} else {\n+\t\tqm.sendNext(\"You know where #p20000# is, right? He''s to the right. Just keep going until you see where Vikin is, then head down past the hanging shark and octopus, and you''ll see John. The box should be right next to him.\");\n+\t\tqm.forceStartQuest();\n+\t\tqm.dispose();\n+\t}\n+}\n+\n+function end(mode, type, selection) {\n+\tqm.gainExp(200 * qm.getPlayer().getExpRate());\n+\tqm.forceCompleteQuest();\n+\tqm.dispose();\n+}\n\\ No newline at end of file"}, {"sha": "390278e171fb7598e4e05923a1237096af50e8ea", "filename": "scripts/quest/21767.js", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/quest/21767.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/scripts/quest/21767.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/21767.js?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,16 @@\n+var status = -1;\n+\n+function start(mode, type, selection) {\n+\tstatus++;\n+\tif (status == 0) {\n+\t\tqm.sendNext(\"#bHm, there's a medicinal substance in the box. What could this be? You better take this to John and ask him what it is.#k\");\n+\t} else {\n+\t\tqm.gainItem(4032423,1);\n+\t\tqm.forceCompleteQuest();\n+\t\tqm.dispose();\n+\t}\n+}\n+\n+function end(mode, type, selection) {\n+\tqm.dispose();\n+}\n\\ No newline at end of file"}, {"sha": "7ac09ad9af4985ac038bd901332987da62ca7f0c", "filename": "sql/db_drops.sql", "status": "modified", "additions": 1219, "deletions": 54, "changes": 1273, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/sql/db_drops.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/sql/db_drops.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_drops.sql?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -19557,16 +19557,16 @@ USE `maplesolaxia`;\n (9300027, 4001035, 1, 1, 0, 999999),\n (9300033, 4001035, 1, 1, 0, 999999),\n (9400585, 4032004, 1, 1, 0, 200000),\n-(9400585, 0, 310, 500, 0, 200000),\n+(9400585, 0, 310, 500, 0, 400000),\n (9400586, 4032004, 1, 1, 0, 200000),\n-(9400586, 0, 310, 500, 0, 200000),\n+(9400586, 0, 310, 500, 0, 400000),\n (9400587, 4000018, 1, 1, 0, 200000),\n (9400587, 4032003, 1, 1, 0, 150000),\n-(9400587, 0, 210, 380, 0, 200000),\n+(9400587, 0, 210, 380, 0, 400000),\n (9400588, 4000018, 1, 1, 0, 200000),\n (9400588, 4032003, 1, 1, 0, 150000),\n-(9400588, 0, 210, 380, 0, 200000),\n-(9400583, 0, 562, 1096, 0, 200000),\n+(9400588, 0, 210, 380, 0, 400000),\n+(9400583, 0, 562, 1096, 0, 400000),\n (9400583, 4032031, 1, 1, 0, 80000),\n (9400583, 4030012, 1, 1, 0, 300),\n (9400583, 4010006, 1, 1, 0, 40000),\n@@ -20594,54 +20594,6 @@ USE `maplesolaxia`;\n (9300341, 4020005, 1, 1, 0, 9000),\n (9300341, 4030000, 1, 1, 0, 10000),\n (9300341, 4031273, 1, 1, 2104, 500000),\n-(9300342, 4000012, 1, 1, 0, 600000),\n-(9300342, 2000000, 1, 1, 0, 20000),\n-(9300342, 2043102, 1, 1, 0, 300),\n-(9300342, 2000003, 1, 1, 0, 20000),\n-(9300342, 4020003, 1, 1, 0, 9000),\n-(9300342, 1322000, 1, 1, 0, 700),\n-(9300342, 2060000, 1, 1, 0, 30000),\n-(9300342, 1041044, 1, 1, 0, 800),\n-(9300342, 1061037, 1, 1, 0, 800),\n-(9300342, 4010004, 1, 1, 0, 9000),\n-(9300342, 1092008, 1, 1, 0, 700),\n-(9300342, 1041017, 1, 1, 0, 800),\n-(9300342, 1061012, 1, 1, 0, 800),\n-(9300342, 1462002, 1, 1, 0, 500),\n-(9300342, 2061000, 1, 1, 0, 30000),\n-(9300342, 1041063, 1, 1, 0, 800),\n-(9300342, 1061059, 1, 1, 0, 800),\n-(9300342, 1452003, 1, 1, 0, 500),\n-(9300342, 2048000, 1, 1, 0, 300),\n-(9300342, 1002033, 1, 1, 0, 1500),\n-(9300342, 1302007, 1, 1, 0, 700),\n-(9300342, 4020002, 1, 1, 0, 9000),\n-(9300342, 1032001, 1, 1, 0, 1000),\n-(9300342, 1002010, 1, 1, 0, 1500),\n-(9300342, 2000001, 1, 1, 0, 20000),\n-(9300342, 1002143, 1, 1, 0, 1500),\n-(9300342, 1432005, 1, 1, 0, 500),\n-(9300342, 1412012, 1, 1, 0, 700),\n-(9300342, 1072285, 1, 1, 0, 800),\n-(9300342, 1482001, 1, 1, 0, 500),\n-(9300342, 2380011, 1, 1, 0, 8000),\n-(9300342, 0, 28, 42, 0, 400000),\n-(9300342, 4031146, 1, 1, 2065, 1000000),\n-(9300342, 2040902, 1, 1, 0, 750),\n-(9300342, 2041020, 1, 1, 0, 750),\n-(9300342, 2048001, 1, 1, 0, 750),\n-(9300342, 2048003, 1, 1, 0, 750),\n-(9300342, 2044701, 1, 1, 0, 750),\n-(9300342, 4010005, 1, 1, 0, 7000),\n-(9300342, 1302020, 1, 1, 0, 700),\n-(9300342, 1302030, 1, 1, 0, 700),\n-(9300342, 1442013, 1, 1, 0, 700),\n-(9300342, 1412002, 1, 1, 0, 700),\n-(9300342, 1382012, 1, 1, 0, 700),\n-(9300342, 1041018, 1, 1, 0, 700),\n-(9300342, 1452022, 1, 1, 0, 700),\n-(9300342, 1060031, 1, 1, 0, 700),\n-(9300342, 4001369, 1, 1, 28259, 10000),\n (9300343, 0, 14, 21, 0, 400000),\n (9300343, 1002008, 1, 1, 0, 1500),\n (9300343, 1002610, 1, 1, 0, 1500),\n@@ -20671,6 +20623,10 @@ USE `maplesolaxia`;\n (9300343, 4032340, 1, 1, 21710, 200000);\n \n  -- Copying drops from some mobs to other versions of them\n+\n+ INSERT IGNORE INTO drop_data (`dropperid`, `itemid`, `minimum_quantity`, `maximum_quantity`, `questid`, `chance`)\n+ SELECT 9300342, `itemid`, `minimum_quantity`, `maximum_quantity`, `questid`, `chance` FROM drop_data WHERE dropperid = 1210102;\n+\n  INSERT IGNORE INTO drop_data (`dropperid`, `itemid`, `minimum_quantity`, `maximum_quantity`, `questid`, `chance`)\n  SELECT 6300001, `itemid`, `minimum_quantity`, `maximum_quantity`, `questid`, `chance` FROM drop_data WHERE dropperid = 6300000;\n \n@@ -21354,4 +21310,1213 @@ USE `maplesolaxia`;\n   DELETE FROM `reactordrops` WHERE itemid=4022023;\n   DELETE FROM `reactordrops` WHERE itemid=4032362;\n   DELETE FROM `reactordrops` WHERE itemid=4032363;\n-  DELETE FROM `reactordrops` WHERE itemid=4032980;\n\\ No newline at end of file\n+  DELETE FROM `reactordrops` WHERE itemid=4032980;\n+\n+  # MapleMesoFetcher ftw! Set meso drop for remaining mobs which drops more than 4 items.\n+  INSERT IGNORE INTO drop_data (`dropperid`, `itemid`, `minimum_quantity`, `maximum_quantity`, `questid`, `chance`) VALUES\n+(100122, 0, 14, 20, 0, 400000),\n+(100123, 0, 19, 29, 0, 400000),\n+(100124, 0, 25, 37, 0, 400000),\n+(100130, 0, 2, 4, 0, 400000),\n+(100131, 0, 8, 12, 0, 400000),\n+(100132, 0, 14, 20, 0, 400000),\n+(100133, 0, 19, 29, 0, 400000),\n+(100134, 0, 25, 37, 0, 400000),\n+(1110130, 0, 42, 62, 0, 400000),\n+(1140130, 0, 54, 79, 0, 400000),\n+(2100100, 0, 56, 83, 0, 400000),\n+(2100101, 0, 59, 87, 0, 400000),\n+(2100106, 0, 68, 100, 0, 400000),\n+(2100107, 0, 76, 112, 0, 400000),\n+(2100108, 0, 82, 121, 0, 400000),\n+(2110300, 0, 68, 100, 0, 400000),\n+(2110301, 0, 82, 121, 0, 400000),\n+(2230105, 0, 65, 96, 0, 400000),\n+(2230107, 0, 68, 100, 0, 400000),\n+(2230110, 0, 65, 96, 0, 400000),\n+(2230111, 0, 68, 100, 0, 400000),\n+(2230131, 0, 68, 100, 0, 400000),\n+(3000005, 0, 85, 125, 0, 400000),\n+(3100101, 0, 91, 133, 0, 400000),\n+(3100102, 0, 85, 125, 0, 400000),\n+(3110301, 0, 91, 133, 0, 400000),\n+(3110302, 0, 99, 146, 0, 400000),\n+(3110303, 0, 108, 158, 0, 400000),\n+(3220000, 0, 297, 1460, 0, 400000),\n+(3220001, 0, 324, 1580, 0, 400000),\n+(3300000, 0, 85, 125, 0, 400000),\n+(3300001, 0, 85, 125, 0, 400000),\n+(3300002, 0, 88, 129, 0, 400000),\n+(3300003, 0, 91, 133, 0, 400000),\n+(3300004, 0, 93, 137, 0, 400000),\n+(3300005, 0, 99, 146, 0, 400000),\n+(3300006, 0, 99, 146, 0, 400000),\n+(3300007, 0, 99, 146, 0, 400000),\n+(3300008, 0, 324, 1580, 0, 400000),\n+(4110300, 0, 119, 175, 0, 400000),\n+(4110301, 0, 128, 187, 0, 400000),\n+(4130103, 0, 399, 1960, 0, 400000),\n+(4220000, 0, 384, 1870, 0, 400000),\n+(4230122, 0, 119, 175, 0, 400000),\n+(4230125, 0, 125, 183, 0, 400000),\n+(4230400, 0, 128, 187, 0, 400000),\n+(4230502, 0, 122, 179, 0, 400000),\n+(4230503, 0, 128, 187, 0, 400000),\n+(4230504, 0, 128, 187, 0, 400000),\n+(4230600, 0, 113, 167, 0, 400000),\n+(4240000, 0, 139, 204, 0, 400000),\n+(4250000, 0, 119, 175, 0, 400000),\n+(4250001, 0, 131, 192, 0, 400000),\n+(5110300, 0, 142, 208, 0, 400000),\n+(5120500, 0, 159, 233, 0, 400000),\n+(5120501, 0, 150, 221, 0, 400000),\n+(5120502, 0, 153, 225, 0, 400000),\n+(5120505, 0, 165, 242, 0, 400000),\n+(5120506, 0, 156, 229, 0, 400000),\n+(5130105, 0, 159, 233, 0, 400000),\n+(5130108, 0, 162, 238, 0, 400000),\n+(5220000, 0, 468, 2290, 0, 400000),\n+(5220002, 0, 426, 2080, 0, 400000),\n+(5220003, 0, 504, 2460, 0, 400000),\n+(5220004, 0, 426, 2080, 0, 400000),\n+(5250000, 0, 156, 229, 0, 400000),\n+(5250001, 0, 145, 213, 0, 400000),\n+(5250002, 0, 162, 238, 0, 400000),\n+(6110300, 0, 185, 271, 0, 400000),\n+(6130102, 0, 170, 250, 0, 400000),\n+(6130103, 0, 170, 250, 0, 400000),\n+(6130203, 0, 170, 250, 0, 400000),\n+(6130207, 0, 176, 258, 0, 400000),\n+(6130209, 0, 187, 275, 0, 400000),\n+(6220000, 0, 555, 2710, 0, 400000),\n+(6220001, 0, 555, 2710, 0, 400000),\n+(6230100, 0, 176, 258, 0, 400000),\n+(6230401, 0, 179, 263, 0, 400000),\n+(6300005, 0, 555, 2710, 0, 400000),\n+(6400006, 0, 375, 1830, 0, 400000),\n+(6400008, 0, 468, 2290, 0, 400000),\n+(6400009, 0, 468, 2290, 0, 400000),\n+(7110300, 0, 213, 313, 0, 400000),\n+(7110301, 0, 207, 304, 0, 400000),\n+(7120103, 0, 199, 292, 0, 400000),\n+(7120104, 0, 202, 296, 0, 400000),\n+(7120106, 0, 213, 313, 0, 400000),\n+(7120107, 0, 213, 313, 0, 400000),\n+(7120108, 0, 219, 321, 0, 400000),\n+(7120109, 0, 225, 329, 0, 400000),\n+(7130000, 0, 207, 304, 0, 400000),\n+(7130002, 0, 205, 300, 0, 400000),\n+(7130003, 0, 216, 317, 0, 400000),\n+(7130004, 0, 222, 325, 0, 400000),\n+(7130102, 0, 222, 325, 0, 400000),\n+(7130103, 0, 207, 304, 0, 400000),\n+(7130400, 0, 597, 2920, 0, 400000),\n+(7130401, 0, 597, 2920, 0, 400000),\n+(7130402, 0, 597, 2920, 0, 400000),\n+(7130601, 0, 216, 317, 0, 400000),\n+(7220000, 0, 606, 2960, 0, 400000),\n+(7220001, 0, 597, 2920, 0, 400000),\n+(7220002, 0, 657, 3210, 0, 400000),\n+(8110300, 0, 227, 334, 0, 400000),\n+(8120102, 0, 233, 342, 0, 400000),\n+(8120103, 0, 239, 350, 0, 400000),\n+(8120104, 0, 244, 359, 0, 400000),\n+(8120105, 0, 250, 367, 0, 400000),\n+(8120106, 0, 253, 371, 0, 400000),\n+(8120107, 0, 253, 371, 0, 400000),\n+(8140000, 0, 227, 334, 0, 400000),\n+(8140100, 0, 233, 342, 0, 400000),\n+(8140511, 0, 615, 1130, 0, 400000),\n+(8140512, 0, 628, 1154, 0, 400000),\n+(8140600, 0, 622, 1142, 0, 400000),\n+(8140702, 0, 642, 1179, 0, 400000),\n+(8140703, 0, 655, 1204, 0, 400000),\n+(8141300, 0, 635, 1167, 0, 400000),\n+(8150000, 0, 2028, 12410, 0, 400000),\n+(8150100, 0, 676, 1241, 0, 400000),\n+(8150101, 0, 689, 1266, 0, 400000),\n+(8150200, 0, 676, 1241, 0, 400000),\n+(8150201, 0, 710, 1303, 0, 400000),\n+(8150300, 0, 655, 1204, 0, 400000),\n+(8150301, 0, 683, 1254, 0, 400000),\n+(8150302, 0, 696, 1279, 0, 400000),\n+(8190001, 0, 710, 1303, 0, 400000),\n+(8220003, 0, 2433, 14900, 0, 400000),\n+(8220005, 0, 2655, 16260, 0, 400000),\n+(8220006, 0, 2859, 17510, 0, 400000),\n+(8220007, 0, 1824, 11170, 0, 400000),\n+(8220009, 0, 726, 3550, 0, 400000),\n+(8830000, 0, 2130, 13030, 0, 400000),\n+(9001009, 0, 681, 3340, 0, 400000),\n+(9001011, 0, 99, 146, 0, 400000),\n+(9200016, 0, 85, 125, 0, 400000),\n+(9200019, 0, 165, 242, 0, 400000),\n+(9300011, 0, 111, 162, 0, 400000),\n+(9300058, 0, 19, 29, 0, 400000),\n+(9300059, 0, 28, 41, 0, 400000),\n+(9300060, 0, 119, 175, 0, 400000),\n+(9300078, 0, 710, 1303, 0, 400000),\n+(9300080, 0, 193, 284, 0, 400000),\n+(9300096, 0, 250, 367, 0, 400000),\n+(9300105, 0, 537, 2630, 0, 400000),\n+(9300106, 0, 579, 2840, 0, 400000),\n+(9300127, 0, 85, 125, 0, 400000),\n+(9300129, 0, 85, 125, 0, 400000),\n+(9300131, 0, 111, 162, 0, 400000),\n+(9300132, 0, 85, 125, 0, 400000),\n+(9300133, 0, 85, 125, 0, 400000),\n+(9300134, 0, 85, 125, 0, 400000),\n+(9300136, 0, 255, 1250, 0, 400000),\n+(9300139, 0, 690, 3380, 0, 400000),\n+(9300155, 0, 19, 29, 0, 400000),\n+(9300160, 0, 384, 1870, 0, 400000),\n+(9300161, 0, 384, 1870, 0, 400000),\n+(9300163, 0, 811, 1490, 0, 400000),\n+(9300164, 0, 811, 1490, 0, 400000),\n+(9300165, 0, 811, 1490, 0, 400000),\n+(9300182, 0, 726, 3550, 0, 400000),\n+(9300184, 0, 168, 830, 0, 400000),\n+(9300185, 0, 297, 1460, 0, 400000),\n+(9300186, 0, 324, 1580, 0, 400000),\n+(9300187, 0, 339, 1670, 0, 400000),\n+(9300188, 0, 426, 2080, 0, 400000),\n+(9300189, 0, 426, 2080, 0, 400000),\n+(9300190, 0, 468, 2290, 0, 400000),\n+(9300191, 0, 510, 2500, 0, 400000),\n+(9300192, 0, 477, 2330, 0, 400000),\n+(9300193, 0, 504, 2460, 0, 400000),\n+(9300194, 0, 555, 2710, 0, 400000),\n+(9300195, 0, 555, 2710, 0, 400000),\n+(9300196, 0, 555, 2710, 0, 400000),\n+(9300197, 0, 555, 2710, 0, 400000),\n+(9300198, 0, 510, 2500, 0, 400000),\n+(9300199, 0, 597, 2920, 0, 400000),\n+(9300200, 0, 606, 2960, 0, 400000),\n+(9300201, 0, 726, 3550, 0, 400000),\n+(9300202, 0, 657, 3210, 0, 400000),\n+(9300203, 0, 681, 3340, 0, 400000),\n+(9300204, 0, 708, 3460, 0, 400000),\n+(9300205, 0, 690, 3380, 0, 400000),\n+(9300206, 0, 726, 3550, 0, 400000),\n+(9300207, 0, 726, 3550, 0, 400000),\n+(9300208, 0, 1824, 11170, 0, 400000),\n+(9300209, 0, 1824, 11170, 0, 400000),\n+(9300210, 0, 2028, 12410, 0, 400000),\n+(9300211, 0, 2130, 13030, 0, 400000),\n+(9300212, 0, 2130, 13030, 0, 400000),\n+(9300213, 0, 2433, 14900, 0, 400000),\n+(9300214, 0, 2535, 15520, 0, 400000),\n+(9300215, 0, 3042, 18620, 0, 400000),\n+(9300217, 0, 5, 8, 0, 400000),\n+(9300218, 0, 11, 16, 0, 400000),\n+(9300219, 0, 11, 16, 0, 400000),\n+(9300220, 0, 48, 71, 0, 400000),\n+(9300221, 0, 71, 104, 0, 400000),\n+(9300222, 0, 79, 116, 0, 400000),\n+(9300223, 0, 17, 25, 0, 400000),\n+(9300224, 0, 105, 154, 0, 400000),\n+(9300225, 0, 105, 154, 0, 400000),\n+(9300226, 0, 113, 167, 0, 400000),\n+(9300227, 0, 105, 154, 0, 400000),\n+(9300228, 0, 136, 200, 0, 400000),\n+(9300229, 0, 22, 33, 0, 400000),\n+(9300230, 0, 116, 171, 0, 400000),\n+(9300231, 0, 131, 192, 0, 400000),\n+(9300232, 0, 96, 142, 0, 400000),\n+(9300233, 0, 113, 167, 0, 400000),\n+(9300234, 0, 91, 133, 0, 400000),\n+(9300235, 0, 148, 217, 0, 400000),\n+(9300236, 0, 159, 233, 0, 400000),\n+(9300237, 0, 168, 246, 0, 400000),\n+(9300238, 0, 68, 100, 0, 400000),\n+(9300239, 0, 119, 175, 0, 400000),\n+(9300240, 0, 128, 187, 0, 400000),\n+(9300241, 0, 193, 284, 0, 400000),\n+(9300242, 0, 199, 292, 0, 400000),\n+(9300243, 0, 159, 233, 0, 400000),\n+(9300244, 0, 159, 233, 0, 400000),\n+(9300245, 0, 170, 250, 0, 400000),\n+(9300246, 0, 176, 258, 0, 400000),\n+(9300247, 0, 185, 271, 0, 400000),\n+(9300248, 0, 187, 275, 0, 400000),\n+(9300249, 0, 199, 292, 0, 400000),\n+(9300250, 0, 213, 313, 0, 400000),\n+(9300251, 0, 207, 304, 0, 400000),\n+(9300252, 0, 128, 187, 0, 400000),\n+(9300253, 0, 142, 208, 0, 400000),\n+(9300254, 0, 207, 304, 0, 400000),\n+(9300255, 0, 133, 196, 0, 400000),\n+(9300256, 0, 170, 250, 0, 400000),\n+(9300257, 0, 170, 250, 0, 400000),\n+(9300258, 0, 185, 271, 0, 400000),\n+(9300259, 0, 56, 83, 0, 400000),\n+(9300260, 0, 227, 334, 0, 400000),\n+(9300261, 0, 250, 367, 0, 400000),\n+(9300262, 0, 250, 367, 0, 400000),\n+(9300263, 0, 250, 367, 0, 400000),\n+(9300264, 0, 696, 1279, 0, 400000),\n+(9300265, 0, 683, 1254, 0, 400000),\n+(9300266, 0, 606, 2960, 0, 400000),\n+(9300267, 0, 681, 3340, 0, 400000),\n+(9300268, 0, 606, 2960, 0, 400000),\n+(9300269, 0, 168, 830, 0, 400000),\n+(9300270, 0, 227, 334, 0, 400000),\n+(9300274, 0, 22, 33, 0, 400000),\n+(9300289, 0, 1824, 11170, 0, 400000),\n+(9300294, 0, 2028, 12410, 0, 400000),\n+(9300315, 0, 435, 2130, 0, 400000),\n+(9300316, 0, 450, 2210, 0, 400000),\n+(9300317, 0, 468, 2290, 0, 400000),\n+(9300318, 0, 486, 2380, 0, 400000),\n+(9300319, 0, 504, 2460, 0, 400000),\n+(9300320, 0, 519, 2540, 0, 400000),\n+(9300321, 0, 537, 2630, 0, 400000),\n+(9300322, 0, 555, 2710, 0, 400000),\n+(9300332, 0, 113, 167, 0, 400000),\n+(9300334, 0, 139, 204, 0, 400000),\n+(9300335, 0, 116, 171, 0, 400000),\n+(9300336, 0, 131, 192, 0, 400000),\n+(9300337, 0, 131, 192, 0, 400000),\n+(9300367, 0, 84, 410, 0, 400000),\n+(9300368, 0, 168, 830, 0, 400000),\n+(9300369, 0, 255, 1250, 0, 400000),\n+(9300370, 0, 339, 1670, 0, 400000),\n+(9300371, 0, 426, 2080, 0, 400000),\n+(9300372, 0, 510, 2500, 0, 400000),\n+(9300373, 0, 597, 2920, 0, 400000),\n+(9300374, 0, 681, 3340, 0, 400000),\n+(9300375, 0, 1824, 11170, 0, 400000),\n+(9300376, 0, 1824, 11170, 0, 400000),\n+(9300377, 0, 2229, 13660, 0, 400000),\n+(9303000, 0, 28, 41, 0, 400000),\n+(9303001, 0, 28, 41, 0, 400000),\n+(9303003, 0, 28, 41, 0, 400000),\n+(9303004, 0, 28, 41, 0, 400000),\n+(9303005, 0, 74, 108, 0, 400000),\n+(9303006, 0, 74, 108, 0, 400000),\n+(9303007, 0, 74, 108, 0, 400000),\n+(9303008, 0, 74, 108, 0, 400000),\n+(9303009, 0, 145, 213, 0, 400000),\n+(9303010, 0, 145, 213, 0, 400000),\n+(9303011, 0, 145, 213, 0, 400000),\n+(9303013, 0, 230, 338, 0, 400000),\n+(9303014, 0, 230, 338, 0, 400000),\n+(9303016, 0, 230, 338, 0, 400000),\n+(9400009, 0, 1352, 2483, 0, 400000),\n+(9400012, 0, 170, 250, 0, 400000),\n+(9400120, 0, 1926, 11790, 0, 400000),\n+(9400122, 0, 1926, 11790, 0, 400000),\n+(9400200, 0, 156, 229, 0, 400000),\n+(9400203, 0, 113, 167, 0, 400000),\n+(9400205, 0, 1824, 11170, 0, 400000),\n+(9400238, 0, 85, 125, 0, 400000),\n+(9400239, 0, 68, 100, 0, 400000),\n+(9400241, 0, 19, 29, 0, 400000),\n+(9400242, 0, 28, 41, 0, 400000),\n+(9400243, 0, 156, 229, 0, 400000),\n+(9400244, 0, 168, 246, 0, 400000),\n+(9400245, 0, 68, 100, 0, 400000),\n+(9400246, 0, 62, 91, 0, 400000),\n+(9400247, 0, 85, 125, 0, 400000),\n+(9400248, 0, 68, 100, 0, 400000),\n+(9400500, 0, 6, 40, 0, 400000),\n+(9400501, 0, 14, 20, 0, 400000),\n+(9400502, 0, 42, 200, 0, 400000),\n+(9400503, 0, 42, 200, 0, 400000),\n+(9400504, 0, 2, 4, 0, 400000),\n+(9400538, 0, 54, 79, 0, 400000),\n+(9400539, 0, 59, 87, 0, 400000),\n+(9400540, 0, 71, 104, 0, 400000),\n+(9400541, 0, 71, 104, 0, 400000),\n+(9400542, 0, 102, 150, 0, 400000),\n+(9400543, 0, 116, 171, 0, 400000),\n+(9400544, 0, 142, 208, 0, 400000),\n+(9400546, 0, 125, 183, 0, 400000),\n+(9400547, 0, 76, 112, 0, 400000),\n+(9400548, 0, 85, 125, 0, 400000),\n+(9400550, 0, 76, 112, 0, 400000),\n+(9400556, 0, 59, 87, 0, 400000),\n+(9400558, 0, 85, 125, 0, 400000),\n+(9400560, 0, 142, 208, 0, 400000),\n+(9400561, 0, 170, 250, 0, 400000),\n+(9400562, 0, 170, 250, 0, 400000),\n+(9400563, 0, 113, 167, 0, 400000),\n+(9400565, 0, 59, 87, 0, 400000),\n+(9400570, 0, 42, 62, 0, 400000),\n+(9400571, 0, 426, 2080, 0, 400000),\n+(9400573, 0, 113, 167, 0, 400000),\n+(9400574, 0, 676, 1241, 0, 400000),\n+(9400576, 0, 199, 292, 0, 400000),\n+(9400578, 0, 608, 1117, 0, 400000),\n+(9400579, 0, 676, 1241, 0, 400000),\n+(9400580, 0, 642, 1179, 0, 400000),\n+(9400581, 0, 227, 334, 0, 400000),\n+(9400582, 0, 811, 1490, 0, 400000),\n+(9400609, 0, 213, 1040, 0, 400000),\n+(9400612, 0, 213, 1040, 0, 400000),\n+(9400633, 0, 273, 1330, 0, 400000),\n+(9400644, 0, 28, 41, 0, 400000),\n+(9410014, 0, 242, 355, 0, 400000),\n+(9410015, 0, 726, 3550, 0, 400000),\n+(9420507, 0, 136, 200, 0, 400000),\n+(9420527, 0, 128, 187, 0, 400000),\n+(9420528, 0, 133, 196, 0, 400000),\n+(9420529, 0, 148, 217, 0, 400000),\n+(9420530, 0, 159, 233, 0, 400000),\n+(9420531, 0, 168, 246, 0, 400000),\n+(9420532, 0, 168, 246, 0, 400000),\n+(9420533, 0, 173, 254, 0, 400000),\n+(9420534, 0, 185, 271, 0, 400000),\n+(9420535, 0, 193, 284, 0, 400000),\n+(9420536, 0, 205, 300, 0, 400000),\n+(9420537, 0, 213, 313, 0, 400000),\n+(9420538, 0, 233, 342, 0, 400000),\n+(9420539, 0, 247, 363, 0, 400000),\n+(9420545, 0, 168, 246, 0, 400000),\n+(9420550, 0, 168, 246, 0, 400000),\n+(9500101, 0, 19, 29, 0, 400000),\n+(9500102, 0, 22, 33, 0, 400000),\n+(9500103, 0, 42, 62, 0, 400000),\n+(9500104, 0, 34, 50, 0, 400000),\n+(9500105, 0, 42, 62, 0, 400000),\n+(9500106, 0, 62, 91, 0, 400000),\n+(9500107, 0, 85, 125, 0, 400000),\n+(9500108, 0, 91, 133, 0, 400000),\n+(9500109, 0, 91, 133, 0, 400000),\n+(9500110, 0, 99, 146, 0, 400000),\n+(9500111, 0, 99, 146, 0, 400000),\n+(9500112, 0, 99, 146, 0, 400000),\n+(9500113, 0, 102, 150, 0, 400000),\n+(9500115, 0, 105, 154, 0, 400000),\n+(9500116, 0, 113, 167, 0, 400000),\n+(9500117, 0, 102, 150, 0, 400000),\n+(9500118, 0, 111, 162, 0, 400000),\n+(9500119, 0, 111, 162, 0, 400000),\n+(9500120, 0, 128, 187, 0, 400000),\n+(9500121, 0, 136, 200, 0, 400000),\n+(9500122, 0, 139, 204, 0, 400000),\n+(9500123, 0, 168, 246, 0, 400000),\n+(9500124, 0, 510, 2500, 0, 400000),\n+(9500125, 0, 170, 250, 0, 400000),\n+(9500126, 0, 182, 267, 0, 400000),\n+(9500127, 0, 190, 279, 0, 400000),\n+(9500128, 0, 193, 284, 0, 400000),\n+(9500129, 0, 199, 292, 0, 400000),\n+(9500130, 0, 597, 2920, 0, 400000),\n+(9500131, 0, 207, 304, 0, 400000),\n+(9500132, 0, 213, 313, 0, 400000),\n+(9500134, 0, 227, 334, 0, 400000),\n+(9500135, 0, 242, 355, 0, 400000),\n+(9500136, 0, 662, 1217, 0, 400000),\n+(9500137, 0, 642, 1179, 0, 400000),\n+(9500138, 0, 608, 1117, 0, 400000),\n+(9500139, 0, 681, 3340, 0, 400000),\n+(9500140, 0, 2028, 12410, 0, 400000),\n+(9500156, 0, 136, 200, 0, 400000),\n+(9500157, 0, 99, 146, 0, 400000),\n+(9500158, 0, 597, 2920, 0, 400000),\n+(9500159, 0, 597, 2920, 0, 400000),\n+(9500160, 0, 597, 2920, 0, 400000),\n+(9500161, 0, 227, 334, 0, 400000),\n+(9500162, 0, 227, 334, 0, 400000),\n+(9500163, 0, 236, 346, 0, 400000),\n+(9500164, 0, 250, 367, 0, 400000),\n+(9500165, 0, 250, 367, 0, 400000),\n+(9500166, 0, 250, 367, 0, 400000),\n+(9500178, 0, 113, 167, 0, 400000),\n+(9500180, 0, 1824, 11170, 0, 400000),\n+(9500181, 0, 1824, 11170, 0, 400000),\n+(9500306, 0, 168, 830, 0, 400000),\n+(9500307, 0, 297, 1460, 0, 400000),\n+(9500308, 0, 426, 2080, 0, 400000),\n+(9500309, 0, 468, 2290, 0, 400000),\n+(9500310, 0, 504, 2460, 0, 400000),\n+(9500311, 0, 555, 2710, 0, 400000),\n+(9500312, 0, 597, 2920, 0, 400000),\n+(9500313, 0, 606, 2960, 0, 400000),\n+(9500314, 0, 657, 3210, 0, 400000),\n+(9500317, 0, 84, 410, 0, 400000),\n+(9500318, 0, 339, 1670, 0, 400000),\n+(9500319, 0, 597, 2920, 0, 400000),\n+(9500321, 0, 28, 41, 0, 400000),\n+(9500326, 0, 384, 1870, 0, 400000),\n+(9500327, 0, 255, 1250, 0, 400000),\n+(9500328, 0, 297, 1460, 0, 400000),\n+(9500331, 0, 468, 2290, 0, 400000),\n+(9500332, 0, 384, 1870, 0, 400000),\n+(9500333, 0, 426, 2080, 0, 400000),\n+(9500334, 0, 468, 2290, 0, 400000),\n+(9500335, 0, 426, 2080, 0, 400000),\n+(9500366, 0, 42, 62, 0, 400000),\n+(9500367, 0, 42, 62, 0, 400000),\n+(9500368, 0, 42, 62, 0, 400000),\n+(9500369, 0, 42, 62, 0, 400000),\n+(9500370, 0, 42, 62, 0, 400000),\n+(9500371, 0, 42, 62, 0, 400000),\n+(9500372, 0, 42, 62, 0, 400000);\n+\n+  DELETE FROM drop_data WHERE dropperid >= 9300184 AND dropperid <= 9300215 AND itemid = 0;\n+\n+  # MapleArrowFetcher! Set proper arrow quantity drop for them mobs.\n+UPDATE drop_data\n+SET minimum_quantity = CASE\n+                       WHEN dropperid = 100100 AND itemid = 2060000 THEN 1\n+                       WHEN dropperid = 100100 AND itemid = 2061000 THEN 1\n+                       WHEN dropperid = 100101 AND itemid = 2060000 THEN 3\n+                       WHEN dropperid = 100101 AND itemid = 2061000 THEN 3\n+                       WHEN dropperid = 100120 AND itemid = 2060000 THEN 1\n+                       WHEN dropperid = 100120 AND itemid = 2061000 THEN 1\n+                       WHEN dropperid = 100121 AND itemid = 2060000 THEN 5\n+                       WHEN dropperid = 100123 AND itemid = 2061000 THEN 13\n+                       WHEN dropperid = 100124 AND itemid = 2060000 THEN 17\n+                       WHEN dropperid = 100124 AND itemid = 2061000 THEN 17\n+                       WHEN dropperid = 120100 AND itemid = 2060000 THEN 3\n+                       WHEN dropperid = 120100 AND itemid = 2061000 THEN 3\n+                       WHEN dropperid = 130100 AND itemid = 2060000 THEN 7\n+                       WHEN dropperid = 130100 AND itemid = 2061000 THEN 7\n+                       WHEN dropperid = 130101 AND itemid = 2060000 THEN 7\n+                       WHEN dropperid = 130101 AND itemid = 2061000 THEN 7\n+                       WHEN dropperid = 210100 AND itemid = 2060000 THEN 11\n+                       WHEN dropperid = 210100 AND itemid = 2061000 THEN 11\n+                       WHEN dropperid = 1110100 AND itemid = 2060000 THEN 29\n+                       WHEN dropperid = 1110100 AND itemid = 2061000 THEN 29\n+                       WHEN dropperid = 1110101 AND itemid = 2060000 THEN 19\n+                       WHEN dropperid = 1110101 AND itemid = 2061000 THEN 19\n+                       WHEN dropperid = 1110130 AND itemid = 2060000 THEN 29\n+                       WHEN dropperid = 1110130 AND itemid = 2061000 THEN 29\n+                       WHEN dropperid = 1120100 AND itemid = 2060000 THEN 23\n+                       WHEN dropperid = 1120100 AND itemid = 2061000 THEN 23\n+                       WHEN dropperid = 1130100 AND itemid = 2060000 THEN 33\n+                       WHEN dropperid = 1130100 AND itemid = 2061000 THEN 33\n+                       WHEN dropperid = 1140100 AND itemid = 2060000 THEN 36\n+                       WHEN dropperid = 1140100 AND itemid = 2061000 THEN 36\n+                       WHEN dropperid = 1140130 AND itemid = 2060000 THEN 36\n+                       WHEN dropperid = 1140130 AND itemid = 2061000 THEN 36\n+                       WHEN dropperid = 1210100 AND itemid = 2060000 THEN 13\n+                       WHEN dropperid = 1210100 AND itemid = 2061000 THEN 13\n+                       WHEN dropperid = 1210101 AND itemid = 2060000 THEN 19\n+                       WHEN dropperid = 1210101 AND itemid = 2061000 THEN 19\n+                       WHEN dropperid = 1210102 AND itemid = 2060000 THEN 15\n+                       WHEN dropperid = 1210102 AND itemid = 2061000 THEN 15\n+                       WHEN dropperid = 1210103 AND itemid = 2060000 THEN 29\n+                       WHEN dropperid = 1210103 AND itemid = 2061000 THEN 29\n+                       WHEN dropperid = 2100100 AND itemid = 2060000 THEN 38\n+                       WHEN dropperid = 2100100 AND itemid = 2061000 THEN 38\n+                       WHEN dropperid = 2100101 AND itemid = 2060000 THEN 40\n+                       WHEN dropperid = 2100101 AND itemid = 2061000 THEN 40\n+                       WHEN dropperid = 2100102 AND itemid = 2060000 THEN 42\n+                       WHEN dropperid = 2100102 AND itemid = 2061000 THEN 42\n+                       WHEN dropperid = 2100103 AND itemid = 2060000 THEN 48\n+                       WHEN dropperid = 2100103 AND itemid = 2061000 THEN 48\n+                       WHEN dropperid = 2100104 AND itemid = 2060000 THEN 54\n+                       WHEN dropperid = 2100104 AND itemid = 2061000 THEN 54\n+                       WHEN dropperid = 2100105 AND itemid = 2060000 THEN 44\n+                       WHEN dropperid = 2100105 AND itemid = 2061000 THEN 44\n+                       WHEN dropperid = 2100106 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2100106 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2100107 AND itemid = 2060000 THEN 52\n+                       WHEN dropperid = 2100107 AND itemid = 2061000 THEN 52\n+                       WHEN dropperid = 2100108 AND itemid = 2060000 THEN 56\n+                       WHEN dropperid = 2100108 AND itemid = 2061000 THEN 56\n+                       WHEN dropperid = 2110200 AND itemid = 2060000 THEN 42\n+                       WHEN dropperid = 2110200 AND itemid = 2061000 THEN 42\n+                       WHEN dropperid = 2110300 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2110300 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2110301 AND itemid = 2060000 THEN 56\n+                       WHEN dropperid = 2110301 AND itemid = 2061000 THEN 56\n+                       WHEN dropperid = 2130100 AND itemid = 2060000 THEN 42\n+                       WHEN dropperid = 2130100 AND itemid = 2061000 THEN 42\n+                       WHEN dropperid = 2220000 AND itemid = 2060000 THEN 54\n+                       WHEN dropperid = 2220000 AND itemid = 2061000 THEN 54\n+                       WHEN dropperid = 2220100 AND itemid = 2060000 THEN 38\n+                       WHEN dropperid = 2220100 AND itemid = 2061000 THEN 38\n+                       WHEN dropperid = 2230100 AND itemid = 2060000 THEN 52\n+                       WHEN dropperid = 2230100 AND itemid = 2061000 THEN 52\n+                       WHEN dropperid = 2230101 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2230101 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2230102 AND itemid = 2060000 THEN 48\n+                       WHEN dropperid = 2230102 AND itemid = 2061000 THEN 48\n+                       WHEN dropperid = 2230103 AND itemid = 2060000 THEN 44\n+                       WHEN dropperid = 2230103 AND itemid = 2061000 THEN 44\n+                       WHEN dropperid = 2230104 AND itemid = 2060000 THEN 54\n+                       WHEN dropperid = 2230104 AND itemid = 2061000 THEN 54\n+                       WHEN dropperid = 2230105 AND itemid = 2060000 THEN 44\n+                       WHEN dropperid = 2230105 AND itemid = 2061000 THEN 44\n+                       WHEN dropperid = 2230106 AND itemid = 2060000 THEN 48\n+                       WHEN dropperid = 2230106 AND itemid = 2061000 THEN 48\n+                       WHEN dropperid = 2230107 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2230107 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2230108 AND itemid = 2060000 THEN 42\n+                       WHEN dropperid = 2230108 AND itemid = 2061000 THEN 42\n+                       WHEN dropperid = 2230109 AND itemid = 2060000 THEN 54\n+                       WHEN dropperid = 2230109 AND itemid = 2061000 THEN 54\n+                       WHEN dropperid = 2230110 AND itemid = 2060000 THEN 44\n+                       WHEN dropperid = 2230110 AND itemid = 2061000 THEN 44\n+                       WHEN dropperid = 2230111 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2230111 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2230131 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2230131 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2230200 AND itemid = 2060000 THEN 56\n+                       WHEN dropperid = 2230200 AND itemid = 2061000 THEN 56\n+                       WHEN dropperid = 2300100 AND itemid = 2060000 THEN 38\n+                       WHEN dropperid = 2300100 AND itemid = 2061000 THEN 38\n+                       WHEN dropperid = 3000000 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3000000 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3000005 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3000005 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3000006 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3000006 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3100101 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3100101 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3100102 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3100102 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3110101 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3110101 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3110102 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3110102 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3110300 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3110300 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3110301 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3110301 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3110302 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3110302 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3110303 AND itemid = 2060000 THEN 73\n+                       WHEN dropperid = 3110303 AND itemid = 2061000 THEN 73\n+                       WHEN dropperid = 3210100 AND itemid = 2060005 THEN 10\n+                       WHEN dropperid = 3210203 AND itemid = 2060000 THEN 70\n+                       WHEN dropperid = 3210203 AND itemid = 2061000 THEN 70\n+                       WHEN dropperid = 3210204 AND itemid = 2060000 THEN 66\n+                       WHEN dropperid = 3210204 AND itemid = 2061000 THEN 66\n+                       WHEN dropperid = 3210205 AND itemid = 2060000 THEN 66\n+                       WHEN dropperid = 3210205 AND itemid = 2061000 THEN 66\n+                       WHEN dropperid = 3210206 AND itemid = 2060000 THEN 70\n+                       WHEN dropperid = 3210206 AND itemid = 2061000 THEN 70\n+                       WHEN dropperid = 3210207 AND itemid = 2060000 THEN 66\n+                       WHEN dropperid = 3210207 AND itemid = 2060005 THEN 11\n+                       WHEN dropperid = 3210207 AND itemid = 2061000 THEN 66\n+                       WHEN dropperid = 3210208 AND itemid = 2060000 THEN 70\n+                       WHEN dropperid = 3210208 AND itemid = 2061000 THEN 70\n+                       WHEN dropperid = 3210450 AND itemid = 2060000 THEN 70\n+                       WHEN dropperid = 3210450 AND itemid = 2061000 THEN 70\n+                       WHEN dropperid = 3210800 AND itemid = 2060005 THEN 12\n+                       WHEN dropperid = 3220000 AND itemid = 2060000 THEN 95\n+                       WHEN dropperid = 3220000 AND itemid = 2061000 THEN 95\n+                       WHEN dropperid = 3230100 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3230100 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3230103 AND itemid = 2060000 THEN 73\n+                       WHEN dropperid = 3230103 AND itemid = 2061000 THEN 73\n+                       WHEN dropperid = 3230200 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3230200 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3230302 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3230302 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3230303 AND itemid = 2060000 THEN 72\n+                       WHEN dropperid = 3230303 AND itemid = 2061000 THEN 72\n+                       WHEN dropperid = 3230304 AND itemid = 2060000 THEN 73\n+                       WHEN dropperid = 3230304 AND itemid = 2061000 THEN 73\n+                       WHEN dropperid = 3230305 AND itemid = 2060000 THEN 75\n+                       WHEN dropperid = 3230305 AND itemid = 2061000 THEN 75\n+                       WHEN dropperid = 3230306 AND itemid = 2060000 THEN 72\n+                       WHEN dropperid = 3230306 AND itemid = 2061000 THEN 72\n+                       WHEN dropperid = 3230307 AND itemid = 2060000 THEN 60\n+                       WHEN dropperid = 3230307 AND itemid = 2061000 THEN 60\n+                       WHEN dropperid = 3230308 AND itemid = 2060000 THEN 75\n+                       WHEN dropperid = 3230308 AND itemid = 2061000 THEN 75\n+                       WHEN dropperid = 3230400 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3230400 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3230405 AND itemid = 2060000 THEN 73\n+                       WHEN dropperid = 3230405 AND itemid = 2061000 THEN 73\n+                       WHEN dropperid = 3300000 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3300000 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3300001 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3300001 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3300002 AND itemid = 2060000 THEN 60\n+                       WHEN dropperid = 3300002 AND itemid = 2061000 THEN 60\n+                       WHEN dropperid = 3300003 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3300003 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3300004 AND itemid = 2060000 THEN 64\n+                       WHEN dropperid = 3300004 AND itemid = 2061000 THEN 64\n+                       WHEN dropperid = 3300006 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3300006 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3300007 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3300007 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3300008 AND itemid = 2060000 THEN 103\n+                       WHEN dropperid = 3300008 AND itemid = 2061000 THEN 103\n+                       WHEN dropperid = 4110300 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 4110300 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 4110301 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4110301 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4130103 AND itemid = 2060000 THEN 128\n+                       WHEN dropperid = 4130103 AND itemid = 2061000 THEN 128\n+                       WHEN dropperid = 4230103 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 4230103 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 4230106 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230106 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230108 AND itemid = 2060000 THEN 83\n+                       WHEN dropperid = 4230108 AND itemid = 2061000 THEN 83\n+                       WHEN dropperid = 4230109 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 4230109 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 4230110 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230110 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230111 AND itemid = 2060000 THEN 79\n+                       WHEN dropperid = 4230111 AND itemid = 2061000 THEN 79\n+                       WHEN dropperid = 4230112 AND itemid = 2060000 THEN 85\n+                       WHEN dropperid = 4230112 AND itemid = 2061000 THEN 85\n+                       WHEN dropperid = 4230113 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 4230113 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 4230114 AND itemid = 2060000 THEN 79\n+                       WHEN dropperid = 4230114 AND itemid = 2061000 THEN 79\n+                       WHEN dropperid = 4230115 AND itemid = 2060000 THEN 89\n+                       WHEN dropperid = 4230115 AND itemid = 2061000 THEN 89\n+                       WHEN dropperid = 4230116 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 4230116 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 4230117 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 4230117 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 4230118 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230118 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230119 AND itemid = 2060000 THEN 79\n+                       WHEN dropperid = 4230119 AND itemid = 2061000 THEN 79\n+                       WHEN dropperid = 4230120 AND itemid = 2060000 THEN 85\n+                       WHEN dropperid = 4230120 AND itemid = 2061000 THEN 85\n+                       WHEN dropperid = 4230121 AND itemid = 2060000 THEN 89\n+                       WHEN dropperid = 4230121 AND itemid = 2061000 THEN 89\n+                       WHEN dropperid = 4230123 AND itemid = 2060000 THEN 83\n+                       WHEN dropperid = 4230123 AND itemid = 2061000 THEN 83\n+                       WHEN dropperid = 4230124 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 4230124 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 4230125 AND itemid = 2060000 THEN 85\n+                       WHEN dropperid = 4230125 AND itemid = 2061000 THEN 85\n+                       WHEN dropperid = 4230126 AND itemid = 2060000 THEN 91\n+                       WHEN dropperid = 4230126 AND itemid = 2061000 THEN 91\n+                       WHEN dropperid = 4230201 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 4230201 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 4230300 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230300 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230400 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230400 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230500 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 4230500 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 4230501 AND itemid = 2060000 THEN 79\n+                       WHEN dropperid = 4230501 AND itemid = 2061000 THEN 79\n+                       WHEN dropperid = 4230502 AND itemid = 2060000 THEN 83\n+                       WHEN dropperid = 4230502 AND itemid = 2061000 THEN 83\n+                       WHEN dropperid = 4230503 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230503 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230504 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230504 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230600 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 4230600 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 4240000 AND itemid = 2060000 THEN 95\n+                       WHEN dropperid = 4240000 AND itemid = 2061000 THEN 95\n+                       WHEN dropperid = 5120100 AND itemid = 2060000 THEN 147\n+                       WHEN dropperid = 5120100 AND itemid = 2061000 THEN 147\n+                       WHEN dropperid = 5130104 AND itemid = 2060000 THEN 107\n+                       WHEN dropperid = 5130104 AND itemid = 2061000 THEN 107\n+                       WHEN dropperid = 5140000 AND itemid = 2060000 THEN 112\n+                       WHEN dropperid = 5140000 AND itemid = 2061000 THEN 112\n+                       WHEN dropperid = 5150000 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 5150000 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 5200000 AND itemid = 2060001 THEN 22\n+                       WHEN dropperid = 5200000 AND itemid = 2061001 THEN 22\n+                       WHEN dropperid = 5200001 AND itemid = 2060001 THEN 29\n+                       WHEN dropperid = 5200001 AND itemid = 2061001 THEN 29\n+                       WHEN dropperid = 5200002 AND itemid = 2060001 THEN 29\n+                       WHEN dropperid = 5200002 AND itemid = 2061001 THEN 29\n+                       WHEN dropperid = 5220000 AND itemid = 2060000 THEN 149\n+                       WHEN dropperid = 5220000 AND itemid = 2061000 THEN 149\n+                       WHEN dropperid = 5220002 AND itemid = 2060000 THEN 136\n+                       WHEN dropperid = 5220002 AND itemid = 2061000 THEN 136\n+                       WHEN dropperid = 5220003 AND itemid = 2060000 THEN 160\n+                       WHEN dropperid = 5220003 AND itemid = 2061000 THEN 160\n+                       WHEN dropperid = 5400000 AND itemid = 2060001 THEN 34\n+                       WHEN dropperid = 5400000 AND itemid = 2061001 THEN 34\n+                       WHEN dropperid = 6220000 AND itemid = 2060000 THEN 177\n+                       WHEN dropperid = 6220000 AND itemid = 2061000 THEN 177\n+                       WHEN dropperid = 7120103 AND itemid = 2060003 THEN 34\n+                       WHEN dropperid = 7220000 AND itemid = 2060001 THEN 96\n+                       WHEN dropperid = 7220000 AND itemid = 2061001 THEN 96\n+                       WHEN dropperid = 7220001 AND itemid = 2060001 THEN 95\n+                       WHEN dropperid = 7220001 AND itemid = 2061001 THEN 95\n+                       WHEN dropperid = 7220002 AND itemid = 2060001 THEN 104\n+                       WHEN dropperid = 7220002 AND itemid = 2061001 THEN 104\n+                       WHEN dropperid = 8220000 AND itemid = 2060001 THEN 113\n+                       WHEN dropperid = 8220000 AND itemid = 2061001 THEN 113\n+                       WHEN dropperid = 8220001 AND itemid = 2060001 THEN 122\n+                       WHEN dropperid = 8220001 AND itemid = 2061001 THEN 122\n+                       WHEN dropperid = 9300011 AND itemid = 2060000 THEN 75\n+                       WHEN dropperid = 9300011 AND itemid = 2061000 THEN 75\n+                       WHEN dropperid = 9300060 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 9300060 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 9300131 AND itemid = 2060000 THEN 75\n+                       WHEN dropperid = 9300131 AND itemid = 2061000 THEN 75\n+                       WHEN dropperid = 9300132 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 9300132 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 9300133 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 9300160 AND itemid = 2060000 THEN 122\n+                       WHEN dropperid = 9300160 AND itemid = 2061000 THEN 122\n+                       WHEN dropperid = 9300161 AND itemid = 2060000 THEN 122\n+                       WHEN dropperid = 9300161 AND itemid = 2061000 THEN 122\n+                       WHEN dropperid = 9300274 AND itemid = 2060000 THEN 15\n+                       WHEN dropperid = 9300274 AND itemid = 2061000 THEN 15\n+                       WHEN dropperid = 9300332 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 9300334 AND itemid = 2060000 THEN 95\n+                       WHEN dropperid = 9300341 AND itemid = 2060000 THEN 11\n+                       WHEN dropperid = 9300341 AND itemid = 2061000 THEN 11\n+                       WHEN dropperid = 9300342 AND itemid = 2060000 THEN 15\n+                       WHEN dropperid = 9300342 AND itemid = 2061000 THEN 15\n+                       WHEN dropperid = 9300343 AND itemid = 2060000 THEN 13\n+                       WHEN dropperid = 9300343 AND itemid = 2061000 THEN 13\n+                       WHEN dropperid = 9303005 AND itemid = 2060001 THEN 25\n+                       WHEN dropperid = 9303005 AND itemid = 2061001 THEN 25\n+                       WHEN dropperid = 9303008 AND itemid = 2060001 THEN 25\n+                       WHEN dropperid = 9303008 AND itemid = 2061001 THEN 25\n+                       WHEN dropperid = 9303009 AND itemid = 2060001 THEN 49\n+                       WHEN dropperid = 9303009 AND itemid = 2061001 THEN 49\n+                       WHEN dropperid = 9400000 AND itemid = 2060001 THEN 24\n+                       WHEN dropperid = 9400009 AND itemid = 2060001 THEN 194\n+                       WHEN dropperid = 9400011 AND itemid = 2060002 THEN 25\n+                       WHEN dropperid = 9400100 AND itemid = 2060003 THEN 21\n+                       WHEN dropperid = 9400101 AND itemid = 2061003 THEN 22\n+                       WHEN dropperid = 9400204 AND itemid = 2060003 THEN 26\n+                       WHEN dropperid = 9400239 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 9400239 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 9400244 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 9400244 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 9400248 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 9400248 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 9400540 AND itemid = 2060004 THEN 9\n+                       WHEN dropperid = 9400540 AND itemid = 2061004 THEN 9\n+                       WHEN dropperid = 9400541 AND itemid = 2060004 THEN 9\n+                       WHEN dropperid = 9400541 AND itemid = 2061004 THEN 9\n+                       WHEN dropperid = 9400542 AND itemid = 2060004 THEN 14\n+                       WHEN dropperid = 9400542 AND itemid = 2061004 THEN 14\n+                       WHEN dropperid = 9400543 AND itemid = 2060004 THEN 15\n+                       WHEN dropperid = 9400543 AND itemid = 2061004 THEN 15\n+                       WHEN dropperid = 9400547 AND itemid = 2060000 THEN 52\n+                       WHEN dropperid = 9400547 AND itemid = 2061000 THEN 52\n+                       WHEN dropperid = 9400548 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 9400548 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 9400550 AND itemid = 2060000 THEN 52\n+                       WHEN dropperid = 9400550 AND itemid = 2061000 THEN 52\n+                       WHEN dropperid = 9400558 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 9400558 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 9400563 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 9400563 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 9400638 AND itemid = 2060000 THEN 38\n+                       WHEN dropperid = 9400638 AND itemid = 2061000 THEN 38\n+                       WHEN dropperid = 9420500 AND itemid = 2060000 THEN 54\n+                       WHEN dropperid = 9420500 AND itemid = 2061000 THEN 54\n+                       WHEN dropperid = 9420502 AND itemid = 2060000 THEN 35\n+                       WHEN dropperid = 9420502 AND itemid = 2061000 THEN 35\n+                       WHEN dropperid = 9420506 AND itemid = 2060000 THEN 44\n+                       WHEN dropperid = 9420506 AND itemid = 2061000 THEN 44\n+                       WHEN dropperid = 9420508 AND itemid = 2060000 THEN 83\n+                       WHEN dropperid = 9420508 AND itemid = 2061000 THEN 83\n+                       WHEN dropperid = 9420527 AND itemid = 2060001 THEN 43\n+                       WHEN dropperid = 9420527 AND itemid = 2061001 THEN 43\n+                       WHEN dropperid = 9420531 AND itemid = 2060001 THEN 57\n+                       WHEN dropperid = 9420531 AND itemid = 2061001 THEN 57\n+                       WHEN dropperid = 9500112 AND itemid = 2060001 THEN 34\n+                       WHEN dropperid = 9500112 AND itemid = 2061001 THEN 34\n+                       WHEN dropperid = 9500119 AND itemid = 2060000 THEN 75\n+                       WHEN dropperid = 9500119 AND itemid = 2061000 THEN 75\n+                       WHEN dropperid = 9500120 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 9500120 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 9500122 AND itemid = 2060000 THEN 95\n+                       WHEN dropperid = 9500123 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 9500123 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 9500308 AND itemid = 2060000 THEN 136\n+                       WHEN dropperid = 9500308 AND itemid = 2061000 THEN 136\n+                       WHEN dropperid = 9500310 AND itemid = 2060000 THEN 160\n+                       WHEN dropperid = 9500310 AND itemid = 2061000 THEN 160\n+                       WHEN dropperid = 9500312 AND itemid = 2060001 THEN 95\n+                       WHEN dropperid = 9500312 AND itemid = 2061001 THEN 95\n+                       WHEN dropperid = 9500313 AND itemid = 2060001 THEN 96\n+                       WHEN dropperid = 9500313 AND itemid = 2061001 THEN 96\n+                       WHEN dropperid = 9500314 AND itemid = 2060001 THEN 104\n+                       WHEN dropperid = 9500314 AND itemid = 2061001 THEN 104\n+                       WHEN dropperid = 9500321 AND itemid = 2060001 THEN 9\n+                       WHEN dropperid = 9500321 AND itemid = 2061001 THEN 9\n+                       WHEN dropperid = 9500366 AND itemid = 2060000 THEN 29\n+                       WHEN dropperid = 9500369 AND itemid = 2060000 THEN 29\n+  ELSE minimum_quantity END,\n+    maximum_quantity = CASE\n+                       WHEN dropperid = 100100 AND itemid = 2060000 THEN 3\n+                       WHEN dropperid = 100100 AND itemid = 2061000 THEN 3\n+                       WHEN dropperid = 100101 AND itemid = 2060000 THEN 9\n+                       WHEN dropperid = 100101 AND itemid = 2061000 THEN 9\n+                       WHEN dropperid = 100120 AND itemid = 2060000 THEN 3\n+                       WHEN dropperid = 100120 AND itemid = 2061000 THEN 3\n+                       WHEN dropperid = 100121 AND itemid = 2060000 THEN 15\n+                       WHEN dropperid = 100123 AND itemid = 2061000 THEN 39\n+                       WHEN dropperid = 100124 AND itemid = 2060000 THEN 51\n+                       WHEN dropperid = 100124 AND itemid = 2061000 THEN 51\n+                       WHEN dropperid = 120100 AND itemid = 2060000 THEN 9\n+                       WHEN dropperid = 120100 AND itemid = 2061000 THEN 9\n+                       WHEN dropperid = 130100 AND itemid = 2060000 THEN 21\n+                       WHEN dropperid = 130100 AND itemid = 2061000 THEN 21\n+                       WHEN dropperid = 130101 AND itemid = 2060000 THEN 21\n+                       WHEN dropperid = 130101 AND itemid = 2061000 THEN 21\n+                       WHEN dropperid = 210100 AND itemid = 2060000 THEN 33\n+                       WHEN dropperid = 210100 AND itemid = 2061000 THEN 33\n+                       WHEN dropperid = 1110100 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 1110100 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 1110101 AND itemid = 2060000 THEN 57\n+                       WHEN dropperid = 1110101 AND itemid = 2061000 THEN 57\n+                       WHEN dropperid = 1110130 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 1110130 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 1120100 AND itemid = 2060000 THEN 69\n+                       WHEN dropperid = 1120100 AND itemid = 2061000 THEN 69\n+                       WHEN dropperid = 1130100 AND itemid = 2060000 THEN 99\n+                       WHEN dropperid = 1130100 AND itemid = 2061000 THEN 99\n+                       WHEN dropperid = 1140100 AND itemid = 2060000 THEN 108\n+                       WHEN dropperid = 1140100 AND itemid = 2061000 THEN 108\n+                       WHEN dropperid = 1140130 AND itemid = 2060000 THEN 108\n+                       WHEN dropperid = 1140130 AND itemid = 2061000 THEN 108\n+                       WHEN dropperid = 1210100 AND itemid = 2060000 THEN 39\n+                       WHEN dropperid = 1210100 AND itemid = 2061000 THEN 39\n+                       WHEN dropperid = 1210101 AND itemid = 2060000 THEN 57\n+                       WHEN dropperid = 1210101 AND itemid = 2061000 THEN 57\n+                       WHEN dropperid = 1210102 AND itemid = 2060000 THEN 45\n+                       WHEN dropperid = 1210102 AND itemid = 2061000 THEN 45\n+                       WHEN dropperid = 1210103 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 1210103 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 2100100 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 2100100 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 2100101 AND itemid = 2060000 THEN 120\n+                       WHEN dropperid = 2100101 AND itemid = 2061000 THEN 120\n+                       WHEN dropperid = 2100102 AND itemid = 2060000 THEN 126\n+                       WHEN dropperid = 2100102 AND itemid = 2061000 THEN 126\n+                       WHEN dropperid = 2100103 AND itemid = 2060000 THEN 144\n+                       WHEN dropperid = 2100103 AND itemid = 2061000 THEN 144\n+                       WHEN dropperid = 2100104 AND itemid = 2060000 THEN 162\n+                       WHEN dropperid = 2100104 AND itemid = 2061000 THEN 162\n+                       WHEN dropperid = 2100105 AND itemid = 2060000 THEN 132\n+                       WHEN dropperid = 2100105 AND itemid = 2061000 THEN 132\n+                       WHEN dropperid = 2100106 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2100106 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2100107 AND itemid = 2060000 THEN 156\n+                       WHEN dropperid = 2100107 AND itemid = 2061000 THEN 156\n+                       WHEN dropperid = 2100108 AND itemid = 2060000 THEN 168\n+                       WHEN dropperid = 2100108 AND itemid = 2061000 THEN 168\n+                       WHEN dropperid = 2110200 AND itemid = 2060000 THEN 126\n+                       WHEN dropperid = 2110200 AND itemid = 2061000 THEN 126\n+                       WHEN dropperid = 2110300 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2110300 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2110301 AND itemid = 2060000 THEN 168\n+                       WHEN dropperid = 2110301 AND itemid = 2061000 THEN 168\n+                       WHEN dropperid = 2130100 AND itemid = 2060000 THEN 126\n+                       WHEN dropperid = 2130100 AND itemid = 2061000 THEN 126\n+                       WHEN dropperid = 2220000 AND itemid = 2060000 THEN 162\n+                       WHEN dropperid = 2220000 AND itemid = 2061000 THEN 162\n+                       WHEN dropperid = 2220100 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 2220100 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 2230100 AND itemid = 2060000 THEN 156\n+                       WHEN dropperid = 2230100 AND itemid = 2061000 THEN 156\n+                       WHEN dropperid = 2230101 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2230101 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2230102 AND itemid = 2060000 THEN 144\n+                       WHEN dropperid = 2230102 AND itemid = 2061000 THEN 144\n+                       WHEN dropperid = 2230103 AND itemid = 2060000 THEN 132\n+                       WHEN dropperid = 2230103 AND itemid = 2061000 THEN 132\n+                       WHEN dropperid = 2230104 AND itemid = 2060000 THEN 162\n+                       WHEN dropperid = 2230104 AND itemid = 2061000 THEN 162\n+                       WHEN dropperid = 2230105 AND itemid = 2060000 THEN 132\n+                       WHEN dropperid = 2230105 AND itemid = 2061000 THEN 132\n+                       WHEN dropperid = 2230106 AND itemid = 2060000 THEN 144\n+                       WHEN dropperid = 2230106 AND itemid = 2061000 THEN 144\n+                       WHEN dropperid = 2230107 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2230107 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2230108 AND itemid = 2060000 THEN 126\n+                       WHEN dropperid = 2230108 AND itemid = 2061000 THEN 126\n+                       WHEN dropperid = 2230109 AND itemid = 2060000 THEN 162\n+                       WHEN dropperid = 2230109 AND itemid = 2061000 THEN 162\n+                       WHEN dropperid = 2230110 AND itemid = 2060000 THEN 132\n+                       WHEN dropperid = 2230110 AND itemid = 2061000 THEN 132\n+                       WHEN dropperid = 2230111 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2230111 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2230131 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2230131 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2230200 AND itemid = 2060000 THEN 168\n+                       WHEN dropperid = 2230200 AND itemid = 2061000 THEN 168\n+                       WHEN dropperid = 2300100 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 2300100 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 3000000 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3000000 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3000005 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3000005 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3000006 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3000006 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3100101 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3100101 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3100102 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3100102 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3110101 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3110101 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3110102 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3110102 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3110300 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3110300 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3110301 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3110301 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3110302 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3110302 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3110303 AND itemid = 2060000 THEN 219\n+                       WHEN dropperid = 3110303 AND itemid = 2061000 THEN 219\n+                       WHEN dropperid = 3210100 AND itemid = 2060005 THEN 31\n+                       WHEN dropperid = 3210203 AND itemid = 2060000 THEN 210\n+                       WHEN dropperid = 3210203 AND itemid = 2061000 THEN 210\n+                       WHEN dropperid = 3210204 AND itemid = 2060000 THEN 198\n+                       WHEN dropperid = 3210204 AND itemid = 2061000 THEN 198\n+                       WHEN dropperid = 3210205 AND itemid = 2060000 THEN 198\n+                       WHEN dropperid = 3210205 AND itemid = 2061000 THEN 198\n+                       WHEN dropperid = 3210206 AND itemid = 2060000 THEN 210\n+                       WHEN dropperid = 3210206 AND itemid = 2061000 THEN 210\n+                       WHEN dropperid = 3210207 AND itemid = 2060000 THEN 198\n+                       WHEN dropperid = 3210207 AND itemid = 2060005 THEN 33\n+                       WHEN dropperid = 3210207 AND itemid = 2061000 THEN 198\n+                       WHEN dropperid = 3210208 AND itemid = 2060000 THEN 210\n+                       WHEN dropperid = 3210208 AND itemid = 2061000 THEN 210\n+                       WHEN dropperid = 3210450 AND itemid = 2060000 THEN 210\n+                       WHEN dropperid = 3210450 AND itemid = 2061000 THEN 210\n+                       WHEN dropperid = 3210800 AND itemid = 2060005 THEN 36\n+                       WHEN dropperid = 3220000 AND itemid = 2060000 THEN 285\n+                       WHEN dropperid = 3220000 AND itemid = 2061000 THEN 285\n+                       WHEN dropperid = 3230100 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3230100 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3230103 AND itemid = 2060000 THEN 219\n+                       WHEN dropperid = 3230103 AND itemid = 2061000 THEN 219\n+                       WHEN dropperid = 3230200 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3230200 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3230302 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3230302 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3230303 AND itemid = 2060000 THEN 216\n+                       WHEN dropperid = 3230303 AND itemid = 2061000 THEN 216\n+                       WHEN dropperid = 3230304 AND itemid = 2060000 THEN 219\n+                       WHEN dropperid = 3230304 AND itemid = 2061000 THEN 219\n+                       WHEN dropperid = 3230305 AND itemid = 2060000 THEN 225\n+                       WHEN dropperid = 3230305 AND itemid = 2061000 THEN 225\n+                       WHEN dropperid = 3230306 AND itemid = 2060000 THEN 216\n+                       WHEN dropperid = 3230306 AND itemid = 2061000 THEN 216\n+                       WHEN dropperid = 3230307 AND itemid = 2060000 THEN 180\n+                       WHEN dropperid = 3230307 AND itemid = 2061000 THEN 180\n+                       WHEN dropperid = 3230308 AND itemid = 2060000 THEN 225\n+                       WHEN dropperid = 3230308 AND itemid = 2061000 THEN 225\n+                       WHEN dropperid = 3230400 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3230400 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3230405 AND itemid = 2060000 THEN 219\n+                       WHEN dropperid = 3230405 AND itemid = 2061000 THEN 219\n+                       WHEN dropperid = 3300000 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3300000 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3300001 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3300001 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3300002 AND itemid = 2060000 THEN 180\n+                       WHEN dropperid = 3300002 AND itemid = 2061000 THEN 180\n+                       WHEN dropperid = 3300003 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3300003 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3300004 AND itemid = 2060000 THEN 192\n+                       WHEN dropperid = 3300004 AND itemid = 2061000 THEN 192\n+                       WHEN dropperid = 3300006 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3300006 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3300007 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3300007 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3300008 AND itemid = 2060000 THEN 309\n+                       WHEN dropperid = 3300008 AND itemid = 2061000 THEN 309\n+                       WHEN dropperid = 4110300 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 4110300 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 4110301 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4110301 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4130103 AND itemid = 2060000 THEN 384\n+                       WHEN dropperid = 4130103 AND itemid = 2061000 THEN 384\n+                       WHEN dropperid = 4230103 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 4230103 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 4230106 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230106 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230108 AND itemid = 2060000 THEN 249\n+                       WHEN dropperid = 4230108 AND itemid = 2061000 THEN 249\n+                       WHEN dropperid = 4230109 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 4230109 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 4230110 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230110 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230111 AND itemid = 2060000 THEN 237\n+                       WHEN dropperid = 4230111 AND itemid = 2061000 THEN 237\n+                       WHEN dropperid = 4230112 AND itemid = 2060000 THEN 255\n+                       WHEN dropperid = 4230112 AND itemid = 2061000 THEN 255\n+                       WHEN dropperid = 4230113 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 4230113 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 4230114 AND itemid = 2060000 THEN 237\n+                       WHEN dropperid = 4230114 AND itemid = 2061000 THEN 237\n+                       WHEN dropperid = 4230115 AND itemid = 2060000 THEN 267\n+                       WHEN dropperid = 4230115 AND itemid = 2061000 THEN 267\n+                       WHEN dropperid = 4230116 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 4230116 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 4230117 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 4230117 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 4230118 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230118 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230119 AND itemid = 2060000 THEN 237\n+                       WHEN dropperid = 4230119 AND itemid = 2061000 THEN 237\n+                       WHEN dropperid = 4230120 AND itemid = 2060000 THEN 255\n+                       WHEN dropperid = 4230120 AND itemid = 2061000 THEN 255\n+                       WHEN dropperid = 4230121 AND itemid = 2060000 THEN 267\n+                       WHEN dropperid = 4230121 AND itemid = 2061000 THEN 267\n+                       WHEN dropperid = 4230123 AND itemid = 2060000 THEN 249\n+                       WHEN dropperid = 4230123 AND itemid = 2061000 THEN 249\n+                       WHEN dropperid = 4230124 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 4230124 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 4230125 AND itemid = 2060000 THEN 255\n+                       WHEN dropperid = 4230125 AND itemid = 2061000 THEN 255\n+                       WHEN dropperid = 4230126 AND itemid = 2060000 THEN 273\n+                       WHEN dropperid = 4230126 AND itemid = 2061000 THEN 273\n+                       WHEN dropperid = 4230201 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 4230201 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 4230300 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230300 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230400 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230400 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230500 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 4230500 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 4230501 AND itemid = 2060000 THEN 237\n+                       WHEN dropperid = 4230501 AND itemid = 2061000 THEN 237\n+                       WHEN dropperid = 4230502 AND itemid = 2060000 THEN 249\n+                       WHEN dropperid = 4230502 AND itemid = 2061000 THEN 249\n+                       WHEN dropperid = 4230503 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230503 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230504 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230504 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230600 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 4230600 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 4240000 AND itemid = 2060000 THEN 285\n+                       WHEN dropperid = 4240000 AND itemid = 2061000 THEN 285\n+                       WHEN dropperid = 5120100 AND itemid = 2060000 THEN 441\n+                       WHEN dropperid = 5120100 AND itemid = 2061000 THEN 441\n+                       WHEN dropperid = 5130104 AND itemid = 2060000 THEN 321\n+                       WHEN dropperid = 5130104 AND itemid = 2061000 THEN 321\n+                       WHEN dropperid = 5140000 AND itemid = 2060000 THEN 336\n+                       WHEN dropperid = 5140000 AND itemid = 2061000 THEN 336\n+                       WHEN dropperid = 5150000 AND itemid = 2060000 THEN 342\n+                       WHEN dropperid = 5150000 AND itemid = 2061000 THEN 342\n+                       WHEN dropperid = 5200000 AND itemid = 2060001 THEN 66\n+                       WHEN dropperid = 5200000 AND itemid = 2061001 THEN 66\n+                       WHEN dropperid = 5200001 AND itemid = 2060001 THEN 87\n+                       WHEN dropperid = 5200001 AND itemid = 2061001 THEN 87\n+                       WHEN dropperid = 5200002 AND itemid = 2060001 THEN 87\n+                       WHEN dropperid = 5200002 AND itemid = 2061001 THEN 87\n+                       WHEN dropperid = 5220000 AND itemid = 2060000 THEN 447\n+                       WHEN dropperid = 5220000 AND itemid = 2061000 THEN 447\n+                       WHEN dropperid = 5220002 AND itemid = 2060000 THEN 408\n+                       WHEN dropperid = 5220002 AND itemid = 2061000 THEN 408\n+                       WHEN dropperid = 5220003 AND itemid = 2060000 THEN 480\n+                       WHEN dropperid = 5220003 AND itemid = 2061000 THEN 480\n+                       WHEN dropperid = 5400000 AND itemid = 2060001 THEN 102\n+                       WHEN dropperid = 5400000 AND itemid = 2061001 THEN 102\n+                       WHEN dropperid = 6220000 AND itemid = 2060000 THEN 531\n+                       WHEN dropperid = 6220000 AND itemid = 2061000 THEN 531\n+                       WHEN dropperid = 7120103 AND itemid = 2060003 THEN 102\n+                       WHEN dropperid = 7220000 AND itemid = 2060001 THEN 289\n+                       WHEN dropperid = 7220000 AND itemid = 2061001 THEN 289\n+                       WHEN dropperid = 7220001 AND itemid = 2060001 THEN 285\n+                       WHEN dropperid = 7220001 AND itemid = 2061001 THEN 285\n+                       WHEN dropperid = 7220002 AND itemid = 2060001 THEN 313\n+                       WHEN dropperid = 7220002 AND itemid = 2061001 THEN 313\n+                       WHEN dropperid = 8220000 AND itemid = 2060001 THEN 339\n+                       WHEN dropperid = 8220000 AND itemid = 2061001 THEN 339\n+                       WHEN dropperid = 8220001 AND itemid = 2060001 THEN 367\n+                       WHEN dropperid = 8220001 AND itemid = 2061001 THEN 367\n+                       WHEN dropperid = 9300011 AND itemid = 2060000 THEN 225\n+                       WHEN dropperid = 9300011 AND itemid = 2061000 THEN 225\n+                       WHEN dropperid = 9300060 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 9300060 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 9300131 AND itemid = 2060000 THEN 225\n+                       WHEN dropperid = 9300131 AND itemid = 2061000 THEN 225\n+                       WHEN dropperid = 9300132 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 9300132 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 9300133 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 9300160 AND itemid = 2060000 THEN 366\n+                       WHEN dropperid = 9300160 AND itemid = 2061000 THEN 366\n+                       WHEN dropperid = 9300161 AND itemid = 2060000 THEN 366\n+                       WHEN dropperid = 9300161 AND itemid = 2061000 THEN 366\n+                       WHEN dropperid = 9300274 AND itemid = 2060000 THEN 45\n+                       WHEN dropperid = 9300274 AND itemid = 2061000 THEN 45\n+                       WHEN dropperid = 9300332 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 9300334 AND itemid = 2060000 THEN 285\n+                       WHEN dropperid = 9300341 AND itemid = 2060000 THEN 33\n+                       WHEN dropperid = 9300341 AND itemid = 2061000 THEN 33\n+                       WHEN dropperid = 9300342 AND itemid = 2060000 THEN 45\n+                       WHEN dropperid = 9300342 AND itemid = 2061000 THEN 45\n+                       WHEN dropperid = 9300343 AND itemid = 2060000 THEN 39\n+                       WHEN dropperid = 9300343 AND itemid = 2061000 THEN 39\n+                       WHEN dropperid = 9303005 AND itemid = 2060001 THEN 75\n+                       WHEN dropperid = 9303005 AND itemid = 2061001 THEN 75\n+                       WHEN dropperid = 9303008 AND itemid = 2060001 THEN 75\n+                       WHEN dropperid = 9303008 AND itemid = 2061001 THEN 75\n+                       WHEN dropperid = 9303009 AND itemid = 2060001 THEN 148\n+                       WHEN dropperid = 9303009 AND itemid = 2061001 THEN 148\n+                       WHEN dropperid = 9400000 AND itemid = 2060001 THEN 72\n+                       WHEN dropperid = 9400009 AND itemid = 2060001 THEN 583\n+                       WHEN dropperid = 9400011 AND itemid = 2060002 THEN 77\n+                       WHEN dropperid = 9400100 AND itemid = 2060003 THEN 65\n+                       WHEN dropperid = 9400101 AND itemid = 2061003 THEN 68\n+                       WHEN dropperid = 9400204 AND itemid = 2060003 THEN 80\n+                       WHEN dropperid = 9400239 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 9400239 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 9400244 AND itemid = 2060000 THEN 342\n+                       WHEN dropperid = 9400244 AND itemid = 2061000 THEN 342\n+                       WHEN dropperid = 9400248 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 9400248 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 9400540 AND itemid = 2060004 THEN 28\n+                       WHEN dropperid = 9400540 AND itemid = 2061004 THEN 28\n+                       WHEN dropperid = 9400541 AND itemid = 2060004 THEN 28\n+                       WHEN dropperid = 9400541 AND itemid = 2061004 THEN 28\n+                       WHEN dropperid = 9400542 AND itemid = 2060004 THEN 42\n+                       WHEN dropperid = 9400542 AND itemid = 2061004 THEN 42\n+                       WHEN dropperid = 9400543 AND itemid = 2060004 THEN 47\n+                       WHEN dropperid = 9400543 AND itemid = 2061004 THEN 47\n+                       WHEN dropperid = 9400547 AND itemid = 2060000 THEN 156\n+                       WHEN dropperid = 9400547 AND itemid = 2061000 THEN 156\n+                       WHEN dropperid = 9400548 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 9400548 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 9400550 AND itemid = 2060000 THEN 156\n+                       WHEN dropperid = 9400550 AND itemid = 2061000 THEN 156\n+                       WHEN dropperid = 9400558 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 9400558 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 9400563 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 9400563 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 9400638 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 9400638 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 9420500 AND itemid = 2060000 THEN 162\n+                       WHEN dropperid = 9420500 AND itemid = 2061000 THEN 162\n+                       WHEN dropperid = 9420502 AND itemid = 2060000 THEN 105\n+                       WHEN dropperid = 9420502 AND itemid = 2061000 THEN 105\n+                       WHEN dropperid = 9420506 AND itemid = 2060000 THEN 132\n+                       WHEN dropperid = 9420506 AND itemid = 2061000 THEN 132\n+                       WHEN dropperid = 9420508 AND itemid = 2060000 THEN 249\n+                       WHEN dropperid = 9420508 AND itemid = 2061000 THEN 249\n+                       WHEN dropperid = 9420527 AND itemid = 2060001 THEN 130\n+                       WHEN dropperid = 9420527 AND itemid = 2061001 THEN 130\n+                       WHEN dropperid = 9420531 AND itemid = 2060001 THEN 171\n+                       WHEN dropperid = 9420531 AND itemid = 2061001 THEN 171\n+                       WHEN dropperid = 9500112 AND itemid = 2060001 THEN 102\n+                       WHEN dropperid = 9500112 AND itemid = 2061001 THEN 102\n+                       WHEN dropperid = 9500119 AND itemid = 2060000 THEN 225\n+                       WHEN dropperid = 9500119 AND itemid = 2061000 THEN 225\n+                       WHEN dropperid = 9500120 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 9500120 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 9500122 AND itemid = 2060000 THEN 285\n+                       WHEN dropperid = 9500123 AND itemid = 2060000 THEN 342\n+                       WHEN dropperid = 9500123 AND itemid = 2061000 THEN 342\n+                       WHEN dropperid = 9500308 AND itemid = 2060000 THEN 408\n+                       WHEN dropperid = 9500308 AND itemid = 2061000 THEN 408\n+                       WHEN dropperid = 9500310 AND itemid = 2060000 THEN 480\n+                       WHEN dropperid = 9500310 AND itemid = 2061000 THEN 480\n+                       WHEN dropperid = 9500312 AND itemid = 2060001 THEN 285\n+                       WHEN dropperid = 9500312 AND itemid = 2061001 THEN 285\n+                       WHEN dropperid = 9500313 AND itemid = 2060001 THEN 289\n+                       WHEN dropperid = 9500313 AND itemid = 2061001 THEN 289\n+                       WHEN dropperid = 9500314 AND itemid = 2060001 THEN 313\n+                       WHEN dropperid = 9500314 AND itemid = 2061001 THEN 313\n+                       WHEN dropperid = 9500321 AND itemid = 2060001 THEN 28\n+                       WHEN dropperid = 9500321 AND itemid = 2061001 THEN 28\n+                       WHEN dropperid = 9500366 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 9500369 AND itemid = 2060000 THEN 87\n+  ELSE maximum_quantity END\n+;\n\\ No newline at end of file"}, {"sha": "6b59ca52d138a2f7791e9c36f3107b8db35174f5", "filename": "sql/db_shopupdate.sql", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/sql/db_shopupdate.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/sql/db_shopupdate.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_shopupdate.sql?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -267,6 +267,7 @@ INSERT INTO `shopitems` ( `shopid`, `itemid`, `price`, `pitch`, `position`) VALU\n  (1200002, 2070000, 500, 0, 108),\n  (1200002, 2061000, 1, 0, 120),\n  (1200002, 2060000, 1, 0, 124),\n+ (1200002, 2030100, 400, 0, 128),\n  (1200002, 2030000, 400, 0, 132),\n  (1200002, 2020028, 3000, 0, 136),\n  (1200002, 2010004, 310, 0, 140),\n@@ -284,20 +285,21 @@ INSERT INTO `shopitems` ( `shopid`, `itemid`, `price`, `pitch`, `position`) VALU\n  (1200002, 2000002, 320, 0, 188),\n  (1200002, 2000001, 160, 0, 192),\n  (1200002, 2000000, 50, 0, 196),\n- (1301000, 2330000, 600, 0, 1),\n- (1301000, 2070000, 500, 0, 2),\n- (1301000, 2061000, 1, 0, 3),\n- (1301000, 2060000, 1, 0, 4),\n- (1301000, 2030000, 400, 0, 5),\n- (1301000, 2022000, 1650, 0, 6),\n- (1301000, 2022003, 1100, 0, 7),\n- (1301000, 2002005, 500, 0, 8),\n- (1301000, 2002004, 500, 0, 9),\n- (1301000, 2002002, 500, 0, 10),\n- (1301000, 2002001, 400, 0, 11),\n- (1301000, 2002000, 500, 0, 12),\n- (1301000, 2000006, 620, 0, 13),\n- (1301000, 2000003, 200, 0, 14),\n- (1301000, 2000002, 320, 0, 15),\n- (1301000, 2000015, 160, 0, 16),\n- (1301000, 2000000, 50, 0, 17);\n\\ No newline at end of file\n+ (1301000, 2330000, 600, 0, 104),\n+ (1301000, 2070000, 500, 0, 108),\n+ (1301000, 2061000, 1, 0, 112),\n+ (1301000, 2060000, 1, 0, 116),\n+ (1301000, 2030100, 400, 0, 120),\n+ (1301000, 2030000, 400, 0, 124),\n+ (1301000, 2022000, 1650, 0, 128),\n+ (1301000, 2022003, 1100, 0, 132),\n+ (1301000, 2002005, 500, 0, 136),\n+ (1301000, 2002004, 500, 0, 140),\n+ (1301000, 2002002, 500, 0, 144),\n+ (1301000, 2002001, 400, 0, 148),\n+ (1301000, 2002000, 500, 0, 152),\n+ (1301000, 2000006, 620, 0, 156),\n+ (1301000, 2000003, 200, 0, 160),\n+ (1301000, 2000002, 320, 0, 164),\n+ (1301000, 2000015, 160, 0, 168),\n+ (1301000, 2000000, 50, 0, 172);\n\\ No newline at end of file"}, {"sha": "be2abcb9768f117a6333cec564421881c2a75e5a", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 45, "deletions": 23, "changes": 68, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -1008,45 +1008,62 @@ public void changeJob(MapleJob newJob) {\n             this.remainingAp += 5;\n         }\n         int job_ = job.getId() % 1000; // lame temp \"fix\"\n-        if (job_ == 100) {\n+        if (job_ == 100) {                      // 1st warrior\n             maxhp += Randomizer.rand(200, 250);\n-        } else if (job_ == 200) {\n+        } else if (job_ == 200) {               // 1st mage\n             maxmp += Randomizer.rand(100, 150);\n-        } else if (job_ % 100 == 0) {\n+        } else if (job_ % 100 == 0) {           // 1st others\n             maxhp += Randomizer.rand(100, 150);\n             maxhp += Randomizer.rand(25, 50);\n-        } else if (job_ > 0 && job_ < 200) {\n+        } else if (job_ > 0 && job_ < 200) {    // 2nd~4th warrior\n             maxhp += Randomizer.rand(300, 350);\n-        } else if (job_ < 300) {\n+        } else if (job_ < 300) {                // 2nd~4th mage\n             maxmp += Randomizer.rand(450, 500);\n-        } //handle KoC here (undone)\n-        else if (job_ > 0 && job_ != 1000) {\n+        } else if (job_ > 0) {                  // 2nd~4th others\n             maxhp += Randomizer.rand(300, 350);\n             maxmp += Randomizer.rand(150, 200);\n         }\n+        \n+        /*\n+        //aran perks?\n+        int newJobId = newJob.getId();\n+        if(newJobId == 2100) {          // become aran1\n+            maxhp += 275;\n+            maxmp += 15;\n+        } else if(newJobId == 2110) {   // become aran2\n+            maxmp += 275;\n+        } else if(newJobId == 2111) {   // become aran3\n+            maxhp += 275;\n+            maxmp += 275;\n+        }\n+        */\n+        \n         if (maxhp >= 30000) {\n             maxhp = 30000;\n         }\n         if (maxmp >= 30000) {\n             maxmp = 30000;\n         }\n+        \n         if (!isGM()) {\n             for (byte i = 1; i < 5; i++) {\n                 gainSlots(i, 4, true);\n             }\n         }\n+        \n         List<Pair<MapleStat, Integer>> statup = new ArrayList<>(5);\n         statup.add(new Pair<>(MapleStat.MAXHP, Integer.valueOf(maxhp)));\n         statup.add(new Pair<>(MapleStat.MAXMP, Integer.valueOf(maxmp)));\n         statup.add(new Pair<>(MapleStat.AVAILABLEAP, remainingAp));\n         statup.add(new Pair<>(MapleStat.AVAILABLESP, remainingSp[GameConstants.getSkillBook(job.getId())]));\n         statup.add(new Pair<>(MapleStat.JOB, Integer.valueOf(job.getId())));\n+        client.announce(MaplePacketCreator.updatePlayerStats(statup, this));\n+        \n         if (dragon != null) {\n             getMap().broadcastMessage(MaplePacketCreator.removeDragon(dragon.getObjectId()));\n             dragon = null;\n         }\n         recalcLocalStats();\n-        client.announce(MaplePacketCreator.updatePlayerStats(statup, this));\n         silentPartyUpdate();\n         if (this.guildid > 0) {\n             getGuild().broadcast(MaplePacketCreator.jobMessage(0, job.getId(), name), this.getId());\n@@ -1062,7 +1079,7 @@ else if (job_ > 0 && job_ != 1000) {\n             if (getBuffedValue(MapleBuffStat.MONSTER_RIDING) != null) {\n                 cancelBuffStats(MapleBuffStat.MONSTER_RIDING);\n             }\n-        \tcreateDragon();\n+            createDragon();\n         }\n     }\n \n@@ -3162,21 +3179,26 @@ public void cancelBuffStats(MapleBuffStat stat) {\n     }\n     \n     private boolean isSingletonStatup(MapleBuffStat mbs) {\n-        switch(mbs) {\n-            case RECOVERY:\n-            case HPREC:\n-            case MPREC:\n-            case SUMMON:\n-            case PUPPET:\n-            case DRAGONBLOOD:\n-            case MONSTER_RIDING:\n-            case MORPH:\n-            case HYPERBODYHP:\n-            case HYPERBODYMP:\n-                return true;\n+        switch(mbs) {           //HPREC and MPREC are supposed to be singleton\n+            case COUPON_EXP1:\n+            case COUPON_EXP2:\n+            case COUPON_EXP3:\n+            case COUPON_EXP4:\n+            case COUPON_DRP1:\n+            case COUPON_DRP2:\n+            case COUPON_DRP3:\n+            case WATK:\n+            case WDEF:\n+            case MATK:\n+            case MDEF:\n+            case ACC:\n+            case AVOID:\n+            case SPEED:\n+            case JUMP:\n+                return false;\n                 \n             default:\n-                return false;\n+                return true;\n         }\n     }\n     \n@@ -6003,7 +6025,7 @@ public void resetStats() {\n         switch (job.getId()) {\n             case 100:\n             case 1100:\n-            case 2100://?\n+            case 2100:\n                 tstr = 35;\n                 tap = ((getLevel() - 10) * levelap) + 14;\n                 tsp += ((getLevel() - 10) * 3);"}, {"sha": "2b0fcb4f111e74ee1559ec60543ca739fce6a462", "filename": "src/client/command/Commands.java", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/client/command/Commands.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/client/command/Commands.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/Commands.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -1133,19 +1133,19 @@ else if (type.equals(\"cash\")) {\n \t\t\tshort quantity = 1;\n                         if(sub.length >= 3) quantity = Short.parseShort(sub[2]);\n \t\t\t\n+                        if (ItemConstants.isPet(itemId)) {\n+                                player.message(\"You cannot create a pet with this command.\");\n+                                break;\n+                        }\n+                        \n \t\t\tif (sub[0].equals(\"item\")) {\n-\t\t\t\tint petid = -1;\n-\t\t\t\tif (ItemConstants.isPet(itemId)) {\n-\t\t\t\t\tpetid = MaplePet.createPet(itemId);\n-\t\t\t\t}\n-                                \n-                                byte flag = 0;\n+\t\t\t\tbyte flag = 0;\n                                 if(player.gmLevel() < 3) {\n                                     flag |= ItemConstants.ACCOUNT_SHARING;\n                                     flag |= ItemConstants.UNTRADEABLE;\n                                 }\n                                 \n-                                MapleInventoryManipulator.addById(c, itemId, quantity, player.getName(), petid, flag, -1);\n+                                MapleInventoryManipulator.addById(c, itemId, quantity, player.getName(), -1, flag, -1);\n \t\t\t} else {\n \t\t\t\tItem toDrop;\n \t\t\t\tif (MapleItemInformationProvider.getInstance().getInventoryType(itemId) == MapleInventoryType.EQUIP) {\n@@ -2127,20 +2127,17 @@ public static boolean executeSolaxiaCommandLv4(Channel cserv, Server srv, MapleC\n                                 break;\n                         }\n                         \n-                        int itemid = 0;\n-                        short multiply = 0;\n-\n-                        itemid = Integer.parseInt(sub[1]);\n-                        multiply = Short.parseShort(sub[2]);\n+                        int itemid = Integer.parseInt(sub[1]);\n+                        short multiply = Short.parseShort(sub[2]);\n \n                         MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n-                        Item it = ii.getEquipById(itemid);\n-                        it.setOwner(player.getName());\n                         MapleInventoryType type = ii.getInventoryType(itemid);\n                         if (type.equals(MapleInventoryType.EQUIP)) {\n+                                Item it = ii.getEquipById(itemid);\n+                                it.setOwner(player.getName());\n+                                \n                                 hardsetItemStats((Equip) it, multiply);\n                                 MapleInventoryManipulator.addFromDrop(c, it);\n-\n                         } else {\n                                 player.dropMessage(\"Make sure it's an equippable item.\");\n                         }"}, {"sha": "63095bdaa18eee04a305d7bb817cd43c079b184f", "filename": "src/client/inventory/MaplePet.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/client/inventory/MaplePet.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/client/inventory/MaplePet.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/MaplePet.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -60,6 +60,7 @@ private MaplePet(int id, short position, int uniqueid) {\n \n     public static MaplePet loadFromDb(int itemid, short position, int petid) {\n         try {\n+            System.out.println(\"fetching \" + petid);\n             MaplePet ret = new MaplePet(itemid, position, petid);\n             Connection con = DatabaseConnection.getConnection();\n             PreparedStatement ps = con.prepareStatement(\"SELECT name, level, closeness, fullness, summoned FROM pets WHERE petid = ?\"); // Get pet details.."}, {"sha": "abbb6ed3861eb37d290e39f0db1115f0c89003a3", "filename": "src/net/server/guild/MapleAlliance.java", "status": "modified", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/net/server/guild/MapleAlliance.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/net/server/guild/MapleAlliance.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/guild/MapleAlliance.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -331,18 +331,21 @@ public boolean removeGuild(int gid) {\n     public boolean addGuild(int gid) {\n         synchronized (guilds) {\n             if(guilds.size() == capacity || getGuildIndex(gid) > -1) return false;\n+            \n             guilds.add(gid);\n+            return true;\n         }\n-        return true;\n     }\n \n     private int getGuildIndex(int gid) {\n-        for (int i = 0; i < guilds.size(); i++) {\n-            if (guilds.get(i) == gid) {\n-                return i;\n+        synchronized (guilds) {\n+            for (int i = 0; i < guilds.size(); i++) {\n+                if (guilds.get(i) == gid) {\n+                    return i;\n+                }\n             }\n+            return -1;\n         }\n-        return -1;\n     }\n     \n     public void setRankTitle(String[] ranks) {\n@@ -354,13 +357,15 @@ public String getRankTitle(int rank) {\n     }\n     \n     public List<Integer> getGuilds() {\n-        List<Integer> guilds_ = new LinkedList<>();\n-        for (int guild : guilds) {\n-            if (guild != -1) {\n-                guilds_.add(guild);\n+        synchronized(guilds) {\n+            List<Integer> guilds_ = new LinkedList<>();\n+            for (int guild : guilds) {\n+                if (guild != -1) {\n+                    guilds_.add(guild);\n+                }\n             }\n+            return guilds_;\n         }\n-        return guilds_;\n     }\n     \n     public String getAllianceNotice() {\n@@ -396,24 +401,28 @@ public String getName() {\n     }\n     \n     public MapleGuildCharacter getLeader() {\n-        for(Integer gId: guilds) {\n-            MapleGuild guild = Server.getInstance().getGuild(gId);\n-            MapleGuildCharacter mgc = guild.getMGC(guild.getLeaderId());\n-            \n-            if(mgc.getAllianceRank() == 1) return mgc;\n+        synchronized(guilds) {\n+            for(Integer gId: guilds) {\n+                MapleGuild guild = Server.getInstance().getGuild(gId);\n+                MapleGuildCharacter mgc = guild.getMGC(guild.getLeaderId());\n+\n+                if(mgc.getAllianceRank() == 1) return mgc;\n+            }\n+\n+            return null;\n         }\n-        \n-        return null;\n     }\n     \n     public void dropMessage(String message) {\n         dropMessage(5, message);\n     }\n     \n     public void dropMessage(int type, String message) {\n-        for(Integer gId: guilds) {\n-            MapleGuild guild = Server.getInstance().getGuild(gId);\n-            guild.dropMessage(type, message);\n+        synchronized(guilds) {\n+            for(Integer gId: guilds) {\n+                MapleGuild guild = Server.getInstance().getGuild(gId);\n+                guild.dropMessage(type, message);\n+            }\n         }\n     }\n     "}, {"sha": "32b8bbd6f97ed3cd8a84d9050b44ac358d454f58", "filename": "src/net/server/guild/MapleGuild.java", "status": "modified", "additions": 164, "deletions": 56, "changes": 220, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/net/server/guild/MapleGuild.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/net/server/guild/MapleGuild.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/guild/MapleGuild.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -35,6 +35,9 @@\n import java.util.Map;\n import java.util.Set;\n \n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n import net.server.Server;\n import net.server.channel.Channel;\n import tools.DatabaseConnection;\n@@ -47,7 +50,10 @@\n     private enum BCOp {\n         NONE, DISBAND, EMBLEMCHANGE\n     }\n+    \n     private final List<MapleGuildCharacter> members;\n+    private final Lock membersLock = new ReentrantLock(true);\n+    \n     private String rankTitles[] = new String[5]; // 1 = master, 2 = jr, 5 = lowest member\n     private String name, notice;\n     private int id, gp, logo, logoColor, leader, capacity, logoBG, logoBGColor, signature, allianceId;\n@@ -122,7 +128,9 @@ public void buildNotifications() {\n                 l.clear();\n             }\n         }\n-        synchronized (members) {\n+        \n+        membersLock.lock();\n+        try {\n             for (MapleGuildCharacter mgc : members) {\n                 if (!mgc.isOnline()) {\n                     continue;\n@@ -131,7 +139,10 @@ public void buildNotifications() {\n                 if (ch != null) ch.add(mgc.getId());\n                 //Unable to connect to Channel... error was here\n             }\n+        } finally {\n+            membersLock.unlock();\n         }\n+        \n         bDirty = false;\n     }\n \n@@ -169,7 +180,13 @@ public void writeToDB(boolean bDisband) {\n                 ps.setInt(1, this.id);\n                 ps.execute();\n                 ps.close();\n-                this.broadcast(MaplePacketCreator.guildDisband(this.id));\n+                \n+                membersLock.lock();\n+                try {\n+                    this.broadcast(MaplePacketCreator.guildDisband(this.id));\n+                } finally {\n+                    membersLock.unlock();\n+                }\n             }\n             \n             con.close();\n@@ -238,7 +255,12 @@ public String getName() {\n     }\n \n     public java.util.Collection<MapleGuildCharacter> getMembers() {\n-        return java.util.Collections.unmodifiableCollection(members);\n+        membersLock.lock();\n+        try {\n+            return java.util.Collections.unmodifiableCollection(members);\n+        } finally {\n+            membersLock.unlock();\n+        }\n     }\n \n     public int getCapacity() {\n@@ -282,13 +304,18 @@ public void broadcast(final byte[] packet, int exceptionId, BCOp bcop) {\n     }\n \n     public void guildMessage(final byte[] serverNotice) {\n-        for (MapleGuildCharacter mgc : members) {\n-            for (Channel cs : Server.getInstance().getChannelsFromWorld(world)) {\n-                if (cs.getPlayerStorage().getCharacterById(mgc.getId()) != null) {\n-                    cs.getPlayerStorage().getCharacterById(mgc.getId()).getClient().announce(serverNotice);\n-                    break;\n+        membersLock.lock();\n+        try {\n+            for (MapleGuildCharacter mgc : members) {\n+                for (Channel cs : Server.getInstance().getChannelsFromWorld(world)) {\n+                    if (cs.getPlayerStorage().getCharacterById(mgc.getId()) != null) {\n+                        cs.getPlayerStorage().getCharacterById(mgc.getId()).getClient().announce(serverNotice);\n+                        break;\n+                    }\n                 }\n             }\n+        } finally {\n+            membersLock.unlock();\n         }\n     }\n     \n@@ -297,9 +324,15 @@ public void dropMessage(String message) {\n     }\n     \n     public void dropMessage(int type, String message) {\n-        for (MapleGuildCharacter mgc : members) {\n-            if(mgc.getCharacter() != null)\n-                mgc.getCharacter().dropMessage(type, message);\n+        membersLock.lock();\n+        try {\n+            for (MapleGuildCharacter mgc : members) {\n+                if(mgc.getCharacter() != null) {\n+                    mgc.getCharacter().dropMessage(type, message);\n+                }\n+            }\n+        } finally {\n+            membersLock.unlock();\n         }\n     }\n     \n@@ -308,25 +341,35 @@ public void broadcastMessage(byte[] packet) {\n     }\n \n     public final void setOnline(int cid, boolean online, int channel) {\n-        boolean bBroadcast = true;\n-        for (MapleGuildCharacter mgc : members) {\n-            if (mgc.getId() == cid) {\n-                if (mgc.isOnline() && online) {\n-                    bBroadcast = false;\n+        membersLock.lock();\n+        try {\n+            boolean bBroadcast = true;\n+            for (MapleGuildCharacter mgc : members) {\n+                if (mgc.getId() == cid) {\n+                    if (mgc.isOnline() && online) {\n+                        bBroadcast = false;\n+                    }\n+                    mgc.setOnline(online);\n+                    mgc.setChannel(channel);\n+                    break;\n                 }\n-                mgc.setOnline(online);\n-                mgc.setChannel(channel);\n-                break;\n             }\n+            if (bBroadcast) {\n+                this.broadcast(MaplePacketCreator.guildMemberOnline(id, cid, online), cid);\n+            }\n+            bDirty = true;\n+        } finally {\n+            membersLock.unlock();\n         }\n-        if (bBroadcast) {\n-            this.broadcast(MaplePacketCreator.guildMemberOnline(id, cid, online), cid);\n-        }\n-        bDirty = true;\n     }\n \n     public void guildChat(String name, int cid, String message) {\n-    \tthis.broadcast(MaplePacketCreator.multiChat(name, message, 2), cid);\n+        membersLock.lock();\n+        try {\n+            this.broadcast(MaplePacketCreator.multiChat(name, message, 2), cid);\n+        } finally {\n+            membersLock.unlock();\n+        }\n     }\n \n     public String getRankTitle(int rank) {\n@@ -377,7 +420,8 @@ public static int createGuild(int leaderId, String name) {\n     }\n \n     public int addGuildMember(MapleGuildCharacter mgc, MapleCharacter chr) {\n-        synchronized (members) {\n+        membersLock.lock();\n+        try {\n             if (members.size() >= capacity) {\n                 return 0;\n             }\n@@ -389,21 +433,28 @@ public int addGuildMember(MapleGuildCharacter mgc, MapleCharacter chr) {\n                     break;\n                 }\n             }\n+            \n+            this.broadcast(MaplePacketCreator.newGuildMember(mgc));\n+            return 1;\n+        } finally {\n+            membersLock.unlock();\n         }\n-        this.broadcast(MaplePacketCreator.newGuildMember(mgc));\n-        return 1;\n     }\n \n     public void leaveGuild(MapleGuildCharacter mgc) {\n-        this.broadcast(MaplePacketCreator.memberLeft(mgc, false));\n-        synchronized (members) {\n+        membersLock.lock();\n+        try {\n+            this.broadcast(MaplePacketCreator.memberLeft(mgc, false));\n             members.remove(mgc);\n             bDirty = true;\n+        } finally {\n+            membersLock.unlock();\n         }\n     }\n \n     public void expelMember(MapleGuildCharacter initiator, String name, int cid) {\n-        synchronized (members) {\n+        membersLock.lock();\n+        try {\n             java.util.Iterator<MapleGuildCharacter> itr = members.iterator();\n             MapleGuildCharacter mgc;\n             while (itr.hasNext()) {\n@@ -441,15 +492,22 @@ public void expelMember(MapleGuildCharacter initiator, String name, int cid) {\n                 }\n             }\n             System.out.println(\"Unable to find member with name \" + name + \" and id \" + cid);\n+        } finally {\n+            membersLock.unlock();\n         }\n     }\n \n     public void changeRank(int cid, int newRank) {\n-        for (MapleGuildCharacter mgc : members) {\n-            if (cid == mgc.getId()) {\n-                changeRank(mgc, newRank);\n-                return;\n+        membersLock.lock();\n+        try {\n+            for (MapleGuildCharacter mgc : members) {\n+                if (cid == mgc.getId()) {\n+                    changeRank(mgc, newRank);\n+                    return;\n+                }\n             }\n+        } finally {\n+            membersLock.unlock();\n         }\n     }\n     \n@@ -467,24 +525,39 @@ public void changeRank(MapleGuildCharacter mgc, int newRank) {\n             return;\n         }\n         \n-        this.broadcast(MaplePacketCreator.changeRank(mgc));\n-        return;\n+        membersLock.lock();\n+        try {\n+            this.broadcast(MaplePacketCreator.changeRank(mgc));\n+        } finally {\n+            membersLock.unlock();\n+        }\n     }\n     \n     public void setGuildNotice(String notice) {\n         this.notice = notice;\n         writeToDB(false);\n-        this.broadcast(MaplePacketCreator.guildNotice(this.id, notice));\n+        \n+        membersLock.lock();\n+        try {\n+            this.broadcast(MaplePacketCreator.guildNotice(this.id, notice));\n+        } finally {\n+            membersLock.unlock();\n+        }\n     }\n \n     public void memberLevelJobUpdate(MapleGuildCharacter mgc) {\n-        for (MapleGuildCharacter member : members) {\n-            if (mgc.equals(member)) {\n-                member.setJobId(mgc.getJobId());\n-                member.setLevel(mgc.getLevel());\n-                this.broadcast(MaplePacketCreator.guildMemberLevelJobUpdate(mgc));\n-                break;\n+        membersLock.lock();\n+        try {\n+            for (MapleGuildCharacter member : members) {\n+                if (mgc.equals(member)) {\n+                    member.setJobId(mgc.getJobId());\n+                    member.setLevel(mgc.getLevel());\n+                    this.broadcast(MaplePacketCreator.guildMemberLevelJobUpdate(mgc));\n+                    break;\n+                }\n             }\n+        } finally {\n+            membersLock.unlock();\n         }\n     }\n \n@@ -507,7 +580,14 @@ public int hashCode() {\n \n     public void changeRankTitle(String[] ranks) {\n         System.arraycopy(ranks, 0, rankTitles, 0, 5);\n-        this.broadcast(MaplePacketCreator.rankTitleChange(this.id, ranks));\n+        \n+        membersLock.lock();\n+        try {\n+            this.broadcast(MaplePacketCreator.rankTitleChange(this.id, ranks));\n+        } finally {\n+            membersLock.unlock();\n+        }\n+        \n         this.writeToDB(false);\n     }\n \n@@ -519,8 +599,13 @@ public void disbandGuild() {\n             else MapleAlliance.disbandAlliance(allianceId);\n         }\n         \n-        this.writeToDB(true);\n-        this.broadcast(null, -1, BCOp.DISBAND);\n+        membersLock.lock();\n+        try {\n+            this.writeToDB(true);\n+            this.broadcast(null, -1, BCOp.DISBAND);\n+        } finally {\n+            membersLock.unlock();\n+        }\n     }\n \n     public void setGuildEmblem(short bg, byte bgcolor, short logo, byte logocolor) {\n@@ -529,16 +614,27 @@ public void setGuildEmblem(short bg, byte bgcolor, short logo, byte logocolor) {\n         this.logo = logo;\n         this.logoColor = logocolor;\n         this.writeToDB(false);\n-        this.broadcast(null, -1, BCOp.EMBLEMCHANGE);\n+        \n+        membersLock.lock();\n+        try {\n+            this.broadcast(null, -1, BCOp.EMBLEMCHANGE);\n+        } finally {\n+            membersLock.unlock();\n+        }\n     }\n \n     public MapleGuildCharacter getMGC(int cid) {\n-        for (MapleGuildCharacter mgc : members) {\n-            if (mgc.getId() == cid) {\n-                return mgc;\n+        membersLock.lock();\n+        try {\n+            for (MapleGuildCharacter mgc : members) {\n+                if (mgc.getId() == cid) {\n+                    return mgc;\n+                }\n             }\n+            return null;\n+        } finally {\n+            membersLock.unlock();\n         }\n-        return null;\n     }\n \n     public boolean increaseCapacity() {\n@@ -547,7 +643,14 @@ public boolean increaseCapacity() {\n         }\n         capacity += 5;\n         this.writeToDB(false);\n-        this.broadcast(MaplePacketCreator.guildCapacityChange(this.id, this.capacity));\n+        \n+        membersLock.lock();\n+        try {\n+            this.broadcast(MaplePacketCreator.guildCapacityChange(this.id, this.capacity));\n+        } finally {\n+            membersLock.unlock();\n+        }\n+        \n         return true;\n     }\n \n@@ -614,10 +717,15 @@ public void setAllianceId(int aid) {\n     \n     public void resetAllianceGuildPlayersRank() {\n         try {\n-            for(MapleGuildCharacter mgc: members) {\n-                if(mgc.isOnline()) {\n-                    mgc.setAllianceRank(5);\n+            membersLock.lock();\n+            try {\n+                for(MapleGuildCharacter mgc: members) {\n+                    if(mgc.isOnline()) {\n+                        mgc.setAllianceRank(5);\n+                    }\n                 }\n+            } finally {\n+                membersLock.unlock();\n             }\n             \n             Connection con = DatabaseConnection.getConnection();\n@@ -633,7 +741,7 @@ public void resetAllianceGuildPlayersRank() {\n         }\n     }\n \n-    public int getIncreaseGuildCost(int size) {\n+    public static int getIncreaseGuildCost(int size) {\n         return 500000 * (size - 6) / 6;\n     }\n }"}, {"sha": "8a401f3184c1e908bd9fb9b3f4e20408f7dc11b2", "filename": "src/server/MaplePlayerShop.java", "status": "modified", "additions": 46, "deletions": 15, "changes": 61, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/server/MaplePlayerShop.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/src/server/MaplePlayerShop.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MaplePlayerShop.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -80,8 +80,11 @@ public void setOpen(boolean openShop) {\n     }\n     \n     public boolean hasFreeSlot() {\n-        synchronized (visitors) {\n+        visitorLock.lock();\n+        try {\n             return visitors[0] == null || visitors[1] == null || visitors[2] == null;\n+        } finally {\n+            visitorLock.unlock();\n         }\n     }\n \n@@ -90,7 +93,8 @@ public boolean isOwner(MapleCharacter c) {\n     }\n \n     private void addVisitor(MapleCharacter visitor) {\n-        synchronized (visitors) {\n+        visitorLock.lock();\n+        try {\n             for (int i = 0; i < 3; i++) {\n                 if (visitors[i] == null) {\n                     visitors[i] = visitor;\n@@ -101,6 +105,8 @@ private void addVisitor(MapleCharacter visitor) {\n                     break;\n                 }\n             }\n+        } finally {\n+            visitorLock.unlock();\n         }\n     }\n \n@@ -109,13 +115,19 @@ public void forceRemoveVisitor(MapleCharacter visitor) {\n             owner.getMap().removeMapObject(this);\n             owner.setPlayerShop(null);\n         }\n-        for (int i = 0; i < 3; i++) {\n-            if (visitors[i] != null && visitors[i].getId() == visitor.getId()) {\n-                visitors[i] = null;\n-                visitor.setSlot(-1);\n-                this.broadcast(MaplePacketCreator.getPlayerShopRemoveVisitor(i + 1));\n-                return;\n+        \n+        visitorLock.lock();\n+        try {\n+            for (int i = 0; i < 3; i++) {\n+                if (visitors[i] != null && visitors[i].getId() == visitor.getId()) {\n+                    visitors[i] = null;\n+                    visitor.setSlot(-1);\n+                    this.broadcast(MaplePacketCreator.getPlayerShopRemoveVisitor(i + 1));\n+                    return;\n+                }\n             }\n+        } finally {\n+            visitorLock.unlock();\n         }\n     }\n     \n@@ -124,7 +136,8 @@ public void removeVisitor(MapleCharacter visitor) {\n             owner.getMap().removeMapObject(this);\n             owner.setPlayerShop(null);\n         } else {\n-            synchronized (visitors) {\n+            visitorLock.lock();\n+            try {\n                 for (int i = 0; i < 3; i++) {\n                     if (visitors[i] != null && visitors[i].getId() == visitor.getId()) {\n                         visitor.setSlot(-1);    //absolutely cant remove player slot for late players without dc'ing them... heh\n@@ -143,15 +156,20 @@ public void removeVisitor(MapleCharacter visitor) {\n                         return;\n                     }\n                 }\n+            } finally {\n+                visitorLock.unlock();\n             }\n             \n             if(this.getOwner().getPlayerShop() != null) visitor.getMap().broadcastMessage(MaplePacketCreator.addCharBox(this.getOwner(), 4));\n         }\n     }\n \n     public boolean isVisitor(MapleCharacter visitor) {\n-        synchronized (visitors) {\n+        visitorLock.lock();\n+        try {\n             return visitors[0] == visitor || visitors[1] == visitor || visitors[2] == visitor;\n+        } finally {\n+            visitorLock.unlock();\n         }\n     }\n \n@@ -187,7 +205,7 @@ public void buy(MapleClient c, int item, short quantity) {\n                 synchronized (c.getPlayer()) {\n                     if (c.getPlayer().getMeso() >= (long) pItem.getPrice() * quantity) {\n                         if (MapleInventoryManipulator.addFromDrop(c, newItem, false)) {\n-                            c.getPlayer().gainMeso(-pItem.getPrice() * quantity, true);\n+                            c.getPlayer().gainMeso(-pItem.getPrice() * quantity, false);\n                             owner.gainMeso(pItem.getPrice() * quantity, true);\n                             pItem.setBundles((short) (pItem.getBundles() - quantity));\n                             if (pItem.getBundles() < 1) {\n@@ -209,17 +227,21 @@ public void buy(MapleClient c, int item, short quantity) {\n     }\n \n     public void broadcastToVisitors(final byte[] packet) {\n-        synchronized (visitors) {\n+        visitorLock.lock();\n+        try {\n             for (int i = 0; i < 3; i++) {\n                 if (visitors[i] != null) {\n                     visitors[i].getClient().announce(packet);\n                 }\n             }\n+        } finally {\n+            visitorLock.unlock();\n         }\n     }\n     \n     public void broadcastRestoreToVisitors() {\n-        synchronized (visitors) {\n+        visitorLock.lock();\n+        try {\n             for (int i = 0; i < 3; i++) {\n                 if (visitors[i] != null) {\n                     visitors[i].getClient().announce(MaplePacketCreator.getPlayerShopRemoveVisitor(i + 1));\n@@ -233,12 +255,16 @@ public void broadcastRestoreToVisitors() {\n             }\n             \n             recoverChatLog();\n+        } finally {\n+            visitorLock.unlock();\n         }\n     }\n \n     public void removeVisitors() {\n         List<MapleCharacter> visitorList = new ArrayList<>(3);\n-        synchronized (visitors) {\n+        \n+        visitorLock.lock();\n+        try {\n             try {\n                 for (int i = 0; i < 3; i++) {\n                     if (visitors[i] != null) {\n@@ -249,6 +275,8 @@ public void removeVisitors() {\n             } catch (Exception e) {\n                 e.printStackTrace();\n             }\n+        } finally {\n+            visitorLock.unlock();\n         }\n         \n         for(MapleCharacter mc : visitorList) forceRemoveVisitor(mc);\n@@ -412,7 +440,8 @@ public synchronized boolean visitShop(MapleCharacter chr) {\n             return false;\n         }\n         \n-        synchronized (visitors) {\n+        visitorLock.lock();\n+        try {\n             if (this.hasFreeSlot() && !this.isVisitor(chr)) {\n                 this.addVisitor(chr);\n                 chr.setPlayerShop(this);\n@@ -422,6 +451,8 @@ public synchronized boolean visitShop(MapleCharacter chr) {\n             }\n \n             return false;\n+        } finally {\n+            visitorLock.unlock();\n         }\n     }\n     "}, {"sha": "60e0649bb46c0b8c182f205fb13a113683f3cb00", "filename": "tools/MapleArrowFetcher/build.xml", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/build.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/build.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/build.xml?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!-- You may freely edit this file. See commented blocks below for -->\n+<!-- some examples of how to customize the build. -->\n+<!-- (If you delete it and reopen the project it will be recreated.) -->\n+<!-- By default, only the Clean and Build commands use this build script. -->\n+<!-- Commands such as Run, Debug, and Test only use this build script if -->\n+<!-- the Compile on Save feature is turned off for the project. -->\n+<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->\n+<!-- in the project's Project Properties dialog box.-->\n+<project name=\"MapleArrowFetcher\" default=\"default\" basedir=\".\">\n+    <description>Builds, tests, and runs the project MapleArrowFetcher.</description>\n+    <import file=\"nbproject/build-impl.xml\"/>\n+    <!--\n+\n+    There exist several targets which are by default empty and which can be \n+    used for execution of your tasks. These targets are usually executed \n+    before and after some main targets. They are: \n+\n+      -pre-init:                 called before initialization of project properties\n+      -post-init:                called after initialization of project properties\n+      -pre-compile:              called before javac compilation\n+      -post-compile:             called after javac compilation\n+      -pre-compile-single:       called before javac compilation of single file\n+      -post-compile-single:      called after javac compilation of single file\n+      -pre-compile-test:         called before javac compilation of JUnit tests\n+      -post-compile-test:        called after javac compilation of JUnit tests\n+      -pre-compile-test-single:  called before javac compilation of single JUnit test\n+      -post-compile-test-single: called after javac compilation of single JUunit test\n+      -pre-jar:                  called before JAR building\n+      -post-jar:                 called after JAR building\n+      -post-clean:               called after cleaning build products\n+\n+    (Targets beginning with '-' are not intended to be called on their own.)\n+\n+    Example of inserting an obfuscator after compilation could look like this:\n+\n+        <target name=\"-post-compile\">\n+            <obfuscate>\n+                <fileset dir=\"${build.classes.dir}\"/>\n+            </obfuscate>\n+        </target>\n+\n+    For list of available properties check the imported \n+    nbproject/build-impl.xml file. \n+\n+\n+    Another way to customize the build is by overriding existing main targets.\n+    The targets of interest are: \n+\n+      -init-macrodef-javac:     defines macro for javac compilation\n+      -init-macrodef-junit:     defines macro for junit execution\n+      -init-macrodef-debug:     defines macro for class debugging\n+      -init-macrodef-java:      defines macro for class execution\n+      -do-jar:                  JAR building\n+      run:                      execution of project \n+      -javadoc-build:           Javadoc generation\n+      test-report:              JUnit report generation\n+\n+    An example of overriding the target for project execution could look like this:\n+\n+        <target name=\"run\" depends=\"MapleArrowFetcher-impl.jar\">\n+            <exec dir=\"bin\" executable=\"launcher.exe\">\n+                <arg file=\"${dist.jar}\"/>\n+            </exec>\n+        </target>\n+\n+    Notice that the overridden target depends on the jar target and not only on \n+    the compile target as the regular run target does. Again, for a list of available \n+    properties which you can use, check the target you are overriding in the\n+    nbproject/build-impl.xml file. \n+\n+    -->\n+</project>"}, {"sha": "ae250a17e31fc7636344a3a400170b237ac6d314", "filename": "tools/MapleArrowFetcher/lib/arrow_drop_data.sql", "status": "added", "additions": 766, "deletions": 0, "changes": 766, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/lib/arrow_drop_data.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/lib/arrow_drop_data.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/lib/arrow_drop_data.sql?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,766 @@\n+ # SQL File autogenerated from the MapleArrowFetcher feature by Ronan Lana.\n+ # Generated data takes into account mob stats such as level and boss for the raw arrow ranges.\n+ # Only current arrows entries on the DB it was compiled are being updated here.\n+\n+UPDATE drop_data\n+SET minimum_quantity = CASE\n+                       WHEN dropperid = 100100 AND itemid = 2060000 THEN 1\n+                       WHEN dropperid = 100100 AND itemid = 2061000 THEN 1\n+                       WHEN dropperid = 100101 AND itemid = 2060000 THEN 3\n+                       WHEN dropperid = 100101 AND itemid = 2061000 THEN 3\n+                       WHEN dropperid = 100120 AND itemid = 2060000 THEN 1\n+                       WHEN dropperid = 100120 AND itemid = 2061000 THEN 1\n+                       WHEN dropperid = 100121 AND itemid = 2060000 THEN 5\n+                       WHEN dropperid = 100123 AND itemid = 2061000 THEN 13\n+                       WHEN dropperid = 100124 AND itemid = 2060000 THEN 17\n+                       WHEN dropperid = 100124 AND itemid = 2061000 THEN 17\n+                       WHEN dropperid = 120100 AND itemid = 2060000 THEN 3\n+                       WHEN dropperid = 120100 AND itemid = 2061000 THEN 3\n+                       WHEN dropperid = 130100 AND itemid = 2060000 THEN 7\n+                       WHEN dropperid = 130100 AND itemid = 2061000 THEN 7\n+                       WHEN dropperid = 130101 AND itemid = 2060000 THEN 7\n+                       WHEN dropperid = 130101 AND itemid = 2061000 THEN 7\n+                       WHEN dropperid = 210100 AND itemid = 2060000 THEN 11\n+                       WHEN dropperid = 210100 AND itemid = 2061000 THEN 11\n+                       WHEN dropperid = 1110100 AND itemid = 2060000 THEN 29\n+                       WHEN dropperid = 1110100 AND itemid = 2061000 THEN 29\n+                       WHEN dropperid = 1110101 AND itemid = 2060000 THEN 19\n+                       WHEN dropperid = 1110101 AND itemid = 2061000 THEN 19\n+                       WHEN dropperid = 1110130 AND itemid = 2060000 THEN 29\n+                       WHEN dropperid = 1110130 AND itemid = 2061000 THEN 29\n+                       WHEN dropperid = 1120100 AND itemid = 2060000 THEN 23\n+                       WHEN dropperid = 1120100 AND itemid = 2061000 THEN 23\n+                       WHEN dropperid = 1130100 AND itemid = 2060000 THEN 33\n+                       WHEN dropperid = 1130100 AND itemid = 2061000 THEN 33\n+                       WHEN dropperid = 1140100 AND itemid = 2060000 THEN 36\n+                       WHEN dropperid = 1140100 AND itemid = 2061000 THEN 36\n+                       WHEN dropperid = 1140130 AND itemid = 2060000 THEN 36\n+                       WHEN dropperid = 1140130 AND itemid = 2061000 THEN 36\n+                       WHEN dropperid = 1210100 AND itemid = 2060000 THEN 13\n+                       WHEN dropperid = 1210100 AND itemid = 2061000 THEN 13\n+                       WHEN dropperid = 1210101 AND itemid = 2060000 THEN 19\n+                       WHEN dropperid = 1210101 AND itemid = 2061000 THEN 19\n+                       WHEN dropperid = 1210102 AND itemid = 2060000 THEN 15\n+                       WHEN dropperid = 1210102 AND itemid = 2061000 THEN 15\n+                       WHEN dropperid = 1210103 AND itemid = 2060000 THEN 29\n+                       WHEN dropperid = 1210103 AND itemid = 2061000 THEN 29\n+                       WHEN dropperid = 2100100 AND itemid = 2060000 THEN 38\n+                       WHEN dropperid = 2100100 AND itemid = 2061000 THEN 38\n+                       WHEN dropperid = 2100101 AND itemid = 2060000 THEN 40\n+                       WHEN dropperid = 2100101 AND itemid = 2061000 THEN 40\n+                       WHEN dropperid = 2100102 AND itemid = 2060000 THEN 42\n+                       WHEN dropperid = 2100102 AND itemid = 2061000 THEN 42\n+                       WHEN dropperid = 2100103 AND itemid = 2060000 THEN 48\n+                       WHEN dropperid = 2100103 AND itemid = 2061000 THEN 48\n+                       WHEN dropperid = 2100104 AND itemid = 2060000 THEN 54\n+                       WHEN dropperid = 2100104 AND itemid = 2061000 THEN 54\n+                       WHEN dropperid = 2100105 AND itemid = 2060000 THEN 44\n+                       WHEN dropperid = 2100105 AND itemid = 2061000 THEN 44\n+                       WHEN dropperid = 2100106 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2100106 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2100107 AND itemid = 2060000 THEN 52\n+                       WHEN dropperid = 2100107 AND itemid = 2061000 THEN 52\n+                       WHEN dropperid = 2100108 AND itemid = 2060000 THEN 56\n+                       WHEN dropperid = 2100108 AND itemid = 2061000 THEN 56\n+                       WHEN dropperid = 2110200 AND itemid = 2060000 THEN 42\n+                       WHEN dropperid = 2110200 AND itemid = 2061000 THEN 42\n+                       WHEN dropperid = 2110300 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2110300 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2110301 AND itemid = 2060000 THEN 56\n+                       WHEN dropperid = 2110301 AND itemid = 2061000 THEN 56\n+                       WHEN dropperid = 2130100 AND itemid = 2060000 THEN 42\n+                       WHEN dropperid = 2130100 AND itemid = 2061000 THEN 42\n+                       WHEN dropperid = 2220000 AND itemid = 2060000 THEN 54\n+                       WHEN dropperid = 2220000 AND itemid = 2061000 THEN 54\n+                       WHEN dropperid = 2220100 AND itemid = 2060000 THEN 38\n+                       WHEN dropperid = 2220100 AND itemid = 2061000 THEN 38\n+                       WHEN dropperid = 2230100 AND itemid = 2060000 THEN 52\n+                       WHEN dropperid = 2230100 AND itemid = 2061000 THEN 52\n+                       WHEN dropperid = 2230101 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2230101 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2230102 AND itemid = 2060000 THEN 48\n+                       WHEN dropperid = 2230102 AND itemid = 2061000 THEN 48\n+                       WHEN dropperid = 2230103 AND itemid = 2060000 THEN 44\n+                       WHEN dropperid = 2230103 AND itemid = 2061000 THEN 44\n+                       WHEN dropperid = 2230104 AND itemid = 2060000 THEN 54\n+                       WHEN dropperid = 2230104 AND itemid = 2061000 THEN 54\n+                       WHEN dropperid = 2230105 AND itemid = 2060000 THEN 44\n+                       WHEN dropperid = 2230105 AND itemid = 2061000 THEN 44\n+                       WHEN dropperid = 2230106 AND itemid = 2060000 THEN 48\n+                       WHEN dropperid = 2230106 AND itemid = 2061000 THEN 48\n+                       WHEN dropperid = 2230107 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2230107 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2230108 AND itemid = 2060000 THEN 42\n+                       WHEN dropperid = 2230108 AND itemid = 2061000 THEN 42\n+                       WHEN dropperid = 2230109 AND itemid = 2060000 THEN 54\n+                       WHEN dropperid = 2230109 AND itemid = 2061000 THEN 54\n+                       WHEN dropperid = 2230110 AND itemid = 2060000 THEN 44\n+                       WHEN dropperid = 2230110 AND itemid = 2061000 THEN 44\n+                       WHEN dropperid = 2230111 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2230111 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2230131 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 2230131 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 2230200 AND itemid = 2060000 THEN 56\n+                       WHEN dropperid = 2230200 AND itemid = 2061000 THEN 56\n+                       WHEN dropperid = 2300100 AND itemid = 2060000 THEN 38\n+                       WHEN dropperid = 2300100 AND itemid = 2061000 THEN 38\n+                       WHEN dropperid = 3000000 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3000000 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3000005 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3000005 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3000006 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3000006 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3100101 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3100101 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3100102 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3100102 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3110101 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3110101 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3110102 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3110102 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3110300 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3110300 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3110301 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3110301 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3110302 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3110302 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3110303 AND itemid = 2060000 THEN 73\n+                       WHEN dropperid = 3110303 AND itemid = 2061000 THEN 73\n+                       WHEN dropperid = 3210100 AND itemid = 2060005 THEN 10\n+                       WHEN dropperid = 3210203 AND itemid = 2060000 THEN 70\n+                       WHEN dropperid = 3210203 AND itemid = 2061000 THEN 70\n+                       WHEN dropperid = 3210204 AND itemid = 2060000 THEN 66\n+                       WHEN dropperid = 3210204 AND itemid = 2061000 THEN 66\n+                       WHEN dropperid = 3210205 AND itemid = 2060000 THEN 66\n+                       WHEN dropperid = 3210205 AND itemid = 2061000 THEN 66\n+                       WHEN dropperid = 3210206 AND itemid = 2060000 THEN 70\n+                       WHEN dropperid = 3210206 AND itemid = 2061000 THEN 70\n+                       WHEN dropperid = 3210207 AND itemid = 2060000 THEN 66\n+                       WHEN dropperid = 3210207 AND itemid = 2060005 THEN 11\n+                       WHEN dropperid = 3210207 AND itemid = 2061000 THEN 66\n+                       WHEN dropperid = 3210208 AND itemid = 2060000 THEN 70\n+                       WHEN dropperid = 3210208 AND itemid = 2061000 THEN 70\n+                       WHEN dropperid = 3210450 AND itemid = 2060000 THEN 70\n+                       WHEN dropperid = 3210450 AND itemid = 2061000 THEN 70\n+                       WHEN dropperid = 3210800 AND itemid = 2060005 THEN 12\n+                       WHEN dropperid = 3220000 AND itemid = 2060000 THEN 95\n+                       WHEN dropperid = 3220000 AND itemid = 2061000 THEN 95\n+                       WHEN dropperid = 3230100 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3230100 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3230103 AND itemid = 2060000 THEN 73\n+                       WHEN dropperid = 3230103 AND itemid = 2061000 THEN 73\n+                       WHEN dropperid = 3230200 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3230200 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3230302 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3230302 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3230303 AND itemid = 2060000 THEN 72\n+                       WHEN dropperid = 3230303 AND itemid = 2061000 THEN 72\n+                       WHEN dropperid = 3230304 AND itemid = 2060000 THEN 73\n+                       WHEN dropperid = 3230304 AND itemid = 2061000 THEN 73\n+                       WHEN dropperid = 3230305 AND itemid = 2060000 THEN 75\n+                       WHEN dropperid = 3230305 AND itemid = 2061000 THEN 75\n+                       WHEN dropperid = 3230306 AND itemid = 2060000 THEN 72\n+                       WHEN dropperid = 3230306 AND itemid = 2061000 THEN 72\n+                       WHEN dropperid = 3230307 AND itemid = 2060000 THEN 60\n+                       WHEN dropperid = 3230307 AND itemid = 2061000 THEN 60\n+                       WHEN dropperid = 3230308 AND itemid = 2060000 THEN 75\n+                       WHEN dropperid = 3230308 AND itemid = 2061000 THEN 75\n+                       WHEN dropperid = 3230400 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3230400 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3230405 AND itemid = 2060000 THEN 73\n+                       WHEN dropperid = 3230405 AND itemid = 2061000 THEN 73\n+                       WHEN dropperid = 3300000 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3300000 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3300001 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 3300001 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 3300002 AND itemid = 2060000 THEN 60\n+                       WHEN dropperid = 3300002 AND itemid = 2061000 THEN 60\n+                       WHEN dropperid = 3300003 AND itemid = 2060000 THEN 62\n+                       WHEN dropperid = 3300003 AND itemid = 2061000 THEN 62\n+                       WHEN dropperid = 3300004 AND itemid = 2060000 THEN 64\n+                       WHEN dropperid = 3300004 AND itemid = 2061000 THEN 64\n+                       WHEN dropperid = 3300006 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3300006 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3300007 AND itemid = 2060000 THEN 68\n+                       WHEN dropperid = 3300007 AND itemid = 2061000 THEN 68\n+                       WHEN dropperid = 3300008 AND itemid = 2060000 THEN 103\n+                       WHEN dropperid = 3300008 AND itemid = 2061000 THEN 103\n+                       WHEN dropperid = 4110300 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 4110300 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 4110301 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4110301 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4130103 AND itemid = 2060000 THEN 128\n+                       WHEN dropperid = 4130103 AND itemid = 2061000 THEN 128\n+                       WHEN dropperid = 4230103 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 4230103 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 4230106 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230106 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230108 AND itemid = 2060000 THEN 83\n+                       WHEN dropperid = 4230108 AND itemid = 2061000 THEN 83\n+                       WHEN dropperid = 4230109 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 4230109 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 4230110 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230110 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230111 AND itemid = 2060000 THEN 79\n+                       WHEN dropperid = 4230111 AND itemid = 2061000 THEN 79\n+                       WHEN dropperid = 4230112 AND itemid = 2060000 THEN 85\n+                       WHEN dropperid = 4230112 AND itemid = 2061000 THEN 85\n+                       WHEN dropperid = 4230113 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 4230113 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 4230114 AND itemid = 2060000 THEN 79\n+                       WHEN dropperid = 4230114 AND itemid = 2061000 THEN 79\n+                       WHEN dropperid = 4230115 AND itemid = 2060000 THEN 89\n+                       WHEN dropperid = 4230115 AND itemid = 2061000 THEN 89\n+                       WHEN dropperid = 4230116 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 4230116 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 4230117 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 4230117 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 4230118 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230118 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230119 AND itemid = 2060000 THEN 79\n+                       WHEN dropperid = 4230119 AND itemid = 2061000 THEN 79\n+                       WHEN dropperid = 4230120 AND itemid = 2060000 THEN 85\n+                       WHEN dropperid = 4230120 AND itemid = 2061000 THEN 85\n+                       WHEN dropperid = 4230121 AND itemid = 2060000 THEN 89\n+                       WHEN dropperid = 4230121 AND itemid = 2061000 THEN 89\n+                       WHEN dropperid = 4230123 AND itemid = 2060000 THEN 83\n+                       WHEN dropperid = 4230123 AND itemid = 2061000 THEN 83\n+                       WHEN dropperid = 4230124 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 4230124 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 4230125 AND itemid = 2060000 THEN 85\n+                       WHEN dropperid = 4230125 AND itemid = 2061000 THEN 85\n+                       WHEN dropperid = 4230126 AND itemid = 2060000 THEN 91\n+                       WHEN dropperid = 4230126 AND itemid = 2061000 THEN 91\n+                       WHEN dropperid = 4230201 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 4230201 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 4230300 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230300 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230400 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230400 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230500 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 4230500 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 4230501 AND itemid = 2060000 THEN 79\n+                       WHEN dropperid = 4230501 AND itemid = 2061000 THEN 79\n+                       WHEN dropperid = 4230502 AND itemid = 2060000 THEN 83\n+                       WHEN dropperid = 4230502 AND itemid = 2061000 THEN 83\n+                       WHEN dropperid = 4230503 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230503 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230504 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 4230504 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 4230600 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 4230600 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 4240000 AND itemid = 2060000 THEN 95\n+                       WHEN dropperid = 4240000 AND itemid = 2061000 THEN 95\n+                       WHEN dropperid = 5120100 AND itemid = 2060000 THEN 147\n+                       WHEN dropperid = 5120100 AND itemid = 2061000 THEN 147\n+                       WHEN dropperid = 5130104 AND itemid = 2060000 THEN 107\n+                       WHEN dropperid = 5130104 AND itemid = 2061000 THEN 107\n+                       WHEN dropperid = 5140000 AND itemid = 2060000 THEN 112\n+                       WHEN dropperid = 5140000 AND itemid = 2061000 THEN 112\n+                       WHEN dropperid = 5150000 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 5150000 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 5200000 AND itemid = 2060001 THEN 22\n+                       WHEN dropperid = 5200000 AND itemid = 2061001 THEN 22\n+                       WHEN dropperid = 5200001 AND itemid = 2060001 THEN 29\n+                       WHEN dropperid = 5200001 AND itemid = 2061001 THEN 29\n+                       WHEN dropperid = 5200002 AND itemid = 2060001 THEN 29\n+                       WHEN dropperid = 5200002 AND itemid = 2061001 THEN 29\n+                       WHEN dropperid = 5220000 AND itemid = 2060000 THEN 149\n+                       WHEN dropperid = 5220000 AND itemid = 2061000 THEN 149\n+                       WHEN dropperid = 5220002 AND itemid = 2060000 THEN 136\n+                       WHEN dropperid = 5220002 AND itemid = 2061000 THEN 136\n+                       WHEN dropperid = 5220003 AND itemid = 2060000 THEN 160\n+                       WHEN dropperid = 5220003 AND itemid = 2061000 THEN 160\n+                       WHEN dropperid = 5400000 AND itemid = 2060001 THEN 34\n+                       WHEN dropperid = 5400000 AND itemid = 2061001 THEN 34\n+                       WHEN dropperid = 6220000 AND itemid = 2060000 THEN 177\n+                       WHEN dropperid = 6220000 AND itemid = 2061000 THEN 177\n+                       WHEN dropperid = 7120103 AND itemid = 2060003 THEN 34\n+                       WHEN dropperid = 7220000 AND itemid = 2060001 THEN 96\n+                       WHEN dropperid = 7220000 AND itemid = 2061001 THEN 96\n+                       WHEN dropperid = 7220001 AND itemid = 2060001 THEN 95\n+                       WHEN dropperid = 7220001 AND itemid = 2061001 THEN 95\n+                       WHEN dropperid = 7220002 AND itemid = 2060001 THEN 104\n+                       WHEN dropperid = 7220002 AND itemid = 2061001 THEN 104\n+                       WHEN dropperid = 8220000 AND itemid = 2060001 THEN 113\n+                       WHEN dropperid = 8220000 AND itemid = 2061001 THEN 113\n+                       WHEN dropperid = 8220001 AND itemid = 2060001 THEN 122\n+                       WHEN dropperid = 8220001 AND itemid = 2061001 THEN 122\n+                       WHEN dropperid = 9300011 AND itemid = 2060000 THEN 75\n+                       WHEN dropperid = 9300011 AND itemid = 2061000 THEN 75\n+                       WHEN dropperid = 9300060 AND itemid = 2060000 THEN 81\n+                       WHEN dropperid = 9300060 AND itemid = 2061000 THEN 81\n+                       WHEN dropperid = 9300131 AND itemid = 2060000 THEN 75\n+                       WHEN dropperid = 9300131 AND itemid = 2061000 THEN 75\n+                       WHEN dropperid = 9300132 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 9300132 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 9300133 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 9300160 AND itemid = 2060000 THEN 122\n+                       WHEN dropperid = 9300160 AND itemid = 2061000 THEN 122\n+                       WHEN dropperid = 9300161 AND itemid = 2060000 THEN 122\n+                       WHEN dropperid = 9300161 AND itemid = 2061000 THEN 122\n+                       WHEN dropperid = 9300274 AND itemid = 2060000 THEN 15\n+                       WHEN dropperid = 9300274 AND itemid = 2061000 THEN 15\n+                       WHEN dropperid = 9300332 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 9300334 AND itemid = 2060000 THEN 95\n+                       WHEN dropperid = 9300341 AND itemid = 2060000 THEN 11\n+                       WHEN dropperid = 9300341 AND itemid = 2061000 THEN 11\n+                       WHEN dropperid = 9300342 AND itemid = 2060000 THEN 15\n+                       WHEN dropperid = 9300342 AND itemid = 2061000 THEN 15\n+                       WHEN dropperid = 9300343 AND itemid = 2060000 THEN 13\n+                       WHEN dropperid = 9300343 AND itemid = 2061000 THEN 13\n+                       WHEN dropperid = 9303005 AND itemid = 2060001 THEN 25\n+                       WHEN dropperid = 9303005 AND itemid = 2061001 THEN 25\n+                       WHEN dropperid = 9303008 AND itemid = 2060001 THEN 25\n+                       WHEN dropperid = 9303008 AND itemid = 2061001 THEN 25\n+                       WHEN dropperid = 9303009 AND itemid = 2060001 THEN 49\n+                       WHEN dropperid = 9303009 AND itemid = 2061001 THEN 49\n+                       WHEN dropperid = 9400000 AND itemid = 2060001 THEN 24\n+                       WHEN dropperid = 9400009 AND itemid = 2060001 THEN 194\n+                       WHEN dropperid = 9400011 AND itemid = 2060002 THEN 25\n+                       WHEN dropperid = 9400100 AND itemid = 2060003 THEN 21\n+                       WHEN dropperid = 9400101 AND itemid = 2061003 THEN 22\n+                       WHEN dropperid = 9400204 AND itemid = 2060003 THEN 26\n+                       WHEN dropperid = 9400239 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 9400239 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 9400244 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 9400244 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 9400248 AND itemid = 2060000 THEN 46\n+                       WHEN dropperid = 9400248 AND itemid = 2061000 THEN 46\n+                       WHEN dropperid = 9400540 AND itemid = 2060004 THEN 9\n+                       WHEN dropperid = 9400540 AND itemid = 2061004 THEN 9\n+                       WHEN dropperid = 9400541 AND itemid = 2060004 THEN 9\n+                       WHEN dropperid = 9400541 AND itemid = 2061004 THEN 9\n+                       WHEN dropperid = 9400542 AND itemid = 2060004 THEN 14\n+                       WHEN dropperid = 9400542 AND itemid = 2061004 THEN 14\n+                       WHEN dropperid = 9400543 AND itemid = 2060004 THEN 15\n+                       WHEN dropperid = 9400543 AND itemid = 2061004 THEN 15\n+                       WHEN dropperid = 9400547 AND itemid = 2060000 THEN 52\n+                       WHEN dropperid = 9400547 AND itemid = 2061000 THEN 52\n+                       WHEN dropperid = 9400548 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 9400548 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 9400550 AND itemid = 2060000 THEN 52\n+                       WHEN dropperid = 9400550 AND itemid = 2061000 THEN 52\n+                       WHEN dropperid = 9400558 AND itemid = 2060000 THEN 58\n+                       WHEN dropperid = 9400558 AND itemid = 2061000 THEN 58\n+                       WHEN dropperid = 9400563 AND itemid = 2060000 THEN 77\n+                       WHEN dropperid = 9400563 AND itemid = 2061000 THEN 77\n+                       WHEN dropperid = 9400638 AND itemid = 2060000 THEN 38\n+                       WHEN dropperid = 9400638 AND itemid = 2061000 THEN 38\n+                       WHEN dropperid = 9420500 AND itemid = 2060000 THEN 54\n+                       WHEN dropperid = 9420500 AND itemid = 2061000 THEN 54\n+                       WHEN dropperid = 9420502 AND itemid = 2060000 THEN 35\n+                       WHEN dropperid = 9420502 AND itemid = 2061000 THEN 35\n+                       WHEN dropperid = 9420506 AND itemid = 2060000 THEN 44\n+                       WHEN dropperid = 9420506 AND itemid = 2061000 THEN 44\n+                       WHEN dropperid = 9420508 AND itemid = 2060000 THEN 83\n+                       WHEN dropperid = 9420508 AND itemid = 2061000 THEN 83\n+                       WHEN dropperid = 9420527 AND itemid = 2060001 THEN 43\n+                       WHEN dropperid = 9420527 AND itemid = 2061001 THEN 43\n+                       WHEN dropperid = 9420531 AND itemid = 2060001 THEN 57\n+                       WHEN dropperid = 9420531 AND itemid = 2061001 THEN 57\n+                       WHEN dropperid = 9500112 AND itemid = 2060001 THEN 34\n+                       WHEN dropperid = 9500112 AND itemid = 2061001 THEN 34\n+                       WHEN dropperid = 9500119 AND itemid = 2060000 THEN 75\n+                       WHEN dropperid = 9500119 AND itemid = 2061000 THEN 75\n+                       WHEN dropperid = 9500120 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 9500120 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 9500122 AND itemid = 2060000 THEN 95\n+                       WHEN dropperid = 9500123 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 9500123 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 9500308 AND itemid = 2060000 THEN 136\n+                       WHEN dropperid = 9500308 AND itemid = 2061000 THEN 136\n+                       WHEN dropperid = 9500310 AND itemid = 2060000 THEN 160\n+                       WHEN dropperid = 9500310 AND itemid = 2061000 THEN 160\n+                       WHEN dropperid = 9500312 AND itemid = 2060001 THEN 95\n+                       WHEN dropperid = 9500312 AND itemid = 2061001 THEN 95\n+                       WHEN dropperid = 9500313 AND itemid = 2060001 THEN 96\n+                       WHEN dropperid = 9500313 AND itemid = 2061001 THEN 96\n+                       WHEN dropperid = 9500314 AND itemid = 2060001 THEN 104\n+                       WHEN dropperid = 9500314 AND itemid = 2061001 THEN 104\n+                       WHEN dropperid = 9500321 AND itemid = 2060001 THEN 9\n+                       WHEN dropperid = 9500321 AND itemid = 2061001 THEN 9\n+                       WHEN dropperid = 9500366 AND itemid = 2060000 THEN 29\n+                       WHEN dropperid = 9500369 AND itemid = 2060000 THEN 29\n+  ELSE minimum_quantity END,\n+    maximum_quantity = CASE\n+                       WHEN dropperid = 100100 AND itemid = 2060000 THEN 3\n+                       WHEN dropperid = 100100 AND itemid = 2061000 THEN 3\n+                       WHEN dropperid = 100101 AND itemid = 2060000 THEN 9\n+                       WHEN dropperid = 100101 AND itemid = 2061000 THEN 9\n+                       WHEN dropperid = 100120 AND itemid = 2060000 THEN 3\n+                       WHEN dropperid = 100120 AND itemid = 2061000 THEN 3\n+                       WHEN dropperid = 100121 AND itemid = 2060000 THEN 15\n+                       WHEN dropperid = 100123 AND itemid = 2061000 THEN 39\n+                       WHEN dropperid = 100124 AND itemid = 2060000 THEN 51\n+                       WHEN dropperid = 100124 AND itemid = 2061000 THEN 51\n+                       WHEN dropperid = 120100 AND itemid = 2060000 THEN 9\n+                       WHEN dropperid = 120100 AND itemid = 2061000 THEN 9\n+                       WHEN dropperid = 130100 AND itemid = 2060000 THEN 21\n+                       WHEN dropperid = 130100 AND itemid = 2061000 THEN 21\n+                       WHEN dropperid = 130101 AND itemid = 2060000 THEN 21\n+                       WHEN dropperid = 130101 AND itemid = 2061000 THEN 21\n+                       WHEN dropperid = 210100 AND itemid = 2060000 THEN 33\n+                       WHEN dropperid = 210100 AND itemid = 2061000 THEN 33\n+                       WHEN dropperid = 1110100 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 1110100 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 1110101 AND itemid = 2060000 THEN 57\n+                       WHEN dropperid = 1110101 AND itemid = 2061000 THEN 57\n+                       WHEN dropperid = 1110130 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 1110130 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 1120100 AND itemid = 2060000 THEN 69\n+                       WHEN dropperid = 1120100 AND itemid = 2061000 THEN 69\n+                       WHEN dropperid = 1130100 AND itemid = 2060000 THEN 99\n+                       WHEN dropperid = 1130100 AND itemid = 2061000 THEN 99\n+                       WHEN dropperid = 1140100 AND itemid = 2060000 THEN 108\n+                       WHEN dropperid = 1140100 AND itemid = 2061000 THEN 108\n+                       WHEN dropperid = 1140130 AND itemid = 2060000 THEN 108\n+                       WHEN dropperid = 1140130 AND itemid = 2061000 THEN 108\n+                       WHEN dropperid = 1210100 AND itemid = 2060000 THEN 39\n+                       WHEN dropperid = 1210100 AND itemid = 2061000 THEN 39\n+                       WHEN dropperid = 1210101 AND itemid = 2060000 THEN 57\n+                       WHEN dropperid = 1210101 AND itemid = 2061000 THEN 57\n+                       WHEN dropperid = 1210102 AND itemid = 2060000 THEN 45\n+                       WHEN dropperid = 1210102 AND itemid = 2061000 THEN 45\n+                       WHEN dropperid = 1210103 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 1210103 AND itemid = 2061000 THEN 87\n+                       WHEN dropperid = 2100100 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 2100100 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 2100101 AND itemid = 2060000 THEN 120\n+                       WHEN dropperid = 2100101 AND itemid = 2061000 THEN 120\n+                       WHEN dropperid = 2100102 AND itemid = 2060000 THEN 126\n+                       WHEN dropperid = 2100102 AND itemid = 2061000 THEN 126\n+                       WHEN dropperid = 2100103 AND itemid = 2060000 THEN 144\n+                       WHEN dropperid = 2100103 AND itemid = 2061000 THEN 144\n+                       WHEN dropperid = 2100104 AND itemid = 2060000 THEN 162\n+                       WHEN dropperid = 2100104 AND itemid = 2061000 THEN 162\n+                       WHEN dropperid = 2100105 AND itemid = 2060000 THEN 132\n+                       WHEN dropperid = 2100105 AND itemid = 2061000 THEN 132\n+                       WHEN dropperid = 2100106 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2100106 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2100107 AND itemid = 2060000 THEN 156\n+                       WHEN dropperid = 2100107 AND itemid = 2061000 THEN 156\n+                       WHEN dropperid = 2100108 AND itemid = 2060000 THEN 168\n+                       WHEN dropperid = 2100108 AND itemid = 2061000 THEN 168\n+                       WHEN dropperid = 2110200 AND itemid = 2060000 THEN 126\n+                       WHEN dropperid = 2110200 AND itemid = 2061000 THEN 126\n+                       WHEN dropperid = 2110300 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2110300 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2110301 AND itemid = 2060000 THEN 168\n+                       WHEN dropperid = 2110301 AND itemid = 2061000 THEN 168\n+                       WHEN dropperid = 2130100 AND itemid = 2060000 THEN 126\n+                       WHEN dropperid = 2130100 AND itemid = 2061000 THEN 126\n+                       WHEN dropperid = 2220000 AND itemid = 2060000 THEN 162\n+                       WHEN dropperid = 2220000 AND itemid = 2061000 THEN 162\n+                       WHEN dropperid = 2220100 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 2220100 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 2230100 AND itemid = 2060000 THEN 156\n+                       WHEN dropperid = 2230100 AND itemid = 2061000 THEN 156\n+                       WHEN dropperid = 2230101 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2230101 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2230102 AND itemid = 2060000 THEN 144\n+                       WHEN dropperid = 2230102 AND itemid = 2061000 THEN 144\n+                       WHEN dropperid = 2230103 AND itemid = 2060000 THEN 132\n+                       WHEN dropperid = 2230103 AND itemid = 2061000 THEN 132\n+                       WHEN dropperid = 2230104 AND itemid = 2060000 THEN 162\n+                       WHEN dropperid = 2230104 AND itemid = 2061000 THEN 162\n+                       WHEN dropperid = 2230105 AND itemid = 2060000 THEN 132\n+                       WHEN dropperid = 2230105 AND itemid = 2061000 THEN 132\n+                       WHEN dropperid = 2230106 AND itemid = 2060000 THEN 144\n+                       WHEN dropperid = 2230106 AND itemid = 2061000 THEN 144\n+                       WHEN dropperid = 2230107 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2230107 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2230108 AND itemid = 2060000 THEN 126\n+                       WHEN dropperid = 2230108 AND itemid = 2061000 THEN 126\n+                       WHEN dropperid = 2230109 AND itemid = 2060000 THEN 162\n+                       WHEN dropperid = 2230109 AND itemid = 2061000 THEN 162\n+                       WHEN dropperid = 2230110 AND itemid = 2060000 THEN 132\n+                       WHEN dropperid = 2230110 AND itemid = 2061000 THEN 132\n+                       WHEN dropperid = 2230111 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2230111 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2230131 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 2230131 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 2230200 AND itemid = 2060000 THEN 168\n+                       WHEN dropperid = 2230200 AND itemid = 2061000 THEN 168\n+                       WHEN dropperid = 2300100 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 2300100 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 3000000 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3000000 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3000005 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3000005 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3000006 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3000006 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3100101 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3100101 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3100102 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3100102 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3110101 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3110101 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3110102 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3110102 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3110300 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3110300 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3110301 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3110301 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3110302 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3110302 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3110303 AND itemid = 2060000 THEN 219\n+                       WHEN dropperid = 3110303 AND itemid = 2061000 THEN 219\n+                       WHEN dropperid = 3210100 AND itemid = 2060005 THEN 31\n+                       WHEN dropperid = 3210203 AND itemid = 2060000 THEN 210\n+                       WHEN dropperid = 3210203 AND itemid = 2061000 THEN 210\n+                       WHEN dropperid = 3210204 AND itemid = 2060000 THEN 198\n+                       WHEN dropperid = 3210204 AND itemid = 2061000 THEN 198\n+                       WHEN dropperid = 3210205 AND itemid = 2060000 THEN 198\n+                       WHEN dropperid = 3210205 AND itemid = 2061000 THEN 198\n+                       WHEN dropperid = 3210206 AND itemid = 2060000 THEN 210\n+                       WHEN dropperid = 3210206 AND itemid = 2061000 THEN 210\n+                       WHEN dropperid = 3210207 AND itemid = 2060000 THEN 198\n+                       WHEN dropperid = 3210207 AND itemid = 2060005 THEN 33\n+                       WHEN dropperid = 3210207 AND itemid = 2061000 THEN 198\n+                       WHEN dropperid = 3210208 AND itemid = 2060000 THEN 210\n+                       WHEN dropperid = 3210208 AND itemid = 2061000 THEN 210\n+                       WHEN dropperid = 3210450 AND itemid = 2060000 THEN 210\n+                       WHEN dropperid = 3210450 AND itemid = 2061000 THEN 210\n+                       WHEN dropperid = 3210800 AND itemid = 2060005 THEN 36\n+                       WHEN dropperid = 3220000 AND itemid = 2060000 THEN 285\n+                       WHEN dropperid = 3220000 AND itemid = 2061000 THEN 285\n+                       WHEN dropperid = 3230100 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3230100 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3230103 AND itemid = 2060000 THEN 219\n+                       WHEN dropperid = 3230103 AND itemid = 2061000 THEN 219\n+                       WHEN dropperid = 3230200 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3230200 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3230302 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3230302 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3230303 AND itemid = 2060000 THEN 216\n+                       WHEN dropperid = 3230303 AND itemid = 2061000 THEN 216\n+                       WHEN dropperid = 3230304 AND itemid = 2060000 THEN 219\n+                       WHEN dropperid = 3230304 AND itemid = 2061000 THEN 219\n+                       WHEN dropperid = 3230305 AND itemid = 2060000 THEN 225\n+                       WHEN dropperid = 3230305 AND itemid = 2061000 THEN 225\n+                       WHEN dropperid = 3230306 AND itemid = 2060000 THEN 216\n+                       WHEN dropperid = 3230306 AND itemid = 2061000 THEN 216\n+                       WHEN dropperid = 3230307 AND itemid = 2060000 THEN 180\n+                       WHEN dropperid = 3230307 AND itemid = 2061000 THEN 180\n+                       WHEN dropperid = 3230308 AND itemid = 2060000 THEN 225\n+                       WHEN dropperid = 3230308 AND itemid = 2061000 THEN 225\n+                       WHEN dropperid = 3230400 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3230400 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3230405 AND itemid = 2060000 THEN 219\n+                       WHEN dropperid = 3230405 AND itemid = 2061000 THEN 219\n+                       WHEN dropperid = 3300000 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3300000 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3300001 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 3300001 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 3300002 AND itemid = 2060000 THEN 180\n+                       WHEN dropperid = 3300002 AND itemid = 2061000 THEN 180\n+                       WHEN dropperid = 3300003 AND itemid = 2060000 THEN 186\n+                       WHEN dropperid = 3300003 AND itemid = 2061000 THEN 186\n+                       WHEN dropperid = 3300004 AND itemid = 2060000 THEN 192\n+                       WHEN dropperid = 3300004 AND itemid = 2061000 THEN 192\n+                       WHEN dropperid = 3300006 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3300006 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3300007 AND itemid = 2060000 THEN 204\n+                       WHEN dropperid = 3300007 AND itemid = 2061000 THEN 204\n+                       WHEN dropperid = 3300008 AND itemid = 2060000 THEN 309\n+                       WHEN dropperid = 3300008 AND itemid = 2061000 THEN 309\n+                       WHEN dropperid = 4110300 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 4110300 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 4110301 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4110301 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4130103 AND itemid = 2060000 THEN 384\n+                       WHEN dropperid = 4130103 AND itemid = 2061000 THEN 384\n+                       WHEN dropperid = 4230103 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 4230103 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 4230106 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230106 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230108 AND itemid = 2060000 THEN 249\n+                       WHEN dropperid = 4230108 AND itemid = 2061000 THEN 249\n+                       WHEN dropperid = 4230109 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 4230109 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 4230110 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230110 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230111 AND itemid = 2060000 THEN 237\n+                       WHEN dropperid = 4230111 AND itemid = 2061000 THEN 237\n+                       WHEN dropperid = 4230112 AND itemid = 2060000 THEN 255\n+                       WHEN dropperid = 4230112 AND itemid = 2061000 THEN 255\n+                       WHEN dropperid = 4230113 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 4230113 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 4230114 AND itemid = 2060000 THEN 237\n+                       WHEN dropperid = 4230114 AND itemid = 2061000 THEN 237\n+                       WHEN dropperid = 4230115 AND itemid = 2060000 THEN 267\n+                       WHEN dropperid = 4230115 AND itemid = 2061000 THEN 267\n+                       WHEN dropperid = 4230116 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 4230116 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 4230117 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 4230117 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 4230118 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230118 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230119 AND itemid = 2060000 THEN 237\n+                       WHEN dropperid = 4230119 AND itemid = 2061000 THEN 237\n+                       WHEN dropperid = 4230120 AND itemid = 2060000 THEN 255\n+                       WHEN dropperid = 4230120 AND itemid = 2061000 THEN 255\n+                       WHEN dropperid = 4230121 AND itemid = 2060000 THEN 267\n+                       WHEN dropperid = 4230121 AND itemid = 2061000 THEN 267\n+                       WHEN dropperid = 4230123 AND itemid = 2060000 THEN 249\n+                       WHEN dropperid = 4230123 AND itemid = 2061000 THEN 249\n+                       WHEN dropperid = 4230124 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 4230124 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 4230125 AND itemid = 2060000 THEN 255\n+                       WHEN dropperid = 4230125 AND itemid = 2061000 THEN 255\n+                       WHEN dropperid = 4230126 AND itemid = 2060000 THEN 273\n+                       WHEN dropperid = 4230126 AND itemid = 2061000 THEN 273\n+                       WHEN dropperid = 4230201 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 4230201 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 4230300 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230300 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230400 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230400 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230500 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 4230500 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 4230501 AND itemid = 2060000 THEN 237\n+                       WHEN dropperid = 4230501 AND itemid = 2061000 THEN 237\n+                       WHEN dropperid = 4230502 AND itemid = 2060000 THEN 249\n+                       WHEN dropperid = 4230502 AND itemid = 2061000 THEN 249\n+                       WHEN dropperid = 4230503 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230503 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230504 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 4230504 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 4230600 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 4230600 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 4240000 AND itemid = 2060000 THEN 285\n+                       WHEN dropperid = 4240000 AND itemid = 2061000 THEN 285\n+                       WHEN dropperid = 5120100 AND itemid = 2060000 THEN 441\n+                       WHEN dropperid = 5120100 AND itemid = 2061000 THEN 441\n+                       WHEN dropperid = 5130104 AND itemid = 2060000 THEN 321\n+                       WHEN dropperid = 5130104 AND itemid = 2061000 THEN 321\n+                       WHEN dropperid = 5140000 AND itemid = 2060000 THEN 336\n+                       WHEN dropperid = 5140000 AND itemid = 2061000 THEN 336\n+                       WHEN dropperid = 5150000 AND itemid = 2060000 THEN 342\n+                       WHEN dropperid = 5150000 AND itemid = 2061000 THEN 342\n+                       WHEN dropperid = 5200000 AND itemid = 2060001 THEN 66\n+                       WHEN dropperid = 5200000 AND itemid = 2061001 THEN 66\n+                       WHEN dropperid = 5200001 AND itemid = 2060001 THEN 87\n+                       WHEN dropperid = 5200001 AND itemid = 2061001 THEN 87\n+                       WHEN dropperid = 5200002 AND itemid = 2060001 THEN 87\n+                       WHEN dropperid = 5200002 AND itemid = 2061001 THEN 87\n+                       WHEN dropperid = 5220000 AND itemid = 2060000 THEN 447\n+                       WHEN dropperid = 5220000 AND itemid = 2061000 THEN 447\n+                       WHEN dropperid = 5220002 AND itemid = 2060000 THEN 408\n+                       WHEN dropperid = 5220002 AND itemid = 2061000 THEN 408\n+                       WHEN dropperid = 5220003 AND itemid = 2060000 THEN 480\n+                       WHEN dropperid = 5220003 AND itemid = 2061000 THEN 480\n+                       WHEN dropperid = 5400000 AND itemid = 2060001 THEN 102\n+                       WHEN dropperid = 5400000 AND itemid = 2061001 THEN 102\n+                       WHEN dropperid = 6220000 AND itemid = 2060000 THEN 531\n+                       WHEN dropperid = 6220000 AND itemid = 2061000 THEN 531\n+                       WHEN dropperid = 7120103 AND itemid = 2060003 THEN 102\n+                       WHEN dropperid = 7220000 AND itemid = 2060001 THEN 289\n+                       WHEN dropperid = 7220000 AND itemid = 2061001 THEN 289\n+                       WHEN dropperid = 7220001 AND itemid = 2060001 THEN 285\n+                       WHEN dropperid = 7220001 AND itemid = 2061001 THEN 285\n+                       WHEN dropperid = 7220002 AND itemid = 2060001 THEN 313\n+                       WHEN dropperid = 7220002 AND itemid = 2061001 THEN 313\n+                       WHEN dropperid = 8220000 AND itemid = 2060001 THEN 339\n+                       WHEN dropperid = 8220000 AND itemid = 2061001 THEN 339\n+                       WHEN dropperid = 8220001 AND itemid = 2060001 THEN 367\n+                       WHEN dropperid = 8220001 AND itemid = 2061001 THEN 367\n+                       WHEN dropperid = 9300011 AND itemid = 2060000 THEN 225\n+                       WHEN dropperid = 9300011 AND itemid = 2061000 THEN 225\n+                       WHEN dropperid = 9300060 AND itemid = 2060000 THEN 243\n+                       WHEN dropperid = 9300060 AND itemid = 2061000 THEN 243\n+                       WHEN dropperid = 9300131 AND itemid = 2060000 THEN 225\n+                       WHEN dropperid = 9300131 AND itemid = 2061000 THEN 225\n+                       WHEN dropperid = 9300132 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 9300132 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 9300133 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 9300160 AND itemid = 2060000 THEN 366\n+                       WHEN dropperid = 9300160 AND itemid = 2061000 THEN 366\n+                       WHEN dropperid = 9300161 AND itemid = 2060000 THEN 366\n+                       WHEN dropperid = 9300161 AND itemid = 2061000 THEN 366\n+                       WHEN dropperid = 9300274 AND itemid = 2060000 THEN 45\n+                       WHEN dropperid = 9300274 AND itemid = 2061000 THEN 45\n+                       WHEN dropperid = 9300332 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 9300334 AND itemid = 2060000 THEN 285\n+                       WHEN dropperid = 9300341 AND itemid = 2060000 THEN 33\n+                       WHEN dropperid = 9300341 AND itemid = 2061000 THEN 33\n+                       WHEN dropperid = 9300342 AND itemid = 2060000 THEN 45\n+                       WHEN dropperid = 9300342 AND itemid = 2061000 THEN 45\n+                       WHEN dropperid = 9300343 AND itemid = 2060000 THEN 39\n+                       WHEN dropperid = 9300343 AND itemid = 2061000 THEN 39\n+                       WHEN dropperid = 9303005 AND itemid = 2060001 THEN 75\n+                       WHEN dropperid = 9303005 AND itemid = 2061001 THEN 75\n+                       WHEN dropperid = 9303008 AND itemid = 2060001 THEN 75\n+                       WHEN dropperid = 9303008 AND itemid = 2061001 THEN 75\n+                       WHEN dropperid = 9303009 AND itemid = 2060001 THEN 148\n+                       WHEN dropperid = 9303009 AND itemid = 2061001 THEN 148\n+                       WHEN dropperid = 9400000 AND itemid = 2060001 THEN 72\n+                       WHEN dropperid = 9400009 AND itemid = 2060001 THEN 583\n+                       WHEN dropperid = 9400011 AND itemid = 2060002 THEN 77\n+                       WHEN dropperid = 9400100 AND itemid = 2060003 THEN 65\n+                       WHEN dropperid = 9400101 AND itemid = 2061003 THEN 68\n+                       WHEN dropperid = 9400204 AND itemid = 2060003 THEN 80\n+                       WHEN dropperid = 9400239 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 9400239 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 9400244 AND itemid = 2060000 THEN 342\n+                       WHEN dropperid = 9400244 AND itemid = 2061000 THEN 342\n+                       WHEN dropperid = 9400248 AND itemid = 2060000 THEN 138\n+                       WHEN dropperid = 9400248 AND itemid = 2061000 THEN 138\n+                       WHEN dropperid = 9400540 AND itemid = 2060004 THEN 28\n+                       WHEN dropperid = 9400540 AND itemid = 2061004 THEN 28\n+                       WHEN dropperid = 9400541 AND itemid = 2060004 THEN 28\n+                       WHEN dropperid = 9400541 AND itemid = 2061004 THEN 28\n+                       WHEN dropperid = 9400542 AND itemid = 2060004 THEN 42\n+                       WHEN dropperid = 9400542 AND itemid = 2061004 THEN 42\n+                       WHEN dropperid = 9400543 AND itemid = 2060004 THEN 47\n+                       WHEN dropperid = 9400543 AND itemid = 2061004 THEN 47\n+                       WHEN dropperid = 9400547 AND itemid = 2060000 THEN 156\n+                       WHEN dropperid = 9400547 AND itemid = 2061000 THEN 156\n+                       WHEN dropperid = 9400548 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 9400548 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 9400550 AND itemid = 2060000 THEN 156\n+                       WHEN dropperid = 9400550 AND itemid = 2061000 THEN 156\n+                       WHEN dropperid = 9400558 AND itemid = 2060000 THEN 174\n+                       WHEN dropperid = 9400558 AND itemid = 2061000 THEN 174\n+                       WHEN dropperid = 9400563 AND itemid = 2060000 THEN 231\n+                       WHEN dropperid = 9400563 AND itemid = 2061000 THEN 231\n+                       WHEN dropperid = 9400638 AND itemid = 2060000 THEN 114\n+                       WHEN dropperid = 9400638 AND itemid = 2061000 THEN 114\n+                       WHEN dropperid = 9420500 AND itemid = 2060000 THEN 162\n+                       WHEN dropperid = 9420500 AND itemid = 2061000 THEN 162\n+                       WHEN dropperid = 9420502 AND itemid = 2060000 THEN 105\n+                       WHEN dropperid = 9420502 AND itemid = 2061000 THEN 105\n+                       WHEN dropperid = 9420506 AND itemid = 2060000 THEN 132\n+                       WHEN dropperid = 9420506 AND itemid = 2061000 THEN 132\n+                       WHEN dropperid = 9420508 AND itemid = 2060000 THEN 249\n+                       WHEN dropperid = 9420508 AND itemid = 2061000 THEN 249\n+                       WHEN dropperid = 9420527 AND itemid = 2060001 THEN 130\n+                       WHEN dropperid = 9420527 AND itemid = 2061001 THEN 130\n+                       WHEN dropperid = 9420531 AND itemid = 2060001 THEN 171\n+                       WHEN dropperid = 9420531 AND itemid = 2061001 THEN 171\n+                       WHEN dropperid = 9500112 AND itemid = 2060001 THEN 102\n+                       WHEN dropperid = 9500112 AND itemid = 2061001 THEN 102\n+                       WHEN dropperid = 9500119 AND itemid = 2060000 THEN 225\n+                       WHEN dropperid = 9500119 AND itemid = 2061000 THEN 225\n+                       WHEN dropperid = 9500120 AND itemid = 2060000 THEN 261\n+                       WHEN dropperid = 9500120 AND itemid = 2061000 THEN 261\n+                       WHEN dropperid = 9500122 AND itemid = 2060000 THEN 285\n+                       WHEN dropperid = 9500123 AND itemid = 2060000 THEN 342\n+                       WHEN dropperid = 9500123 AND itemid = 2061000 THEN 342\n+                       WHEN dropperid = 9500308 AND itemid = 2060000 THEN 408\n+                       WHEN dropperid = 9500308 AND itemid = 2061000 THEN 408\n+                       WHEN dropperid = 9500310 AND itemid = 2060000 THEN 480\n+                       WHEN dropperid = 9500310 AND itemid = 2061000 THEN 480\n+                       WHEN dropperid = 9500312 AND itemid = 2060001 THEN 285\n+                       WHEN dropperid = 9500312 AND itemid = 2061001 THEN 285\n+                       WHEN dropperid = 9500313 AND itemid = 2060001 THEN 289\n+                       WHEN dropperid = 9500313 AND itemid = 2061001 THEN 289\n+                       WHEN dropperid = 9500314 AND itemid = 2060001 THEN 313\n+                       WHEN dropperid = 9500314 AND itemid = 2061001 THEN 313\n+                       WHEN dropperid = 9500321 AND itemid = 2060001 THEN 28\n+                       WHEN dropperid = 9500321 AND itemid = 2061001 THEN 28\n+                       WHEN dropperid = 9500366 AND itemid = 2060000 THEN 87\n+                       WHEN dropperid = 9500369 AND itemid = 2060000 THEN 87\n+  ELSE maximum_quantity END\n+;"}, {"sha": "0539039f716034c4896c8eaa81c075c7fa3bc997", "filename": "tools/MapleArrowFetcher/lib/mysql-connector-java-bin.jar", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/lib/mysql-connector-java-bin.jar", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/lib/mysql-connector-java-bin.jar", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/lib/mysql-connector-java-bin.jar?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "328e8e5bc3b7f1f7bad2bc0751a933e00c801983", "filename": "tools/MapleArrowFetcher/manifest.mf", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/manifest.mf", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/manifest.mf", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/manifest.mf?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,3 @@\n+Manifest-Version: 1.0\n+X-COMMENT: Main-Class will be added automatically by build\n+"}, {"sha": "5520ba35017e95e383f631420a2b4661cc943d3d", "filename": "tools/MapleArrowFetcher/src/life/Element.java", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/life/Element.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/life/Element.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/life/Element.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,46 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package life;\n+\n+public enum Element {\n+    NEUTRAL, FIRE, ICE, LIGHTING, POISON, HOLY, DARK;\n+\n+    public static Element getFromChar(char c) {\n+        switch (Character.toUpperCase(c)) {\n+            case 'F':\n+                return FIRE;\n+            case 'I':\n+                return ICE;\n+            case 'L':\n+                return LIGHTING;\n+            case 'S':\n+                return POISON;\n+            case 'H':\n+                return HOLY;\n+            case 'D':\n+            \treturn DARK;\n+            case 'P':\n+                return NEUTRAL;\n+        }\n+        throw new IllegalArgumentException(\"unknown elemnt char \" + c);\n+    }\n+}"}, {"sha": "f8d23ef5c7ce719cf8660d29c7e09fa901dbb682", "filename": "tools/MapleArrowFetcher/src/life/ElementalEffectiveness.java", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/life/ElementalEffectiveness.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/life/ElementalEffectiveness.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/life/ElementalEffectiveness.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,41 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package life;\n+\n+public enum ElementalEffectiveness {\n+    NORMAL, IMMUNE, STRONG, WEAK, NEUTRAL;\n+\n+    public static ElementalEffectiveness getByNumber(int num) {\n+        switch (num) {\n+            case 1:\n+                return IMMUNE;\n+            case 2:\n+                return STRONG;\n+            case 3:\n+                return WEAK;\n+            case 4:\n+                return NEUTRAL;\n+            default:\n+                throw new IllegalArgumentException(\"Unkown effectiveness: \" + num);\n+        }\n+    }\n+}"}, {"sha": "23ccd67e43d453cabdb9d9e873ff6b0843767354", "filename": "tools/MapleArrowFetcher/src/life/MapleLifeFactory.java", "status": "added", "additions": 240, "deletions": 0, "changes": 240, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/life/MapleLifeFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/life/MapleLifeFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/life/MapleLifeFactory.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,240 @@\n+/*\n+This file is part of the OdinMS Maple Story Server\n+Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+Matthias Butz <matze@odinms.de>\n+Jan Christian Meyer <vimes@odinms.de>\n+\n+This program is free software: you can redistribute it and/or modify\n+it under the terms of the GNU Affero General Public License as\n+published by the Free Software Foundation version 3 as published by\n+the Free Software Foundation. You may not use, modify or distribute\n+this program under any other version of the GNU Affero General Public\n+License.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU Affero General Public License for more details.\n+\n+You should have received a copy of the GNU Affero General Public License\n+along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package life;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import provider.MapleData;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataFileEntry;\n+import provider.MapleDataProvider;\n+import provider.MapleDataProviderFactory;\n+import provider.MapleDataTool;\n+import provider.wz.MapleDataType;\n+import tools.Pair;\n+\n+public class MapleLifeFactory {\n+    private static String wzPath = \"../../wz\";\n+    private static MapleDataProvider data = MapleDataProviderFactory.getDataProvider(new File(wzPath + \"/Mob.wz\"));\n+    private final static MapleDataProvider stringDataWZ = MapleDataProviderFactory.getDataProvider(new File(wzPath + \"/String.wz\"));\n+    private static MapleData mobStringData = stringDataWZ.getData(\"Mob.img\");\n+    private static MapleData npcStringData = stringDataWZ.getData(\"Npc.img\");\n+    private static Map<Integer, MapleMonsterStats> monsterStats = new HashMap<>();\n+\n+    private static int getMonsterId(String fileName) {\n+        return Integer.parseInt(fileName.substring(0, 7));\n+    }\n+    \n+    public static Map<Integer, MapleMonsterStats> getAllMonsterStats() {\n+        MapleDataDirectoryEntry root = data.getRoot();\n+        \n+        System.out.print(\"Parsing mob stats... \");\n+        for (MapleDataFileEntry mFile : root.getFiles()) {\n+            try {\n+                String fileName = mFile.getName();\n+                \n+                //System.out.println(\"Parsing '\" + fileName + \"'\");\n+                MapleData monsterData = data.getData(fileName);\n+                if (monsterData == null) {\n+                    continue;\n+                }\n+                \n+                Integer mid = getMonsterId(fileName);\n+        \n+                MapleData monsterInfoData = monsterData.getChildByPath(\"info\");\n+                MapleMonsterStats stats = new MapleMonsterStats();\n+                stats.setHp(MapleDataTool.getIntConvert(\"maxHP\", monsterInfoData));\n+                stats.setFriendly(MapleDataTool.getIntConvert(\"damagedByMob\", monsterInfoData, 0) == 1);\n+                stats.setPADamage(MapleDataTool.getIntConvert(\"PADamage\", monsterInfoData));\n+                stats.setPDDamage(MapleDataTool.getIntConvert(\"PDDamage\", monsterInfoData));\n+                stats.setMADamage(MapleDataTool.getIntConvert(\"MADamage\", monsterInfoData));\n+                stats.setMDDamage(MapleDataTool.getIntConvert(\"MDDamage\", monsterInfoData));  \n+                stats.setMp(MapleDataTool.getIntConvert(\"maxMP\", monsterInfoData, 0));\n+                stats.setExp(MapleDataTool.getIntConvert(\"exp\", monsterInfoData, 0));\n+                stats.setLevel(MapleDataTool.getIntConvert(\"level\", monsterInfoData));\n+                stats.setRemoveAfter(MapleDataTool.getIntConvert(\"removeAfter\", monsterInfoData, 0));\n+                stats.setBoss(MapleDataTool.getIntConvert(\"boss\", monsterInfoData, 0) > 0);\n+                stats.setExplosiveReward(MapleDataTool.getIntConvert(\"explosiveReward\", monsterInfoData, 0) > 0);\n+                stats.setFfaLoot(MapleDataTool.getIntConvert(\"publicReward\", monsterInfoData, 0) > 0);\n+                stats.setUndead(MapleDataTool.getIntConvert(\"undead\", monsterInfoData, 0) > 0);\n+                stats.setName(MapleDataTool.getString(mid + \"/name\", mobStringData, \"MISSINGNO\"));\n+                stats.setBuffToGive(MapleDataTool.getIntConvert(\"buff\", monsterInfoData, -1));\n+                stats.setCP(MapleDataTool.getIntConvert(\"getCP\", monsterInfoData, 0));\n+                stats.setRemoveOnMiss(MapleDataTool.getIntConvert(\"removeOnMiss\", monsterInfoData, 0) > 0);\n+\n+                MapleData special = monsterInfoData.getChildByPath(\"coolDamage\");\n+                if (special != null) {\n+                    int coolDmg = MapleDataTool.getIntConvert(\"coolDamage\", monsterInfoData);\n+                    int coolProb = MapleDataTool.getIntConvert(\"coolDamageProb\", monsterInfoData, 0);\n+                    stats.setCool(new Pair<>(coolDmg, coolProb));\n+                }\n+                special = monsterInfoData.getChildByPath(\"loseItem\");\n+                if (special != null) {\n+                    for (MapleData liData : special.getChildren()) {\n+                        stats.addLoseItem(new loseItem(MapleDataTool.getInt(liData.getChildByPath(\"id\")), (byte) MapleDataTool.getInt(liData.getChildByPath(\"prop\")), (byte) MapleDataTool.getInt(liData.getChildByPath(\"x\"))));\n+                    }\n+                }\n+                special = monsterInfoData.getChildByPath(\"selfDestruction\");\n+                if (special != null) {\n+                    stats.setSelfDestruction(new selfDestruction((byte) MapleDataTool.getInt(special.getChildByPath(\"action\")), MapleDataTool.getIntConvert(\"removeAfter\", special, -1), MapleDataTool.getIntConvert(\"hp\", special, -1)));\n+                }\n+                MapleData firstAttackData = monsterInfoData.getChildByPath(\"firstAttack\");\n+                int firstAttack = 0;\n+                if (firstAttackData != null) {\n+                    if (firstAttackData.getType() == MapleDataType.FLOAT) {\n+                        firstAttack = Math.round(MapleDataTool.getFloat(firstAttackData));\n+                    } else {\n+                        firstAttack = MapleDataTool.getInt(firstAttackData);\n+                    }\n+                }\n+                stats.setFirstAttack(firstAttack > 0);\n+                stats.setDropPeriod(MapleDataTool.getIntConvert(\"dropItemPeriod\", monsterInfoData, 0) * 10000);\n+\n+                stats.setTagColor(MapleDataTool.getIntConvert(\"hpTagColor\", monsterInfoData, 0));\n+                stats.setTagBgColor(MapleDataTool.getIntConvert(\"hpTagBgcolor\", monsterInfoData, 0));\n+\n+                for (MapleData idata : monsterData) {\n+                    if (!idata.getName().equals(\"info\")) {\n+                        int delay = 0;\n+                        for (MapleData pic : idata.getChildren()) {\n+                            delay += MapleDataTool.getIntConvert(\"delay\", pic, 0);\n+                        }\n+                        stats.setAnimationTime(idata.getName(), delay);\n+                    }\n+                }\n+                MapleData reviveInfo = monsterInfoData.getChildByPath(\"revive\");\n+                if (reviveInfo != null) {\n+                    List<Integer> revives = new LinkedList<>();\n+                    for (MapleData data_ : reviveInfo) {\n+                        revives.add(MapleDataTool.getInt(data_));\n+                    }\n+                    stats.setRevives(revives);\n+                }\n+                decodeElementalString(stats, MapleDataTool.getString(\"elemAttr\", monsterInfoData, \"\"));\n+                MapleData monsterSkillData = monsterInfoData.getChildByPath(\"skill\");\n+                if (monsterSkillData != null) {\n+                    int i = 0;\n+                    List<Pair<Integer, Integer>> skills = new ArrayList<>();\n+                    while (monsterSkillData.getChildByPath(Integer.toString(i)) != null) {\n+                        skills.add(new Pair<>(Integer.valueOf(MapleDataTool.getInt(i + \"/skill\", monsterSkillData, 0)), Integer.valueOf(MapleDataTool.getInt(i + \"/level\", monsterSkillData, 0))));\n+                        i++;\n+                    }\n+                    stats.setSkills(skills);\n+                }\n+                MapleData banishData = monsterInfoData.getChildByPath(\"ban\");\n+                if (banishData != null) {\n+                    stats.setBanishInfo(new BanishInfo(MapleDataTool.getString(\"banMsg\", banishData), MapleDataTool.getInt(\"banMap/0/field\", banishData, -1), MapleDataTool.getString(\"banMap/0/portal\", banishData, \"sp\")));\n+                }\n+                \n+                monsterStats.put(mid, stats);\n+            } catch(NullPointerException npe) {\n+                //System.out.println(\"[SEVERE] \" + mFile.getName() + \" failed to load. Issue: \" + npe.getMessage() + \"\\n\\n\");\n+            }\n+        }\n+        \n+        System.out.println(\"done!\");\n+        return monsterStats;\n+    }\n+\n+    private static void decodeElementalString(MapleMonsterStats stats, String elemAttr) {\n+        for (int i = 0; i < elemAttr.length(); i += 2) {\n+            stats.setEffectiveness(Element.getFromChar(elemAttr.charAt(i)), ElementalEffectiveness.getByNumber(Integer.valueOf(String.valueOf(elemAttr.charAt(i + 1)))));\n+        }\n+    }\n+\n+    public static class BanishInfo {\n+\n+        private int map;\n+        private String portal, msg;\n+\n+        public BanishInfo(String msg, int map, String portal) {\n+            this.msg = msg;\n+            this.map = map;\n+            this.portal = portal;\n+        }\n+\n+        public int getMap() {\n+            return map;\n+        }\n+\n+        public String getPortal() {\n+            return portal;\n+        }\n+\n+        public String getMsg() {\n+            return msg;\n+        }\n+    }\n+\n+    public static class loseItem {\n+\n+        private int id;\n+        private byte chance, x;\n+\n+        private loseItem(int id, byte chance, byte x) {\n+            this.id = id;\n+            this.chance = chance;\n+            this.x = x;\n+        }\n+\n+        public int getId() {\n+            return id;\n+        }\n+\n+        public byte getChance() {\n+            return chance;\n+        }\n+\n+        public byte getX() {\n+            return x;\n+        }\n+    }\n+\n+    public static class selfDestruction {\n+\n+        private byte action;\n+        private int removeAfter;\n+        private int hp;\n+\n+        private selfDestruction(byte action, int removeAfter, int hp) {\n+            this.action = action;\n+            this.removeAfter = removeAfter;\n+            this.hp = hp;\n+        }\n+\n+        public int getHp() {\n+            return hp;\n+        }\n+        \n+        public byte getAction() {\n+            return action;\n+        }\n+\n+        public int removeAfter() {\n+            return removeAfter;\n+        }\n+    }\n+}"}, {"sha": "42b091545d642745bb1b54e127e8901698d220aa", "filename": "tools/MapleArrowFetcher/src/life/MapleMonsterStats.java", "status": "added", "additions": 336, "deletions": 0, "changes": 336, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/life/MapleMonsterStats.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/life/MapleMonsterStats.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/life/MapleMonsterStats.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,336 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package life;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import life.MapleLifeFactory.BanishInfo;\n+import life.MapleLifeFactory.loseItem;\n+import life.MapleLifeFactory.selfDestruction;\n+import tools.Pair;\n+\n+/**\n+ * @author Frz\n+ */\n+public class MapleMonsterStats {\n+    private boolean changeable;\n+    private int exp, hp, mp, level, PADamage, PDDamage, MADamage, MDDamage, dropPeriod, cp, buffToGive, removeAfter;\n+    private boolean boss, undead, ffaLoot, isExplosiveReward, firstAttack, removeOnMiss;\n+    private String name;\n+    private Map<String, Integer> animationTimes = new HashMap<String, Integer>();\n+    private Map<Element, ElementalEffectiveness> resistance = new HashMap<Element, ElementalEffectiveness>();\n+    private List<Integer> revives = Collections.emptyList();\n+    private byte tagColor, tagBgColor;\n+    private List<Pair<Integer, Integer>> skills = new ArrayList<Pair<Integer, Integer>>();\n+    private Pair<Integer, Integer> cool = null;\n+    private BanishInfo banish = null;\n+    private List<loseItem> loseItem = null;\n+    private selfDestruction selfDestruction = null;\n+    private boolean friendly;\n+\n+    public void setChange(boolean change) {\n+        this.changeable = change;\n+    }\n+\n+    public boolean isChangeable() {\n+        return changeable;\n+    }\n+    \n+    public int getExp() {\n+        return exp;\n+    }\n+\n+    public void setExp(int exp) {\n+        this.exp = exp;\n+    }\n+\n+    public int getHp() {\n+        return hp;\n+    }\n+\n+    public void setHp(int hp) {\n+        this.hp = hp;\n+    }\n+\n+    public int getMp() {\n+        return mp;\n+    }\n+\n+    public void setMp(int mp) {\n+        this.mp = mp;\n+    }\n+\n+    public int getLevel() {\n+        return level;\n+    }\n+\n+    public void setLevel(int level) {\n+        this.level = level;\n+    }\n+\n+    public int removeAfter() {\n+        return removeAfter;\n+    }\n+\n+    public void setRemoveAfter(int removeAfter) {\n+        this.removeAfter = removeAfter;\n+    }\n+\n+    public int getDropPeriod() {\n+        return dropPeriod;\n+    }\n+\n+    public void setDropPeriod(int dropPeriod) {\n+        this.dropPeriod = dropPeriod;\n+    }\n+\n+    public void setBoss(boolean boss) {\n+        this.boss = boss;\n+    }\n+\n+    public boolean isBoss() {\n+        return boss;\n+    }\n+\n+    public void setFfaLoot(boolean ffaLoot) {\n+        this.ffaLoot = ffaLoot;\n+    }\n+\n+    public boolean isFfaLoot() {\n+        return ffaLoot;\n+    }\n+\n+    public void setAnimationTime(String name, int delay) {\n+        animationTimes.put(name, delay);\n+    }\n+\n+    public int getAnimationTime(String name) {\n+        Integer ret = animationTimes.get(name);\n+        if (ret == null) {\n+            return 500;\n+        }\n+        return ret.intValue();\n+    }\n+\n+    public boolean isMobile() {\n+        return animationTimes.containsKey(\"move\") || animationTimes.containsKey(\"fly\");\n+    }\n+\n+    public List<Integer> getRevives() {\n+        return revives;\n+    }\n+\n+    public void setRevives(List<Integer> revives) {\n+        this.revives = revives;\n+    }\n+\n+    public void setUndead(boolean undead) {\n+        this.undead = undead;\n+    }\n+\n+    public boolean getUndead() {\n+        return undead;\n+    }\n+\n+    public void setEffectiveness(Element e, ElementalEffectiveness ee) {\n+        resistance.put(e, ee);\n+    }\n+\n+    public ElementalEffectiveness getEffectiveness(Element e) {\n+        ElementalEffectiveness elementalEffectiveness = resistance.get(e);\n+        if (elementalEffectiveness == null) {\n+            return ElementalEffectiveness.NORMAL;\n+        } else {\n+            return elementalEffectiveness;\n+        }\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public byte getTagColor() {\n+        return tagColor;\n+    }\n+\n+    public void setTagColor(int tagColor) {\n+        this.tagColor = (byte) tagColor;\n+    }\n+\n+    public byte getTagBgColor() {\n+        return tagBgColor;\n+    }\n+\n+    public void setTagBgColor(int tagBgColor) {\n+        this.tagBgColor = (byte) tagBgColor;\n+    }\n+\n+    public void setSkills(List<Pair<Integer, Integer>> skills) {\n+        for (Pair<Integer, Integer> skill : skills) {\n+            this.skills.add(skill);\n+        }\n+    }\n+\n+    public List<Pair<Integer, Integer>> getSkills() {\n+        return Collections.unmodifiableList(this.skills);\n+    }\n+\n+    public int getNoSkills() {\n+        return this.skills.size();\n+    }\n+\n+    public boolean hasSkill(int skillId, int level) {\n+        for (Pair<Integer, Integer> skill : skills) {\n+            if (skill.getLeft() == skillId && skill.getRight() == level) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public void setFirstAttack(boolean firstAttack) {\n+        this.firstAttack = firstAttack;\n+    }\n+\n+    public boolean isFirstAttack() {\n+        return firstAttack;\n+    }\n+\n+    public void setBuffToGive(int buff) {\n+        this.buffToGive = buff;\n+    }\n+\n+    public int getBuffToGive() {\n+        return buffToGive;\n+    }\n+\n+    void removeEffectiveness(Element e) {\n+        resistance.remove(e);\n+    }\n+\n+    public BanishInfo getBanishInfo() {\n+        return banish;\n+    }\n+\n+    public void setBanishInfo(BanishInfo banish) {\n+        this.banish = banish;\n+    }\n+\n+    public int getPADamage() {\n+        return PADamage;\n+    }\n+\n+    public void setPADamage(int PADamage) {\n+        this.PADamage = PADamage;\n+    }\n+\n+    public int getCP() {\n+        return cp;\n+    }\n+\n+    public void setCP(int cp) {\n+        this.cp = cp;\n+    }\n+\n+    public List<loseItem> loseItem() {\n+        return loseItem;\n+    }\n+\n+    public void addLoseItem(loseItem li) {\n+        if (loseItem == null) {\n+            loseItem = new LinkedList<loseItem>();\n+        }\n+        loseItem.add(li);\n+    }\n+\n+    public selfDestruction selfDestruction() {\n+        return selfDestruction;\n+    }\n+\n+    public void setSelfDestruction(selfDestruction sd) {\n+        this.selfDestruction = sd;\n+    }\n+    \n+    public void setExplosiveReward(boolean isExplosiveReward) {\n+        this.isExplosiveReward = isExplosiveReward;\n+    }\n+\n+    public boolean isExplosiveReward() {\n+        return isExplosiveReward;\n+    }\n+\n+    public void setRemoveOnMiss(boolean removeOnMiss) {\n+        this.removeOnMiss = removeOnMiss;\n+    }\n+\n+    public boolean removeOnMiss() {\n+        return removeOnMiss;\n+    }\n+\n+    public void setCool(Pair<Integer, Integer> cool) {\n+        this.cool = cool;\n+    }\n+\n+    public Pair<Integer, Integer> getCool() {\n+        return cool;\n+    }\n+    \n+    public int getPDDamage() {\n+        return PDDamage;\n+    }\n+    \n+    public int getMADamage() {\n+        return MADamage;\n+    }\n+    \n+    public int getMDDamage() {\n+        return MDDamage;\n+    }\n+    \n+    public boolean isFriendly() {\n+        return friendly;\n+    }\n+    \n+    public void setFriendly(boolean value) {\n+        this.friendly = value;\n+    }\n+    \n+    public void setPDDamage(int PDDamage) {\n+        this.PDDamage = PDDamage;\n+    }\n+    \n+    public void setMADamage(int MADamage) {\n+        this.MADamage = MADamage;\n+    }\n+    \n+    public void setMDDamage(int MDDamage) {\n+        this.MDDamage = MDDamage;\n+    } \n+}"}, {"sha": "d749506573f4a4c3cd9dfd60af2ca1205d0a4cfb", "filename": "tools/MapleArrowFetcher/src/maplearrowfetcher/MapleArrowFetcher.java", "status": "added", "additions": 221, "deletions": 0, "changes": 221, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/maplearrowfetcher/MapleArrowFetcher.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/maplearrowfetcher/MapleArrowFetcher.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/maplearrowfetcher/MapleArrowFetcher.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,221 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package maplearrowfetcher;\n+\n+import life.MapleLifeFactory;\n+import life.MapleMonsterStats;\n+\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+\n+import java.io.*;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import tools.DatabaseConnection;\n+import tools.Pair;\n+\n+/**\n+ *\n+ * @author RonanLana\n+ * This application traces arrow drop data on the underlying DB (that must be\n+ * defined on the DatabaseConnection file of this project) and generates a SQL\n+ * file that proposes updated arrow quantitty on drop entries for the drop_data table.\n+ * \n+ * The arrow quantity range is calculated accordingly with the target mob stats, such\n+ * as level and if it's a boss or not.\n+ * \n+ */\n+\n+public class MapleArrowFetcher {\n+\n+    /**\n+     * @param args the command line arguments\n+     */\n+    \n+    private static PrintWriter printWriter;\n+    private static String newFile = \"lib/arrow_drop_data.sql\";\n+    \n+    private static int[] arrowWeight = new int[6];\n+    \n+    private static int minArrowId = 2060000;\n+    private static int maxArrowId = 2061004;\n+    \n+    private static Map<Integer, MapleMonsterStats> mobStats;\n+    private static Map<Integer, Pair<Integer, Integer>> mobRange = new HashMap<>();\n+    \n+    private static Pair<Integer, Integer> calcArrowRange(int level, boolean boss) {\n+        int minRange, maxRange;\n+        \n+        // MIN range\n+        minRange = (int)(1.895883884 * Math.exp(0.02673101054) * level * (boss ? 1.4 : 1.0));\n+        \n+        // MAX range\n+        maxRange = 3 * minRange;\n+        \n+        return new Pair<>(minRange, maxRange);\n+    }\n+    \n+    private static void calcAllMobsArrowRange() {\n+        System.out.print(\"Calculating range... \");\n+        \n+        for(Entry<Integer, MapleMonsterStats> mobStat : mobStats.entrySet()) {\n+            MapleMonsterStats mms = mobStat.getValue();\n+            Pair<Integer, Integer> arrowRange;\n+            \n+            arrowRange = calcArrowRange(mms.getLevel(), mms.isBoss());\n+            mobRange.put(mobStat.getKey(), arrowRange);\n+        }\n+        \n+        System.out.println(\"done!\");\n+    }\n+    \n+    private static void printSqlHeader() {\n+        printWriter.println(\" # SQL File autogenerated from the MapleArrowFetcher feature by Ronan Lana.\");\n+        printWriter.println(\" # Generated data takes into account mob stats such as level and boss for the raw arrow ranges.\");\n+        printWriter.println(\" # Only current arrows entries on the DB it was compiled are being updated here.\");\n+        printWriter.println();\n+        \n+        printWriter.println(\"UPDATE drop_data\");\n+        printWriter.println(\"SET minimum_quantity = CASE\");\n+    }\n+    \n+    private static void printSqlMiddle() {\n+        printWriter.println(\"  ELSE minimum_quantity END,\");\n+        printWriter.println(\"    maximum_quantity = CASE\");\n+    }\n+    \n+    private static void printSqlFooter() {\n+        printWriter.println(\"  ELSE maximum_quantity END\");\n+        printWriter.println(\";\");\n+    }\n+    \n+    private static void updateSqlMobArrowMinEntry(int[] entry) {\n+        printWriter.println(\"                       WHEN dropperid = \" + entry[0] + \" AND itemid = \" + entry[1] + \" THEN \" + entry[2]);\n+    }\n+    \n+    private static void updateSqlMobArrowMaxEntry(int[] entry) {\n+        printWriter.println(\"                       WHEN dropperid = \" + entry[0] + \" AND itemid = \" + entry[1] + \" THEN \" + entry[3]);\n+    }\n+    \n+    private static List<int[]> getArrowEntryValues(Map<Integer, List<Integer>> existingEntries) {\n+        List<int[]> entryValues = new ArrayList<>(200);\n+        \n+        List<Entry<Integer, List<Integer>>> listEntries = new ArrayList<>(existingEntries.entrySet());\n+        \n+        Collections.sort(listEntries, new Comparator<Entry<Integer, List<Integer>>>() {\n+                                @Override\n+                                public int compare(Entry<Integer, List<Integer>> o1, Entry<Integer, List<Integer>> o2) {\n+                                        int val1 = o1.getKey();\n+                                        int val2 = o2.getKey();\n+                                        return (val1 < val2 ? -1 : (val1 == val2 ? 0 : 1));\n+                                }\n+                        });\n+        \n+        for(Entry<Integer, List<Integer>> ee : listEntries) {\n+            int mobid = ee.getKey();\n+            Pair<Integer, Integer> mr = mobRange.get(mobid);\n+            \n+            for(Integer itemid : ee.getValue()) {\n+                int itemWeight = (itemid % 10) + 1;\n+                \n+                int[] values = new int[4];\n+                values[0] = mobid;\n+                values[1] = itemid;\n+                \n+                values[2] = (int) Math.ceil(mr.getLeft()  / itemWeight);   // weighted min quantity\n+                values[3] = (int) Math.ceil(mr.getRight() / itemWeight);   // weighted max quantity\n+                \n+                entryValues.add(values);\n+            }\n+        }\n+        \n+        return entryValues;\n+    }\n+    \n+    private static void updateMobsArrowRange() {\n+        System.out.print(\"Generating updated ranges... \");\n+        Connection con = DatabaseConnection.getConnection();\n+        Map<Integer, List<Integer>> existingEntries = new HashMap<>(200);\n+        \n+        try {\n+            // select all arrow drop entries on the DB, to update their values\n+            PreparedStatement ps = con.prepareStatement(\"SELECT dropperid, itemid FROM drop_data WHERE itemid >= \" + minArrowId + \" AND itemid <= \" + maxArrowId + \" ORDER BY itemid;\");\n+            ResultSet rs = ps.executeQuery();\n+            \n+            if (rs.isBeforeFirst()) {\n+                while(rs.next()) {\n+                    int mobid = rs.getInt(1);\n+                    int itemid = rs.getInt(2);\n+                    \n+                    if(mobRange.containsKey(mobid)) {\n+                        List<Integer> em = existingEntries.get(mobid);\n+                        \n+                        if(em == null) {\n+                            em = new ArrayList<>(2);\n+                            existingEntries.put(mobid, em);\n+                        }\n+                        \n+                        em.add(itemid);\n+                    }\n+                }\n+                \n+                if(!existingEntries.isEmpty()) {\n+                    List<int[]> entryValues = getArrowEntryValues(existingEntries);\n+                    \n+                    printWriter = new PrintWriter(newFile, \"UTF-8\");\n+                    printSqlHeader();\n+                    \n+                    for(int[] arrowEntry : entryValues) {\n+                        updateSqlMobArrowMinEntry(arrowEntry);\n+                    }\n+                    \n+                    printSqlMiddle();\n+                    \n+                    for(int[] arrowEntry : entryValues) {\n+                        updateSqlMobArrowMaxEntry(arrowEntry);\n+                    }\n+                    \n+                    printSqlFooter();\n+                    \n+                    printWriter.close();\n+                } else {\n+                    throw new Exception(\"NO DATA\");\n+                }\n+                \n+            } else {\n+                throw new Exception(\"NO DATA\");\n+            }\n+            \n+            rs.close();\n+            ps.close();\n+            con.close();\n+            \n+            System.out.println(\"done!\");\n+            \n+        } catch(Exception e) {\n+            if(e.getMessage() != null && e.getMessage().equals(\"NO DATA\")) {\n+                System.out.println(\"failed! The DB has no arrow entry to be updated.\");\n+            } else {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+    \n+    public static void main(String[] args) {\n+        // load mob stats from WZ\n+        mobStats = MapleLifeFactory.getAllMonsterStats();\n+        \n+        calcAllMobsArrowRange();\n+        updateMobsArrowRange();\n+    }\n+}"}, {"sha": "10ab68219636d6faf90029f5bd485ff3a6648c56", "filename": "tools/MapleArrowFetcher/src/provider/MapleCanvas.java", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleCanvas.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleCanvas.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/MapleCanvas.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,30 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.awt.image.BufferedImage;\n+\n+public interface MapleCanvas {\n+    int getHeight();\n+    int getWidth();\n+    BufferedImage getImage();\n+}"}, {"sha": "4d90a9380442c23c911757c8e49cebc2141cf869", "filename": "tools/MapleArrowFetcher/src/provider/MapleData.java", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleData.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleData.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/MapleData.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,34 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.util.List;\n+import provider.wz.MapleDataType;\n+\n+public interface MapleData extends MapleDataEntity, Iterable<MapleData> {\n+    @Override\n+    public String getName();\n+    public MapleDataType getType();\n+    public List<MapleData> getChildren();\n+    public MapleData getChildByPath(String path);\n+    public Object getData();\n+}"}, {"sha": "cb043e0c945ea92f8e3aaa122e5b00a63c9588c5", "filename": "tools/MapleArrowFetcher/src/provider/MapleDataDirectoryEntry.java", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataDirectoryEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataDirectoryEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/MapleDataDirectoryEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,34 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.util.List;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataDirectoryEntry extends MapleDataEntry {\n+    public List<MapleDataDirectoryEntry> getSubdirectories();\n+    public List<MapleDataFileEntry> getFiles();\n+    public MapleDataEntry getEntry(String name);\n+}"}, {"sha": "03ff77649c8e5acc43bd9dc417bd6a5a5bde9f45", "filename": "tools/MapleArrowFetcher/src/provider/MapleDataEntity.java", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataEntity.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataEntity.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/MapleDataEntity.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,31 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataEntity {\n+    public String getName();\n+    public MapleDataEntity getParent();\n+}"}, {"sha": "62db6d0abeac3165aaa502d4098c15ce9598acab", "filename": "tools/MapleArrowFetcher/src/provider/MapleDataEntry.java", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/MapleDataEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,33 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataEntry extends MapleDataEntity {\n+    public String getName();\n+    public int getSize();\n+    public int getChecksum();\n+    public int getOffset();\n+}"}, {"sha": "902130a612aeb60746ac4fd119b4f88376947472", "filename": "tools/MapleArrowFetcher/src/provider/MapleDataFileEntry.java", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataFileEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataFileEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/MapleDataFileEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,30 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataFileEntry extends MapleDataEntry {\n+    public void setOffset(int offset);\n+}"}, {"sha": "5237b7ac37e4655b807bc6d47ad4bd10a360cc49", "filename": "tools/MapleArrowFetcher/src/provider/MapleDataProvider.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/MapleDataProvider.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,27 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+public interface MapleDataProvider {\n+    MapleData getData(String path);\n+    MapleDataDirectoryEntry getRoot();\n+}"}, {"sha": "14753d440683c1c13e8012d993cfbb85b3b76e8b", "filename": "tools/MapleArrowFetcher/src/provider/MapleDataProviderFactory.java", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataProviderFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataProviderFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/MapleDataProviderFactory.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,55 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import provider.wz.WZFile;\n+import provider.wz.XMLWZFile;\n+\n+public class MapleDataProviderFactory {\n+    private final static String wzPath = System.getProperty(\"wzpath\");\n+\n+    private static MapleDataProvider getWZ(File in, boolean provideImages) {\n+        if (in.getName().toLowerCase().endsWith(\"wz\") && !in.isDirectory()) {\n+            try {\n+                return new WZFile(in, provideImages);\n+            } catch (IOException e) {\n+                throw new RuntimeException(\"Loading WZ File failed\", e);\n+            }\n+        } else {\n+            return new XMLWZFile(in);\n+        }\n+    }\n+\n+    public static MapleDataProvider getDataProvider(File in) {\n+        return getWZ(in, false);\n+    }\n+\n+    public static MapleDataProvider getImageProvidingDataProvider(File in) {\n+        return getWZ(in, true);\n+    }\n+\n+    public static File fileInWZPath(String filename) {\n+        return new File(wzPath, filename);\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "25f4c7f81749a8145359d27437f2d7075c5786c3", "filename": "tools/MapleArrowFetcher/src/provider/MapleDataTool.java", "status": "added", "additions": 145, "deletions": 0, "changes": 145, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataTool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/MapleDataTool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/MapleDataTool.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,145 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.awt.Point;\n+import java.awt.image.BufferedImage;\n+import provider.wz.MapleDataType;\n+\n+public class MapleDataTool {\n+    public static String getString(MapleData data) {\n+        return ((String) data.getData());\n+    }\n+\n+    public static String getString(MapleData data, String def) {\n+        if (data == null || data.getData() == null) {\n+            return def;\n+        } else {\n+            return ((String) data.getData());\n+        }\n+    }\n+\n+    public static String getString(String path, MapleData data) {\n+        return getString(data.getChildByPath(path));\n+    }\n+\n+    public static String getString(String path, MapleData data, String def) {\n+        return getString(data.getChildByPath(path), def);\n+    }\n+\n+    public static double getDouble(MapleData data) {\n+        return ((Double) data.getData()).doubleValue();\n+    }\n+\n+    public static float getFloat(MapleData data) {\n+        return ((Float) data.getData()).floatValue();\n+    }\n+\n+    public static int getInt(MapleData data) {\n+        if (data == null || data.getData() == null) {\n+            return 0;// DEF?\n+        }\n+        return ((Integer) data.getData()).intValue();\n+    }\n+\n+    public static int getInt(String path, MapleData data) {\n+        return getInt(data.getChildByPath(path));\n+    }\n+\n+    public static int getIntConvert(MapleData data) {\n+        if (data.getType() == MapleDataType.STRING) {\n+            return Integer.parseInt(getString(data));\n+        } else {\n+            return getInt(data);\n+        }\n+    }\n+\n+    public static int getIntConvert(String path, MapleData data) {\n+        MapleData d = data.getChildByPath(path);\n+        if (d.getType() == MapleDataType.STRING) {\n+            return Integer.parseInt(getString(d));\n+        } else {\n+            return getInt(d);\n+        }\n+    }\n+\n+    public static int getInt(MapleData data, int def) {\n+        if (data == null || data.getData() == null) {\n+            return  def;\n+        } else if (data.getType() == MapleDataType.STRING) {\n+            return Integer.parseInt(getString(data));\n+        } else {\n+            return ((Integer) data.getData()).intValue();\n+        }\n+    }\n+\n+    public static int getInt(String path, MapleData data, int def) {\n+        return getInt(data.getChildByPath(path), def);\n+    }\n+\n+    public static int getIntConvert(String path, MapleData data, int def) {\n+        MapleData d = data.getChildByPath(path);\n+        if (d == null) {\n+            return def;\n+        }\n+        if (d.getType() == MapleDataType.STRING) {\n+            try {\n+                return Integer.parseInt(getString(d));\n+            } catch (NumberFormatException nfe) {\n+                nfe.printStackTrace();\n+                return def;\n+            }\n+        } else {\n+            return getInt(d, def);\n+        }\n+    }\n+\n+    public static BufferedImage getImage(MapleData data) {\n+        return ((MapleCanvas) data.getData()).getImage();\n+    }\n+\n+    public static Point getPoint(MapleData data) {\n+        return ((Point) data.getData());\n+    }\n+\n+    public static Point getPoint(String path, MapleData data) {\n+        return getPoint(data.getChildByPath(path));\n+    }\n+\n+    public static Point getPoint(String path, MapleData data, Point def) {\n+        final MapleData pointData = data.getChildByPath(path);\n+        if (pointData == null) {\n+            return def;\n+        }\n+        return getPoint(pointData);\n+    }\n+\n+    public static String getFullDataPath(MapleData data) {\n+        String path = \"\";\n+        MapleDataEntity myData = data;\n+        while (myData != null) {\n+            path = myData.getName() + \"/\" + path;\n+            myData = myData.getParent();\n+        }\n+        return path.substring(0, path.length() - 1);\n+    }\n+}"}, {"sha": "21736c2c162063c141117bff66deb9f830b4bc06", "filename": "tools/MapleArrowFetcher/src/provider/wz/FileStoredPngMapleCanvas.java", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/FileStoredPngMapleCanvas.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/FileStoredPngMapleCanvas.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/FileStoredPngMapleCanvas.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,70 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n+import provider.MapleCanvas;\n+\n+public class FileStoredPngMapleCanvas implements MapleCanvas {\n+    private File file;\n+    private int width;\n+    private int height;\n+    private BufferedImage image;\n+\n+    public FileStoredPngMapleCanvas(int width, int height, File fileIn) {\n+        this.width = width;\n+        this.height = height;\n+        this.file = fileIn;\n+    }\n+\n+    @Override\n+    public int getHeight() {\n+        return height;\n+    }\n+\n+    @Override\n+    public int getWidth() {\n+        return width;\n+    }\n+\n+    @Override\n+    public BufferedImage getImage() {\n+        loadImageIfNecessary();\n+        return image;\n+    }\n+\n+    private void loadImageIfNecessary() {\n+        if (image == null) {\n+            try {\n+                image = ImageIO.read(file);\n+                // replace the dimensions loaded from the wz by the REAL dimensions from the image - should be equal tho\n+                width = image.getWidth();\n+                height = image.getHeight();\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+    }\n+}"}, {"sha": "8add2ccb36fcfa8f1a683da0562601e9f2c0afda", "filename": "tools/MapleArrowFetcher/src/provider/wz/ImgMapleSound.java", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/ImgMapleSound.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/ImgMapleSound.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/ImgMapleSound.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,39 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+public class ImgMapleSound {\n+    private int dataLength, offset;\n+\n+    public ImgMapleSound(int dataLength, int offset) {\n+        this.dataLength = dataLength;\n+        this.offset = offset;\n+    }\n+\n+    public int getDataLength() {\n+        return dataLength;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+}"}, {"sha": "1672a08c598cb21a441ea89664de97fdb9b9c90b", "filename": "tools/MapleArrowFetcher/src/provider/wz/ListWZFile.java", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/ListWZFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/ListWZFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/ListWZFile.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,86 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import provider.MapleDataProviderFactory;\n+import tools.data.input.GenericLittleEndianAccessor;\n+import tools.data.input.InputStreamByteStream;\n+import tools.data.input.LittleEndianAccessor;\n+\n+public class ListWZFile {\n+    private LittleEndianAccessor lea;\n+    private List<String> entries = new ArrayList<String>();\n+    private static Collection<String> modernImgs = new HashSet<String>();\n+\n+    public static byte[] xorBytes(byte[] a, byte[] b) {\n+        byte[] wusched = new byte[a.length];\n+        for (int i = 0; i < a.length; i++) {\n+            wusched[i] = (byte) (a[i] ^ b[i]);\n+        }\n+        return wusched;\n+    }\n+\n+    public ListWZFile(File listwz) throws FileNotFoundException {\n+        lea = new GenericLittleEndianAccessor(new InputStreamByteStream(new BufferedInputStream(new FileInputStream(listwz))));\n+        while (lea.available() > 0) {\n+            int l = lea.readInt() * 2;\n+            byte[] chunk = new byte[l];\n+            for (int i = 0; i < chunk.length; i++) {\n+                chunk[i] = lea.readByte();\n+            }\n+            lea.readChar();\n+            final String value = String.valueOf(WZTool.readListString(chunk));\n+            entries.add(value);\n+        }\n+        entries = Collections.unmodifiableList(entries);\n+    }\n+\n+    public List<String> getEntries() {\n+        return entries;\n+    }\n+\n+    public static void init() {\n+        final String listWz = System.getProperty(\"listwz\");\n+        if (listWz != null) {\n+            ListWZFile listwz;\n+            try {\n+                listwz = new ListWZFile(MapleDataProviderFactory.fileInWZPath(\"List.wz\"));\n+                modernImgs = new HashSet<String>(listwz.getEntries());\n+            } catch (FileNotFoundException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    public static boolean isModernImgFile(String path) {\n+        return modernImgs.contains(path);\n+    }\n+}"}, {"sha": "e074d57d14a16e7ccc38449c8f9b10d9176215eb", "filename": "tools/MapleArrowFetcher/src/provider/wz/MapleDataType.java", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/MapleDataType.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/MapleDataType.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/MapleDataType.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,26 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+public enum MapleDataType {\n+    NONE, IMG_0x00, SHORT, INT, FLOAT, DOUBLE, STRING, EXTENDED, PROPERTY, CANVAS, VECTOR, CONVEX, SOUND, UOL, UNKNOWN_TYPE, UNKNOWN_EXTENDED_TYPE;\n+}\n\\ No newline at end of file"}, {"sha": "97c2303804d63dbbfc36bb745fb675fff26b61a3", "filename": "tools/MapleArrowFetcher/src/provider/wz/PNGMapleCanvas.java", "status": "added", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/PNGMapleCanvas.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/PNGMapleCanvas.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/PNGMapleCanvas.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,151 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.awt.Point;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.DataBuffer;\n+import java.awt.image.DataBufferByte;\n+import java.awt.image.PixelInterleavedSampleModel;\n+import java.awt.image.Raster;\n+import java.awt.image.SampleModel;\n+import java.awt.image.WritableRaster;\n+import java.util.zip.DataFormatException;\n+import java.util.zip.Inflater;\n+import provider.MapleCanvas;\n+\n+public class PNGMapleCanvas implements MapleCanvas {\n+    private static final int[] ZAHLEN = new int[]{2, 1, 0, 3};\n+    private int height;\n+    private int width;\n+    private int dataLength;\n+    private int format;\n+    private byte[] data;\n+\n+    public PNGMapleCanvas(int width, int height, int dataLength, int format, byte[] data) {\n+        super();\n+        this.height = height;\n+        this.width = width;\n+        this.dataLength = dataLength;\n+        this.format = format;\n+        this.data = data;\n+    }\n+\n+    public int getHeight() {\n+        return height;\n+    }\n+\n+    public int getWidth() {\n+        return width;\n+    }\n+\n+    public int getFormat() {\n+        return format;\n+    }\n+\n+    private byte[] getData() {\n+        return data;\n+    }\n+\n+    @Override\n+    public BufferedImage getImage() {\n+        int sizeUncompressed = 0;\n+        int size8888 = 0;\n+        int maxWriteBuf = 2;\n+        int maxHeight = 3;\n+        byte[] writeBuf = new byte[maxWriteBuf];\n+        @SuppressWarnings (\"unused\")\n+        byte[] rowPointers = new byte[maxHeight];\n+        switch (getFormat()) {\n+            case 1:\n+            case 513:\n+                sizeUncompressed = getHeight() * getWidth() * 4;\n+                break;\n+            case 2:\n+                sizeUncompressed = getHeight() * getWidth() * 8;\n+                break;\n+            case 517:\n+                sizeUncompressed = getHeight() * getWidth() / 128;\n+                break;\n+        }\n+        size8888 = getHeight() * getWidth() * 8;\n+        if (size8888 > maxWriteBuf) {\n+            maxWriteBuf = size8888;\n+            writeBuf = new byte[maxWriteBuf];\n+        }\n+        if (getHeight() > maxHeight) {\n+            maxHeight = getHeight();\n+            rowPointers = new byte[maxHeight];\n+        }\n+        Inflater dec = new Inflater();\n+        dec.setInput(getData(), 0, dataLength);\n+        int declen = 0;\n+        byte[] uc = new byte[sizeUncompressed];\n+        try {\n+            declen = dec.inflate(uc);\n+        } catch (DataFormatException ex) {\n+            throw new RuntimeException(\"zlib fucks\", ex);\n+        }\n+        dec.end();\n+        if (getFormat() == 1) {\n+            for (int i = 0; i < sizeUncompressed; i++) {\n+                byte low = (byte) (uc[i] & 0x0F);\n+                byte high = (byte) (uc[i] & 0xF0);\n+                writeBuf[(i << 1)] = (byte) (((low << 4) | low) & 0xFF);\n+                writeBuf[(i << 1) + 1] = (byte) (high | ((high >>> 4) & 0xF));\n+            }\n+        } else if (getFormat() == 2) {\n+            writeBuf = uc;\n+        } else if (getFormat() == 513) {\n+            for (int i = 0; i < declen; i += 2) {\n+                byte bBits = (byte) ((uc[i] & 0x1F) << 3);\n+                byte gBits = (byte) (((uc[i + 1] & 0x07) << 5) | ((uc[i] & 0xE0) >> 3));\n+                byte rBits = (byte) (uc[i + 1] & 0xF8);\n+                writeBuf[(i << 1)] = (byte) (bBits | (bBits >> 5));\n+                writeBuf[(i << 1) + 1] = (byte) (gBits | (gBits >> 6));\n+                writeBuf[(i << 1) + 2] = (byte) (rBits | (rBits >> 5));\n+                writeBuf[(i << 1) + 3] = (byte) 0xFF;\n+            }\n+        } else if (getFormat() == 517) {\n+            byte b = 0x00;\n+            int pixelIndex = 0;\n+            for (int i = 0; i < declen; i++) {\n+                for (int j = 0; j < 8; j++) {\n+                    b = (byte) (((uc[i] & (0x01 << (7 - j))) >> (7 - j)) * 255);\n+                    for (int k = 0; k < 16; k++) {\n+                        pixelIndex = (i << 9) + (j << 6) + k * 2;\n+                        writeBuf[pixelIndex] = b;\n+                        writeBuf[pixelIndex + 1] = b;\n+                        writeBuf[pixelIndex + 2] = b;\n+                        writeBuf[pixelIndex + 3] = (byte) 0xFF;\n+                    }\n+                }\n+            }\n+        }\n+        DataBufferByte imgData = new DataBufferByte(writeBuf, sizeUncompressed);\n+        SampleModel sm = new PixelInterleavedSampleModel(DataBuffer.TYPE_BYTE, getWidth(), getHeight(), 4, getWidth() * 4, ZAHLEN);\n+        WritableRaster imgRaster = Raster.createWritableRaster(sm, imgData, new Point(0, 0));\n+        BufferedImage aa = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_ARGB);\n+        aa.setData(imgRaster);\n+        return aa;\n+    }\n+}"}, {"sha": "d24b8cb2b992c82b360366af581c08599323781e", "filename": "tools/MapleArrowFetcher/src/provider/wz/WZDirectoryEntry.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZDirectoryEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZDirectoryEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/WZDirectoryEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,68 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataEntity;\n+import provider.MapleDataEntry;\n+import provider.MapleDataFileEntry;\n+\n+public class WZDirectoryEntry extends WZEntry implements MapleDataDirectoryEntry {\n+    private List<MapleDataDirectoryEntry> subdirs = new ArrayList<MapleDataDirectoryEntry>();\n+    private List<MapleDataFileEntry> files = new ArrayList<MapleDataFileEntry>();\n+    private Map<String, MapleDataEntry> entries = new HashMap<String, MapleDataEntry>();\n+\n+    public WZDirectoryEntry(String name, int size, int checksum, MapleDataEntity parent) {\n+        super(name, size, checksum, parent);\n+    }\n+\n+    public WZDirectoryEntry() {\n+        super(null, 0, 0, null);\n+    }\n+\n+    public void addDirectory(MapleDataDirectoryEntry dir) {\n+        subdirs.add(dir);\n+        entries.put(dir.getName(), dir);\n+    }\n+\n+    public void addFile(MapleDataFileEntry fileEntry) {\n+        files.add(fileEntry);\n+        entries.put(fileEntry.getName(), fileEntry);\n+    }\n+\n+    public List<MapleDataDirectoryEntry> getSubdirectories() {\n+        return Collections.unmodifiableList(subdirs);\n+    }\n+\n+    public List<MapleDataFileEntry> getFiles() {\n+        return Collections.unmodifiableList(files);\n+    }\n+\n+    public MapleDataEntry getEntry(String name) {\n+        return entries.get(name);\n+    }\n+}"}, {"sha": "1e921b208220663ddd15966a89f32f5cfbb4a8a2", "filename": "tools/MapleArrowFetcher/src/provider/wz/WZEntry.java", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/WZEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,61 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import provider.MapleDataEntity;\n+import provider.MapleDataEntry;\n+\n+public class WZEntry implements MapleDataEntry {\n+    private String name;\n+    private int size;\n+    private int checksum;\n+    private int offset;\n+    private MapleDataEntity parent;\n+\n+    public WZEntry(String name, int size, int checksum, MapleDataEntity parent) {\n+        super();\n+        this.name = name;\n+        this.size = size;\n+        this.checksum = checksum;\n+        this.parent = parent;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public int getSize() {\n+        return size;\n+    }\n+\n+    public int getChecksum() {\n+        return checksum;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public MapleDataEntity getParent() {\n+        return parent;\n+    }\n+}"}, {"sha": "c6c0abf5377cf42dbf23295649d0b321fb497913", "filename": "tools/MapleArrowFetcher/src/provider/wz/WZFile.java", "status": "added", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/WZFile.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,154 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+import provider.MapleData;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataFileEntry;\n+import provider.MapleDataProvider;\n+import tools.data.input.GenericLittleEndianAccessor;\n+import tools.data.input.GenericSeekableLittleEndianAccessor;\n+import tools.data.input.InputStreamByteStream;\n+import tools.data.input.LittleEndianAccessor;\n+import tools.data.input.RandomAccessByteStream;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+public class WZFile implements MapleDataProvider {\n+    static {\n+        ListWZFile.init();\n+    }\n+    private File wzfile;\n+    private LittleEndianAccessor lea;\n+    private SeekableLittleEndianAccessor slea;\n+    private int headerSize;\n+    private WZDirectoryEntry root;\n+    private boolean provideImages;\n+    private int cOffset;\n+\n+    public WZFile(File wzfile, boolean provideImages) throws IOException {\n+        this.wzfile = wzfile;\n+        lea = new GenericLittleEndianAccessor(new InputStreamByteStream(new BufferedInputStream(new FileInputStream(wzfile))));\n+        RandomAccessFile raf = new RandomAccessFile(wzfile, \"r\");\n+        slea = new GenericSeekableLittleEndianAccessor(new RandomAccessByteStream(raf));\n+        root = new WZDirectoryEntry(wzfile.getName(), 0, 0, null);\n+        this.provideImages = provideImages;\n+        load();\n+    }\n+\n+    private void load() throws IOException {\n+        lea.readAsciiString(4);\n+        lea.readInt();\n+        lea.readInt();\n+        headerSize = lea.readInt();\n+        lea.readNullTerminatedAsciiString();\n+        lea.readShort();\n+        parseDirectory(root);\n+        cOffset = (int) lea.getBytesRead();\n+        getOffsets(root);\n+    }\n+\n+    private void getOffsets(MapleDataDirectoryEntry dir) {\n+        for (MapleDataFileEntry file : dir.getFiles()) {\n+            file.setOffset(cOffset);\n+            cOffset += file.getSize();\n+        }\n+        for (MapleDataDirectoryEntry sdir : dir.getSubdirectories()) {\n+            getOffsets(sdir);\n+        }\n+    }\n+\n+    private void parseDirectory(WZDirectoryEntry dir) {\n+        int entries = WZTool.readValue(lea);\n+        for (int i = 0; i < entries; i++) {\n+            byte marker = lea.readByte();\n+            String name = null;\n+            int size, checksum;\n+            switch (marker) {\n+                case 0x02:\n+                    name = WZTool.readDecodedStringAtOffsetAndReset(slea, lea.readInt() + this.headerSize + 1);\n+                    size = WZTool.readValue(lea);\n+                    checksum = WZTool.readValue(lea);\n+                    lea.readInt(); //dummy int\n+                    dir.addFile(new WZFileEntry(name, size, checksum, dir));\n+                    break;\n+                case 0x03:\n+                case 0x04:\n+                    name = WZTool.readDecodedString(lea);\n+                    size = WZTool.readValue(lea);\n+                    checksum = WZTool.readValue(lea);\n+                    lea.readInt(); //dummy int\n+                    if (marker == 3) {\n+                        dir.addDirectory(new WZDirectoryEntry(name, size, checksum, dir));\n+                    } else {\n+                        dir.addFile(new WZFileEntry(name, size, checksum, dir));\n+                    }\n+                    break;\n+                default:\n+            }\n+        }\n+        for (MapleDataDirectoryEntry idir : dir.getSubdirectories()) {\n+            parseDirectory((WZDirectoryEntry) idir);\n+        }\n+    }\n+\n+    public WZIMGFile getImgFile(String path) throws IOException {\n+        String segments[] = path.split(\"/\");\n+        WZDirectoryEntry dir = root;\n+        for (int x = 0; x < segments.length - 1; x++) {\n+            dir = (WZDirectoryEntry) dir.getEntry(segments[x]);\n+            if (dir == null) {\n+                return null;\n+            }\n+        }\n+        WZFileEntry entry = (WZFileEntry) dir.getEntry(segments[segments.length - 1]);\n+        if (entry == null) {\n+            return null;\n+        }\n+        String fullPath = wzfile.getName().substring(0, wzfile.getName().length() - 3).toLowerCase() + \"/\" + path;\n+        return new WZIMGFile(this.wzfile, entry, provideImages, ListWZFile.isModernImgFile(fullPath));\n+    }\n+\n+    @Override\n+    public synchronized MapleData getData(String path) {\n+        try {\n+            WZIMGFile imgFile = getImgFile(path);\n+            if (imgFile == null) {\n+                return null;\n+            }\n+            MapleData ret = imgFile.getRoot();\n+            return ret;\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public MapleDataDirectoryEntry getRoot() {\n+        return root;\n+    }\n+}"}, {"sha": "792371d9cf3ef340e9c895ec2143cf2918a92952", "filename": "tools/MapleArrowFetcher/src/provider/wz/WZFileEntry.java", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZFileEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZFileEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/WZFileEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,42 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import provider.MapleDataEntity;\n+import provider.MapleDataFileEntry;\n+\n+public class WZFileEntry extends WZEntry implements MapleDataFileEntry {\n+    private int offset;\n+\n+    public WZFileEntry(String name, int size, int checksum, MapleDataEntity parent) {\n+        super(name, size, checksum, parent);\n+    }\n+\n+    @Override\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public void setOffset(int offset) {\n+        this.offset = offset;\n+    }\n+}"}, {"sha": "385d78518357407cf131b0197f29c175b9815c9c", "filename": "tools/MapleArrowFetcher/src/provider/wz/WZIMGEntry.java", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZIMGEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZIMGEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/WZIMGEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,118 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import provider.MapleData;\n+import provider.MapleDataEntity;\n+\n+public class WZIMGEntry implements MapleData {\n+    private String name;\n+    private MapleDataType type;\n+    private List<MapleData> children = new ArrayList<MapleData>(10);\n+    private Object data;\n+    private MapleDataEntity parent;\n+\n+    public WZIMGEntry(MapleDataEntity parent) {\n+        this.parent = parent;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public MapleDataType getType() {\n+        return type;\n+    }\n+\n+    @Override\n+    public List<MapleData> getChildren() {\n+        return Collections.unmodifiableList(children);\n+    }\n+\n+    @Override\n+    public MapleData getChildByPath(String path) {\n+        String segments[] = path.split(\"/\");\n+        if (segments[0].equals(\"..\")) {\n+            return ((MapleData) getParent()).getChildByPath(path.substring(path.indexOf(\"/\") + 1));\n+        }\n+        MapleData ret = this;\n+        for (int x = 0; x < segments.length; x++) {\n+            boolean foundChild = false;\n+            for (MapleData child : ret.getChildren()) {\n+                if (child.getName().equals(segments[x])) {\n+                    ret = child;\n+                    foundChild = true;\n+                    break;\n+                }\n+            }\n+            if (!foundChild) {\n+                return null;\n+            }\n+        }\n+        return ret;\n+    }\n+\n+    @Override\n+    public Object getData() {\n+        return data;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public void setType(MapleDataType type) {\n+        this.type = type;\n+    }\n+\n+    public void setData(Object data) {\n+        this.data = data;\n+    }\n+\n+    public void addChild(WZIMGEntry entry) {\n+        children.add(entry);\n+    }\n+\n+    @Override\n+    public Iterator<MapleData> iterator() {\n+        return getChildren().iterator();\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return getName() + \":\" + getData();\n+    }\n+\n+    public MapleDataEntity getParent() {\n+        return parent;\n+    }\n+\n+    public void finish() {\n+        ((ArrayList<MapleData>) children).trimToSize();\n+    }\n+}"}, {"sha": "bec06c78bdf9568da3ea9819f896e22bbc7f7c44", "filename": "tools/MapleArrowFetcher/src/provider/wz/WZIMGFile.java", "status": "added", "additions": 227, "deletions": 0, "changes": 227, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZIMGFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZIMGFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/WZIMGFile.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,227 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.awt.Point;\n+import java.io.DataOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.io.RandomAccessFile;\n+import tools.data.input.GenericSeekableLittleEndianAccessor;\n+import tools.data.input.RandomAccessByteStream;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+public class WZIMGFile {\n+    private WZFileEntry file;\n+    private WZIMGEntry root;\n+    private boolean provideImages;\n+    @SuppressWarnings (\"unused\")\n+    private boolean modernImg;\n+\n+    public WZIMGFile(File wzfile, WZFileEntry file, boolean provideImages, boolean modernImg) throws IOException {\n+        RandomAccessFile raf = new RandomAccessFile(wzfile, \"r\");\n+        SeekableLittleEndianAccessor slea = new GenericSeekableLittleEndianAccessor(new RandomAccessByteStream(raf));\n+        slea.seek(file.getOffset());\n+        this.file = file;\n+        this.provideImages = provideImages;\n+        root = new WZIMGEntry(file.getParent());\n+        root.setName(file.getName());\n+        root.setType(MapleDataType.EXTENDED);\n+        this.modernImg = modernImg;\n+        parseExtended(root, slea, 0);\n+        root.finish();\n+        raf.close();\n+    }\n+\n+    protected void dumpImg(OutputStream out, SeekableLittleEndianAccessor slea) throws IOException {\n+        DataOutputStream os = new DataOutputStream(out);\n+        long oldPos = slea.getPosition();\n+        slea.seek(file.getOffset());\n+        for (int x = 0; x < file.getSize(); x++) {\n+            os.write(slea.readByte());\n+        }\n+        slea.seek(oldPos);\n+    }\n+\n+    public WZIMGEntry getRoot() {\n+        return root;\n+    }\n+\n+    private void parse(WZIMGEntry entry, SeekableLittleEndianAccessor slea) {\n+        byte marker = slea.readByte();\n+        switch (marker) {\n+            case 0: {\n+                String name = WZTool.readDecodedString(slea);\n+                entry.setName(name);\n+                break;\n+            }\n+            case 1: {\n+                String name = WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt());\n+                entry.setName(name);\n+                break;\n+            }\n+            default:\n+                System.out.println(\"Unknown Image identifier: \" + marker + \" at offset \" + (slea.getPosition() - file.getOffset()));\n+        }\n+        marker = slea.readByte();\n+        switch (marker) {\n+            case 0:\n+                entry.setType(MapleDataType.IMG_0x00);\n+                break;\n+            case 2:\n+            case 11: //??? no idea, since 0.49\n+                entry.setType(MapleDataType.SHORT);\n+                entry.setData(Short.valueOf(slea.readShort()));\n+                break;\n+            case 3:\n+                entry.setType(MapleDataType.INT);\n+                entry.setData(Integer.valueOf(WZTool.readValue(slea)));\n+                break;\n+            case 4:\n+                entry.setType(MapleDataType.FLOAT);\n+                entry.setData(Float.valueOf(WZTool.readFloatValue(slea)));\n+                break;\n+            case 5:\n+                entry.setType(MapleDataType.DOUBLE);\n+                entry.setData(Double.valueOf(slea.readDouble()));\n+                break;\n+            case 8:\n+                entry.setType(MapleDataType.STRING);\n+                byte iMarker = slea.readByte();\n+                if (iMarker == 0) {\n+                    entry.setData(WZTool.readDecodedString(slea));\n+                } else if (iMarker == 1) {\n+                    entry.setData(WZTool.readDecodedStringAtOffsetAndReset(slea, slea.readInt() + file.getOffset()));\n+                } else {\n+                    System.out.println(\"Unknown String type \" + iMarker);\n+                }\n+                break;\n+            case 9:\n+                entry.setType(MapleDataType.EXTENDED);\n+                long endOfExtendedBlock = slea.readInt();\n+                endOfExtendedBlock += slea.getPosition();\n+                parseExtended(entry, slea, endOfExtendedBlock);\n+                break;\n+            default:\n+                System.out.println(\"Unknown Image type \" + marker);\n+        }\n+    }\n+\n+    private void parseExtended(WZIMGEntry entry, SeekableLittleEndianAccessor slea, long endOfExtendedBlock) {\n+        byte marker = slea.readByte();\n+        String type;\n+        switch (marker) {\n+            case 0x73:\n+                type = WZTool.readDecodedString(slea);\n+                break;\n+            case 0x1B:\n+                type = WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt());\n+                break;\n+            default:\n+                throw new RuntimeException(\"Unknown extended image identifier: \" + marker + \" at offset \" +\n+                        (slea.getPosition() - file.getOffset()));\n+        }\n+        if (type.equals(\"Property\")) {\n+            entry.setType(MapleDataType.PROPERTY);\n+            slea.readByte();\n+            slea.readByte();\n+            int children = WZTool.readValue(slea);\n+            for (int i = 0; i < children; i++) {\n+                WZIMGEntry cEntry = new WZIMGEntry(entry);\n+                parse(cEntry, slea);\n+                cEntry.finish();\n+                entry.addChild(cEntry);\n+            }\n+        } else if (type.equals(\"Canvas\")) {\n+            entry.setType(MapleDataType.CANVAS);\n+            slea.readByte();\n+            marker = slea.readByte();\n+            if (marker == 0) {\n+                // do nothing\n+            } else if (marker == 1) {\n+                slea.readByte();\n+                slea.readByte();\n+                int children = WZTool.readValue(slea);\n+                for (int i = 0; i < children; i++) {\n+                    WZIMGEntry child = new WZIMGEntry(entry);\n+                    parse(child, slea);\n+                    child.finish();\n+                    entry.addChild(child);\n+                }\n+            } else {\n+                System.out.println(\"Canvas marker != 1 (\" + marker + \")\");\n+            }\n+            int width = WZTool.readValue(slea);\n+            int height = WZTool.readValue(slea);\n+            int format = WZTool.readValue(slea);\n+            int format2 = slea.readByte();\n+            slea.readInt();\n+            int dataLength = slea.readInt() - 1;\n+            slea.readByte();\n+            if (provideImages) {\n+                byte[] pngdata = slea.read(dataLength);\n+                entry.setData(new PNGMapleCanvas(width, height, dataLength, format + format2, pngdata));\n+            } else {\n+                entry.setData(new PNGMapleCanvas(width, height, dataLength, format + format2, null));\n+                slea.skip(dataLength);\n+            }\n+        } else if (type.equals(\"Shape2D#Vector2D\")) {\n+            entry.setType(MapleDataType.VECTOR);\n+            int x = WZTool.readValue(slea);\n+            int y = WZTool.readValue(slea);\n+            entry.setData(new Point(x, y));\n+        } else if (type.equals(\"Shape2D#Convex2D\")) {\n+            int children = WZTool.readValue(slea);\n+            for (int i = 0; i < children; i++) {\n+                WZIMGEntry cEntry = new WZIMGEntry(entry);\n+                parseExtended(cEntry, slea, 0);\n+                cEntry.finish();\n+                entry.addChild(cEntry);\n+            }\n+        } else if (type.equals(\"Sound_DX8\")) {\n+            entry.setType(MapleDataType.SOUND);\n+            slea.readByte();\n+            int dataLength = WZTool.readValue(slea);\n+            WZTool.readValue(slea); // no clue what this is\n+            int offset = (int) slea.getPosition();\n+            entry.setData(new ImgMapleSound(dataLength, offset - file.getOffset()));\n+            slea.seek(endOfExtendedBlock);\n+        } else if (type.equals(\"UOL\")) {\n+            entry.setType(MapleDataType.UOL);\n+            slea.readByte();\n+            byte uolmarker = slea.readByte();\n+            switch (uolmarker) {\n+                case 0:\n+                    entry.setData(WZTool.readDecodedString(slea));\n+                    break;\n+                case 1:\n+                    entry.setData(WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt()));\n+                    break;\n+                default:\n+                    System.out.println(\"Unknown UOL marker: \" + uolmarker + \" \" + entry.getName());\n+            }\n+        } else {\n+            throw new RuntimeException(\"Unhandled extended type: \" + type);\n+        }\n+    }\n+}"}, {"sha": "85e1c8d90b12ad81599c4bc39bd3af48af60deeb", "filename": "tools/MapleArrowFetcher/src/provider/wz/WZTool.java", "status": "added", "additions": 187, "deletions": 0, "changes": 187, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZTool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/WZTool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/WZTool.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,187 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import javax.crypto.spec.SecretKeySpec;\n+import tools.data.input.LittleEndianAccessor;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+/*\n+ * Ported Code, see WZFile.java for more info\n+ */\n+public class WZTool {\n+    private static byte[] encKey;\n+\n+    static {\n+        byte[] iv = new byte[]{(byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,\n+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,\n+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,\n+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,};\n+        byte[] key = new byte[]{(byte) 0x13, 0x00, 0x00, 0x00,\n+            (byte) 0x08, 0x00, 0x00, 0x00,\n+            (byte) 0x06, 0x00, 0x00, 0x00,\n+            (byte) 0xB4, 0x00, 0x00, 0x00,\n+            (byte) 0x1B, 0x00, 0x00, 0x00,\n+            (byte) 0x0F, 0x00, 0x00, 0x00,\n+            (byte) 0x33, 0x00, 0x00, 0x00,\n+            (byte) 0x52, 0x00, 0x00, 0x00\n+        };\n+        Cipher cipher = null;\n+        SecretKeySpec skeySpec = new SecretKeySpec(key, \"AES\");\n+        try {\n+            cipher = Cipher.getInstance(\"AES\");\n+        } catch (NoSuchAlgorithmException e) {\n+            e.printStackTrace();\n+        } catch (NoSuchPaddingException e) {\n+            e.printStackTrace();\n+        }\n+        try {\n+            cipher.init(Cipher.ENCRYPT_MODE, skeySpec);\n+        } catch (InvalidKeyException e) {\n+            e.printStackTrace();\n+        }\n+        encKey = new byte[0xFFFF];\n+        for (int i = 0; i < (0xFFFF / 16); i++) {\n+            try {\n+                iv = cipher.doFinal(iv);\n+            } catch (IllegalBlockSizeException e) {\n+                e.printStackTrace();\n+            } catch (BadPaddingException e) {\n+                e.printStackTrace();\n+            }\n+            System.arraycopy(iv, 0, encKey, (i * 16), 16);\n+        }\n+        try {\n+            iv = cipher.doFinal(iv);\n+        } catch (IllegalBlockSizeException e) {\n+            e.printStackTrace();\n+        } catch (BadPaddingException e) {\n+            e.printStackTrace();\n+        }\n+        System.arraycopy(iv, 0, encKey, 65520, 15);\n+    }\n+\n+    public static byte[] readListString(byte[] str) {\n+        for (int i = 0; i < str.length; i++) {\n+            str[i] = (byte) (str[i] ^ encKey[i]);\n+        }\n+        return str;\n+    }\n+\n+    public static String readDecodedString(LittleEndianAccessor llea) {\n+        int strLength;\n+        byte b = llea.readByte();\n+        if (b == 0x00) {\n+            return \"\";\n+        }\n+        if (b >= 0) {\n+            if (b == 0x7F) {\n+                strLength = llea.readInt();\n+            } else {\n+                strLength = (int) b;\n+            }\n+            if (strLength < 0) {\n+                return \"\";\n+            }\n+            byte str[] = new byte[strLength * 2];\n+            for (int i = 0; i < strLength * 2; i++) {\n+                str[i] = llea.readByte();\n+            }\n+            return DecryptUnicodeStr(str);\n+        } else {\n+            if (b == -128) {\n+                strLength = llea.readInt();\n+            } else {\n+                strLength = -b;\n+            }\n+            if (strLength < 0) {\n+                return \"\";\n+            }\n+            byte str[] = new byte[strLength];\n+            for (int i = 0; i < strLength; i++) {\n+                str[i] = llea.readByte();\n+            }\n+            return DecryptAsciiStr(str);\n+        }\n+    }\n+\n+    public static String DecryptAsciiStr(byte[] str) {\n+        byte xorByte = (byte) 0xAA;\n+        for (int i = 0; i < str.length; i++) {\n+            str[i] = (byte) (str[i] ^ xorByte ^ encKey[i]);\n+            xorByte++;\n+        }\n+        return new String(str);\n+    }\n+\n+    public static String DecryptUnicodeStr(byte[] str) {\n+        int xorByte = 0xAAAA;\n+        char[] charRet = new char[str.length / 2];\n+        for (int i = 0; i < str.length; i++) {\n+            str[i] = (byte) (str[i] ^ encKey[i]);\n+        }\n+        for (int i = 0; i < (str.length / 2); i++) {\n+            char toXor = (char) ((str[i] << 8) | str[i + 1]);\n+            charRet[i] = (char) (toXor ^ xorByte);\n+            xorByte++;\n+        }\n+        return String.valueOf(charRet);\n+    }\n+\n+    public static String readDecodedStringAtOffset(SeekableLittleEndianAccessor slea, int offset) {\n+        slea.seek(offset);\n+        return readDecodedString(slea);\n+    }\n+\n+    public static String readDecodedStringAtOffsetAndReset(SeekableLittleEndianAccessor slea, int offset) {\n+        long pos = 0;\n+        pos = slea.getPosition();\n+        slea.seek(offset);\n+        String ret = readDecodedString(slea);\n+        slea.seek(pos);\n+        return ret;\n+    }\n+\n+    public static int readValue(LittleEndianAccessor lea) {\n+        byte b = lea.readByte();\n+        if (b == -128) {\n+            return lea.readInt();\n+        } else {\n+            return ((int) b);\n+        }\n+    }\n+\n+    public static float readFloatValue(LittleEndianAccessor lea) {\n+        byte b = lea.readByte();\n+        if (b == -128) {\n+            return lea.readFloat();\n+        } else {\n+            return 0;\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "151a04c2fd6b1e0e6c2084f2cabb9938ff4bfcd4", "filename": "tools/MapleArrowFetcher/src/provider/wz/XMLDomMapleData.java", "status": "added", "additions": 219, "deletions": 0, "changes": 219, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/XMLDomMapleData.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/XMLDomMapleData.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/XMLDomMapleData.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,219 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package provider.wz;\n+\n+import java.awt.Point;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Locale;\n+import java.text.NumberFormat;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+import provider.MapleData;\n+import provider.MapleDataEntity;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NamedNodeMap;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n+import org.xml.sax.SAXException;\n+\n+public class XMLDomMapleData implements MapleData {\n+\tprivate Node node;\n+\tprivate File imageDataDir;\n+        private NumberFormat nf;\n+\n+\tpublic XMLDomMapleData(FileInputStream fis, File imageDataDir) {\n+\t\ttry {\n+\t\t\tDocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n+\t\t\tDocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n+\t\t\tDocument document = documentBuilder.parse(fis);\n+\t\t\tthis.node = document.getFirstChild();\n+\t\t} catch (ParserConfigurationException e) {\n+\t\t\tthrow new RuntimeException(e);\n+\t\t} catch (SAXException e) {\n+\t\t\tthrow new RuntimeException(e);\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new RuntimeException(e);\n+\t\t}\n+\t\tthis.imageDataDir = imageDataDir;\n+                this.nf = NumberFormat.getInstance(Locale.FRANCE);\n+\t}\n+\n+\tprivate XMLDomMapleData(Node node) {\n+\t\tthis.node = node;\n+                this.nf = NumberFormat.getInstance(Locale.FRANCE);\n+\t}\n+\n+\t@Override\n+\tpublic MapleData getChildByPath(String path) {\n+\t\tString segments[] = path.split(\"/\");\n+\t\tif (segments[0].equals(\"..\")) {\n+\t\t\treturn ((MapleData) getParent()).getChildByPath(path.substring(path.indexOf(\"/\") + 1));\n+\t\t}\n+\n+\t\tNode myNode = node;\n+\t\tfor (int x = 0; x < segments.length; x++) {\n+\t\t\tNodeList childNodes = myNode.getChildNodes();\n+\t\t\tboolean foundChild = false;\n+\t\t\tfor (int i = 0; i < childNodes.getLength(); i++) {\n+\t\t\t\tNode childNode = childNodes.item(i);\n+\t\t\t\tif (childNode.getNodeType() == Node.ELEMENT_NODE && childNode.getAttributes().getNamedItem(\"name\").getNodeValue().equals(segments[x])) {\n+\t\t\t\t\tmyNode = childNode;\n+\t\t\t\t\tfoundChild = true;\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (!foundChild) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t}\n+\t\tXMLDomMapleData ret = new XMLDomMapleData(myNode);\n+\t\tret.imageDataDir = new File(imageDataDir, getName() + \"/\" + path).getParentFile();\n+\t\treturn ret;\n+\t}\n+\n+\t@Override\n+\tpublic List<MapleData> getChildren() {\n+\t\tList<MapleData> ret = new ArrayList<MapleData>();\n+\t\tNodeList childNodes = node.getChildNodes();\n+\t\tfor (int i = 0; i < childNodes.getLength(); i++) {\n+\t\t\tNode childNode = childNodes.item(i);\n+\t\t\tif (childNode.getNodeType() == Node.ELEMENT_NODE) {\n+\t\t\t\tXMLDomMapleData child = new XMLDomMapleData(childNode);\n+\t\t\t\tchild.imageDataDir = new File(imageDataDir, getName());\n+\t\t\t\tret.add(child);\n+\t\t\t}\n+\t\t}\n+\t\treturn ret;\n+\t}\n+\n+\t@Override\n+\tpublic Object getData() {\n+\t\tNamedNodeMap attributes = node.getAttributes();\n+\t\tMapleDataType type = getType();\n+\t\tswitch (type) {\n+\t\tcase DOUBLE:\n+\t\tcase FLOAT:\n+\t\tcase INT:\n+                case SHORT: {\n+                        String value = attributes.getNamedItem(\"value\").getNodeValue();\n+                        Number nval;\n+                        \n+                        try {\n+                                nval = nf.parse(value);\n+                        }\n+                        catch(java.text.ParseException pe) {\n+                                pe.printStackTrace();\n+                                nval = 0.0f;\n+                        }\n+                                \n+                        switch (type) {\n+                        case DOUBLE:\n+                                return nval.doubleValue();\n+                        case FLOAT:\n+                                return nval.floatValue();\n+                        case INT:\n+                                return nval.intValue();\n+                        case SHORT:\n+                                return nval.shortValue();\n+                        default:\n+                                return null;\n+                        }\n+                }\n+\t\tcase STRING:\n+\t\tcase UOL: {\n+\t\t\tString value = attributes.getNamedItem(\"value\").getNodeValue();\n+                        return value;\n+\t\t}\n+\t\tcase VECTOR: {\n+\t\t\tString x = attributes.getNamedItem(\"x\").getNodeValue();\n+\t\t\tString y = attributes.getNamedItem(\"y\").getNodeValue();\n+\t\t\treturn new Point(Integer.parseInt(x), Integer.parseInt(y));\n+\t\t}\n+\t\tcase CANVAS: {\n+\t\t\tString width = attributes.getNamedItem(\"width\").getNodeValue();\n+\t\t\tString height = attributes.getNamedItem(\"height\").getNodeValue();\n+\t\t\treturn new FileStoredPngMapleCanvas(Integer.parseInt(width), Integer.parseInt(height), new File(\n+\t\t\t\t\timageDataDir, getName() + \".png\"));\n+\t\t}\n+\t\tdefault:\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic MapleDataType getType() {\n+\t\tString nodeName = node.getNodeName();\n+\t\tif (nodeName.equals(\"imgdir\")) {\n+\t\t\treturn MapleDataType.PROPERTY;\n+\t\t} else if (nodeName.equals(\"canvas\")) {\n+\t\t\treturn MapleDataType.CANVAS;\n+\t\t} else if (nodeName.equals(\"convex\")) {\n+\t\t\treturn MapleDataType.CONVEX;\n+\t\t} else if (nodeName.equals(\"sound\")) {\n+\t\t\treturn MapleDataType.SOUND;\n+\t\t} else if (nodeName.equals(\"uol\")) {\n+\t\t\treturn MapleDataType.UOL;\n+\t\t} else if (nodeName.equals(\"double\")) {\n+\t\t\treturn MapleDataType.DOUBLE;\n+\t\t} else if (nodeName.equals(\"float\")) {\n+\t\t\treturn MapleDataType.FLOAT;\n+\t\t} else if (nodeName.equals(\"int\")) {\n+\t\t\treturn MapleDataType.INT;\n+\t\t} else if (nodeName.equals(\"short\")) {\n+\t\t\treturn MapleDataType.SHORT;\n+\t\t} else if (nodeName.equals(\"string\")) {\n+\t\t\treturn MapleDataType.STRING;\n+\t\t} else if (nodeName.equals(\"vector\")) {\n+\t\t\treturn MapleDataType.VECTOR;\n+\t\t} else if (nodeName.equals(\"null\")) {\n+\t\t\treturn MapleDataType.IMG_0x00;\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic MapleDataEntity getParent() {\n+\t\tNode parentNode = node.getParentNode();\n+\t\tif (parentNode.getNodeType() == Node.DOCUMENT_NODE) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tXMLDomMapleData parentData = new XMLDomMapleData(parentNode);\n+\t\tparentData.imageDataDir = imageDataDir.getParentFile();\n+\t\treturn parentData;\n+\t}\n+\n+\t@Override\n+\tpublic String getName() {\n+\t\treturn node.getAttributes().getNamedItem(\"name\").getNodeValue();\n+\t}\n+\n+\t@Override\n+\tpublic Iterator<MapleData> iterator() {\n+\t\treturn getChildren().iterator();\n+\t}\n+}"}, {"sha": "2a7694fdc97c511f4e0d4b894967b02d813683be", "filename": "tools/MapleArrowFetcher/src/provider/wz/XMLWZFile.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/XMLWZFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/provider/wz/XMLWZFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/provider/wz/XMLWZFile.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,85 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import provider.MapleData;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataProvider;\n+\n+public class XMLWZFile implements MapleDataProvider {\n+    private File root;\n+    private WZDirectoryEntry rootForNavigation;\n+\n+    public XMLWZFile(File fileIn) {\n+        root = fileIn;\n+        rootForNavigation = new WZDirectoryEntry(fileIn.getName(), 0, 0, null);\n+        fillMapleDataEntitys(root, rootForNavigation);\n+    }\n+\n+    private void fillMapleDataEntitys(File lroot, WZDirectoryEntry wzdir) {\n+        for (File file : lroot.listFiles()) {\n+            String fileName = file.getName();\n+            if (file.isDirectory() && !fileName.endsWith(\".img\")) {\n+                WZDirectoryEntry newDir = new WZDirectoryEntry(fileName, 0, 0, wzdir);\n+                wzdir.addDirectory(newDir);\n+                fillMapleDataEntitys(file, newDir);\n+            } else if (fileName.endsWith(\".xml\")) {\n+                wzdir.addFile(new WZFileEntry(fileName.substring(0, fileName.length() - 4), 0, 0, wzdir));\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public MapleData getData(String path) {\n+        File dataFile = new File(root, path + \".xml\");\n+        File imageDataDir = new File(root, path);\n+        if (!dataFile.exists()) {\n+            return null;//bitches\n+        }\n+        FileInputStream fis;\n+        try {\n+            fis = new FileInputStream(dataFile);\n+        } catch (FileNotFoundException e) {\n+            throw new RuntimeException(\"Datafile \" + path + \" does not exist in \" + root.getAbsolutePath());\n+        }\n+        final XMLDomMapleData domMapleData;\n+        try {\n+            domMapleData = new XMLDomMapleData(fis, imageDataDir.getParentFile());\n+        } finally {\n+            try {\n+                fis.close();\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+        return domMapleData;\n+    }\n+\n+    @Override\n+    public MapleDataDirectoryEntry getRoot() {\n+        return rootForNavigation;\n+    }\n+}"}, {"sha": "27ea52da04b1a9805a9d657847e559de4101cc0d", "filename": "tools/MapleArrowFetcher/src/tools/DatabaseConnection.java", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/DatabaseConnection.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/DatabaseConnection.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/DatabaseConnection.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,51 @@\n+package tools;\n+\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+\n+/**\n+ * @author Frz (Big Daddy)\n+ * @author The Real Spookster (some modifications to this beautiful code)\n+ */\n+public class DatabaseConnection {\n+    private static String DB_URL = \"jdbc:mysql://localhost:3306/maplesolaxia\";\n+    private static String DB_USER = \"root\";\n+    private static String DB_PASS = \"\";\n+    \n+    public static final int RETURN_GENERATED_KEYS = 1;\n+\n+    private static ThreadLocal<Connection> con = new ThreadLocalConnection();\n+\n+    public static Connection getConnection() {\n+        Connection c = con.get();\n+        try {\n+            c.getMetaData();\n+        } catch (SQLException e) { // connection is dead, therefore discard old object 5ever\n+            con.remove();\n+            c = con.get();\n+        }\n+        return c;\n+    }\n+\n+    private static class ThreadLocalConnection extends ThreadLocal<Connection> {\n+\n+        @Override\n+        protected Connection initialValue() {\n+            try {\n+                Class.forName(\"com.mysql.jdbc.Driver\"); // touch the mysql driver\n+            } catch (ClassNotFoundException e) {\n+                System.out.println(\"[SEVERE] SQL Driver Not Found. Consider death by clams.\");\n+                e.printStackTrace();\n+                return null;\n+            }\n+            try {\n+                return DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);\n+            } catch (SQLException e) {\n+                System.out.println(\"[SEVERE] Unable to make database connection.\");\n+                e.printStackTrace();\n+                return null;\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "8cc0c8aa84947f28e2bf1695d146b6c246eddec8", "filename": "tools/MapleArrowFetcher/src/tools/HexTool.java", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/HexTool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/HexTool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/HexTool.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,79 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools;\n+\n+import java.io.ByteArrayOutputStream;\n+\n+public class HexTool {\n+    private static final char[] HEX = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\n+\n+    private static String toString(byte byteValue) {\n+        int tmp = byteValue << 8;\n+        char[] retstr = new char[]{HEX[(tmp >> 12) & 0x0F], HEX[(tmp >> 8) & 0x0F]};\n+        return String.valueOf(retstr);\n+    }\n+\n+    public static String toString(byte[] bytes) {\n+        StringBuilder hexed = new StringBuilder();\n+        for (int i = 0; i < bytes.length; i++) {\n+            hexed.append(toString(bytes[i]));\n+            hexed.append(' ');\n+        }\n+        return hexed.substring(0, hexed.length() - 1);\n+    }\n+\n+    public static byte[] getByteArrayFromHexString(String hex) {\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        int nexti = 0;\n+        int nextb = 0;\n+        boolean highoc = true;\n+        outer:\n+        for (;;) {\n+            int number = -1;\n+            while (number == -1) {\n+                if (nexti == hex.length()) {\n+                    break outer;\n+                }\n+                char chr = hex.charAt(nexti);\n+                if (chr >= '0' && chr <= '9') {\n+                    number = chr - '0';\n+                } else if (chr >= 'a' && chr <= 'f') {\n+                    number = chr - 'a' + 10;\n+                } else if (chr >= 'A' && chr <= 'F') {\n+                    number = chr - 'A' + 10;\n+                } else {\n+                    number = -1;\n+                }\n+                nexti++;\n+            }\n+            if (highoc) {\n+                nextb = number << 4;\n+                highoc = false;\n+            } else {\n+                nextb |= number;\n+                highoc = true;\n+                baos.write(nextb);\n+            }\n+        }\n+        return baos.toByteArray();\n+    }\n+}"}, {"sha": "f88718cbe3e8471b9ccca9461e4978c346b1c43c", "filename": "tools/MapleArrowFetcher/src/tools/Pair.java", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/Pair.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/Pair.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/Pair.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,121 @@\n+/*\n+This file is part of the OdinMS Maple Story Server\n+Copyright (C) 2008 ~ 2010 Patrick Huy <patrick.huy@frz.cc> \n+Matthias Butz <matze@odinms.de>\n+Jan Christian Meyer <vimes@odinms.de>\n+\n+This program is free software: you can redistribute it and/or modify\n+it under the terms of the GNU Affero General Public License version 3\n+as published by the Free Software Foundation. You may not use, modify\n+or distribute this program under any other version of the\n+GNU Affero General Public License.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU Affero General Public License for more details.\n+\n+You should have received a copy of the GNU Affero General Public License\n+along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package tools;\n+\n+/**\n+ * Represents a pair of values.\n+ * \n+ * @author Frz\n+ * @since Revision 333\n+ * @version 1.0\n+ * \n+ * @param <E> The type of the left value.\n+ * @param <F> The type of the right value.\n+ */\n+public class Pair<E, F> {\n+\n+    public E left;\n+    public F right;\n+\n+    /**\n+     * Class constructor - pairs two objects together.\n+     *\n+     * @param left The left object.\n+     * @param right The right object.\n+     */\n+    public Pair(E left, F right) {\n+        this.left = left;\n+        this.right = right;\n+    }\n+\n+    /**\n+     * Gets the left value.\n+     *\n+     * @return The left value.\n+     */\n+    public E getLeft() {\n+        return left;\n+    }\n+\n+    /**\n+     * Gets the right value.\n+     *\n+     * @return The right value.\n+     */\n+    public F getRight() {\n+        return right;\n+    }\n+\n+    /**\n+     * Turns the pair into a string.\n+     *\n+     * @return Each value of the pair as a string joined by a colon.\n+     */\n+    @Override\n+    public String toString() {\n+        return left.toString() + \":\" + right.toString();\n+    }\n+\n+    /**\n+     * Gets the hash code of this pair.\n+     */\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((left == null) ? 0 : left.hashCode());\n+        result = prime * result + ((right == null) ? 0 : right.hashCode());\n+        return result;\n+    }\n+\n+    /**\n+     * Checks to see if two pairs are equal.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final Pair other = (Pair) obj;\n+        if (left == null) {\n+            if (other.left != null) {\n+                return false;\n+            }\n+        } else if (!left.equals(other.left)) {\n+            return false;\n+        }\n+        if (right == null) {\n+            if (other.right != null) {\n+                return false;\n+            }\n+        } else if (!right.equals(other.right)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "eac7de21eaac3423b32736fe92c5bd80da94d2a6", "filename": "tools/MapleArrowFetcher/src/tools/data/input/ByteArrayByteStream.java", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/ByteArrayByteStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/ByteArrayByteStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/input/ByteArrayByteStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,72 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+import tools.HexTool;\n+\n+public class ByteArrayByteStream implements SeekableInputStreamBytestream {\n+    private int pos = 0;\n+    private long bytesRead = 0;\n+    private byte[] arr;\n+\n+    public ByteArrayByteStream(byte[] arr) {\n+        this.arr = arr;\n+    }\n+\n+    @Override\n+    public long getPosition() {\n+        return pos;\n+    }\n+\n+    @Override\n+    public void seek(long offset) throws IOException {\n+        pos = (int) offset;\n+    }\n+\n+    @Override\n+    public long getBytesRead() {\n+        return bytesRead;\n+    }\n+\n+    @Override\n+    public int readByte() {\n+        bytesRead++;\n+        return ((int) arr[pos++]) & 0xFF;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        String nows = \"kevintjuh93 pwns\";//I lol'd\n+        if (arr.length - pos > 0) {\n+            byte[] now = new byte[arr.length - pos];\n+            System.arraycopy(arr, pos, now, 0, arr.length - pos);\n+            nows = HexTool.toString(now);\n+        }\n+        return \"All: \" + HexTool.toString(arr) + \"\\nNow: \" + nows;\n+    }\n+  \n+    @Override\n+    public long available() {\n+        return arr.length - pos;\n+    }\n+}"}, {"sha": "107f71843e5890dc43f8679eb7608ac631165eae", "filename": "tools/MapleArrowFetcher/src/tools/data/input/ByteInputStream.java", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/ByteInputStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/ByteInputStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/input/ByteInputStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,35 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+/**\n+ * Represents an abstract stream of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public interface ByteInputStream {\n+    int readByte();\n+    long getBytesRead();\n+    long available();\n+}"}, {"sha": "d08a9b8374c3b3a9c38fd898295446e7d3582d50", "filename": "tools/MapleArrowFetcher/src/tools/data/input/GenericLittleEndianAccessor.java", "status": "added", "additions": 239, "deletions": 0, "changes": 239, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/GenericLittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/GenericLittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/input/GenericLittleEndianAccessor.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,239 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.awt.Point;\n+import java.io.ByteArrayOutputStream;\n+\n+/**\n+ * Provides a generic interface to a Little Endian stream of bytes.\n+ *\n+ * @version 1.0\n+ * @author Frz\n+ * @since Revision 323\n+ */\n+public class GenericLittleEndianAccessor implements LittleEndianAccessor {\n+    private ByteInputStream bs;\n+\n+    /**\n+     * Class constructor - Wraps the accessor around a stream of bytes.\n+     *\n+     * @param bs The byte stream to wrap the accessor around.\n+     */\n+    public GenericLittleEndianAccessor(ByteInputStream bs) {\n+        this.bs = bs;\n+    }\n+\n+    /**\n+     * Read a single byte from the stream.\n+     *\n+     * @return The byte read.\n+     * @see tools.data.input.ByteInputStream#readByte\n+     */\n+    @Override\n+    public byte readByte() {\n+        return (byte) bs.readByte();\n+    }\n+\n+    /**\n+     * Reads an integer from the stream.\n+     *\n+     * @return The integer read.\n+     */\n+    @Override\n+    public int readInt() {\n+        return bs.readByte() + (bs.readByte() << 8) + (bs.readByte() << 16) + (bs.readByte() << 24);\n+    }\n+\n+    /**\n+     * Reads a short integer from the stream.\n+     *\n+     * @return The short read.\n+     */\n+    @Override\n+    public short readShort() {\n+        return (short) (bs.readByte() + (bs.readByte() << 8));\n+    }\n+\n+    /**\n+     * Reads a single character from the stream.\n+     *\n+     * @return The character read.\n+     */\n+    @Override\n+    public char readChar() {\n+        return (char) readShort();\n+    }\n+\n+    /**\n+     * Reads a long integer from the stream.\n+     *\n+     * @return The long integer read.\n+     */\n+    @Override\n+    public long readLong() {\n+        long byte1 = bs.readByte();\n+        long byte2 = bs.readByte();\n+        long byte3 = bs.readByte();\n+        long byte4 = bs.readByte();\n+        long byte5 = bs.readByte();\n+        long byte6 = bs.readByte();\n+        long byte7 = bs.readByte();\n+        long byte8 = bs.readByte();\n+        return (byte8 << 56) + (byte7 << 48) + (byte6 << 40) + (byte5 << 32) + (byte4 << 24) + (byte3 << 16) + (byte2 << 8) + byte1;\n+    }\n+\n+    /**\n+     * Reads a floating point integer from the stream.\n+     *\n+     * @return The float-type integer read.\n+     */\n+    @Override\n+    public float readFloat() {\n+        return Float.intBitsToFloat(readInt());\n+    }\n+\n+    /**\n+     * Reads a double-precision integer from the stream.\n+     *\n+     * @return The double-type integer read.\n+     */\n+    @Override\n+    public double readDouble() {\n+        return Double.longBitsToDouble(readLong());\n+    }\n+\n+    /**\n+     * Reads an ASCII string from the stream with length <code>n</code>.\n+     *\n+     * @param n Number of characters to read.\n+     * @return The string read.\n+     */\n+    public final String readAsciiString(int n) {\n+        char ret[] = new char[n];\n+        for (int x = 0; x < n; x++) {\n+            ret[x] = (char) readByte();\n+        }\n+        return String.valueOf(ret);\n+    }\n+\n+    /**\n+     * Reads a null-terminated string from the stream.\n+     *\n+     * @return The string read.\n+     */\n+    public final String readNullTerminatedAsciiString() {\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        byte b;\n+        while (true) {\n+            b = readByte();\n+            if (b == 0) {\n+                break;\n+            }\n+            baos.write(b);\n+        }\n+        byte[] buf = baos.toByteArray();\n+        char[] chrBuf = new char[buf.length];\n+        for (int x = 0; x < buf.length; x++) {\n+            chrBuf[x] = (char) buf[x];\n+        }\n+        return String.valueOf(chrBuf);\n+    }\n+\n+    /**\n+     * Gets the number of bytes read from the stream so far.\n+     *\n+     * @return A long integer representing the number of bytes read.\n+     * @see tools.data.input.ByteInputStream#getBytesRead()\n+     */\n+    public long getBytesRead() {\n+        return bs.getBytesRead();\n+    }\n+\n+    /**\n+     * Reads a MapleStory convention lengthed ASCII string.\n+     * This consists of a short integer telling the length of the string,\n+     * then the string itself.\n+     *\n+     * @return The string read.\n+     */\n+    @Override\n+    public String readMapleAsciiString() {\n+        return readAsciiString(readShort());\n+    }\n+\n+    /**\n+     * Reads <code>num</code> bytes off the stream.\n+     *\n+     * @param num The number of bytes to read.\n+     * @return An array of bytes with the length of <code>num</code>\n+     */\n+    @Override\n+    public byte[] read(int num) {\n+        byte[] ret = new byte[num];\n+        for (int x = 0; x < num; x++) {\n+            ret[x] = readByte();\n+        }\n+        return ret;\n+    }\n+\n+    /**\n+     * Reads a MapleStory Position information.\n+     * This consists of 2 short integer.\n+     *\n+     * @return The Position read.\n+     */\n+    @Override\n+    public final Point readPos() {\n+\tfinal int x = readShort();\n+\tfinal int y = readShort();\n+\treturn new Point(x, y);\n+    }\n+\n+    /**\n+     * Skips the current position of the stream <code>num</code> bytes ahead.\n+     *\n+     * @param num Number of bytes to skip.\n+     */\n+    @Override\n+    public void skip(int num) {\n+        for (int x = 0; x < num; x++) {\n+            readByte();\n+        }\n+    }\n+\n+    /**\n+     * @see tools.data.input.ByteInputStream#available\n+     */\n+    @Override\n+    public long available() {\n+        return bs.available();\n+    }\n+\n+    /**\n+     * @see java.lang.Object#toString\n+     */\n+    @Override\n+    public String toString() {\n+        return bs.toString();\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "fdd147d79637904e92445553643117eb0aa6ebf4", "filename": "tools/MapleArrowFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,91 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Provides an abstract accessor to a generic Little Endian byte stream. This\n+ * accessor is seekable.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ * @see tools.data.input.GenericLittleEndianAccessor\n+ */\n+public class GenericSeekableLittleEndianAccessor extends GenericLittleEndianAccessor implements SeekableLittleEndianAccessor {\n+    private SeekableInputStreamBytestream bs;\n+\n+    /**\n+     * Class constructor\n+     * Provide a seekable input stream to wrap this object around.\n+     *\n+     * @param bs The byte stream to wrap this around.\n+     */\n+    public GenericSeekableLittleEndianAccessor(SeekableInputStreamBytestream bs) {\n+        super(bs);\n+        this.bs = bs;\n+    }\n+\n+    /**\n+     * Seek the pointer to <code>offset</code>\n+     *\n+     * @param offset The offset to seek to.\n+     * @see tools.data.input.SeekableInputStreamBytestream#seek\n+     */\n+    @Override\n+    public void seek(long offset) {\n+        try {\n+            bs.seek(offset);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"Seek failed \" + e);\n+        }\n+    }\n+\n+    /**\n+     * Get the current position of the pointer.\n+     *\n+     * @return The current position of the pointer as a long integer.\n+     * @see tools.data.input.SeekableInputStreamBytestream#getPosition\n+     */\n+    @Override\n+    public long getPosition() {\n+        try {\n+            return bs.getPosition();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"getPosition failed\" + e);\n+            return -1;\n+        }\n+    }\n+\n+    /**\n+     * Skip <code>num</code> number of bytes in the stream.\n+     *\n+     * @param num The number of bytes to skip.\n+     */\n+    @Override\n+    public void skip(int num) {\n+        seek(getPosition() + num);\n+    }\n+}"}, {"sha": "70aef3489f8eeaa27e8236c069dd847e069c0a85", "filename": "tools/MapleArrowFetcher/src/tools/data/input/InputStreamByteStream.java", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/InputStreamByteStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/InputStreamByteStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/input/InputStreamByteStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,93 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+/**\n+ * Provides an abstract wrapper to a stream of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public class InputStreamByteStream implements ByteInputStream {\n+    private InputStream is;\n+    private long read = 0;\n+\n+    /**\n+     * Class constructor.\n+     * Provide an input stream to wrap this around.\n+     *\n+     * @param is The input stream to wrap this object around.\n+     */\n+    public InputStreamByteStream(InputStream is) {\n+        this.is = is;\n+    }\n+\n+    /**\n+     * Reads the next byte from the stream.\n+     *\n+     * @return Then next byte in the stream.\n+     */\n+    @Override\n+    public int readByte() {\n+        int temp;\n+        try {\n+            temp = is.read();\n+            if (temp == -1) {\n+                throw new RuntimeException(\"EOF\");\n+            }\n+            read++;\n+            return temp;\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    /**\n+     * Gets the number of bytes read from the stream.\n+     *\n+     * @return The number of bytes read as a long integer.\n+     */\n+    @Override\n+    public long getBytesRead() {\n+        return read;\n+    }\n+\n+    /**\n+     * Returns the number of bytes left in the stream.\n+     *\n+     * @return The number of bytes available for reading as a long integer.\n+     */\n+    @Override\n+    public long available() {\n+        try {\n+            return is.available();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"ERROR\" + e);\n+            return 0;\n+        }\n+    }\n+}"}, {"sha": "f991dbf537e4230969cf96296d460306fb52c019", "filename": "tools/MapleArrowFetcher/src/tools/data/input/LittleEndianAccessor.java", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/LittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/LittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/input/LittleEndianAccessor.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,45 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.awt.Point;\n+\n+/**\n+ * @author Frz\n+ */\n+public interface LittleEndianAccessor {\n+    byte readByte();\n+    char readChar();\n+    short readShort();\n+    int readInt();\n+    Point readPos();\n+    long readLong();\n+    void skip(int num);\n+    byte[] read(int num);\n+    float readFloat();\n+    double readDouble();\n+    String readAsciiString(int n);\n+    String readNullTerminatedAsciiString();\n+    String readMapleAsciiString();\n+    long getBytesRead();\n+    long available();\n+}"}, {"sha": "c0004be17fd1125ee7bff7911c3be489bc488f5c", "filename": "tools/MapleArrowFetcher/src/tools/data/input/RandomAccessByteStream.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/RandomAccessByteStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/RandomAccessByteStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/input/RandomAccessByteStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,84 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+\n+/**\n+ * Provides an abstract layer to a byte stream. This layer can be accessed\n+ * randomly.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public class RandomAccessByteStream implements SeekableInputStreamBytestream {\n+    private RandomAccessFile raf;\n+    private long read = 0;\n+\n+    public RandomAccessByteStream(RandomAccessFile raf) {\n+        super();\n+        this.raf = raf;\n+    }\n+\n+    @Override\n+    public int readByte() {\n+        int temp;\n+        try {\n+            temp = raf.read();\n+            if (temp == -1) {\n+                throw new RuntimeException(\"EOF\");\n+            }\n+            read++;\n+            return temp;\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void seek(long offset) throws IOException {\n+        raf.seek(offset);\n+    }\n+\n+    @Override\n+    public long getPosition() throws IOException {\n+        return raf.getFilePointer();\n+    }\n+\n+    @Override\n+    public long getBytesRead() {\n+        return read;\n+    }\n+\n+    @Override\n+    public long available() {\n+        try {\n+            return raf.length() - raf.getFilePointer();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"ERROR \" + e);\n+            return 0;\n+        }\n+    }\n+}"}, {"sha": "f4922dc876ef24832968388c0d62c27e9303cf20", "filename": "tools/MapleArrowFetcher/src/tools/data/input/SeekableInputStreamBytestream.java", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/SeekableInputStreamBytestream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/SeekableInputStreamBytestream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/input/SeekableInputStreamBytestream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,51 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Provides an abstract interface to a stream of bytes. This stream can be\n+ * seeked.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since 299\n+ */\n+public interface SeekableInputStreamBytestream extends ByteInputStream {\n+    /**\n+     * Seeks the stream by the specified offset.\n+     *\n+     * @param offset\n+     *            Number of bytes to seek.\n+     * @throws IOException\n+     */\n+    void seek(long offset) throws IOException;\n+\n+    /**\n+     * Gets the current position of the stream.\n+     *\n+     * @return The stream position as a long integer.\n+     * @throws IOException\n+     */\n+    long getPosition() throws IOException;\n+}"}, {"sha": "16b2317f7a5b5d000be9d7f12cd86bdc30d2ed89", "filename": "tools/MapleArrowFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,27 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+public interface SeekableLittleEndianAccessor extends LittleEndianAccessor {\n+    void seek(long offset);\n+    long getPosition();\n+}"}, {"sha": "80cbc9301e410f00b74731f7f8ee366109f12a1d", "filename": "tools/MapleArrowFetcher/src/tools/data/output/BAOSByteOutputStream.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/output/BAOSByteOutputStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/output/BAOSByteOutputStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/output/BAOSByteOutputStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,56 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.output;\n+\n+import java.io.ByteArrayOutputStream;\n+\n+/**\n+ * Uses a byte array to output a stream of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 352\n+ */\n+class BAOSByteOutputStream implements ByteOutputStream {\n+    private ByteArrayOutputStream baos;\n+\n+    /**\n+     * Class constructor - Wraps the stream around a Java BAOS.\n+     *\n+     * @param baos <code>The ByteArrayOutputStream</code> to wrap this around.\n+     */\n+    BAOSByteOutputStream(ByteArrayOutputStream baos) {\n+        super();\n+        this.baos = baos;\n+    }\n+\n+    /**\n+     * Writes a byte to the stream.\n+     *\n+     * @param b The byte to write to the stream.\n+     * @see tools.data.output.ByteOutputStream#writeByte(byte)\n+     */\n+    @Override\n+    public void writeByte(byte b) {\n+        baos.write(b);\n+    }\n+}"}, {"sha": "0df7ca775362e7ef40ee4e5fa9d9b36ebd0b5001", "filename": "tools/MapleArrowFetcher/src/tools/data/output/ByteOutputStream.java", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/output/ByteOutputStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/output/ByteOutputStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/output/ByteOutputStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,38 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.output;\n+\n+/**\n+ * Provides an interface to an output stream of bytes.\n+ * \n+ * @author Frz\n+ * @since Revision 323\n+ * @version 1.0\n+ */\n+interface ByteOutputStream {\n+    /**\n+     * Writes a byte to the stream.\n+     *\n+     * @param b The byte to write.\n+     */\n+    void writeByte(byte b);\n+}"}, {"sha": "e804fd8000c7748c854795b388a49da0a98666d9", "filename": "tools/MapleArrowFetcher/src/tools/data/output/GenericLittleEndianWriter.java", "status": "added", "additions": 183, "deletions": 0, "changes": 183, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/output/GenericLittleEndianWriter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/output/GenericLittleEndianWriter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/output/GenericLittleEndianWriter.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,183 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.output;\n+\n+import java.awt.Point;\n+import java.nio.charset.Charset;\n+\n+/**\n+ * Provides a generic writer of a little-endian sequence of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public class GenericLittleEndianWriter implements LittleEndianWriter {\n+    private static Charset ASCII = Charset.forName(\"US-ASCII\");\n+    private ByteOutputStream bos;\n+\n+    /**\n+     * Class constructor - Protected to prevent instantiation with no arguments.\n+     */\n+    protected GenericLittleEndianWriter() {\n+        // Blah!\n+    }\n+\n+    /**\n+     * Sets the byte-output stream for this instance of the object.\n+     *\n+     * @param bos The new output stream to set.\n+     */\n+    void setByteOutputStream(ByteOutputStream bos) {\n+        this.bos = bos;\n+    }\n+\n+    /**\n+     * Write an array of bytes to the stream.\n+     *\n+     * @param b The bytes to write.\n+     */\n+    @Override\n+    public void write(byte[] b) {\n+        for (int x = 0; x < b.length; x++) {\n+            bos.writeByte(b[x]);\n+        }\n+    }\n+\n+    /**\n+     * Write a byte to the stream.\n+     *\n+     * @param b The byte to write.\n+     */\n+    @Override\n+    public void write(byte b) {\n+        bos.writeByte(b);\n+    }\n+\n+    /**\n+     * Write a byte in integer form to the stream.\n+     *\n+     * @param b The byte as an <code>Integer</code> to write.\n+     */\n+    @Override\n+    public void write(int b) {\n+        bos.writeByte((byte) b);\n+    }\n+\n+    @Override\n+    public void skip(int b) {\n+        write(new byte[b]);\n+    }\n+\n+    /**\n+     * Write a short integer to the stream.\n+     *\n+     * @param i The short integer to write.\n+     */\n+    @Override\n+    public void writeShort(int i) {\n+        bos.writeByte((byte) (i & 0xFF));\n+        bos.writeByte((byte) ((i >>> 8) & 0xFF));\n+    }\n+\n+    /**\n+     * Writes an integer to the stream.\n+     *\n+     * @param i The integer to write.\n+     */\n+    @Override\n+    public void writeInt(int i) {\n+        bos.writeByte((byte) (i & 0xFF));\n+        bos.writeByte((byte) ((i >>> 8) & 0xFF));\n+        bos.writeByte((byte) ((i >>> 16) & 0xFF));\n+        bos.writeByte((byte) ((i >>> 24) & 0xFF));\n+    }\n+\n+    /**\n+     * Writes an ASCII string the the stream.\n+     *\n+     * @param s The ASCII string to write.\n+     */\n+    @Override\n+    public void writeAsciiString(String s) {\n+        write(s.getBytes(ASCII));\n+    }\n+\n+    /**\n+     * Writes a maple-convention ASCII string to the stream.\n+     *\n+     * @param s The ASCII string to use maple-convention to write.\n+     */\n+    @Override\n+    public void writeMapleAsciiString(String s) {\n+        writeShort((short) s.length());\n+        writeAsciiString(s);\n+    }\n+\n+    /**\n+     * Writes a null-terminated ASCII string to the stream.\n+     *\n+     * @param s The ASCII string to write.\n+     */\n+    @Override\n+    public void writeNullTerminatedAsciiString(String s) {\n+        writeAsciiString(s);\n+        write(0);\n+    }\n+\n+    /**\n+     * Write a long integer to the stream.\n+     * @param l The long integer to write.\n+     */\n+    @Override\n+    public void writeLong(long l) {\n+        bos.writeByte((byte) (l & 0xFF));\n+        bos.writeByte((byte) ((l >>> 8) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 16) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 24) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 32) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 40) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 48) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 56) & 0xFF));\n+    }\n+\n+    /**\n+     * Writes a 2D 4 byte position information\n+     *\n+     * @param s The Point position to write.\n+     */\n+    @Override\n+    public void writePos(Point s) {\n+        writeShort(s.x);\n+        writeShort(s.y);\n+    }\n+\n+    /**\n+     * Writes a boolean true ? 1 : 0\n+     *\n+     * @param b The boolean to write.\n+     */\n+    @Override\n+    public void writeBool(final boolean b) {\n+        write(b ? 1 : 0);\n+    }\n+}"}, {"sha": "f17bd7c72ec04f5abf2032a6622141630bd3dc81", "filename": "tools/MapleArrowFetcher/src/tools/data/output/LittleEndianWriter.java", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/output/LittleEndianWriter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/output/LittleEndianWriter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/output/LittleEndianWriter.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,114 @@\n+/*\n+ This file is part of the OdinMS Maple Story Server\n+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+ Matthias Butz <matze@odinms.de>\n+ Jan Christian Meyer <vimes@odinms.de>\n+\n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+\n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package tools.data.output;\n+\n+import java.awt.Point;\n+\n+/**\n+ * Provides an interface to a writer class that writes a little-endian sequence\n+ * of bytes.\n+ *\n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public interface LittleEndianWriter {\n+\n+    /**\n+     * Write an array of bytes to the sequence.\n+     *\n+     * @param b The bytes to write.\n+     */\n+    public void write(byte b[]);\n+\n+    /**\n+     * Write a byte to the sequence.\n+     *\n+     * @param b The byte to write.\n+     */\n+    public void write(byte b);\n+\n+    /**\n+     * Write a byte in integer form to the sequence.\n+     *\n+     * @param b The byte as an <code>Integer</code> to write.\n+     */\n+    public void write(int b);\n+\n+    public void skip(int b);\n+\n+    /**\n+     * Writes an integer to the sequence.\n+     *\n+     * @param i The integer to write.\n+     */\n+    public void writeInt(int i);\n+\n+    /**\n+     * Write a short integer to the sequence.\n+     *\n+     * @param s The short integer to write.\n+     */\n+    public void writeShort(int s);\n+\n+    /**\n+     * Write a long integer to the sequence.\n+     *\n+     * @param l The long integer to write.\n+     */\n+    public void writeLong(long l);\n+\n+    /**\n+     * Writes an ASCII string the the sequence.\n+     *\n+     * @param s The ASCII string to write.\n+     */\n+    void writeAsciiString(String s);\n+\n+    /**\n+     * Writes a null-terminated ASCII string to the sequence.\n+     *\n+     * @param s The ASCII string to write.\n+     */\n+    void writeNullTerminatedAsciiString(String s);\n+\n+    /**\n+     * Writes a maple-convention ASCII string to the sequence.\n+     *\n+     * @param s The ASCII string to use maple-convention to write.\n+     */\n+    void writeMapleAsciiString(String s);\n+\n+    /**\n+     * Writes a 2D 4 byte position information\n+     *\n+     * @param s The Point position to write.\n+     */\n+    void writePos(Point s);\n+\n+    /**\n+     * Writes a boolean true ? 1 : 0\n+     *\n+     * @param b The boolean to write.\n+     */\n+    void writeBool(final boolean b);\n+}"}, {"sha": "b02365ec62c9cbaf2998c5816928195512967a7f", "filename": "tools/MapleArrowFetcher/src/tools/data/output/MaplePacketLittleEndianWriter.java", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/output/MaplePacketLittleEndianWriter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleArrowFetcher/src/tools/data/output/MaplePacketLittleEndianWriter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleArrowFetcher/src/tools/data/output/MaplePacketLittleEndianWriter.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,73 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.output;\n+\n+import java.io.ByteArrayOutputStream;\n+import tools.HexTool;\n+\n+/**\n+ * Writes a maplestory-packet little-endian stream of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 352\n+ */\n+public class MaplePacketLittleEndianWriter extends GenericLittleEndianWriter {\n+    private ByteArrayOutputStream baos;\n+\n+    /**\n+     * Constructor - initializes this stream with a default size.\n+     */\n+    public MaplePacketLittleEndianWriter() {\n+        this(32);\n+    }\n+\n+    /**\n+     * Constructor - initializes this stream with size <code>size</code>.\n+     *\n+     * @param size The size of the underlying stream.\n+     */\n+    public MaplePacketLittleEndianWriter(int size) {\n+        this.baos = new ByteArrayOutputStream(size);\n+        setByteOutputStream(new BAOSByteOutputStream(baos));\n+    }\n+\n+    /**\n+     * Gets a <code>MaplePacket</code> instance representing this\n+     * sequence of bytes.\n+     *\n+     * @return A <code>MaplePacket</code> with the bytes in this stream.\n+     */\n+    public byte[] getPacket() {\n+        return baos.toByteArray();\n+    }\n+\n+    /**\n+     * Changes this packet into a human-readable hexadecimal stream of bytes.\n+     *\n+     * @return This packet as hex digits.\n+     */\n+    @Override\n+    public String toString() {\n+        return HexTool.toString(baos.toByteArray());\n+    }\n+}"}, {"sha": "8c94f0120f4e670f6e8a93618c5a38d2adf8cd2a", "filename": "tools/MapleMesoFetcher/build.xml", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/build.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/build.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/build.xml?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!-- You may freely edit this file. See commented blocks below for -->\n+<!-- some examples of how to customize the build. -->\n+<!-- (If you delete it and reopen the project it will be recreated.) -->\n+<!-- By default, only the Clean and Build commands use this build script. -->\n+<!-- Commands such as Run, Debug, and Test only use this build script if -->\n+<!-- the Compile on Save feature is turned off for the project. -->\n+<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->\n+<!-- in the project's Project Properties dialog box.-->\n+<project name=\"MapleMesoFetcher\" default=\"default\" basedir=\".\">\n+    <description>Builds, tests, and runs the project MapleMesoFetcher.</description>\n+    <import file=\"nbproject/build-impl.xml\"/>\n+    <!--\n+\n+    There exist several targets which are by default empty and which can be \n+    used for execution of your tasks. These targets are usually executed \n+    before and after some main targets. They are: \n+\n+      -pre-init:                 called before initialization of project properties\n+      -post-init:                called after initialization of project properties\n+      -pre-compile:              called before javac compilation\n+      -post-compile:             called after javac compilation\n+      -pre-compile-single:       called before javac compilation of single file\n+      -post-compile-single:      called after javac compilation of single file\n+      -pre-compile-test:         called before javac compilation of JUnit tests\n+      -post-compile-test:        called after javac compilation of JUnit tests\n+      -pre-compile-test-single:  called before javac compilation of single JUnit test\n+      -post-compile-test-single: called after javac compilation of single JUunit test\n+      -pre-jar:                  called before JAR building\n+      -post-jar:                 called after JAR building\n+      -post-clean:               called after cleaning build products\n+\n+    (Targets beginning with '-' are not intended to be called on their own.)\n+\n+    Example of inserting an obfuscator after compilation could look like this:\n+\n+        <target name=\"-post-compile\">\n+            <obfuscate>\n+                <fileset dir=\"${build.classes.dir}\"/>\n+            </obfuscate>\n+        </target>\n+\n+    For list of available properties check the imported \n+    nbproject/build-impl.xml file. \n+\n+\n+    Another way to customize the build is by overriding existing main targets.\n+    The targets of interest are: \n+\n+      -init-macrodef-javac:     defines macro for javac compilation\n+      -init-macrodef-junit:     defines macro for junit execution\n+      -init-macrodef-debug:     defines macro for class debugging\n+      -init-macrodef-java:      defines macro for class execution\n+      -do-jar:                  JAR building\n+      run:                      execution of project \n+      -javadoc-build:           Javadoc generation\n+      test-report:              JUnit report generation\n+\n+    An example of overriding the target for project execution could look like this:\n+\n+        <target name=\"run\" depends=\"MapleMesoFetcher-impl.jar\">\n+            <exec dir=\"bin\" executable=\"launcher.exe\">\n+                <arg file=\"${dist.jar}\"/>\n+            </exec>\n+        </target>\n+\n+    Notice that the overridden target depends on the jar target and not only on \n+    the compile target as the regular run target does. Again, for a list of available \n+    properties which you can use, check the target you are overriding in the\n+    nbproject/build-impl.xml file. \n+\n+    -->\n+</project>"}, {"sha": "4908feff3a6728a24fa486b90da161654471530a", "filename": "tools/MapleMesoFetcher/lib/meso_drop_data.sql", "status": "added", "additions": 447, "deletions": 0, "changes": 447, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/lib/meso_drop_data.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/lib/meso_drop_data.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/lib/meso_drop_data.sql?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,447 @@\n+ # SQL File autogenerated from the MapleMesoFetcher feature by Ronan Lana.\n+ # Generated data takes into account mob stats such as level and boss for the meso ranges.\n+ # Only mobs with 4 or more items with no meso entry on the DB it was compiled are presented here.\n+\n+  INSERT IGNORE INTO drop_data (`dropperid`, `itemid`, `minimum_quantity`, `maximum_quantity`, `questid`, `chance`) VALUES\n+(100122, 0, 14, 20, 0, 400000),\n+(100123, 0, 19, 29, 0, 400000),\n+(100124, 0, 25, 37, 0, 400000),\n+(100130, 0, 2, 4, 0, 400000),\n+(100131, 0, 8, 12, 0, 400000),\n+(100132, 0, 14, 20, 0, 400000),\n+(100133, 0, 19, 29, 0, 400000),\n+(100134, 0, 25, 37, 0, 400000),\n+(1110130, 0, 42, 62, 0, 400000),\n+(1140130, 0, 54, 79, 0, 400000),\n+(2100100, 0, 56, 83, 0, 400000),\n+(2100101, 0, 59, 87, 0, 400000),\n+(2100106, 0, 68, 100, 0, 400000),\n+(2100107, 0, 76, 112, 0, 400000),\n+(2100108, 0, 82, 121, 0, 400000),\n+(2110300, 0, 68, 100, 0, 400000),\n+(2110301, 0, 82, 121, 0, 400000),\n+(2230105, 0, 65, 96, 0, 400000),\n+(2230107, 0, 68, 100, 0, 400000),\n+(2230110, 0, 65, 96, 0, 400000),\n+(2230111, 0, 68, 100, 0, 400000),\n+(2230131, 0, 68, 100, 0, 400000),\n+(3000005, 0, 85, 125, 0, 400000),\n+(3100101, 0, 91, 133, 0, 400000),\n+(3100102, 0, 85, 125, 0, 400000),\n+(3110301, 0, 91, 133, 0, 400000),\n+(3110302, 0, 99, 146, 0, 400000),\n+(3110303, 0, 108, 158, 0, 400000),\n+(3220000, 0, 297, 1460, 0, 400000),\n+(3220001, 0, 324, 1580, 0, 400000),\n+(3300000, 0, 85, 125, 0, 400000),\n+(3300001, 0, 85, 125, 0, 400000),\n+(3300002, 0, 88, 129, 0, 400000),\n+(3300003, 0, 91, 133, 0, 400000),\n+(3300004, 0, 93, 137, 0, 400000),\n+(3300005, 0, 99, 146, 0, 400000),\n+(3300006, 0, 99, 146, 0, 400000),\n+(3300007, 0, 99, 146, 0, 400000),\n+(3300008, 0, 324, 1580, 0, 400000),\n+(4110300, 0, 119, 175, 0, 400000),\n+(4110301, 0, 128, 187, 0, 400000),\n+(4130103, 0, 399, 1960, 0, 400000),\n+(4220000, 0, 384, 1870, 0, 400000),\n+(4230122, 0, 119, 175, 0, 400000),\n+(4230125, 0, 125, 183, 0, 400000),\n+(4230400, 0, 128, 187, 0, 400000),\n+(4230502, 0, 122, 179, 0, 400000),\n+(4230503, 0, 128, 187, 0, 400000),\n+(4230504, 0, 128, 187, 0, 400000),\n+(4230600, 0, 113, 167, 0, 400000),\n+(4240000, 0, 139, 204, 0, 400000),\n+(4250000, 0, 119, 175, 0, 400000),\n+(4250001, 0, 131, 192, 0, 400000),\n+(5110300, 0, 142, 208, 0, 400000),\n+(5120500, 0, 159, 233, 0, 400000),\n+(5120501, 0, 150, 221, 0, 400000),\n+(5120502, 0, 153, 225, 0, 400000),\n+(5120505, 0, 165, 242, 0, 400000),\n+(5120506, 0, 156, 229, 0, 400000),\n+(5130105, 0, 159, 233, 0, 400000),\n+(5130108, 0, 162, 238, 0, 400000),\n+(5220000, 0, 468, 2290, 0, 400000),\n+(5220002, 0, 426, 2080, 0, 400000),\n+(5220003, 0, 504, 2460, 0, 400000),\n+(5220004, 0, 426, 2080, 0, 400000),\n+(5250000, 0, 156, 229, 0, 400000),\n+(5250001, 0, 145, 213, 0, 400000),\n+(5250002, 0, 162, 238, 0, 400000),\n+(6110300, 0, 185, 271, 0, 400000),\n+(6130102, 0, 170, 250, 0, 400000),\n+(6130103, 0, 170, 250, 0, 400000),\n+(6130203, 0, 170, 250, 0, 400000),\n+(6130207, 0, 176, 258, 0, 400000),\n+(6130209, 0, 187, 275, 0, 400000),\n+(6220000, 0, 555, 2710, 0, 400000),\n+(6220001, 0, 555, 2710, 0, 400000),\n+(6230100, 0, 176, 258, 0, 400000),\n+(6230401, 0, 179, 263, 0, 400000),\n+(6300005, 0, 555, 2710, 0, 400000),\n+(6400006, 0, 375, 1830, 0, 400000),\n+(6400008, 0, 468, 2290, 0, 400000),\n+(6400009, 0, 468, 2290, 0, 400000),\n+(7110300, 0, 213, 313, 0, 400000),\n+(7110301, 0, 207, 304, 0, 400000),\n+(7120103, 0, 199, 292, 0, 400000),\n+(7120104, 0, 202, 296, 0, 400000),\n+(7120106, 0, 213, 313, 0, 400000),\n+(7120107, 0, 213, 313, 0, 400000),\n+(7120108, 0, 219, 321, 0, 400000),\n+(7120109, 0, 225, 329, 0, 400000),\n+(7130000, 0, 207, 304, 0, 400000),\n+(7130002, 0, 205, 300, 0, 400000),\n+(7130003, 0, 216, 317, 0, 400000),\n+(7130004, 0, 222, 325, 0, 400000),\n+(7130102, 0, 222, 325, 0, 400000),\n+(7130103, 0, 207, 304, 0, 400000),\n+(7130400, 0, 597, 2920, 0, 400000),\n+(7130401, 0, 597, 2920, 0, 400000),\n+(7130402, 0, 597, 2920, 0, 400000),\n+(7130601, 0, 216, 317, 0, 400000),\n+(7220000, 0, 606, 2960, 0, 400000),\n+(7220001, 0, 597, 2920, 0, 400000),\n+(7220002, 0, 657, 3210, 0, 400000),\n+(8110300, 0, 227, 334, 0, 400000),\n+(8120102, 0, 233, 342, 0, 400000),\n+(8120103, 0, 239, 350, 0, 400000),\n+(8120104, 0, 244, 359, 0, 400000),\n+(8120105, 0, 250, 367, 0, 400000),\n+(8120106, 0, 253, 371, 0, 400000),\n+(8120107, 0, 253, 371, 0, 400000),\n+(8140000, 0, 227, 334, 0, 400000),\n+(8140100, 0, 233, 342, 0, 400000),\n+(8140511, 0, 615, 1130, 0, 400000),\n+(8140512, 0, 628, 1154, 0, 400000),\n+(8140600, 0, 622, 1142, 0, 400000),\n+(8140702, 0, 642, 1179, 0, 400000),\n+(8140703, 0, 655, 1204, 0, 400000),\n+(8141300, 0, 635, 1167, 0, 400000),\n+(8150000, 0, 2028, 12410, 0, 400000),\n+(8150100, 0, 676, 1241, 0, 400000),\n+(8150101, 0, 689, 1266, 0, 400000),\n+(8150200, 0, 676, 1241, 0, 400000),\n+(8150201, 0, 710, 1303, 0, 400000),\n+(8150300, 0, 655, 1204, 0, 400000),\n+(8150301, 0, 683, 1254, 0, 400000),\n+(8150302, 0, 696, 1279, 0, 400000),\n+(8190001, 0, 710, 1303, 0, 400000),\n+(8220003, 0, 2433, 14900, 0, 400000),\n+(8220005, 0, 2655, 16260, 0, 400000),\n+(8220006, 0, 2859, 17510, 0, 400000),\n+(8220007, 0, 1824, 11170, 0, 400000),\n+(8220009, 0, 726, 3550, 0, 400000),\n+(8830000, 0, 2130, 13030, 0, 400000),\n+(9001009, 0, 681, 3340, 0, 400000),\n+(9001011, 0, 99, 146, 0, 400000),\n+(9200016, 0, 85, 125, 0, 400000),\n+(9200019, 0, 165, 242, 0, 400000),\n+(9300011, 0, 111, 162, 0, 400000),\n+(9300058, 0, 19, 29, 0, 400000),\n+(9300059, 0, 28, 41, 0, 400000),\n+(9300060, 0, 119, 175, 0, 400000),\n+(9300078, 0, 710, 1303, 0, 400000),\n+(9300080, 0, 193, 284, 0, 400000),\n+(9300096, 0, 250, 367, 0, 400000),\n+(9300105, 0, 537, 2630, 0, 400000),\n+(9300106, 0, 579, 2840, 0, 400000),\n+(9300127, 0, 85, 125, 0, 400000),\n+(9300129, 0, 85, 125, 0, 400000),\n+(9300131, 0, 111, 162, 0, 400000),\n+(9300132, 0, 85, 125, 0, 400000),\n+(9300133, 0, 85, 125, 0, 400000),\n+(9300134, 0, 85, 125, 0, 400000),\n+(9300136, 0, 255, 1250, 0, 400000),\n+(9300139, 0, 690, 3380, 0, 400000),\n+(9300155, 0, 19, 29, 0, 400000),\n+(9300160, 0, 384, 1870, 0, 400000),\n+(9300161, 0, 384, 1870, 0, 400000),\n+(9300163, 0, 811, 1490, 0, 400000),\n+(9300164, 0, 811, 1490, 0, 400000),\n+(9300165, 0, 811, 1490, 0, 400000),\n+(9300182, 0, 726, 3550, 0, 400000),\n+(9300184, 0, 168, 830, 0, 400000),\n+(9300185, 0, 297, 1460, 0, 400000),\n+(9300186, 0, 324, 1580, 0, 400000),\n+(9300187, 0, 339, 1670, 0, 400000),\n+(9300188, 0, 426, 2080, 0, 400000),\n+(9300189, 0, 426, 2080, 0, 400000),\n+(9300190, 0, 468, 2290, 0, 400000),\n+(9300191, 0, 510, 2500, 0, 400000),\n+(9300192, 0, 477, 2330, 0, 400000),\n+(9300193, 0, 504, 2460, 0, 400000),\n+(9300194, 0, 555, 2710, 0, 400000),\n+(9300195, 0, 555, 2710, 0, 400000),\n+(9300196, 0, 555, 2710, 0, 400000),\n+(9300197, 0, 555, 2710, 0, 400000),\n+(9300198, 0, 510, 2500, 0, 400000),\n+(9300199, 0, 597, 2920, 0, 400000),\n+(9300200, 0, 606, 2960, 0, 400000),\n+(9300201, 0, 726, 3550, 0, 400000),\n+(9300202, 0, 657, 3210, 0, 400000),\n+(9300203, 0, 681, 3340, 0, 400000),\n+(9300204, 0, 708, 3460, 0, 400000),\n+(9300205, 0, 690, 3380, 0, 400000),\n+(9300206, 0, 726, 3550, 0, 400000),\n+(9300207, 0, 726, 3550, 0, 400000),\n+(9300208, 0, 1824, 11170, 0, 400000),\n+(9300209, 0, 1824, 11170, 0, 400000),\n+(9300210, 0, 2028, 12410, 0, 400000),\n+(9300211, 0, 2130, 13030, 0, 400000),\n+(9300212, 0, 2130, 13030, 0, 400000),\n+(9300213, 0, 2433, 14900, 0, 400000),\n+(9300214, 0, 2535, 15520, 0, 400000),\n+(9300215, 0, 3042, 18620, 0, 400000),\n+(9300217, 0, 5, 8, 0, 400000),\n+(9300218, 0, 11, 16, 0, 400000),\n+(9300219, 0, 11, 16, 0, 400000),\n+(9300220, 0, 48, 71, 0, 400000),\n+(9300221, 0, 71, 104, 0, 400000),\n+(9300222, 0, 79, 116, 0, 400000),\n+(9300223, 0, 17, 25, 0, 400000),\n+(9300224, 0, 105, 154, 0, 400000),\n+(9300225, 0, 105, 154, 0, 400000),\n+(9300226, 0, 113, 167, 0, 400000),\n+(9300227, 0, 105, 154, 0, 400000),\n+(9300228, 0, 136, 200, 0, 400000),\n+(9300229, 0, 22, 33, 0, 400000),\n+(9300230, 0, 116, 171, 0, 400000),\n+(9300231, 0, 131, 192, 0, 400000),\n+(9300232, 0, 96, 142, 0, 400000),\n+(9300233, 0, 113, 167, 0, 400000),\n+(9300234, 0, 91, 133, 0, 400000),\n+(9300235, 0, 148, 217, 0, 400000),\n+(9300236, 0, 159, 233, 0, 400000),\n+(9300237, 0, 168, 246, 0, 400000),\n+(9300238, 0, 68, 100, 0, 400000),\n+(9300239, 0, 119, 175, 0, 400000),\n+(9300240, 0, 128, 187, 0, 400000),\n+(9300241, 0, 193, 284, 0, 400000),\n+(9300242, 0, 199, 292, 0, 400000),\n+(9300243, 0, 159, 233, 0, 400000),\n+(9300244, 0, 159, 233, 0, 400000),\n+(9300245, 0, 170, 250, 0, 400000),\n+(9300246, 0, 176, 258, 0, 400000),\n+(9300247, 0, 185, 271, 0, 400000),\n+(9300248, 0, 187, 275, 0, 400000),\n+(9300249, 0, 199, 292, 0, 400000),\n+(9300250, 0, 213, 313, 0, 400000),\n+(9300251, 0, 207, 304, 0, 400000),\n+(9300252, 0, 128, 187, 0, 400000),\n+(9300253, 0, 142, 208, 0, 400000),\n+(9300254, 0, 207, 304, 0, 400000),\n+(9300255, 0, 133, 196, 0, 400000),\n+(9300256, 0, 170, 250, 0, 400000),\n+(9300257, 0, 170, 250, 0, 400000),\n+(9300258, 0, 185, 271, 0, 400000),\n+(9300259, 0, 56, 83, 0, 400000),\n+(9300260, 0, 227, 334, 0, 400000),\n+(9300261, 0, 250, 367, 0, 400000),\n+(9300262, 0, 250, 367, 0, 400000),\n+(9300263, 0, 250, 367, 0, 400000),\n+(9300264, 0, 696, 1279, 0, 400000),\n+(9300265, 0, 683, 1254, 0, 400000),\n+(9300266, 0, 606, 2960, 0, 400000),\n+(9300267, 0, 681, 3340, 0, 400000),\n+(9300268, 0, 606, 2960, 0, 400000),\n+(9300269, 0, 168, 830, 0, 400000),\n+(9300270, 0, 227, 334, 0, 400000),\n+(9300274, 0, 22, 33, 0, 400000),\n+(9300289, 0, 1824, 11170, 0, 400000),\n+(9300294, 0, 2028, 12410, 0, 400000),\n+(9300315, 0, 435, 2130, 0, 400000),\n+(9300316, 0, 450, 2210, 0, 400000),\n+(9300317, 0, 468, 2290, 0, 400000),\n+(9300318, 0, 486, 2380, 0, 400000),\n+(9300319, 0, 504, 2460, 0, 400000),\n+(9300320, 0, 519, 2540, 0, 400000),\n+(9300321, 0, 537, 2630, 0, 400000),\n+(9300322, 0, 555, 2710, 0, 400000),\n+(9300332, 0, 113, 167, 0, 400000),\n+(9300334, 0, 139, 204, 0, 400000),\n+(9300335, 0, 116, 171, 0, 400000),\n+(9300336, 0, 131, 192, 0, 400000),\n+(9300337, 0, 131, 192, 0, 400000),\n+(9300367, 0, 84, 410, 0, 400000),\n+(9300368, 0, 168, 830, 0, 400000),\n+(9300369, 0, 255, 1250, 0, 400000),\n+(9300370, 0, 339, 1670, 0, 400000),\n+(9300371, 0, 426, 2080, 0, 400000),\n+(9300372, 0, 510, 2500, 0, 400000),\n+(9300373, 0, 597, 2920, 0, 400000),\n+(9300374, 0, 681, 3340, 0, 400000),\n+(9300375, 0, 1824, 11170, 0, 400000),\n+(9300376, 0, 1824, 11170, 0, 400000),\n+(9300377, 0, 2229, 13660, 0, 400000),\n+(9303000, 0, 28, 41, 0, 400000),\n+(9303001, 0, 28, 41, 0, 400000),\n+(9303003, 0, 28, 41, 0, 400000),\n+(9303004, 0, 28, 41, 0, 400000),\n+(9303005, 0, 74, 108, 0, 400000),\n+(9303006, 0, 74, 108, 0, 400000),\n+(9303007, 0, 74, 108, 0, 400000),\n+(9303008, 0, 74, 108, 0, 400000),\n+(9303009, 0, 145, 213, 0, 400000),\n+(9303010, 0, 145, 213, 0, 400000),\n+(9303011, 0, 145, 213, 0, 400000),\n+(9303013, 0, 230, 338, 0, 400000),\n+(9303014, 0, 230, 338, 0, 400000),\n+(9303016, 0, 230, 338, 0, 400000),\n+(9400009, 0, 1352, 2483, 0, 400000),\n+(9400012, 0, 170, 250, 0, 400000),\n+(9400120, 0, 1926, 11790, 0, 400000),\n+(9400122, 0, 1926, 11790, 0, 400000),\n+(9400200, 0, 156, 229, 0, 400000),\n+(9400203, 0, 113, 167, 0, 400000),\n+(9400205, 0, 1824, 11170, 0, 400000),\n+(9400238, 0, 85, 125, 0, 400000),\n+(9400239, 0, 68, 100, 0, 400000),\n+(9400241, 0, 19, 29, 0, 400000),\n+(9400242, 0, 28, 41, 0, 400000),\n+(9400243, 0, 156, 229, 0, 400000),\n+(9400244, 0, 168, 246, 0, 400000),\n+(9400245, 0, 68, 100, 0, 400000),\n+(9400246, 0, 62, 91, 0, 400000),\n+(9400247, 0, 85, 125, 0, 400000),\n+(9400248, 0, 68, 100, 0, 400000),\n+(9400500, 0, 6, 40, 0, 400000),\n+(9400501, 0, 14, 20, 0, 400000),\n+(9400502, 0, 42, 200, 0, 400000),\n+(9400503, 0, 42, 200, 0, 400000),\n+(9400504, 0, 2, 4, 0, 400000),\n+(9400538, 0, 54, 79, 0, 400000),\n+(9400539, 0, 59, 87, 0, 400000),\n+(9400540, 0, 71, 104, 0, 400000),\n+(9400541, 0, 71, 104, 0, 400000),\n+(9400542, 0, 102, 150, 0, 400000),\n+(9400543, 0, 116, 171, 0, 400000),\n+(9400544, 0, 142, 208, 0, 400000),\n+(9400546, 0, 125, 183, 0, 400000),\n+(9400547, 0, 76, 112, 0, 400000),\n+(9400548, 0, 85, 125, 0, 400000),\n+(9400550, 0, 76, 112, 0, 400000),\n+(9400556, 0, 59, 87, 0, 400000),\n+(9400558, 0, 85, 125, 0, 400000),\n+(9400560, 0, 142, 208, 0, 400000),\n+(9400561, 0, 170, 250, 0, 400000),\n+(9400562, 0, 170, 250, 0, 400000),\n+(9400563, 0, 113, 167, 0, 400000),\n+(9400565, 0, 59, 87, 0, 400000),\n+(9400570, 0, 42, 62, 0, 400000),\n+(9400571, 0, 426, 2080, 0, 400000),\n+(9400573, 0, 113, 167, 0, 400000),\n+(9400574, 0, 676, 1241, 0, 400000),\n+(9400576, 0, 199, 292, 0, 400000),\n+(9400578, 0, 608, 1117, 0, 400000),\n+(9400579, 0, 676, 1241, 0, 400000),\n+(9400580, 0, 642, 1179, 0, 400000),\n+(9400581, 0, 227, 334, 0, 400000),\n+(9400582, 0, 811, 1490, 0, 400000),\n+(9400609, 0, 213, 1040, 0, 400000),\n+(9400612, 0, 213, 1040, 0, 400000),\n+(9400633, 0, 273, 1330, 0, 400000),\n+(9400644, 0, 28, 41, 0, 400000),\n+(9410014, 0, 242, 355, 0, 400000),\n+(9410015, 0, 726, 3550, 0, 400000),\n+(9420507, 0, 136, 200, 0, 400000),\n+(9420527, 0, 128, 187, 0, 400000),\n+(9420528, 0, 133, 196, 0, 400000),\n+(9420529, 0, 148, 217, 0, 400000),\n+(9420530, 0, 159, 233, 0, 400000),\n+(9420531, 0, 168, 246, 0, 400000),\n+(9420532, 0, 168, 246, 0, 400000),\n+(9420533, 0, 173, 254, 0, 400000),\n+(9420534, 0, 185, 271, 0, 400000),\n+(9420535, 0, 193, 284, 0, 400000),\n+(9420536, 0, 205, 300, 0, 400000),\n+(9420537, 0, 213, 313, 0, 400000),\n+(9420538, 0, 233, 342, 0, 400000),\n+(9420539, 0, 247, 363, 0, 400000),\n+(9420545, 0, 168, 246, 0, 400000),\n+(9420550, 0, 168, 246, 0, 400000),\n+(9500101, 0, 19, 29, 0, 400000),\n+(9500102, 0, 22, 33, 0, 400000),\n+(9500103, 0, 42, 62, 0, 400000),\n+(9500104, 0, 34, 50, 0, 400000),\n+(9500105, 0, 42, 62, 0, 400000),\n+(9500106, 0, 62, 91, 0, 400000),\n+(9500107, 0, 85, 125, 0, 400000),\n+(9500108, 0, 91, 133, 0, 400000),\n+(9500109, 0, 91, 133, 0, 400000),\n+(9500110, 0, 99, 146, 0, 400000),\n+(9500111, 0, 99, 146, 0, 400000),\n+(9500112, 0, 99, 146, 0, 400000),\n+(9500113, 0, 102, 150, 0, 400000),\n+(9500115, 0, 105, 154, 0, 400000),\n+(9500116, 0, 113, 167, 0, 400000),\n+(9500117, 0, 102, 150, 0, 400000),\n+(9500118, 0, 111, 162, 0, 400000),\n+(9500119, 0, 111, 162, 0, 400000),\n+(9500120, 0, 128, 187, 0, 400000),\n+(9500121, 0, 136, 200, 0, 400000),\n+(9500122, 0, 139, 204, 0, 400000),\n+(9500123, 0, 168, 246, 0, 400000),\n+(9500124, 0, 510, 2500, 0, 400000),\n+(9500125, 0, 170, 250, 0, 400000),\n+(9500126, 0, 182, 267, 0, 400000),\n+(9500127, 0, 190, 279, 0, 400000),\n+(9500128, 0, 193, 284, 0, 400000),\n+(9500129, 0, 199, 292, 0, 400000),\n+(9500130, 0, 597, 2920, 0, 400000),\n+(9500131, 0, 207, 304, 0, 400000),\n+(9500132, 0, 213, 313, 0, 400000),\n+(9500134, 0, 227, 334, 0, 400000),\n+(9500135, 0, 242, 355, 0, 400000),\n+(9500136, 0, 662, 1217, 0, 400000),\n+(9500137, 0, 642, 1179, 0, 400000),\n+(9500138, 0, 608, 1117, 0, 400000),\n+(9500139, 0, 681, 3340, 0, 400000),\n+(9500140, 0, 2028, 12410, 0, 400000),\n+(9500156, 0, 136, 200, 0, 400000),\n+(9500157, 0, 99, 146, 0, 400000),\n+(9500158, 0, 597, 2920, 0, 400000),\n+(9500159, 0, 597, 2920, 0, 400000),\n+(9500160, 0, 597, 2920, 0, 400000),\n+(9500161, 0, 227, 334, 0, 400000),\n+(9500162, 0, 227, 334, 0, 400000),\n+(9500163, 0, 236, 346, 0, 400000),\n+(9500164, 0, 250, 367, 0, 400000),\n+(9500165, 0, 250, 367, 0, 400000),\n+(9500166, 0, 250, 367, 0, 400000),\n+(9500178, 0, 113, 167, 0, 400000),\n+(9500180, 0, 1824, 11170, 0, 400000),\n+(9500181, 0, 1824, 11170, 0, 400000),\n+(9500306, 0, 168, 830, 0, 400000),\n+(9500307, 0, 297, 1460, 0, 400000),\n+(9500308, 0, 426, 2080, 0, 400000),\n+(9500309, 0, 468, 2290, 0, 400000),\n+(9500310, 0, 504, 2460, 0, 400000),\n+(9500311, 0, 555, 2710, 0, 400000),\n+(9500312, 0, 597, 2920, 0, 400000),\n+(9500313, 0, 606, 2960, 0, 400000),\n+(9500314, 0, 657, 3210, 0, 400000),\n+(9500317, 0, 84, 410, 0, 400000),\n+(9500318, 0, 339, 1670, 0, 400000),\n+(9500319, 0, 597, 2920, 0, 400000),\n+(9500321, 0, 28, 41, 0, 400000),\n+(9500326, 0, 384, 1870, 0, 400000),\n+(9500327, 0, 255, 1250, 0, 400000),\n+(9500328, 0, 297, 1460, 0, 400000),\n+(9500331, 0, 468, 2290, 0, 400000),\n+(9500332, 0, 384, 1870, 0, 400000),\n+(9500333, 0, 426, 2080, 0, 400000),\n+(9500334, 0, 468, 2290, 0, 400000),\n+(9500335, 0, 426, 2080, 0, 400000),\n+(9500366, 0, 42, 62, 0, 400000),\n+(9500367, 0, 42, 62, 0, 400000),\n+(9500368, 0, 42, 62, 0, 400000),\n+(9500369, 0, 42, 62, 0, 400000),\n+(9500370, 0, 42, 62, 0, 400000),\n+(9500371, 0, 42, 62, 0, 400000),\n+(9500372, 0, 42, 62, 0, 400000);\n+\n+  DELETE FROM drop_data WHERE dropperid >= 9300184 AND dropperid <= 9300215 AND itemid = 0;"}, {"sha": "0539039f716034c4896c8eaa81c075c7fa3bc997", "filename": "tools/MapleMesoFetcher/lib/mysql-connector-java-bin.jar", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/lib/mysql-connector-java-bin.jar", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/lib/mysql-connector-java-bin.jar", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/lib/mysql-connector-java-bin.jar?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "328e8e5bc3b7f1f7bad2bc0751a933e00c801983", "filename": "tools/MapleMesoFetcher/manifest.mf", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/manifest.mf", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/manifest.mf", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/manifest.mf?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,3 @@\n+Manifest-Version: 1.0\n+X-COMMENT: Main-Class will be added automatically by build\n+"}, {"sha": "5520ba35017e95e383f631420a2b4661cc943d3d", "filename": "tools/MapleMesoFetcher/src/life/Element.java", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/life/Element.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/life/Element.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/life/Element.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,46 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package life;\n+\n+public enum Element {\n+    NEUTRAL, FIRE, ICE, LIGHTING, POISON, HOLY, DARK;\n+\n+    public static Element getFromChar(char c) {\n+        switch (Character.toUpperCase(c)) {\n+            case 'F':\n+                return FIRE;\n+            case 'I':\n+                return ICE;\n+            case 'L':\n+                return LIGHTING;\n+            case 'S':\n+                return POISON;\n+            case 'H':\n+                return HOLY;\n+            case 'D':\n+            \treturn DARK;\n+            case 'P':\n+                return NEUTRAL;\n+        }\n+        throw new IllegalArgumentException(\"unknown elemnt char \" + c);\n+    }\n+}"}, {"sha": "f8d23ef5c7ce719cf8660d29c7e09fa901dbb682", "filename": "tools/MapleMesoFetcher/src/life/ElementalEffectiveness.java", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/life/ElementalEffectiveness.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/life/ElementalEffectiveness.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/life/ElementalEffectiveness.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,41 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package life;\n+\n+public enum ElementalEffectiveness {\n+    NORMAL, IMMUNE, STRONG, WEAK, NEUTRAL;\n+\n+    public static ElementalEffectiveness getByNumber(int num) {\n+        switch (num) {\n+            case 1:\n+                return IMMUNE;\n+            case 2:\n+                return STRONG;\n+            case 3:\n+                return WEAK;\n+            case 4:\n+                return NEUTRAL;\n+            default:\n+                throw new IllegalArgumentException(\"Unkown effectiveness: \" + num);\n+        }\n+    }\n+}"}, {"sha": "23ccd67e43d453cabdb9d9e873ff6b0843767354", "filename": "tools/MapleMesoFetcher/src/life/MapleLifeFactory.java", "status": "added", "additions": 240, "deletions": 0, "changes": 240, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/life/MapleLifeFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/life/MapleLifeFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/life/MapleLifeFactory.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,240 @@\n+/*\n+This file is part of the OdinMS Maple Story Server\n+Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+Matthias Butz <matze@odinms.de>\n+Jan Christian Meyer <vimes@odinms.de>\n+\n+This program is free software: you can redistribute it and/or modify\n+it under the terms of the GNU Affero General Public License as\n+published by the Free Software Foundation version 3 as published by\n+the Free Software Foundation. You may not use, modify or distribute\n+this program under any other version of the GNU Affero General Public\n+License.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU Affero General Public License for more details.\n+\n+You should have received a copy of the GNU Affero General Public License\n+along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package life;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import provider.MapleData;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataFileEntry;\n+import provider.MapleDataProvider;\n+import provider.MapleDataProviderFactory;\n+import provider.MapleDataTool;\n+import provider.wz.MapleDataType;\n+import tools.Pair;\n+\n+public class MapleLifeFactory {\n+    private static String wzPath = \"../../wz\";\n+    private static MapleDataProvider data = MapleDataProviderFactory.getDataProvider(new File(wzPath + \"/Mob.wz\"));\n+    private final static MapleDataProvider stringDataWZ = MapleDataProviderFactory.getDataProvider(new File(wzPath + \"/String.wz\"));\n+    private static MapleData mobStringData = stringDataWZ.getData(\"Mob.img\");\n+    private static MapleData npcStringData = stringDataWZ.getData(\"Npc.img\");\n+    private static Map<Integer, MapleMonsterStats> monsterStats = new HashMap<>();\n+\n+    private static int getMonsterId(String fileName) {\n+        return Integer.parseInt(fileName.substring(0, 7));\n+    }\n+    \n+    public static Map<Integer, MapleMonsterStats> getAllMonsterStats() {\n+        MapleDataDirectoryEntry root = data.getRoot();\n+        \n+        System.out.print(\"Parsing mob stats... \");\n+        for (MapleDataFileEntry mFile : root.getFiles()) {\n+            try {\n+                String fileName = mFile.getName();\n+                \n+                //System.out.println(\"Parsing '\" + fileName + \"'\");\n+                MapleData monsterData = data.getData(fileName);\n+                if (monsterData == null) {\n+                    continue;\n+                }\n+                \n+                Integer mid = getMonsterId(fileName);\n+        \n+                MapleData monsterInfoData = monsterData.getChildByPath(\"info\");\n+                MapleMonsterStats stats = new MapleMonsterStats();\n+                stats.setHp(MapleDataTool.getIntConvert(\"maxHP\", monsterInfoData));\n+                stats.setFriendly(MapleDataTool.getIntConvert(\"damagedByMob\", monsterInfoData, 0) == 1);\n+                stats.setPADamage(MapleDataTool.getIntConvert(\"PADamage\", monsterInfoData));\n+                stats.setPDDamage(MapleDataTool.getIntConvert(\"PDDamage\", monsterInfoData));\n+                stats.setMADamage(MapleDataTool.getIntConvert(\"MADamage\", monsterInfoData));\n+                stats.setMDDamage(MapleDataTool.getIntConvert(\"MDDamage\", monsterInfoData));  \n+                stats.setMp(MapleDataTool.getIntConvert(\"maxMP\", monsterInfoData, 0));\n+                stats.setExp(MapleDataTool.getIntConvert(\"exp\", monsterInfoData, 0));\n+                stats.setLevel(MapleDataTool.getIntConvert(\"level\", monsterInfoData));\n+                stats.setRemoveAfter(MapleDataTool.getIntConvert(\"removeAfter\", monsterInfoData, 0));\n+                stats.setBoss(MapleDataTool.getIntConvert(\"boss\", monsterInfoData, 0) > 0);\n+                stats.setExplosiveReward(MapleDataTool.getIntConvert(\"explosiveReward\", monsterInfoData, 0) > 0);\n+                stats.setFfaLoot(MapleDataTool.getIntConvert(\"publicReward\", monsterInfoData, 0) > 0);\n+                stats.setUndead(MapleDataTool.getIntConvert(\"undead\", monsterInfoData, 0) > 0);\n+                stats.setName(MapleDataTool.getString(mid + \"/name\", mobStringData, \"MISSINGNO\"));\n+                stats.setBuffToGive(MapleDataTool.getIntConvert(\"buff\", monsterInfoData, -1));\n+                stats.setCP(MapleDataTool.getIntConvert(\"getCP\", monsterInfoData, 0));\n+                stats.setRemoveOnMiss(MapleDataTool.getIntConvert(\"removeOnMiss\", monsterInfoData, 0) > 0);\n+\n+                MapleData special = monsterInfoData.getChildByPath(\"coolDamage\");\n+                if (special != null) {\n+                    int coolDmg = MapleDataTool.getIntConvert(\"coolDamage\", monsterInfoData);\n+                    int coolProb = MapleDataTool.getIntConvert(\"coolDamageProb\", monsterInfoData, 0);\n+                    stats.setCool(new Pair<>(coolDmg, coolProb));\n+                }\n+                special = monsterInfoData.getChildByPath(\"loseItem\");\n+                if (special != null) {\n+                    for (MapleData liData : special.getChildren()) {\n+                        stats.addLoseItem(new loseItem(MapleDataTool.getInt(liData.getChildByPath(\"id\")), (byte) MapleDataTool.getInt(liData.getChildByPath(\"prop\")), (byte) MapleDataTool.getInt(liData.getChildByPath(\"x\"))));\n+                    }\n+                }\n+                special = monsterInfoData.getChildByPath(\"selfDestruction\");\n+                if (special != null) {\n+                    stats.setSelfDestruction(new selfDestruction((byte) MapleDataTool.getInt(special.getChildByPath(\"action\")), MapleDataTool.getIntConvert(\"removeAfter\", special, -1), MapleDataTool.getIntConvert(\"hp\", special, -1)));\n+                }\n+                MapleData firstAttackData = monsterInfoData.getChildByPath(\"firstAttack\");\n+                int firstAttack = 0;\n+                if (firstAttackData != null) {\n+                    if (firstAttackData.getType() == MapleDataType.FLOAT) {\n+                        firstAttack = Math.round(MapleDataTool.getFloat(firstAttackData));\n+                    } else {\n+                        firstAttack = MapleDataTool.getInt(firstAttackData);\n+                    }\n+                }\n+                stats.setFirstAttack(firstAttack > 0);\n+                stats.setDropPeriod(MapleDataTool.getIntConvert(\"dropItemPeriod\", monsterInfoData, 0) * 10000);\n+\n+                stats.setTagColor(MapleDataTool.getIntConvert(\"hpTagColor\", monsterInfoData, 0));\n+                stats.setTagBgColor(MapleDataTool.getIntConvert(\"hpTagBgcolor\", monsterInfoData, 0));\n+\n+                for (MapleData idata : monsterData) {\n+                    if (!idata.getName().equals(\"info\")) {\n+                        int delay = 0;\n+                        for (MapleData pic : idata.getChildren()) {\n+                            delay += MapleDataTool.getIntConvert(\"delay\", pic, 0);\n+                        }\n+                        stats.setAnimationTime(idata.getName(), delay);\n+                    }\n+                }\n+                MapleData reviveInfo = monsterInfoData.getChildByPath(\"revive\");\n+                if (reviveInfo != null) {\n+                    List<Integer> revives = new LinkedList<>();\n+                    for (MapleData data_ : reviveInfo) {\n+                        revives.add(MapleDataTool.getInt(data_));\n+                    }\n+                    stats.setRevives(revives);\n+                }\n+                decodeElementalString(stats, MapleDataTool.getString(\"elemAttr\", monsterInfoData, \"\"));\n+                MapleData monsterSkillData = monsterInfoData.getChildByPath(\"skill\");\n+                if (monsterSkillData != null) {\n+                    int i = 0;\n+                    List<Pair<Integer, Integer>> skills = new ArrayList<>();\n+                    while (monsterSkillData.getChildByPath(Integer.toString(i)) != null) {\n+                        skills.add(new Pair<>(Integer.valueOf(MapleDataTool.getInt(i + \"/skill\", monsterSkillData, 0)), Integer.valueOf(MapleDataTool.getInt(i + \"/level\", monsterSkillData, 0))));\n+                        i++;\n+                    }\n+                    stats.setSkills(skills);\n+                }\n+                MapleData banishData = monsterInfoData.getChildByPath(\"ban\");\n+                if (banishData != null) {\n+                    stats.setBanishInfo(new BanishInfo(MapleDataTool.getString(\"banMsg\", banishData), MapleDataTool.getInt(\"banMap/0/field\", banishData, -1), MapleDataTool.getString(\"banMap/0/portal\", banishData, \"sp\")));\n+                }\n+                \n+                monsterStats.put(mid, stats);\n+            } catch(NullPointerException npe) {\n+                //System.out.println(\"[SEVERE] \" + mFile.getName() + \" failed to load. Issue: \" + npe.getMessage() + \"\\n\\n\");\n+            }\n+        }\n+        \n+        System.out.println(\"done!\");\n+        return monsterStats;\n+    }\n+\n+    private static void decodeElementalString(MapleMonsterStats stats, String elemAttr) {\n+        for (int i = 0; i < elemAttr.length(); i += 2) {\n+            stats.setEffectiveness(Element.getFromChar(elemAttr.charAt(i)), ElementalEffectiveness.getByNumber(Integer.valueOf(String.valueOf(elemAttr.charAt(i + 1)))));\n+        }\n+    }\n+\n+    public static class BanishInfo {\n+\n+        private int map;\n+        private String portal, msg;\n+\n+        public BanishInfo(String msg, int map, String portal) {\n+            this.msg = msg;\n+            this.map = map;\n+            this.portal = portal;\n+        }\n+\n+        public int getMap() {\n+            return map;\n+        }\n+\n+        public String getPortal() {\n+            return portal;\n+        }\n+\n+        public String getMsg() {\n+            return msg;\n+        }\n+    }\n+\n+    public static class loseItem {\n+\n+        private int id;\n+        private byte chance, x;\n+\n+        private loseItem(int id, byte chance, byte x) {\n+            this.id = id;\n+            this.chance = chance;\n+            this.x = x;\n+        }\n+\n+        public int getId() {\n+            return id;\n+        }\n+\n+        public byte getChance() {\n+            return chance;\n+        }\n+\n+        public byte getX() {\n+            return x;\n+        }\n+    }\n+\n+    public static class selfDestruction {\n+\n+        private byte action;\n+        private int removeAfter;\n+        private int hp;\n+\n+        private selfDestruction(byte action, int removeAfter, int hp) {\n+            this.action = action;\n+            this.removeAfter = removeAfter;\n+            this.hp = hp;\n+        }\n+\n+        public int getHp() {\n+            return hp;\n+        }\n+        \n+        public byte getAction() {\n+            return action;\n+        }\n+\n+        public int removeAfter() {\n+            return removeAfter;\n+        }\n+    }\n+}"}, {"sha": "42b091545d642745bb1b54e127e8901698d220aa", "filename": "tools/MapleMesoFetcher/src/life/MapleMonsterStats.java", "status": "added", "additions": 336, "deletions": 0, "changes": 336, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/life/MapleMonsterStats.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/life/MapleMonsterStats.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/life/MapleMonsterStats.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,336 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package life;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import life.MapleLifeFactory.BanishInfo;\n+import life.MapleLifeFactory.loseItem;\n+import life.MapleLifeFactory.selfDestruction;\n+import tools.Pair;\n+\n+/**\n+ * @author Frz\n+ */\n+public class MapleMonsterStats {\n+    private boolean changeable;\n+    private int exp, hp, mp, level, PADamage, PDDamage, MADamage, MDDamage, dropPeriod, cp, buffToGive, removeAfter;\n+    private boolean boss, undead, ffaLoot, isExplosiveReward, firstAttack, removeOnMiss;\n+    private String name;\n+    private Map<String, Integer> animationTimes = new HashMap<String, Integer>();\n+    private Map<Element, ElementalEffectiveness> resistance = new HashMap<Element, ElementalEffectiveness>();\n+    private List<Integer> revives = Collections.emptyList();\n+    private byte tagColor, tagBgColor;\n+    private List<Pair<Integer, Integer>> skills = new ArrayList<Pair<Integer, Integer>>();\n+    private Pair<Integer, Integer> cool = null;\n+    private BanishInfo banish = null;\n+    private List<loseItem> loseItem = null;\n+    private selfDestruction selfDestruction = null;\n+    private boolean friendly;\n+\n+    public void setChange(boolean change) {\n+        this.changeable = change;\n+    }\n+\n+    public boolean isChangeable() {\n+        return changeable;\n+    }\n+    \n+    public int getExp() {\n+        return exp;\n+    }\n+\n+    public void setExp(int exp) {\n+        this.exp = exp;\n+    }\n+\n+    public int getHp() {\n+        return hp;\n+    }\n+\n+    public void setHp(int hp) {\n+        this.hp = hp;\n+    }\n+\n+    public int getMp() {\n+        return mp;\n+    }\n+\n+    public void setMp(int mp) {\n+        this.mp = mp;\n+    }\n+\n+    public int getLevel() {\n+        return level;\n+    }\n+\n+    public void setLevel(int level) {\n+        this.level = level;\n+    }\n+\n+    public int removeAfter() {\n+        return removeAfter;\n+    }\n+\n+    public void setRemoveAfter(int removeAfter) {\n+        this.removeAfter = removeAfter;\n+    }\n+\n+    public int getDropPeriod() {\n+        return dropPeriod;\n+    }\n+\n+    public void setDropPeriod(int dropPeriod) {\n+        this.dropPeriod = dropPeriod;\n+    }\n+\n+    public void setBoss(boolean boss) {\n+        this.boss = boss;\n+    }\n+\n+    public boolean isBoss() {\n+        return boss;\n+    }\n+\n+    public void setFfaLoot(boolean ffaLoot) {\n+        this.ffaLoot = ffaLoot;\n+    }\n+\n+    public boolean isFfaLoot() {\n+        return ffaLoot;\n+    }\n+\n+    public void setAnimationTime(String name, int delay) {\n+        animationTimes.put(name, delay);\n+    }\n+\n+    public int getAnimationTime(String name) {\n+        Integer ret = animationTimes.get(name);\n+        if (ret == null) {\n+            return 500;\n+        }\n+        return ret.intValue();\n+    }\n+\n+    public boolean isMobile() {\n+        return animationTimes.containsKey(\"move\") || animationTimes.containsKey(\"fly\");\n+    }\n+\n+    public List<Integer> getRevives() {\n+        return revives;\n+    }\n+\n+    public void setRevives(List<Integer> revives) {\n+        this.revives = revives;\n+    }\n+\n+    public void setUndead(boolean undead) {\n+        this.undead = undead;\n+    }\n+\n+    public boolean getUndead() {\n+        return undead;\n+    }\n+\n+    public void setEffectiveness(Element e, ElementalEffectiveness ee) {\n+        resistance.put(e, ee);\n+    }\n+\n+    public ElementalEffectiveness getEffectiveness(Element e) {\n+        ElementalEffectiveness elementalEffectiveness = resistance.get(e);\n+        if (elementalEffectiveness == null) {\n+            return ElementalEffectiveness.NORMAL;\n+        } else {\n+            return elementalEffectiveness;\n+        }\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public byte getTagColor() {\n+        return tagColor;\n+    }\n+\n+    public void setTagColor(int tagColor) {\n+        this.tagColor = (byte) tagColor;\n+    }\n+\n+    public byte getTagBgColor() {\n+        return tagBgColor;\n+    }\n+\n+    public void setTagBgColor(int tagBgColor) {\n+        this.tagBgColor = (byte) tagBgColor;\n+    }\n+\n+    public void setSkills(List<Pair<Integer, Integer>> skills) {\n+        for (Pair<Integer, Integer> skill : skills) {\n+            this.skills.add(skill);\n+        }\n+    }\n+\n+    public List<Pair<Integer, Integer>> getSkills() {\n+        return Collections.unmodifiableList(this.skills);\n+    }\n+\n+    public int getNoSkills() {\n+        return this.skills.size();\n+    }\n+\n+    public boolean hasSkill(int skillId, int level) {\n+        for (Pair<Integer, Integer> skill : skills) {\n+            if (skill.getLeft() == skillId && skill.getRight() == level) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public void setFirstAttack(boolean firstAttack) {\n+        this.firstAttack = firstAttack;\n+    }\n+\n+    public boolean isFirstAttack() {\n+        return firstAttack;\n+    }\n+\n+    public void setBuffToGive(int buff) {\n+        this.buffToGive = buff;\n+    }\n+\n+    public int getBuffToGive() {\n+        return buffToGive;\n+    }\n+\n+    void removeEffectiveness(Element e) {\n+        resistance.remove(e);\n+    }\n+\n+    public BanishInfo getBanishInfo() {\n+        return banish;\n+    }\n+\n+    public void setBanishInfo(BanishInfo banish) {\n+        this.banish = banish;\n+    }\n+\n+    public int getPADamage() {\n+        return PADamage;\n+    }\n+\n+    public void setPADamage(int PADamage) {\n+        this.PADamage = PADamage;\n+    }\n+\n+    public int getCP() {\n+        return cp;\n+    }\n+\n+    public void setCP(int cp) {\n+        this.cp = cp;\n+    }\n+\n+    public List<loseItem> loseItem() {\n+        return loseItem;\n+    }\n+\n+    public void addLoseItem(loseItem li) {\n+        if (loseItem == null) {\n+            loseItem = new LinkedList<loseItem>();\n+        }\n+        loseItem.add(li);\n+    }\n+\n+    public selfDestruction selfDestruction() {\n+        return selfDestruction;\n+    }\n+\n+    public void setSelfDestruction(selfDestruction sd) {\n+        this.selfDestruction = sd;\n+    }\n+    \n+    public void setExplosiveReward(boolean isExplosiveReward) {\n+        this.isExplosiveReward = isExplosiveReward;\n+    }\n+\n+    public boolean isExplosiveReward() {\n+        return isExplosiveReward;\n+    }\n+\n+    public void setRemoveOnMiss(boolean removeOnMiss) {\n+        this.removeOnMiss = removeOnMiss;\n+    }\n+\n+    public boolean removeOnMiss() {\n+        return removeOnMiss;\n+    }\n+\n+    public void setCool(Pair<Integer, Integer> cool) {\n+        this.cool = cool;\n+    }\n+\n+    public Pair<Integer, Integer> getCool() {\n+        return cool;\n+    }\n+    \n+    public int getPDDamage() {\n+        return PDDamage;\n+    }\n+    \n+    public int getMADamage() {\n+        return MADamage;\n+    }\n+    \n+    public int getMDDamage() {\n+        return MDDamage;\n+    }\n+    \n+    public boolean isFriendly() {\n+        return friendly;\n+    }\n+    \n+    public void setFriendly(boolean value) {\n+        this.friendly = value;\n+    }\n+    \n+    public void setPDDamage(int PDDamage) {\n+        this.PDDamage = PDDamage;\n+    }\n+    \n+    public void setMADamage(int MADamage) {\n+        this.MADamage = MADamage;\n+    }\n+    \n+    public void setMDDamage(int MDDamage) {\n+        this.MDDamage = MDDamage;\n+    } \n+}"}, {"sha": "380db250505ce3f46dd645e90828972b5bfb77d4", "filename": "tools/MapleMesoFetcher/src/maplemesofetcher/MapleMesoFetcher.java", "status": "added", "additions": 200, "deletions": 0, "changes": 200, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/maplemesofetcher/MapleMesoFetcher.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/maplemesofetcher/MapleMesoFetcher.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/maplemesofetcher/MapleMesoFetcher.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,200 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package maplemesofetcher;\n+\n+import life.MapleLifeFactory;\n+import life.MapleMonsterStats;\n+\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+\n+import java.io.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import tools.DatabaseConnection;\n+import tools.Pair;\n+\n+/**\n+ *\n+ * @author RonanLana\n+ * This application traces missing meso drop data on the underlying DB (that must be\n+ * defined on the DatabaseConnection file of this project) and generates a\n+ * SQL file that proposes missing drop entries for the drop_data table.\n+ * \n+ * The meso range is calculated accordingly with the target mob stats, such as level\n+ * and if it's a boss or not, similarly as how it has been done for the actual meso\n+ * drops.\n+ * \n+ */\n+\n+public class MapleMesoFetcher {\n+\n+    /**\n+     * @param args the command line arguments\n+     */\n+    \n+    private static PrintWriter printWriter;\n+    private static String newFile = \"lib/meso_drop_data.sql\";\n+    \n+    private static boolean permitMesosOnDojoBosses = false;\n+    \n+    private static float correctionFactor = 11.0f;\n+    private static int minItems = 4;\n+    \n+    private static int mesoid = 0;\n+    private static int chance = 400000;\n+    \n+    private static Map<Integer, MapleMonsterStats> mobStats;\n+    private static Map<Integer, Pair<Integer, Integer>> mobRange = new HashMap<>();\n+    \n+    private static Pair<Integer, Integer> calcMesoRange90(int level, boolean boss) {\n+        int minRange, maxRange;\n+        \n+        // MIN range\n+        minRange = (int)(72.70814714 * Math.exp(0.02284640619) * level / correctionFactor);\n+        \n+        // MAX range\n+        maxRange = (int)(133.8194881 * Math.exp(0.02059225059) * level / correctionFactor);\n+        \n+        // boss perks\n+        if(boss) {\n+            minRange *= 3;\n+            maxRange *= 10;\n+        }\n+        \n+        return new Pair<>(minRange, maxRange);\n+    }\n+    \n+    private static Pair<Integer, Integer> calcMesoRange(int level, boolean boss) {\n+        int minRange, maxRange;\n+        \n+        // MIN range\n+        minRange = (int)(30.32032228 * Math.exp(0.0328114493) * level / correctionFactor);\n+        \n+        // MAX range\n+        maxRange = (int)(44.45878459 * Math.exp(0.03289611686) * level / correctionFactor);\n+        \n+        // boss perks\n+        if(boss) {\n+            minRange *= 3;\n+            maxRange *= 10;\n+        }\n+        \n+        return new Pair<>(minRange, maxRange);\n+    }\n+    \n+    private static void calcAllMobsMesoRange() {\n+        System.out.print(\"Calculating range... \");\n+        \n+        for(Entry<Integer, MapleMonsterStats> mobStat : mobStats.entrySet()) {\n+            MapleMonsterStats mms = mobStat.getValue();\n+            Pair<Integer, Integer> mesoRange;\n+            \n+            if(mms.getLevel() < 90) {\n+                mesoRange = calcMesoRange(mms.getLevel(), mms.isBoss());\n+            } else {\n+                mesoRange = calcMesoRange90(mms.getLevel(), mms.isBoss());\n+            }\n+            \n+            mobRange.put(mobStat.getKey(), mesoRange);\n+        }\n+        \n+        System.out.println(\"done!\");\n+    }\n+    \n+    private static void printSqlHeader() {\n+        printWriter.println(\" # SQL File autogenerated from the MapleMesoFetcher feature by Ronan Lana.\");\n+        printWriter.println(\" # Generated data takes into account mob stats such as level and boss for the meso ranges.\");\n+        printWriter.println(\" # Only mobs with \" + minItems + \" or more items with no meso entry on the DB it was compiled are presented here.\");\n+        printWriter.println();\n+        \n+        printWriter.println(\"  INSERT IGNORE INTO drop_data (`dropperid`, `itemid`, `minimum_quantity`, `maximum_quantity`, `questid`, `chance`) VALUES\");\n+    }\n+    \n+    private static void printSqlExceptions() {\n+        if(!permitMesosOnDojoBosses) {\n+            printWriter.println(\"\\r\\n  DELETE FROM drop_data WHERE dropperid >= 9300184 AND dropperid <= 9300215 AND itemid = \" + mesoid + \";\");\n+        }\n+    }\n+    \n+    private static void printSqlMobMesoRange(int mobid) {\n+        Pair<Integer, Integer> mobmeso = mobRange.get(mobid);\n+        printWriter.println(\"(\" + mobid + \", \" + mesoid + \", \" + mobmeso.left + \", \" + mobmeso.right + \", 0, \" + chance + \"),\");\n+    }\n+    \n+    private static void printSqlMobMesoRangeFinal(int mobid) {\n+        Pair<Integer, Integer> mobmeso = mobRange.get(mobid);\n+        printWriter.println(\"(\" + mobid + \", \" + mesoid + \", \" + mobmeso.left + \", \" + mobmeso.right + \", 0, \" + chance + \");\");\n+    }\n+    \n+    private static void generateMissingMobsMesoRange() {\n+        System.out.print(\"Generating missing ranges... \");\n+        Connection con = DatabaseConnection.getConnection();\n+        List<Integer> existingMobs = new ArrayList<>(200);\n+        \n+        try {\n+            // select all mobs which doesn't drop mesos and have a fair amount of items dropping (meaning they are not an event mob)\n+            PreparedStatement ps = con.prepareStatement(\"SELECT dropperid FROM drop_data WHERE dropperid NOT IN (SELECT DISTINCT dropperid FROM drop_data WHERE itemid = 0) GROUP BY dropperid HAVING count(*) >= \" + minItems + \";\");\n+            ResultSet rs = ps.executeQuery();\n+            \n+            if (rs.isBeforeFirst()) {\n+                while(rs.next()) {\n+                    int mobid = rs.getInt(1);\n+                    \n+                    if(mobRange.containsKey(mobid)) {\n+                        existingMobs.add(mobid);\n+                    }\n+                }\n+                \n+                if(!existingMobs.isEmpty()) {\n+                    printWriter = new PrintWriter(newFile, \"UTF-8\");\n+                    printSqlHeader();\n+                \n+                    for(int i = 0; i < existingMobs.size() - 1; i++)\n+                        printSqlMobMesoRange(existingMobs.get(i));\n+                    \n+                    printSqlMobMesoRangeFinal(existingMobs.get(existingMobs.size() - 1));\n+                    \n+                    printSqlExceptions();\n+                    \n+                    printWriter.close();\n+                } else {\n+                    throw new Exception(\"ALREADY UPDATED\");\n+                }\n+                \n+            } else {\n+                throw new Exception(\"ALREADY UPDATED\");\n+            }\n+            \n+            rs.close();\n+            ps.close();\n+            con.close();\n+            \n+            System.out.println(\"done!\");\n+            \n+        } catch(Exception e) {\n+            if(e.getMessage() != null && e.getMessage().equals(\"ALREADY UPDATED\")) {\n+                System.out.println(\"done! The DB is already up-to-date, no file generated.\");\n+            } else {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+    \n+    public static void main(String[] args) {\n+        // load mob stats from WZ\n+        mobStats = MapleLifeFactory.getAllMonsterStats();\n+        \n+        calcAllMobsMesoRange();\n+        generateMissingMobsMesoRange();\n+    }\n+    \n+}"}, {"sha": "10ab68219636d6faf90029f5bd485ff3a6648c56", "filename": "tools/MapleMesoFetcher/src/provider/MapleCanvas.java", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleCanvas.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleCanvas.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/MapleCanvas.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,30 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.awt.image.BufferedImage;\n+\n+public interface MapleCanvas {\n+    int getHeight();\n+    int getWidth();\n+    BufferedImage getImage();\n+}"}, {"sha": "4d90a9380442c23c911757c8e49cebc2141cf869", "filename": "tools/MapleMesoFetcher/src/provider/MapleData.java", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleData.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleData.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/MapleData.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,34 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.util.List;\n+import provider.wz.MapleDataType;\n+\n+public interface MapleData extends MapleDataEntity, Iterable<MapleData> {\n+    @Override\n+    public String getName();\n+    public MapleDataType getType();\n+    public List<MapleData> getChildren();\n+    public MapleData getChildByPath(String path);\n+    public Object getData();\n+}"}, {"sha": "cb043e0c945ea92f8e3aaa122e5b00a63c9588c5", "filename": "tools/MapleMesoFetcher/src/provider/MapleDataDirectoryEntry.java", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataDirectoryEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataDirectoryEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/MapleDataDirectoryEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,34 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.util.List;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataDirectoryEntry extends MapleDataEntry {\n+    public List<MapleDataDirectoryEntry> getSubdirectories();\n+    public List<MapleDataFileEntry> getFiles();\n+    public MapleDataEntry getEntry(String name);\n+}"}, {"sha": "03ff77649c8e5acc43bd9dc417bd6a5a5bde9f45", "filename": "tools/MapleMesoFetcher/src/provider/MapleDataEntity.java", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataEntity.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataEntity.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/MapleDataEntity.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,31 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataEntity {\n+    public String getName();\n+    public MapleDataEntity getParent();\n+}"}, {"sha": "62db6d0abeac3165aaa502d4098c15ce9598acab", "filename": "tools/MapleMesoFetcher/src/provider/MapleDataEntry.java", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/MapleDataEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,33 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataEntry extends MapleDataEntity {\n+    public String getName();\n+    public int getSize();\n+    public int getChecksum();\n+    public int getOffset();\n+}"}, {"sha": "902130a612aeb60746ac4fd119b4f88376947472", "filename": "tools/MapleMesoFetcher/src/provider/MapleDataFileEntry.java", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataFileEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataFileEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/MapleDataFileEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,30 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+/**\n+ *\n+ * @author Matze\n+ */\n+public interface MapleDataFileEntry extends MapleDataEntry {\n+    public void setOffset(int offset);\n+}"}, {"sha": "5237b7ac37e4655b807bc6d47ad4bd10a360cc49", "filename": "tools/MapleMesoFetcher/src/provider/MapleDataProvider.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/MapleDataProvider.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,27 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+public interface MapleDataProvider {\n+    MapleData getData(String path);\n+    MapleDataDirectoryEntry getRoot();\n+}"}, {"sha": "14753d440683c1c13e8012d993cfbb85b3b76e8b", "filename": "tools/MapleMesoFetcher/src/provider/MapleDataProviderFactory.java", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataProviderFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataProviderFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/MapleDataProviderFactory.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,55 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import provider.wz.WZFile;\n+import provider.wz.XMLWZFile;\n+\n+public class MapleDataProviderFactory {\n+    private final static String wzPath = System.getProperty(\"wzpath\");\n+\n+    private static MapleDataProvider getWZ(File in, boolean provideImages) {\n+        if (in.getName().toLowerCase().endsWith(\"wz\") && !in.isDirectory()) {\n+            try {\n+                return new WZFile(in, provideImages);\n+            } catch (IOException e) {\n+                throw new RuntimeException(\"Loading WZ File failed\", e);\n+            }\n+        } else {\n+            return new XMLWZFile(in);\n+        }\n+    }\n+\n+    public static MapleDataProvider getDataProvider(File in) {\n+        return getWZ(in, false);\n+    }\n+\n+    public static MapleDataProvider getImageProvidingDataProvider(File in) {\n+        return getWZ(in, true);\n+    }\n+\n+    public static File fileInWZPath(String filename) {\n+        return new File(wzPath, filename);\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "25f4c7f81749a8145359d27437f2d7075c5786c3", "filename": "tools/MapleMesoFetcher/src/provider/MapleDataTool.java", "status": "added", "additions": 145, "deletions": 0, "changes": 145, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataTool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/MapleDataTool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/MapleDataTool.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,145 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider;\n+\n+import java.awt.Point;\n+import java.awt.image.BufferedImage;\n+import provider.wz.MapleDataType;\n+\n+public class MapleDataTool {\n+    public static String getString(MapleData data) {\n+        return ((String) data.getData());\n+    }\n+\n+    public static String getString(MapleData data, String def) {\n+        if (data == null || data.getData() == null) {\n+            return def;\n+        } else {\n+            return ((String) data.getData());\n+        }\n+    }\n+\n+    public static String getString(String path, MapleData data) {\n+        return getString(data.getChildByPath(path));\n+    }\n+\n+    public static String getString(String path, MapleData data, String def) {\n+        return getString(data.getChildByPath(path), def);\n+    }\n+\n+    public static double getDouble(MapleData data) {\n+        return ((Double) data.getData()).doubleValue();\n+    }\n+\n+    public static float getFloat(MapleData data) {\n+        return ((Float) data.getData()).floatValue();\n+    }\n+\n+    public static int getInt(MapleData data) {\n+        if (data == null || data.getData() == null) {\n+            return 0;// DEF?\n+        }\n+        return ((Integer) data.getData()).intValue();\n+    }\n+\n+    public static int getInt(String path, MapleData data) {\n+        return getInt(data.getChildByPath(path));\n+    }\n+\n+    public static int getIntConvert(MapleData data) {\n+        if (data.getType() == MapleDataType.STRING) {\n+            return Integer.parseInt(getString(data));\n+        } else {\n+            return getInt(data);\n+        }\n+    }\n+\n+    public static int getIntConvert(String path, MapleData data) {\n+        MapleData d = data.getChildByPath(path);\n+        if (d.getType() == MapleDataType.STRING) {\n+            return Integer.parseInt(getString(d));\n+        } else {\n+            return getInt(d);\n+        }\n+    }\n+\n+    public static int getInt(MapleData data, int def) {\n+        if (data == null || data.getData() == null) {\n+            return  def;\n+        } else if (data.getType() == MapleDataType.STRING) {\n+            return Integer.parseInt(getString(data));\n+        } else {\n+            return ((Integer) data.getData()).intValue();\n+        }\n+    }\n+\n+    public static int getInt(String path, MapleData data, int def) {\n+        return getInt(data.getChildByPath(path), def);\n+    }\n+\n+    public static int getIntConvert(String path, MapleData data, int def) {\n+        MapleData d = data.getChildByPath(path);\n+        if (d == null) {\n+            return def;\n+        }\n+        if (d.getType() == MapleDataType.STRING) {\n+            try {\n+                return Integer.parseInt(getString(d));\n+            } catch (NumberFormatException nfe) {\n+                nfe.printStackTrace();\n+                return def;\n+            }\n+        } else {\n+            return getInt(d, def);\n+        }\n+    }\n+\n+    public static BufferedImage getImage(MapleData data) {\n+        return ((MapleCanvas) data.getData()).getImage();\n+    }\n+\n+    public static Point getPoint(MapleData data) {\n+        return ((Point) data.getData());\n+    }\n+\n+    public static Point getPoint(String path, MapleData data) {\n+        return getPoint(data.getChildByPath(path));\n+    }\n+\n+    public static Point getPoint(String path, MapleData data, Point def) {\n+        final MapleData pointData = data.getChildByPath(path);\n+        if (pointData == null) {\n+            return def;\n+        }\n+        return getPoint(pointData);\n+    }\n+\n+    public static String getFullDataPath(MapleData data) {\n+        String path = \"\";\n+        MapleDataEntity myData = data;\n+        while (myData != null) {\n+            path = myData.getName() + \"/\" + path;\n+            myData = myData.getParent();\n+        }\n+        return path.substring(0, path.length() - 1);\n+    }\n+}"}, {"sha": "21736c2c162063c141117bff66deb9f830b4bc06", "filename": "tools/MapleMesoFetcher/src/provider/wz/FileStoredPngMapleCanvas.java", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/FileStoredPngMapleCanvas.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/FileStoredPngMapleCanvas.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/FileStoredPngMapleCanvas.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,70 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n+import provider.MapleCanvas;\n+\n+public class FileStoredPngMapleCanvas implements MapleCanvas {\n+    private File file;\n+    private int width;\n+    private int height;\n+    private BufferedImage image;\n+\n+    public FileStoredPngMapleCanvas(int width, int height, File fileIn) {\n+        this.width = width;\n+        this.height = height;\n+        this.file = fileIn;\n+    }\n+\n+    @Override\n+    public int getHeight() {\n+        return height;\n+    }\n+\n+    @Override\n+    public int getWidth() {\n+        return width;\n+    }\n+\n+    @Override\n+    public BufferedImage getImage() {\n+        loadImageIfNecessary();\n+        return image;\n+    }\n+\n+    private void loadImageIfNecessary() {\n+        if (image == null) {\n+            try {\n+                image = ImageIO.read(file);\n+                // replace the dimensions loaded from the wz by the REAL dimensions from the image - should be equal tho\n+                width = image.getWidth();\n+                height = image.getHeight();\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+    }\n+}"}, {"sha": "8add2ccb36fcfa8f1a683da0562601e9f2c0afda", "filename": "tools/MapleMesoFetcher/src/provider/wz/ImgMapleSound.java", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/ImgMapleSound.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/ImgMapleSound.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/ImgMapleSound.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,39 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+public class ImgMapleSound {\n+    private int dataLength, offset;\n+\n+    public ImgMapleSound(int dataLength, int offset) {\n+        this.dataLength = dataLength;\n+        this.offset = offset;\n+    }\n+\n+    public int getDataLength() {\n+        return dataLength;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+}"}, {"sha": "1672a08c598cb21a441ea89664de97fdb9b9c90b", "filename": "tools/MapleMesoFetcher/src/provider/wz/ListWZFile.java", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/ListWZFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/ListWZFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/ListWZFile.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,86 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import provider.MapleDataProviderFactory;\n+import tools.data.input.GenericLittleEndianAccessor;\n+import tools.data.input.InputStreamByteStream;\n+import tools.data.input.LittleEndianAccessor;\n+\n+public class ListWZFile {\n+    private LittleEndianAccessor lea;\n+    private List<String> entries = new ArrayList<String>();\n+    private static Collection<String> modernImgs = new HashSet<String>();\n+\n+    public static byte[] xorBytes(byte[] a, byte[] b) {\n+        byte[] wusched = new byte[a.length];\n+        for (int i = 0; i < a.length; i++) {\n+            wusched[i] = (byte) (a[i] ^ b[i]);\n+        }\n+        return wusched;\n+    }\n+\n+    public ListWZFile(File listwz) throws FileNotFoundException {\n+        lea = new GenericLittleEndianAccessor(new InputStreamByteStream(new BufferedInputStream(new FileInputStream(listwz))));\n+        while (lea.available() > 0) {\n+            int l = lea.readInt() * 2;\n+            byte[] chunk = new byte[l];\n+            for (int i = 0; i < chunk.length; i++) {\n+                chunk[i] = lea.readByte();\n+            }\n+            lea.readChar();\n+            final String value = String.valueOf(WZTool.readListString(chunk));\n+            entries.add(value);\n+        }\n+        entries = Collections.unmodifiableList(entries);\n+    }\n+\n+    public List<String> getEntries() {\n+        return entries;\n+    }\n+\n+    public static void init() {\n+        final String listWz = System.getProperty(\"listwz\");\n+        if (listWz != null) {\n+            ListWZFile listwz;\n+            try {\n+                listwz = new ListWZFile(MapleDataProviderFactory.fileInWZPath(\"List.wz\"));\n+                modernImgs = new HashSet<String>(listwz.getEntries());\n+            } catch (FileNotFoundException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    public static boolean isModernImgFile(String path) {\n+        return modernImgs.contains(path);\n+    }\n+}"}, {"sha": "e074d57d14a16e7ccc38449c8f9b10d9176215eb", "filename": "tools/MapleMesoFetcher/src/provider/wz/MapleDataType.java", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/MapleDataType.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/MapleDataType.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/MapleDataType.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,26 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+public enum MapleDataType {\n+    NONE, IMG_0x00, SHORT, INT, FLOAT, DOUBLE, STRING, EXTENDED, PROPERTY, CANVAS, VECTOR, CONVEX, SOUND, UOL, UNKNOWN_TYPE, UNKNOWN_EXTENDED_TYPE;\n+}\n\\ No newline at end of file"}, {"sha": "97c2303804d63dbbfc36bb745fb675fff26b61a3", "filename": "tools/MapleMesoFetcher/src/provider/wz/PNGMapleCanvas.java", "status": "added", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/PNGMapleCanvas.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/PNGMapleCanvas.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/PNGMapleCanvas.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,151 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.awt.Point;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.DataBuffer;\n+import java.awt.image.DataBufferByte;\n+import java.awt.image.PixelInterleavedSampleModel;\n+import java.awt.image.Raster;\n+import java.awt.image.SampleModel;\n+import java.awt.image.WritableRaster;\n+import java.util.zip.DataFormatException;\n+import java.util.zip.Inflater;\n+import provider.MapleCanvas;\n+\n+public class PNGMapleCanvas implements MapleCanvas {\n+    private static final int[] ZAHLEN = new int[]{2, 1, 0, 3};\n+    private int height;\n+    private int width;\n+    private int dataLength;\n+    private int format;\n+    private byte[] data;\n+\n+    public PNGMapleCanvas(int width, int height, int dataLength, int format, byte[] data) {\n+        super();\n+        this.height = height;\n+        this.width = width;\n+        this.dataLength = dataLength;\n+        this.format = format;\n+        this.data = data;\n+    }\n+\n+    public int getHeight() {\n+        return height;\n+    }\n+\n+    public int getWidth() {\n+        return width;\n+    }\n+\n+    public int getFormat() {\n+        return format;\n+    }\n+\n+    private byte[] getData() {\n+        return data;\n+    }\n+\n+    @Override\n+    public BufferedImage getImage() {\n+        int sizeUncompressed = 0;\n+        int size8888 = 0;\n+        int maxWriteBuf = 2;\n+        int maxHeight = 3;\n+        byte[] writeBuf = new byte[maxWriteBuf];\n+        @SuppressWarnings (\"unused\")\n+        byte[] rowPointers = new byte[maxHeight];\n+        switch (getFormat()) {\n+            case 1:\n+            case 513:\n+                sizeUncompressed = getHeight() * getWidth() * 4;\n+                break;\n+            case 2:\n+                sizeUncompressed = getHeight() * getWidth() * 8;\n+                break;\n+            case 517:\n+                sizeUncompressed = getHeight() * getWidth() / 128;\n+                break;\n+        }\n+        size8888 = getHeight() * getWidth() * 8;\n+        if (size8888 > maxWriteBuf) {\n+            maxWriteBuf = size8888;\n+            writeBuf = new byte[maxWriteBuf];\n+        }\n+        if (getHeight() > maxHeight) {\n+            maxHeight = getHeight();\n+            rowPointers = new byte[maxHeight];\n+        }\n+        Inflater dec = new Inflater();\n+        dec.setInput(getData(), 0, dataLength);\n+        int declen = 0;\n+        byte[] uc = new byte[sizeUncompressed];\n+        try {\n+            declen = dec.inflate(uc);\n+        } catch (DataFormatException ex) {\n+            throw new RuntimeException(\"zlib fucks\", ex);\n+        }\n+        dec.end();\n+        if (getFormat() == 1) {\n+            for (int i = 0; i < sizeUncompressed; i++) {\n+                byte low = (byte) (uc[i] & 0x0F);\n+                byte high = (byte) (uc[i] & 0xF0);\n+                writeBuf[(i << 1)] = (byte) (((low << 4) | low) & 0xFF);\n+                writeBuf[(i << 1) + 1] = (byte) (high | ((high >>> 4) & 0xF));\n+            }\n+        } else if (getFormat() == 2) {\n+            writeBuf = uc;\n+        } else if (getFormat() == 513) {\n+            for (int i = 0; i < declen; i += 2) {\n+                byte bBits = (byte) ((uc[i] & 0x1F) << 3);\n+                byte gBits = (byte) (((uc[i + 1] & 0x07) << 5) | ((uc[i] & 0xE0) >> 3));\n+                byte rBits = (byte) (uc[i + 1] & 0xF8);\n+                writeBuf[(i << 1)] = (byte) (bBits | (bBits >> 5));\n+                writeBuf[(i << 1) + 1] = (byte) (gBits | (gBits >> 6));\n+                writeBuf[(i << 1) + 2] = (byte) (rBits | (rBits >> 5));\n+                writeBuf[(i << 1) + 3] = (byte) 0xFF;\n+            }\n+        } else if (getFormat() == 517) {\n+            byte b = 0x00;\n+            int pixelIndex = 0;\n+            for (int i = 0; i < declen; i++) {\n+                for (int j = 0; j < 8; j++) {\n+                    b = (byte) (((uc[i] & (0x01 << (7 - j))) >> (7 - j)) * 255);\n+                    for (int k = 0; k < 16; k++) {\n+                        pixelIndex = (i << 9) + (j << 6) + k * 2;\n+                        writeBuf[pixelIndex] = b;\n+                        writeBuf[pixelIndex + 1] = b;\n+                        writeBuf[pixelIndex + 2] = b;\n+                        writeBuf[pixelIndex + 3] = (byte) 0xFF;\n+                    }\n+                }\n+            }\n+        }\n+        DataBufferByte imgData = new DataBufferByte(writeBuf, sizeUncompressed);\n+        SampleModel sm = new PixelInterleavedSampleModel(DataBuffer.TYPE_BYTE, getWidth(), getHeight(), 4, getWidth() * 4, ZAHLEN);\n+        WritableRaster imgRaster = Raster.createWritableRaster(sm, imgData, new Point(0, 0));\n+        BufferedImage aa = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_ARGB);\n+        aa.setData(imgRaster);\n+        return aa;\n+    }\n+}"}, {"sha": "d24b8cb2b992c82b360366af581c08599323781e", "filename": "tools/MapleMesoFetcher/src/provider/wz/WZDirectoryEntry.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZDirectoryEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZDirectoryEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/WZDirectoryEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,68 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataEntity;\n+import provider.MapleDataEntry;\n+import provider.MapleDataFileEntry;\n+\n+public class WZDirectoryEntry extends WZEntry implements MapleDataDirectoryEntry {\n+    private List<MapleDataDirectoryEntry> subdirs = new ArrayList<MapleDataDirectoryEntry>();\n+    private List<MapleDataFileEntry> files = new ArrayList<MapleDataFileEntry>();\n+    private Map<String, MapleDataEntry> entries = new HashMap<String, MapleDataEntry>();\n+\n+    public WZDirectoryEntry(String name, int size, int checksum, MapleDataEntity parent) {\n+        super(name, size, checksum, parent);\n+    }\n+\n+    public WZDirectoryEntry() {\n+        super(null, 0, 0, null);\n+    }\n+\n+    public void addDirectory(MapleDataDirectoryEntry dir) {\n+        subdirs.add(dir);\n+        entries.put(dir.getName(), dir);\n+    }\n+\n+    public void addFile(MapleDataFileEntry fileEntry) {\n+        files.add(fileEntry);\n+        entries.put(fileEntry.getName(), fileEntry);\n+    }\n+\n+    public List<MapleDataDirectoryEntry> getSubdirectories() {\n+        return Collections.unmodifiableList(subdirs);\n+    }\n+\n+    public List<MapleDataFileEntry> getFiles() {\n+        return Collections.unmodifiableList(files);\n+    }\n+\n+    public MapleDataEntry getEntry(String name) {\n+        return entries.get(name);\n+    }\n+}"}, {"sha": "1e921b208220663ddd15966a89f32f5cfbb4a8a2", "filename": "tools/MapleMesoFetcher/src/provider/wz/WZEntry.java", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/WZEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,61 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import provider.MapleDataEntity;\n+import provider.MapleDataEntry;\n+\n+public class WZEntry implements MapleDataEntry {\n+    private String name;\n+    private int size;\n+    private int checksum;\n+    private int offset;\n+    private MapleDataEntity parent;\n+\n+    public WZEntry(String name, int size, int checksum, MapleDataEntity parent) {\n+        super();\n+        this.name = name;\n+        this.size = size;\n+        this.checksum = checksum;\n+        this.parent = parent;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public int getSize() {\n+        return size;\n+    }\n+\n+    public int getChecksum() {\n+        return checksum;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public MapleDataEntity getParent() {\n+        return parent;\n+    }\n+}"}, {"sha": "c6c0abf5377cf42dbf23295649d0b321fb497913", "filename": "tools/MapleMesoFetcher/src/provider/wz/WZFile.java", "status": "added", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/WZFile.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,154 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+import provider.MapleData;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataFileEntry;\n+import provider.MapleDataProvider;\n+import tools.data.input.GenericLittleEndianAccessor;\n+import tools.data.input.GenericSeekableLittleEndianAccessor;\n+import tools.data.input.InputStreamByteStream;\n+import tools.data.input.LittleEndianAccessor;\n+import tools.data.input.RandomAccessByteStream;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+public class WZFile implements MapleDataProvider {\n+    static {\n+        ListWZFile.init();\n+    }\n+    private File wzfile;\n+    private LittleEndianAccessor lea;\n+    private SeekableLittleEndianAccessor slea;\n+    private int headerSize;\n+    private WZDirectoryEntry root;\n+    private boolean provideImages;\n+    private int cOffset;\n+\n+    public WZFile(File wzfile, boolean provideImages) throws IOException {\n+        this.wzfile = wzfile;\n+        lea = new GenericLittleEndianAccessor(new InputStreamByteStream(new BufferedInputStream(new FileInputStream(wzfile))));\n+        RandomAccessFile raf = new RandomAccessFile(wzfile, \"r\");\n+        slea = new GenericSeekableLittleEndianAccessor(new RandomAccessByteStream(raf));\n+        root = new WZDirectoryEntry(wzfile.getName(), 0, 0, null);\n+        this.provideImages = provideImages;\n+        load();\n+    }\n+\n+    private void load() throws IOException {\n+        lea.readAsciiString(4);\n+        lea.readInt();\n+        lea.readInt();\n+        headerSize = lea.readInt();\n+        lea.readNullTerminatedAsciiString();\n+        lea.readShort();\n+        parseDirectory(root);\n+        cOffset = (int) lea.getBytesRead();\n+        getOffsets(root);\n+    }\n+\n+    private void getOffsets(MapleDataDirectoryEntry dir) {\n+        for (MapleDataFileEntry file : dir.getFiles()) {\n+            file.setOffset(cOffset);\n+            cOffset += file.getSize();\n+        }\n+        for (MapleDataDirectoryEntry sdir : dir.getSubdirectories()) {\n+            getOffsets(sdir);\n+        }\n+    }\n+\n+    private void parseDirectory(WZDirectoryEntry dir) {\n+        int entries = WZTool.readValue(lea);\n+        for (int i = 0; i < entries; i++) {\n+            byte marker = lea.readByte();\n+            String name = null;\n+            int size, checksum;\n+            switch (marker) {\n+                case 0x02:\n+                    name = WZTool.readDecodedStringAtOffsetAndReset(slea, lea.readInt() + this.headerSize + 1);\n+                    size = WZTool.readValue(lea);\n+                    checksum = WZTool.readValue(lea);\n+                    lea.readInt(); //dummy int\n+                    dir.addFile(new WZFileEntry(name, size, checksum, dir));\n+                    break;\n+                case 0x03:\n+                case 0x04:\n+                    name = WZTool.readDecodedString(lea);\n+                    size = WZTool.readValue(lea);\n+                    checksum = WZTool.readValue(lea);\n+                    lea.readInt(); //dummy int\n+                    if (marker == 3) {\n+                        dir.addDirectory(new WZDirectoryEntry(name, size, checksum, dir));\n+                    } else {\n+                        dir.addFile(new WZFileEntry(name, size, checksum, dir));\n+                    }\n+                    break;\n+                default:\n+            }\n+        }\n+        for (MapleDataDirectoryEntry idir : dir.getSubdirectories()) {\n+            parseDirectory((WZDirectoryEntry) idir);\n+        }\n+    }\n+\n+    public WZIMGFile getImgFile(String path) throws IOException {\n+        String segments[] = path.split(\"/\");\n+        WZDirectoryEntry dir = root;\n+        for (int x = 0; x < segments.length - 1; x++) {\n+            dir = (WZDirectoryEntry) dir.getEntry(segments[x]);\n+            if (dir == null) {\n+                return null;\n+            }\n+        }\n+        WZFileEntry entry = (WZFileEntry) dir.getEntry(segments[segments.length - 1]);\n+        if (entry == null) {\n+            return null;\n+        }\n+        String fullPath = wzfile.getName().substring(0, wzfile.getName().length() - 3).toLowerCase() + \"/\" + path;\n+        return new WZIMGFile(this.wzfile, entry, provideImages, ListWZFile.isModernImgFile(fullPath));\n+    }\n+\n+    @Override\n+    public synchronized MapleData getData(String path) {\n+        try {\n+            WZIMGFile imgFile = getImgFile(path);\n+            if (imgFile == null) {\n+                return null;\n+            }\n+            MapleData ret = imgFile.getRoot();\n+            return ret;\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public MapleDataDirectoryEntry getRoot() {\n+        return root;\n+    }\n+}"}, {"sha": "792371d9cf3ef340e9c895ec2143cf2918a92952", "filename": "tools/MapleMesoFetcher/src/provider/wz/WZFileEntry.java", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZFileEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZFileEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/WZFileEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,42 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import provider.MapleDataEntity;\n+import provider.MapleDataFileEntry;\n+\n+public class WZFileEntry extends WZEntry implements MapleDataFileEntry {\n+    private int offset;\n+\n+    public WZFileEntry(String name, int size, int checksum, MapleDataEntity parent) {\n+        super(name, size, checksum, parent);\n+    }\n+\n+    @Override\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public void setOffset(int offset) {\n+        this.offset = offset;\n+    }\n+}"}, {"sha": "385d78518357407cf131b0197f29c175b9815c9c", "filename": "tools/MapleMesoFetcher/src/provider/wz/WZIMGEntry.java", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZIMGEntry.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZIMGEntry.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/WZIMGEntry.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,118 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import provider.MapleData;\n+import provider.MapleDataEntity;\n+\n+public class WZIMGEntry implements MapleData {\n+    private String name;\n+    private MapleDataType type;\n+    private List<MapleData> children = new ArrayList<MapleData>(10);\n+    private Object data;\n+    private MapleDataEntity parent;\n+\n+    public WZIMGEntry(MapleDataEntity parent) {\n+        this.parent = parent;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public MapleDataType getType() {\n+        return type;\n+    }\n+\n+    @Override\n+    public List<MapleData> getChildren() {\n+        return Collections.unmodifiableList(children);\n+    }\n+\n+    @Override\n+    public MapleData getChildByPath(String path) {\n+        String segments[] = path.split(\"/\");\n+        if (segments[0].equals(\"..\")) {\n+            return ((MapleData) getParent()).getChildByPath(path.substring(path.indexOf(\"/\") + 1));\n+        }\n+        MapleData ret = this;\n+        for (int x = 0; x < segments.length; x++) {\n+            boolean foundChild = false;\n+            for (MapleData child : ret.getChildren()) {\n+                if (child.getName().equals(segments[x])) {\n+                    ret = child;\n+                    foundChild = true;\n+                    break;\n+                }\n+            }\n+            if (!foundChild) {\n+                return null;\n+            }\n+        }\n+        return ret;\n+    }\n+\n+    @Override\n+    public Object getData() {\n+        return data;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public void setType(MapleDataType type) {\n+        this.type = type;\n+    }\n+\n+    public void setData(Object data) {\n+        this.data = data;\n+    }\n+\n+    public void addChild(WZIMGEntry entry) {\n+        children.add(entry);\n+    }\n+\n+    @Override\n+    public Iterator<MapleData> iterator() {\n+        return getChildren().iterator();\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return getName() + \":\" + getData();\n+    }\n+\n+    public MapleDataEntity getParent() {\n+        return parent;\n+    }\n+\n+    public void finish() {\n+        ((ArrayList<MapleData>) children).trimToSize();\n+    }\n+}"}, {"sha": "bec06c78bdf9568da3ea9819f896e22bbc7f7c44", "filename": "tools/MapleMesoFetcher/src/provider/wz/WZIMGFile.java", "status": "added", "additions": 227, "deletions": 0, "changes": 227, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZIMGFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZIMGFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/WZIMGFile.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,227 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.awt.Point;\n+import java.io.DataOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.io.RandomAccessFile;\n+import tools.data.input.GenericSeekableLittleEndianAccessor;\n+import tools.data.input.RandomAccessByteStream;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+public class WZIMGFile {\n+    private WZFileEntry file;\n+    private WZIMGEntry root;\n+    private boolean provideImages;\n+    @SuppressWarnings (\"unused\")\n+    private boolean modernImg;\n+\n+    public WZIMGFile(File wzfile, WZFileEntry file, boolean provideImages, boolean modernImg) throws IOException {\n+        RandomAccessFile raf = new RandomAccessFile(wzfile, \"r\");\n+        SeekableLittleEndianAccessor slea = new GenericSeekableLittleEndianAccessor(new RandomAccessByteStream(raf));\n+        slea.seek(file.getOffset());\n+        this.file = file;\n+        this.provideImages = provideImages;\n+        root = new WZIMGEntry(file.getParent());\n+        root.setName(file.getName());\n+        root.setType(MapleDataType.EXTENDED);\n+        this.modernImg = modernImg;\n+        parseExtended(root, slea, 0);\n+        root.finish();\n+        raf.close();\n+    }\n+\n+    protected void dumpImg(OutputStream out, SeekableLittleEndianAccessor slea) throws IOException {\n+        DataOutputStream os = new DataOutputStream(out);\n+        long oldPos = slea.getPosition();\n+        slea.seek(file.getOffset());\n+        for (int x = 0; x < file.getSize(); x++) {\n+            os.write(slea.readByte());\n+        }\n+        slea.seek(oldPos);\n+    }\n+\n+    public WZIMGEntry getRoot() {\n+        return root;\n+    }\n+\n+    private void parse(WZIMGEntry entry, SeekableLittleEndianAccessor slea) {\n+        byte marker = slea.readByte();\n+        switch (marker) {\n+            case 0: {\n+                String name = WZTool.readDecodedString(slea);\n+                entry.setName(name);\n+                break;\n+            }\n+            case 1: {\n+                String name = WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt());\n+                entry.setName(name);\n+                break;\n+            }\n+            default:\n+                System.out.println(\"Unknown Image identifier: \" + marker + \" at offset \" + (slea.getPosition() - file.getOffset()));\n+        }\n+        marker = slea.readByte();\n+        switch (marker) {\n+            case 0:\n+                entry.setType(MapleDataType.IMG_0x00);\n+                break;\n+            case 2:\n+            case 11: //??? no idea, since 0.49\n+                entry.setType(MapleDataType.SHORT);\n+                entry.setData(Short.valueOf(slea.readShort()));\n+                break;\n+            case 3:\n+                entry.setType(MapleDataType.INT);\n+                entry.setData(Integer.valueOf(WZTool.readValue(slea)));\n+                break;\n+            case 4:\n+                entry.setType(MapleDataType.FLOAT);\n+                entry.setData(Float.valueOf(WZTool.readFloatValue(slea)));\n+                break;\n+            case 5:\n+                entry.setType(MapleDataType.DOUBLE);\n+                entry.setData(Double.valueOf(slea.readDouble()));\n+                break;\n+            case 8:\n+                entry.setType(MapleDataType.STRING);\n+                byte iMarker = slea.readByte();\n+                if (iMarker == 0) {\n+                    entry.setData(WZTool.readDecodedString(slea));\n+                } else if (iMarker == 1) {\n+                    entry.setData(WZTool.readDecodedStringAtOffsetAndReset(slea, slea.readInt() + file.getOffset()));\n+                } else {\n+                    System.out.println(\"Unknown String type \" + iMarker);\n+                }\n+                break;\n+            case 9:\n+                entry.setType(MapleDataType.EXTENDED);\n+                long endOfExtendedBlock = slea.readInt();\n+                endOfExtendedBlock += slea.getPosition();\n+                parseExtended(entry, slea, endOfExtendedBlock);\n+                break;\n+            default:\n+                System.out.println(\"Unknown Image type \" + marker);\n+        }\n+    }\n+\n+    private void parseExtended(WZIMGEntry entry, SeekableLittleEndianAccessor slea, long endOfExtendedBlock) {\n+        byte marker = slea.readByte();\n+        String type;\n+        switch (marker) {\n+            case 0x73:\n+                type = WZTool.readDecodedString(slea);\n+                break;\n+            case 0x1B:\n+                type = WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt());\n+                break;\n+            default:\n+                throw new RuntimeException(\"Unknown extended image identifier: \" + marker + \" at offset \" +\n+                        (slea.getPosition() - file.getOffset()));\n+        }\n+        if (type.equals(\"Property\")) {\n+            entry.setType(MapleDataType.PROPERTY);\n+            slea.readByte();\n+            slea.readByte();\n+            int children = WZTool.readValue(slea);\n+            for (int i = 0; i < children; i++) {\n+                WZIMGEntry cEntry = new WZIMGEntry(entry);\n+                parse(cEntry, slea);\n+                cEntry.finish();\n+                entry.addChild(cEntry);\n+            }\n+        } else if (type.equals(\"Canvas\")) {\n+            entry.setType(MapleDataType.CANVAS);\n+            slea.readByte();\n+            marker = slea.readByte();\n+            if (marker == 0) {\n+                // do nothing\n+            } else if (marker == 1) {\n+                slea.readByte();\n+                slea.readByte();\n+                int children = WZTool.readValue(slea);\n+                for (int i = 0; i < children; i++) {\n+                    WZIMGEntry child = new WZIMGEntry(entry);\n+                    parse(child, slea);\n+                    child.finish();\n+                    entry.addChild(child);\n+                }\n+            } else {\n+                System.out.println(\"Canvas marker != 1 (\" + marker + \")\");\n+            }\n+            int width = WZTool.readValue(slea);\n+            int height = WZTool.readValue(slea);\n+            int format = WZTool.readValue(slea);\n+            int format2 = slea.readByte();\n+            slea.readInt();\n+            int dataLength = slea.readInt() - 1;\n+            slea.readByte();\n+            if (provideImages) {\n+                byte[] pngdata = slea.read(dataLength);\n+                entry.setData(new PNGMapleCanvas(width, height, dataLength, format + format2, pngdata));\n+            } else {\n+                entry.setData(new PNGMapleCanvas(width, height, dataLength, format + format2, null));\n+                slea.skip(dataLength);\n+            }\n+        } else if (type.equals(\"Shape2D#Vector2D\")) {\n+            entry.setType(MapleDataType.VECTOR);\n+            int x = WZTool.readValue(slea);\n+            int y = WZTool.readValue(slea);\n+            entry.setData(new Point(x, y));\n+        } else if (type.equals(\"Shape2D#Convex2D\")) {\n+            int children = WZTool.readValue(slea);\n+            for (int i = 0; i < children; i++) {\n+                WZIMGEntry cEntry = new WZIMGEntry(entry);\n+                parseExtended(cEntry, slea, 0);\n+                cEntry.finish();\n+                entry.addChild(cEntry);\n+            }\n+        } else if (type.equals(\"Sound_DX8\")) {\n+            entry.setType(MapleDataType.SOUND);\n+            slea.readByte();\n+            int dataLength = WZTool.readValue(slea);\n+            WZTool.readValue(slea); // no clue what this is\n+            int offset = (int) slea.getPosition();\n+            entry.setData(new ImgMapleSound(dataLength, offset - file.getOffset()));\n+            slea.seek(endOfExtendedBlock);\n+        } else if (type.equals(\"UOL\")) {\n+            entry.setType(MapleDataType.UOL);\n+            slea.readByte();\n+            byte uolmarker = slea.readByte();\n+            switch (uolmarker) {\n+                case 0:\n+                    entry.setData(WZTool.readDecodedString(slea));\n+                    break;\n+                case 1:\n+                    entry.setData(WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt()));\n+                    break;\n+                default:\n+                    System.out.println(\"Unknown UOL marker: \" + uolmarker + \" \" + entry.getName());\n+            }\n+        } else {\n+            throw new RuntimeException(\"Unhandled extended type: \" + type);\n+        }\n+    }\n+}"}, {"sha": "85e1c8d90b12ad81599c4bc39bd3af48af60deeb", "filename": "tools/MapleMesoFetcher/src/provider/wz/WZTool.java", "status": "added", "additions": 187, "deletions": 0, "changes": 187, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZTool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/WZTool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/WZTool.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,187 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import javax.crypto.spec.SecretKeySpec;\n+import tools.data.input.LittleEndianAccessor;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+/*\n+ * Ported Code, see WZFile.java for more info\n+ */\n+public class WZTool {\n+    private static byte[] encKey;\n+\n+    static {\n+        byte[] iv = new byte[]{(byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,\n+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,\n+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,\n+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,};\n+        byte[] key = new byte[]{(byte) 0x13, 0x00, 0x00, 0x00,\n+            (byte) 0x08, 0x00, 0x00, 0x00,\n+            (byte) 0x06, 0x00, 0x00, 0x00,\n+            (byte) 0xB4, 0x00, 0x00, 0x00,\n+            (byte) 0x1B, 0x00, 0x00, 0x00,\n+            (byte) 0x0F, 0x00, 0x00, 0x00,\n+            (byte) 0x33, 0x00, 0x00, 0x00,\n+            (byte) 0x52, 0x00, 0x00, 0x00\n+        };\n+        Cipher cipher = null;\n+        SecretKeySpec skeySpec = new SecretKeySpec(key, \"AES\");\n+        try {\n+            cipher = Cipher.getInstance(\"AES\");\n+        } catch (NoSuchAlgorithmException e) {\n+            e.printStackTrace();\n+        } catch (NoSuchPaddingException e) {\n+            e.printStackTrace();\n+        }\n+        try {\n+            cipher.init(Cipher.ENCRYPT_MODE, skeySpec);\n+        } catch (InvalidKeyException e) {\n+            e.printStackTrace();\n+        }\n+        encKey = new byte[0xFFFF];\n+        for (int i = 0; i < (0xFFFF / 16); i++) {\n+            try {\n+                iv = cipher.doFinal(iv);\n+            } catch (IllegalBlockSizeException e) {\n+                e.printStackTrace();\n+            } catch (BadPaddingException e) {\n+                e.printStackTrace();\n+            }\n+            System.arraycopy(iv, 0, encKey, (i * 16), 16);\n+        }\n+        try {\n+            iv = cipher.doFinal(iv);\n+        } catch (IllegalBlockSizeException e) {\n+            e.printStackTrace();\n+        } catch (BadPaddingException e) {\n+            e.printStackTrace();\n+        }\n+        System.arraycopy(iv, 0, encKey, 65520, 15);\n+    }\n+\n+    public static byte[] readListString(byte[] str) {\n+        for (int i = 0; i < str.length; i++) {\n+            str[i] = (byte) (str[i] ^ encKey[i]);\n+        }\n+        return str;\n+    }\n+\n+    public static String readDecodedString(LittleEndianAccessor llea) {\n+        int strLength;\n+        byte b = llea.readByte();\n+        if (b == 0x00) {\n+            return \"\";\n+        }\n+        if (b >= 0) {\n+            if (b == 0x7F) {\n+                strLength = llea.readInt();\n+            } else {\n+                strLength = (int) b;\n+            }\n+            if (strLength < 0) {\n+                return \"\";\n+            }\n+            byte str[] = new byte[strLength * 2];\n+            for (int i = 0; i < strLength * 2; i++) {\n+                str[i] = llea.readByte();\n+            }\n+            return DecryptUnicodeStr(str);\n+        } else {\n+            if (b == -128) {\n+                strLength = llea.readInt();\n+            } else {\n+                strLength = -b;\n+            }\n+            if (strLength < 0) {\n+                return \"\";\n+            }\n+            byte str[] = new byte[strLength];\n+            for (int i = 0; i < strLength; i++) {\n+                str[i] = llea.readByte();\n+            }\n+            return DecryptAsciiStr(str);\n+        }\n+    }\n+\n+    public static String DecryptAsciiStr(byte[] str) {\n+        byte xorByte = (byte) 0xAA;\n+        for (int i = 0; i < str.length; i++) {\n+            str[i] = (byte) (str[i] ^ xorByte ^ encKey[i]);\n+            xorByte++;\n+        }\n+        return new String(str);\n+    }\n+\n+    public static String DecryptUnicodeStr(byte[] str) {\n+        int xorByte = 0xAAAA;\n+        char[] charRet = new char[str.length / 2];\n+        for (int i = 0; i < str.length; i++) {\n+            str[i] = (byte) (str[i] ^ encKey[i]);\n+        }\n+        for (int i = 0; i < (str.length / 2); i++) {\n+            char toXor = (char) ((str[i] << 8) | str[i + 1]);\n+            charRet[i] = (char) (toXor ^ xorByte);\n+            xorByte++;\n+        }\n+        return String.valueOf(charRet);\n+    }\n+\n+    public static String readDecodedStringAtOffset(SeekableLittleEndianAccessor slea, int offset) {\n+        slea.seek(offset);\n+        return readDecodedString(slea);\n+    }\n+\n+    public static String readDecodedStringAtOffsetAndReset(SeekableLittleEndianAccessor slea, int offset) {\n+        long pos = 0;\n+        pos = slea.getPosition();\n+        slea.seek(offset);\n+        String ret = readDecodedString(slea);\n+        slea.seek(pos);\n+        return ret;\n+    }\n+\n+    public static int readValue(LittleEndianAccessor lea) {\n+        byte b = lea.readByte();\n+        if (b == -128) {\n+            return lea.readInt();\n+        } else {\n+            return ((int) b);\n+        }\n+    }\n+\n+    public static float readFloatValue(LittleEndianAccessor lea) {\n+        byte b = lea.readByte();\n+        if (b == -128) {\n+            return lea.readFloat();\n+        } else {\n+            return 0;\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "151a04c2fd6b1e0e6c2084f2cabb9938ff4bfcd4", "filename": "tools/MapleMesoFetcher/src/provider/wz/XMLDomMapleData.java", "status": "added", "additions": 219, "deletions": 0, "changes": 219, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/XMLDomMapleData.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/XMLDomMapleData.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/XMLDomMapleData.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,219 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package provider.wz;\n+\n+import java.awt.Point;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Locale;\n+import java.text.NumberFormat;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+import provider.MapleData;\n+import provider.MapleDataEntity;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NamedNodeMap;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n+import org.xml.sax.SAXException;\n+\n+public class XMLDomMapleData implements MapleData {\n+\tprivate Node node;\n+\tprivate File imageDataDir;\n+        private NumberFormat nf;\n+\n+\tpublic XMLDomMapleData(FileInputStream fis, File imageDataDir) {\n+\t\ttry {\n+\t\t\tDocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n+\t\t\tDocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n+\t\t\tDocument document = documentBuilder.parse(fis);\n+\t\t\tthis.node = document.getFirstChild();\n+\t\t} catch (ParserConfigurationException e) {\n+\t\t\tthrow new RuntimeException(e);\n+\t\t} catch (SAXException e) {\n+\t\t\tthrow new RuntimeException(e);\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new RuntimeException(e);\n+\t\t}\n+\t\tthis.imageDataDir = imageDataDir;\n+                this.nf = NumberFormat.getInstance(Locale.FRANCE);\n+\t}\n+\n+\tprivate XMLDomMapleData(Node node) {\n+\t\tthis.node = node;\n+                this.nf = NumberFormat.getInstance(Locale.FRANCE);\n+\t}\n+\n+\t@Override\n+\tpublic MapleData getChildByPath(String path) {\n+\t\tString segments[] = path.split(\"/\");\n+\t\tif (segments[0].equals(\"..\")) {\n+\t\t\treturn ((MapleData) getParent()).getChildByPath(path.substring(path.indexOf(\"/\") + 1));\n+\t\t}\n+\n+\t\tNode myNode = node;\n+\t\tfor (int x = 0; x < segments.length; x++) {\n+\t\t\tNodeList childNodes = myNode.getChildNodes();\n+\t\t\tboolean foundChild = false;\n+\t\t\tfor (int i = 0; i < childNodes.getLength(); i++) {\n+\t\t\t\tNode childNode = childNodes.item(i);\n+\t\t\t\tif (childNode.getNodeType() == Node.ELEMENT_NODE && childNode.getAttributes().getNamedItem(\"name\").getNodeValue().equals(segments[x])) {\n+\t\t\t\t\tmyNode = childNode;\n+\t\t\t\t\tfoundChild = true;\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (!foundChild) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t}\n+\t\tXMLDomMapleData ret = new XMLDomMapleData(myNode);\n+\t\tret.imageDataDir = new File(imageDataDir, getName() + \"/\" + path).getParentFile();\n+\t\treturn ret;\n+\t}\n+\n+\t@Override\n+\tpublic List<MapleData> getChildren() {\n+\t\tList<MapleData> ret = new ArrayList<MapleData>();\n+\t\tNodeList childNodes = node.getChildNodes();\n+\t\tfor (int i = 0; i < childNodes.getLength(); i++) {\n+\t\t\tNode childNode = childNodes.item(i);\n+\t\t\tif (childNode.getNodeType() == Node.ELEMENT_NODE) {\n+\t\t\t\tXMLDomMapleData child = new XMLDomMapleData(childNode);\n+\t\t\t\tchild.imageDataDir = new File(imageDataDir, getName());\n+\t\t\t\tret.add(child);\n+\t\t\t}\n+\t\t}\n+\t\treturn ret;\n+\t}\n+\n+\t@Override\n+\tpublic Object getData() {\n+\t\tNamedNodeMap attributes = node.getAttributes();\n+\t\tMapleDataType type = getType();\n+\t\tswitch (type) {\n+\t\tcase DOUBLE:\n+\t\tcase FLOAT:\n+\t\tcase INT:\n+                case SHORT: {\n+                        String value = attributes.getNamedItem(\"value\").getNodeValue();\n+                        Number nval;\n+                        \n+                        try {\n+                                nval = nf.parse(value);\n+                        }\n+                        catch(java.text.ParseException pe) {\n+                                pe.printStackTrace();\n+                                nval = 0.0f;\n+                        }\n+                                \n+                        switch (type) {\n+                        case DOUBLE:\n+                                return nval.doubleValue();\n+                        case FLOAT:\n+                                return nval.floatValue();\n+                        case INT:\n+                                return nval.intValue();\n+                        case SHORT:\n+                                return nval.shortValue();\n+                        default:\n+                                return null;\n+                        }\n+                }\n+\t\tcase STRING:\n+\t\tcase UOL: {\n+\t\t\tString value = attributes.getNamedItem(\"value\").getNodeValue();\n+                        return value;\n+\t\t}\n+\t\tcase VECTOR: {\n+\t\t\tString x = attributes.getNamedItem(\"x\").getNodeValue();\n+\t\t\tString y = attributes.getNamedItem(\"y\").getNodeValue();\n+\t\t\treturn new Point(Integer.parseInt(x), Integer.parseInt(y));\n+\t\t}\n+\t\tcase CANVAS: {\n+\t\t\tString width = attributes.getNamedItem(\"width\").getNodeValue();\n+\t\t\tString height = attributes.getNamedItem(\"height\").getNodeValue();\n+\t\t\treturn new FileStoredPngMapleCanvas(Integer.parseInt(width), Integer.parseInt(height), new File(\n+\t\t\t\t\timageDataDir, getName() + \".png\"));\n+\t\t}\n+\t\tdefault:\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic MapleDataType getType() {\n+\t\tString nodeName = node.getNodeName();\n+\t\tif (nodeName.equals(\"imgdir\")) {\n+\t\t\treturn MapleDataType.PROPERTY;\n+\t\t} else if (nodeName.equals(\"canvas\")) {\n+\t\t\treturn MapleDataType.CANVAS;\n+\t\t} else if (nodeName.equals(\"convex\")) {\n+\t\t\treturn MapleDataType.CONVEX;\n+\t\t} else if (nodeName.equals(\"sound\")) {\n+\t\t\treturn MapleDataType.SOUND;\n+\t\t} else if (nodeName.equals(\"uol\")) {\n+\t\t\treturn MapleDataType.UOL;\n+\t\t} else if (nodeName.equals(\"double\")) {\n+\t\t\treturn MapleDataType.DOUBLE;\n+\t\t} else if (nodeName.equals(\"float\")) {\n+\t\t\treturn MapleDataType.FLOAT;\n+\t\t} else if (nodeName.equals(\"int\")) {\n+\t\t\treturn MapleDataType.INT;\n+\t\t} else if (nodeName.equals(\"short\")) {\n+\t\t\treturn MapleDataType.SHORT;\n+\t\t} else if (nodeName.equals(\"string\")) {\n+\t\t\treturn MapleDataType.STRING;\n+\t\t} else if (nodeName.equals(\"vector\")) {\n+\t\t\treturn MapleDataType.VECTOR;\n+\t\t} else if (nodeName.equals(\"null\")) {\n+\t\t\treturn MapleDataType.IMG_0x00;\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic MapleDataEntity getParent() {\n+\t\tNode parentNode = node.getParentNode();\n+\t\tif (parentNode.getNodeType() == Node.DOCUMENT_NODE) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tXMLDomMapleData parentData = new XMLDomMapleData(parentNode);\n+\t\tparentData.imageDataDir = imageDataDir.getParentFile();\n+\t\treturn parentData;\n+\t}\n+\n+\t@Override\n+\tpublic String getName() {\n+\t\treturn node.getAttributes().getNamedItem(\"name\").getNodeValue();\n+\t}\n+\n+\t@Override\n+\tpublic Iterator<MapleData> iterator() {\n+\t\treturn getChildren().iterator();\n+\t}\n+}"}, {"sha": "2a7694fdc97c511f4e0d4b894967b02d813683be", "filename": "tools/MapleMesoFetcher/src/provider/wz/XMLWZFile.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/XMLWZFile.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/provider/wz/XMLWZFile.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/provider/wz/XMLWZFile.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,85 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package provider.wz;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import provider.MapleData;\n+import provider.MapleDataDirectoryEntry;\n+import provider.MapleDataProvider;\n+\n+public class XMLWZFile implements MapleDataProvider {\n+    private File root;\n+    private WZDirectoryEntry rootForNavigation;\n+\n+    public XMLWZFile(File fileIn) {\n+        root = fileIn;\n+        rootForNavigation = new WZDirectoryEntry(fileIn.getName(), 0, 0, null);\n+        fillMapleDataEntitys(root, rootForNavigation);\n+    }\n+\n+    private void fillMapleDataEntitys(File lroot, WZDirectoryEntry wzdir) {\n+        for (File file : lroot.listFiles()) {\n+            String fileName = file.getName();\n+            if (file.isDirectory() && !fileName.endsWith(\".img\")) {\n+                WZDirectoryEntry newDir = new WZDirectoryEntry(fileName, 0, 0, wzdir);\n+                wzdir.addDirectory(newDir);\n+                fillMapleDataEntitys(file, newDir);\n+            } else if (fileName.endsWith(\".xml\")) {\n+                wzdir.addFile(new WZFileEntry(fileName.substring(0, fileName.length() - 4), 0, 0, wzdir));\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public MapleData getData(String path) {\n+        File dataFile = new File(root, path + \".xml\");\n+        File imageDataDir = new File(root, path);\n+        if (!dataFile.exists()) {\n+            return null;//bitches\n+        }\n+        FileInputStream fis;\n+        try {\n+            fis = new FileInputStream(dataFile);\n+        } catch (FileNotFoundException e) {\n+            throw new RuntimeException(\"Datafile \" + path + \" does not exist in \" + root.getAbsolutePath());\n+        }\n+        final XMLDomMapleData domMapleData;\n+        try {\n+            domMapleData = new XMLDomMapleData(fis, imageDataDir.getParentFile());\n+        } finally {\n+            try {\n+                fis.close();\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+        return domMapleData;\n+    }\n+\n+    @Override\n+    public MapleDataDirectoryEntry getRoot() {\n+        return rootForNavigation;\n+    }\n+}"}, {"sha": "27ea52da04b1a9805a9d657847e559de4101cc0d", "filename": "tools/MapleMesoFetcher/src/tools/DatabaseConnection.java", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/DatabaseConnection.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/DatabaseConnection.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/DatabaseConnection.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,51 @@\n+package tools;\n+\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+\n+/**\n+ * @author Frz (Big Daddy)\n+ * @author The Real Spookster (some modifications to this beautiful code)\n+ */\n+public class DatabaseConnection {\n+    private static String DB_URL = \"jdbc:mysql://localhost:3306/maplesolaxia\";\n+    private static String DB_USER = \"root\";\n+    private static String DB_PASS = \"\";\n+    \n+    public static final int RETURN_GENERATED_KEYS = 1;\n+\n+    private static ThreadLocal<Connection> con = new ThreadLocalConnection();\n+\n+    public static Connection getConnection() {\n+        Connection c = con.get();\n+        try {\n+            c.getMetaData();\n+        } catch (SQLException e) { // connection is dead, therefore discard old object 5ever\n+            con.remove();\n+            c = con.get();\n+        }\n+        return c;\n+    }\n+\n+    private static class ThreadLocalConnection extends ThreadLocal<Connection> {\n+\n+        @Override\n+        protected Connection initialValue() {\n+            try {\n+                Class.forName(\"com.mysql.jdbc.Driver\"); // touch the mysql driver\n+            } catch (ClassNotFoundException e) {\n+                System.out.println(\"[SEVERE] SQL Driver Not Found. Consider death by clams.\");\n+                e.printStackTrace();\n+                return null;\n+            }\n+            try {\n+                return DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);\n+            } catch (SQLException e) {\n+                System.out.println(\"[SEVERE] Unable to make database connection.\");\n+                e.printStackTrace();\n+                return null;\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "8cc0c8aa84947f28e2bf1695d146b6c246eddec8", "filename": "tools/MapleMesoFetcher/src/tools/HexTool.java", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/HexTool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/HexTool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/HexTool.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,79 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools;\n+\n+import java.io.ByteArrayOutputStream;\n+\n+public class HexTool {\n+    private static final char[] HEX = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\n+\n+    private static String toString(byte byteValue) {\n+        int tmp = byteValue << 8;\n+        char[] retstr = new char[]{HEX[(tmp >> 12) & 0x0F], HEX[(tmp >> 8) & 0x0F]};\n+        return String.valueOf(retstr);\n+    }\n+\n+    public static String toString(byte[] bytes) {\n+        StringBuilder hexed = new StringBuilder();\n+        for (int i = 0; i < bytes.length; i++) {\n+            hexed.append(toString(bytes[i]));\n+            hexed.append(' ');\n+        }\n+        return hexed.substring(0, hexed.length() - 1);\n+    }\n+\n+    public static byte[] getByteArrayFromHexString(String hex) {\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        int nexti = 0;\n+        int nextb = 0;\n+        boolean highoc = true;\n+        outer:\n+        for (;;) {\n+            int number = -1;\n+            while (number == -1) {\n+                if (nexti == hex.length()) {\n+                    break outer;\n+                }\n+                char chr = hex.charAt(nexti);\n+                if (chr >= '0' && chr <= '9') {\n+                    number = chr - '0';\n+                } else if (chr >= 'a' && chr <= 'f') {\n+                    number = chr - 'a' + 10;\n+                } else if (chr >= 'A' && chr <= 'F') {\n+                    number = chr - 'A' + 10;\n+                } else {\n+                    number = -1;\n+                }\n+                nexti++;\n+            }\n+            if (highoc) {\n+                nextb = number << 4;\n+                highoc = false;\n+            } else {\n+                nextb |= number;\n+                highoc = true;\n+                baos.write(nextb);\n+            }\n+        }\n+        return baos.toByteArray();\n+    }\n+}"}, {"sha": "f88718cbe3e8471b9ccca9461e4978c346b1c43c", "filename": "tools/MapleMesoFetcher/src/tools/Pair.java", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/Pair.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/Pair.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/Pair.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,121 @@\n+/*\n+This file is part of the OdinMS Maple Story Server\n+Copyright (C) 2008 ~ 2010 Patrick Huy <patrick.huy@frz.cc> \n+Matthias Butz <matze@odinms.de>\n+Jan Christian Meyer <vimes@odinms.de>\n+\n+This program is free software: you can redistribute it and/or modify\n+it under the terms of the GNU Affero General Public License version 3\n+as published by the Free Software Foundation. You may not use, modify\n+or distribute this program under any other version of the\n+GNU Affero General Public License.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU Affero General Public License for more details.\n+\n+You should have received a copy of the GNU Affero General Public License\n+along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package tools;\n+\n+/**\n+ * Represents a pair of values.\n+ * \n+ * @author Frz\n+ * @since Revision 333\n+ * @version 1.0\n+ * \n+ * @param <E> The type of the left value.\n+ * @param <F> The type of the right value.\n+ */\n+public class Pair<E, F> {\n+\n+    public E left;\n+    public F right;\n+\n+    /**\n+     * Class constructor - pairs two objects together.\n+     *\n+     * @param left The left object.\n+     * @param right The right object.\n+     */\n+    public Pair(E left, F right) {\n+        this.left = left;\n+        this.right = right;\n+    }\n+\n+    /**\n+     * Gets the left value.\n+     *\n+     * @return The left value.\n+     */\n+    public E getLeft() {\n+        return left;\n+    }\n+\n+    /**\n+     * Gets the right value.\n+     *\n+     * @return The right value.\n+     */\n+    public F getRight() {\n+        return right;\n+    }\n+\n+    /**\n+     * Turns the pair into a string.\n+     *\n+     * @return Each value of the pair as a string joined by a colon.\n+     */\n+    @Override\n+    public String toString() {\n+        return left.toString() + \":\" + right.toString();\n+    }\n+\n+    /**\n+     * Gets the hash code of this pair.\n+     */\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((left == null) ? 0 : left.hashCode());\n+        result = prime * result + ((right == null) ? 0 : right.hashCode());\n+        return result;\n+    }\n+\n+    /**\n+     * Checks to see if two pairs are equal.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final Pair other = (Pair) obj;\n+        if (left == null) {\n+            if (other.left != null) {\n+                return false;\n+            }\n+        } else if (!left.equals(other.left)) {\n+            return false;\n+        }\n+        if (right == null) {\n+            if (other.right != null) {\n+                return false;\n+            }\n+        } else if (!right.equals(other.right)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "eac7de21eaac3423b32736fe92c5bd80da94d2a6", "filename": "tools/MapleMesoFetcher/src/tools/data/input/ByteArrayByteStream.java", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/ByteArrayByteStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/ByteArrayByteStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/input/ByteArrayByteStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,72 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+import tools.HexTool;\n+\n+public class ByteArrayByteStream implements SeekableInputStreamBytestream {\n+    private int pos = 0;\n+    private long bytesRead = 0;\n+    private byte[] arr;\n+\n+    public ByteArrayByteStream(byte[] arr) {\n+        this.arr = arr;\n+    }\n+\n+    @Override\n+    public long getPosition() {\n+        return pos;\n+    }\n+\n+    @Override\n+    public void seek(long offset) throws IOException {\n+        pos = (int) offset;\n+    }\n+\n+    @Override\n+    public long getBytesRead() {\n+        return bytesRead;\n+    }\n+\n+    @Override\n+    public int readByte() {\n+        bytesRead++;\n+        return ((int) arr[pos++]) & 0xFF;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        String nows = \"kevintjuh93 pwns\";//I lol'd\n+        if (arr.length - pos > 0) {\n+            byte[] now = new byte[arr.length - pos];\n+            System.arraycopy(arr, pos, now, 0, arr.length - pos);\n+            nows = HexTool.toString(now);\n+        }\n+        return \"All: \" + HexTool.toString(arr) + \"\\nNow: \" + nows;\n+    }\n+  \n+    @Override\n+    public long available() {\n+        return arr.length - pos;\n+    }\n+}"}, {"sha": "107f71843e5890dc43f8679eb7608ac631165eae", "filename": "tools/MapleMesoFetcher/src/tools/data/input/ByteInputStream.java", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/ByteInputStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/ByteInputStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/input/ByteInputStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,35 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+/**\n+ * Represents an abstract stream of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public interface ByteInputStream {\n+    int readByte();\n+    long getBytesRead();\n+    long available();\n+}"}, {"sha": "d08a9b8374c3b3a9c38fd898295446e7d3582d50", "filename": "tools/MapleMesoFetcher/src/tools/data/input/GenericLittleEndianAccessor.java", "status": "added", "additions": 239, "deletions": 0, "changes": 239, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/GenericLittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/GenericLittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/input/GenericLittleEndianAccessor.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,239 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.awt.Point;\n+import java.io.ByteArrayOutputStream;\n+\n+/**\n+ * Provides a generic interface to a Little Endian stream of bytes.\n+ *\n+ * @version 1.0\n+ * @author Frz\n+ * @since Revision 323\n+ */\n+public class GenericLittleEndianAccessor implements LittleEndianAccessor {\n+    private ByteInputStream bs;\n+\n+    /**\n+     * Class constructor - Wraps the accessor around a stream of bytes.\n+     *\n+     * @param bs The byte stream to wrap the accessor around.\n+     */\n+    public GenericLittleEndianAccessor(ByteInputStream bs) {\n+        this.bs = bs;\n+    }\n+\n+    /**\n+     * Read a single byte from the stream.\n+     *\n+     * @return The byte read.\n+     * @see tools.data.input.ByteInputStream#readByte\n+     */\n+    @Override\n+    public byte readByte() {\n+        return (byte) bs.readByte();\n+    }\n+\n+    /**\n+     * Reads an integer from the stream.\n+     *\n+     * @return The integer read.\n+     */\n+    @Override\n+    public int readInt() {\n+        return bs.readByte() + (bs.readByte() << 8) + (bs.readByte() << 16) + (bs.readByte() << 24);\n+    }\n+\n+    /**\n+     * Reads a short integer from the stream.\n+     *\n+     * @return The short read.\n+     */\n+    @Override\n+    public short readShort() {\n+        return (short) (bs.readByte() + (bs.readByte() << 8));\n+    }\n+\n+    /**\n+     * Reads a single character from the stream.\n+     *\n+     * @return The character read.\n+     */\n+    @Override\n+    public char readChar() {\n+        return (char) readShort();\n+    }\n+\n+    /**\n+     * Reads a long integer from the stream.\n+     *\n+     * @return The long integer read.\n+     */\n+    @Override\n+    public long readLong() {\n+        long byte1 = bs.readByte();\n+        long byte2 = bs.readByte();\n+        long byte3 = bs.readByte();\n+        long byte4 = bs.readByte();\n+        long byte5 = bs.readByte();\n+        long byte6 = bs.readByte();\n+        long byte7 = bs.readByte();\n+        long byte8 = bs.readByte();\n+        return (byte8 << 56) + (byte7 << 48) + (byte6 << 40) + (byte5 << 32) + (byte4 << 24) + (byte3 << 16) + (byte2 << 8) + byte1;\n+    }\n+\n+    /**\n+     * Reads a floating point integer from the stream.\n+     *\n+     * @return The float-type integer read.\n+     */\n+    @Override\n+    public float readFloat() {\n+        return Float.intBitsToFloat(readInt());\n+    }\n+\n+    /**\n+     * Reads a double-precision integer from the stream.\n+     *\n+     * @return The double-type integer read.\n+     */\n+    @Override\n+    public double readDouble() {\n+        return Double.longBitsToDouble(readLong());\n+    }\n+\n+    /**\n+     * Reads an ASCII string from the stream with length <code>n</code>.\n+     *\n+     * @param n Number of characters to read.\n+     * @return The string read.\n+     */\n+    public final String readAsciiString(int n) {\n+        char ret[] = new char[n];\n+        for (int x = 0; x < n; x++) {\n+            ret[x] = (char) readByte();\n+        }\n+        return String.valueOf(ret);\n+    }\n+\n+    /**\n+     * Reads a null-terminated string from the stream.\n+     *\n+     * @return The string read.\n+     */\n+    public final String readNullTerminatedAsciiString() {\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        byte b;\n+        while (true) {\n+            b = readByte();\n+            if (b == 0) {\n+                break;\n+            }\n+            baos.write(b);\n+        }\n+        byte[] buf = baos.toByteArray();\n+        char[] chrBuf = new char[buf.length];\n+        for (int x = 0; x < buf.length; x++) {\n+            chrBuf[x] = (char) buf[x];\n+        }\n+        return String.valueOf(chrBuf);\n+    }\n+\n+    /**\n+     * Gets the number of bytes read from the stream so far.\n+     *\n+     * @return A long integer representing the number of bytes read.\n+     * @see tools.data.input.ByteInputStream#getBytesRead()\n+     */\n+    public long getBytesRead() {\n+        return bs.getBytesRead();\n+    }\n+\n+    /**\n+     * Reads a MapleStory convention lengthed ASCII string.\n+     * This consists of a short integer telling the length of the string,\n+     * then the string itself.\n+     *\n+     * @return The string read.\n+     */\n+    @Override\n+    public String readMapleAsciiString() {\n+        return readAsciiString(readShort());\n+    }\n+\n+    /**\n+     * Reads <code>num</code> bytes off the stream.\n+     *\n+     * @param num The number of bytes to read.\n+     * @return An array of bytes with the length of <code>num</code>\n+     */\n+    @Override\n+    public byte[] read(int num) {\n+        byte[] ret = new byte[num];\n+        for (int x = 0; x < num; x++) {\n+            ret[x] = readByte();\n+        }\n+        return ret;\n+    }\n+\n+    /**\n+     * Reads a MapleStory Position information.\n+     * This consists of 2 short integer.\n+     *\n+     * @return The Position read.\n+     */\n+    @Override\n+    public final Point readPos() {\n+\tfinal int x = readShort();\n+\tfinal int y = readShort();\n+\treturn new Point(x, y);\n+    }\n+\n+    /**\n+     * Skips the current position of the stream <code>num</code> bytes ahead.\n+     *\n+     * @param num Number of bytes to skip.\n+     */\n+    @Override\n+    public void skip(int num) {\n+        for (int x = 0; x < num; x++) {\n+            readByte();\n+        }\n+    }\n+\n+    /**\n+     * @see tools.data.input.ByteInputStream#available\n+     */\n+    @Override\n+    public long available() {\n+        return bs.available();\n+    }\n+\n+    /**\n+     * @see java.lang.Object#toString\n+     */\n+    @Override\n+    public String toString() {\n+        return bs.toString();\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "fdd147d79637904e92445553643117eb0aa6ebf4", "filename": "tools/MapleMesoFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,91 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Provides an abstract accessor to a generic Little Endian byte stream. This\n+ * accessor is seekable.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ * @see tools.data.input.GenericLittleEndianAccessor\n+ */\n+public class GenericSeekableLittleEndianAccessor extends GenericLittleEndianAccessor implements SeekableLittleEndianAccessor {\n+    private SeekableInputStreamBytestream bs;\n+\n+    /**\n+     * Class constructor\n+     * Provide a seekable input stream to wrap this object around.\n+     *\n+     * @param bs The byte stream to wrap this around.\n+     */\n+    public GenericSeekableLittleEndianAccessor(SeekableInputStreamBytestream bs) {\n+        super(bs);\n+        this.bs = bs;\n+    }\n+\n+    /**\n+     * Seek the pointer to <code>offset</code>\n+     *\n+     * @param offset The offset to seek to.\n+     * @see tools.data.input.SeekableInputStreamBytestream#seek\n+     */\n+    @Override\n+    public void seek(long offset) {\n+        try {\n+            bs.seek(offset);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"Seek failed \" + e);\n+        }\n+    }\n+\n+    /**\n+     * Get the current position of the pointer.\n+     *\n+     * @return The current position of the pointer as a long integer.\n+     * @see tools.data.input.SeekableInputStreamBytestream#getPosition\n+     */\n+    @Override\n+    public long getPosition() {\n+        try {\n+            return bs.getPosition();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"getPosition failed\" + e);\n+            return -1;\n+        }\n+    }\n+\n+    /**\n+     * Skip <code>num</code> number of bytes in the stream.\n+     *\n+     * @param num The number of bytes to skip.\n+     */\n+    @Override\n+    public void skip(int num) {\n+        seek(getPosition() + num);\n+    }\n+}"}, {"sha": "70aef3489f8eeaa27e8236c069dd847e069c0a85", "filename": "tools/MapleMesoFetcher/src/tools/data/input/InputStreamByteStream.java", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/InputStreamByteStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/InputStreamByteStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/input/InputStreamByteStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,93 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+/**\n+ * Provides an abstract wrapper to a stream of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public class InputStreamByteStream implements ByteInputStream {\n+    private InputStream is;\n+    private long read = 0;\n+\n+    /**\n+     * Class constructor.\n+     * Provide an input stream to wrap this around.\n+     *\n+     * @param is The input stream to wrap this object around.\n+     */\n+    public InputStreamByteStream(InputStream is) {\n+        this.is = is;\n+    }\n+\n+    /**\n+     * Reads the next byte from the stream.\n+     *\n+     * @return Then next byte in the stream.\n+     */\n+    @Override\n+    public int readByte() {\n+        int temp;\n+        try {\n+            temp = is.read();\n+            if (temp == -1) {\n+                throw new RuntimeException(\"EOF\");\n+            }\n+            read++;\n+            return temp;\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    /**\n+     * Gets the number of bytes read from the stream.\n+     *\n+     * @return The number of bytes read as a long integer.\n+     */\n+    @Override\n+    public long getBytesRead() {\n+        return read;\n+    }\n+\n+    /**\n+     * Returns the number of bytes left in the stream.\n+     *\n+     * @return The number of bytes available for reading as a long integer.\n+     */\n+    @Override\n+    public long available() {\n+        try {\n+            return is.available();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"ERROR\" + e);\n+            return 0;\n+        }\n+    }\n+}"}, {"sha": "f991dbf537e4230969cf96296d460306fb52c019", "filename": "tools/MapleMesoFetcher/src/tools/data/input/LittleEndianAccessor.java", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/LittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/LittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/input/LittleEndianAccessor.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,45 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.awt.Point;\n+\n+/**\n+ * @author Frz\n+ */\n+public interface LittleEndianAccessor {\n+    byte readByte();\n+    char readChar();\n+    short readShort();\n+    int readInt();\n+    Point readPos();\n+    long readLong();\n+    void skip(int num);\n+    byte[] read(int num);\n+    float readFloat();\n+    double readDouble();\n+    String readAsciiString(int n);\n+    String readNullTerminatedAsciiString();\n+    String readMapleAsciiString();\n+    long getBytesRead();\n+    long available();\n+}"}, {"sha": "c0004be17fd1125ee7bff7911c3be489bc488f5c", "filename": "tools/MapleMesoFetcher/src/tools/data/input/RandomAccessByteStream.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/RandomAccessByteStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/RandomAccessByteStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/input/RandomAccessByteStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,84 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+\n+/**\n+ * Provides an abstract layer to a byte stream. This layer can be accessed\n+ * randomly.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public class RandomAccessByteStream implements SeekableInputStreamBytestream {\n+    private RandomAccessFile raf;\n+    private long read = 0;\n+\n+    public RandomAccessByteStream(RandomAccessFile raf) {\n+        super();\n+        this.raf = raf;\n+    }\n+\n+    @Override\n+    public int readByte() {\n+        int temp;\n+        try {\n+            temp = raf.read();\n+            if (temp == -1) {\n+                throw new RuntimeException(\"EOF\");\n+            }\n+            read++;\n+            return temp;\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void seek(long offset) throws IOException {\n+        raf.seek(offset);\n+    }\n+\n+    @Override\n+    public long getPosition() throws IOException {\n+        return raf.getFilePointer();\n+    }\n+\n+    @Override\n+    public long getBytesRead() {\n+        return read;\n+    }\n+\n+    @Override\n+    public long available() {\n+        try {\n+            return raf.length() - raf.getFilePointer();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"ERROR \" + e);\n+            return 0;\n+        }\n+    }\n+}"}, {"sha": "f4922dc876ef24832968388c0d62c27e9303cf20", "filename": "tools/MapleMesoFetcher/src/tools/data/input/SeekableInputStreamBytestream.java", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/SeekableInputStreamBytestream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/SeekableInputStreamBytestream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/input/SeekableInputStreamBytestream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,51 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Provides an abstract interface to a stream of bytes. This stream can be\n+ * seeked.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since 299\n+ */\n+public interface SeekableInputStreamBytestream extends ByteInputStream {\n+    /**\n+     * Seeks the stream by the specified offset.\n+     *\n+     * @param offset\n+     *            Number of bytes to seek.\n+     * @throws IOException\n+     */\n+    void seek(long offset) throws IOException;\n+\n+    /**\n+     * Gets the current position of the stream.\n+     *\n+     * @return The stream position as a long integer.\n+     * @throws IOException\n+     */\n+    long getPosition() throws IOException;\n+}"}, {"sha": "16b2317f7a5b5d000be9d7f12cd86bdc30d2ed89", "filename": "tools/MapleMesoFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,27 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.input;\n+\n+public interface SeekableLittleEndianAccessor extends LittleEndianAccessor {\n+    void seek(long offset);\n+    long getPosition();\n+}"}, {"sha": "80cbc9301e410f00b74731f7f8ee366109f12a1d", "filename": "tools/MapleMesoFetcher/src/tools/data/output/BAOSByteOutputStream.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/output/BAOSByteOutputStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/output/BAOSByteOutputStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/output/BAOSByteOutputStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,56 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.output;\n+\n+import java.io.ByteArrayOutputStream;\n+\n+/**\n+ * Uses a byte array to output a stream of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 352\n+ */\n+class BAOSByteOutputStream implements ByteOutputStream {\n+    private ByteArrayOutputStream baos;\n+\n+    /**\n+     * Class constructor - Wraps the stream around a Java BAOS.\n+     *\n+     * @param baos <code>The ByteArrayOutputStream</code> to wrap this around.\n+     */\n+    BAOSByteOutputStream(ByteArrayOutputStream baos) {\n+        super();\n+        this.baos = baos;\n+    }\n+\n+    /**\n+     * Writes a byte to the stream.\n+     *\n+     * @param b The byte to write to the stream.\n+     * @see tools.data.output.ByteOutputStream#writeByte(byte)\n+     */\n+    @Override\n+    public void writeByte(byte b) {\n+        baos.write(b);\n+    }\n+}"}, {"sha": "0df7ca775362e7ef40ee4e5fa9d9b36ebd0b5001", "filename": "tools/MapleMesoFetcher/src/tools/data/output/ByteOutputStream.java", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/output/ByteOutputStream.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/output/ByteOutputStream.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/output/ByteOutputStream.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,38 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.output;\n+\n+/**\n+ * Provides an interface to an output stream of bytes.\n+ * \n+ * @author Frz\n+ * @since Revision 323\n+ * @version 1.0\n+ */\n+interface ByteOutputStream {\n+    /**\n+     * Writes a byte to the stream.\n+     *\n+     * @param b The byte to write.\n+     */\n+    void writeByte(byte b);\n+}"}, {"sha": "e804fd8000c7748c854795b388a49da0a98666d9", "filename": "tools/MapleMesoFetcher/src/tools/data/output/GenericLittleEndianWriter.java", "status": "added", "additions": 183, "deletions": 0, "changes": 183, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/output/GenericLittleEndianWriter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/output/GenericLittleEndianWriter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/output/GenericLittleEndianWriter.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,183 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.output;\n+\n+import java.awt.Point;\n+import java.nio.charset.Charset;\n+\n+/**\n+ * Provides a generic writer of a little-endian sequence of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public class GenericLittleEndianWriter implements LittleEndianWriter {\n+    private static Charset ASCII = Charset.forName(\"US-ASCII\");\n+    private ByteOutputStream bos;\n+\n+    /**\n+     * Class constructor - Protected to prevent instantiation with no arguments.\n+     */\n+    protected GenericLittleEndianWriter() {\n+        // Blah!\n+    }\n+\n+    /**\n+     * Sets the byte-output stream for this instance of the object.\n+     *\n+     * @param bos The new output stream to set.\n+     */\n+    void setByteOutputStream(ByteOutputStream bos) {\n+        this.bos = bos;\n+    }\n+\n+    /**\n+     * Write an array of bytes to the stream.\n+     *\n+     * @param b The bytes to write.\n+     */\n+    @Override\n+    public void write(byte[] b) {\n+        for (int x = 0; x < b.length; x++) {\n+            bos.writeByte(b[x]);\n+        }\n+    }\n+\n+    /**\n+     * Write a byte to the stream.\n+     *\n+     * @param b The byte to write.\n+     */\n+    @Override\n+    public void write(byte b) {\n+        bos.writeByte(b);\n+    }\n+\n+    /**\n+     * Write a byte in integer form to the stream.\n+     *\n+     * @param b The byte as an <code>Integer</code> to write.\n+     */\n+    @Override\n+    public void write(int b) {\n+        bos.writeByte((byte) b);\n+    }\n+\n+    @Override\n+    public void skip(int b) {\n+        write(new byte[b]);\n+    }\n+\n+    /**\n+     * Write a short integer to the stream.\n+     *\n+     * @param i The short integer to write.\n+     */\n+    @Override\n+    public void writeShort(int i) {\n+        bos.writeByte((byte) (i & 0xFF));\n+        bos.writeByte((byte) ((i >>> 8) & 0xFF));\n+    }\n+\n+    /**\n+     * Writes an integer to the stream.\n+     *\n+     * @param i The integer to write.\n+     */\n+    @Override\n+    public void writeInt(int i) {\n+        bos.writeByte((byte) (i & 0xFF));\n+        bos.writeByte((byte) ((i >>> 8) & 0xFF));\n+        bos.writeByte((byte) ((i >>> 16) & 0xFF));\n+        bos.writeByte((byte) ((i >>> 24) & 0xFF));\n+    }\n+\n+    /**\n+     * Writes an ASCII string the the stream.\n+     *\n+     * @param s The ASCII string to write.\n+     */\n+    @Override\n+    public void writeAsciiString(String s) {\n+        write(s.getBytes(ASCII));\n+    }\n+\n+    /**\n+     * Writes a maple-convention ASCII string to the stream.\n+     *\n+     * @param s The ASCII string to use maple-convention to write.\n+     */\n+    @Override\n+    public void writeMapleAsciiString(String s) {\n+        writeShort((short) s.length());\n+        writeAsciiString(s);\n+    }\n+\n+    /**\n+     * Writes a null-terminated ASCII string to the stream.\n+     *\n+     * @param s The ASCII string to write.\n+     */\n+    @Override\n+    public void writeNullTerminatedAsciiString(String s) {\n+        writeAsciiString(s);\n+        write(0);\n+    }\n+\n+    /**\n+     * Write a long integer to the stream.\n+     * @param l The long integer to write.\n+     */\n+    @Override\n+    public void writeLong(long l) {\n+        bos.writeByte((byte) (l & 0xFF));\n+        bos.writeByte((byte) ((l >>> 8) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 16) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 24) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 32) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 40) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 48) & 0xFF));\n+        bos.writeByte((byte) ((l >>> 56) & 0xFF));\n+    }\n+\n+    /**\n+     * Writes a 2D 4 byte position information\n+     *\n+     * @param s The Point position to write.\n+     */\n+    @Override\n+    public void writePos(Point s) {\n+        writeShort(s.x);\n+        writeShort(s.y);\n+    }\n+\n+    /**\n+     * Writes a boolean true ? 1 : 0\n+     *\n+     * @param b The boolean to write.\n+     */\n+    @Override\n+    public void writeBool(final boolean b) {\n+        write(b ? 1 : 0);\n+    }\n+}"}, {"sha": "f17bd7c72ec04f5abf2032a6622141630bd3dc81", "filename": "tools/MapleMesoFetcher/src/tools/data/output/LittleEndianWriter.java", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/output/LittleEndianWriter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/output/LittleEndianWriter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/output/LittleEndianWriter.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,114 @@\n+/*\n+ This file is part of the OdinMS Maple Story Server\n+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+ Matthias Butz <matze@odinms.de>\n+ Jan Christian Meyer <vimes@odinms.de>\n+\n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU Affero General Public License as\n+ published by the Free Software Foundation version 3 as published by\n+ the Free Software Foundation. You may not use, modify or distribute\n+ this program under any other version of the GNU Affero General Public\n+ License.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU Affero General Public License for more details.\n+\n+ You should have received a copy of the GNU Affero General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package tools.data.output;\n+\n+import java.awt.Point;\n+\n+/**\n+ * Provides an interface to a writer class that writes a little-endian sequence\n+ * of bytes.\n+ *\n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 323\n+ */\n+public interface LittleEndianWriter {\n+\n+    /**\n+     * Write an array of bytes to the sequence.\n+     *\n+     * @param b The bytes to write.\n+     */\n+    public void write(byte b[]);\n+\n+    /**\n+     * Write a byte to the sequence.\n+     *\n+     * @param b The byte to write.\n+     */\n+    public void write(byte b);\n+\n+    /**\n+     * Write a byte in integer form to the sequence.\n+     *\n+     * @param b The byte as an <code>Integer</code> to write.\n+     */\n+    public void write(int b);\n+\n+    public void skip(int b);\n+\n+    /**\n+     * Writes an integer to the sequence.\n+     *\n+     * @param i The integer to write.\n+     */\n+    public void writeInt(int i);\n+\n+    /**\n+     * Write a short integer to the sequence.\n+     *\n+     * @param s The short integer to write.\n+     */\n+    public void writeShort(int s);\n+\n+    /**\n+     * Write a long integer to the sequence.\n+     *\n+     * @param l The long integer to write.\n+     */\n+    public void writeLong(long l);\n+\n+    /**\n+     * Writes an ASCII string the the sequence.\n+     *\n+     * @param s The ASCII string to write.\n+     */\n+    void writeAsciiString(String s);\n+\n+    /**\n+     * Writes a null-terminated ASCII string to the sequence.\n+     *\n+     * @param s The ASCII string to write.\n+     */\n+    void writeNullTerminatedAsciiString(String s);\n+\n+    /**\n+     * Writes a maple-convention ASCII string to the sequence.\n+     *\n+     * @param s The ASCII string to use maple-convention to write.\n+     */\n+    void writeMapleAsciiString(String s);\n+\n+    /**\n+     * Writes a 2D 4 byte position information\n+     *\n+     * @param s The Point position to write.\n+     */\n+    void writePos(Point s);\n+\n+    /**\n+     * Writes a boolean true ? 1 : 0\n+     *\n+     * @param b The boolean to write.\n+     */\n+    void writeBool(final boolean b);\n+}"}, {"sha": "b02365ec62c9cbaf2998c5816928195512967a7f", "filename": "tools/MapleMesoFetcher/src/tools/data/output/MaplePacketLittleEndianWriter.java", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/output/MaplePacketLittleEndianWriter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MapleMesoFetcher/src/tools/data/output/MaplePacketLittleEndianWriter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleMesoFetcher/src/tools/data/output/MaplePacketLittleEndianWriter.java?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -0,0 +1,73 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package tools.data.output;\n+\n+import java.io.ByteArrayOutputStream;\n+import tools.HexTool;\n+\n+/**\n+ * Writes a maplestory-packet little-endian stream of bytes.\n+ * \n+ * @author Frz\n+ * @version 1.0\n+ * @since Revision 352\n+ */\n+public class MaplePacketLittleEndianWriter extends GenericLittleEndianWriter {\n+    private ByteArrayOutputStream baos;\n+\n+    /**\n+     * Constructor - initializes this stream with a default size.\n+     */\n+    public MaplePacketLittleEndianWriter() {\n+        this(32);\n+    }\n+\n+    /**\n+     * Constructor - initializes this stream with size <code>size</code>.\n+     *\n+     * @param size The size of the underlying stream.\n+     */\n+    public MaplePacketLittleEndianWriter(int size) {\n+        this.baos = new ByteArrayOutputStream(size);\n+        setByteOutputStream(new BAOSByteOutputStream(baos));\n+    }\n+\n+    /**\n+     * Gets a <code>MaplePacket</code> instance representing this\n+     * sequence of bytes.\n+     *\n+     * @return A <code>MaplePacket</code> with the bytes in this stream.\n+     */\n+    public byte[] getPacket() {\n+        return baos.toByteArray();\n+    }\n+\n+    /**\n+     * Changes this packet into a human-readable hexadecimal stream of bytes.\n+     *\n+     * @return This packet as hex digits.\n+     */\n+    @Override\n+    public String toString() {\n+        return HexTool.toString(baos.toByteArray());\n+    }\n+}"}, {"sha": "adc8a8f46a72a85e1f86e93767ffe9d0b6cea43e", "filename": "tools/MobBookUpdate/nbproject/private/private.properties", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MobBookUpdate/nbproject/private/private.properties", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/tools/MobBookUpdate/nbproject/private/private.properties", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MobBookUpdate/nbproject/private/private.properties?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -3,4 +3,4 @@ do.depend=false\n do.jar=true\n javac.debug=true\n javadoc.preview=true\n-user.properties.file=C:\\\\Users\\\\RonanLana\\\\AppData\\\\Roaming\\\\NetBeans\\\\8.0.2\\\\build.properties\n+user.properties.file=C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\NetBeans\\\\8.0.2\\\\build.properties"}, {"sha": "c610adbf095fab56258ef05a22170e76dfaeeafa", "filename": "wz/Map.wz/Map/Map9/914000200.img.xml", "status": "modified", "additions": 1686, "deletions": 1, "changes": 1687, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/wz/Map.wz/Map/Map9/914000200.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/wz/Map.wz/Map/Map9/914000200.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/Map.wz/Map/Map9/914000200.img.xml?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -1 +1,1686 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><imgdir name=\"914000200.img\"><imgdir name=\"info\"><int name=\"version\" value=\"10\"/><int name=\"cloud\" value=\"0\"/><int name=\"town\" value=\"1\"/><int name=\"swim\" value=\"0\"/><int name=\"returnMap\" value=\"914000000\"/><int name=\"forcedReturn\" value=\"914000000\"/><float name=\"mobRate\" value=\"0.6999999\"/><string name=\"bgm\" value=\"Bgm14/DragonNest\"/><string name=\"mapMark\" value=\"BlackDragon\"/><int name=\"fly\" value=\"0\"/><int name=\"noMapCmd\" value=\"0\"/><int name=\"hideMinimap\" value=\"0\"/><int name=\"fieldLimit\" value=\"3009276\"/><string name=\"onFirstUserEnter\" value=\"\"/><string name=\"onUserEnter\" value=\"\"/><int name=\"VRTop\" value=\"-900\"/><int name=\"VRLeft\" value=\"1216\"/><int name=\"VRBottom\" value=\"180\"/><int name=\"VRRight\" value=\"2654\"/><int name=\"fieldType\" value=\"22\"/></imgdir><imgdir name=\"back\"><imgdir name=\"0\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"0\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"20\"/><int name=\"y\" value=\"-172\"/><int name=\"rx\" value=\"0\"/><int name=\"ry\" value=\"0\"/><int name=\"type\" value=\"3\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"1\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"1\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"132\"/><int name=\"y\" value=\"-365\"/><int name=\"rx\" value=\"-10\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"2\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"0\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"247\"/><int name=\"y\" value=\"-408\"/><int name=\"rx\" value=\"-10\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"3\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"2\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-643\"/><int name=\"y\" value=\"-184\"/><int name=\"rx\" value=\"-20\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"4\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"3\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-214\"/><int name=\"y\" value=\"-184\"/><int name=\"rx\" value=\"-20\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"5\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"4\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"215\"/><int name=\"y\" value=\"-184\"/><int name=\"rx\" value=\"-20\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"6\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"5\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"644\"/><int name=\"y\" value=\"-184\"/><int name=\"rx\" value=\"-20\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"7\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"6\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-301\"/><int name=\"y\" value=\"-94\"/><int name=\"rx\" value=\"-2\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"4\"/><int name=\"cx\" value=\"1500\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"8\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"7\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"380\"/><int name=\"y\" value=\"-73\"/><int name=\"rx\" value=\"-4\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"4\"/><int name=\"cx\" value=\"2000\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"9\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"9\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-689\"/><int name=\"y\" value=\"-246\"/><int name=\"rx\" value=\"-50\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"2067\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"10\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"10\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"0\"/><int name=\"y\" value=\"-113\"/><int name=\"rx\" value=\"-50\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"2067\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"11\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"12\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"670\"/><int name=\"y\" value=\"-255\"/><int name=\"rx\" value=\"-50\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"2067\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"12\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"6\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-1193\"/><int name=\"y\" value=\"-39\"/><int name=\"rx\" value=\"-50\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"2067\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"13\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"7\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"1398\"/><int name=\"y\" value=\"-13\"/><int name=\"rx\" value=\"-50\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"2067\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"14\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"8\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"1728\"/><int name=\"y\" value=\"-52\"/><int name=\"rx\" value=\"-50\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"2067\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"15\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"9\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-81\"/><int name=\"y\" value=\"-14\"/><int name=\"rx\" value=\"-50\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"2067\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"17\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"28\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-1901\"/><int name=\"y\" value=\"-408\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"4000\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"16\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"27\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-2273\"/><int name=\"y\" value=\"-455\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"4000\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"18\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"29\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-1934\"/><int name=\"y\" value=\"-98\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"4000\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"19\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"30\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-1291\"/><int name=\"y\" value=\"-443\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"4000\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"20\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"31\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-1226\"/><int name=\"y\" value=\"-125\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"4000\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"21\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"32\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-855\"/><int name=\"y\" value=\"-466\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"1\"/><int name=\"cx\" value=\"4000\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"23\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"33\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-277\"/><int name=\"y\" value=\"-427\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"22\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"27\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-649\"/><int name=\"y\" value=\"-467\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"24\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"34\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-426\"/><int name=\"y\" value=\"-66\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"25\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"35\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"333\"/><int name=\"y\" value=\"-428\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"26\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"36\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"443\"/><int name=\"y\" value=\"-96\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"28\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"37\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"1060\"/><int name=\"y\" value=\"-354\"/><int name=\"rx\" value=\"-85\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"27\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"32\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"769\"/><int name=\"y\" value=\"-478\"/><int name=\"rx\" value=\"-80\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"29\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"10\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"1207\"/><int name=\"y\" value=\"-17\"/><int name=\"rx\" value=\"-85\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"30\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"38\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-1607\"/><int name=\"y\" value=\"-340\"/><int name=\"rx\" value=\"-85\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"31\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"11\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"-1788\"/><int name=\"y\" value=\"-67\"/><int name=\"rx\" value=\"-85\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"32\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"39\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"1814\"/><int name=\"y\" value=\"-107\"/><int name=\"rx\" value=\"-85\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"33\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"12\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"1833\"/><int name=\"y\" value=\"-94\"/><int name=\"rx\" value=\"-85\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"34\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"0\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"40\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"46\"/><int name=\"y\" value=\"-170\"/><int name=\"rx\" value=\"-85\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"35\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"1\"/><int name=\"ani\" value=\"0\"/><int name=\"no\" value=\"41\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"0\"/><int name=\"y\" value=\"0\"/><int name=\"rx\" value=\"-100\"/><int name=\"ry\" value=\"-100\"/><int name=\"type\" value=\"3\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"36\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"1\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"13\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"0\"/><int name=\"y\" value=\"0\"/><int name=\"rx\" value=\"0\"/><int name=\"ry\" value=\"0\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"37\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"1\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"14\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"0\"/><int name=\"y\" value=\"0\"/><int name=\"rx\" value=\"0\"/><int name=\"ry\" value=\"0\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"38\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"1\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"15\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"0\"/><int name=\"y\" value=\"0\"/><int name=\"rx\" value=\"0\"/><int name=\"ry\" value=\"0\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"39\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"1\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"16\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"0\"/><int name=\"y\" value=\"0\"/><int name=\"rx\" value=\"0\"/><int name=\"ry\" value=\"0\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"40\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"1\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"17\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"0\"/><int name=\"y\" value=\"0\"/><int name=\"rx\" value=\"0\"/><int name=\"ry\" value=\"0\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"41\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"1\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"18\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"0\"/><int name=\"y\" value=\"0\"/><int name=\"rx\" value=\"0\"/><int name=\"ry\" value=\"0\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir><imgdir name=\"42\"><string name=\"bS\" value=\"dragonRoad\"/><int name=\"front\" value=\"1\"/><int name=\"ani\" value=\"1\"/><int name=\"no\" value=\"19\"/><int name=\"f\" value=\"0\"/><int name=\"x\" value=\"0\"/><int name=\"y\" value=\"0\"/><int name=\"rx\" value=\"0\"/><int name=\"ry\" value=\"0\"/><int name=\"type\" value=\"0\"/><int name=\"cx\" value=\"0\"/><int name=\"cy\" value=\"0\"/><int name=\"a\" value=\"255\"/></imgdir></imgdir><imgdir name=\"life\"><imgdir name=\"0\"><string name=\"type\" value=\"m\"/><string name=\"id\" value=\"9300379\"/><int name=\"x\" value=\"2099\"/><int name=\"y\" value=\"-9\"/><int name=\"mobTime\" value=\"0\"/><int name=\"f\" value=\"1\"/><int name=\"hide\" value=\"0\"/><int name=\"fh\" value=\"1\"/><int name=\"cy\" value=\"2\"/><int name=\"rx0\" value=\"1235\"/><int name=\"rx1\" value=\"2635\"/></imgdir><imgdir name=\"1\"><string name=\"type\" value=\"m\"/><string name=\"id\" value=\"9300379\"/><int name=\"x\" value=\"1799\"/><int name=\"y\" value=\"-11\"/><int name=\"mobTime\" value=\"0\"/><int name=\"f\" value=\"0\"/><int name=\"hide\" value=\"0\"/><int name=\"fh\" value=\"2\"/><int name=\"cy\" value=\"2\"/><int name=\"rx0\" value=\"1235\"/><int name=\"rx1\" value=\"2635\"/></imgdir><imgdir name=\"2\"><string name=\"type\" value=\"m\"/><string name=\"id\" value=\"9300379\"/><int name=\"x\" value=\"1515\"/><int name=\"y\" value=\"-3\"/><int name=\"mobTime\" value=\"0\"/><int name=\"f\" value=\"1\"/><int name=\"hide\" value=\"0\"/><int name=\"fh\" value=\"8\"/><int name=\"cy\" value=\"2\"/><int name=\"rx0\" value=\"1235\"/><int name=\"rx1\" value=\"2635\"/></imgdir></imgdir><imgdir name=\"reactor\"></imgdir><imgdir name=\"0\"><imgdir name=\"info\"></imgdir><imgdir name=\"tile\"></imgdir><imgdir name=\"obj\"></imgdir></imgdir><imgdir name=\"1\"><imgdir name=\"info\"></imgdir><imgdir name=\"tile\"></imgdir><imgdir name=\"obj\"></imgdir></imgdir><imgdir name=\"2\"><imgdir name=\"info\"></imgdir><imgdir name=\"tile\"></imgdir><imgdir name=\"obj\"><imgdir name=\"0\"><string name=\"oS\" value=\"dungeon3\"/><string name=\"l0\" value=\"dragonRoad\"/><string name=\"l1\" value=\"nature1\"/><string name=\"l2\" value=\"3\"/><int name=\"x\" value=\"1831\"/><int name=\"y\" value=\"-67\"/><int name=\"z\" value=\"9\"/><int name=\"f\" value=\"0\"/><int name=\"zM\" value=\"0\"/><int name=\"r\" value=\"0\"/></imgdir><imgdir name=\"1\"><string name=\"oS\" value=\"dungeon3\"/><string name=\"l0\" value=\"dragonRoad\"/><string name=\"l1\" value=\"nature2\"/><string name=\"l2\" value=\"17\"/><int name=\"x\" value=\"2268\"/><int name=\"y\" value=\"-21\"/><int name=\"z\" value=\"9\"/><int name=\"f\" value=\"0\"/><int name=\"zM\" value=\"0\"/><int name=\"r\" value=\"0\"/></imgdir><imgdir name=\"2\"><string name=\"oS\" value=\"acc12\"/><string name=\"l0\" value=\"aran\"/><string name=\"l1\" value=\"tree\"/><string name=\"l2\" value=\"0\"/><int name=\"x\" value=\"1457\"/><int name=\"y\" value=\"-73\"/><int name=\"z\" value=\"9\"/><int name=\"f\" value=\"0\"/><int name=\"zM\" value=\"0\"/><int name=\"r\" value=\"0\"/></imgdir><imgdir name=\"3\"><string name=\"oS\" value=\"acc12\"/><string name=\"l0\" value=\"aran\"/><string name=\"l1\" value=\"tree\"/><string name=\"l2\" value=\"1\"/><int name=\"x\" value=\"1552\"/><int name=\"y\" value=\"-41\"/><int name=\"z\" value=\"10\"/><int name=\"f\" value=\"0\"/><int name=\"zM\" value=\"0\"/><int name=\"r\" value=\"0\"/></imgdir><imgdir name=\"4\"><string name=\"oS\" value=\"acc12\"/><string name=\"l0\" value=\"aran\"/><string name=\"l1\" value=\"grass\"/><string name=\"l2\" value=\"3\"/><int name=\"x\" value=\"2178\"/><int name=\"y\" value=\"16\"/><int name=\"z\" value=\"9\"/><int name=\"f\" value=\"0\"/><int name=\"zM\" value=\"0\"/><int name=\"r\" value=\"0\"/></imgdir></imgdir></imgdir><imgdir name=\"3\"><imgdir name=\"info\"></imgdir><imgdir name=\"tile\"></imgdir><imgdir name=\"obj\"></imgdir></imgdir><imgdir name=\"4\"><imgdir name=\"info\"><string name=\"tS\" value=\"dragonRoad\"/><int name=\"tSMag\" value=\"1\"/></imgdir><imgdir name=\"tile\"><imgdir name=\"49\"><int name=\"x\" value=\"2385\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"47\"><int name=\"x\" value=\"2385\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"51\"><int name=\"x\" value=\"2295\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"4\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"45\"><int name=\"x\" value=\"2295\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"54\"><int name=\"x\" value=\"2205\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"4\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"56\"><int name=\"x\" value=\"2205\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"52\"><int name=\"x\" value=\"2475\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"3\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"62\"><int name=\"x\" value=\"2475\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"53\"><int name=\"x\" value=\"2565\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"4\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"64\"><int name=\"x\" value=\"2565\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"55\"><int name=\"x\" value=\"2205\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"5\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"66\"><int name=\"x\" value=\"2205\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"73\"><int name=\"x\" value=\"2295\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"48\"><int name=\"x\" value=\"2295\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"69\"><int name=\"x\" value=\"2205\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"74\"><int name=\"x\" value=\"2295\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"50\"><int name=\"x\" value=\"2385\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"3\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"67\"><int name=\"x\" value=\"2385\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"70\"><int name=\"x\" value=\"2385\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"71\"><int name=\"x\" value=\"2475\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"46\"><int name=\"x\" value=\"2475\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"5\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"61\"><int name=\"x\" value=\"2565\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"65\"><int name=\"x\" value=\"2565\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"4\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"60\"><int name=\"x\" value=\"2475\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"63\"><int name=\"x\" value=\"2565\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"57\"><int name=\"x\" value=\"2115\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"3\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"59\"><int name=\"x\" value=\"2115\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"76\"><int name=\"x\" value=\"2115\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"4\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"78\"><int name=\"x\" value=\"2115\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"58\"><int name=\"x\" value=\"2115\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"72\"><int name=\"x\" value=\"2025\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"75\"><int name=\"x\" value=\"2025\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"5\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"79\"><int name=\"x\" value=\"2025\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"68\"><int name=\"x\" value=\"1665\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"77\"><int name=\"x\" value=\"1755\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"5\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"41\"><int name=\"x\" value=\"1395\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"3\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"20\"><int name=\"x\" value=\"1305\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"4\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"32\"><int name=\"x\" value=\"1215\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"43\"><int name=\"x\" value=\"1395\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"44\"><int name=\"x\" value=\"1305\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"15\"><int name=\"x\" value=\"1305\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"22\"><int name=\"x\" value=\"1215\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"40\"><int name=\"x\" value=\"1215\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"21\"><int name=\"x\" value=\"1305\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"13\"><int name=\"x\" value=\"1395\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"36\"><int name=\"x\" value=\"1665\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"37\"><int name=\"x\" value=\"1665\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"1\"><int name=\"x\" value=\"1935\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"16\"><int name=\"x\" value=\"1935\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"5\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"42\"><int name=\"x\" value=\"2025\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"24\"><int name=\"x\" value=\"1845\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"25\"><int name=\"x\" value=\"1575\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"5\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"3\"><int name=\"x\" value=\"1575\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"2\"><int name=\"x\" value=\"1575\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"39\"><int name=\"x\" value=\"1845\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"4\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"35\"><int name=\"x\" value=\"1935\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"14\"><int name=\"x\" value=\"1755\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"7\"><int name=\"x\" value=\"1485\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"0\"><int name=\"x\" value=\"1755\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"4\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"8\"><int name=\"x\" value=\"1395\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"38\"><int name=\"x\" value=\"1575\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"34\"><int name=\"x\" value=\"1485\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"5\"><int name=\"x\" value=\"1485\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"5\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"6\"><int name=\"x\" value=\"1755\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"11\"><int name=\"x\" value=\"1755\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"3\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"4\"><int name=\"x\" value=\"2025\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"27\"><int name=\"x\" value=\"1845\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"33\"><int name=\"x\" value=\"1845\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"17\"><int name=\"x\" value=\"1935\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"18\"><int name=\"x\" value=\"1935\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"23\"><int name=\"x\" value=\"1395\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"12\"><int name=\"x\" value=\"1305\"/><int name=\"y\" value=\"210\"/><string name=\"u\" value=\"enH1\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"29\"><int name=\"x\" value=\"1485\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"3\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"31\"><int name=\"x\" value=\"1215\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"10\"><int name=\"x\" value=\"1485\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"3\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"26\"><int name=\"x\" value=\"1215\"/><int name=\"y\" value=\"90\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"5\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"28\"><int name=\"x\" value=\"1845\"/><int name=\"y\" value=\"150\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"2\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"30\"><int name=\"x\" value=\"1665\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"1\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"9\"><int name=\"x\" value=\"1665\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"bsc\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir><imgdir name=\"19\"><int name=\"x\" value=\"1575\"/><int name=\"y\" value=\"30\"/><string name=\"u\" value=\"enH0\"/><int name=\"no\" value=\"0\"/><int name=\"zM\" value=\"0\"/></imgdir></imgdir><imgdir name=\"obj\"></imgdir></imgdir><imgdir name=\"5\"><imgdir name=\"info\"></imgdir><imgdir name=\"tile\"></imgdir><imgdir name=\"obj\"></imgdir></imgdir><imgdir name=\"6\"><imgdir name=\"info\"></imgdir><imgdir name=\"tile\"></imgdir><imgdir name=\"obj\"></imgdir></imgdir><imgdir name=\"7\"><imgdir name=\"info\"></imgdir><imgdir name=\"tile\"></imgdir><imgdir name=\"obj\"></imgdir></imgdir><imgdir name=\"user\"><imgdir name=\"0\"><imgdir name=\"cond\"><int name=\"target\" value=\"1\"/><int name=\"gender\" value=\"0\"/></imgdir><imgdir name=\"look\"><int name=\"cap\" value=\"1002954\"/><int name=\"clothes\" value=\"1052195\"/><int name=\"cape\" value=\"1102211\"/><int name=\"shoes\" value=\"1072381\"/><int name=\"weapon\" value=\"1442076\"/></imgdir><imgdir name=\"stat\"><int name=\"str\" value=\"999\"/><int name=\"dex\" value=\"999\"/><int name=\"int\" value=\"999\"/><int name=\"luk\" value=\"999\"/><int name=\"pad\" value=\"255\"/><int name=\"mad\" value=\"0\"/><int name=\"jump\" value=\"140\"/><int name=\"speed\" value=\"120\"/><int name=\"acc\" value=\"999\"/><int name=\"eva\" value=\"999\"/></imgdir></imgdir><imgdir name=\"1\"><imgdir name=\"cond\"><int name=\"target\" value=\"1\"/><int name=\"gender\" value=\"1\"/></imgdir><imgdir name=\"look\"><int name=\"cap\" value=\"1002954\"/><int name=\"clothes\" value=\"1052196\"/><int name=\"cape\" value=\"1102211\"/><int name=\"shoes\" value=\"1072381\"/><int name=\"weapon\" value=\"1442076\"/></imgdir><imgdir name=\"stat\"><int name=\"str\" value=\"999\"/><int name=\"dex\" value=\"999\"/><int name=\"int\" value=\"999\"/><int name=\"luk\" value=\"999\"/><int name=\"pad\" value=\"255\"/><int name=\"mad\" value=\"0\"/><int name=\"jump\" value=\"140\"/><int name=\"speed\" value=\"120\"/><int name=\"acc\" value=\"999\"/><int name=\"eva\" value=\"999\"/></imgdir></imgdir><imgdir name=\"2\"><imgdir name=\"cond\"><int name=\"target\" value=\"2\"/></imgdir><imgdir name=\"look\"><int name=\"cap\" value=\"1002955\"/><int name=\"clothes\" value=\"1052197\"/><int name=\"shoes\" value=\"1072382\"/><int name=\"weapon\" value=\"1442010\"/></imgdir><imgdir name=\"stat\"><int name=\"str\" value=\"999\"/><int name=\"dex\" value=\"999\"/><int name=\"int\" value=\"999\"/><int name=\"luk\" value=\"999\"/><int name=\"pad\" value=\"255\"/><int name=\"mad\" value=\"0\"/><int name=\"jump\" value=\"140\"/><int name=\"speed\" value=\"120\"/><int name=\"acc\" value=\"999\"/><int name=\"eva\" value=\"999\"/></imgdir></imgdir></imgdir><imgdir name=\"foothold\"><imgdir name=\"4\"><imgdir name=\"0\"><imgdir name=\"1\"><int name=\"x1\" value=\"2025\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"2115\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"3\"/><int name=\"next\" value=\"14\"/></imgdir><imgdir name=\"2\"><int name=\"x1\" value=\"1755\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"1845\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"7\"/><int name=\"next\" value=\"6\"/></imgdir><imgdir name=\"3\"><int name=\"x1\" value=\"1935\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"2025\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"6\"/><int name=\"next\" value=\"1\"/></imgdir><imgdir name=\"4\"><int name=\"x1\" value=\"1575\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"1665\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"8\"/><int name=\"next\" value=\"7\"/></imgdir><imgdir name=\"5\"><int name=\"x1\" value=\"1215\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"1305\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"0\"/><int name=\"next\" value=\"10\"/></imgdir><imgdir name=\"6\"><int name=\"x1\" value=\"1845\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"1935\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"2\"/><int name=\"next\" value=\"3\"/></imgdir><imgdir name=\"7\"><int name=\"x1\" value=\"1665\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"1755\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"4\"/><int name=\"next\" value=\"2\"/></imgdir><imgdir name=\"8\"><int name=\"x1\" value=\"1485\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"1575\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"9\"/><int name=\"next\" value=\"4\"/></imgdir><imgdir name=\"9\"><int name=\"x1\" value=\"1395\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"1485\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"10\"/><int name=\"next\" value=\"8\"/></imgdir><imgdir name=\"10\"><int name=\"x1\" value=\"1305\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"1395\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"5\"/><int name=\"next\" value=\"9\"/></imgdir><imgdir name=\"11\"><int name=\"x1\" value=\"2295\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"2385\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"13\"/><int name=\"next\" value=\"12\"/></imgdir><imgdir name=\"12\"><int name=\"x1\" value=\"2385\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"2475\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"11\"/><int name=\"next\" value=\"15\"/></imgdir><imgdir name=\"13\"><int name=\"x1\" value=\"2205\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"2295\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"14\"/><int name=\"next\" value=\"11\"/></imgdir><imgdir name=\"14\"><int name=\"x1\" value=\"2115\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"2205\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"1\"/><int name=\"next\" value=\"13\"/></imgdir><imgdir name=\"15\"><int name=\"x1\" value=\"2475\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"2565\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"12\"/><int name=\"next\" value=\"16\"/></imgdir><imgdir name=\"16\"><int name=\"x1\" value=\"2565\"/><int name=\"y1\" value=\"2\"/><int name=\"x2\" value=\"2655\"/><int name=\"y2\" value=\"2\"/><int name=\"prev\" value=\"15\"/><int name=\"next\" value=\"0\"/></imgdir></imgdir></imgdir></imgdir><imgdir name=\"ladderRope\"></imgdir><imgdir name=\"miniMap\"><canvas name=\"canvas\" width=\"96\" height=\"50\"></canvas><int name=\"width\" value=\"1536\"/><int name=\"height\" value=\"801\"/><int name=\"centerX\" value=\"-1167\"/><int name=\"centerY\" value=\"505\"/><int name=\"mag\" value=\"4\"/></imgdir><imgdir name=\"portal\"><imgdir name=\"0\"><string name=\"pn\" value=\"sp\"/><int name=\"pt\" value=\"0\"/><int name=\"x\" value=\"2522\"/><int name=\"y\" value=\"-107\"/><int name=\"tm\" value=\"999999999\"/><string name=\"tn\" value=\"\"/></imgdir><imgdir name=\"1\"><string name=\"pn\" value=\"east00\"/><int name=\"pt\" value=\"2\"/><int name=\"x\" value=\"2569\"/><int name=\"y\" value=\"2\"/><int name=\"tm\" value=\"914000100\"/><string name=\"tn\" value=\"out00\"/></imgdir><imgdir name=\"2\"><string name=\"pn\" value=\"west00\"/><int name=\"pt\" value=\"7\"/><int name=\"x\" value=\"1305\"/><int name=\"y\" value=\"-1\"/><int name=\"tm\" value=\"999999999\"/><string name=\"tn\" value=\"\"/><int name=\"horizontalImpact\" value=\"0\"/><string name=\"script\" value=\"aranTutorOut2\"/></imgdir><imgdir name=\"3\"><string name=\"pn\" value=\"tutor02\"/><int name=\"pt\" value=\"9\"/><int name=\"x\" value=\"1936\"/><int name=\"y\" value=\"-45\"/><int name=\"tm\" value=\"999999999\"/><string name=\"tn\" value=\"\"/><string name=\"script\" value=\"aranTutorArrow1\"/><int name=\"hideTooltip\" value=\"0\"/><int name=\"onlyOnce\" value=\"0\"/><int name=\"delay\" value=\"200\"/></imgdir><imgdir name=\"4\"><string name=\"pn\" value=\"tutor00\"/><int name=\"pt\" value=\"9\"/><int name=\"x\" value=\"2387\"/><int name=\"y\" value=\"-46\"/><int name=\"tm\" value=\"999999999\"/><string name=\"tn\" value=\"\"/><int name=\"delay\" value=\"200\"/><string name=\"script\" value=\"aranTutorGuide0\"/><int name=\"hideTooltip\" value=\"0\"/><int name=\"onlyOnce\" value=\"0\"/></imgdir><imgdir name=\"5\"><string name=\"pn\" value=\"tutor01\"/><int name=\"pt\" value=\"9\"/><int name=\"x\" value=\"2119\"/><int name=\"y\" value=\"-45\"/><int name=\"tm\" value=\"999999999\"/><string name=\"tn\" value=\"\"/><int name=\"horizontalImpact\" value=\"0\"/><string name=\"script\" value=\"aranTutorMono3\"/><int name=\"hideTooltip\" value=\"0\"/><int name=\"onlyOnce\" value=\"0\"/><int name=\"delay\" value=\"200\"/></imgdir></imgdir></imgdir>\n\\ No newline at end of file\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n+<imgdir name=\"914000200.img\">\n+  <imgdir name=\"info\">\n+    <int name=\"version\" value=\"10\"/>\n+    <int name=\"cloud\" value=\"0\"/>\n+    <int name=\"town\" value=\"1\"/>\n+    <int name=\"swim\" value=\"0\"/>\n+    <int name=\"returnMap\" value=\"914000000\"/>\n+    <int name=\"forcedReturn\" value=\"914000000\"/>\n+    <float name=\"mobRate\" value=\"0.6999999\"/>\n+    <string name=\"bgm\" value=\"Bgm14/DragonNest\"/>\n+    <string name=\"mapMark\" value=\"BlackDragon\"/>\n+    <int name=\"fly\" value=\"0\"/>\n+    <int name=\"noMapCmd\" value=\"0\"/>\n+    <int name=\"hideMinimap\" value=\"0\"/>\n+    <int name=\"fieldLimit\" value=\"3009276\"/>\n+    <string name=\"onFirstUserEnter\" value=\"\"/>\n+    <string name=\"onUserEnter\" value=\"\"/>\n+    <int name=\"VRTop\" value=\"-900\"/>\n+    <int name=\"VRLeft\" value=\"1216\"/>\n+    <int name=\"VRBottom\" value=\"180\"/>\n+    <int name=\"VRRight\" value=\"2654\"/>\n+    <int name=\"fieldType\" value=\"22\"/>\n+  </imgdir>\n+  <imgdir name=\"back\">\n+    <imgdir name=\"0\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"0\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"20\"/>\n+      <int name=\"y\" value=\"-172\"/>\n+      <int name=\"rx\" value=\"0\"/>\n+      <int name=\"ry\" value=\"0\"/>\n+      <int name=\"type\" value=\"3\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"1\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"1\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"132\"/>\n+      <int name=\"y\" value=\"-365\"/>\n+      <int name=\"rx\" value=\"-10\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"2\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"0\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"247\"/>\n+      <int name=\"y\" value=\"-408\"/>\n+      <int name=\"rx\" value=\"-10\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"3\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"2\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-643\"/>\n+      <int name=\"y\" value=\"-184\"/>\n+      <int name=\"rx\" value=\"-20\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"4\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"3\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-214\"/>\n+      <int name=\"y\" value=\"-184\"/>\n+      <int name=\"rx\" value=\"-20\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"5\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"4\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"215\"/>\n+      <int name=\"y\" value=\"-184\"/>\n+      <int name=\"rx\" value=\"-20\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"6\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"5\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"644\"/>\n+      <int name=\"y\" value=\"-184\"/>\n+      <int name=\"rx\" value=\"-20\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"7\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"6\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-301\"/>\n+      <int name=\"y\" value=\"-94\"/>\n+      <int name=\"rx\" value=\"-2\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"4\"/>\n+      <int name=\"cx\" value=\"1500\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"8\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"7\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"380\"/>\n+      <int name=\"y\" value=\"-73\"/>\n+      <int name=\"rx\" value=\"-4\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"4\"/>\n+      <int name=\"cx\" value=\"2000\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"9\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"9\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-689\"/>\n+      <int name=\"y\" value=\"-246\"/>\n+      <int name=\"rx\" value=\"-50\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"2067\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"10\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"10\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"0\"/>\n+      <int name=\"y\" value=\"-113\"/>\n+      <int name=\"rx\" value=\"-50\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"2067\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"11\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"12\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"670\"/>\n+      <int name=\"y\" value=\"-255\"/>\n+      <int name=\"rx\" value=\"-50\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"2067\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"12\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"6\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-1193\"/>\n+      <int name=\"y\" value=\"-39\"/>\n+      <int name=\"rx\" value=\"-50\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"2067\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"13\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"7\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"1398\"/>\n+      <int name=\"y\" value=\"-13\"/>\n+      <int name=\"rx\" value=\"-50\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"2067\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"14\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"8\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"1728\"/>\n+      <int name=\"y\" value=\"-52\"/>\n+      <int name=\"rx\" value=\"-50\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"2067\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"15\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"9\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-81\"/>\n+      <int name=\"y\" value=\"-14\"/>\n+      <int name=\"rx\" value=\"-50\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"2067\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"17\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"28\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-1901\"/>\n+      <int name=\"y\" value=\"-408\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"4000\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"16\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"27\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-2273\"/>\n+      <int name=\"y\" value=\"-455\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"4000\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"18\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"29\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-1934\"/>\n+      <int name=\"y\" value=\"-98\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"4000\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"19\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"30\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-1291\"/>\n+      <int name=\"y\" value=\"-443\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"4000\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"20\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"31\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-1226\"/>\n+      <int name=\"y\" value=\"-125\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"4000\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"21\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"32\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-855\"/>\n+      <int name=\"y\" value=\"-466\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"1\"/>\n+      <int name=\"cx\" value=\"4000\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"23\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"33\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-277\"/>\n+      <int name=\"y\" value=\"-427\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"22\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"27\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-649\"/>\n+      <int name=\"y\" value=\"-467\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"24\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"34\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-426\"/>\n+      <int name=\"y\" value=\"-66\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"25\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"35\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"333\"/>\n+      <int name=\"y\" value=\"-428\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"26\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"36\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"443\"/>\n+      <int name=\"y\" value=\"-96\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"28\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"37\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"1060\"/>\n+      <int name=\"y\" value=\"-354\"/>\n+      <int name=\"rx\" value=\"-85\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"27\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"32\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"769\"/>\n+      <int name=\"y\" value=\"-478\"/>\n+      <int name=\"rx\" value=\"-80\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"29\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"10\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"1207\"/>\n+      <int name=\"y\" value=\"-17\"/>\n+      <int name=\"rx\" value=\"-85\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"30\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"38\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-1607\"/>\n+      <int name=\"y\" value=\"-340\"/>\n+      <int name=\"rx\" value=\"-85\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"31\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"11\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"-1788\"/>\n+      <int name=\"y\" value=\"-67\"/>\n+      <int name=\"rx\" value=\"-85\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"32\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"39\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"1814\"/>\n+      <int name=\"y\" value=\"-107\"/>\n+      <int name=\"rx\" value=\"-85\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"33\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"12\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"1833\"/>\n+      <int name=\"y\" value=\"-94\"/>\n+      <int name=\"rx\" value=\"-85\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"34\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"0\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"40\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"46\"/>\n+      <int name=\"y\" value=\"-170\"/>\n+      <int name=\"rx\" value=\"-85\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"35\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"1\"/>\n+      <int name=\"ani\" value=\"0\"/>\n+      <int name=\"no\" value=\"41\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"0\"/>\n+      <int name=\"y\" value=\"0\"/>\n+      <int name=\"rx\" value=\"-100\"/>\n+      <int name=\"ry\" value=\"-100\"/>\n+      <int name=\"type\" value=\"3\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"36\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"1\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"13\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"0\"/>\n+      <int name=\"y\" value=\"0\"/>\n+      <int name=\"rx\" value=\"0\"/>\n+      <int name=\"ry\" value=\"0\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"37\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"1\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"14\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"0\"/>\n+      <int name=\"y\" value=\"0\"/>\n+      <int name=\"rx\" value=\"0\"/>\n+      <int name=\"ry\" value=\"0\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"38\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"1\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"15\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"0\"/>\n+      <int name=\"y\" value=\"0\"/>\n+      <int name=\"rx\" value=\"0\"/>\n+      <int name=\"ry\" value=\"0\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"39\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"1\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"16\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"0\"/>\n+      <int name=\"y\" value=\"0\"/>\n+      <int name=\"rx\" value=\"0\"/>\n+      <int name=\"ry\" value=\"0\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"40\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"1\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"17\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"0\"/>\n+      <int name=\"y\" value=\"0\"/>\n+      <int name=\"rx\" value=\"0\"/>\n+      <int name=\"ry\" value=\"0\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"41\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"1\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"18\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"0\"/>\n+      <int name=\"y\" value=\"0\"/>\n+      <int name=\"rx\" value=\"0\"/>\n+      <int name=\"ry\" value=\"0\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+    <imgdir name=\"42\">\n+      <string name=\"bS\" value=\"dragonRoad\"/>\n+      <int name=\"front\" value=\"1\"/>\n+      <int name=\"ani\" value=\"1\"/>\n+      <int name=\"no\" value=\"19\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"x\" value=\"0\"/>\n+      <int name=\"y\" value=\"0\"/>\n+      <int name=\"rx\" value=\"0\"/>\n+      <int name=\"ry\" value=\"0\"/>\n+      <int name=\"type\" value=\"0\"/>\n+      <int name=\"cx\" value=\"0\"/>\n+      <int name=\"cy\" value=\"0\"/>\n+      <int name=\"a\" value=\"255\"/>\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"life\">\n+    <imgdir name=\"0\">\n+      <string name=\"type\" value=\"m\"/>\n+      <string name=\"id\" value=\"9300379\"/>\n+      <int name=\"x\" value=\"2099\"/>\n+      <int name=\"y\" value=\"-9\"/>\n+      <int name=\"mobTime\" value=\"0\"/>\n+      <int name=\"f\" value=\"1\"/>\n+      <int name=\"hide\" value=\"0\"/>\n+      <int name=\"fh\" value=\"1\"/>\n+      <int name=\"cy\" value=\"2\"/>\n+      <int name=\"rx0\" value=\"1235\"/>\n+      <int name=\"rx1\" value=\"2635\"/>\n+    </imgdir>\n+    <imgdir name=\"1\">\n+      <string name=\"type\" value=\"m\"/>\n+      <string name=\"id\" value=\"9300379\"/>\n+      <int name=\"x\" value=\"1799\"/>\n+      <int name=\"y\" value=\"-11\"/>\n+      <int name=\"mobTime\" value=\"0\"/>\n+      <int name=\"f\" value=\"0\"/>\n+      <int name=\"hide\" value=\"0\"/>\n+      <int name=\"fh\" value=\"2\"/>\n+      <int name=\"cy\" value=\"2\"/>\n+      <int name=\"rx0\" value=\"1235\"/>\n+      <int name=\"rx1\" value=\"2635\"/>\n+    </imgdir>\n+    <imgdir name=\"2\">\n+      <string name=\"type\" value=\"m\"/>\n+      <string name=\"id\" value=\"9300379\"/>\n+      <int name=\"x\" value=\"1515\"/>\n+      <int name=\"y\" value=\"-3\"/>\n+      <int name=\"mobTime\" value=\"0\"/>\n+      <int name=\"f\" value=\"1\"/>\n+      <int name=\"hide\" value=\"0\"/>\n+      <int name=\"fh\" value=\"8\"/>\n+      <int name=\"cy\" value=\"2\"/>\n+      <int name=\"rx0\" value=\"1235\"/>\n+      <int name=\"rx1\" value=\"2635\"/>\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"reactor\">\n+  </imgdir>\n+  <imgdir name=\"0\">\n+    <imgdir name=\"info\">\n+    </imgdir>\n+    <imgdir name=\"tile\">\n+    </imgdir>\n+    <imgdir name=\"obj\">\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"1\">\n+    <imgdir name=\"info\">\n+    </imgdir>\n+    <imgdir name=\"tile\">\n+    </imgdir>\n+    <imgdir name=\"obj\">\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"2\">\n+    <imgdir name=\"info\">\n+    </imgdir>\n+    <imgdir name=\"tile\">\n+    </imgdir>\n+    <imgdir name=\"obj\">\n+      <imgdir name=\"0\">\n+        <string name=\"oS\" value=\"dungeon3\"/>\n+        <string name=\"l0\" value=\"dragonRoad\"/>\n+        <string name=\"l1\" value=\"nature1\"/>\n+        <string name=\"l2\" value=\"3\"/>\n+        <int name=\"x\" value=\"1831\"/>\n+        <int name=\"y\" value=\"-67\"/>\n+        <int name=\"z\" value=\"9\"/>\n+        <int name=\"f\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+        <int name=\"r\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"1\">\n+        <string name=\"oS\" value=\"dungeon3\"/>\n+        <string name=\"l0\" value=\"dragonRoad\"/>\n+        <string name=\"l1\" value=\"nature2\"/>\n+        <string name=\"l2\" value=\"17\"/>\n+        <int name=\"x\" value=\"2268\"/>\n+        <int name=\"y\" value=\"-21\"/>\n+        <int name=\"z\" value=\"9\"/>\n+        <int name=\"f\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+        <int name=\"r\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"2\">\n+        <string name=\"oS\" value=\"acc12\"/>\n+        <string name=\"l0\" value=\"aran\"/>\n+        <string name=\"l1\" value=\"tree\"/>\n+        <string name=\"l2\" value=\"0\"/>\n+        <int name=\"x\" value=\"1457\"/>\n+        <int name=\"y\" value=\"-73\"/>\n+        <int name=\"z\" value=\"9\"/>\n+        <int name=\"f\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+        <int name=\"r\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"3\">\n+        <string name=\"oS\" value=\"acc12\"/>\n+        <string name=\"l0\" value=\"aran\"/>\n+        <string name=\"l1\" value=\"tree\"/>\n+        <string name=\"l2\" value=\"1\"/>\n+        <int name=\"x\" value=\"1552\"/>\n+        <int name=\"y\" value=\"-41\"/>\n+        <int name=\"z\" value=\"10\"/>\n+        <int name=\"f\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+        <int name=\"r\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"4\">\n+        <string name=\"oS\" value=\"acc12\"/>\n+        <string name=\"l0\" value=\"aran\"/>\n+        <string name=\"l1\" value=\"grass\"/>\n+        <string name=\"l2\" value=\"3\"/>\n+        <int name=\"x\" value=\"2178\"/>\n+        <int name=\"y\" value=\"16\"/>\n+        <int name=\"z\" value=\"9\"/>\n+        <int name=\"f\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+        <int name=\"r\" value=\"0\"/>\n+      </imgdir>\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"3\">\n+    <imgdir name=\"info\">\n+    </imgdir>\n+    <imgdir name=\"tile\">\n+    </imgdir>\n+    <imgdir name=\"obj\">\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"4\">\n+    <imgdir name=\"info\">\n+      <string name=\"tS\" value=\"dragonRoad\"/>\n+      <int name=\"tSMag\" value=\"1\"/>\n+    </imgdir>\n+    <imgdir name=\"tile\">\n+      <imgdir name=\"49\">\n+        <int name=\"x\" value=\"2385\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"47\">\n+        <int name=\"x\" value=\"2385\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"51\">\n+        <int name=\"x\" value=\"2295\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"4\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"45\">\n+        <int name=\"x\" value=\"2295\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"54\">\n+        <int name=\"x\" value=\"2205\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"4\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"56\">\n+        <int name=\"x\" value=\"2205\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"52\">\n+        <int name=\"x\" value=\"2475\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"3\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"62\">\n+        <int name=\"x\" value=\"2475\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"53\">\n+        <int name=\"x\" value=\"2565\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"4\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"64\">\n+        <int name=\"x\" value=\"2565\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"55\">\n+        <int name=\"x\" value=\"2205\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"5\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"66\">\n+        <int name=\"x\" value=\"2205\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"73\">\n+        <int name=\"x\" value=\"2295\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"48\">\n+        <int name=\"x\" value=\"2295\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"69\">\n+        <int name=\"x\" value=\"2205\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"74\">\n+        <int name=\"x\" value=\"2295\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"50\">\n+        <int name=\"x\" value=\"2385\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"3\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"67\">\n+        <int name=\"x\" value=\"2385\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"70\">\n+        <int name=\"x\" value=\"2385\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"71\">\n+        <int name=\"x\" value=\"2475\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"46\">\n+        <int name=\"x\" value=\"2475\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"5\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"61\">\n+        <int name=\"x\" value=\"2565\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"65\">\n+        <int name=\"x\" value=\"2565\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"4\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"60\">\n+        <int name=\"x\" value=\"2475\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"63\">\n+        <int name=\"x\" value=\"2565\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"57\">\n+        <int name=\"x\" value=\"2115\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"3\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"59\">\n+        <int name=\"x\" value=\"2115\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"76\">\n+        <int name=\"x\" value=\"2115\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"4\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"78\">\n+        <int name=\"x\" value=\"2115\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"58\">\n+        <int name=\"x\" value=\"2115\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"72\">\n+        <int name=\"x\" value=\"2025\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"75\">\n+        <int name=\"x\" value=\"2025\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"5\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"79\">\n+        <int name=\"x\" value=\"2025\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"68\">\n+        <int name=\"x\" value=\"1665\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"77\">\n+        <int name=\"x\" value=\"1755\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"5\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"41\">\n+        <int name=\"x\" value=\"1395\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"3\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"20\">\n+        <int name=\"x\" value=\"1305\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"4\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"32\">\n+        <int name=\"x\" value=\"1215\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"43\">\n+        <int name=\"x\" value=\"1395\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"44\">\n+        <int name=\"x\" value=\"1305\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"15\">\n+        <int name=\"x\" value=\"1305\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"22\">\n+        <int name=\"x\" value=\"1215\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"40\">\n+        <int name=\"x\" value=\"1215\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"21\">\n+        <int name=\"x\" value=\"1305\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"13\">\n+        <int name=\"x\" value=\"1395\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"36\">\n+        <int name=\"x\" value=\"1665\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"37\">\n+        <int name=\"x\" value=\"1665\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"1\">\n+        <int name=\"x\" value=\"1935\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"16\">\n+        <int name=\"x\" value=\"1935\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"5\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"42\">\n+        <int name=\"x\" value=\"2025\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"24\">\n+        <int name=\"x\" value=\"1845\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"25\">\n+        <int name=\"x\" value=\"1575\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"5\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"3\">\n+        <int name=\"x\" value=\"1575\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"2\">\n+        <int name=\"x\" value=\"1575\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"39\">\n+        <int name=\"x\" value=\"1845\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"4\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"35\">\n+        <int name=\"x\" value=\"1935\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"14\">\n+        <int name=\"x\" value=\"1755\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"7\">\n+        <int name=\"x\" value=\"1485\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"0\">\n+        <int name=\"x\" value=\"1755\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"4\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"8\">\n+        <int name=\"x\" value=\"1395\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"38\">\n+        <int name=\"x\" value=\"1575\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"34\">\n+        <int name=\"x\" value=\"1485\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"5\">\n+        <int name=\"x\" value=\"1485\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"5\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"6\">\n+        <int name=\"x\" value=\"1755\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"11\">\n+        <int name=\"x\" value=\"1755\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"3\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"4\">\n+        <int name=\"x\" value=\"2025\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"27\">\n+        <int name=\"x\" value=\"1845\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"33\">\n+        <int name=\"x\" value=\"1845\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"17\">\n+        <int name=\"x\" value=\"1935\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"18\">\n+        <int name=\"x\" value=\"1935\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"23\">\n+        <int name=\"x\" value=\"1395\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"12\">\n+        <int name=\"x\" value=\"1305\"/>\n+        <int name=\"y\" value=\"210\"/>\n+        <string name=\"u\" value=\"enH1\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"29\">\n+        <int name=\"x\" value=\"1485\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"3\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"31\">\n+        <int name=\"x\" value=\"1215\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"10\">\n+        <int name=\"x\" value=\"1485\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"3\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"26\">\n+        <int name=\"x\" value=\"1215\"/>\n+        <int name=\"y\" value=\"90\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"5\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"28\">\n+        <int name=\"x\" value=\"1845\"/>\n+        <int name=\"y\" value=\"150\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"2\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"30\">\n+        <int name=\"x\" value=\"1665\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"1\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"9\">\n+        <int name=\"x\" value=\"1665\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"bsc\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"19\">\n+        <int name=\"x\" value=\"1575\"/>\n+        <int name=\"y\" value=\"30\"/>\n+        <string name=\"u\" value=\"enH0\"/>\n+        <int name=\"no\" value=\"0\"/>\n+        <int name=\"zM\" value=\"0\"/>\n+      </imgdir>\n+    </imgdir>\n+    <imgdir name=\"obj\">\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"5\">\n+    <imgdir name=\"info\">\n+    </imgdir>\n+    <imgdir name=\"tile\">\n+    </imgdir>\n+    <imgdir name=\"obj\">\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"6\">\n+    <imgdir name=\"info\">\n+    </imgdir>\n+    <imgdir name=\"tile\">\n+    </imgdir>\n+    <imgdir name=\"obj\">\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"7\">\n+    <imgdir name=\"info\">\n+    </imgdir>\n+    <imgdir name=\"tile\">\n+    </imgdir>\n+    <imgdir name=\"obj\">\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"user\">\n+    <imgdir name=\"0\">\n+      <imgdir name=\"cond\">\n+        <int name=\"target\" value=\"1\"/>\n+        <int name=\"gender\" value=\"0\"/>\n+      </imgdir>\n+      <imgdir name=\"look\">\n+        <int name=\"cap\" value=\"1002954\"/>\n+        <int name=\"clothes\" value=\"1052195\"/>\n+        <int name=\"cape\" value=\"1102211\"/>\n+        <int name=\"shoes\" value=\"1072381\"/>\n+        <int name=\"weapon\" value=\"1442076\"/>\n+      </imgdir>\n+      <imgdir name=\"stat\">\n+        <int name=\"str\" value=\"999\"/>\n+        <int name=\"dex\" value=\"999\"/>\n+        <int name=\"int\" value=\"999\"/>\n+        <int name=\"luk\" value=\"999\"/>\n+        <int name=\"pad\" value=\"255\"/>\n+        <int name=\"mad\" value=\"0\"/>\n+        <int name=\"jump\" value=\"140\"/>\n+        <int name=\"speed\" value=\"120\"/>\n+        <int name=\"acc\" value=\"999\"/>\n+        <int name=\"eva\" value=\"999\"/>\n+      </imgdir>\n+    </imgdir>\n+    <imgdir name=\"1\">\n+      <imgdir name=\"cond\">\n+        <int name=\"target\" value=\"1\"/>\n+        <int name=\"gender\" value=\"1\"/>\n+      </imgdir>\n+      <imgdir name=\"look\">\n+        <int name=\"cap\" value=\"1002954\"/>\n+        <int name=\"clothes\" value=\"1052196\"/>\n+        <int name=\"cape\" value=\"1102211\"/>\n+        <int name=\"shoes\" value=\"1072381\"/>\n+        <int name=\"weapon\" value=\"1442076\"/>\n+      </imgdir>\n+      <imgdir name=\"stat\">\n+        <int name=\"str\" value=\"999\"/>\n+        <int name=\"dex\" value=\"999\"/>\n+        <int name=\"int\" value=\"999\"/>\n+        <int name=\"luk\" value=\"999\"/>\n+        <int name=\"pad\" value=\"255\"/>\n+        <int name=\"mad\" value=\"0\"/>\n+        <int name=\"jump\" value=\"140\"/>\n+        <int name=\"speed\" value=\"120\"/>\n+        <int name=\"acc\" value=\"999\"/>\n+        <int name=\"eva\" value=\"999\"/>\n+      </imgdir>\n+    </imgdir>\n+    <imgdir name=\"2\">\n+      <imgdir name=\"cond\">\n+        <int name=\"target\" value=\"2\"/>\n+      </imgdir>\n+      <imgdir name=\"look\">\n+        <int name=\"cap\" value=\"1002955\"/>\n+        <int name=\"clothes\" value=\"1052197\"/>\n+        <int name=\"shoes\" value=\"1072382\"/>\n+        <int name=\"weapon\" value=\"1442010\"/>\n+      </imgdir>\n+      <imgdir name=\"stat\">\n+        <int name=\"str\" value=\"999\"/>\n+        <int name=\"dex\" value=\"999\"/>\n+        <int name=\"int\" value=\"999\"/>\n+        <int name=\"luk\" value=\"999\"/>\n+        <int name=\"pad\" value=\"255\"/>\n+        <int name=\"mad\" value=\"0\"/>\n+        <int name=\"jump\" value=\"140\"/>\n+        <int name=\"speed\" value=\"120\"/>\n+        <int name=\"acc\" value=\"999\"/>\n+        <int name=\"eva\" value=\"999\"/>\n+      </imgdir>\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"foothold\">\n+    <imgdir name=\"4\">\n+      <imgdir name=\"0\">\n+        <imgdir name=\"1\">\n+          <int name=\"x1\" value=\"2025\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"2115\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"3\"/>\n+          <int name=\"next\" value=\"14\"/>\n+        </imgdir>\n+        <imgdir name=\"2\">\n+          <int name=\"x1\" value=\"1755\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"1845\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"7\"/>\n+          <int name=\"next\" value=\"6\"/>\n+        </imgdir>\n+        <imgdir name=\"3\">\n+          <int name=\"x1\" value=\"1935\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"2025\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"6\"/>\n+          <int name=\"next\" value=\"1\"/>\n+        </imgdir>\n+        <imgdir name=\"4\">\n+          <int name=\"x1\" value=\"1575\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"1665\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"8\"/>\n+          <int name=\"next\" value=\"7\"/>\n+        </imgdir>\n+        <imgdir name=\"5\">\n+          <int name=\"x1\" value=\"1215\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"1305\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"0\"/>\n+          <int name=\"next\" value=\"10\"/>\n+        </imgdir>\n+        <imgdir name=\"6\">\n+          <int name=\"x1\" value=\"1845\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"1935\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"2\"/>\n+          <int name=\"next\" value=\"3\"/>\n+        </imgdir>\n+        <imgdir name=\"7\">\n+          <int name=\"x1\" value=\"1665\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"1755\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"4\"/>\n+          <int name=\"next\" value=\"2\"/>\n+        </imgdir>\n+        <imgdir name=\"8\">\n+          <int name=\"x1\" value=\"1485\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"1575\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"9\"/>\n+          <int name=\"next\" value=\"4\"/>\n+        </imgdir>\n+        <imgdir name=\"9\">\n+          <int name=\"x1\" value=\"1395\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"1485\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"10\"/>\n+          <int name=\"next\" value=\"8\"/>\n+        </imgdir>\n+        <imgdir name=\"10\">\n+          <int name=\"x1\" value=\"1305\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"1395\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"5\"/>\n+          <int name=\"next\" value=\"9\"/>\n+        </imgdir>\n+        <imgdir name=\"11\">\n+          <int name=\"x1\" value=\"2295\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"2385\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"13\"/>\n+          <int name=\"next\" value=\"12\"/>\n+        </imgdir>\n+        <imgdir name=\"12\">\n+          <int name=\"x1\" value=\"2385\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"2475\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"11\"/>\n+          <int name=\"next\" value=\"15\"/>\n+        </imgdir>\n+        <imgdir name=\"13\">\n+          <int name=\"x1\" value=\"2205\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"2295\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"14\"/>\n+          <int name=\"next\" value=\"11\"/>\n+        </imgdir>\n+        <imgdir name=\"14\">\n+          <int name=\"x1\" value=\"2115\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"2205\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"1\"/>\n+          <int name=\"next\" value=\"13\"/>\n+        </imgdir>\n+        <imgdir name=\"15\">\n+          <int name=\"x1\" value=\"2475\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"2565\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"12\"/>\n+          <int name=\"next\" value=\"16\"/>\n+        </imgdir>\n+        <imgdir name=\"16\">\n+          <int name=\"x1\" value=\"2565\"/>\n+          <int name=\"y1\" value=\"2\"/>\n+          <int name=\"x2\" value=\"2655\"/>\n+          <int name=\"y2\" value=\"2\"/>\n+          <int name=\"prev\" value=\"15\"/>\n+          <int name=\"next\" value=\"0\"/>\n+        </imgdir>\n+      </imgdir>\n+    </imgdir>\n+  </imgdir>\n+  <imgdir name=\"ladderRope\">\n+  </imgdir>\n+  <imgdir name=\"miniMap\">\n+    <canvas name=\"canvas\" width=\"96\" height=\"50\">\n+    </canvas>\n+    <int name=\"width\" value=\"1536\"/>\n+    <int name=\"height\" value=\"801\"/>\n+    <int name=\"centerX\" value=\"-1167\"/>\n+    <int name=\"centerY\" value=\"505\"/>\n+    <int name=\"mag\" value=\"4\"/>\n+  </imgdir>\n+  <imgdir name=\"portal\">\n+    <imgdir name=\"0\">\n+      <string name=\"pn\" value=\"sp\"/>\n+      <int name=\"pt\" value=\"0\"/>\n+      <int name=\"x\" value=\"2522\"/>\n+      <int name=\"y\" value=\"-107\"/>\n+      <int name=\"tm\" value=\"999999999\"/>\n+      <string name=\"tn\" value=\"\"/>\n+    </imgdir>\n+    <imgdir name=\"1\">\n+      <string name=\"pn\" value=\"east00\"/>\n+      <int name=\"pt\" value=\"2\"/>\n+      <int name=\"x\" value=\"2569\"/>\n+      <int name=\"y\" value=\"2\"/>\n+      <int name=\"tm\" value=\"914000100\"/>\n+      <string name=\"tn\" value=\"out00\"/>\n+    </imgdir>\n+    <imgdir name=\"2\">\n+      <string name=\"pn\" value=\"west00\"/>\n+      <int name=\"pt\" value=\"7\"/>\n+      <int name=\"x\" value=\"1305\"/>\n+      <int name=\"y\" value=\"-1\"/>\n+      <int name=\"tm\" value=\"999999999\"/>\n+      <string name=\"tn\" value=\"\"/>\n+      <int name=\"horizontalImpact\" value=\"0\"/>\n+      <string name=\"script\" value=\"aranTutorOut2\"/>\n+    </imgdir>\n+    <imgdir name=\"3\">\n+      <string name=\"pn\" value=\"tutor02\"/>\n+      <int name=\"pt\" value=\"9\"/>\n+      <int name=\"x\" value=\"1936\"/>\n+      <int name=\"y\" value=\"-45\"/>\n+      <int name=\"tm\" value=\"999999999\"/>\n+      <string name=\"tn\" value=\"\"/>\n+      <string name=\"script\" value=\"aranTutorArrow1\"/>\n+      <int name=\"hideTooltip\" value=\"0\"/>\n+      <int name=\"onlyOnce\" value=\"0\"/>\n+      <int name=\"delay\" value=\"200\"/>\n+    </imgdir>\n+    <imgdir name=\"4\">\n+      <string name=\"pn\" value=\"tutor00\"/>\n+      <int name=\"pt\" value=\"9\"/>\n+      <int name=\"x\" value=\"2387\"/>\n+      <int name=\"y\" value=\"-46\"/>\n+      <int name=\"tm\" value=\"999999999\"/>\n+      <string name=\"tn\" value=\"\"/>\n+      <int name=\"delay\" value=\"200\"/>\n+      <string name=\"script\" value=\"aranTutorGuide0\"/>\n+      <int name=\"hideTooltip\" value=\"0\"/>\n+      <int name=\"onlyOnce\" value=\"0\"/>\n+    </imgdir>\n+    <imgdir name=\"5\">\n+      <string name=\"pn\" value=\"tutor01\"/>\n+      <int name=\"pt\" value=\"9\"/>\n+      <int name=\"x\" value=\"2119\"/>\n+      <int name=\"y\" value=\"-45\"/>\n+      <int name=\"tm\" value=\"999999999\"/>\n+      <string name=\"tn\" value=\"\"/>\n+      <int name=\"horizontalImpact\" value=\"0\"/>\n+      <string name=\"script\" value=\"aranTutorMono3\"/>\n+      <int name=\"hideTooltip\" value=\"0\"/>\n+      <int name=\"onlyOnce\" value=\"0\"/>\n+      <int name=\"delay\" value=\"200\"/>\n+    </imgdir>\n+  </imgdir>\n+</imgdir>"}, {"sha": "fa4b5e9f04ddabad99bf6113ae8754f974bc5de8", "filename": "wz/Mob.wz/9300295.img.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/wz/Mob.wz/9300295.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/wz/Mob.wz/9300295.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/Mob.wz/9300295.img.xml?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -22,7 +22,7 @@\n     <int name=\"noFlip\" value=\"1\"/>\n     <int name=\"invincible\" value=\"1\"/>\n     <imgdir name=\"revive\">\n-      <string name=\"0\" value=\"9300296\"/>\n+      <int name=\"0\" value=\"9300296\"/>\n     </imgdir>\n     <int name=\"fixedDamage\" value=\"1\"/>\n   </imgdir>"}, {"sha": "797eeb3eb9e9526729575f1436f2d9abb72be088", "filename": "wz/Mob.wz/9300296.img.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/wz/Mob.wz/9300296.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/wz/Mob.wz/9300296.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/Mob.wz/9300296.img.xml?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0", "patch": "@@ -23,7 +23,7 @@\n     <int name=\"noFlip\" value=\"1\"/>\n     <int name=\"invincible\" value=\"1\"/>\n     <imgdir name=\"revive\">\n-      <string name=\"0\" value=\"9300295\"/>\n+      <int name=\"0\" value=\"9300295\"/>\n     </imgdir>\n     <int name=\"removeAfter\" value=\"10\"/>\n   </imgdir>"}, {"sha": "11ee13d7851bc219f90d44d353430fb0e6cd4e9b", "filename": "wz/String.wz/Map.img.xml", "status": "modified", "additions": 17720, "deletions": 1, "changes": 17721, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/wz/String.wz/Map.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/wz/String.wz/Map.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/String.wz/Map.img.xml?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}, {"sha": "84d5a33308477692344a9d1af6235b6d8c5ff62e", "filename": "wz/String.wz/Skill.img.xml", "status": "modified", "additions": 12727, "deletions": 1, "changes": 12728, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/64af2cfa00fab7a72a6078edceb15f2987d72dd0/wz/String.wz/Skill.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/64af2cfa00fab7a72a6078edceb15f2987d72dd0/wz/String.wz/Skill.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/String.wz/Skill.img.xml?ref=64af2cfa00fab7a72a6078edceb15f2987d72dd0"}]}]},
