{"fetchDate": "2019-12-19", "content": [{"sha": "153f5de4fa760d0ad72aca4129f027dd9547c451", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6MTUzZjVkZTRmYTc2MGQwYWQ3MmFjYTQxMjlmMDI3ZGQ5NTQ3YzQ1MQ==", "commit": {"author": {"name": "Ubaware", "email": "ubaware0@gmail.com", "date": "2019-07-31T23:22:48Z"}, "committer": {"name": "Ronan Lana", "email": "rcpl2010@gmail.com", "date": "2019-07-31T23:22:48Z"}, "message": "Added cash shop name changes and world transfers. (#495)\n\n* Name changes\r\n\r\n* World transfers. Fix NPE. Applied Arnuh's suggestions. More logging.", "tree": {"sha": "ee9a2c564c128c539849857d3a6bbe09f0f7dd5b", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/ee9a2c564c128c539849857d3a6bbe09f0f7dd5b"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/153f5de4fa760d0ad72aca4129f027dd9547c451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/153f5de4fa760d0ad72aca4129f027dd9547c451", "html_url": "https://github.com/ronancpl/HeavenMS/commit/153f5de4fa760d0ad72aca4129f027dd9547c451", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/153f5de4fa760d0ad72aca4129f027dd9547c451/comments", "author": {"login": "Ubaware", "id": 52778420, "node_id": "MDQ6VXNlcjUyNzc4NDIw", "avatar_url": "https://avatars0.githubusercontent.com/u/52778420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ubaware", "html_url": "https://github.com/Ubaware", "followers_url": "https://api.github.com/users/Ubaware/followers", "following_url": "https://api.github.com/users/Ubaware/following{/other_user}", "gists_url": "https://api.github.com/users/Ubaware/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ubaware/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ubaware/subscriptions", "organizations_url": "https://api.github.com/users/Ubaware/orgs", "repos_url": "https://api.github.com/users/Ubaware/repos", "events_url": "https://api.github.com/users/Ubaware/events{/privacy}", "received_events_url": "https://api.github.com/users/Ubaware/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85812ba48932eda720910c6bf2be4a3a5f2385b9", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/85812ba48932eda720910c6bf2be4a3a5f2385b9", "html_url": "https://github.com/ronancpl/HeavenMS/commit/85812ba48932eda720910c6bf2be4a3a5f2385b9"}], "stats": {"total": 753, "additions": 733, "deletions": 20}, "files": [{"sha": "b005a6c3c4992c8f3b88efec21048407f3d2f8cd", "filename": "docs/leftover.txt", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/docs/leftover.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/docs/leftover.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/leftover.txt?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -2,8 +2,6 @@\n \n Uncoded features:\n NX Format\n-Name Change\n-World transfer\n MTS (v53)\n Family system (v67)\n Family and Medal Quests(?)"}, {"sha": "3e84c0ac4b63110875474ebbe5c33790f42a344f", "filename": "sql/db_database.sql", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/sql/db_database.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/sql/db_database.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_database.sql?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -16342,6 +16342,17 @@ CREATE TABLE IF NOT EXISTS `mts_items` (\n   PRIMARY KEY (`id`)\n ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n+CREATE TABLE IF NOT EXISTS `namechanges` (\n+  `id` int(11) NOT NULL AUTO_INCREMENT,\n+  `characterid` int(11) NOT NULL,\n+  `old` varchar(13) NOT NULL,\n+  `new` varchar(13) NOT NULL,\n+  `requestTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n+  `completionTime` timestamp,\n+  PRIMARY KEY (`id`),\n+  INDEX (characterid)\n+) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n+\n CREATE TABLE IF NOT EXISTS `newyear` (\n   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n   `senderid` int(10) NOT NULL DEFAULT '-1',\n@@ -21418,6 +21429,17 @@ CREATE TABLE IF NOT EXISTS `wishlists` (\n   PRIMARY KEY (`id`)\n ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n+CREATE TABLE IF NOT EXISTS `worldtransfers` (\n+  `id` int(11) NOT NULL AUTO_INCREMENT,\n+  `characterid` int(11) NOT NULL,\n+  `from` tinyint(3) NOT NULL,\n+  `to` tinyint(3) NOT NULL,\n+  `requestTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n+  `completionTime` timestamp,\n+  PRIMARY KEY (`id`),\n+  INDEX (characterid)\n+) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n+\n \n ALTER TABLE `dueyitems`\n   ADD CONSTRAINT `dueyitems_ibfk_1` FOREIGN KEY (`PackageId`) REFERENCES `dueypackages` (`PackageId`) ON DELETE CASCADE;"}, {"sha": "1ee1049b7eb1ad714ec83c6db9dead80e8037963", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 374, "deletions": 0, "changes": 374, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -328,6 +328,7 @@\n     private int banishSp = -1;\n     private long banishTime = 0;\n     private long lastExpGainTime;\n+    private boolean pendingNameChange; //only used to change name on logout, not to be relied upon elsewhere\n     \n     private MapleCharacter() {\n         super.setListener(new AbstractCharacterListener() {\n@@ -10364,6 +10365,379 @@ public void removeJailExpirationTime() {\n         jailExpiration = 0;\n     }\n     \n+    public boolean registerNameChange(String newName) {\n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            //check for pending name change\n+            long currentTimeMillis = System.currentTimeMillis();\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT completionTime FROM namechanges WHERE characterid=?\")) { //double check, just in case\n+                ps.setInt(1, getId());\n+                ResultSet rs = ps.executeQuery();\n+                while(rs.next()) {\n+                    Timestamp completedTimestamp = rs.getTimestamp(\"completionTime\");\n+                    if(completedTimestamp == null) return false; //pending\n+                    else if(completedTimestamp.getTime() + ServerConstants.NAME_CHANGE_COOLDOWN > currentTimeMillis) return false;\n+                }\n+            } catch(SQLException e) {\n+                e.printStackTrace();\n+                FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Failed to register name change for character \" + getName() + \".\");\n+                return false;\n+            }\n+            try (PreparedStatement ps = con.prepareStatement(\"INSERT INTO namechanges (characterid, old, new) VALUES (?, ?, ?)\")){\n+                    ps.setInt(1, getId());\n+                    ps.setString(2, getName());\n+                    ps.setString(3, newName);\n+                    ps.executeUpdate();\n+                    this.pendingNameChange = true;\n+                    return true;\n+            } catch (SQLException e) {\n+                e.printStackTrace();\n+                FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Failed to register name change for character \" + getName() + \".\");\n+            }\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Failed to get DB connection.\");\n+        }\n+        return false;\n+    }\n+    \n+    public boolean cancelPendingNameChange() {\n+        try (Connection con = DatabaseConnection.getConnection();\n+                PreparedStatement ps = con.prepareStatement(\"DELETE FROM namechanges WHERE characterid=? AND completionTime IS NULL\")) {\n+            ps.setInt(1, getId());\n+            int affectedRows = ps.executeUpdate();\n+            if(affectedRows > 0) pendingNameChange = false;\n+            return affectedRows > 0; //rows affected\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Failed to cancel name change for character \" + getName() + \".\");\n+            return false;\n+        }\n+    }\n+    \n+    public void doPendingNameChange() { //called on logout\n+        if(!pendingNameChange) return;\n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            int nameChangeId = -1;\n+            String newName = null;\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT * FROM namechanges WHERE characterid = ? AND completionTime IS NULL\")) {\n+                ps.setInt(1, getId());\n+                ResultSet rs = ps.executeQuery();\n+                if(!rs.next()) return;\n+                nameChangeId = rs.getInt(\"id\");\n+                newName = rs.getString(\"new\");\n+            } catch(SQLException e) {\n+                e.printStackTrace();\n+                FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Failed to retrieve pending name changes for character \" + getName() + \".\");\n+            }\n+            con.setAutoCommit(false);\n+            boolean success = doNameChange(con, getId(), getName(), newName, nameChangeId);\n+            if(!success) con.rollback();\n+            else FilePrinter.print(FilePrinter.CHANGE_CHARACTER_NAME, \"Name change applied : from \\\"\" + getName() + \"\\\" to \\\"\" + newName + \"\\\" at \" + Calendar.getInstance().getTime().toString());\n+            con.setAutoCommit(true);\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Failed to get DB connection.\");\n+        }\n+    }\n+    \n+    public static void doNameChange(int characterId, String oldName, String newName, int nameChangeId) { //Don't do this while player is online\n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            con.setAutoCommit(false);\n+            boolean success = doNameChange(con, characterId, oldName, newName, nameChangeId);\n+            if(!success) con.rollback();\n+            con.setAutoCommit(true);\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Failed to get DB connection.\");\n+        }\n+    }\n+    \n+    public static boolean doNameChange(Connection con, int characterId, String oldName, String newName, int nameChangeId) {\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE characters SET name = ? WHERE id = ?\")) {\n+            ps.setString(1, newName);\n+            ps.setInt(2, characterId);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE rings SET partnername = ? WHERE partnername = ?\")) {\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        /*try (PreparedStatement ps = con.prepareStatement(\"UPDATE playernpcs SET name = ? WHERE name = ?\")) {\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE gifts SET `from` = ? WHERE `from` = ?\")) {\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE dueypackages SET SenderName = ? WHERE SenderName = ?\")) {\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE dueypackages SET SenderName = ? WHERE SenderName = ?\")) {\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE inventoryitems SET owner = ? WHERE owner = ?\")) { //GMS doesn't do this\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE mts_items SET owner = ? WHERE owner = ?\")) { //GMS doesn't do this\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE newyear SET sendername = ? WHERE sendername = ?\")) {\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE newyear SET receivername = ? WHERE receivername = ?\")) {\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE notes SET `to` = ? WHERE `to` = ?\")) {\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE notes SET `from` = ? WHERE `from` = ?\")) {\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE nxcode SET retriever = ? WHERE retriever = ?\")) {\n+            ps.setString(1, newName);\n+            ps.setString(2, oldName);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+            return false;\n+        }*/\n+        if(nameChangeId != -1) {\n+            try (PreparedStatement ps = con.prepareStatement(\"UPDATE namechanges SET completionTime = ? WHERE id = ?\")) {\n+                ps.setTimestamp(1, new Timestamp(System.currentTimeMillis()));\n+                ps.setInt(2, nameChangeId);\n+                ps.executeUpdate();\n+            } catch(SQLException e) { \n+                e.printStackTrace();\n+                FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Character ID : \" + characterId);\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+    \n+    public int checkWorldTransferEligibility() {\n+        if(getLevel() < 20) {\n+            return 2;\n+        } else if(getClient().getTempBanCalendar() != null && getClient().getTempBanCalendar().getTimeInMillis() + (30*24*60*60*1000) < Calendar.getInstance().getTimeInMillis()) {\n+            return 3;\n+        } else if(isMarried()) {\n+            return 4;\n+        } else if(getGuildRank() < 2) {\n+            return 5;\n+        } else if(getFamily() != null) {\n+            return 8;\n+        } else {\n+            return 0;\n+        }\n+    }\n+    \n+    public static String checkWorldTransferEligibility(Connection con, int characterId, int oldWorld, int newWorld) {\n+        if(!ServerConstants.ALLOW_CASHSHOP_WORLD_TRANSFER) return \"World transfers disabled.\";\n+        int accountId = -1;\n+        try (PreparedStatement ps = con.prepareStatement(\"SELECT accountid, level, guildid, guildrank, partnerId, familyId FROM characters WHERE id = ?\")) {\n+            ps.setInt(1, characterId);\n+            ResultSet rs = ps.executeQuery();\n+            if(!rs.next()) return \"Character does not exist.\";\n+            accountId = rs.getInt(\"accountid\");\n+            if(rs.getInt(\"level\") < 20) return \"Character is under level 20.\";\n+            if(rs.getInt(\"familyId\") != -1) return \"Character is in family.\";\n+            if(rs.getInt(\"partnerId\") != 0) return \"Character is married.\";\n+            if(rs.getInt(\"guildid\") != 0 && rs.getInt(\"guildrank\") < 2) return \"Character is the leader of a guild.\";\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e);\n+            return \"SQL Error\";\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"SELECT tempban FROM accounts WHERE id = ?\")) {\n+            ps.setInt(1, accountId);\n+            ResultSet rs = ps.executeQuery();\n+            if(!rs.next()) return \"Account does not exist.\";\n+            if(rs.getLong(\"tempban\") != 0 && !rs.getString(\"tempban\").equals(\"2018-06-20 00:00:00.0\")) return \"Account has been banned.\";\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e);\n+            return \"SQL Error\";\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"SELECT COUNT(*) AS rowcount FROM characters WHERE accountid = ? AND world = ?\")) {\n+            ps.setInt(1, accountId);\n+            ps.setInt(2, newWorld);\n+            ResultSet rs = ps.executeQuery();\n+            if(!rs.next()) return \"SQL Error\";\n+            if(rs.getInt(\"rowcount\") >= 3) return \"Too many characters on destination world.\";\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e);\n+            return \"SQL Error\";\n+        }\n+        return null;\n+    }\n+    \n+    public boolean registerWorldTransfer(int newWorld) {\n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            //check for pending world transfer\n+            long currentTimeMillis = System.currentTimeMillis();\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT completionTime FROM worldtransfers WHERE characterid=?\")) { //double check, just in case\n+                ps.setInt(1, getId());\n+                ResultSet rs = ps.executeQuery();\n+                while(rs.next()) {\n+                    Timestamp completedTimestamp = rs.getTimestamp(\"completionTime\");\n+                    if(completedTimestamp == null) return false; //pending\n+                    else if(completedTimestamp.getTime() + ServerConstants.WORLD_TRANSFER_COOLDOWN > currentTimeMillis) return false;\n+                }\n+            } catch(SQLException e) {\n+                e.printStackTrace();\n+                FilePrinter.printError(FilePrinter.WORLD_TRANSFER, e, \"Failed to register world transfer for character \" + getName() + \".\");\n+                return false;\n+            }\n+            try (PreparedStatement ps = con.prepareStatement(\"INSERT INTO worldtransfers (characterid, `from`, `to`) VALUES (?, ?, ?)\")){\n+                    ps.setInt(1, getId());\n+                    ps.setInt(2, getWorld());\n+                    ps.setInt(3, newWorld);\n+                    ps.executeUpdate();\n+                    return true;\n+            } catch (SQLException e) {\n+                e.printStackTrace();\n+                FilePrinter.printError(FilePrinter.WORLD_TRANSFER, e, \"Failed to register world transfer for character \" + getName() + \".\");\n+            }\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.WORLD_TRANSFER, e, \"Failed to get DB connection.\");\n+        }\n+        return false;\n+    }\n+    \n+    public boolean cancelPendingWorldTranfer() {\n+        try (Connection con = DatabaseConnection.getConnection();\n+                PreparedStatement ps = con.prepareStatement(\"DELETE FROM worldtransfers WHERE characterid=? AND completionTime IS NULL\")) {\n+            ps.setInt(1, getId());\n+            int affectedRows = ps.executeUpdate();\n+            return affectedRows > 0; //rows affected\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.WORLD_TRANSFER, e, \"Failed to cancel pending world transfer for character \" + getName() + \".\");\n+            return false;\n+        }\n+    }\n+    \n+    public static boolean doWorldTransfer(Connection con, int characterId, int oldWorld, int newWorld, int worldTransferId) {\n+        int mesos = 0;\n+        try (PreparedStatement ps = con.prepareStatement(\"SELECT meso FROM characters WHERE id = ?\")) {\n+            ps.setInt(1, characterId);\n+            ResultSet rs = ps.executeQuery();\n+            if(!rs.next()) {\n+                FilePrinter.printError(FilePrinter.WORLD_TRANSFER, \"Character data invalid? (charid \" + characterId + \")\");\n+                return false;\n+            }\n+            mesos = rs.getInt(\"meso\");\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.WORLD_TRANSFER, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"UPDATE characters SET world = ?, meso = ?, guildid = ?, guildrank = ? WHERE id = ?\")) {\n+            ps.setInt(1, newWorld);\n+            ps.setInt(2, Math.min(mesos, 1000000)); //might want a limit in ServerConstants for this\n+            ps.setInt(3, 0);\n+            ps.setInt(4, 5);\n+            ps.setInt(5, characterId);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.WORLD_TRANSFER, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        try (PreparedStatement ps = con.prepareStatement(\"DELETE FROM buddies WHERE characterid = ? OR buddyid = ?\")) {\n+            ps.setInt(1, characterId);\n+            ps.setInt(2, characterId);\n+            ps.executeUpdate();\n+        } catch(SQLException e) { \n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.WORLD_TRANSFER, e, \"Character ID : \" + characterId);\n+            return false;\n+        }\n+        if(worldTransferId != -1) {\n+            try (PreparedStatement ps = con.prepareStatement(\"UPDATE worldtransfers SET completionTime = ? WHERE id = ?\")) {\n+                ps.setTimestamp(1, new Timestamp(System.currentTimeMillis()));\n+                ps.setInt(2, worldTransferId);\n+                ps.executeUpdate();\n+            } catch(SQLException e) { \n+                e.printStackTrace();\n+                FilePrinter.printError(FilePrinter.WORLD_TRANSFER, e, \"Character ID : \" + characterId);\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+    \n     public String getLastCommandMessage() {\n         return this.commandtext;\n     }"}, {"sha": "70b4e8da4aaac6f8bbcfb35e7c0ba6b5fe250a4b", "filename": "src/client/MapleClient.java", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/client/MapleClient.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/client/MapleClient.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleClient.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -121,6 +121,7 @@\n \tprivate final Lock lock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT, true);\n         private final Lock encoderLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_ENCODER, true);\n         private static final Lock loginLocks[] = new Lock[200];  // thanks Masterrulax & try2hack for pointing out a bottleneck issue here\n+    private Calendar tempBanCalendar;\n \tprivate int votePoints;\n \tprivate int voteTime = -1;\n         private int visibleWorlds;\n@@ -640,7 +641,7 @@ public int login(String login, String pwd, String nibbleHwid) {\n                 }\n \t}\n \n-\tpublic Calendar getTempBanCalendar() {\n+\tpublic Calendar getTempBanCalendarFromDB() {\n \t\tConnection con = null;\n \t\tPreparedStatement ps = null;\n \t\tResultSet rs = null;\n@@ -654,10 +655,12 @@ public Calendar getTempBanCalendar() {\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\tlong blubb = rs.getLong(\"tempban\");\n-\t\t\tif (blubb == 0) { // basically if timestamp in db is 0000-00-00\n+\t\t\t\n+\t\t\tif (blubb == 0 || rs.getString(\"tempban\").equals(\"2018-06-20 00:00:00.0\")) { // 0000-00-00 or 2018-06-20 (default set in LoginPasswordHandler)\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\tlTempban.setTimeInMillis(rs.getTimestamp(\"tempban\").getTime());\n+\t\t\ttempBanCalendar = lTempban;\n \t\t\treturn lTempban;\n \t\t} catch (SQLException e) {\n                     e.printStackTrace();\n@@ -678,6 +681,14 @@ public Calendar getTempBanCalendar() {\n \t\t}\n \t\treturn null;//why oh why!?!\n \t}\n+\t\n+\tpublic Calendar getTempBanCalendar() {\n+\t    return tempBanCalendar;\n+\t}\n+\t\n+\tpublic boolean hasBeenBanned() {\n+\t    return tempBanCalendar != null;\n+\t}\n \n \tpublic static long dottedQuadToLong(String dottedQuad) throws RuntimeException {\n \t\tString[] quads = dottedQuad.split(\"\\\\.\");\n@@ -1017,6 +1028,7 @@ private void disconnectInternal(boolean shutdown, boolean cashshop) {//once per\n                                         player.saveCharToDB(true);\n                                         \n \t\t\t\t\tplayer.logOff();\n+\t\t\t\t\tif(ServerConstants.INSTANT_NAME_CHANGE) player.doPendingNameChange();\n                                         clear();\n \t\t\t\t} else {\n                                         getChannelServer().removePlayer(player);\n@@ -1329,6 +1341,10 @@ public short getAvailableCharacterWorldSlots() {\n                 return (short) Math.max(0, characterSlots - Server.getInstance().getAccountWorldCharacterCount(accId, world));\n \t}\n         \n+    public short getAvailableCharacterWorldSlots(int world) {\n+        return (short) Math.max(0, characterSlots - Server.getInstance().getAccountWorldCharacterCount(accId, world));\n+    }\n+        \n \tpublic short getCharacterSlots() {\n \t\treturn characterSlots;\n \t}"}, {"sha": "0ace201a7bf6a9c3135aadc1ea4c8c39826f14a9", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -126,6 +126,8 @@\n     //Cash Shop Configuration\n     public static final boolean USE_JOINT_CASHSHOP_INVENTORY = true;//Enables usage of a same cash shop inventory for explorers, cygnus and legends. Items from exclusive cash shop inventories won't show up on the shared inventory, though.\n     public static final boolean USE_CLEAR_OUTDATED_COUPONS = true;  //Enables deletion of older code coupon registry from the DB, freeing so-long irrelevant data.\n+    public static final boolean ALLOW_CASHSHOP_NAME_CHANGE = true;  //Allows players to buy name changes in the cash shop.\n+    public static final boolean ALLOW_CASHSHOP_WORLD_TRANSFER =true;//Allows players to buy world transfers in the cash shop.\n     \n     //Maker Configuration\n     public static final boolean USE_MAKER_PERMISSIVE_ATKUP = true;  //Allows players to use attack-based strengthening gems on non-weapon items.\n@@ -169,6 +171,9 @@\n     public static final int TOT_MOB_QUEST_REQUIREMENT = 77;             //Overwrites old 999-mobs requirement for the ToT questline with new requirement value, set 0 for default.\n     public static final int MOB_REACTOR_REFRESH_TIME = 30 * 1000;       //Overwrites refresh time for those reactors oriented to inflict damage to bosses (Ice Queen, Riche), set 0 for default.\n     public static final int PARTY_SEARCH_REENTRY_LIMIT = 10;            //Max amount of times a party leader is allowed to persist on the Party Search before entry expiration (thus needing to manually restart the Party Search to be able to search for members).\n+    public static final int NAME_CHANGE_COOLDOWN = 30*24*60*60*1000;    //Cooldown for name changes, default (GMS) is 30 days.\n+    public static final int WORLD_TRANSFER_COOLDOWN=NAME_CHANGE_COOLDOWN;//Cooldown for world tranfers, default is same as name change (30 days).\n+    public static final boolean INSTANT_NAME_CHANGE = false;            //Whether or not to wait for server restart to apply name changes. Does on reconnect otherwise (requires queries on every login).\n     \n     //Dangling Items/Locks Configuration\n     public static final int ITEM_EXPIRE_TIME  = 3 * 60 * 1000;  //Time before items start disappearing. Recommended to be set up to 3 minutes."}, {"sha": "7892ce7d41d345bfdab4b6a11aeb0f56fbb724c9", "filename": "src/net/server/Server.java", "status": "modified", "additions": 79, "deletions": 1, "changes": 80, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/Server.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/Server.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/Server.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -103,6 +103,7 @@\n import server.quest.MapleQuest;\n import tools.AutoJCE;\n import tools.DatabaseConnection;\n+import tools.FilePrinter;\n import tools.Pair;\n import org.apache.mina.core.session.IoSession;\n \n@@ -881,7 +882,8 @@ public void init() {\n         } catch (SQLException sqle) {\n             sqle.printStackTrace();\n         }\n-        \n+        applyAllNameChanges(); //name changes can be missed by INSTANT_NAME_CHANGE\n+        applyAllWorldTransfers();\n         MaplePet.clearMissingPetsFromDb();\n         MapleCashidGenerator.loadExistentCashIdsFromDb();\n         \n@@ -1554,6 +1556,82 @@ private boolean isFirstAccountLogin(Integer accId) {\n         }\n     }\n     \n+    private static void applyAllNameChanges() {\n+        try (Connection con = DatabaseConnection.getConnection();\n+                PreparedStatement ps = con.prepareStatement(\"SELECT * FROM namechanges WHERE completionTime IS NULL\")) {\n+            ResultSet rs = ps.executeQuery();\n+            List<Pair<String, String>> changedNames = new LinkedList<Pair<String, String>>(); //logging only\n+            while(rs.next()) {\n+                con.setAutoCommit(false);\n+                int nameChangeId = rs.getInt(\"id\");\n+                int characterId = rs.getInt(\"characterId\");\n+                String oldName = rs.getString(\"old\");\n+                String newName = rs.getString(\"new\");\n+                boolean success = MapleCharacter.doNameChange(con, characterId, oldName, newName, nameChangeId);                \n+                if(!success) con.rollback(); //discard changes\n+                else changedNames.add(new Pair<String, String>(oldName, newName));\n+                con.setAutoCommit(true);\n+            }\n+            //log\n+            for(Pair<String, String> namePair : changedNames) {\n+                FilePrinter.print(FilePrinter.CHANGE_CHARACTER_NAME, \"Name change applied : from \\\"\" + namePair.getLeft() + \"\\\" to \\\"\" + namePair.getRight() + \"\\\" at \" + Calendar.getInstance().getTime().toString());\n+            }\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.CHANGE_CHARACTER_NAME, e, \"Failed to retrieve list of pending name changes.\");\n+        }\n+    }\n+    \n+    private static void applyAllWorldTransfers() {\n+        try (Connection con = DatabaseConnection.getConnection();\n+                PreparedStatement ps = con.prepareStatement(\"SELECT * FROM worldtransfers WHERE completionTime IS NULL\")) {\n+            ResultSet rs = ps.executeQuery();\n+            List<Integer> removedTransfers = new LinkedList<Integer>();\n+            while(rs.next()) {\n+                int nameChangeId = rs.getInt(\"id\");\n+                int characterId = rs.getInt(\"characterId\");\n+                int oldWorld = rs.getInt(\"from\");\n+                int newWorld = rs.getInt(\"to\");\n+                String reason = MapleCharacter.checkWorldTransferEligibility(con, characterId, oldWorld, newWorld); //check if character is still eligible\n+                if(reason != null) {\n+                    removedTransfers.add(nameChangeId);\n+                    FilePrinter.print(FilePrinter.WORLD_TRANSFER, \"World transfer cancelled : Character ID \" + characterId + \" at \" + Calendar.getInstance().getTime().toString() + \", Reason : \" + reason);\n+                    try (PreparedStatement delPs = con.prepareStatement(\"DELETE FROM worldtransfers WHERE id = ?\")) {\n+                        delPs.setInt(1, nameChangeId);\n+                        delPs.executeUpdate();\n+                    } catch(SQLException e) { \n+                        e.printStackTrace();\n+                        FilePrinter.printError(FilePrinter.WORLD_TRANSFER, e, \"Failed to delete world transfer for character ID \" + characterId);\n+                    }\n+                }\n+            }\n+            rs.beforeFirst();\n+            List<Pair<Integer, Pair<Integer, Integer>>> worldTransfers = new LinkedList<Pair<Integer, Pair<Integer, Integer>>>(); //logging only <charid, <oldWorld, newWorld>>\n+            while(rs.next()) {\n+                con.setAutoCommit(false);\n+                int nameChangeId = rs.getInt(\"id\");\n+                if(removedTransfers.contains(nameChangeId)) continue;\n+                int characterId = rs.getInt(\"characterId\");\n+                int oldWorld = rs.getInt(\"from\");\n+                int newWorld = rs.getInt(\"to\");\n+                boolean success = MapleCharacter.doWorldTransfer(con, characterId, oldWorld, newWorld, nameChangeId);\n+                if(!success) con.rollback();\n+                else worldTransfers.add(new Pair<Integer, Pair<Integer, Integer>>(characterId, new Pair<Integer, Integer>(oldWorld, newWorld)));\n+                con.setAutoCommit(true);\n+            }\n+            //log\n+            for(Pair<Integer, Pair<Integer, Integer>> worldTransferPair : worldTransfers) {\n+                int charId = worldTransferPair.getLeft();\n+                int oldWorld = worldTransferPair.getRight().getLeft();\n+                int newWorld = worldTransferPair.getRight().getRight();\n+                FilePrinter.print(FilePrinter.WORLD_TRANSFER, \"World transfer applied : Character ID \" + charId + \" from World \" + oldWorld + \" to World \" + newWorld + \" at \" + Calendar.getInstance().getTime().toString());\n+            }\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            FilePrinter.printError(FilePrinter.WORLD_TRANSFER, e, \"Failed to retrieve list of pending world transfers.\");\n+        }\n+    }\n+    \n     public void loadAccountCharacters(MapleClient c) {\n         Integer accId = c.getAccID();\n         if (!isFirstAccountLogin(accId)) {"}, {"sha": "f1b51fadf89c4bf48376d8b0087dbf011ea36c69", "filename": "src/net/server/channel/handlers/CashOperationHandler.java", "status": "modified", "additions": 62, "deletions": 2, "changes": 64, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/channel/handlers/CashOperationHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/channel/handlers/CashOperationHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/CashOperationHandler.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -34,6 +34,7 @@\n import java.util.List;\n import java.util.Map;\n import net.AbstractMaplePacketHandler;\n+import net.server.Server;\n import server.CashShop;\n import server.CashShop.CashItem;\n import server.CashShop.CashItemFactory;\n@@ -343,15 +344,15 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                         slea.readByte();\n                         MapleCharacter partner = c.getChannelServer().getPlayerStorage().getCharacterByName(sentTo);\n                         if (partner == null) {\n-                            chr.dropMessage(5, \"The partner you specified cannot be found. Please make sure your partner is online and in the same channel.\");\n+                            c.announce(MaplePacketCreator.showCashShopMessage((byte)0xBE));\n                         } else {\n                             // Need to check to make sure its actually an equip and the right SN...\n                             if(itemRing.toItem() instanceof Equip) {\n                                 Equip eqp = (Equip) itemRing.toItem();\n                                 Pair<Integer, Integer> rings = MapleRing.createRing(itemRing.getItemId(), chr, partner);\n                                 eqp.setRingId(rings.getLeft());\n                                 cs.addToInventory(eqp);\n-                                c.announce(MaplePacketCreator.showBoughtCashItem(eqp, c.getAccID()));\n+                                c.announce(MaplePacketCreator.showBoughtCashRing(eqp, partner.getName(), c.getAccID()));\n                                 cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), rings.getRight());\n                                 cs.gainCash(payment, -itemRing.getPrice());\n                                 chr.addFriendshipRing(MapleRing.loadFromDb(rings.getLeft()));\n@@ -368,6 +369,65 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     }\n \n                     c.announce(MaplePacketCreator.showCash(c.getPlayer()));\n+                } else if (action == 0x2E) { //name change\n+                    CashItem cItem = CashItemFactory.getItem(slea.readInt());\n+                    if (cItem == null || !canBuy(chr, cItem, cs.getCash(4))) {\n+                        c.announce(MaplePacketCreator.showCashShopMessage((byte)0));\n+                        c.enableCSActions();\n+                        return;\n+                    }\n+                    if(cItem.getSN() == 50600000 && ServerConstants.ALLOW_CASHSHOP_NAME_CHANGE) {\n+                        slea.readMapleAsciiString(); //old name\n+                        String newName = slea.readMapleAsciiString();\n+                        if(!MapleCharacter.canCreateChar(newName) || chr.getLevel() < 10) { //(longest ban duration isn't tracked currently)\n+                            c.announce(MaplePacketCreator.showCashShopMessage((byte)0));\n+                            c.enableCSActions();\n+                            return;\n+                        } else if(c.getTempBanCalendar() != null && c.getTempBanCalendar().getTimeInMillis() + (30*24*60*60*1000) > Calendar.getInstance().getTimeInMillis()) {\n+                            c.announce(MaplePacketCreator.showCashShopMessage((byte)0));\n+                            c.enableCSActions();\n+                            return;\n+                        }\n+                        if(chr.registerNameChange(newName)) { //success\n+                            Item item = cItem.toItem();\n+                            c.announce(MaplePacketCreator.showNameChangeSuccess(item, c.getAccID()));\n+                            cs.addToInventory(item);\n+                            cs.gainCash(4, cItem, chr.getWorld());\n+                        } else {\n+                            c.announce(MaplePacketCreator.showCashShopMessage((byte)0));\n+                        }\n+                    }\n+                    c.enableCSActions();\n+                } else if(action == 0x31) { //world transfer\n+                    CashItem cItem = CashItemFactory.getItem(slea.readInt());\n+                    if (cItem == null || !canBuy(chr, cItem, cs.getCash(4))) {\n+                        c.announce(MaplePacketCreator.showCashShopMessage((byte)0));\n+                        c.enableCSActions();\n+                        return;\n+                    }\n+                    if(cItem.getSN() == 50600001 && ServerConstants.ALLOW_CASHSHOP_WORLD_TRANSFER) {\n+                        int newWorldSelection = slea.readInt();\n+                        \n+                        int worldTransferError = chr.checkWorldTransferEligibility();\n+                        if(worldTransferError != 0 || newWorldSelection >= Server.getInstance().getWorldsSize() || Server.getInstance().getWorldsSize() <= 1) {\n+                            c.announce(MaplePacketCreator.showCashShopMessage((byte)0));\n+                            return;\n+                        } else if(newWorldSelection == c.getWorld()) {\n+                            c.announce(MaplePacketCreator.showCashShopMessage((byte)0xDC));\n+                            return;\n+                        } else if(c.getAvailableCharacterWorldSlots(newWorldSelection) < 1 || Server.getInstance().getAccountWorldCharacterCount(c.getAccID(), newWorldSelection) >= 3) {\n+                            c.announce(MaplePacketCreator.showCashShopMessage((byte)0xDF));\n+                            return;\n+                        } else if(chr.registerWorldTransfer(newWorldSelection)) {\n+                            Item item = cItem.toItem();\n+                            c.announce(MaplePacketCreator.showWorldTransferSuccess(item, c.getAccID()));\n+                            cs.addToInventory(item);\n+                            cs.gainCash(4, cItem, chr.getWorld());\n+                        } else {\n+                            c.announce(MaplePacketCreator.showCashShopMessage((byte)0));\n+                        }\n+                    }\n+                    c.enableCSActions();\n                 } else {\n                     System.out.println(\"Unhandled action: \" + action + \"\\n\" + slea);\n                 }"}, {"sha": "426a37a5baa84b3e75372aeedf58b87f58c7b4cb", "filename": "src/net/server/channel/handlers/TransferNameHandler.java", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/channel/handlers/TransferNameHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/channel/handlers/TransferNameHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/TransferNameHandler.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -20,14 +20,25 @@\n \n package net.server.channel.handlers;\n \n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Timestamp;\n+import java.util.Calendar;\n+import java.sql.Connection;\n+\n+import client.MapleCharacter;\n import client.MapleClient;\n+import constants.ServerConstants;\n import net.AbstractMaplePacketHandler;\n+import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n /**\n  *\n  * @author Ronan\n+ * @author Ubaware\n  */\n public final class TransferNameHandler extends AbstractMaplePacketHandler {\n     \n@@ -40,7 +51,37 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             c.announce(MaplePacketCreator.enableActions());\n             return;\n         }\n-        \n-        c.announce(MaplePacketCreator.sendNameTransferRules(4));\n+        if(!ServerConstants.ALLOW_CASHSHOP_NAME_CHANGE) {\n+            c.announce(MaplePacketCreator.sendNameTransferRules(4));\n+            return;\n+        }\n+        MapleCharacter chr = c.getPlayer();\n+        if(chr.getLevel() < 10) {\n+            c.announce(MaplePacketCreator.sendNameTransferRules(4));\n+            return;\n+        } else if(c.getTempBanCalendar() != null && c.getTempBanCalendar().getTimeInMillis() + (30*24*60*60*1000) < Calendar.getInstance().getTimeInMillis()) {\n+            c.announce(MaplePacketCreator.sendNameTransferRules(2));\n+            return;\n+        }\n+        //sql queries\n+        try (Connection con = DatabaseConnection.getConnection();\n+                PreparedStatement ps = con.prepareStatement(\"SELECT completionTime FROM namechanges WHERE characterid=?\")) { //double check, just in case\n+            ps.setInt(1, chr.getId());\n+            ResultSet rs = ps.executeQuery();\n+            while(rs.next()) {\n+                Timestamp completedTimestamp = rs.getTimestamp(\"completionTime\");\n+                if(completedTimestamp == null) { //has pending name request\n+                    c.announce(MaplePacketCreator.sendNameTransferRules(1));\n+                    return;\n+                } else if(completedTimestamp.getTime() + ServerConstants.NAME_CHANGE_COOLDOWN > System.currentTimeMillis()) {\n+                    c.announce(MaplePacketCreator.sendNameTransferRules(3));\n+                    return;\n+                };\n+            }\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            return;\n+        }\n+        c.announce(MaplePacketCreator.sendNameTransferRules(0));\n     }\n }\n\\ No newline at end of file"}, {"sha": "6e75bbc1d20dc71c4b99120c3365143d0d27642c", "filename": "src/net/server/channel/handlers/TransferNameResultHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/channel/handlers/TransferNameResultHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/channel/handlers/TransferNameResultHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/TransferNameResultHandler.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -35,6 +35,6 @@\n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         String name = slea.readMapleAsciiString();\n-        c.announce(MaplePacketCreator.sendNameTransferCheck(MapleCharacter.canCreateChar(name)));\n+        c.announce(MaplePacketCreator.sendNameTransferCheck(name, MapleCharacter.canCreateChar(name)));\n     }\n }\n\\ No newline at end of file"}, {"sha": "d822c247bb395d152b20329720c62cfe0d26c26f", "filename": "src/net/server/channel/handlers/TransferWorldHandler.java", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/channel/handlers/TransferWorldHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/channel/handlers/TransferWorldHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/TransferWorldHandler.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -20,14 +20,25 @@\n \n package net.server.channel.handlers;\n \n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Timestamp;\n+\n+import client.MapleCharacter;\n import client.MapleClient;\n+import constants.ServerConstants;\n import net.AbstractMaplePacketHandler;\n+import net.server.Server;\n+import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n /**\n  *\n  * @author Ronan\n+ * @author Ubaware\n  */\n public final class TransferWorldHandler extends AbstractMaplePacketHandler {\n     \n@@ -40,7 +51,34 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             c.announce(MaplePacketCreator.enableActions());\n             return;\n         }\n-        \n-        c.announce(MaplePacketCreator.sendWorldTransferRules(9));\n+        MapleCharacter chr = c.getPlayer();\n+        if(!ServerConstants.ALLOW_CASHSHOP_WORLD_TRANSFER || Server.getInstance().getWorldsSize() <= 1) {\n+            c.announce(MaplePacketCreator.sendWorldTransferRules(9, c));\n+            return;\n+        }\n+        int worldTransferError = chr.checkWorldTransferEligibility();\n+        if(worldTransferError != 0) {\n+            c.announce(MaplePacketCreator.sendWorldTransferRules(worldTransferError, c));\n+            return;\n+        }\n+        try (Connection con = DatabaseConnection.getConnection();\n+                PreparedStatement ps = con.prepareStatement(\"SELECT completionTime FROM worldtransfers WHERE characterid=?\")) {\n+            ps.setInt(1, chr.getId());\n+            ResultSet rs = ps.executeQuery();\n+            while(rs.next()) {\n+                Timestamp completedTimestamp = rs.getTimestamp(\"completionTime\");\n+                if(completedTimestamp == null) { //has pending world transfer\n+                    c.announce(MaplePacketCreator.sendWorldTransferRules(6, c));\n+                    return;\n+                } else if(completedTimestamp.getTime() + ServerConstants.WORLD_TRANSFER_COOLDOWN > System.currentTimeMillis()) {\n+                    c.announce(MaplePacketCreator.sendWorldTransferRules(7, c));\n+                    return;\n+                };\n+            }\n+        } catch(SQLException e) {\n+            e.printStackTrace();\n+            return;\n+        }\n+        c.announce(MaplePacketCreator.sendWorldTransferRules(0, c));\n     }\n }\n\\ No newline at end of file"}, {"sha": "978ce9c288429750e9782ee96ed834d039905a08", "filename": "src/net/server/channel/handlers/UseCashItemHandler.java", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/channel/handlers/UseCashItemHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/channel/handlers/UseCashItemHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/UseCashItemHandler.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -423,6 +423,24 @@ public void run() {\n             \t}\n             }, 1000 * 10);\n             remove(c, position, itemId);\n+        } else if (itemType == 540) {\n+            slea.readByte();\n+            slea.readInt();\n+            if(itemId == 5400000) { //name change\n+                if(player.cancelPendingNameChange()) {\n+                    player.dropMessage(1, \"Successfully canceled pending name change.\");\n+                } else {\n+                    player.dropMessage(1, \"You do not have a pending name change.\");\n+                }\n+            } else if(itemId == 5401000) { //world transfer\n+                if(player.cancelPendingWorldTranfer()) {\n+                    player.dropMessage(1, \"Successfully canceled pending world transfer.\");\n+                } else {\n+                    player.dropMessage(1, \"You do not have a pending world transfer.\");\n+                }\n+            }\n+            remove(c, position, itemId);\n+            c.announce(MaplePacketCreator.enableActions());\n         } else if (itemType == 543) {\n             if(itemId == 5432000 && !c.gainCharacterSlot()) {\n                 player.dropMessage(1, \"You have already used up all 12 extra character slots.\");"}, {"sha": "49c35adeed50da83e7907c479c3b113fb4a24b94", "filename": "src/net/server/handlers/login/LoginPasswordHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/handlers/login/LoginPasswordHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/net/server/handlers/login/LoginPasswordHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/LoginPasswordHandler.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -135,7 +135,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             c.announce(MaplePacketCreator.getLoginFailed(3));\n             return;\n         }\n-        Calendar tempban = c.getTempBanCalendar();\n+        Calendar tempban = c.getTempBanCalendarFromDB();\n         if (tempban != null) {\n             if (tempban.getTimeInMillis() > Calendar.getInstance().getTimeInMillis()) {\n                 c.announce(MaplePacketCreator.getTempBan(tempban.getTimeInMillis(), c.getGReason()));"}, {"sha": "0d787b146a4031a084ab794119c78d11d8217270", "filename": "src/tools/FilePrinter.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/tools/FilePrinter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/tools/FilePrinter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/FilePrinter.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -59,6 +59,8 @@\n             QUEST_UNCODED = \"game/quests/UncodedQuests.txt\",\n             AUTOSAVING_CHARACTER = \"players/SaveCharAuto.txt\",\n             SAVING_CHARACTER = \"players/SaveChar.txt\",\n+            CHANGE_CHARACTER_NAME = \"players/NameChange.txt\",\n+            WORLD_TRANSFER = \"players/WorldTransfer.txt\",\n             USED_COMMANDS = \"commands/UsedCommands.txt\",\n             DEADLOCK_ERROR = \"deadlocks/Deadlocks.txt\",\n             DEADLOCK_STACK = \"deadlocks/Path.txt\","}, {"sha": "fe25226db8fe636939621abb14c9bb8ee0b1fe03", "filename": "src/tools/MaplePacketCreator.java", "status": "modified", "additions": 68, "deletions": 7, "changes": 75, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/153f5de4fa760d0ad72aca4129f027dd9547c451/src/tools/MaplePacketCreator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/153f5de4fa760d0ad72aca4129f027dd9547c451/src/tools/MaplePacketCreator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MaplePacketCreator.java?ref=153f5de4fa760d0ad72aca4129f027dd9547c451", "patch": "@@ -81,6 +81,7 @@\n import net.server.world.MapleParty;\n import net.server.world.MaplePartyCharacter;\n import net.server.world.PartyOperation;\n+import net.server.world.World;\n import server.CashShop.CashItem;\n import server.CashShop.CashItemFactory;\n import server.CashShop.SpecialCashItem;\n@@ -6091,18 +6092,33 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n             8: must quit family,\n             9: unknown error\n         */\n-        public static byte[] sendWorldTransferRules(int error) {\n+        public static byte[] sendWorldTransferRules(int error, MapleClient c) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.CASHSHOP_CHECK_TRANSFER_WORLD_POSSIBLE_RESULT.getValue());\n-                mplew.writeInt(0);\n-                mplew.write(0); \n+                mplew.writeInt(0); //ignored\n                 mplew.write(error);\n                 mplew.writeInt(0);\n-                \n+                mplew.writeBool(error == 0); //0 = ?, otherwise list servers\n+                if(error == 0) {\n+                    List<World> worlds = Server.getInstance().getWorlds();\n+                    mplew.writeInt(worlds.size());\n+                    for(World world : worlds) {\n+                        mplew.writeMapleAsciiString(GameConstants.WORLD_NAMES[world.getId()]);\n+                    }\n+                }\n                 return mplew.getPacket();\n         }\n         \n-        /*  1: name change already submitted\n+        public static byte[] showWorldTransferSuccess(Item item, int accountId) {\n+            final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+            mplew.writeShort(SendOpcode.CASHSHOP_OPERATION.getValue());\n+            mplew.write(0xA0);\n+            addCashItemInformation(mplew, item, accountId);\n+            return mplew.getPacket();\n+    }\n+        \n+        /*  0: no error, send rules\n+            1: name change already submitted\n             2: name change within a month\n             3: recently banned\n             4: unknown error\n@@ -6117,15 +6133,28 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP\n                 return mplew.getPacket();\n         }\n         \n+        /*  0: Name available\n+         * >0: Name is in use\n+         * <0: Unknown error\n+         */\n         \n-        public static byte[] sendNameTransferCheck(boolean canUseName) {\n+        public static byte[] sendNameTransferCheck(String availableName, boolean canUseName) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.CASHSHOP_CHECK_NAME_CHANGE.getValue());\n-                mplew.writeShort(0);\n+                //Send provided name back to client to add to temporary cache of checked & accepted names\n+                mplew.writeMapleAsciiString(availableName);\n                 mplew.writeBool(!canUseName);\n                 return mplew.getPacket();\n         }\n         \n+        public static byte[] showNameChangeSuccess(Item item, int accountId) {\n+                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.CASHSHOP_OPERATION.getValue());\n+                mplew.write(0x9E);\n+                addCashItemInformation(mplew, item, accountId);\n+                return mplew.getPacket();\n+        }\n+        \n         public static byte[] showMTSCash(MapleCharacter p) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.MTS_OPERATION2.getValue());\n@@ -7708,8 +7737,20 @@ public static void addCashItemInformation(final MaplePacketLittleEndianWriter mp\n                 return mplew.getPacket();\n         }\n         \n+        public static byte[] showBoughtCashRing(Item ring, String recipient, int accountId) {\n+            final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+            mplew.writeShort(SendOpcode.CASHSHOP_OPERATION.getValue());\n+            mplew.write(0x87);\n+            addCashItemInformation(mplew, ring, accountId);\n+            mplew.writeMapleAsciiString(recipient);\n+            mplew.writeInt(ring.getItemId());\n+            mplew.writeShort(1); //quantity\n+            return mplew.getPacket();\n+        }\n+        \n         /*\n          * 00 = Due to an unknown error, failed\n+         * A3 = Request timed out. Please try again.\n          * A4 = Due to an unknown error, failed + warpout\n          * A5 = You don't have enough cash.\n          * A6 = long as shet msg\n@@ -7726,6 +7767,7 @@ public static void addCashItemInformation(final MaplePacketLittleEndianWriter mp\n          * B2 = Expired Coupon\n          * B3 = Coupon has been used already\n          * B4 = Nexon internet cafes? lolfk\n+         * B8 = Due to gender restrictions, the coupon cannot be used.\n          * BB = inv full\n          * BC = long as shet \"(not?) available to purchase by a use at the premium\" msg\n          * BD = invalid gift recipient\n@@ -7738,6 +7780,8 @@ public static void addCashItemInformation(final MaplePacketLittleEndianWriter mp\n          * C4 = check birthday code\n          * C7 = only available to users buying cash item, whatever msg too long\n          * C8 = already applied for this\n+         * CD = You have reached the daily purchase limit for the cash shop.\n+         * D0 = coupon account limit reached\n          * D2 = coupon system currently unavailable\n          * D3 = item can only be used 15 days after registration\n          * D4 = not enough gift tokens\n@@ -7851,6 +7895,23 @@ public static void addCashItemInformation(final MaplePacketLittleEndianWriter mp\n \n                 return mplew.getPacket();\n         }\n+        \n+        public static byte[] deleteCashItem(Item item) {\n+            final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+            mplew.writeShort(SendOpcode.CASHSHOP_OPERATION.getValue());\n+            mplew.write(0x6C);\n+            mplew.writeLong(item.getCashId());\n+            return mplew.getPacket();\n+        }\n+        \n+        public static byte[] refundCashItem(Item item, int maplePoints) {\n+            final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+            mplew.writeShort(SendOpcode.CASHSHOP_OPERATION.getValue());\n+            mplew.write(0x85);\n+            mplew.writeLong(item.getCashId());\n+            mplew.writeInt(maplePoints);\n+            return mplew.getPacket();\n+        }\n \n         public static byte[] putIntoCashInventory(Item item, int accountId) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();"}]}]},
