{"fetchDate": "2019-12-19", "content": [{"sha": "012f965f6ae9464038bfc577248efc3ecf78d81f", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6MDEyZjk2NWY2YWU5NDY0MDM4YmZjNTc3MjQ4ZWZjM2VjZjc4ZDgxZg==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-12-19T18:40:45Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-12-19T18:40:45Z"}, "message": "New Year cards + Info on PlayerShops/HiredMerchants\n\nNew Year is coming soon! Figured out implementation for the New Year cards. Opcodes and packet structures are thanks to Eric.\nNew Year effect crashes/dc's the player in some cases.\nAdded informative notes to shop owners when transactioning an item/bundle.", "tree": {"sha": "370f569a899aeb21402ceaaa011489fcd14baedf", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/370f569a899aeb21402ceaaa011489fcd14baedf"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/012f965f6ae9464038bfc577248efc3ecf78d81f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/012f965f6ae9464038bfc577248efc3ecf78d81f", "html_url": "https://github.com/ronancpl/HeavenMS/commit/012f965f6ae9464038bfc577248efc3ecf78d81f", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/012f965f6ae9464038bfc577248efc3ecf78d81f/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1126213cc51831004c98121b0c738a67bae16e9", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/c1126213cc51831004c98121b0c738a67bae16e9", "html_url": "https://github.com/ronancpl/HeavenMS/commit/c1126213cc51831004c98121b0c738a67bae16e9"}], "stats": {"total": 855, "additions": 799, "deletions": 56}, "files": [{"sha": "4881b9179aaabc4bca674944208ecf79079f3614", "filename": "docs/feature_list.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/docs/feature_list.md", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/docs/feature_list.md", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/feature_list.md?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -49,6 +49,7 @@ Player Social Network:\n \n * Guild and Alliance system fully functional.\n * Beginners can create and join a \"beginner-only\" party (characters up to level 10).\n+* Enhanced synchronization on Player Shops and Hired Merchants. Transactions made are instantly informed to the owner.\n \n Cash & Items:\n \n@@ -61,6 +62,7 @@ Cash & Items:\n * Vega's spell.\n * Owl of Minerva.\n * Pet item ignore.\n+* New Year's card (New Year effect sometimes d/c's a player).\n \n Monsters, Maps & Reactors:\n "}, {"sha": "700c55ecac5065635372d54f248dc5ea2b01044e", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -723,4 +723,9 @@ Adicionado comando \"droplimit\", cuja funcionalidade \n 11 - 12 Dezembro 2017,\n Resolvido bug onde contador do drops do mapa n\ufffdo atualizaria seu valor em casos onde reatores consomem itens ou ao se aplicar comandos como \"cleardrops\".\n Corrigido server enviando packets com BroadcastMessage somente para o world 0, ao inv\ufffds de ser para o world alvo.\n-MapleQuestItemFetcher agora mostra quests j\ufffd expiradas no relat\ufffdrio.\n\\ No newline at end of file\n+MapleQuestItemFetcher agora mostra quests j\ufffd expiradas no relat\ufffdrio.\n+\n+17 - 19 Dezembro 2017,\n+Implementado New Years card.\n+Adicionado informa\ufffd\ufffdo, destinado ao dono da loja, de compra de itens dos Player Shops e dos Hired Merchants.\n+Resolvido um problema com overflow em Player Shops.\n\\ No newline at end of file"}, {"sha": "777f0eb6f930095b04becebbe90eadcd55c6ad87", "filename": "sql/db_database.sql", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/sql/db_database.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/sql/db_database.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_database.sql?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -16369,6 +16369,21 @@ CREATE TABLE IF NOT EXISTS `mts_items` (\n   PRIMARY KEY (`id`)\n ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n+CREATE TABLE IF NOT EXISTS `newyear` (\n+  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n+  `senderid` int(10) NOT NULL DEFAULT '-1',\n+  `sendername` varchar(13) DEFAULT '',\n+  `receiverid` int(10) NOT NULL DEFAULT '-1',\n+  `receivername` varchar(13) DEFAULT '',\n+  `message` varchar(120) DEFAULT '',\n+  `senderdiscard` tinyint(1) NOT NULL DEFAULT '0',\n+  `receiverdiscard` tinyint(1) NOT NULL DEFAULT '0',\n+  `received` tinyint(1) NOT NULL DEFAULT '0',\n+  `timesent` bigint(20) unsigned NOT NULL,\n+  `timereceived` bigint(20) unsigned NOT NULL,\n+  PRIMARY KEY (`id`)\n+) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n+\n CREATE TABLE IF NOT EXISTS `notes` (\n   `id` int(11) NOT NULL AUTO_INCREMENT,\n   `to` varchar(13) NOT NULL DEFAULT '',"}, {"sha": "41e921b01a8647e7495c11ced75549a86fde2705", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 42, "deletions": 4, "changes": 46, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -116,6 +116,7 @@\n import client.inventory.MapleWeaponType;\n import client.inventory.ModifyInventory;\n import client.inventory.PetDataFactory;\n+import client.newyear.NewYearCardRecord;\n import constants.ExpTable;\n import constants.GameConstants;\n import constants.ItemConstants;\n@@ -238,6 +239,7 @@\n     private MonsterBook monsterbook;\n     private MapleRing marriageRing;\n     private CashShop cashshop;\n+    private Set<NewYearCardRecord> newyears = new LinkedHashSet<>();\n     private SavedLocation savedLocations[];\n     private SkillMacro[] skillMacros = new SkillMacro[5];\n     private List<Integer> lastmonthfameids;\n@@ -830,7 +832,7 @@ public void Hide(boolean hide, boolean login) {\n                 announce(MaplePacketCreator.getGMEffect(0x10, (byte) 0));\n                 List<MapleBuffStat> dsstat = Collections.singletonList(MapleBuffStat.DARKSIGHT);\n                 getMap().broadcastGMMessage(this, MaplePacketCreator.cancelForeignBuff(id, dsstat), false);\n-                getMap().broadcastMessage(this, MaplePacketCreator.spawnPlayerMapobject(this), false);\n+                getMap().broadcastMessage(this, MaplePacketCreator.spawnPlayerMapObject(this), false);\n                 \n                 for(MapleSummon ms: this.getSummonsValues()) {\n                     getMap().broadcastNONGMMessage(this, MaplePacketCreator.spawnSummon(ms, false), false);\n@@ -843,7 +845,7 @@ public void Hide(boolean hide, boolean login) {\n                 if (!login) {\n                     getMap().broadcastMessage(this, MaplePacketCreator.removePlayerFromMap(getId()), false);\n                 }\n-                getMap().broadcastGMMessage(this, MaplePacketCreator.spawnPlayerMapobject(this), false);\n+                getMap().broadcastGMMessage(this, MaplePacketCreator.spawnPlayerMapObject(this), false);\n                 List<Pair<MapleBuffStat, Integer>> dsstat = Collections.singletonList(new Pair<MapleBuffStat, Integer>(MapleBuffStat.DARKSIGHT, 0));\n                 getMap().broadcastGMMessage(this, MaplePacketCreator.giveForeignBuff(id, dsstat), false);\n                 for (MapleMonster mon : this.getControlledMonsters()) {\n@@ -1074,7 +1076,7 @@ public void changeJob(MapleJob newJob) {\n         guildUpdate();\n         \n         getMap().broadcastMessage(this, MaplePacketCreator.removePlayerFromMap(this.getId()), false);\n-        getMap().broadcastMessage(this, MaplePacketCreator.spawnPlayerMapobject(this), false);\n+        getMap().broadcastMessage(this, MaplePacketCreator.spawnPlayerMapObject(this), false);\n         getMap().broadcastMessage(this, MaplePacketCreator.showForeignEffect(getId(), 8), false);\n         \n         if (GameConstants.hasSPTable(newJob) && newJob.getId() != 2001) {\n@@ -5338,6 +5340,8 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool\n                 }\n             }\n             \n+            NewYearCardRecord.loadPlayerNewYearCards(ret);\n+            \n             PreparedStatement ps2, ps3;\n             ResultSet rs2, rs3;\n             \n@@ -7571,7 +7575,7 @@ public void sendDestroyData(MapleClient client) {\n     @Override\n     public void sendSpawnData(MapleClient client) {\n         if (!this.isHidden() || client.getPlayer().gmLevel() > 1) {\n-            client.announce(MaplePacketCreator.spawnPlayerMapobject(this));\n+            client.announce(MaplePacketCreator.spawnPlayerMapObject(this));\n         }\n \n         if (this.isHidden()) {\n@@ -7600,6 +7604,40 @@ public String getLinkedName() {\n     public CashShop getCashShop() {\n         return cashshop;\n     }\n+    \n+    public Set<NewYearCardRecord> getNewYearRecords() {\n+        return newyears;\n+    }\n+    \n+    public Set<NewYearCardRecord> getReceivedNewYearRecords() {\n+        Set<NewYearCardRecord> received = new LinkedHashSet<>();\n+        \n+        for(NewYearCardRecord nyc : newyears) {\n+            if(nyc.isReceiverCardReceived()) {\n+                received.add(nyc);\n+            }\n+        }\n+        \n+        return received;\n+    }\n+    \n+    public NewYearCardRecord getNewYearRecord(int cardid) {\n+        for(NewYearCardRecord nyc : newyears) {\n+            if(nyc.getId() == cardid) {\n+                return nyc;\n+            }\n+        }\n+        \n+        return null;\n+    }\n+    \n+    public void addNewYearRecord(NewYearCardRecord newyear) {\n+        newyears.add(newyear);\n+    }\n+    \n+    public void removeNewYearRecord(NewYearCardRecord newyear) {\n+        newyears.remove(newyear);\n+    }\n \n     public void portalDelay(long delay) {\n         this.portaldelay = System.currentTimeMillis() + delay;"}, {"sha": "2ff15d046e9f91c40c31b515e9238dbdd46bff60", "filename": "src/client/newyear/NewYearCardRecord.java", "status": "added", "additions": 377, "deletions": 0, "changes": 377, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/client/newyear/NewYearCardRecord.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/client/newyear/NewYearCardRecord.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/newyear/NewYearCardRecord.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -0,0 +1,377 @@\n+/*\n+ * This file is part of the HeavenMS (MapleSolaxiaV2) Maple Story Server\n+ *\n+ * Copyright (C) 2017 RonanLana\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package client.newyear;\n+\n+import client.MapleCharacter;\n+\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.ScheduledFuture;\n+import net.server.Server;\n+import server.TimerManager;\n+import tools.DatabaseConnection;\n+import tools.MaplePacketCreator;\n+\n+/**\n+ *\n+ * @author Ronan (credits to Eric for showing the New Year opcodes and handler layout)\n+ */\n+public class NewYearCardRecord {\n+    private int id;\n+    \n+    private int senderId; \n+    private String senderName; \n+    private boolean senderDiscardCard; \n+    \n+    private int receiverId; \n+    private String receiverName; \n+    private boolean receiverDiscardCard; \n+    private boolean receiverReceivedCard;\n+    \n+    private String stringContent;\n+    private long dateSent = 0;\n+    private long dateReceived = 0;\n+    \n+    private ScheduledFuture<?> sendTask = null;\n+    \n+    public NewYearCardRecord(int senderid, String sender, int receiverid, String receiver, String message) {\n+        this.id = -1;\n+        \n+        this.senderId = senderid;\n+        this.senderName = sender;\n+        this.senderDiscardCard = false;\n+        \n+        this.receiverId = receiverid;\n+        this.receiverName = receiver;\n+        this.receiverDiscardCard = false;\n+        this.receiverReceivedCard = false;\n+        \n+        this.stringContent = message;\n+        \n+        this.dateSent = System.currentTimeMillis();\n+        this.dateReceived = 0;\n+    }\n+    \n+    private void setExtraNewYearCardRecord(int id, boolean senderDiscardCard, boolean receiverDiscardCard, boolean receiverReceivedCard, long dateSent, long dateReceived) {\n+        this.id = id;\n+        this.senderDiscardCard = senderDiscardCard;\n+        this.receiverDiscardCard = receiverDiscardCard;\n+        this.receiverReceivedCard = receiverReceivedCard;\n+        \n+        this.dateSent = dateSent;\n+        this.dateReceived = dateReceived;\n+    }\n+    \n+    public void setId(int cardid) {\n+        this.id = cardid;\n+    }\n+    \n+    public int getId() {\n+        return this.id;\n+    }\n+    \n+    public int getSenderId() {\n+        return senderId;\n+    }\n+    \n+    public String getSenderName() {\n+        return senderName;\n+    }\n+    \n+    public boolean isSenderCardDiscarded() {\n+        return senderDiscardCard;\n+    }\n+    \n+    public int getReceiverId() {\n+        return receiverId;\n+    }\n+    \n+    public String getReceiverName() {\n+        return receiverName;\n+    }\n+    \n+    public boolean isReceiverCardDiscarded() {\n+        return receiverDiscardCard;\n+    }\n+    \n+    public boolean isReceiverCardReceived() {\n+        return receiverReceivedCard;\n+    }\n+    \n+    public String getMessage() {\n+        return stringContent;\n+    }\n+    \n+    public long getDateSent() {\n+        return dateSent;\n+    }\n+    \n+    public long getDateReceived() {\n+        return dateReceived;\n+    }\n+            \n+    public static void saveNewYearCard(NewYearCardRecord newyear) {\n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            try (PreparedStatement ps = con.prepareStatement(\"INSERT INTO newyear VALUES (DEFAULT, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\")) {\n+                ps.setInt(1, newyear.senderId);\n+                ps.setString(2, newyear.senderName);\n+                ps.setInt(3, newyear.receiverId);\n+                ps.setString(4, newyear.receiverName);\n+                \n+                ps.setString(5, newyear.stringContent);\n+                \n+                ps.setBoolean(6, newyear.senderDiscardCard);\n+                ps.setBoolean(7, newyear.receiverDiscardCard);\n+                ps.setBoolean(8, newyear.receiverReceivedCard);\n+                \n+                ps.setLong(9, newyear.dateSent);\n+                ps.setLong(10, newyear.dateReceived);\n+        \n+                ps.executeUpdate();\n+                try (ResultSet rs = ps.getGeneratedKeys()) {\n+                    rs.next();\n+                    newyear.id = rs.getInt(1);\n+                }\n+            }\n+        } catch(SQLException sqle) {\n+            sqle.printStackTrace();\n+        }\n+    }\n+    \n+    public static void updateNewYearCard(NewYearCardRecord newyear) {\n+        newyear.receiverReceivedCard = true;\n+        newyear.dateReceived = System.currentTimeMillis();\n+        \n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            try (PreparedStatement ps = con.prepareStatement(\"UPDATE newyear SET received=1, timereceived=? WHERE id=?\")) {\n+                ps.setLong(1, newyear.dateReceived);\n+                ps.setInt(2, newyear.id);\n+        \n+                ps.executeUpdate();\n+            }\n+        } catch(SQLException sqle) {\n+            sqle.printStackTrace();\n+        }\n+    }\n+    \n+    public static NewYearCardRecord loadNewYearCard(int cardid) {\n+        NewYearCardRecord nyc = Server.getInstance().getNewYearCard(cardid);\n+        if(nyc != null) return nyc;\n+        \n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT * FROM newyear WHERE id = ?\")) {\n+                ps.setInt(1, cardid);\n+                try (ResultSet rs = ps.executeQuery()) {\n+                    if (rs.next()) {\n+                        NewYearCardRecord newyear = new NewYearCardRecord(rs.getInt(\"senderid\"), rs.getString(\"sendername\"), rs.getInt(\"receiverid\"), rs.getString(\"receivername\"), rs.getString(\"message\"));\n+                        newyear.setExtraNewYearCardRecord(rs.getInt(\"id\"), rs.getBoolean(\"senderdiscard\"), rs.getBoolean(\"receiverdiscard\"), rs.getBoolean(\"received\"), rs.getLong(\"timesent\"), rs.getLong(\"timereceived\"));\n+                        \n+                        Server.getInstance().setNewYearCard(newyear);\n+                        return newyear;\n+                    }\n+                }\n+            }\n+        } catch(SQLException sqle) {\n+            sqle.printStackTrace();\n+        }\n+        \n+        return null;\n+    }\n+    \n+    public static void loadPlayerNewYearCards(MapleCharacter chr) {\n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT * FROM newyear WHERE senderid = ? OR receiverid = ?\")) {\n+                ps.setInt(1, chr.getId());\n+                ps.setInt(2, chr.getId());\n+                try (ResultSet rs = ps.executeQuery()) {\n+                    while (rs.next()) {\n+                        NewYearCardRecord newyear = new NewYearCardRecord(rs.getInt(\"senderid\"), rs.getString(\"sendername\"), rs.getInt(\"receiverid\"), rs.getString(\"receivername\"), rs.getString(\"message\"));\n+                        newyear.setExtraNewYearCardRecord(rs.getInt(\"id\"), rs.getBoolean(\"senderdiscard\"), rs.getBoolean(\"receiverdiscard\"), rs.getBoolean(\"received\"), rs.getLong(\"timesent\"), rs.getLong(\"timereceived\"));\n+                        \n+                        chr.addNewYearRecord(newyear);\n+                    }\n+                }\n+            }\n+        } catch(SQLException sqle) {\n+            sqle.printStackTrace();\n+        }\n+    }\n+    \n+    public static void printNewYearRecords(MapleCharacter chr) {\n+        chr.dropMessage(5, \"New Years: \" + chr.getNewYearRecords().size());\n+        \n+        for(NewYearCardRecord nyc : chr.getNewYearRecords()) {\n+            chr.dropMessage(5, \"-------------------------------\");\n+            \n+            chr.dropMessage(5, \"Id: \" + nyc.id);\n+            \n+            chr.dropMessage(5, \"Sender id: \" + nyc.senderId);\n+            chr.dropMessage(5, \"Sender name: \" + nyc.senderName);\n+            chr.dropMessage(5, \"Sender discard: \" + nyc.senderDiscardCard);\n+            \n+            chr.dropMessage(5, \"Receiver id: \" + nyc.receiverId);\n+            chr.dropMessage(5, \"Receiver name: \" + nyc.receiverName);\n+            chr.dropMessage(5, \"Receiver discard: \" + nyc.receiverDiscardCard);\n+            chr.dropMessage(5, \"Received: \" + nyc.receiverReceivedCard);\n+            \n+            chr.dropMessage(5, \"Message: \" + nyc.stringContent);\n+            chr.dropMessage(5, \"Date sent: \" + nyc.dateSent);\n+            chr.dropMessage(5, \"Date recv: \" + nyc.dateReceived);\n+        }\n+    }\n+    \n+    private static int getCharacterWorld(int receiverid) {\n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT world FROM characters WHERE id = ?\")) {\n+                ps.setInt(1, receiverid);\n+                try (ResultSet rs = ps.executeQuery()) {\n+                    if (rs.next()) {\n+                        return rs.getInt(\"world\");\n+                    }\n+                }\n+            }\n+        } catch(SQLException sqle) {\n+            sqle.printStackTrace();\n+        }\n+        \n+        return -1;\n+    }\n+    \n+    public void startNewYearCardTask() {\n+        if(sendTask != null) return;\n+        \n+        sendTask = TimerManager.getInstance().register(new Runnable() {\n+            @Override\n+            public void run() {\n+                int world = getCharacterWorld(receiverId);\n+                if(world == -1) {\n+                    sendTask.cancel(false);\n+                    sendTask = null;\n+                    \n+                    return;\n+                }\n+                \n+                MapleCharacter target = Server.getInstance().getWorld(world).getPlayerStorage().getCharacterById(receiverId);\n+                if(target != null && target.isLoggedin() && !target.isAwayFromWorld()) {\n+                    target.announce(MaplePacketCreator.onNewYearCardRes(target, NewYearCardRecord.this, 0xC, 0));\n+                }\n+            }\n+        }, 1000 * 60 * 60); //1 Hour\n+    }\n+    \n+    public void stopNewYearCardTask() {\n+        if(sendTask != null) {\n+            sendTask.cancel(false);\n+            sendTask = null;\n+        }\n+    }\n+    \n+    private static void deleteNewYearCard(int id) {\n+        Server.getInstance().removeNewYearCard(id);\n+        \n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            try (PreparedStatement ps = con.prepareStatement(\"DELETE FROM newyear WHERE id = ?\")) {\n+                ps.setInt(1, id);\n+                ps.executeUpdate();\n+            }\n+        } catch(SQLException sqle) {\n+            sqle.printStackTrace();\n+        }\n+    }\n+    \n+    public static void removeAllNewYearCard(boolean send, MapleCharacter chr) {\n+        int cid = chr.getId();\n+        \n+        /* not truly needed since it's going to be hard removed from the DB\n+        String actor = (send ? \"sender\" : \"receiver\");\n+        \n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            try (PreparedStatement ps = con.prepareStatement(\"UPDATE newyear SET \" + actor + \"id = 1, received = 0 WHERE \" + actor + \"id = ?\")) {\n+                ps.setInt(1, cid);\n+                ps.executeUpdate();\n+            }\n+        } catch(SQLException sqle) {\n+            sqle.printStackTrace();\n+        }\n+        */\n+        \n+        Set<NewYearCardRecord> set = new HashSet<>(chr.getNewYearRecords());\n+        for(NewYearCardRecord nyc : set) {\n+            if(send) {\n+                if(nyc.senderId == cid) {\n+                    nyc.senderDiscardCard = true;\n+                    nyc.receiverReceivedCard = false;\n+                    \n+                    chr.removeNewYearRecord(nyc);\n+                    deleteNewYearCard(nyc.id);\n+                    \n+                    chr.getMap().broadcastMessage(MaplePacketCreator.onNewYearCardRes(chr, nyc, 0xE, 0));\n+\n+                    MapleCharacter other = chr.getClient().getWorldServer().getPlayerStorage().getCharacterById(nyc.getReceiverId());\n+                    if(other != null && other.isLoggedin() && !other.isAwayFromWorld()) {\n+                        other.removeNewYearRecord(nyc);\n+                        other.getMap().broadcastMessage(MaplePacketCreator.onNewYearCardRes(other, nyc, 0xE, 0));\n+\n+                        other.dropMessage(6, \"[NEW YEAR] \" + chr.getName() + \" threw away the New Year card.\");\n+                    }\n+                }\n+            } else {\n+                if(nyc.receiverId == cid) {\n+                    nyc.receiverDiscardCard = true;\n+                    nyc.receiverReceivedCard = false;\n+                    \n+                    chr.removeNewYearRecord(nyc);\n+                    deleteNewYearCard(nyc.id);\n+                    \n+                    chr.getMap().broadcastMessage(MaplePacketCreator.onNewYearCardRes(chr, nyc, 0xE, 0));\n+\n+                    MapleCharacter other = chr.getClient().getWorldServer().getPlayerStorage().getCharacterById(nyc.getSenderId());\n+                    if(other != null && other.isLoggedin() && !other.isAwayFromWorld()) {\n+                        other.removeNewYearRecord(nyc);\n+                        other.getMap().broadcastMessage(MaplePacketCreator.onNewYearCardRes(other, nyc, 0xE, 0));\n+\n+                        other.dropMessage(6, \"[NEW YEAR] \" + chr.getName() + \" threw away the New Year card.\");\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    \n+    public static void startPendingNewYearCardRequests() {\n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT * FROM newyear WHERE timereceived = 0 AND senderdiscard = 0\")) {\n+                try (ResultSet rs = ps.executeQuery()) {\n+                    while (rs.next()) {\n+                        NewYearCardRecord newyear = new NewYearCardRecord(rs.getInt(\"senderid\"), rs.getString(\"sendername\"), rs.getInt(\"receiverid\"), rs.getString(\"receivername\"), rs.getString(\"message\"));\n+                        newyear.setExtraNewYearCardRecord(rs.getInt(\"id\"), rs.getBoolean(\"senderdiscard\"), rs.getBoolean(\"receiverdiscard\"), rs.getBoolean(\"received\"), rs.getLong(\"timesent\"), rs.getLong(\"timereceived\"));\n+                        \n+                        Server.getInstance().setNewYearCard(newyear);\n+                        newyear.startNewYearCardTask();\n+                    }\n+                }\n+            }\n+        } catch(SQLException sqle) {\n+            sqle.printStackTrace();\n+        }\n+    }\n+}"}, {"sha": "d249f0417af8e84b52001d33b1ad7f66139ae4a6", "filename": "src/constants/ItemConstants.java", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/constants/ItemConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/constants/ItemConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ItemConstants.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -89,6 +89,14 @@ public static boolean isPet(int itemId) {\n         return itemId / 1000 == 5000;\n     }\n     \n+    public static boolean isNewYearCardEtc(int itemId) { \n+        return itemId / 10000 == 430;\n+    } \n+     \n+    public static boolean isNewYearCardUse(int itemId) { \n+        return itemId / 10000 == 216;\n+    }\n+    \n     public static boolean isAccessory(int itemId) {\n         return itemId >= 1110000 && itemId < 1140000;\n     }"}, {"sha": "793729d974e40d925c86f769c4c71ab04b2fb278", "filename": "src/net/PacketProcessor.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/PacketProcessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/PacketProcessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/PacketProcessor.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -226,6 +226,7 @@ public void reset(int channel) {\n             registerHandler(RecvOpcode.ALLIANCE_OPERATION, new AllianceOperationHandler());\n             registerHandler(RecvOpcode.USE_SOLOMON_ITEM, new UseSolomonHandler());\n             registerHandler(RecvOpcode.USE_GACHA_EXP, new UseGachaExpHandler());\n+            registerHandler(RecvOpcode.NEW_YEAR_CARD_REQUEST, new NewYearCardHandler());\n             registerHandler(RecvOpcode.USE_ITEM_REWARD, new ItemRewardHandler());\n             registerHandler(RecvOpcode.USE_REMOTE, new RemoteGachaponHandler());\n             registerHandler(RecvOpcode.ACCEPT_FAMILY, new AcceptFamilyHandler());"}, {"sha": "0d4fab95e28b7c2ff8bd67a5ccdd1e33acd70e58", "filename": "src/net/RecvOpcode.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/RecvOpcode.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/RecvOpcode.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/RecvOpcode.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -146,6 +146,7 @@\n     ENTER_MTS(0x9C),\n     USE_SOLOMON_ITEM(0x9D),\n     USE_GACHA_EXP(0x9E),\n+    NEW_YEAR_CARD_REQUEST(0x9F),\n     CLICK_GUIDE(0xA2),\n     ARAN_COMBO_COUNTER(0xA3),\n     MOVE_PET(0xA7),"}, {"sha": "fd2ecf5c07244f0090a2c1794dd27ad6a65522ab", "filename": "src/net/server/Server.java", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/server/Server.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/server/Server.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/Server.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -68,6 +68,7 @@\n import client.MapleClient;\n import client.MapleCharacter;\n import client.SkillFactory;\n+import client.newyear.NewYearCardRecord;\n import constants.ItemConstants;\n import constants.ServerConstants;\n import java.util.Calendar;\n@@ -91,6 +92,7 @@\n     private final Lock srvLock = new MonitoredReentrantLock(MonitoredLockType.SERVER);\n     private final PlayerBuffStorage buffStorage = new PlayerBuffStorage();\n     private final Map<Integer, MapleAlliance> alliances = new HashMap<>(100);\n+    private final Map<Integer, NewYearCardRecord> newyears = new HashMap<>();\n     \n     private boolean online = false;\n     public static long uptime = System.currentTimeMillis();\n@@ -109,6 +111,18 @@ public boolean isOnline() {\n     public List<Pair<Integer, String>> worldRecommendedList() {\n         return worldRecommendedList;\n     }\n+    \n+    public void setNewYearCard(NewYearCardRecord nyc) {\n+        newyears.put(nyc.getId(), nyc);\n+    }\n+    \n+    public NewYearCardRecord getNewYearCard(int cardid) {\n+        return newyears.get(cardid);\n+    }\n+    \n+    public NewYearCardRecord removeNewYearCard(int cardid) {\n+        return newyears.remove(cardid);\n+    }\n \n     /*\n     public void removeChannel(int worldid, int channel) {   //lol don't!\n@@ -306,6 +320,8 @@ public void run() {\n \tMapleQuest.loadAllQuest();\n \tSystem.out.println(\"Quest loaded in \" + ((System.currentTimeMillis() - timeToTake) / 1000.0) + \" seconds\\r\\n\");\n \t\n+        NewYearCardRecord.startPendingNewYearCardRequests();\n+        \n         if(ServerConstants.USE_THREAD_TRACKER) ThreadTracker.getInstance().registerThreadTrackerTask();\n         \n         try {"}, {"sha": "83d2f78b0601206458f9d88611814a153f2bd7f4", "filename": "src/net/server/channel/handlers/GuildOperationHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/server/channel/handlers/GuildOperationHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/server/channel/handlers/GuildOperationHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/GuildOperationHandler.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -48,7 +48,7 @@ private boolean isGuildNameAcceptable(String name) {\n \n     private void respawnPlayer(MapleCharacter mc) {\n         mc.getMap().broadcastMessage(mc, MaplePacketCreator.removePlayerFromMap(mc.getId()), false);\n-        mc.getMap().broadcastMessage(mc, MaplePacketCreator.spawnPlayerMapobject(mc), false);\n+        mc.getMap().broadcastMessage(mc, MaplePacketCreator.spawnPlayerMapObject(mc), false);\n     }\n \n     private class Invited {"}, {"sha": "58d9cfd69579a3ba014c4c01faec4dd89238bc90", "filename": "src/net/server/channel/handlers/NewYearCardHandler.java", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/server/channel/handlers/NewYearCardHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/server/channel/handlers/NewYearCardHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/NewYearCardHandler.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -0,0 +1,153 @@\n+/*\n+ * This file is part of the HeavenMS (MapleSolaxiaV2) Maple Story Server\n+ *\n+ * Copyright (C) 2017 RonanLana\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package net.server.channel.handlers;\n+\n+import constants.ItemConstants;\n+\n+import client.MapleCharacter;\n+import client.MapleClient;\n+import client.inventory.Item;\n+import client.newyear.NewYearCardRecord;\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import net.AbstractMaplePacketHandler;\n+import net.server.Server;\n+import server.MapleItemInformationProvider;\n+import tools.DatabaseConnection;\n+import tools.MaplePacketCreator;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n+/**\n+ *\n+ * @author Ronan - header layout courtesy of Eric \n+ */\n+public final class NewYearCardHandler extends AbstractMaplePacketHandler {\n+\n+    @Override\n+    public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {        \n+        final MapleCharacter player = c.getPlayer();\n+        byte reqMode = slea.readByte();                 //[00] -> NewYearReq (0 = Send) \n+        \n+        if(reqMode == 0) {  // card has been sent\n+            if(player.haveItem(2160101)) {  // new year's card\n+                short slot = slea.readShort();                      //[00 2C] -> nPOS (Item Slot Pos) \n+                int itemid = slea.readInt();                        //[00 20 F5 E5] -> nItemID (item id) \n+\n+                int status = getValidNewYearCardStatus(itemid, player, slot);\n+                if(status == 0) {\n+                    if(player.canHold(4300000, 1)) {\n+                        String receiver = slea.readMapleAsciiString();  //[04 00 54 65 73 74] -> sReceiverName (person to send to) \n+\n+                        int receiverid = getReceiverId(receiver, c.getWorld());\n+                        if(receiverid != -1) {\n+                            if(receiverid != c.getPlayer().getId()) {\n+                                String message = slea.readMapleAsciiString();   //[06 00 4C 65 74 74 65 72] -> sContent (message)  \n+\n+                                NewYearCardRecord newyear = new NewYearCardRecord(player.getId(), player.getName(), receiverid, receiver, message);\n+                                NewYearCardRecord.saveNewYearCard(newyear);\n+                                player.addNewYearRecord(newyear);\n+\n+                                player.getClient().getAbstractPlayerInteraction().gainItem(2160101, (short)-1);\n+                                player.getClient().getAbstractPlayerInteraction().gainItem(4300000, (short) 1);\n+\n+                                Server.getInstance().setNewYearCard(newyear);\n+                                newyear.startNewYearCardTask();\n+                                player.announce(MaplePacketCreator.onNewYearCardRes(player, newyear, 4, 0));    // successfully sent\n+                            } else {\n+                                player.announce(MaplePacketCreator.onNewYearCardRes(player, -1, 5, 0xF));   // cannot send to yourself\n+                            }\n+                        } else {\n+                            player.announce(MaplePacketCreator.onNewYearCardRes(player, -1, 5, 0x13));  // cannot find such character\n+                        }\n+                    } else {\n+                        player.announce(MaplePacketCreator.onNewYearCardRes(player, -1, 5, 0x10));  // inventory full\n+                    }\n+                } else {\n+                    player.announce(MaplePacketCreator.onNewYearCardRes(player, -1, 5, status));  // item and inventory errors\n+                }\n+            } else {\n+                player.announce(MaplePacketCreator.onNewYearCardRes(player, -1, 5, 0x11));  // have no card to send\n+            }\n+        } else {    //receiver accepted the card\n+            int cardid = slea.readInt();\n+            \n+            NewYearCardRecord newyear = NewYearCardRecord.loadNewYearCard(cardid);\n+            \n+            if(newyear != null && newyear.getReceiverId() == player.getId() && !newyear.isReceiverCardReceived()) {\n+                if(!newyear.isSenderCardDiscarded()) {\n+                    if(player.canHold(4301000, 1)) {\n+                        newyear.stopNewYearCardTask();\n+                        NewYearCardRecord.updateNewYearCard(newyear);\n+\n+                        player.getClient().getAbstractPlayerInteraction().gainItem(4301000, (short)1);\n+                        if(!newyear.getMessage().isEmpty()) player.dropMessage(6, \"[NEW YEAR] \" + newyear.getSenderName() + \": \" + newyear.getMessage());\n+\n+                        player.addNewYearRecord(newyear);\n+                        player.announce(MaplePacketCreator.onNewYearCardRes(player, newyear, 6, 0));    // successfully rcvd\n+\n+                        player.getMap().broadcastMessage(MaplePacketCreator.onNewYearCardRes(player, newyear, 0xD, 0));\n+\n+                        MapleCharacter sender = c.getWorldServer().getPlayerStorage().getCharacterById(newyear.getSenderId());\n+                        if(sender != null && sender.isLoggedin() && !sender.isAwayFromWorld()) {\n+                            sender.getMap().broadcastMessage(MaplePacketCreator.onNewYearCardRes(sender, newyear, 0xD, 0));\n+                            sender.dropMessage(6, \"[NEW YEAR] Your addressee successfully received the New Year card.\");\n+                        }\n+                    } else {\n+                        player.announce(MaplePacketCreator.onNewYearCardRes(player, -1, 5, 0x10));  // inventory full\n+                    }\n+                } else {\n+                    player.dropMessage(6, \"[NEW YEAR] The sender of the New Year card already dropped it. Nothing to receive.\");\n+                }\n+            } else {\n+                if(newyear == null) {\n+                    player.dropMessage(6, \"[NEW YEAR] The sender of the New Year card already dropped it. Nothing to receive.\");\n+                }\n+            }\n+        }\n+    }\n+    \n+    private static int getReceiverId(String receiver, int world) {\n+        try (Connection con = DatabaseConnection.getConnection()) {\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT id, world FROM characters WHERE name LIKE ?\")) {\n+                ps.setString(1, receiver);\n+                try (ResultSet rs = ps.executeQuery()) {\n+                    if (rs.next()) {\n+                        if(rs.getInt(\"world\") == world) {\n+                            return rs.getInt(\"id\");\n+                        }\n+                    }\n+                }\n+            }\n+        } catch(SQLException sqle) {\n+            sqle.printStackTrace();\n+        }\n+        \n+        return -1;\n+    }\n+    \n+    private static int getValidNewYearCardStatus(int itemid, MapleCharacter player, short slot) {\n+        if(!ItemConstants.isNewYearCardUse(itemid)) return 0x14;\n+        \n+        Item it = player.getInventory(MapleItemInformationProvider.getInstance().getInventoryType(itemid)).getItem(slot);        \n+        return (it != null && it.getItemId() == itemid) ? 0 : 0x12;\n+    } \n+}"}, {"sha": "45265d4ab78c90c3406a09d9b8b7fd3c39f2c5b0", "filename": "src/net/server/world/World.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/server/world/World.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/net/server/world/World.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/World.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -336,7 +336,7 @@ public void setGuildAndRank(int cid, int guildid, int rank) {\n         }\n         if (bDifferentGuild) {\n             mc.getMap().broadcastMessage(mc, MaplePacketCreator.removePlayerFromMap(cid), false);\n-            mc.getMap().broadcastMessage(mc, MaplePacketCreator.spawnPlayerMapobject(mc), false);\n+            mc.getMap().broadcastMessage(mc, MaplePacketCreator.spawnPlayerMapObject(mc), false);\n         }\n     }\n "}, {"sha": "ff9af809985b807a5a9c31ad93dbc223cc1d3708", "filename": "src/server/MapleInventoryManipulator.java", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/server/MapleInventoryManipulator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/server/MapleInventoryManipulator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleInventoryManipulator.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -28,6 +28,7 @@\n import client.inventory.MapleInventory;\n import client.inventory.MapleInventoryType;\n import client.inventory.ModifyInventory;\n+import client.newyear.NewYearCardRecord;\n import constants.ItemConstants;\n import constants.ServerConstants;\n \n@@ -544,7 +545,7 @@ public static void drop(MapleClient c, MapleInventoryType type, short src, short\n                 c.getPlayer().setChalkboard(null);\n             }\n         }\n-        if (source == null || (!ItemConstants.isRechargable(itemId) && source.getQuantity() < quantity) || quantity < 0) {\n+        if ((!ItemConstants.isRechargable(itemId) && source.getQuantity() < quantity) || quantity < 0) {\n             return;\n         }\n         Point dropPos = new Point(c.getPlayer().getPosition());\n@@ -553,6 +554,17 @@ public static void drop(MapleClient c, MapleInventoryType type, short src, short\n             target.setQuantity(quantity);\n             source.setQuantity((short) (source.getQuantity() - quantity));\n             c.announce(MaplePacketCreator.modifyInventory(true, Collections.singletonList(new ModifyInventory(1, source))));\n+            \n+            if(ItemConstants.isNewYearCardEtc(itemId)) {\n+                if(itemId == 4300000) {\n+                    NewYearCardRecord.removeAllNewYearCard(true, c.getPlayer());\n+                    c.getAbstractPlayerInteraction().removeAll(4300000);\n+                } else {\n+                    NewYearCardRecord.removeAllNewYearCard(false, c.getPlayer());\n+                    c.getAbstractPlayerInteraction().removeAll(4301000);\n+                }\n+            }\n+            \n             boolean weddingRing = source.getItemId() == 1112803 || source.getItemId() == 1112806 || source.getItemId() == 1112807 || source.getItemId() == 1112809;\n             if (weddingRing) {\n                 c.getPlayer().getMap().disappearingItemDrop(c.getPlayer(), c.getPlayer(), target, dropPos);\n@@ -572,7 +584,16 @@ public static void drop(MapleClient c, MapleInventoryType type, short src, short\n             c.announce(MaplePacketCreator.modifyInventory(true, Collections.singletonList(new ModifyInventory(3, source))));\n             if (src < 0) {\n                 c.getPlayer().equipChanged();\n+            } else if(ItemConstants.isNewYearCardEtc(itemId)) {\n+                if(itemId == 4300000) {\n+                    NewYearCardRecord.removeAllNewYearCard(true, c.getPlayer());\n+                    c.getAbstractPlayerInteraction().removeAll(4300000);\n+                } else {\n+                    NewYearCardRecord.removeAllNewYearCard(false, c.getPlayer());\n+                    c.getAbstractPlayerInteraction().removeAll(4301000);\n+                }\n             }\n+            \n             if (c.getPlayer().getMap().getEverlast()) {\n                 if (ii.isDropRestricted(itemId) || ii.isCash(itemId) || isDroppedItemRestricted(source)) {\n                     c.getPlayer().getMap().disappearingItemDrop(c.getPlayer(), c.getPlayer(), source, dropPos);"}, {"sha": "ab67ae3040c7ebd8f0938bafd4144112f97d4ff4", "filename": "src/server/MapleStatEffect.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/server/MapleStatEffect.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/server/MapleStatEffect.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleStatEffect.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -753,7 +753,7 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n                 applyto.setStance(0);\n                 \n                 applyto.getMap().broadcastMessage(applyto, MaplePacketCreator.removePlayerFromMap(applyto.getId()), false);\n-                applyto.getMap().broadcastMessage(applyto, MaplePacketCreator.spawnPlayerMapobject(applyto), false);\n+                applyto.getMap().broadcastMessage(applyto, MaplePacketCreator.spawnPlayerMapObject(applyto), false);\n             }\n         }\n         if (isDispel() && makeChanceResult()) {\n@@ -919,7 +919,7 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n             applyto.removeAllCooldownsExcept(Buccaneer.TIME_LEAP, true);\n         } else if(isHyperBody() && !primary) {\n             applyto.getMap().broadcastMessage(applyto, MaplePacketCreator.removePlayerFromMap(applyto.getId()), false);\n-            applyto.getMap().broadcastMessage(applyto, MaplePacketCreator.spawnPlayerMapobject(applyto), false);\n+            applyto.getMap().broadcastMessage(applyto, MaplePacketCreator.spawnPlayerMapObject(applyto), false);\n         }\n         \n         return true;"}, {"sha": "27a4bd5daeef6b1a10a70824913dd9283ad7b9c7", "filename": "src/server/maps/MapleHiredMerchant.java", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/server/maps/MapleHiredMerchant.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/server/maps/MapleHiredMerchant.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleHiredMerchant.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -182,11 +182,13 @@ public void buy(MapleClient c, int item, short quantity) {\n                 c.announce(MaplePacketCreator.enableActions());\n                 return;\n             }\n-            int price = (int)Math.min((long)pItem.getPrice() * quantity, Integer.MAX_VALUE);\n+            \n+            int price = (int) Math.min((long)pItem.getPrice() * quantity, Integer.MAX_VALUE);\n             if (c.getPlayer().getMeso() >= price) {\n                 if (MapleInventoryManipulator.checkSpace(c, newItem.getItemId(), newItem.getQuantity(), newItem.getOwner())) {\n                     MapleInventoryManipulator.addFromDrop(c, newItem, false);\n                     c.getPlayer().gainMeso(-price, false);\n+                    announceItemSold(newItem, price);   // idea thanks to vcoc\n                     \n                     synchronized (sold) {\n                         sold.add(new SoldItem(c.getPlayer().getName(), pItem.getItem().getItemId(), quantity, price));\n@@ -226,6 +228,16 @@ public void buy(MapleClient c, int item, short quantity) {\n             }\n         }\n     }\n+    \n+    private void announceItemSold(Item item, int mesos) {\n+        String qtyStr = (item.getQuantity() > 1) ? \" (qty. \" + item.getQuantity() + \")\" : \"\";\n+        MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n+        \n+        MapleCharacter player = Server.getInstance().getWorld(world).getPlayerStorage().getCharacterById(ownerId);\n+        if(player != null && player.isLoggedin() && !player.isAwayFromWorld()) {\n+            player.dropMessage(6, \"[HIRED MERCHANT] Item '\" + ii.getName(item.getItemId()) + \"'\" + qtyStr + \" has been sold for \" + mesos + \" mesos.\");\n+        }\n+    }\n \n     public void forceClose() {\n         Server.getInstance().getWorld(world).unregisterHiredMerchant(this);\n@@ -508,7 +520,7 @@ private static boolean check(MapleCharacter chr, List<MaplePlayerShopItem> items\n         }\n         return true;\n     }\n-\n+    \n     public int getChannel() {\n         return channel;\n     }"}, {"sha": "64601a42498fd9fb2c78db8e1182cbf94c419857", "filename": "src/server/maps/MapleMap.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/server/maps/MapleMap.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/server/maps/MapleMap.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMap.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -2131,13 +2131,13 @@ public void run() {\n             }\n         }\n         if (chr.isHidden()) {\n-            broadcastGMMessage(chr, MaplePacketCreator.spawnPlayerMapobject(chr), false);\n+            broadcastGMMessage(chr, MaplePacketCreator.spawnPlayerMapObject(chr), false);\n             chr.announce(MaplePacketCreator.getGMEffect(0x10, (byte) 1));\n \n             List<Pair<MapleBuffStat, Integer>> dsstat = Collections.singletonList(new Pair<MapleBuffStat, Integer>(MapleBuffStat.DARKSIGHT, 0));\n             broadcastGMMessage(chr, MaplePacketCreator.giveForeignBuff(chr.getId(), dsstat), false);\n         } else {\n-            broadcastMessage(chr, MaplePacketCreator.spawnPlayerMapobject(chr), false);\n+            broadcastMessage(chr, MaplePacketCreator.spawnPlayerMapObject(chr), false);\n         }\n \n         sendObjectPlacement(chr.getClient());"}, {"sha": "321967d438fa1698694198530b4f73896f9a9c26", "filename": "src/server/maps/MaplePlayerShop.java", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/server/maps/MaplePlayerShop.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/server/maps/MaplePlayerShop.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MaplePlayerShop.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -34,9 +34,9 @@\n import java.util.concurrent.locks.Lock;\n import tools.locks.MonitoredReentrantLock;\n import net.SendOpcode;\n+import net.server.Server;\n import server.MapleInventoryManipulator;\n-import server.maps.AbstractMapleMapObject;\n-import server.maps.MapleMapObjectType;\n+import server.MapleItemInformationProvider;\n import tools.MaplePacketCreator;\n import tools.Pair;\n import tools.data.output.MaplePacketLittleEndianWriter;\n@@ -103,7 +103,7 @@ private void addVisitor(MapleCharacter visitor) {\n                     visitor.setSlot(i);\n                     this.broadcast(MaplePacketCreator.getPlayerShopNewVisitor(visitor, i + 1));\n                     \n-                    if(i == 2) visitor.getMap().broadcastMessage(MaplePacketCreator.addCharBox(this.getOwner(), 1));\n+                    if(i == 2) visitor.getMap().broadcastMessage(MaplePacketCreator.addCharBox(owner, 1));\n                     break;\n                 }\n             }\n@@ -162,7 +162,7 @@ public void removeVisitor(MapleCharacter visitor) {\n                 visitorLock.unlock();\n             }\n             \n-            if(this.getOwner().getPlayerShop() != null) visitor.getMap().broadcastMessage(MaplePacketCreator.addCharBox(this.getOwner(), 4));\n+            if(owner.getPlayerShop() != null) visitor.getMap().broadcastMessage(MaplePacketCreator.addCharBox(owner, 4));\n         }\n     }\n \n@@ -205,10 +205,15 @@ public void buy(MapleClient c, int item, short quantity) {\n                     return;\n                 }\n                 synchronized (c.getPlayer()) {\n-                    if (c.getPlayer().getMeso() >= (long) pItem.getPrice() * quantity) {\n+                    int price = (int) Math.min((long)pItem.getPrice() * quantity, Integer.MAX_VALUE);\n+                    \n+                    if (c.getPlayer().getMeso() >= price) {\n                         if (MapleInventoryManipulator.addFromDrop(c, newItem, false)) {\n-                            c.getPlayer().gainMeso(-pItem.getPrice() * quantity, false);\n-                            owner.gainMeso(pItem.getPrice() * quantity, true);\n+                            c.getPlayer().gainMeso(-price, false);\n+                            \n+                            announceItemSold(newItem, price);   // idea thanks to vcoc\n+                            owner.gainMeso(price, true);\n+                            \n                             pItem.setBundles((short) (pItem.getBundles() - quantity));\n                             if (pItem.getBundles() < 1) {\n                                 pItem.setDoesExist(false);\n@@ -227,6 +232,13 @@ public void buy(MapleClient c, int item, short quantity) {\n             }\n         }\n     }\n+    \n+    private void announceItemSold(Item item, int mesos) {\n+        String qtyStr = (item.getQuantity() > 1) ? \" (qty. \" + item.getQuantity() + \")\" : \"\";\n+        MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n+        \n+        owner.dropMessage(6, \"[PLAYER SHOP] Item '\" + ii.getName(item.getItemId()) + \"'\" + qtyStr + \" has been sold for \" + mesos + \" mesos.\");\n+    }\n \n     public void broadcastToVisitors(final byte[] packet) {\n         visitorLock.lock();\n@@ -283,7 +295,7 @@ public void removeVisitors() {\n         \n         for(MapleCharacter mc : visitorList) forceRemoveVisitor(mc);\n         if (owner != null) {\n-            forceRemoveVisitor(getOwner());\n+            forceRemoveVisitor(owner);\n         }\n     }\n \n@@ -476,12 +488,12 @@ public synchronized boolean visitShop(MapleCharacter chr) {\n \n     @Override\n     public void sendDestroyData(MapleClient client) {\n-        client.announce(MaplePacketCreator.removeCharBox(this.getOwner()));\n+        client.announce(MaplePacketCreator.removeCharBox(owner));\n     }\n \n     @Override\n     public void sendSpawnData(MapleClient client) {\n-        client.announce(MaplePacketCreator.addCharBox(this.getOwner(), 4));\n+        client.announce(MaplePacketCreator.addCharBox(owner, 4));\n     }\n \n     @Override"}, {"sha": "acea03069c977d467fa0e27fe29e1750066da542", "filename": "src/tools/MaplePacketCreator.java", "status": "modified", "additions": 113, "deletions": 29, "changes": 142, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/src/tools/MaplePacketCreator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/src/tools/MaplePacketCreator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MaplePacketCreator.java?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -33,6 +33,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Set;\n \n import net.SendOpcode;\n import net.server.PlayerCoolDownValueHolder;\n@@ -98,6 +99,7 @@\n import client.inventory.MapleInventoryType;\n import client.inventory.MaplePet;\n import client.inventory.ModifyInventory;\n+import client.newyear.NewYearCardRecord;\n import client.status.MonsterStatus;\n import client.status.MonsterStatusEffect;\n import constants.GameConstants;\n@@ -217,30 +219,18 @@ private static void addCharacterInfo(final MaplePacketLittleEndianWriter mplew,\n                 addRingInfo(mplew, chr);\n                 addTeleportInfo(mplew, chr);\n                 addMonsterBookInfo(mplew, chr);\n-                addNewYearInfo(mplew, chr);//have fun!\n+                addNewYearInfo(mplew, chr);\n                 addAreaInfo(mplew, chr);//assuming it stayed here xd\n                 mplew.writeShort(0);\n         }\n \n         private static void addNewYearInfo(final MaplePacketLittleEndianWriter mplew, MapleCharacter chr) {\n-                mplew.writeShort(0);\n-                /*  \n-                 *(_DWORD *)this = CInPacket::Decode4(a2);\n-                 *((_DWORD *)v2 + 1) = CInPacket::Decode4(a2);\n-                 CInPacket::DecodeStr(&v7);\n-                 v9 = 0;\n-                 (*(void (__stdcall **)(char *, int))((char *)&loc_B1410B + 1))((char *)v2 + 8, v7);\n-                 *(_DWORD *)((char *)v2 + 21) = (unsigned __int8)CInPacket::Decode1(a2);\n-                 CInPacket::DecodeBuffer((char *)v2 + 25, 8);\n-                 *(_DWORD *)((char *)v2 + 33) = CInPacket::Decode4(a2);\n-                 CInPacket::DecodeStr(&v6);\n-                 LOBYTE(v8) = 1;\n-                 (*(void (__stdcall **)(char *, int))((char *)&loc_B1410B + 1))((char *)v2 + 37, v6);\n-                 *(_DWORD *)((char *)v2 + 50) = (unsigned __int8)CInPacket::Decode1(a2);\n-                 *(_DWORD *)((char *)v2 + 54) = (unsigned __int8)CInPacket::Decode1(a2);\n-                 CInPacket::DecodeBuffer((char *)v2 + 58, 8);\n-                 CInPacket::DecodeStr(&v9);\n-                 */\n+                Set<NewYearCardRecord> received = chr.getReceivedNewYearRecords();\n+            \n+                mplew.writeShort(received.size());\n+                for(NewYearCardRecord nyc : received) {\n+                        encodeNewYearCard(nyc, mplew);\n+                }\n         }\n \n         private static void addTeleportInfo(final MaplePacketLittleEndianWriter mplew, MapleCharacter chr) {\n@@ -1742,7 +1732,7 @@ public int compare(Pair<MapleStat, Integer> o1, Pair<MapleStat, Integer> o2) {\n          * @param chr The character to spawn to other clients.\n          * @return The spawn player packet.\n          */\n-        public static byte[] spawnPlayerMapobject(MapleCharacter chr) {\n+        public static byte[] spawnPlayerMapObject(MapleCharacter chr) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.SPAWN_PLAYER.getValue());\n                 mplew.writeInt(chr.getId());\n@@ -1834,7 +1824,7 @@ public int compare(Pair<MapleStat, Integer> o1, Pair<MapleStat, Integer> o2) {\n                 \n                 mplew.writeShort(chr.getJob().getId());\n                 \n-                /* replace \"mplew.writeShort(chr.getJob().getId())\" with this snippet for 3rd party FJ animation on all classes\n+                /* replace \"mplew.writeShort(chr.getJob().getId())\" with this snippet for 3rd person FJ animation on all classes\n                 if (chr.getJob().isA(MapleJob.HERMIT) || chr.getJob().isA(MapleJob.DAWNWARRIOR2) || chr.getJob().isA(MapleJob.NIGHTWALKER2)) {\n \t\t\tmplew.writeShort(chr.getJob().getId());\n                 } else {\n@@ -1887,14 +1877,106 @@ public int compare(Pair<MapleStat, Integer> o1, Pair<MapleStat, Integer> o2) {\n                 } else {\n                         mplew.write(0);\n                 }\n-                addRingLook(mplew, chr, true);\n-                addRingLook(mplew, chr, false);\n+                addRingLook(mplew, chr, true);  // crush\n+                addRingLook(mplew, chr, false); // friendship\n                 addMarriageRingLook(mplew, chr);\n-                mplew.skip(3);\n+                encodeNewYearCardInfo(mplew, chr);  // new year seems to crash sometimes...\n+                mplew.skip(2);\n                 mplew.write(chr.getTeam());//only needed in specific fields\n                 return mplew.getPacket();\n         }\n \n+        private static void encodeNewYearCardInfo(MaplePacketLittleEndianWriter mplew, MapleCharacter chr) {\n+                Set<NewYearCardRecord> newyears = chr.getReceivedNewYearRecords();\n+                if(!newyears.isEmpty()) {\n+                        mplew.write(1); \n+\n+                        mplew.writeInt(newyears.size());\n+                        for(NewYearCardRecord nyc : newyears) {\n+                                mplew.writeInt(nyc.getId());\n+                        }\n+                } else {\n+                        mplew.write(0); \n+                }\n+        }\n+        \n+        public static byte[] onNewYearCardRes(MapleCharacter user, int cardId, int mode, int msg) {\n+                NewYearCardRecord newyear = user.getNewYearRecord(cardId);\n+                return onNewYearCardRes(user, newyear, mode, msg);\n+        }\n+        \n+        public static byte[] onNewYearCardRes(MapleCharacter user, NewYearCardRecord newyear, int mode, int msg) { \n+                MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n+                mplew.writeShort(SendOpcode.NEW_YEAR_CARD_RES.getValue()); \n+                mplew.write(mode); \n+                switch (mode) { \n+                        case 4: // Successfully sent a New Year Card\\r\\n to %s. \n+                        case 6: // Successfully received a New Year Card. \n+                                encodeNewYearCard(newyear, mplew);\n+                                break;\n+                            \n+                        case 8: // Successfully deleted a New Year Card. \n+                                mplew.writeInt(newyear.getId());\n+                                break;\n+                            \n+                        case 5: // Nexon's stupid and makes 4 modes do the same operation.. \n+                        case 7: \n+                        case 9: \n+                        case 0xB: \n+                                // 0x10: You have no free slot to store card.\\r\\ntry later on please. \n+                                // 0x11: You have no card to send. \n+                                // 0x12: Wrong inventory information ! \n+                                // 0x13: Cannot find such character ! \n+                                // 0x14: Incoherent Data ! \n+                                // 0x15: An error occured during DB operation. \n+                                // 0x16: An unknown error occured ! \n+                                // 0xF: You cannot send a card to yourself ! \n+                                mplew.write(msg);\n+                                break; \n+                            \n+                        case 0xA:   // GetUnreceivedList_Done\n+                                int nSN = 1; \n+                                mplew.writeInt(nSN); \n+                                if ((nSN - 1) <= 98 && nSN > 0) {//lol nexon are you kidding \n+                                        for (int i = 0; i < nSN; i++) { \n+                                                mplew.writeInt(newyear.getId()); \n+                                                mplew.writeInt(newyear.getSenderId()); \n+                                                mplew.writeMapleAsciiString(newyear.getSenderName()); \n+                                        } \n+                                } \n+                                break;\n+                            \n+                        case 0xC:   // NotiArrived\n+                                mplew.writeInt(newyear.getId());\n+                                mplew.writeMapleAsciiString(newyear.getSenderName());\n+                                break;\n+                            \n+                        case 0xD:   // BroadCast_AddCardInfo\n+                                mplew.writeInt(newyear.getId()); \n+                                mplew.writeInt(user.getId()); \n+                                break; \n+                            \n+                        case 0xE:   // BroadCast_RemoveCardInfo\n+                                mplew.writeInt(newyear.getId());\n+                                break; \n+                } \n+                return mplew.getPacket(); \n+        } \n+        \n+        private static void encodeNewYearCard(NewYearCardRecord newyear, MaplePacketLittleEndianWriter mplew) { \n+                mplew.writeInt(newyear.getId());\n+                mplew.writeInt(newyear.getSenderId()); \n+                mplew.writeMapleAsciiString(newyear.getSenderName()); \n+                mplew.writeBool(newyear.isSenderCardDiscarded()); \n+                mplew.writeLong(newyear.getDateSent()); \n+                mplew.writeInt(newyear.getReceiverId()); \n+                mplew.writeMapleAsciiString(newyear.getReceiverName()); \n+                mplew.writeBool(newyear.isReceiverCardDiscarded()); \n+                mplew.writeBool(newyear.isReceiverCardReceived()); \n+                mplew.writeLong(newyear.getDateReceived()); \n+                mplew.writeMapleAsciiString(newyear.getMessage()); \n+        } \n+        \n         private static void addRingLook(final MaplePacketLittleEndianWriter mplew, MapleCharacter chr, boolean crush) {\n                 List<MapleRing> rings;\n                 if (crush) {\n@@ -1922,15 +2004,17 @@ private static void addRingLook(final MaplePacketLittleEndianWriter mplew, Maple\n         }\n \n         private static void addMarriageRingLook(final MaplePacketLittleEndianWriter mplew, MapleCharacter chr) {\n-                if (chr.getMarriageRing() != null && !chr.getMarriageRing().equipped()) {\n+                MapleRing ring = chr.getMarriageRing();\n+            \n+                if (ring != null && !ring.equipped()) {\n                         mplew.write(0);\n                         return;\n                 }\n-                mplew.writeBool(chr.getMarriageRing() != null);\n-                if (chr.getMarriageRing() != null) {\n+                mplew.writeBool(ring != null);\n+                if (ring != null) {\n                         mplew.writeInt(chr.getId());\n-                        mplew.writeInt(chr.getMarriageRing().getPartnerChrId());\n-                        mplew.writeInt(chr.getMarriageRing().getRingId());\n+                        mplew.writeInt(ring.getPartnerChrId());\n+                        mplew.writeInt(ring.getRingId());\n                 }\n         }\n "}, {"sha": "6807a2ba1902a255b464065dd83188d73fbe6d01", "filename": "tools/MapleQuestItemFetcher/nbproject/private/private.xml", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/012f965f6ae9464038bfc577248efc3ecf78d81f/tools/MapleQuestItemFetcher/nbproject/private/private.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/012f965f6ae9464038bfc577248efc3ecf78d81f/tools/MapleQuestItemFetcher/nbproject/private/private.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleQuestItemFetcher/nbproject/private/private.xml?ref=012f965f6ae9464038bfc577248efc3ecf78d81f", "patch": "@@ -2,8 +2,6 @@\n <project-private xmlns=\"http://www.netbeans.org/ns/project-private/1\">\n     <editor-bookmarks xmlns=\"http://www.netbeans.org/ns/editor-bookmarks/2\" lastBookmarkId=\"0\"/>\n     <open-files xmlns=\"http://www.netbeans.org/ns/projectui-open-files/2\">\n-        <group>\n-            <file>file:/C:/Nexon/MapleSolaxia/HeavenMS/tools/MapleQuestItemFetcher/src/maplequestitemfetcher/MapleQuestItemFetcher.java</file>\n-        </group>\n+        <group/>\n     </open-files>\n </project-private>"}]}]},
