{"fetchDate": "2019-12-19", "content": [{"sha": "efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6ZWZiY2U4MmE4YjQxNWQ3YWQ3ZGRlMTZhYThjNTQwYWUyYTlhOTk3Mw==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-08-28T06:49:05Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-08-28T06:49:05Z"}, "message": "Pooled Io Write + EXP loss & Detached morph patch + Storages in World\n\nFixed autocommit getting called early/unavailable in a few catch blocks, when trying to save player.\nFixed the missing variable declaration in several quest scripts that were recently formatted.\nReworked the EXP loss formula applied at a knock-out. The new formula follows past discussions in several MS forums.\nFixed a deadlock issue related with party HP and party doors management.\nRefactored management of packets sent to client through an IoSession. New system no longer makes use of a synchronized statement when calling announce(packet), rather makes use of dedicated threads to send queued packets for the respective players.\nFixed SP reset allowing increase of unexpected skills.\nRefactored storages, no longer instantiated as coupled with the character, rather instantiated in a map within the world object, with accountid as key.\nReviewed usage of character objects of offline party members, that weren't being properly checked.\nFixed some unexpected cases with buffs and morphs (within the enhanced buff system) making the latter show up as another morph figure.\nAdded a \"priority buff\" perspective within the enhanced buff system, to let such priority items/skills take awareness over other buffs. (This would be vital for some quests, as the one reported in #514 )\nFixed EXP gains in certain scenarios showing up with less amount than the expected (due to float point operations).\nFixed a critical bug that have emerged in a recent mount-skill update, issue happened due to an improper object initialization.\nFixed mount information packet not being relayed to the player at world login time, rendering some quests not startable until the mob levels up.", "tree": {"sha": "b29c0475c950f0ebd6281cb6a474417f5ecc812a", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/b29c0475c950f0ebd6281cb6a474417f5ecc812a"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "html_url": "https://github.com/ronancpl/HeavenMS/commit/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19e70ddf87232dff267093c9ab30a8198051d730", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/19e70ddf87232dff267093c9ab30a8198051d730", "html_url": "https://github.com/ronancpl/HeavenMS/commit/19e70ddf87232dff267093c9ab30a8198051d730"}], "stats": {"total": 1252, "additions": 959, "deletions": 293}, "files": [{"sha": "007d762561d910496070e5e9a1a17eb3b06c12ec", "filename": "README.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/README.md", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/README.md", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/README.md?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -25,13 +25,17 @@ Java 8 SDK & NetBeans bundle: https://www.oracle.com/technetwork/pt/java/javase/\n \n **Important note about localhosts**: these executables are red-flagged by antivirus tools as __potentially malicious softwares__, this happens due to the reverse engineering methods that were applied onto these software artifacts. Those depicted here have been put to use for years already and posed no harm so far, so they are soundly assumed to be safe.\n \n-  Latest localhost: https://hostr.co/SvnSKrGzXhG0\n+  Latest localhost: https://hostr.co/amuX5SLeeVZx\n \n   The following list, in bottom-up chronological order, holds information regarding all changes that were applied from the starting localhost used in this development. Some lines have a link attached, that will lead you to a snapshot of the localhost at that version of the artifact. Naturally, later versions holds all previous changes along with the proposed changes.\n \n **Change log:**\n \n-  * Fixed Monster Magnet crashing the caster when trying to pull bosses. Drawback: Dojo HPBar becomes unavailable.\n+  * Cleared need for administrator privileges (OS) to play the game, credits to Ubaware.\n+\n+  * Set a higher cap for AP assigning with AP Reset, credits to Ubaware.\n+\n+  * Fixed Monster Magnet crashing the caster when trying to pull bosses. Drawback: Dojo HPBar becomes unavailable. https://hostr.co/SvnSKrGzXhG0\n \n   * Fixed some 'rn' problems with quest icons & removed \"tab\" from party leader changed message. https://hostr.co/tsYsQzzV6xT0\n "}, {"sha": "75ea4cac4b9ded1d01ab46f72ffeb6180be00d4a", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -2083,4 +2083,29 @@ Ajustado frequ\u00eancia de loots de reatores para 200ms.\n Refatorado v\u00e1rios casos de erros em acessos a fun\u00e7\u00f5es est\u00e1ticas a partir de scripts, que passou a ocorrer ap\u00f3s trocar de vers\u00e3o Java.\n Corrigido listas que mant\u00e9m conte\u00fado dos mundos e canais esvaziando antes que os processos em execu\u00e7\u00e3o do TimerManager terminem de executar, no momento do sinal de shutdown do servidor.\n Revisado update de quests para o jogador durante script de quests, problema permite movimento enquanto o mesmo ainda est\u00e1 falando com o NPC.\n-Revisado novamente os scripts de quest! Problema detectado envolvia incid\u00eancias de iniciar e completar de quests com disposes na mesma estrutura status.\n\\ No newline at end of file\n+Revisado novamente os scripts de quest! Problema detectado envolvia incid\u00eancias de iniciar e completar de quests com disposes na mesma estrutura status.\n+\n+19 - 20 Agosto 2019,\n+Revisado autocommit antes da hora e falta de chamada a rollbacks quando ocorre exce\u00e7\u00e3o no m\u00e9todo de salvar jogador na DB.\n+Corrigido quest scripts rec\u00e9m-formatados pelo caso dos updates de quest durante conversa\u00e7\u00e3o com NPCs.\n+Revisado c\u00e1lculo de perda de EXP em nocaute.\n+Corrigido caso de deadlock relacionado a party HP e manuten\u00e7\u00e3o de doors, ocorrendo devido a uso indevido de statLock antes de prtLock.\n+\n+22 - 23 Agosto 2019,\n+Revisado envio sequencial de pacotes pelo IoSession acoplado \u00e0 conex\u00e3o com o cliente.\n+Corrigido possibilidade de uso de SP Reset para aumentar skills imprevistas.\n+Adicionado permiss\u00e3o de drops de NX utilizando a mesma flag dos shops.\n+Adicionado comando para setar quantidade de slots em todos os invent\u00e1rios.\n+\n+24 Agosto 2019,\n+Refatorado objeto de MapleStorage, agora sendo gerado um objeto por conta, acoplado ao mundo que jogador pertence (n\u00e3o mais acoplado diretamente com objeto do jogador, jogador agora recebe uma vis\u00e3o deste objeto).\n+\n+26 - 27 Agosto 2019,\n+Revisado uso de objeto de jogador pelo MaplePartyCharacter, retirando acesso ao mesmo quando o jogador est\u00e1 desconectado (assim limpando reten\u00e7\u00e3o de m\u00faltiplos objetos de jogador offline, quando os mesmos se encontram em party).\n+Corrigido casos inesperados como Nimble Feet seguido de Morph fazendo o segundo atuar inesperadamente, aplicando outras imagens de morphs.\n+Corrigido buffs importantes para mec\u00e2nicas do jogo sendo sobrescritas por possuir menores ganhos que outros.\n+Revisado diversos casos no c\u00f3digo-fonte onde havia possibilidade de acesso ao objeto de jogador nulo a partir do MaplePartyCharacter (quando o jogador se encontra offline e est\u00e1 na party).\n+Corrigido caso de EXP ganho ocorrendo menor que o esperado, ao se usar diversos modificadores de ganhos.\n+Corrigido bug cr\u00edtico na atualiza\u00e7\u00e3o recente relacionado a skill mounts, onde na inicializa\u00e7\u00e3o dos mounts informa\u00e7\u00f5es estariam sendo perdidas inesperadamente...\n+Corrigido informa\u00e7\u00f5es de mount n\u00e3o sendo atualizado para o jogador assim que o mesmo loga, levando a certas quests com requerimento de mount n\u00e3o permitindo inicializa\u00e7\u00e3o pelo lado-cliente.\n+Revisado sistema criado para manuten\u00e7\u00e3o de pacotes enviados atrav\u00e9s do IoSession, tal sistema agora atuando como uma \"pool\" ao inv\u00e9s de uma \"factory\".\n\\ No newline at end of file"}, {"sha": "167548349092bb66223b7563c0190ce37b4317bb", "filename": "scripts/npc/2010009.js", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/npc/2010009.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/npc/2010009.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2010009.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -22,14 +22,12 @@\n var status;\n var choice;\n var guildName;\n-var partymembers;\n \n var allianceCost = 2000000;\n var increaseCost = 1000000;\n var allianceLimit = 5;\n \n function start() {\n-    partymembers = cm.getPartyMembers();\n     status = -1;\n     action(1,0,0);\n }"}, {"sha": "233382105d5a2b10a5a9e975d155b83bac0b836f", "filename": "scripts/npc/9977777.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/npc/9977777.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/npc/9977777.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9977777.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -278,6 +278,7 @@ function writeFeatureTab_Project() {\n         addFeature(\"Protected many flaws with login management system.\");\n         addFeature(\"Developed a robust anti-exploit login coordinator.\");\n         addFeature(\"Revised uniqueness aspect of logged in accounts.\");\n+        addFeature(\"Developed pooling system for IoSession sent packets.\");\n         addFeature(\"Usage of HikariCP to improve DB connection calls.\");\n         addFeature(\"Usage of Java Threadpool to improve runnable calls.\");\n         addFeature(\"Developed many survey tools for content profiling.\");"}, {"sha": "d5ea8e323fe0dfd1a4f98ff57a716457989aa0fe", "filename": "scripts/npc/credits.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/npc/credits.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/npc/credits.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/credits.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -115,7 +115,7 @@ function writeAllServerStaffs() {\n                 role_cursor = [];\n \n                 var srvName = servers[i];\n-                eval(\"writeServerStaff_\" + srvName)();\n+                this[\"writeServerStaff_\" + srvName]();\n         \n                 name_tree.push(name_cursor);\n                 role_tree.push(role_cursor);"}, {"sha": "a13e40968a7cc1dbcd725fadb08b161934962bde", "filename": "scripts/quest/2124.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/2124.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/2124.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/2124.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -23,6 +23,8 @@\n \tAuthor : Ronan Lana\n */\n \n+var status = -1;\n+\n function end(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "a13e40968a7cc1dbcd725fadb08b161934962bde", "filename": "scripts/quest/2126.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/2126.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/2126.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/2126.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -23,6 +23,8 @@\n \tAuthor : Ronan Lana\n */\n \n+var status = -1;\n+\n function end(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "ced26e74c3432f8840d12663227cf88b3c4fbde3", "filename": "scripts/quest/2127.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/2127.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/2127.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/2127.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -23,6 +23,8 @@\n \tAuthor : Ronan Lana\n */\n \n+var status = -1;\n+\n function end(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "11ced316ea288f11979c7decb1f3368047221c67", "filename": "scripts/quest/2186.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/2186.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/2186.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/2186.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -3,6 +3,8 @@\n     Quest: Abel Glasses Quest\n */\n \n+var status = -1;    // thanks IxianMace for noticing missing status declaration\n+\n function end(mode, type, selection){\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "e3e02b116f899717e30e17f738aa4e24adf88d0a", "filename": "scripts/quest/2251.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/2251.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/2251.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/2251.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -5,6 +5,8 @@\n \tItem: Recording Charm (4032399)\n */\n \n+var status = -1;\n+\n function end(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "c2814e3554b36d4abc4436dcb5ce27210032c92d", "filename": "scripts/quest/3382.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3382.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3382.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3382.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -27,6 +27,8 @@\n \tQuest ID: \t\t3382\n */\n \n+var status = -1;\n+\n function end(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "84f2c77bf49db4a7802f09d9457bcd1b30f71c94", "filename": "scripts/quest/3454.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3454.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3454.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3454.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -27,6 +27,8 @@\n \tQuest ID: \t\t3454\n */\n \n+var status = -1;\n+\n function end(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "f2ab5516af93e5ef5a96df8fb46c70fc59b8e19f", "filename": "scripts/quest/3507.js", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3507.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3507.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3507.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -1,3 +1,6 @@\n+\n+var status = -1;\n+\n function end(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "46e47d819c6e1381a5da8655a964b89f0ada3b90", "filename": "scripts/quest/3523.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3523.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3523.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3523.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -23,6 +23,8 @@\n  * In search for the lost memory - warrior\n */\n \n+var status = -1;\n+\n function start(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "47fe08adc464243e2f5ca47416ae4a825cfd655a", "filename": "scripts/quest/3524.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3524.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3524.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3524.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -23,6 +23,8 @@\n  * In search for the lost memory - mage\n */\n \n+var status = -1;\n+\n function start(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "9ec196c5c2d8c4abb1b351b7e4fcc7343bdcf540", "filename": "scripts/quest/3525.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3525.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3525.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3525.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -23,6 +23,8 @@\n  * In search for the lost memory - bowman\n */\n \n+var status = -1;\n+\n function start(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "0e7a4d32b850302b042ee1b7db87d4adac1a2e0e", "filename": "scripts/quest/3526.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3526.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3526.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3526.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -23,6 +23,8 @@\n  * In search for the lost memory - thief\n */\n \n+var status = -1;\n+\n function start(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "902ebb3f05eaaf987cdacb556cb5c64f4189e03a", "filename": "scripts/quest/3527.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3527.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3527.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3527.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -23,6 +23,8 @@\n  * In search for the lost memory - pirate\n */\n \n+var status = -1;\n+\n function start(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "902ebb3f05eaaf987cdacb556cb5c64f4189e03a", "filename": "scripts/quest/3539.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3539.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/scripts/quest/3539.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3539.js?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -23,6 +23,8 @@\n  * In search for the lost memory - pirate\n */\n \n+var status = -1;\n+\n function start(mode, type, selection) {\n     if (mode == -1) {\n         qm.dispose();"}, {"sha": "d451b962e6f20b17697bed81cc08306ad4ae16a6", "filename": "sql/db_database.sql", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/sql/db_database.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/sql/db_database.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_database.sql?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -21400,7 +21400,8 @@ CREATE TABLE IF NOT EXISTS `skills` (\n   `skilllevel` int(11) NOT NULL DEFAULT '0',\n   `masterlevel` int(11) NOT NULL DEFAULT '0',\n   `expiration` bigint(20) NOT NULL DEFAULT '-1',\n-  PRIMARY KEY (`id`)\n+  PRIMARY KEY (`id`),\n+  UNIQUE INDEX `skillpair` (`skillid`, `characterid`)\n ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n CREATE TABLE IF NOT EXISTS `specialcashitems` (\n@@ -21456,6 +21457,9 @@ ALTER TABLE `dueyitems`\n ALTER TABLE `famelog`\n   ADD CONSTRAINT `famelog_ibfk_1` FOREIGN KEY (`characterid`) REFERENCES `characters` (`id`) ON DELETE CASCADE;\n \n+ALTER TABLE `skills`\n+  ADD CONSTRAINT `skills_chrid_fk` FOREIGN KEY (`characterid`) REFERENCES `characters` (`id`) ON DELETE CASCADE;\t# thanks Shavit\n+\n /*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;\n /*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;\n /*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;"}, {"sha": "2d177138c2d79ca1689064ddfff486fc94d4a987", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 190, "deletions": 69, "changes": 259, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -22,7 +22,6 @@\n  */\n package client;\n \n-import server.minigame.MapleRockPaperScissor;\n import java.awt.Point;\n import java.lang.ref.WeakReference;\n import java.sql.Connection;\n@@ -56,6 +55,8 @@\n import net.server.PlayerBuffValueHolder;\n import net.server.PlayerCoolDownValueHolder;\n import net.server.Server;\n+import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n import net.server.coordinator.MapleInviteCoordinator;\n import net.server.guild.MapleAlliance;\n import net.server.guild.MapleGuild;\n@@ -68,11 +69,11 @@\n import net.server.world.World;\n import scripting.AbstractPlayerInteraction;\n import scripting.event.EventInstanceManager;\n+import scripting.item.ItemScriptManager;\n import server.CashShop;\n import server.MapleItemInformationProvider;\n import server.MapleItemInformationProvider.ScriptedItem;\n import server.MapleMarriage;\n-import server.MaplePortal;\n import server.MapleShop;\n import server.MapleStatEffect;\n import server.MapleStorage;\n@@ -84,23 +85,28 @@\n import server.events.gm.MapleFitness;\n import server.events.gm.MapleOla;\n import server.life.MapleMonster;\n+import server.life.MaplePlayerNPC;\n import server.life.MobSkill;\n+import server.life.MobSkillFactory;\n+import server.maps.FieldLimit;\n import server.maps.MapleHiredMerchant;\n import server.maps.MapleDoor;\n import server.maps.MapleDragon;\n import server.maps.MapleMap;\n import server.maps.MapleMapEffect;\n import server.maps.MapleMapManager;\n+import server.maps.MapleMapItem;\n import server.maps.MapleMapObject;\n import server.maps.MapleMapObjectType;\n import server.maps.MapleMiniGame;\n import server.maps.MapleMiniGame.MiniGameResult;\n-import server.life.MaplePlayerNPC;\n import server.maps.MaplePlayerShop;\n import server.maps.MaplePlayerShopItem;\n+import server.maps.MaplePortal;\n import server.maps.MapleSummon;\n import server.maps.SavedLocation;\n import server.maps.SavedLocationType;\n+import server.minigame.MapleRockPaperScissor;\n import server.partyquest.AriantColiseum;\n import server.partyquest.MonsterCarnival;\n import server.partyquest.MonsterCarnivalParty;\n@@ -162,14 +168,7 @@\n import constants.skills.Sniper;\n import constants.skills.Swordsman;\n import constants.skills.ThunderBreaker;\n-import scripting.item.ItemScriptManager;\n-import server.life.MobSkillFactory;\n-import server.maps.MapleMapItem;\n-import net.server.audit.locks.MonitoredLockType;\n-import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n import org.apache.mina.util.ConcurrentHashSet;\n-import scripting.quest.QuestActionManager;\n-import server.maps.FieldLimit;\n \n public class MapleCharacter extends AbstractMapleCharacterObject {\n     private static final MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n@@ -1583,7 +1582,7 @@ public void partyOperationUpdate(MapleParty party, List<MapleCharacter> exPartyM\n         }\n         \n         List<MapleCharacter> partyMembers = new LinkedList<>();\n-        for(MapleCharacter mc : (exPartyMembers != null) ? exPartyMembers : this.getPartyMembers()) {\n+        for(MapleCharacter mc : (exPartyMembers != null) ? exPartyMembers : this.getPartyMembersOnline()) {\n             if(mc.isLoggedinWorld()) {\n                 partyMembers.add(mc);\n             }\n@@ -2605,7 +2604,7 @@ public void disbandGuild() {\n     }\n \n     public void dispel() {\n-        if(!(ServerConstants.USE_UNDISPEL_HOLY_SHIELD && this.isActiveBuffedValue(Bishop.HOLY_SHIELD))) {\n+        if(!(ServerConstants.USE_UNDISPEL_HOLY_SHIELD && this.hasActiveBuff(Bishop.HOLY_SHIELD))) {\n             List<MapleBuffStatValueHolder> mbsvhList = getAllStatups();\n             for (MapleBuffStatValueHolder mbsvh : mbsvhList) {\n                 if (mbsvh.effect.isSkill()) {\n@@ -2701,7 +2700,7 @@ public void announceDiseases() {\n     public void giveDebuff(final MapleDisease disease, MobSkill skill) {\n         if (!hasDisease(disease) && getDiseasesSize() < 2) {\n             if (!(disease == MapleDisease.SEDUCE || disease == MapleDisease.STUN)) {\n-                if (isActiveBuffedValue(Bishop.HOLY_SHIELD)) {\n+                if (hasActiveBuff(Bishop.HOLY_SHIELD)) {\n                     return;\n                 }\n             }\n@@ -3480,17 +3479,44 @@ public boolean hasBuffFromSourceid(int sourceid) {\n         }\n     }\n     \n+    public boolean hasActiveBuff(int sourceid) {\n+        LinkedList<MapleBuffStatValueHolder> allBuffs;\n+        \n+        effLock.lock();\n+        chrLock.lock();\n+        try {\n+            allBuffs = new LinkedList<>(effects.values());\n+        } finally {\n+            chrLock.unlock();\n+            effLock.unlock();\n+        }\n+        \n+        for (MapleBuffStatValueHolder mbsvh : allBuffs) {\n+            if (mbsvh.effect.getBuffSourceId() == sourceid) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+    \n     private List<Pair<MapleBuffStat, Integer>> getActiveStatupsFromSourceid(int sourceid) { // already under effLock & chrLock\n         List<Pair<MapleBuffStat, Integer>> ret = new ArrayList<>();\n-        \n+        List<Pair<MapleBuffStat, Integer>> singletonStatups = new ArrayList<>();\n         for(Entry<MapleBuffStat, MapleBuffStatValueHolder> bel : buffEffects.get(sourceid).entrySet()) {\n             MapleBuffStat mbs = bel.getKey();\n             MapleBuffStatValueHolder mbsvh = effects.get(bel.getKey());\n             \n+            Pair<MapleBuffStat, Integer> p;\n             if(mbsvh != null) {\n-                ret.add(new Pair<>(mbs, mbsvh.value));\n+                p = new Pair<>(mbs, mbsvh.value);\n             } else {\n-                ret.add(new Pair<>(mbs, 0));\n+                p = new Pair<>(mbs, 0);\n+            }\n+            \n+            if (!isSingletonStatup(mbs)) {   // thanks resinate, Egg Daddy for pointing out morph issues when updating it along with other statups\n+                ret.add(p);\n+            } else {\n+                singletonStatups.add(p);\n             }\n         }\n         \n@@ -3501,6 +3527,17 @@ public int compare(Pair<MapleBuffStat, Integer> p1, Pair<MapleBuffStat, Integer>\n             }\n         });\n         \n+        if (!singletonStatups.isEmpty()) {\n+            Collections.sort(singletonStatups, new Comparator<Pair<MapleBuffStat, Integer>>() {\n+                @Override\n+                public int compare(Pair<MapleBuffStat, Integer> p1, Pair<MapleBuffStat, Integer> p2) {\n+                    return p1.getLeft().compareTo(p2.getLeft());\n+                }\n+            });\n+            \n+            ret.addAll(singletonStatups);\n+        }\n+        \n         return ret;\n     }\n     \n@@ -3776,12 +3813,29 @@ public void cancelEffect(int itemId) {\n     }\n \n     public boolean cancelEffect(MapleStatEffect effect, boolean overwrite, long startTime) {\n+        boolean ret;\n+        \n         effLock.lock();\n         try {\n-            return cancelEffect(effect, overwrite, startTime, true);\n+            ret = cancelEffect(effect, overwrite, startTime, true);\n         } finally {\n             effLock.unlock();\n         }\n+        \n+        if (effect.isMagicDoor() && ret) {\n+            prtLock.lock();\n+            effLock.lock();\n+            try {\n+                if (!hasBuffFromSourceid(Priest.MYSTIC_DOOR)) {\n+                    MapleDoor.attemptRemoveDoor(this);\n+                }\n+            } finally {\n+                effLock.unlock();\n+                prtLock.unlock();\n+            }\n+        }\n+        \n+        return ret;\n     }\n     \n     private static MapleStatEffect getEffectFromBuffSource(Map<MapleBuffStat, MapleBuffStatValueHolder> buffSource) {\n@@ -3882,9 +3936,7 @@ private boolean cancelEffect(MapleStatEffect effect, boolean overwrite, long sta\n             buffstats = extractLeastRelevantStatEffectsIfFull(effect);\n         }\n         \n-        if (effect.isMagicDoor()) {\n-            MapleDoor.attemptRemoveDoor(this);\n-        } else if (effect.isMapChair()) {\n+        if (effect.isMapChair()) {\n             stopChairTask();\n         }\n         \n@@ -4163,6 +4215,44 @@ public int compare(Pair<MapleStatEffect, Integer> o1, Pair<MapleStatEffect, Inte\n         return topologicalSortEffects(buffEffects);\n     }\n     \n+    private List<Pair<Integer, Pair<MapleStatEffect, Long>>> propagatePriorityBuffEffectUpdates(Set<MapleBuffStat> retrievedStats) {\n+        List<Pair<Integer, Pair<MapleStatEffect, Long>>> priorityUpdateEffects = new LinkedList<>();\n+        Map<MapleBuffStatValueHolder, MapleStatEffect> yokeStats = new LinkedHashMap<>();\n+        \n+        // priority buffsources: override buffstats for the client to perceive those as \"currently buffed\"\n+        Set<MapleBuffStatValueHolder> mbsvhList = new LinkedHashSet<>();\n+        for (MapleBuffStatValueHolder mbsvh : getAllStatups()) {\n+            mbsvhList.add(mbsvh);\n+        }\n+        \n+        for (MapleBuffStatValueHolder mbsvh : mbsvhList) {\n+            MapleStatEffect mse = mbsvh.effect;\n+            int buffSourceId = mse.getBuffSourceId();\n+            if (isPriorityBuffSourceid(buffSourceId) && !hasActiveBuff(buffSourceId)) {\n+                for (Pair<MapleBuffStat, Integer> ps : mse.getStatups()) {\n+                    MapleBuffStat mbs = ps.getLeft();\n+                    if (retrievedStats.contains(mbs)) {\n+                        MapleBuffStatValueHolder mbsvhe = effects.get(mbs);\n+                        \n+                        // this shouldn't even be null...\n+                        //if (mbsvh != null) {\n+                            yokeStats.put(mbsvh, mbsvhe.effect);\n+                        //}\n+                    }\n+                }\n+            }\n+        }\n+        \n+        for (Entry<MapleBuffStatValueHolder, MapleStatEffect> e : yokeStats.entrySet()) {\n+            MapleBuffStatValueHolder mbsvhPriority = e.getKey();\n+            MapleStatEffect mseActive = e.getValue();\n+            \n+            priorityUpdateEffects.add(new Pair<>(mseActive.getBuffSourceId(), new Pair<>(mbsvhPriority.effect, mbsvhPriority.startTime)));\n+        }\n+        \n+        return priorityUpdateEffects;\n+    }\n+    \n     private void propagateBuffEffectUpdates(Map<Integer, Pair<MapleStatEffect, Long>> retrievedEffects, Set<MapleBuffStat> retrievedStats, Set<MapleBuffStat> removedStats) {\n         cancelInactiveBuffStats(retrievedStats, removedStats);\n         if (retrievedStats.isEmpty()) {\n@@ -4251,6 +4341,18 @@ private void propagateBuffEffectUpdates(Map<Integer, Pair<MapleStatEffect, Long>\n             activeStatups.clear();\n         }\n         \n+        List<Pair<Integer, Pair<MapleStatEffect, Long>>> priorityEffects = propagatePriorityBuffEffectUpdates(retrievedStats);\n+        for(Pair<Integer, Pair<MapleStatEffect, Long>> lmse: priorityEffects) {\n+            Pair<MapleStatEffect, Long> msel = lmse.getRight();\n+            \n+            for(Pair<MapleBuffStat, Integer> statup : getActiveStatupsFromSourceid(lmse.getLeft())) {\n+                activeStatups.add(statup);\n+            }\n+            \n+            msel.getLeft().updateBuffEffect(this, activeStatups, msel.getRight());\n+            activeStatups.clear();\n+        }\n+        \n         if (this.isRidingBattleship()) {\n             List<Pair<MapleBuffStat, Integer>> statups = new ArrayList<>(1);\n             statups.add(new Pair<>(MapleBuffStat.MONSTER_RIDING, 0));\n@@ -4299,6 +4401,18 @@ private static boolean isSingletonStatup(MapleBuffStat mbs) {\n         }\n     }\n     \n+    private static boolean isPriorityBuffSourceid(int sourceid) {\n+        switch(sourceid) {\n+            case -2022631:\n+            case -2022632:\n+            case -2022633:\n+                return true;\n+                \n+            default:\n+                return false;\n+        }\n+    }\n+    \n     private void addItemEffectHolderCount(MapleBuffStat stat) {\n         Byte val = buffEffectsCount.get(stat);\n         if (val != null) {\n@@ -4454,6 +4568,18 @@ public void run() {\n                     addItemEffectHolderCount(statup.getKey());\n                 }\n                 \n+                // should also propagate update from buffs shared with priority sourceids\n+                Set<MapleBuffStat> updated = appliedStatups.keySet();\n+                for (MapleBuffStatValueHolder mbsvh : this.getAllStatups()) {\n+                    if (isPriorityBuffSourceid(mbsvh.effect.getBuffSourceId())) {\n+                        for (Pair<MapleBuffStat, Integer> p : mbsvh.effect.getStatups()) {\n+                            if (updated.contains(p.getLeft())) {\n+                                retrievedStats.add(p.getLeft());\n+                            }\n+                        }\n+                    }\n+                }\n+                \n                 if(!isSilent) {\n                     addItemEffectHolder(sourceid, expirationtime, appliedStatups);\n                     for (Entry<MapleBuffStat, MapleBuffStatValueHolder> statup : toDeploy.entrySet()) {\n@@ -5361,14 +5487,17 @@ public int getPartyId() {\n         }\n     }\n     \n-    public List<MapleCharacter> getPartyMembers() {\n+    public List<MapleCharacter> getPartyMembersOnline() {\n         List<MapleCharacter> list = new LinkedList<>();\n         \n         prtLock.lock();\n         try {\n             if(party != null) {\n-                for(MaplePartyCharacter partyMembers: party.getMembers()) {\n-                    list.add(partyMembers.getPlayer());\n+                for(MaplePartyCharacter mpc: party.getMembers()) {\n+                    MapleCharacter mc = mpc.getPlayer();\n+                    if (mc != null) {\n+                        list.add(mc);\n+                    }\n                 }\n             }\n         } finally {\n@@ -5385,11 +5514,13 @@ public int getPartyId() {\n         prtLock.lock();\n         try {\n             if(party != null) {\n-                for(MaplePartyCharacter partyMembers: party.getMembers()) {\n-                    MapleCharacter chr = partyMembers.getPlayer();\n-                    MapleMap chrMap = chr.getMap();\n-                    if(chrMap != null && chrMap.hashCode() == thisMapHash && chr.isLoggedinWorld()) {\n-                        list.add(chr);\n+                for(MaplePartyCharacter mpc: party.getMembers()) {\n+                    MapleCharacter chr = mpc.getPlayer();\n+                    if (chr != null) {\n+                        MapleMap chrMap = chr.getMap();\n+                        if(chrMap != null && chrMap.hashCode() == thisMapHash && chr.isLoggedinWorld()) {\n+                            list.add(chr);\n+                        }\n                     }\n                 }\n             }\n@@ -5405,10 +5536,13 @@ public boolean isPartyMember(MapleCharacter chr) {\n     }\n     \n     public boolean isPartyMember(int cid) {\n-        for(MapleCharacter mpcu: getPartyMembers()) {\n-            if(mpcu.getId() == cid) {\n-                return true;\n+        prtLock.lock();\n+        try {\n+            if(party != null) {\n+                return party.getMemberById(cid) != null;\n             }\n+        } finally {\n+            prtLock.unlock();\n         }\n         \n         return false;\n@@ -5988,26 +6122,6 @@ public void increaseGuildCapacity() {\n             dropMessage(1, \"Your guild already reached the maximum capacity of players.\");\n         }\n     }\n-\n-    public boolean isActiveBuffedValue(int skillid) {\n-        LinkedList<MapleBuffStatValueHolder> allBuffs;\n-        \n-        effLock.lock();\n-        chrLock.lock();\n-        try {\n-            allBuffs = new LinkedList<>(effects.values());\n-        } finally {\n-            chrLock.unlock();\n-            effLock.unlock();\n-        }\n-        \n-        for (MapleBuffStatValueHolder mbsvh : allBuffs) {\n-            if (mbsvh.effect.isSkill() && mbsvh.effect.getSourceId() == skillid) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n     \n     private boolean canBuyback(int fee, boolean usingMesos) {\n         return (usingMesos ? this.getMeso() : cashshop.getCash(1)) >= fee;\n@@ -7313,7 +7427,7 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool\n                 rs.close();\n                 ps.close();\n                 ret.buddylist.loadFromDb(charid);\n-                ret.storage = MapleStorage.loadOrCreateFromDB(ret.accountid, ret.world);\n+                ret.storage = wserv.getAccountStorage(ret.accountid);\n                 \n                 int startHp = ret.hp, startMp = ret.mp;\n                 ret.reapplyLocalStats();\n@@ -7428,8 +7542,10 @@ public void updateQuestMobCount(int id) {\n     }\n \n     public MapleMount mount(int id, int skillid) {\n-        maplemount = new MapleMount(this, id, skillid);\n-        return maplemount;\n+        MapleMount mount = maplemount;\n+        mount.setItemId(id);\n+        mount.setSkillId(skillid);\n+        return mount;\n     }\n \n     private void playerDead() {\n@@ -7467,22 +7583,22 @@ private void playerDead() {\n         } else if (getJob() != MapleJob.BEGINNER) { //Hmm...\n             if (!FieldLimit.NO_EXP_DECREASE.check(getMap().getFieldLimit())) {  // thanks Conrad for noticing missing FieldLimit check\n                 int XPdummy = ExpTable.getExpNeededForLevel(getLevel());\n-                if (getMap().isTown()) {\n+                \n+                if (getMap().isTown()) {    // thanks MindLove, SIayerMonkey, HaItsNotOver for noting players only lose 1% on town maps\n                     XPdummy /= 100;\n-                }\n-                if (XPdummy == ExpTable.getExpNeededForLevel(getLevel())) {\n-                    if (getLuk() <= 100 && getLuk() > 8) {\n-                        XPdummy *= (200 - getLuk()) / 2000;\n-                    } else if (getLuk() < 8) {\n+                } else {\n+                    if (getLuk() < 50) {    // thanks Taiketo, Quit, Fishanelli for noting player EXP loss are fixed, 50-LUK threshold\n                         XPdummy /= 10;\n                     } else {\n                         XPdummy /= 20;\n                     }\n                 }\n-                if (getExp() > XPdummy) {\n+                \n+                int curExp = getExp();\n+                if (curExp > XPdummy) {\n                     loseExp(XPdummy, false, false);\n                 } else {\n-                    loseExp(getExp(), false, false);\n+                    loseExp(curExp, false, false);\n                 }\n             }\n         }\n@@ -7792,6 +7908,7 @@ private void reapplyLocalStats() {\n     }\n     \n     private void updateLocalStats() {\n+        prtLock.lock();\n         effLock.lock();\n         statWlock.lock();\n         try {\n@@ -7809,6 +7926,7 @@ private void updateLocalStats() {\n         } finally {\n             statWlock.unlock();\n             effLock.unlock();\n+            prtLock.unlock();\n         }\n     }\n \n@@ -8447,8 +8565,7 @@ public synchronized void saveCharToDB(boolean notAutosave) {\n             \n             ItemFactory.INVENTORY.saveItems(itemsWithType, id, con);\n             \t\t\n-            deleteWhereCharacterId(con, \"DELETE FROM skills WHERE characterid = ?\");\n-            ps = con.prepareStatement(\"INSERT INTO skills (characterid, skillid, skilllevel, masterlevel, expiration) VALUES (?, ?, ?, ?, ?)\");\n+            ps = con.prepareStatement(\"REPLACE INTO skills (characterid, skillid, skilllevel, masterlevel, expiration) VALUES (?, ?, ?, ?, ?)\");\n             ps.setInt(1, id);\n             for (Entry<Skill, SkillEntry> skill : skills.entrySet()) {\n                 ps.setInt(2, skill.getKey().getId());\n@@ -8590,10 +8707,6 @@ public synchronized void saveCharToDB(boolean notAutosave) {\n                 \n             }\n             \n-            con.commit();\n-            con.setAutoCommit(true);\n-\t    \n-            \n             if (cashshop != null) {\n                 cashshop.save(con);\n             }\n@@ -8603,6 +8716,9 @@ public synchronized void saveCharToDB(boolean notAutosave) {\n                 usedStorage = false;\n             }\n             \n+            con.commit();\n+            con.setAutoCommit(true); // only commit after finishing all \"con\" usages, thanks Zygon\n+            \n         } catch (SQLException | RuntimeException t) {\n             FilePrinter.printError(FilePrinter.SAVE_CHAR, t, \"Error saving \" + name + \" Level: \" + level + \" Job: \" + job.getId());\n             try {\n@@ -8612,6 +8728,11 @@ public synchronized void saveCharToDB(boolean notAutosave) {\n             }\n         } catch (Exception e) {\n             FilePrinter.printError(FilePrinter.SAVE_CHAR, e, \"Error saving \" + name + \" Level: \" + level + \" Job: \" + job.getId());\n+            try {\n+                con.rollback(); // thanks Zygon\n+            } catch (SQLException se) {\n+                FilePrinter.printError(FilePrinter.SAVE_CHAR, se, \"Error trying to rollback \" + name);\n+            }\n         } finally {\n             try {\n                 con.setAutoCommit(true);\n@@ -9923,7 +10044,7 @@ public void sendSpawnData(MapleClient client) {\n         if (!this.isHidden() || client.getPlayer().gmLevel() > 1) {\n             client.announce(MaplePacketCreator.spawnPlayerMapObject(client, this, false));\n             \n-            if (buffEffects.containsKey(getJobMapChair(job))) { // mustn't effLock, chrLock this function\n+            if (buffEffects.containsKey(getJobMapChair(job))) { // mustn't effLock, chrLock sendSpawnData\n                 client.announce(MaplePacketCreator.giveForeignChairSkillEffect(id));\n             }\n         }"}, {"sha": "363fac19f59407f6b1ae50e1b3ca27c97ceb81f8", "filename": "src/client/MapleClient.java", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/MapleClient.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/MapleClient.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleClient.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -47,8 +47,6 @@\n import jdk.nashorn.api.scripting.NashornScriptEngine;\n import tools.*;\n \n-import javax.script.ScriptEngine;\n-\n import net.server.Server;\n import net.server.coordinator.MapleSessionCoordinator;\n import net.server.coordinator.MapleSessionCoordinator.AntiMulticlientResult;\n@@ -63,6 +61,7 @@\n \n import org.apache.mina.core.session.IoSession;\n \n+import net.server.world.announcer.MapleAnnouncerCoordinator;\n import client.inventory.MapleInventoryType;\n import constants.GameConstants;\n import constants.ServerConstants;\n@@ -74,7 +73,6 @@\n import scripting.quest.QuestActionManager;\n import scripting.quest.QuestScriptManager;\n import server.life.MapleMonster;\n-import server.MapleTrade;\n import server.ThreadManager;\n import server.maps.*;\n import server.quest.MapleQuest;\n@@ -85,7 +83,7 @@\n \n public class MapleClient {\n \n-\tpublic static final int LOGIN_NOTLOGGEDIN = 0;\n+        public static final int LOGIN_NOTLOGGEDIN = 0;\n \tpublic static final int LOGIN_SERVER_TRANSITION = 1;\n \tpublic static final int LOGIN_LOGGEDIN = 2;\n \tpublic static final String CLIENT_KEY = \"CLIENT\";\n@@ -96,7 +94,8 @@\n \tprivate MapleAESOFB send;\n \tprivate MapleAESOFB receive;\n \tprivate final IoSession session;\n-\tprivate MapleCharacter player;\n+        private MapleCharacter player;\n+        private MapleAnnouncerCoordinator announcer = MapleAnnouncerCoordinator.getInstance();\n \tprivate int channel = 1;\n \tprivate int accId = -4;\n \tprivate boolean loggedIn = false;\n@@ -122,19 +121,28 @@\n \tprivate final Lock lock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT, true);\n         private final Lock encoderLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_ENCODER, true);\n         private static final Lock loginLocks[] = new Lock[200];  // thanks Masterrulax & try2hack for pointing out a bottleneck issue here\n-    private Calendar tempBanCalendar;\n+        private Calendar tempBanCalendar;\n \tprivate int votePoints;\n \tprivate int voteTime = -1;\n         private int visibleWorlds;\n \tprivate long lastNpcClick;\n \tprivate long sessionId;\n+        private long lastPacket = System.currentTimeMillis();\n         private int lang = 0;\n         \n         static {\n             for (int i = 0; i < 200; i++) {\n                 loginLocks[i] = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_LOGIN, true);\n             }\n         }\n+        \n+\tpublic void updateLastPacket() {\n+\t\tlastPacket = System.currentTimeMillis();\n+\t}\n+\n+\tpublic long getLastPacket() {\n+\t\treturn lastPacket;\n+\t}\n \n         public MapleClient(MapleAESOFB send, MapleAESOFB receive, IoSession session) {\n \t\tthis.send = send;\n@@ -877,9 +885,9 @@ private void removePartyPlayer(World wserv) {\n                 MapleMap map = player.getMap();\n                 final MapleParty party = player.getParty();\n                 final int idz = player.getId();\n-                final MaplePartyCharacter chrp = new MaplePartyCharacter(player);\n                 \n                 if (party != null) {\n+                        final MaplePartyCharacter chrp = new MaplePartyCharacter(player);\n                         chrp.setOnline(false);\n                         wserv.updateParty(party.getId(), PartyOperation.LOG_ONOFF, chrp);\n                         if (party.getLeader().getId() == idz && map != null) {\n@@ -1135,6 +1143,13 @@ public int getWorld() {\n \n \tpublic void setWorld(int world) {\n \t\tthis.world = world;\n+                \n+                World wserv = Server.getInstance().getWorld(world);\n+                if (wserv != null) {\n+                        this.announcer = wserv.getAnnouncerCoordinator();\n+                } else {\n+                        this.announcer = MapleAnnouncerCoordinator.getInstance();\n+                }\n \t}\n \n \tpublic void pongReceived() {\n@@ -1459,8 +1474,8 @@ public synchronized void announceBossHpBar(MapleMonster mm, final int mobHash, f\n                 }\n \t}\n         \n-        public synchronized void announce(final byte[] packet) {//MINA CORE IS A FUCKING BITCH AND I HATE IT <3\n-                session.write(packet);\n+        public void announce(final byte[] packet) {     // thanks GitGud for noticing an opportunity for improvement by overcoming \"synchronized announce\"\n+                announcer.append(session, packet);\n \t}\n \n         public void announceHint(String msg, int length) {"}, {"sha": "e7d07cd9ffc5d24672c55b9fdaf1c0fb106daa86", "filename": "src/client/MapleMount.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/MapleMount.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/MapleMount.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleMount.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -107,6 +107,10 @@ public void setLevel(int newlevel) {\n     public void setItemId(int newitemid) {\n         this.itemid = newitemid;\n     }\n+    \n+    public void setSkillId(int newskillid) {\n+        this.skillid = newskillid;\n+    }\n \n     public void setActive(boolean set) {\n         this.active = set;"}, {"sha": "3728dd4a5ac08e9925514446ef700b864b67618f", "filename": "src/client/command/CommandsExecutor.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/command/CommandsExecutor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/command/CommandsExecutor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/CommandsExecutor.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -254,6 +254,7 @@ private void registerLv2Commands(){\n         addCommand(\"drop\", 2, ItemDropCommand.class);\n         addCommand(\"level\", 2, LevelCommand.class);\n         addCommand(\"levelpro\", 2, LevelProCommand.class);\n+        addCommand(\"setslot\", 2, SetSlotCommand.class);\n         addCommand(\"setstat\", 2, SetStatCommand.class);\n         addCommand(\"maxstat\", 2, MaxStatCommand.class);\n         addCommand(\"maxskill\", 2, MaxSkillCommand.class);"}, {"sha": "a5f1163b108509a2d1ca1d25a27732026218ecbd", "filename": "src/client/command/commands/gm1/GotoCommand.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/command/commands/gm1/GotoCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/command/commands/gm1/GotoCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm1/GotoCommand.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -30,7 +30,7 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import net.server.Server;\n-import server.MaplePortal;\n+import server.maps.MaplePortal;\n import server.maps.FieldLimit;\n import server.maps.MapleMap;\n import server.maps.MapleMapManager;"}, {"sha": "3d15a23f06bc11d9a2212a1cd3581f1ae5c563c4", "filename": "src/client/command/commands/gm2/JailCommand.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/command/commands/gm2/JailCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/command/commands/gm2/JailCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm2/JailCommand.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -26,7 +26,7 @@\n import client.command.Command;\n import client.MapleClient;\n import client.MapleCharacter;\n-import server.MaplePortal;\n+import server.maps.MaplePortal;\n import server.maps.MapleMap;\n \n public class JailCommand extends Command {"}, {"sha": "06e4b46a178a1bf535887dd9c681ace870aa4215", "filename": "src/client/command/commands/gm2/SetSlotCommand.java", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/command/commands/gm2/SetSlotCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/command/commands/gm2/SetSlotCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm2/SetSlotCommand.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -0,0 +1,54 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server, commands OdinMS-based\n+    Copyleft (L) 2016 - 2019 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+\n+/*\n+   @Author: Ronan\n+*/\n+package client.command.commands.gm2;\n+\n+import client.*;\n+import client.command.Command;\n+\n+public class SetSlotCommand extends Command {\n+    {\n+        setDescription(\"\");\n+    }\n+\n+    @Override\n+    public void execute(MapleClient c, String[] params) {\n+        MapleCharacter player = c.getPlayer();\n+        if (params.length < 1) {\n+            player.yellowMessage(\"Syntax: !setslot <newlevel>\");\n+            return;\n+        }\n+        \n+        int slots = (Integer.parseInt(params[0]) / 4) * 4;\n+        for (int i = 1; i < 5; i++) {\n+            int curSlots = player.getSlots(i);\n+            if (slots <= -curSlots) {\n+                continue;\n+            }\n+            \n+            player.gainSlots(i, slots - curSlots, true);\n+        }\n+        \n+        player.yellowMessage(\"Slots updated.\");\n+    }\n+}"}, {"sha": "a05b51ce04bb1017a4cd4454529770594eaf4acf", "filename": "src/client/command/commands/gm5/DebugCommand.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/command/commands/gm5/DebugCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/command/commands/gm5/DebugCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm5/DebugCommand.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -27,7 +27,7 @@\n import client.MapleClient;\n import client.MapleCharacter;\n import net.server.Server;\n-import server.MaplePortal;\n+import server.maps.MaplePortal;\n import server.TimerManager;\n import server.life.MapleMonster;\n import server.life.SpawnPoint;"}, {"sha": "eb2db975bd9a23d0e5639f5a2f22cf145c3d3bbb", "filename": "src/client/inventory/MapleInventory.java", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/inventory/MapleInventory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/inventory/MapleInventory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/MapleInventory.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -83,6 +83,19 @@ public byte getSlotLimit() {\n     public void setSlotLimit(int newLimit) {\n         lock.lock();\n         try {\n+            if (newLimit < slotLimit) {\n+                List<Short> toRemove = new LinkedList<>();\n+                for (Item it : list()) {\n+                    if (it.getPosition() > newLimit) {\n+                        toRemove.add(it.getPosition());\n+                    }\n+                }\n+                \n+                for (Short slot : toRemove) {\n+                    removeSlot(slot);\n+                }\n+            }\n+            \n             slotLimit = (byte) newLimit;\n         } finally {\n             lock.unlock();"}, {"sha": "5a9247af51348de80420ac36f57035156b230850", "filename": "src/client/inventory/manipulator/MapleInventoryManipulator.java", "status": "modified", "additions": 31, "deletions": 10, "changes": 41, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/inventory/manipulator/MapleInventoryManipulator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/inventory/manipulator/MapleInventoryManipulator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/manipulator/MapleInventoryManipulator.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -683,9 +683,27 @@ public static void unequip(MapleClient c, short src, short dst) {\n         c.announce(MaplePacketCreator.modifyInventory(true, Collections.singletonList(new ModifyInventory(2, source, src))));\n         chr.equipChanged();\n     }\n+    \n+    private static boolean isDisappearingItemDrop(Item it) {\n+        MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n+        if (ii.isDropRestricted(it.getItemId())) {\n+            return true;\n+        } else if (ii.isCash(it.getItemId())) {\n+            if (ServerConstants.USE_ENFORCE_UNMERCHABLE_CASH) {     // thanks Ari for noticing cash drops not available server-side\n+                return true;\n+            } else if (ItemConstants.isPet(it.getItemId()) && ServerConstants.USE_ENFORCE_UNMERCHABLE_PET) {\n+                return true;\n+            }\n+        } else if (isDroppedItemRestricted(it)) {\n+            return true;\n+        } else if (ItemConstants.isWeddingRing(it.getItemId())) {\n+            return true;\n+        }\n+        \n+        return false;\n+    }\n \n     public static void drop(MapleClient c, MapleInventoryType type, short src, short quantity) {\n-        MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n         if (src < 0) {\n             type = MapleInventoryType.EQUIPPED;\n         }\n@@ -698,14 +716,21 @@ public static void drop(MapleClient c, MapleInventoryType type, short src, short\n         \treturn;\n         }\n         int itemId = source.getItemId();\n-        if (ItemConstants.isPet(itemId)) {\n-            return;\n-        }\n         \n         MapleMap map = chr.getMap();\n         if ((!ItemConstants.isRechargeable(itemId) && source.getQuantity() < quantity) || quantity < 0) {\n             return;\n         }\n+        \n+        int petid = source.getPetId();\n+        if (petid > -1) {\n+            int petIdx = chr.getPetIndex(petid);\n+            if(petIdx > -1) {\n+                MaplePet pet = chr.getPet(petIdx);\n+                chr.unequipPet(pet, true);\n+            }\n+        }\n+        \n         Point dropPos = new Point(chr.getPosition());\n         if (quantity < source.getQuantity() && !ItemConstants.isRechargeable(itemId)) {\n             Item target = source.copy();\n@@ -721,11 +746,9 @@ public static void drop(MapleClient c, MapleInventoryType type, short src, short\n                     NewYearCardRecord.removeAllNewYearCard(false, chr);\n                     c.getAbstractPlayerInteraction().removeAll(4301000);\n                 }\n-            } else if (ItemConstants.isWeddingRing(source.getItemId())) {\n-                map.disappearingItemDrop(chr, chr, target, dropPos);\n             }\n             \n-            if (ii.isDropRestricted(target.getItemId()) || ii.isCash(target.getItemId()) || isDroppedItemRestricted(target)) {\n+            if (isDisappearingItemDrop(target)) {\n                 map.disappearingItemDrop(chr, chr, target, dropPos);\n             } else {\n                 map.spawnItemDrop(chr, chr, target, dropPos, true, true);\n@@ -754,11 +777,9 @@ public static void drop(MapleClient c, MapleInventoryType type, short src, short\n                     NewYearCardRecord.removeAllNewYearCard(false, chr);\n                     c.getAbstractPlayerInteraction().removeAll(4301000);\n                 }\n-            } else if (ItemConstants.isWeddingRing(source.getItemId())) {\n-                map.disappearingItemDrop(chr, chr, source, dropPos);\n             }\n             \n-            if (ii.isDropRestricted(itemId) || ii.isCash(itemId) || isDroppedItemRestricted(source)) {\n+            if (isDisappearingItemDrop(source)) {\n                 map.disappearingItemDrop(chr, chr, source, dropPos);\n             } else {\n                 map.spawnItemDrop(chr, chr, source, dropPos, true, true);"}, {"sha": "835c8369f3e787f4412e6c312b49cd8b347f7822", "filename": "src/client/processor/AssignSPProcessor.java", "status": "modified", "additions": 28, "deletions": 17, "changes": 45, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/processor/AssignSPProcessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/processor/AssignSPProcessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/processor/AssignSPProcessor.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -40,31 +40,42 @@\n  */\n public class AssignSPProcessor {\n     \n+    public static boolean canSPAssign(MapleClient c, int skillid) {\n+        if (skillid == Aran.HIDDEN_FULL_DOUBLE || skillid == Aran.HIDDEN_FULL_TRIPLE || skillid == Aran.HIDDEN_OVER_DOUBLE || skillid == Aran.HIDDEN_OVER_TRIPLE) {\n+            c.announce(MaplePacketCreator.enableActions());\n+            return false;\n+        }\n+\n+        MapleCharacter player = c.getPlayer();\n+        if ((!GameConstants.isPqSkillMap(player.getMapId()) && GameConstants.isPqSkill(skillid)) || (!player.isGM() && GameConstants.isGMSkills(skillid)) || (!GameConstants.isInJobTree(skillid, player.getJob().getId()) && !player.isGM())) {\n+            AutobanFactory.PACKET_EDIT.alert(player, \"tried to packet edit in distributing sp.\");\n+            FilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + \".txt\", c.getPlayer().getName() + \" tried to use skill \" + skillid + \" without it being in their job.\");\n+\n+            final MapleClient client = c;\n+            ThreadManager.getInstance().newTask(new Runnable() {\n+                @Override\n+                public void run() {\n+                    client.disconnect(true, false);\n+                }\n+            });\n+\n+            return false;\n+        }\n+        \n+        return true;\n+    }\n+    \n     public static void SPAssignAction(MapleClient c, int skillid) {\n         c.lockClient();\n         try {\n-            if (skillid == Aran.HIDDEN_FULL_DOUBLE || skillid == Aran.HIDDEN_FULL_TRIPLE || skillid == Aran.HIDDEN_OVER_DOUBLE || skillid == Aran.HIDDEN_OVER_TRIPLE) {\n-                c.announce(MaplePacketCreator.enableActions());\n+            if (!canSPAssign(c, skillid)) {\n                 return;\n             }\n-\n+            \n             MapleCharacter player = c.getPlayer();\n             int remainingSp = player.getRemainingSps()[GameConstants.getSkillBook(skillid/10000)];\n             boolean isBeginnerSkill = false;\n-            if ((!GameConstants.isPqSkillMap(player.getMapId()) && GameConstants.isPqSkill(skillid)) || (!player.isGM() && GameConstants.isGMSkills(skillid)) || (!GameConstants.isInJobTree(skillid, player.getJob().getId()) && !player.isGM())) {\n-                AutobanFactory.PACKET_EDIT.alert(player, \"tried to packet edit in distributing sp.\");\n-                FilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + \".txt\", c.getPlayer().getName() + \" tried to use skill \" + skillid + \" without it being in their job.\");\n-                \n-                final MapleClient client = c;\n-                ThreadManager.getInstance().newTask(new Runnable() {\n-                    @Override\n-                    public void run() {\n-                        client.disconnect(true, false);\n-                    }\n-                });\n-                \n-                return;\n-            }\n+            \n             if (skillid % 10000000 > 999 && skillid % 10000000 < 1003) {\n                 int total = 0;\n                 for (int i = 0; i < 3; i++) {"}, {"sha": "d465d184f7b651f06ecfd094e5eb2fd88dd7ad35", "filename": "src/client/processor/StorageProcessor.java", "status": "modified", "additions": 26, "deletions": 15, "changes": 41, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/processor/StorageProcessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/client/processor/StorageProcessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/processor/StorageProcessor.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -45,6 +45,7 @@\n public class StorageProcessor {\n     \n         public static void storageAction(SeekableLittleEndianAccessor slea, MapleClient c) {\n+                MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n                 MapleCharacter chr = c.getPlayer();\n                 MapleStorage storage = chr.getStorage();\n                 byte mode = slea.readByte();\n@@ -69,7 +70,7 @@ public static void storageAction(SeekableLittleEndianAccessor slea, MapleClient\n                                         slot = storage.getSlot(MapleInventoryType.getByType(type), slot);\n                                         Item item = storage.getItem(slot);\n                                         if (item != null) {\n-                                                if (MapleItemInformationProvider.getInstance().isPickupRestricted(item.getItemId()) && chr.haveItemWithId(item.getItemId(), true)) {\n+                                                if (ii.isPickupRestricted(item.getItemId()) && chr.haveItemWithId(item.getItemId(), true)) {\n                                                         c.announce(MaplePacketCreator.getStorageError((byte) 0x0C));\n                                                         return;\n                                                 }\n@@ -83,13 +84,20 @@ public static void storageAction(SeekableLittleEndianAccessor slea, MapleClient\n                                                 }\n \n                                                 if (MapleInventoryManipulator.checkSpace(c, item.getItemId(), item.getQuantity(), item.getOwner())) {                \n-                                                        item = storage.takeOut(slot);//actually the same but idc\n-                                                        String itemName = MapleItemInformationProvider.getInstance().getName(item.getItemId());\n-                                                        FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" took out \" + item.getQuantity() + \" \" + itemName + \" (\" + item.getItemId() + \")\");\n-                                                        chr.setUsedStorage();\n-                                                        MapleKarmaManipulator.toggleKarmaFlagToUntradeable(item);\n-                                                        MapleInventoryManipulator.addFromDrop(c, item, false);\n-                                                        storage.sendTakenOut(c, item.getInventoryType());\n+                                                        if (storage.takeOut(item)) {\n+                                                                chr.setUsedStorage();\n+                                                                \n+                                                                MapleKarmaManipulator.toggleKarmaFlagToUntradeable(item);\n+                                                                MapleInventoryManipulator.addFromDrop(c, item, false);\n+\n+                                                                String itemName = ii.getName(item.getItemId());\n+                                                                FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" took out \" + item.getQuantity() + \" \" + itemName + \" (\" + item.getItemId() + \")\");\n+\n+                                                                storage.sendTakenOut(c, item.getInventoryType());\n+                                                        } else {\n+                                                                c.announce(MaplePacketCreator.enableActions());\n+                                                                return;\n+                                                        }\n                                                 } else {\n                                                         c.announce(MaplePacketCreator.getStorageError((byte) 0x0A));\n                                                 }\n@@ -149,11 +157,14 @@ public static void storageAction(SeekableLittleEndianAccessor slea, MapleClient\n                                                 \n                                                 MapleKarmaManipulator.toggleKarmaFlagToUntradeable(item);\n                                                 item.setQuantity(quantity);\n-                                                storage.store(item);\n-                                                storage.sendStored(c, ItemConstants.getInventoryType(itemId));\n-                                                String itemName = MapleItemInformationProvider.getInstance().getName(item.getItemId());\n-                                                FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" stored \" + item.getQuantity() + \" \" + itemName + \" (\" + item.getItemId() + \")\");\n+                                                \n+                                                storage.store(item);    // inside a critical section, \"!(storage.isFull())\" is still in effect...\n                                                 chr.setUsedStorage();\n+                                                \n+                                                String itemName = ii.getName(item.getItemId());\n+                                                FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + \".txt\", c.getPlayer().getName() + \" stored \" + item.getQuantity() + \" \" + itemName + \" (\" + item.getItemId() + \")\");\n+                                                \n+                                                storage.sendStored(c, ItemConstants.getInventoryType(itemId));\n                                         }\n                                 } else if (mode == 6) { // arrange items\n                                         if(ServerConstants.USE_STORAGE_ITEM_SORT) storage.arrangeItems(c);\n@@ -178,14 +189,14 @@ public static void storageAction(SeekableLittleEndianAccessor slea, MapleClient\n                                                 }\n                                                 storage.setMeso(storageMesos - meso);\n                                                 chr.gainMeso(meso, false, true, false);\n-                                                FilePrinter.print(FilePrinter.STORAGE + c.getPlayer().getName() + \".txt\", c.getPlayer().getName() + (meso > 0 ? \" took out \" : \" stored \") + Math.abs(meso) + \" mesos\");\n                                                 chr.setUsedStorage();\n+                                                FilePrinter.print(FilePrinter.STORAGE + c.getPlayer().getName() + \".txt\", c.getPlayer().getName() + (meso > 0 ? \" took out \" : \" stored \") + Math.abs(meso) + \" mesos\");\n+                                                storage.sendMeso(c);\n                                         } else {\n                                                 c.announce(MaplePacketCreator.enableActions());\n                                                 return;\n                                         }\n-                                        storage.sendMeso(c);\n-                                } else if (mode == 8) {// close\n+                                } else if (mode == 8) {// close... unless the player decides to enter cash shop!\n                                         storage.close();\n                                 }\n                         } finally {"}, {"sha": "eac4db3caff5c3a0c21d929eca2f515b0bb47252", "filename": "src/constants/ScriptableNPCConstants.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/constants/ScriptableNPCConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/constants/ScriptableNPCConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ScriptableNPCConstants.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -16,7 +16,7 @@\n public class ScriptableNPCConstants {\n     \n     public static final Set<Pair<Integer, String>> SCRIPTABLE_NPCS = new HashSet<Pair<Integer, String>>(){{\n-        add(new Pair<>(9200000, \"Cody\"));\n+        //add(new Pair<>(9200000, \"Cody\"));\n         add(new Pair<>(9001105, \"Grandpa Moon Bunny\"));\n     }};\n     "}, {"sha": "c3887e84e37e6d425e40630abc057307ee060a15", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -93,8 +93,8 @@\n     public static final boolean USE_ENFORCE_JOB_LEVEL_RANGE = false;//Caps the player level on the minimum required to advance their current jobs.\n     public static final boolean USE_ENFORCE_JOB_SP_RANGE = false;   //Caps the player SP level on the total obtainable by their current jobs. After changing jobs, missing SP will be retrieved.\n     public static final boolean USE_ENFORCE_ITEM_SUGGESTION = false;//Forces the Owl of Minerva and the Cash Shop to always display the defined item array instead of those featured by the players.\n-    public static final boolean USE_ENFORCE_UNMERCHABLE_CASH = true;//Forces players to not sell CASH items via merchants.\n-    public static final boolean USE_ENFORCE_UNMERCHABLE_PET = false; //Forces players to not sell pets via merchants. (since non-named pets gets dirty name and other possible DB-related issues)\n+    public static final boolean USE_ENFORCE_UNMERCHABLE_CASH = true;//Forces players to not sell CASH items via merchants, drops of it disappears.\n+    public static final boolean USE_ENFORCE_UNMERCHABLE_PET = true; //Forces players to not sell pets via merchants, drops of it disappears. (since non-named pets gets dirty name and other possible DB-related issues)\n     public static final boolean USE_ENFORCE_MERCHANT_SAVE = true;   //Forces automatic DB save on merchant owners, at every item movement on shop.\n     public static final boolean USE_ENFORCE_MDOOR_POSITION = false; //Forces mystic door to be spawned near spawnpoints.\n     public static final boolean USE_SPAWN_CLEAN_MDOOR = false;       //Makes mystic doors to be spawned without deploy animation. This clears disconnecting issues that may happen when trying to cancel doors a couple seconds after deployment.\n@@ -309,6 +309,9 @@\n     public static final int BUYBACK_RETURN_MINUTES = 1;         //Sets the maximum amount of time the player can wait before decide to buyback.\n     public static final int BUYBACK_COOLDOWN_MINUTES = 7;       //Sets the time the player must wait before using buyback again.\n     \n+    // Login timeout by shavit\n+    public static long TIMEOUT_DURATION = 3600000L;             // Kicks clients who don't send any packet to the game server in due time (in millisseconds).\n+    \n     //Event End Timestamp\n     public static final long EVENT_END_TIMESTAMP = 1428897600000L;\n "}, {"sha": "7a78c8ff6952085d41f9679669705113814a21c9", "filename": "src/constants/skills/Aran.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/constants/skills/Aran.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/constants/skills/Aran.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/skills/Aran.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -35,6 +35,7 @@\n     public static final int FREEZE_STANDING = 21121003;\n     public static final int SNOW_CHARGE = 21111005;\n     public static final int HEROS_WILL = 21121008;\n+    public static final int HIGH_DEFENSE = 21120004;\n     public static final int BODY_PRESSURE = 21101003;\n     public static final int COMBO_DRAIN = 21100005;\n     public static final int COMBO_SMASH = 21100004;"}, {"sha": "6c9e4c202105a662a374101fb83006ddbdcf08de", "filename": "src/net/MapleServerHandler.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/MapleServerHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/MapleServerHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/MapleServerHandler.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -198,6 +198,7 @@ public void messageReceived(IoSession session, Object message) {\n                 FilePrinter.printError(FilePrinter.PACKET_HANDLER + packetHandler.getClass().getName() + \".txt\", t, \"Error for \" + (client.getPlayer() == null ? \"\" : \"player ; \" + client.getPlayer() + \" on map ; \" + client.getPlayer().getMapId() + \" - \") + \"account ; \" + client.getAccountName() + \"\\r\\n\" + slea.toString());\n                 //client.announce(MaplePacketCreator.enableActions());//bugs sometimes\n             }\n+            client.updateLastPacket();\n         }\n     }\n     "}, {"sha": "5093c45445e3cac76e18b9f03336f2c9ce4f380d", "filename": "src/net/server/Server.java", "status": "modified", "additions": 40, "deletions": 3, "changes": 43, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/Server.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/Server.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/Server.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -54,6 +54,7 @@\n import net.MapleServerHandler;\n import net.mina.MapleCodecFactory;\n import net.server.channel.Channel;\n+import net.server.coordinator.MapleSessionCoordinator;\n import net.server.guild.MapleAlliance;\n import net.server.guild.MapleGuild;\n import net.server.guild.MapleGuildCharacter;\n@@ -70,6 +71,7 @@\n import net.server.worker.ReleaseLockWorker;\n import net.server.worker.RespawnWorker;\n import net.server.world.World;\n+import net.server.world.announcer.MapleAnnouncerCoordinator;\n \n import org.apache.mina.core.buffer.IoBuffer;\n import org.apache.mina.core.buffer.SimpleBufferAllocator;\n@@ -94,7 +96,6 @@\n import constants.OpcodeConstants;\n import constants.ServerConstants;\n import java.util.TimeZone;\n-import net.server.coordinator.MapleSessionCoordinator;\n import server.CashShop.CashItemFactory;\n import server.MapleSkillbookInformationProvider;\n import server.ThreadManager;\n@@ -949,12 +950,17 @@ public void init() {\n             System.exit(0);\n         }\n         \n+        MapleAnnouncerCoordinator.getInstance().init();\n+        System.out.println();\n+        \n         if(ServerConstants.USE_FAMILY_SYSTEM) {\n             timeToTake = System.currentTimeMillis();\n             MapleFamily.loadAllFamilies();\n             System.out.println(\"Families loaded in \" + ((System.currentTimeMillis() - timeToTake) / 1000.0) + \" seconds\\r\\n\");\n         }\n-\n+        \n+        System.out.println();\n+        \n         acceptor.getSessionConfig().setIdleTime(IdleStatus.BOTH_IDLE, 30);\n         acceptor.setHandler(new MapleServerHandler());\n         try {\n@@ -964,7 +970,7 @@ public void init() {\n         }\n         \n         System.out.println(\"Listening on port 8484\\r\\n\\r\\n\");\n-\n+        \n         System.out.println(\"HeavenMS is now online.\\r\\n\");\n         online = true;\n         \n@@ -1446,6 +1452,11 @@ public void deleteAccountEntry(Integer accountid) { is this even a thing?\n         } finally {\n             lgnWLock.unlock();\n         }\n+    \n+        for (World wserv : this.getWorlds()) {\n+            wserv.clearAccountCharacterView(accountid);\n+            wserv.unregisterAccountStorage(accountid);\n+        }\n     }\n     */\n     \n@@ -1708,6 +1719,32 @@ private int loadAccountCharactersView(Integer accId, int gmLevel, int fromWorldi\n         return gmLevel;\n     }\n     \n+    public void loadAccountStorages(MapleClient c) {\n+        int accountId = c.getAccID();\n+        Set<Integer> accWorlds = new HashSet<>();\n+        lgnWLock.lock();\n+        try {\n+            Set<Integer> chars = accountChars.get(accountId);\n+            \n+            for (Integer cid : chars) {\n+                Integer worldid = worldChars.get(cid);\n+                if (worldid != null) {\n+                    accWorlds.add(worldid);\n+                }\n+            }\n+        } finally {\n+            lgnWLock.unlock();\n+        }\n+        \n+        List<World> worldList = this.getWorlds();\n+        for (Integer worldid : accWorlds) {\n+            if (worldid < worldList.size()) {\n+                World wserv = worldList.get(worldid);\n+                wserv.registerAccountStorage(accountId);\n+            }\n+        }\n+    }\n+    \n     private static String getRemoteIp(IoSession session) {\n         return MapleSessionCoordinator.getSessionRemoteAddress(session);\n     }"}, {"sha": "b1662d04c7cb8814b41424a1ac0dbc71a56461b5", "filename": "src/net/server/audit/locks/MonitoredLockType.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/audit/locks/MonitoredLockType.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/audit/locks/MonitoredLockType.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/audit/locks/MonitoredLockType.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -36,6 +36,7 @@\n     CHARACTER_STA,\n     CLIENT,\n     CLIENT_ENCODER,\n+    CLIENT_SESSION,\n     CLIENT_LOGIN,\n     BOOK,\n     ITEM,"}, {"sha": "6e9658b424be565a7726a563445dcef11c4f9eb3", "filename": "src/net/server/channel/handlers/ChangeMapHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/ChangeMapHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/ChangeMapHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/ChangeMapHandler.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -30,7 +30,7 @@\n import client.MapleClient;\n import client.inventory.MapleInventoryType;\n import client.inventory.manipulator.MapleInventoryManipulator;\n-import server.MaplePortal;\n+import server.maps.MaplePortal;\n import server.MapleTrade;\n import server.maps.MapleMap;\n import tools.FilePrinter;"}, {"sha": "1c1f6368df6426b14e9b68d4fdf22315f39cc6f6", "filename": "src/net/server/channel/handlers/ChangeMapSpecialHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/ChangeMapSpecialHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/ChangeMapSpecialHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/ChangeMapSpecialHandler.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -23,7 +23,7 @@\n \n import client.MapleClient;\n import net.AbstractMaplePacketHandler;\n-import server.MaplePortal;\n+import server.maps.MaplePortal;\n import server.MapleTrade;\n import server.MapleTrade.TradeResult;\n import tools.MaplePacketCreator;"}, {"sha": "19e7f4dc35233e59980d5caa42ac6d02888a6125", "filename": "src/net/server/channel/handlers/HiredMerchantRequest.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/HiredMerchantRequest.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/HiredMerchantRequest.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/HiredMerchantRequest.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -29,7 +29,7 @@\n import constants.GameConstants;\n import java.awt.Point;\n import net.AbstractMaplePacketHandler;\n-import server.MaplePortal;\n+import server.maps.MaplePortal;\n import server.maps.MapleMapObject;\n import server.maps.MapleMapObjectType;\n import server.maps.MaplePlayerShop;"}, {"sha": "31b48abee1e961cdd9b7d26d896e8fada0e98ed4", "filename": "src/net/server/channel/handlers/MonsterCarnivalHandler.java", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/MonsterCarnivalHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/MonsterCarnivalHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MonsterCarnivalHandler.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -101,16 +101,19 @@ public void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n                         final MapleDisease dis = skill.getDisease();\n                         MapleParty enemies = c.getPlayer().getParty().getEnemy();\n                         if (skill.targetsAll) {\n-                            int chanceAcerto = 0;\n+                            int hitChance = 0;\n                             if (dis.getDisease() == 121 || dis.getDisease() == 122 || dis.getDisease() == 125 || dis.getDisease() == 126) {\n-                                chanceAcerto = (int) (Math.random() * 100);\n+                                hitChance = (int) (Math.random() * 100);\n                             }\n-                            if (chanceAcerto <= 80) {\n-                                for (MaplePartyCharacter chrS : enemies.getPartyMembers()) {\n-                                    if (dis == null) {\n-                                        chrS.getPlayer().dispel();\n-                                    } else {\n-                                        chrS.getPlayer().giveDebuff(dis, skill.getSkill());\n+                            if (hitChance <= 80) {\n+                                for (MaplePartyCharacter mpc : enemies.getPartyMembers()) {\n+                                    MapleCharacter mc = mpc.getPlayer();\n+                                    if (mc != null) {\n+                                        if (dis == null) {\n+                                            mc.dispel();\n+                                        } else {\n+                                            mc.giveDebuff(dis, skill.getSkill());\n+                                        }\n                                     }\n                                 }\n                             }"}, {"sha": "fcc1ba9da8d24b8986dea32ffc253a58cb6042c6", "filename": "src/net/server/channel/handlers/PartyOperationHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/PartyOperationHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/PartyOperationHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PartyOperationHandler.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -53,7 +53,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             }\n             case 2: { // leave/disband\n                 if (party != null) {\n-                    List<MapleCharacter> partymembers = player.getPartyMembers();\n+                    List<MapleCharacter> partymembers = player.getPartyMembersOnline();\n \n                     MapleParty.leaveParty(party, c);\n                     player.updatePartySearchAvailability(true);"}, {"sha": "9daa2e91bdb37bd0d1ef4d6e33940743bab4479c", "filename": "src/net/server/channel/handlers/PlayerInteractionHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/PlayerInteractionHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/PlayerInteractionHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PlayerInteractionHandler.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -34,7 +34,7 @@\n \n import net.AbstractMaplePacketHandler;\n import server.MapleItemInformationProvider;\n-import server.MaplePortal;\n+import server.maps.MaplePortal;\n import server.MapleTrade;\n import constants.GameConstants;\n import server.maps.FieldLimit;"}, {"sha": "ba04ceb46fbc055b3787570cf7a605cfaa1aba04", "filename": "src/net/server/channel/handlers/PlayerLoggedinHandler.java", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/PlayerLoggedinHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/PlayerLoggedinHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PlayerLoggedinHandler.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -53,6 +53,7 @@\n import client.MapleFamily;\n import client.MapleFamilyEntry;\n import client.MapleKeyBinding;\n+import client.MapleMount;\n import client.SkillFactory;\n import client.inventory.Equip;\n import client.inventory.Item;\n@@ -352,8 +353,14 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n \n                 if (newcomer) {\n                     for(MaplePet pet : player.getPets()) {\n-                        if(pet != null)\n+                        if(pet != null) {\n                             wserv.registerPetHunger(player, player.getPetIndex(pet));\n+                        }\n+                    }\n+                    \n+                    MapleMount mount = player.getMount();   // thanks Ari for noticing a scenario where Silver Mane quest couldn't be started\n+                    if (mount.getItemId() != 0) {\n+                        player.announce(MaplePacketCreator.updateMount(player.getId(), mount, false));\n                     }\n \n                     player.reloadQuestExpirations();"}, {"sha": "4be8c93fc033c3a30f00aed9131c2bb3ff7f79e2", "filename": "src/net/server/channel/handlers/UseCashItemHandler.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/UseCashItemHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/channel/handlers/UseCashItemHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/UseCashItemHandler.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -36,6 +36,7 @@\n import client.inventory.manipulator.MapleInventoryManipulator;\n import client.inventory.manipulator.MapleKarmaManipulator;\n import client.processor.AssignAPProcessor;\n+import client.processor.AssignSPProcessor;\n import client.processor.DueyProcessor;\n import constants.GameConstants;\n import constants.ItemConstants;\n@@ -156,6 +157,10 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             \n             if (itemId > 5050000) {\n                 int SPTo = slea.readInt();\n+                if (!AssignSPProcessor.canSPAssign(c, SPTo)) {  // exploit found thanks to Arnah\n+                    return;\n+                }\n+                \n                 int SPFrom = slea.readInt();\n                 Skill skillSPTo = SkillFactory.getSkill(SPTo);\n                 Skill skillSPFrom = SkillFactory.getSkill(SPFrom);"}, {"sha": "8941dcc5877b3cbbe58d46a382d7c8ef98405b23", "filename": "src/net/server/coordinator/matchchecker/listener/MatchCheckerCPQChallenge.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/coordinator/matchchecker/listener/MatchCheckerCPQChallenge.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/coordinator/matchchecker/listener/MatchCheckerCPQChallenge.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/coordinator/matchchecker/listener/MatchCheckerCPQChallenge.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -71,7 +71,9 @@ public void onMatchCreated(MapleCharacter leader, Set<MapleCharacter> nonLeaderM\n                 \n                 List<MaplePartyCharacter> chrMembers = new LinkedList<>();\n                 for (MaplePartyCharacter mpc : chr.getParty().getMembers()) {\n-                    chrMembers.add(mpc);\n+                    if (mpc.isOnline()) {\n+                        chrMembers.add(mpc);\n+                    }\n                 }\n                 \n                 if (message.contentEquals(\"cpq1\")) {"}, {"sha": "2a696b4b3861d16f80ceaf948364f0b544ba080e", "filename": "src/net/server/guild/MapleAlliance.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/guild/MapleAlliance.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/guild/MapleAlliance.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/guild/MapleAlliance.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -91,8 +91,13 @@ public static boolean canBeUsedAllianceName(String name) {\n         List<MapleCharacter> mcl = new LinkedList<>();\n \n         for(MaplePartyCharacter mpc: party.getMembers()) {\n-            if(mpc.getPlayer().getGuildRank() == 1 && mpc.getPlayer().getMapId() == party.getLeader().getPlayer().getMapId())\n-                mcl.add(mpc.getPlayer());\n+            MapleCharacter chr = mpc.getPlayer();\n+            if (chr != null) {\n+                MapleCharacter lchr = party.getLeader().getPlayer();\n+                if (chr.getGuildRank() == 1 && lchr != null && chr.getMapId() == lchr.getMapId()) {\n+                    mcl.add(chr);\n+                }\n+            }\n         }\n \n         if(!mcl.isEmpty() && !mcl.get(0).isPartyLeader()) {"}, {"sha": "6a23f441e8af42751dfa43ef1fb981541442d000", "filename": "src/net/server/worker/TimeoutWorker.java", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/worker/TimeoutWorker.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/worker/TimeoutWorker.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/worker/TimeoutWorker.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -0,0 +1,30 @@\n+package net.server.worker;\n+\n+import client.MapleCharacter;\n+import constants.ServerConstants;\n+import net.server.world.World;\n+import tools.FilePrinter;\n+\n+import java.util.Collection;\n+\n+/**\n+ *\n+ * @author Shavit\n+ */\n+public class TimeoutWorker extends BaseWorker implements Runnable {\n+    @Override\n+    public void run() {\n+        long time = System.currentTimeMillis();\n+        Collection<MapleCharacter> chars = wserv.getPlayerStorage().getAllCharacters();\n+        for(MapleCharacter chr : chars) {\n+            if(time - chr.getClient().getLastPacket() > ServerConstants.TIMEOUT_DURATION) {\n+                FilePrinter.print(FilePrinter.DCS + chr.getClient().getAccountName(), chr.getName() + \" auto-disconnected due to inactivity.\");\n+                chr.getClient().disconnect(true, chr.getCashShop().isOpened());\n+            }\n+        }\n+    }\n+\n+    public TimeoutWorker(World world) {\n+        super(world);\n+    }\n+}"}, {"sha": "13dadd62cf4df7e5c00aea22d9cba64a330a3ccf", "filename": "src/net/server/world/MapleParty.java", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/world/MapleParty.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/world/MapleParty.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/MapleParty.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -144,6 +144,23 @@ public MaplePartyCharacter getMemberById(int id) {\n             lock.unlock();\n         }\n     }\n+    \n+    public List<MaplePartyCharacter> getPartyMembersOnline() {\n+        lock.lock();\n+        try {\n+            List<MaplePartyCharacter> ret = new LinkedList<>();\n+            \n+            for (MaplePartyCharacter mpc : members) {\n+                if (mpc.isOnline()) {\n+                    ret.add(mpc);\n+                }\n+            }\n+            \n+            return ret;\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n \n     // used whenever entering PQs: will draw every party member that can attempt a target PQ while ingnoring those unfit.\n     public Collection<MaplePartyCharacter> getEligibleMembers() {\n@@ -452,7 +469,7 @@ public static void expelFromParty(MapleParty party, MapleClient c, int expelCid)\n                 if (expelled != null) {\n                     MapleCharacter emc = expelled.getPlayer();\n                     if(emc != null) {\n-                        List<MapleCharacter> partyMembers = emc.getPartyMembers();\n+                        List<MapleCharacter> partyMembers = emc.getPartyMembersOnline();\n \n                         MapleMap map = emc.getMap();\n                         if(map != null) map.removePartyMember(emc);"}, {"sha": "cf08d9568ef4e8ab55838b7c8af06e2776066fb6", "filename": "src/net/server/world/MaplePartyCharacter.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/world/MaplePartyCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/world/MaplePartyCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/MaplePartyCharacter.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -82,6 +82,9 @@ public boolean isOnline() {\n \n     public void setOnline(boolean online) {\n         this.online = online;\n+        if (!online) {\n+            this.character = null;  // thanks Feras for noticing offline party members retaining whole character object unnecessarily\n+        }\n     }\n \n     public int getMapId() {"}, {"sha": "e1179c403f03c1ac476d252a10ee222ca01e41dd", "filename": "src/net/server/world/World.java", "status": "modified", "additions": 91, "deletions": 37, "changes": 128, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/world/World.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/world/World.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/World.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -60,12 +60,32 @@\n import java.util.concurrent.ScheduledFuture;\n \n import scripting.event.EventInstanceManager;\n+import server.MapleStorage;\n import server.TimerManager;\n+import server.maps.AbstractMapleMapObject;\n import server.maps.MapleHiredMerchant;\n import server.maps.MapleMap;\n+import server.maps.MapleMiniDungeon;\n+import server.maps.MapleMiniDungeonInfo;\n import server.maps.MaplePlayerShop;\n import server.maps.MaplePlayerShopItem;\n-import server.maps.AbstractMapleMapObject;\n+import net.server.PlayerStorage;\n+import net.server.Server;\n+import net.server.audit.LockCollector;\n+import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReentrantLock;\n+import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import net.server.channel.Channel;\n+import net.server.channel.CharacterIdChannelPair;\n+import net.server.coordinator.MapleInviteCoordinator;\n+import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n+import net.server.coordinator.MapleInviteCoordinator.InviteType;\n+import net.server.coordinator.MapleMatchCheckerCoordinator;\n+import net.server.coordinator.MaplePartySearchCoordinator;\n+import net.server.guild.MapleGuild;\n+import net.server.guild.MapleGuildCharacter;\n+import net.server.guild.MapleGuildSummary;\n import net.server.worker.CharacterAutosaverWorker;\n import net.server.worker.FamilyDailyResetWorker;\n import net.server.worker.FishingWorker;\n@@ -76,30 +96,13 @@\n import net.server.worker.PetFullnessWorker;\n import net.server.worker.ServerMessageWorker;\n import net.server.worker.TimedMapObjectWorker;\n+import net.server.worker.TimeoutWorker;\n import net.server.worker.WeddingReservationWorker;\n-import net.server.PlayerStorage;\n-import net.server.Server;\n-import net.server.audit.LockCollector;\n-import net.server.channel.Channel;\n-import net.server.channel.CharacterIdChannelPair;\n-import net.server.guild.MapleGuild;\n-import net.server.guild.MapleGuildCharacter;\n-import net.server.guild.MapleGuildSummary;\n+import net.server.world.announcer.MapleAnnouncerCoordinator;\n import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n import tools.Pair;\n import tools.packets.Fishing;\n-import net.server.audit.locks.MonitoredLockType;\n-import net.server.audit.locks.MonitoredReentrantLock;\n-import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n-import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n-import net.server.coordinator.MapleInviteCoordinator;\n-import net.server.coordinator.MapleInviteCoordinator.InviteResult;\n-import net.server.coordinator.MapleInviteCoordinator.InviteType;\n-import net.server.coordinator.MapleMatchCheckerCoordinator;\n-import net.server.coordinator.MaplePartySearchCoordinator;\n-import server.maps.MapleMiniDungeon;\n-import server.maps.MapleMiniDungeonInfo;\n \n /**\n  *\n@@ -122,12 +125,14 @@\n     private PlayerStorage players = new PlayerStorage();\n     private MapleMatchCheckerCoordinator matchChecker = new MapleMatchCheckerCoordinator();\n     private MaplePartySearchCoordinator partySearch = new MaplePartySearchCoordinator();\n+    private MapleAnnouncerCoordinator announcer = new MapleAnnouncerCoordinator();\n     \n     private final ReentrantReadWriteLock chnLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.WORLD_CHANNELS, true);\n     private ReadLock chnRLock = chnLock.readLock();\n     private WriteLock chnWLock = chnLock.writeLock();\n     \n     private Map<Integer, SortedMap<Integer, MapleCharacter>> accountChars = new HashMap<>();\n+    private Map<Integer, MapleStorage> accountStorages = new HashMap<>();\n     private MonitoredReentrantLock accountCharsLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.WORLD_CHARS, true);\n     \n     private Set<Integer> queuedGuilds = new HashSet<>();\n@@ -178,6 +183,7 @@\n     private ScheduledFuture<?> mapOwnershipSchedule;\n     private ScheduledFuture<?> fishingSchedule;\n     private ScheduledFuture<?> partySearchSchedule;\n+    private ScheduledFuture<?> timeoutSchedule;\n     \n     public World(int world, int flag, String eventmsg, int exprate, int droprate, int bossdroprate, int mesorate, int questrate, int travelrate, int fishingrate) {\n         this.id = world;\n@@ -211,12 +217,15 @@ public World(int world, int flag, String eventmsg, int exprate, int droprate, in\n         mapOwnershipSchedule = tman.register(new MapOwnershipWorker(this), 20 * 1000, 20 * 1000);\n         fishingSchedule = tman.register(new FishingWorker(this), 10 * 1000, 10 * 1000);\n         partySearchSchedule = tman.register(new PartySearchWorker(this), 10 * 1000, 10 * 1000);\n+        timeoutSchedule = tman.register(new TimeoutWorker(this), 10 * 1000, 10 * 1000);\n         \n         if(ServerConstants.USE_FAMILY_SYSTEM) {\n             long timeLeft = Server.getTimeLeftForNextDay();\n             FamilyDailyResetWorker.resetEntitlementUsage(this);\n             tman.register(new FamilyDailyResetWorker(this), 24 * 60 * 60 * 1000, timeLeft);\n         }\n+        \n+        announcer.init();\n     }\n \n     public int getChannelsSize() {\n@@ -440,6 +449,41 @@ public void unregisterAccountCharacterView(Integer accountId, Integer chrId) {\n         }\n     }\n     \n+    public void clearAccountCharacterView(Integer accountId) {\n+        accountCharsLock.lock();\n+        try {\n+            SortedMap<Integer, MapleCharacter> accChars = accountChars.remove(accountId);\n+            if (accChars != null) {\n+                accChars.clear();\n+            }\n+        } finally {\n+            accountCharsLock.unlock();\n+        }\n+    }\n+    \n+    public void registerAccountStorage(Integer accountId) {\n+        MapleStorage storage = MapleStorage.loadOrCreateFromDB(accountId, this.id);\n+        accountCharsLock.lock();\n+        try {\n+            accountStorages.put(accountId, storage);\n+        } finally {\n+            accountCharsLock.unlock();\n+        }\n+    }\n+    \n+    public void unregisterAccountStorage(Integer accountId) {\n+        accountCharsLock.lock();\n+        try {\n+            accountStorages.remove(accountId);\n+        } finally {\n+            accountCharsLock.unlock();\n+        }\n+    }\n+    \n+    public MapleStorage getAccountStorage(Integer accountId) {\n+        return accountStorages.get(accountId);\n+    }\n+    \n     private static List<Entry<Integer, SortedMap<Integer, MapleCharacter>>> getSortedAccountCharacterView(Map<Integer, SortedMap<Integer, MapleCharacter>> map) {\n         List<Entry<Integer, SortedMap<Integer, MapleCharacter>>> list = new ArrayList<>(map.size());\n         for(Entry<Integer, SortedMap<Integer, MapleCharacter>> e : map.entrySet()) {\n@@ -512,6 +556,10 @@ public MapleMatchCheckerCoordinator getMatchCheckerCoordinator() {\n     public MaplePartySearchCoordinator getPartySearchCoordinator() {\n         return partySearch;\n     }\n+    \n+    public MapleAnnouncerCoordinator getAnnouncerCoordinator() {\n+        return announcer;\n+    }\n \n     public void addPlayer(MapleCharacter chr) {\n         players.addPlayer(chr);\n@@ -909,15 +957,15 @@ private void updateParty(MapleParty party, PartyOperation operation, MaplePartyC\n                     chr.setParty(party);\n                     chr.setMPC(partychar);\n                 }\n-                chr.getClient().announce(MaplePacketCreator.updateParty(chr.getClient().getChannel(), party, operation, target));\n+                chr.announce(MaplePacketCreator.updateParty(chr.getClient().getChannel(), party, operation, target));\n             }\n         }\n         switch (operation) {\n             case LEAVE:\n             case EXPEL:\n                 MapleCharacter chr = getPlayerStorage().getCharacterById(target.getId());\n                 if (chr != null) {\n-                    chr.getClient().announce(MaplePacketCreator.updateParty(chr.getClient().getChannel(), party, operation, target));\n+                    chr.announce(MaplePacketCreator.updateParty(chr.getClient().getChannel(), party, operation, target));\n                     chr.setParty(null);\n                     chr.setMPC(null);\n                 }\n@@ -948,25 +996,25 @@ public void updateParty(int partyid, PartyOperation operation, MaplePartyCharact\n                 break;\n             case CHANGE_LEADER:\n                 MapleCharacter mc = party.getLeader().getPlayer();\n-                MapleCharacter newLeader = target.getPlayer();\n-                \n-                EventInstanceManager eim = mc.getEventInstance();\n-                \n-                if(eim != null && eim.isEventLeader(mc)) {\n-                    eim.changedLeader(newLeader);\n-                } else {\n-                    int oldLeaderMapid = mc.getMapId();\n-                    \n-                    if (MapleMiniDungeonInfo.isDungeonMap(oldLeaderMapid)) {\n-                        if (oldLeaderMapid != newLeader.getMapId()) {\n-                            MapleMiniDungeon mmd = newLeader.getClient().getChannelServer().getMiniDungeon(oldLeaderMapid);\n-                            if(mmd != null) {\n-                                mmd.close();\n+                if (mc != null) {\n+                    EventInstanceManager eim = mc.getEventInstance();\n+\n+                    if(eim != null && eim.isEventLeader(mc)) {\n+                        eim.changedLeader(target);\n+                    } else {\n+                        int oldLeaderMapid = mc.getMapId();\n+\n+                        if (MapleMiniDungeonInfo.isDungeonMap(oldLeaderMapid)) {\n+                            if (oldLeaderMapid != target.getMapId()) {\n+                                MapleMiniDungeon mmd = mc.getClient().getChannelServer().getMiniDungeon(oldLeaderMapid);\n+                                if(mmd != null) {\n+                                    mmd.close();\n+                                }\n                             }\n                         }\n                     }\n+                    party.setLeader(target);\n                 }\n-                party.setLeader(target);\n                 break;\n             default:\n                 System.out.println(\"Unhandled updateParty operation \" + operation.name());\n@@ -2114,9 +2162,15 @@ public final void shutdown() {\n             partySearchSchedule = null;\n         }\n         \n+        if(timeoutSchedule != null) {\n+            timeoutSchedule.cancel(false);\n+            timeoutSchedule = null;\n+        }\n+        \n         players.disconnectAll();\n         players = null;\n         \n+        announcer.shutdown();\n         clearWorldData();\n         System.out.println(\"Finished shutting down world \" + id + \"\\r\\n\");\n     }"}, {"sha": "92cb1d0d009e285ad723154ed822d4c92ee202ee", "filename": "src/net/server/world/announcer/MapleAnnouncerCoordinator.java", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/world/announcer/MapleAnnouncerCoordinator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/world/announcer/MapleAnnouncerCoordinator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/announcer/MapleAnnouncerCoordinator.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -0,0 +1,83 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2019 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.world.announcer;\n+\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import org.apache.mina.core.session.IoSession;\n+import net.server.world.announcer.MapleAnnouncerEntryPool.SessionPacket;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class MapleAnnouncerCoordinator {\n+    \n+    private static final MapleAnnouncerCoordinator instance = new MapleAnnouncerCoordinator();\n+    \n+    public static MapleAnnouncerCoordinator getInstance() {   // world-agnostic Announcer coordinator\n+        return instance;\n+    }\n+    \n+    private MapleAnnouncerEntryPool pool = new MapleAnnouncerEntryPool();\n+    private ConcurrentLinkedQueue<SessionPacket> queue = new ConcurrentLinkedQueue<>();\n+    private Thread t;\n+    \n+    public void append(IoSession io, byte[] packet) {\n+        queue.offer(pool.getSessionPacket(io, packet));\n+    }\n+    \n+    public void init() {\n+        final Runnable r = new Runnable() {\n+            @Override\n+            public void run() {\n+                while (!Thread.interrupted()) {\n+                    try {\n+                        SessionPacket p = queue.poll();\n+                        if (p != null) {\n+                            IoSession session = p.getSession();\n+                            byte[] packet = p.getPacket();\n+\n+                            session.write(packet);\n+                            pool.returnSessionPacket(p);\n+                        }\n+                    } catch (Exception e) {\n+                        e.printStackTrace();\n+                    }\n+                }\n+            }\n+        };\n+        \n+        t = new Thread(r);\n+        t.start();\n+    }\n+    \n+    public void shutdown() {\n+        t.interrupt();\n+        try {\n+            t.join();\n+        } catch (InterruptedException ie) {\n+            ie.printStackTrace();\n+        }\n+        \n+        queue.clear();\n+        pool.shutdown();\n+    }\n+    \n+}"}, {"sha": "81933732238442a30edcfa6c004804c4563481b2", "filename": "src/net/server/world/announcer/MapleAnnouncerEntryPool.java", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/world/announcer/MapleAnnouncerEntryPool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/net/server/world/announcer/MapleAnnouncerEntryPool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/announcer/MapleAnnouncerEntryPool.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -0,0 +1,74 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2019 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.world.announcer;\n+\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import org.apache.mina.core.session.IoSession;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class MapleAnnouncerEntryPool {\n+    \n+    private ConcurrentLinkedQueue<SessionPacket> instancedPairs = new ConcurrentLinkedQueue<>();\n+    private final static int initialCount = 20000;     // initial length of the instanced pool\n+    \n+    public MapleAnnouncerEntryPool() {\n+        for (int i = 0; i < initialCount; i++) {\n+            instancedPairs.offer(new SessionPacket());\n+        }\n+    }\n+    \n+    public class SessionPacket {\n+        \n+        private IoSession session;\n+        private byte[] packet;\n+        \n+        public IoSession getSession() {\n+            return session;\n+        }\n+        \n+        public byte[] getPacket() {\n+            return packet;\n+        }\n+        \n+    }\n+    \n+    public SessionPacket getSessionPacket(IoSession session, byte[] packet) {\n+        SessionPacket sp = instancedPairs.poll();\n+        if (sp == null) {\n+            sp = new SessionPacket();\n+        }\n+        \n+        sp.session = session;\n+        sp.packet = packet;\n+        return sp;\n+    }\n+    \n+    public void returnSessionPacket(SessionPacket sp) {\n+        instancedPairs.offer(sp);\n+    }\n+    \n+    public void shutdown() {\n+        instancedPairs.clear();\n+    }\n+    \n+}"}, {"sha": "6c51a4183dbf762393bebb596fe075ac6f63fcc0", "filename": "src/scripting/AbstractPlayerInteraction.java", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/AbstractPlayerInteraction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/AbstractPlayerInteraction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/AbstractPlayerInteraction.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -139,28 +139,15 @@ public void warpParty(int id, int fromMinId, int fromMaxId) {\n         }\n         \n \tpublic void warpParty(int id, int portalId, int fromMinId, int fromMaxId) {\n-                for (MapleCharacter mc : getPartyMembers()) {\n-                        if(mc.getMapId() >= fromMinId && mc.getMapId() <= fromMaxId) {\n-                                mc.changeMap(id, portalId);\n+                for (MapleCharacter mc : this.getPlayer().getPartyMembersOnline()) {\n+                        if (mc.isLoggedinWorld()) {\n+                                if(mc.getMapId() >= fromMinId && mc.getMapId() <= fromMaxId) {\n+                                        mc.changeMap(id, portalId);\n+                                }\n                         }\n                 }\n \t}\n \n-\tpublic List<MapleCharacter> getPartyMembers() {\n-\t\tif (getPlayer().getParty() == null) {\n-\t\t\treturn null;\n-\t\t}\n-\t\tList<MapleCharacter> chars = new LinkedList<>();\n-\t\tfor (Channel channel : Server.getInstance().getChannelsFromWorld(getPlayer().getWorld())) {\n-\t\t\tfor (MapleCharacter chr : channel.getPartyMembers(getPlayer().getParty())) {\n-\t\t\t\tif (chr != null) {\n-\t\t\t\t\tchars.add(chr);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\treturn chars;\n-\t}\n-\n \tpublic MapleMap getWarpMap(int map) {\n \t\treturn getPlayer().getWarpMap(map);\n \t}\n@@ -804,9 +791,14 @@ public void removePartyItems(int id) {\n \t\t\tremoveAll(id);\n \t\t\treturn;\n \t\t}\n-\t\tfor (MaplePartyCharacter chr : getParty().getMembers()) {\n-\t\t\tif (chr != null && chr.isOnline() && chr.getPlayer().getClient() != null){\n-\t\t\t\tremoveAll(id, chr.getPlayer().getClient());\n+\t\tfor (MaplePartyCharacter mpc : getParty().getMembers()) {\n+                        if (mpc == null || !mpc.isOnline()) {\n+                                continue;\n+                        }\n+                        \n+                        MapleCharacter chr = mpc.getPlayer();\n+\t\t\tif (chr != null && chr.getClient() != null){\n+\t\t\t\tremoveAll(id, chr.getClient());\n \t\t\t}\n \t\t}\n \t}\n@@ -837,9 +829,14 @@ public void givePartyExp(String PQ, boolean instance) {\n \n \t\tif(instance) {\n \t\t\tfor(MaplePartyCharacter member: party.getMembers()) {\n-\t\t\t\tif(member == null || !member.isOnline() || member.getPlayer().getEventInstance() == null){\n+\t\t\t\tif(member == null || !member.isOnline()){\n \t\t\t\t\tsize--;\n-\t\t\t\t}\n+\t\t\t\t} else {\n+                                        MapleCharacter chr = member.getPlayer();\n+                                        if(chr != null && chr.getEventInstance() == null) {\n+                                                size--;\n+                                        }\n+                                }\n \t\t\t}\n \t\t}\n \n@@ -849,6 +846,9 @@ public void givePartyExp(String PQ, boolean instance) {\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\tMapleCharacter player = member.getPlayer();\n+                        if(player == null) {\n+                                continue;\n+                        }\n \t\t\tif(instance && player.getEventInstance() == null){\n \t\t\t\tcontinue; // They aren't in the instance, don't give EXP.\n \t\t\t}"}, {"sha": "a2b2ce6d8e392e9f4512f945a36a3d013d963f9e", "filename": "src/scripting/AbstractScriptManager.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/AbstractScriptManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/AbstractScriptManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/AbstractScriptManager.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -31,7 +31,6 @@\n \n import constants.ServerConstants;\n import jdk.nashorn.api.scripting.NashornScriptEngine;\n-import jdk.nashorn.api.scripting.NashornScriptEngineFactory;\n import tools.FilePrinter;\n \n /**"}, {"sha": "109c4f4b40d07a3392ba9bbf07344a17823ce8c2", "filename": "src/scripting/event/EventInstanceManager.java", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/event/EventInstanceManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/event/EventInstanceManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/event/EventInstanceManager.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -21,7 +21,6 @@\n  */\n package scripting.event;\n \n-import tools.Pair;\n import java.util.ArrayList;\n import java.util.LinkedList;\n import java.util.List;\n@@ -39,7 +38,7 @@\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n import net.server.world.MapleParty;\n import net.server.world.MaplePartyCharacter;\n-import server.MaplePortal;\n+import server.maps.MaplePortal;\n import server.TimerManager;\n import server.MapleStatEffect;\n import server.expeditions.MapleExpedition;\n@@ -67,6 +66,7 @@\n import server.life.MapleLifeFactory;\n import server.life.MapleNPC;\n import tools.MaplePacketCreator;\n+import tools.Pair;\n \n /**\n  *\n@@ -366,9 +366,13 @@ public void registerParty(MapleCharacter chr) {\n         }\n         \n \tpublic void registerParty(MapleParty party, MapleMap map) {\n-\t\tfor (MaplePartyCharacter pc : party.getEligibleMembers()) {\n-\t\t\tMapleCharacter c = map.getCharacterById(pc.getId());\n-\t\t\tregisterPlayer(c);\n+\t\tfor (MaplePartyCharacter mpc : party.getEligibleMembers()) {\n+                        if (mpc.isOnline()) {   // thanks resinate\n+                                MapleCharacter chr = map.getCharacterById(mpc.getId());\n+                                if (chr != null) {\n+                                        registerPlayer(chr);\n+                                }\n+                        }\n \t\t}\n \t}\n \n@@ -468,7 +472,7 @@ public void afterChangedMap(final MapleCharacter chr, final int mapId) {\n                 } catch (ScriptException | NoSuchMethodException ex) {} // optional\n \t}\n         \n-        public synchronized void changedLeader(final MapleCharacter ldr) {\n+        public synchronized void changedLeader(final MaplePartyCharacter ldr) {\n                 try {\n                         invokeScriptFunction(\"changedLeader\", EventInstanceManager.this, ldr);\n                 } catch (ScriptException | NoSuchMethodException ex) {"}, {"sha": "bee4ba6e5232f39010db7809ca2383de8b0e1d3d", "filename": "src/scripting/event/EventManager.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/event/EventManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/event/EventManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/event/EventManager.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -759,7 +759,7 @@ public boolean startInstance(int lobbyId, EventInstanceManager eim, String ldr,\n             return(new ArrayList<>());\n         }\n         try {\n-            Object p = iv.invokeFunction(\"getEligibleParty\", party.getPartyMembers());\n+            Object p = iv.invokeFunction(\"getEligibleParty\", party.getPartyMembersOnline());\n             \n             if(p != null) {\n                 List<MaplePartyCharacter> lmpc;"}, {"sha": "c659335e009d58cb7278aa7b3f357d86c26d7b81", "filename": "src/scripting/npc/NPCConversationManager.java", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/npc/NPCConversationManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/npc/NPCConversationManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/npc/NPCConversationManager.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -684,8 +684,7 @@ public void cpqLobby(int field) {\n                 map = cs.getMapFactory().getMap(980000100 + 100 * field);\n                 mapExit = cs.getMapFactory().getMap(980000000);\n                 for (MaplePartyCharacter mpc : c.getPlayer().getParty().getMembers()) {\n-                    final MapleCharacter mc;\n-                    mc = ps.getCharacterById(mpc.getId());\n+                    final MapleCharacter mc = ps.getCharacterById(mpc.getId());\n                     if (mc != null) {\n                         mc.setChallenged(false);\n                         mc.changeMap(map, map.getPortal(0));\n@@ -780,11 +779,15 @@ public void run() {\n                             PlayerStorage ps = c.getChannelServer().getPlayerStorage();\n                             for (MaplePartyCharacter mpc : getPlayer().getParty().getMembers()) {\n                                 MapleCharacter mc = ps.getCharacterById(mpc.getId());\n-                                mc.setMonsterCarnival(null);\n+                                if (mc != null) {\n+                                    mc.setMonsterCarnival(null);\n+                                }\n                             }\n                             for (MaplePartyCharacter mpc : challenger.getParty().getMembers()) {\n                                 MapleCharacter mc = ps.getCharacterById(mpc.getId());\n-                                mc.setMonsterCarnival(null);\n+                                if (mc != null) {\n+                                    mc.setMonsterCarnival(null);\n+                                }\n                             }\n                         } catch (NullPointerException npe) {\n                             warpoutCPQLobby(lobbyMap);\n@@ -826,11 +829,15 @@ public void run() {\n                             PlayerStorage ps = c.getChannelServer().getPlayerStorage();\n                             for (MaplePartyCharacter mpc : getPlayer().getParty().getMembers()) {\n                                 MapleCharacter mc = ps.getCharacterById(mpc.getId());\n-                                mc.setMonsterCarnival(null);\n+                                if (mc != null) {\n+                                    mc.setMonsterCarnival(null);\n+                                }\n                             }\n                             for (MaplePartyCharacter mpc : challenger.getParty().getMembers()) {\n                                 MapleCharacter mc = ps.getCharacterById(mpc.getId());\n-                                mc.setMonsterCarnival(null);\n+                                if (mc != null) {\n+                                    mc.setMonsterCarnival(null);\n+                                }\n                             }\n                         } catch (NullPointerException npe) {\n                             warpoutCPQLobby(lobbyMap);\n@@ -905,8 +912,7 @@ public void cpqLobby2(int field) {\n                 mapExit = cs.getMapFactory().getMap(980030000);\n                 map = cs.getMapFactory().getMap(980031000 + 1000 * field);\n                 for (MaplePartyCharacter mpc : c.getPlayer().getParty().getMembers()) {\n-                    final MapleCharacter mc;\n-                    mc = ps.getCharacterById(mpc.getId());\n+                    final MapleCharacter mc = ps.getCharacterById(mpc.getId());\n                     if (mc != null) {\n                         mc.setChallenged(false);\n                         mc.changeMap(map, map.getPortal(0));"}, {"sha": "e878d2082204f410938b4fdcefff41e1461aba36", "filename": "src/scripting/portal/PortalPlayerInteraction.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/portal/PortalPlayerInteraction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/portal/PortalPlayerInteraction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/portal/PortalPlayerInteraction.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -27,7 +27,7 @@\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import scripting.AbstractPlayerInteraction;\n-import server.MaplePortal;\n+import server.maps.MaplePortal;\n import server.quest.MapleQuest;\n import tools.DatabaseConnection;\n import tools.MaplePacketCreator;"}, {"sha": "137291e6e27091d9216f87efa3fe0762b0e51d58", "filename": "src/scripting/portal/PortalScriptManager.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/portal/PortalScriptManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/scripting/portal/PortalScriptManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/portal/PortalScriptManager.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -35,7 +35,7 @@\n import javax.script.ScriptEngineFactory;\n import javax.script.ScriptEngineManager;\n import javax.script.ScriptException;\n-import server.MaplePortal;\n+import server.maps.MaplePortal;\n import tools.FilePrinter;\n \n public class PortalScriptManager {"}, {"sha": "19cf04b4cabb07ee0c6f09e8ff9da8a92a8bf204", "filename": "src/server/MapleStatEffect.java", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/MapleStatEffect.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/MapleStatEffect.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleStatEffect.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -21,7 +21,6 @@\n  */\n package server;\n \n-import client.inventory.manipulator.MapleInventoryManipulator;\n import java.awt.Point;\n import java.awt.Rectangle;\n import java.util.ArrayList;\n@@ -40,6 +39,7 @@\n import server.maps.MapleMapObject;\n import server.maps.MapleMapObjectType;\n import server.maps.MapleMist;\n+import server.maps.MaplePortal;\n import server.maps.MapleSummon;\n import server.maps.SummonMovementType;\n import tools.ArrayMap;\n@@ -55,6 +55,7 @@\n import client.inventory.Item;\n import client.inventory.MapleInventory;\n import client.inventory.MapleInventoryType;\n+import client.inventory.manipulator.MapleInventoryManipulator;\n import client.status.MonsterStatus;\n import client.status.MonsterStatusEffect;\n import constants.ItemConstants;\n@@ -1004,21 +1005,26 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n             }\n         }\n         if (isShadowClaw()) {\n-            int projectile = 0;\n             MapleInventory use = applyto.getInventory(MapleInventoryType.USE);\n-            for (int i = 1; i <= use.getSlotLimit(); i++) { // impose order...\n-                Item item = use.getItem((short) i);\n-                if (item != null) {\n-                    if (ItemConstants.isThrowingStar(item.getItemId()) && item.getQuantity() >= 200) {\n-                        projectile = item.getItemId();\n-                        break;\n+            use.lockInventory();\n+            try {\n+                Item projectile = null;\n+                for (int i = 1; i <= use.getSlotLimit(); i++) { // impose order...\n+                    Item item = use.getItem((short) i);\n+                    if (item != null) {\n+                        if (ItemConstants.isThrowingStar(item.getItemId()) && item.getQuantity() >= 200) {\n+                            projectile = item;\n+                            break;\n+                        }\n                     }\n                 }\n-            }\n-            if (projectile == 0) {\n-                return false;\n-            } else {\n-                MapleInventoryManipulator.removeById(applyto.getClient(), MapleInventoryType.USE, projectile, 200, false, true);\n+                if (projectile == null) {\n+                    return false;\n+                } else {\n+                    MapleInventoryManipulator.removeFromSlot(applyto.getClient(), MapleInventoryType.USE, projectile.getPosition(), (short) 200, false, true);\n+                }\n+            } finally {\n+                use.unlockInventory();\n             }\n         }\n         SummonMovementType summonMovementType = getSummonMovementType();\n@@ -1125,8 +1131,11 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n         } else if (cureDebuffs.size() > 0) { // by Drago-Dragohe4rt\n             for (final MapleDisease debuff : cureDebuffs) {\n                 if (applyfrom.getParty() != null) {\n-                    for (MaplePartyCharacter chrs : applyfrom.getParty().getPartyMembers()) {\n-                        chrs.getPlayer().dispelDebuff(debuff);\n+                    for (MaplePartyCharacter mpc : applyfrom.getParty().getPartyMembers()) {\n+                        MapleCharacter chr = mpc.getPlayer();\n+                        if (chr != null) {\n+                            chr.dispelDebuff(debuff);\n+                        }\n                     }\n                 } else {\n                     applyfrom.dispelDebuff(debuff);"}, {"sha": "b8efcadb5d36b674515de3878f45b58ce7a1d0fd", "filename": "src/server/MapleStorage.java", "status": "modified", "additions": 31, "deletions": 22, "changes": 53, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/MapleStorage.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/MapleStorage.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleStorage.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -58,13 +58,12 @@\n     private int meso;\n     private byte slots;\n     private Map<MapleInventoryType, List<Item>> typeItems = new HashMap<>();\n-    private List<Item> items;\n+    private List<Item> items = new LinkedList<>();\n     private Lock lock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.STORAGE, true);\n \n     private MapleStorage(int id, byte slots, int meso) {\n         this.id = id;\n         this.slots = slots;\n-        this.items = new LinkedList<>();\n         this.meso = meso;\n     }\n \n@@ -119,15 +118,20 @@ public byte getSlots() {\n         return slots;\n     }\n \n-    public synchronized boolean gainSlots(int slots) {\n-        slots += this.slots;\n+    public boolean gainSlots(int slots) {\n+        lock.lock();\n+        try {\n+            slots += this.slots;\n+            \n+            if (slots <= 48) {\n+                this.slots = (byte) slots;\n+                return true;\n+            }\n \n-        if (slots <= 48) {\n-            this.slots = (byte) slots;\n-            return true;\n+            return false;\n+        } finally {\n+            lock.unlock();\n         }\n-\n-        return false;\n     }\n     \n     public void saveToDB(Connection con) {\n@@ -160,29 +164,33 @@ public Item getItem(byte slot) {\n         }\n     }\n \n-    public Item takeOut(byte slot) {\n-        Item ret;\n-        \n+    public boolean takeOut(Item item) {\n         lock.lock();\n         try {\n-            ret = items.remove(slot);\n+            boolean ret = items.remove(item);\n             \n-            MapleInventoryType type = ret.getInventoryType();\n+            MapleInventoryType type = item.getInventoryType();\n             typeItems.put(type, new ArrayList<>(filterItems(type)));\n+            \n+            return ret;\n         } finally {\n             lock.unlock();\n         }\n-        \n-        return ret;\n     }\n \n-    public void store(Item item) {\n+    public boolean store(Item item) {\n         lock.lock();\n         try {\n+            if (isFull()) { // thanks Optimist for noticing unrestricted amount of insertions here\n+                return false;\n+            }\n+            \n             items.add(item);\n             \n             MapleInventoryType type = item.getInventoryType();\n             typeItems.put(type, new ArrayList<>(filterItems(type)));\n+            \n+            return true;\n         } finally {\n             lock.unlock();\n         }\n@@ -196,7 +204,7 @@ public void store(Item item) {\n             lock.unlock();\n         }\n     }\n-\n+    \n     private List<Item> filterItems(MapleInventoryType type) {\n         List<Item> storageItems = getItems();\n         List<Item> ret = new LinkedList<>();\n@@ -208,7 +216,7 @@ public void store(Item item) {\n         }\n         return ret;\n     }\n-\n+    \n     public byte getSlot(MapleInventoryType type, byte slot) {\n         lock.lock();\n         try {\n@@ -225,7 +233,7 @@ public byte getSlot(MapleInventoryType type, byte slot) {\n             lock.unlock();\n         }\n     }\n-\n+    \n     public void sendStorage(MapleClient c, int npcId) {\n         if (c.getPlayer().getLevel() < 15){\n             c.getPlayer().dropMessage(1, \"You may only use the storage once you have reached level 15.\");\n@@ -287,7 +295,7 @@ public void arrangeItems(MapleClient c) {\n             for (MapleInventoryType type : MapleInventoryType.values()) {\n                 typeItems.put(type, new ArrayList<>(items));\n             }\n-\n+            \n             c.announce(MaplePacketCreator.arrangeStorage(slots, items));\n         } finally {\n             lock.unlock();\n@@ -353,7 +361,7 @@ public boolean isFull() {\n             lock.unlock();\n         }\n     }\n-\n+    \n     public void close() {\n         lock.lock();\n         try {\n@@ -362,4 +370,5 @@ public void close() {\n             lock.unlock();\n         }\n     }\n+    \n }\n\\ No newline at end of file"}, {"sha": "48a456334222c2b11d2a52e282349ad975194796", "filename": "src/server/life/MapleMonster.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/life/MapleMonster.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/life/MapleMonster.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleMonster.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -703,7 +703,7 @@ private static int expValueToInteger(double exp) {\n             exp = Integer.MIN_VALUE;\n         }\n         \n-        return (int) exp;\n+        return (int) Math.round(exp);    // operations on float point are not point-precise... thanks IxianMace for noticing -1 EXP gains\n     }\n     \n     private void giveExpToCharacter(MapleCharacter attacker, Float personalExp, Float partyExp, boolean white, boolean hasPartySharers) {"}, {"sha": "db3c18ffcd57a0f4bc765e45259a663d60a3e4b6", "filename": "src/server/life/MobSkill.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/life/MobSkill.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/life/MobSkill.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MobSkill.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -331,7 +331,7 @@ public void applyEffect(MapleCharacter player, MapleMonster monster, boolean ski\n             if (lt != null && rb != null && skill) {\n                 int i = 0;\n                 for (MapleCharacter character : getPlayersInRange(monster, player)) {\n-                    if (!character.isActiveBuffedValue(2321005)) {  // holy shield\n+                    if (!character.hasActiveBuff(2321005)) {  // holy shield\n                         if (disease.equals(MapleDisease.SEDUCE)) {\n                             if (i < 10) {\n                                 character.giveDebuff(MapleDisease.SEDUCE, this);"}, {"sha": "0243aa5784225c401d60854c171ee0dc410f46a6", "filename": "src/server/maps/MapMonitor.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapMonitor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapMonitor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapMonitor.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -22,7 +22,6 @@\n package server.maps;\n \n import java.util.concurrent.ScheduledFuture;\n-import server.MaplePortal;\n import server.TimerManager;\n \n public class MapMonitor {"}, {"sha": "19533145cee175ebfa930da1924b0a218c5e984e", "filename": "src/server/maps/MapleDoor.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapleDoor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapleDoor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleDoor.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -25,7 +25,6 @@\n import java.util.Collection;\n import tools.Pair;\n \n-import server.MaplePortal;\n import client.MapleCharacter;\n import constants.ServerConstants;\n "}, {"sha": "cd0d6856a33728814ef432b7bae490d33aa29689", "filename": "src/server/maps/MapleGenericPortal.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapleGenericPortal.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapleGenericPortal.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleGenericPortal.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -26,7 +26,6 @@\n import constants.GameConstants;\n import java.awt.Point;\n import scripting.portal.PortalScriptManager;\n-import server.MaplePortal;\n import tools.MaplePacketCreator;\n import net.server.audit.locks.MonitoredLockType;\n import net.server.audit.locks.MonitoredReentrantLock;"}, {"sha": "d8bdb16aec0a0d217e691a5a9749735229937668", "filename": "src/server/maps/MapleMap.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapleMap.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapleMap.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMap.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -68,7 +68,6 @@\n import net.server.world.World;\n import scripting.map.MapScriptManager;\n import server.MapleItemInformationProvider;\n-import server.MaplePortal;\n import server.MapleStatEffect;\n import server.TimerManager;\n import server.events.gm.MapleCoconut;"}, {"sha": "55b3f2ba717aedfa225ebc3760f7cf10144cd00a", "filename": "src/server/maps/MapleMapFactory.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapleMapFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapleMapFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMapFactory.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -35,7 +35,6 @@\n import provider.MapleDataProvider;\n import provider.MapleDataProviderFactory;\n import provider.MapleDataTool;\n-import server.PortalFactory;\n import server.life.AbstractLoadedMapleLife;\n import server.life.MapleLifeFactory;\n import server.life.MapleMonster;\n@@ -163,7 +162,7 @@ public static MapleMap loadMapFromWz(int mapid, int world, int channel, EventIns\n \n         map.setFieldLimit(MapleDataTool.getInt(infoData.getChildByPath(\"fieldLimit\"), 0));\n         map.setMobInterval((short) MapleDataTool.getInt(infoData.getChildByPath(\"createMobInterval\"), 5000));\n-        PortalFactory portalFactory = new PortalFactory();\n+        MaplePortalFactory portalFactory = new MaplePortalFactory();\n         for (MapleData portal : mapData.getChildByPath(\"portal\")) {\n             map.addPortal(portalFactory.makePortal(MapleDataTool.getInt(portal.getChildByPath(\"pt\")), portal));\n         }"}, {"sha": "b06f99b4896187cea355de6871b2bc2b94813abf", "filename": "src/server/maps/MapleMapPortal.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapleMapPortal.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MapleMapPortal.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMapPortal.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -21,8 +21,6 @@\n */\n package server.maps;\n \n-import server.MaplePortal;\n-\n public class MapleMapPortal extends MapleGenericPortal {\n     public MapleMapPortal() {\n         super(MaplePortal.MAP_PORTAL);"}, {"sha": "1cc9af4e41dd8e9b19183e3f30336a6994cd25f0", "filename": "src/server/maps/MaplePortal.java", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MaplePortal.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MaplePortal.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MaplePortal.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -19,7 +19,7 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package server;\n+package server.maps;\n \n import java.awt.Point;\n import client.MapleClient;", "previous_filename": "src/server/MaplePortal.java"}, {"sha": "816a1f09a33a3453168abd4edd65b014a381fc43", "filename": "src/server/maps/MaplePortalFactory.java", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MaplePortalFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/maps/MaplePortalFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MaplePortalFactory.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -19,7 +19,7 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package server;\n+package server.maps;\n \n import java.awt.Point;\n \n@@ -28,10 +28,10 @@\n import server.maps.MapleGenericPortal;\n import server.maps.MapleMapPortal;\n \n-public class PortalFactory {\n+public class MaplePortalFactory {\n     private int nextDoorPortal;\n \n-    public PortalFactory() {\n+    public MaplePortalFactory() {\n         nextDoorPortal = 0x80;\n     }\n ", "previous_filename": "src/server/PortalFactory.java"}, {"sha": "b86a3632c5ae51cf448040f17d19e5ff5ab059fa", "filename": "src/server/partyquest/MonsterCarnival.java", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/partyquest/MonsterCarnival.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/server/partyquest/MonsterCarnival.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/partyquest/MonsterCarnival.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -28,7 +28,7 @@\n     private ScheduledFuture<?> timer, effectTimer, respawnTask;\n     private long startTime = 0;\n     private int summonsR = 0, summonsB = 0, room = 0;\n-    private MapleCharacter leader1, leader2, Grupo1, Grupo2;\n+    private MapleCharacter leader1, leader2, team1, team2;\n     private int redCP, blueCP, redTotalCP, blueTotalCP, redTimeupCP, blueTimeupCP;\n     private boolean cpq1;\n \n@@ -60,7 +60,7 @@ public MonsterCarnival(MapleParty p1, MapleParty p2, int mapid, boolean cpq1, in\n                     if (p1.getLeader().getId() == mc.getId()) {\n                         leader1 = mc;\n                     }\n-                    Grupo1 = mc;\n+                    team1 = mc;\n                 }\n             }\n             for (MaplePartyCharacter mpc : p2.getMembers()) {\n@@ -74,15 +74,21 @@ public MonsterCarnival(MapleParty p1, MapleParty p2, int mapid, boolean cpq1, in\n                     if (p2.getLeader().getId() == mc.getId()) {\n                         leader2 = mc;\n                     }\n-                    Grupo2 = mc;\n+                    team2 = mc;\n                 }\n             }\n-            if (Grupo1 == null || Grupo2 == null) {\n-                for (MaplePartyCharacter mpc : p2.getMembers()) {\n-                    mpc.getPlayer().dropMessage(5, LanguageConstants.getMessage(mpc.getPlayer(), LanguageConstants.CPQError));\n+            if (team1 == null || team2 == null) {\n+                for (MaplePartyCharacter mpc : p1.getMembers()) {\n+                    MapleCharacter chr = mpc.getPlayer();\n+                    if (chr != null) {\n+                        chr.dropMessage(5, LanguageConstants.getMessage(chr, LanguageConstants.CPQError));\n+                    }\n                 }\n                 for (MaplePartyCharacter mpc : p2.getMembers()) {\n-                    mpc.getPlayer().dropMessage(5, LanguageConstants.getMessage(mpc.getPlayer(), LanguageConstants.CPQError));\n+                    MapleCharacter chr = mpc.getPlayer();\n+                    if (chr != null) {\n+                        chr.dropMessage(5, LanguageConstants.getMessage(chr, LanguageConstants.CPQError));\n+                    }\n                 }\n                 return;\n             }"}, {"sha": "6d18b80eaaf171d9b8d5d6302829796d80f08647", "filename": "src/tools/FilePrinter.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/tools/FilePrinter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/tools/FilePrinter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/FilePrinter.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -50,6 +50,7 @@\n             DELETED_CHAR = \"players/deletedchars/\",\n             UNHANDLED_EVENT = \"game/DoesNotExist.txt\",\n             SESSION = \"players/Sessions.txt\",\n+            DCS = \"game/disconnections/\",\n             EXPLOITS = \"game/exploits/\",\n             STORAGE = \"game/storage/\",\n             PACKET_LOGS = \"game/packetlogs/\","}, {"sha": "6aefe95607861b08b7d3b5381a045ae259184d04", "filename": "src/tools/MaplePacketCreator.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/tools/MaplePacketCreator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/src/tools/MaplePacketCreator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MaplePacketCreator.java?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -702,7 +702,8 @@ private static void addMonsterBookInfo(final MaplePacketLittleEndianWriter mplew\n          */\n         public static byte[] getAuthSuccess(MapleClient c) {\n                 Server.getInstance().loadAccountCharacters(c);    // locks the login session until data is recovered from the cache or the DB.\n-            \n+                Server.getInstance().loadAccountStorages(c);\n+                \n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.LOGIN_STATUS.getValue());\n                 mplew.writeInt(0);\n@@ -8216,7 +8217,7 @@ public static void addCashItemInformation(final MaplePacketLittleEndianWriter mp\n                 mplew.writeInt(exp);\n                 return mplew.getPacket();\n         }\n-\n+        \n         public static byte[] spawnDragon(MapleDragon dragon) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();\n                 mplew.writeShort(SendOpcode.SPAWN_DRAGON.getValue());"}, {"sha": "4fe628a422995153fea18fcd5df983d005213cb1", "filename": "wz/Quest.wz/Check.img.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/wz/Quest.wz/Check.img.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/efbce82a8b415d7ad7dde16aa8c540ae2a9a9973/wz/Quest.wz/Check.img.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/wz/Quest.wz/Check.img.xml?ref=efbce82a8b415d7ad7dde16aa8c540ae2a9a9973", "patch": "@@ -24238,7 +24238,7 @@\n       <int name=\"npc\" value=\"1061014\"/>\n       <imgdir name=\"mob\">\n         <imgdir name=\"0\">\n-          <int name=\"id\" value=\"9101003\"/>\n+          <int name=\"id\" value=\"8830003\"/>\n           <int name=\"count\" value=\"1\"/>\n         </imgdir>\n       </imgdir>"}]}]},
