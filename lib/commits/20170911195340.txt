{"fetchDate": "2019-12-19", "content": [{"sha": "f387d589b2536295187bf40524a383f3d167d01f", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6ZjM4N2Q1ODliMjUzNjI5NTE4N2JmNDA1MjRhMzgzZjNkMTY3ZDAxZg==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-09-11T19:53:40Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-09-11T19:53:40Z"}, "message": "Autosave feature + Pet Ignore fix\n\nAdded experimental autosaver feature. Fixed pet ignore feature not\nsaving/loading data in some cases. Added concurrency protection for\ninventory classes and monster book.", "tree": {"sha": "6411cbe6dd2cadca5f1d2c950bc01e4edbf8b8ec", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/6411cbe6dd2cadca5f1d2c950bc01e4edbf8b8ec"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/f387d589b2536295187bf40524a383f3d167d01f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/f387d589b2536295187bf40524a383f3d167d01f", "html_url": "https://github.com/ronancpl/HeavenMS/commit/f387d589b2536295187bf40524a383f3d167d01f", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/f387d589b2536295187bf40524a383f3d167d01f/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e064d5cbfa27c7f61090574c139a258c857a4d2c", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/e064d5cbfa27c7f61090574c139a258c857a4d2c", "html_url": "https://github.com/ronancpl/HeavenMS/commit/e064d5cbfa27c7f61090574c139a258c857a4d2c"}], "stats": {"total": 810, "additions": 565, "deletions": 245}, "files": [{"sha": "52bb8b603b3ad4664cc81ee8123052d465060ee3", "filename": "build/built-jar.properties", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/built-jar.properties", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/built-jar.properties", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/built-jar.properties?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -1,4 +1,4 @@\n-#Thu, 07 Sep 2017 21:09:39 -0300\n+#Mon, 11 Sep 2017 16:18:43 -0300\n \n \n C\\:\\\\Nexon\\\\MapleSolaxia\\\\MapleSolaxiaV2="}, {"sha": "6288a5b682e51c64db309bc7ca719424e04614c2", "filename": "build/classes/client/MapleCharacter$10.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$10.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$10.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$10.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "896d1852e9a69a7f64a3c6e59f315fd9ea8c0d9e", "filename": "build/classes/client/MapleCharacter$11.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$11.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$11.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$11.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "db65bed4c28fc43cd2e94fb1c678f2861184e1d5", "filename": "build/classes/client/MapleCharacter$12.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$12.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$12.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$12.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "28a9df55d0147f822d3dfc12d0dd29f2ed00a999", "filename": "build/classes/client/MapleCharacter$13.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$13.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$13.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$13.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "8320c4ad1a1670f84b37ef99387e8df2f6954beb", "filename": "build/classes/client/MapleCharacter$14.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$14.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$14.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$14.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "64490039ff2c5113e3b4f58e651ef0e1e0454072", "filename": "build/classes/client/MapleCharacter$15.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$15.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$15.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$15.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "8e2dcbf52a72b5ace298f2f2425d79f131e114de", "filename": "build/classes/client/MapleCharacter$16.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$16.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$16.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$16.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "cfd2a3d718d405108c2855945452b10064ee2ce0", "filename": "build/classes/client/MapleCharacter$17.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$17.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$17.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$17.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "d6a712f72282f4fd7569ac92f16977ba3f77e5f3", "filename": "build/classes/client/MapleCharacter$18.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$18.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$18.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$18.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "bf52bb64a27224fa19e913a8cb6f9ce970e62242", "filename": "build/classes/client/MapleCharacter$19.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$19.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$19.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$19.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "fb19c8094993b075abd7c8a07951327a10ea59ae", "filename": "build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "11fdd7ac6d116f23931dc452efc924feadabd9b8", "filename": "build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "51d48dc42c86114008c98c71f313bb5e064cb4a3", "filename": "build/classes/client/MapleCharacter$SkillEntry.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$SkillEntry.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter$SkillEntry.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter$SkillEntry.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "76aa3a3bcb32183aa04af1e810d856818bbc7665", "filename": "build/classes/client/MapleCharacter.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MapleCharacter.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MapleCharacter.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "27da2f731d21284c33e273e9d39b9a244ca7d952", "filename": "build/classes/client/MonsterBook.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MonsterBook.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/MonsterBook.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/MonsterBook.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "f947434d165e4ed9e44bae2341c05f3989477c7a", "filename": "build/classes/client/inventory/ItemFactory.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/inventory/ItemFactory.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/inventory/ItemFactory.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/inventory/ItemFactory.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "5298513a865aceee163f56356483d6a88d5b1df0", "filename": "build/classes/client/inventory/MapleInventory.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/inventory/MapleInventory.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/client/inventory/MapleInventory.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/client/inventory/MapleInventory.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "2a82ec33ac2a1df814c6221f4e588a7ab6de4608", "filename": "build/classes/constants/ServerConstants.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/constants/ServerConstants.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/constants/ServerConstants.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/constants/ServerConstants.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "32b70e1dbeb9bb91b3291d7dcba2e9dc26501049", "filename": "build/classes/net/server/channel/handlers/EnterMTSHandler.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/net/server/channel/handlers/EnterMTSHandler.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/net/server/channel/handlers/EnterMTSHandler.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/channel/handlers/EnterMTSHandler.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "1b9ef92edccc95009a001abaa08858657b80b8a0", "filename": "build/classes/net/server/channel/handlers/SpawnPetHandler.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/net/server/channel/handlers/SpawnPetHandler.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/net/server/channel/handlers/SpawnPetHandler.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/channel/handlers/SpawnPetHandler.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "178a4b554d1c3e165419cf27089e464a7be27579", "filename": "build/classes/net/server/world/World$1.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/net/server/world/World$1.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/net/server/world/World$1.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/world/World$1.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "3909cebb55d00fee296fb3fb513cc71ca16256ff", "filename": "build/classes/net/server/world/World.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/net/server/world/World.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/net/server/world/World.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/net/server/world/World.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "f1ff95903e05eabadb6a079ec1ca64dc6ae06f11", "filename": "build/classes/server/CashShop$CashItem.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/CashShop$CashItem.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/CashShop$CashItem.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/CashShop$CashItem.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "e2e82156e5a7bf84e7702c9e0a4bc45c77457041", "filename": "build/classes/server/CashShop$CashItemFactory.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/CashShop$CashItemFactory.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/CashShop$CashItemFactory.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/CashShop$CashItemFactory.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "90d36697ddf97e900b7a55a4b9c0074f67d196ca", "filename": "build/classes/server/CashShop$SpecialCashItem.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/CashShop$SpecialCashItem.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/CashShop$SpecialCashItem.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/CashShop$SpecialCashItem.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "42512e048509c1ba483e0a66f3748544c72a6715", "filename": "build/classes/server/CashShop.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/CashShop.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/CashShop.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/CashShop.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "56577554eb1d09ec8d0bfc1525d5a8fe43d2e103", "filename": "build/classes/server/MapleStorage$1.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/MapleStorage$1.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/MapleStorage$1.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/MapleStorage$1.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "09d3bad26d90ea7d70c773ed377318bb00d5f040", "filename": "build/classes/server/MapleStorage.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/MapleStorage.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/MapleStorage.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/MapleStorage.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "367e926624453211e3f08ee3137e4785f5bfa8ce", "filename": "build/classes/server/life/MapleLifeFactory$BanishInfo.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/life/MapleLifeFactory$BanishInfo.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/life/MapleLifeFactory$BanishInfo.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleLifeFactory$BanishInfo.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "ebd1e0ee53d64b409247ccd6cc3eb02a3c6da1c5", "filename": "build/classes/server/life/MapleLifeFactory$loseItem.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/life/MapleLifeFactory$loseItem.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/life/MapleLifeFactory$loseItem.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleLifeFactory$loseItem.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "c89f4cb11a010b55da2f02d89a5df4a035c9e68f", "filename": "build/classes/server/life/MapleLifeFactory$selfDestruction.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/life/MapleLifeFactory$selfDestruction.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/life/MapleLifeFactory$selfDestruction.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleLifeFactory$selfDestruction.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "44140cac11dcd5c4725623e7999a55e518ae5a55", "filename": "build/classes/server/life/MapleLifeFactory.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/life/MapleLifeFactory.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/life/MapleLifeFactory.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/life/MapleLifeFactory.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "54c6b72b039f65319d5907d558c6b6a4f1488045", "filename": "build/classes/server/maps/MapleMap.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/maps/MapleMap.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/server/maps/MapleMap.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/server/maps/MapleMap.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "54a30c3c801a74cc53f276df36bb9a31fa49a90a", "filename": "build/classes/tools/FilePrinter.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/build/classes/tools/FilePrinter.class", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/build/classes/tools/FilePrinter.class", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/build/classes/tools/FilePrinter.class?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "0bf1e8f864e2a8fc15ffa6b603fdbb84855d39e2", "filename": "dist/MapleSolaxia.jar", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/dist/MapleSolaxia.jar", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/dist/MapleSolaxia.jar", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/dist/MapleSolaxia.jar?ref=f387d589b2536295187bf40524a383f3d167d01f"}, {"sha": "0e02a283f9be0fcd1b4bda644d965d9a1fabe8dd", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -520,4 +520,11 @@ Corrigido itens saindo para fora do mapa. Nova posi\n \n 07 Setembro 2017,\n Adicionado Vega's Spell.\n-3rd job event agora possui tempo-limite e verifica se h\ufffd jogadores j\ufffd enfrentando o desafio.\n\\ No newline at end of file\n+3rd job event agora possui tempo-limite e verifica se h\ufffd jogadores j\ufffd enfrentando o desafio.\n+\n+10 Setembro 2017,\n+Protegido contra acesso concorrente classes MonsterBook e MapleInventory.\n+Nova feature: autosaver.\n+\n+11 Setembro 2017,\n+Consertado pet ignore n\ufffdo recuperando dados dos pets em alguns casos.\n\\ No newline at end of file"}, {"sha": "3684d06bb34e58ccd0e168058b8e30cbe1f00e9d", "filename": "nbproject/private/private.xml", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/nbproject/private/private.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/nbproject/private/private.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/nbproject/private/private.xml?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -2,6 +2,29 @@\n <project-private xmlns=\"http://www.netbeans.org/ns/project-private/1\">\n     <editor-bookmarks xmlns=\"http://www.netbeans.org/ns/editor-bookmarks/2\" lastBookmarkId=\"1\"/>\n     <open-files xmlns=\"http://www.netbeans.org/ns/projectui-open-files/2\">\n-        <group/>\n+        <group>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/client/inventory/MaplePet.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/channel/handlers/EnterMTSHandler.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/channel/handlers/PlayerLoggedinHandler.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/client/MonsterBook.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/constants/ItemConstants.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/server/MapleStorage.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/world/World.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/constants/ServerConstants.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/server/MapleItemInformationProvider.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/client/inventory/MapleInventory.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/tools/MaplePacketCreator.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/channel/handlers/PetExcludeItemsHandler.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/client/inventory/ItemFactory.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/tools/FilePrinter.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/PlayerStorage.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/Server.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/CouponWorker.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/server/MapleInventoryManipulator.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/client/MapleCharacter.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/CharacterAutosaverWorker.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/server/CashShop.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/scripting/event/EventManager.java</file>\n+        </group>\n     </open-files>\n </project-private>"}, {"sha": "1e9d00de6467833efac1bfcb66128d308170913c", "filename": "scripts/npc/2091005.js", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/scripts/npc/2091005.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/scripts/npc/2091005.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2091005.js?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -208,7 +208,7 @@ function action(mode, type, selection) {\n                             var selStr = \"You have #b\" + cm.getPlayer().getDojoPoints() + \"#k training points. Master prefers those with great talent. If you obtain more points than the average, you can receive a belt depending on your score.\\r\\n\";\n                             for (var i = 0; i < belts.length; i++) {\n                                 if (cm.getPlayer().getItemQuantity(belts[i], true) > 0) {\n-                                    selStr += \"\\r\\n#L\" + i + \"##i\" + belts[i] + \"# #t\" + belts[i] + \"# (Obtained)\";\n+                                    selStr += \"\\r\\n#L\" + i + \"##i\" + belts[i] + \"# #t\" + belts[i] + \"# (Already on inventory)\";\n                                 } else\n                                     selStr += \"\\r\\n#L\" + i + \"##i\" + belts[i] + \"# #t\" + belts[i] + \"#\";\n                             }\n@@ -220,6 +220,7 @@ function action(mode, type, selection) {\n                             if (cm.getPlayer().getDojoPoints() >= points) {\n                                 if (cm.getPlayer().getLevel() > level) {\n                                     cm.gainItem(belt, 1);\n+                                    cm.getPlayer().setDojoPoints(cm.getPlayer().getDojoPoints() - points);\n                                     cm.sendNext(\"There is the #i\" + belt + \"# #b#t\" + belt + \"##k. You have proven your valor to ascend on the Dojo ranks. Well done!\");\n                                 }\n                                 else"}, {"sha": "c09e542d3d59b19dbe4c4517e35cb627f883ebfc", "filename": "scripts/npc/9010022.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/scripts/npc/9010022.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/scripts/npc/9010022.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9010022.js?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -22,7 +22,7 @@ function action(mode, type, selection) {\n         else \n             status--; \n             if (status == 0) { \n-            if (cm.getLevel() < 20) { \n+            if (cm.getLevel() < 25) { \n                 cm.sendDimensionalMirror(\"#-1# There is no place for you to transport to from here.\"); \n                 cm.dispose(); \n             } else { "}, {"sha": "0972f34afc09994cfbfefbf408abfcbc5f29f7b8", "filename": "sql/db_database.sql", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/sql/db_database.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/sql/db_database.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_database.sql?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -21222,7 +21222,7 @@ INSERT INTO `shopitems` ( `shopid`, `itemid`, `price`, `position`) VALUES\n (1052116, 2000002, 320, 212),\n (1052116, 2000001, 160, 216),\n (1052116, 2000000, 50, 220),\n-(9120002, 2061003, 40, 0, 100);\n+(9120002, 2061003, 40, 100);\n \n CREATE TABLE IF NOT EXISTS `skillmacros` (\n   `id` int(11) NOT NULL AUTO_INCREMENT,"}, {"sha": "fbe5b3234cd9460a39e480a29d142ff8067030c0", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 46, "deletions": 20, "changes": 66, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -4529,26 +4529,31 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool\n                 }\n             }\n             \n-            PreparedStatement ps2;\n-            ResultSet rs2;\n-            for(byte i = 0; i < 3; i++) {\n-                MaplePet pet = ret.getPet(i);\n-                if(pet == null) continue;\n-                \n-                int petId = pet.getUniqueId();\n-                ps2 = con.prepareStatement(\"SELECT itemid FROM petignores WHERE petid = ?\"); // Get pet details..\n+            PreparedStatement ps2, ps3;\n+            ResultSet rs2, rs3;\n+            \n+            ps3 = con.prepareStatement(\"SELECT petid FROM inventoryitems WHERE characterid = ? AND petid > -1\");\n+            ps3.setInt(1, charid);\n+            rs3 = ps3.executeQuery();\n+            while(rs3.next()) {\n+                int petId = rs3.getInt(\"petid\");\n+\n+                ps2 = con.prepareStatement(\"SELECT itemid FROM petignores WHERE petid = ?\");\n                 ps2.setInt(1, petId);\n-                \n+\n                 ret.resetExcluded(petId);\n \n                 rs2 = ps2.executeQuery();\n                 while(rs2.next()) {\n                     ret.addExcluded(petId, rs2.getInt(\"itemid\"));\n                 }\n-                \n+\n                 ps2.close();\n                 rs2.close();\n             }\n+            ps3.close();\n+            rs3.close();\n+            \n             ret.commitExcludedItems();\n             \n             if (channelserver) {\n@@ -5525,10 +5530,28 @@ public final boolean insertNewChar() {\n         }\n     }\n \n-    // synchronize this call instead of trying to give access all at once (?)\n-    public synchronized void saveToDB() {\n+    public void saveToDB() {\n+        if(ServerConstants.USE_AUTOSAVE) {\n+            Runnable r = new Runnable() {\n+                @Override\n+                public void run() {\n+                    saveToDB(true);\n+                }\n+            };\n+            \n+            Thread t = new Thread(r);  //spawns a new thread to deal with this\n+            t.start();\n+        } else {\n+            saveToDB(true);\n+        }\n+    }\n+    \n+    public synchronized void saveToDB(boolean notAutosave) {\n         Calendar c = Calendar.getInstance();\n-        FilePrinter.print(FilePrinter.SAVING_CHARACTER, \"Attempting to save \" + name + \" at \" + c.getTime().toString());\n+        \n+        if(notAutosave) FilePrinter.print(FilePrinter.SAVING_CHARACTER, \"Attempting to save \" + name + \" at \" + c.getTime().toString());\n+        else FilePrinter.print(FilePrinter.AUTOSAVING_CHARACTER, \"Attempting to autosave \" + name + \" at \" + c.getTime().toString());\n+        \n         Connection con = null;\n         try {\n             con = DatabaseConnection.getConnection();\n@@ -5577,7 +5600,7 @@ public synchronized void saveToDB() {\n             }\n             ps.setInt(22, meso.get());\n             ps.setInt(23, hpMpApUsed);\n-            if (map == null || map.getId() == 610020000 || map.getId() == 610020001) {\n+            if (map == null || map.getId() == 610020000 || map.getId() == 610020001) {  // reset to first spawnpoint on those maps\n                 ps.setInt(24, 0);\n             } else {\n                 MaplePortal closest = map.findClosestPlayerSpawnpoint(getPosition());\n@@ -5648,7 +5671,7 @@ public synchronized void saveToDB() {\n                 petLock.unlock();\n             }\n             \n-            for(Entry<Integer, Set<Integer>> es: getExcluded().entrySet()) {\n+            for(Entry<Integer, Set<Integer>> es: getExcluded().entrySet()) {    // this set is already protected\n                 try (PreparedStatement ps2 = con.prepareStatement(\"DELETE FROM petignores WHERE petid=?\")) {\n                     ps2.setInt(1, es.getKey());\n                     ps2.executeUpdate();\n@@ -5667,8 +5690,10 @@ public synchronized void saveToDB() {\n             deleteWhereCharacterId(con, \"DELETE FROM keymap WHERE characterid = ?\");\n             ps = con.prepareStatement(\"INSERT INTO keymap (characterid, `key`, `type`, `action`) VALUES (?, ?, ?, ?)\");\n             ps.setInt(1, id);\n-            for (Entry<Integer, MapleKeyBinding> keybinding : keymap.entrySet()) {\n-                ps.setInt(2, keybinding.getKey().intValue());\n+            \n+            Set<Entry<Integer, MapleKeyBinding>> keybindingItems = Collections.unmodifiableSet(keymap.entrySet());\n+            for (Entry<Integer, MapleKeyBinding> keybinding : keybindingItems) {\n+                ps.setInt(2, keybinding.getKey());\n                 ps.setInt(3, keybinding.getValue().getType());\n                 ps.setInt(4, keybinding.getValue().getAction());\n                 ps.addBatch();\n@@ -5691,14 +5716,13 @@ public synchronized void saveToDB() {\n                 }\n             }\n             ps.executeBatch();\n+            \n             List<Pair<Item, MapleInventoryType>> itemsWithType = new ArrayList<>();\n-\n             for (MapleInventory iv : inventory) {\n                 for (Item item : iv.list()) {\n                     itemsWithType.add(new Pair<>(item, iv.getType()));\n                 }\n             }\n-\n             ItemFactory.INVENTORY.saveItems(itemsWithType, id, con);\n \t\t\t\n             deleteWhereCharacterId(con, \"DELETE FROM skills WHERE characterid = ?\");\n@@ -6283,7 +6307,7 @@ public boolean gainSlots(int type, int slots, boolean update) {\n         if (slots <= 96) {\n             inventory[type].setSlotLimit(slots);\n \n-            saveToDB();\n+            this.saveToDB();\n             if (update) {\n                 client.announce(MaplePacketCreator.updateInventorySlotLimit(type, slots));\n             }\n@@ -6552,6 +6576,8 @@ public void unequipPet(MaplePet pet, boolean shift_left, boolean hunger) {\n         getMap().broadcastMessage(this, MaplePacketCreator.showPet(this, pet, true, hunger), true);\n         \n         removePet(pet, shift_left);\n+        commitExcludedItems();\n+        \n         client.announce(MaplePacketCreator.petStatUpdate(this));\n         client.announce(MaplePacketCreator.enableActions());\n     }"}, {"sha": "ef76f911c714830e9bcfc61c72861b3e15ea8a41", "filename": "src/client/MonsterBook.java", "status": "modified", "additions": 99, "deletions": 40, "changes": 139, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/client/MonsterBook.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/client/MonsterBook.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MonsterBook.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -25,9 +25,13 @@\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n+import java.util.Collections;\n import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Set;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n \n@@ -36,85 +40,140 @@\n     private int normalCard = 0;\n     private int bookLevel = 1;\n     private Map<Integer, Integer> cards = new LinkedHashMap<>();\n+    private Lock lock = new ReentrantLock();\n \n+    private Set<Entry<Integer, Integer>> getCardSet() {\n+        lock.lock();\n+        try {\n+            return Collections.unmodifiableSet(cards.entrySet());\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n+    \n     public void addCard(final MapleClient c, final int cardid) {\n         c.getPlayer().getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showForeignCardEffect(c.getPlayer().getId()), false);\n-        for (Entry<Integer, Integer> all : cards.entrySet()) {\n-            if (all.getKey() == cardid) {\n-                if (all.getValue() > 4) {\n-                    c.announce(MaplePacketCreator.addCard(true, cardid, all.getValue()));\n+        \n+        Integer qty;\n+        lock.lock();\n+        try {\n+            qty = cards.get(cardid);\n+            \n+            if(qty != null) {\n+                if(qty < 5) {\n+                    cards.put(cardid, qty + 1);\n+                }\n+            } else {\n+                cards.put(cardid, 1);\n+                qty = 0;\n+                \n+                if (cardid / 1000 >= 2388) {\n+                    specialCard++;\n                 } else {\n-                    all.setValue(all.getValue() + 1);\n-                    c.announce(MaplePacketCreator.addCard(false, cardid, all.getValue()));\n-                    c.announce(MaplePacketCreator.showGainCard());\n-                    calculateLevel();\n+                    normalCard++;\n                 }\n-                return;\n             }\n+        } finally {\n+            lock.unlock();\n         }\n-        cards.put(cardid, 1);\n-        c.announce(MaplePacketCreator.addCard(false, cardid, 1));\n-        c.announce(MaplePacketCreator.showGainCard());\n-        calculateLevel();\n         \n-        if (cardid / 1000 >= 2388) {\n-            specialCard++;\n+        if(qty < 5) {\n+            calculateLevel();   // current leveling system only accounts unique cards...\n+            \n+            c.announce(MaplePacketCreator.addCard(false, cardid, qty + 1));\n+            c.announce(MaplePacketCreator.showGainCard());\n         } else {\n-            normalCard++;\n+            c.announce(MaplePacketCreator.addCard(true, cardid, 5));\n         }\n-        \n-        //c.getPlayer().saveToDB(); //is it REALLY needed to save to DB every new entry?\n     }\n \n     private void calculateLevel() {\n-        bookLevel = (int) Math.max(1, Math.sqrt((normalCard + specialCard) / 5));\n+        lock.lock();\n+        try {\n+            bookLevel = (int) Math.max(1, Math.sqrt((normalCard + specialCard) / 5));\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public int getBookLevel() {\n-        return bookLevel;\n+        lock.lock();\n+        try {\n+            return bookLevel;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public Map<Integer, Integer> getCards() {\n-        return cards;\n+        lock.lock();\n+        try {\n+            return Collections.unmodifiableMap(cards);\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public int getTotalCards() {\n-        return specialCard + normalCard;\n+        lock.lock();\n+        try {\n+            return specialCard + normalCard;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public int getNormalCard() {\n-        return normalCard;\n+        lock.lock();\n+        try {\n+            return normalCard;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public int getSpecialCard() {\n-        return specialCard;\n+        lock.lock();\n+        try {\n+            return specialCard;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public void loadCards(final int charid) throws SQLException {\n-        Connection con = DatabaseConnection.getConnection();\n-        try (PreparedStatement ps = con.prepareStatement(\"SELECT cardid, level FROM monsterbook WHERE charid = ? ORDER BY cardid ASC\")) {\n-            ps.setInt(1, charid);\n-            try (ResultSet rs = ps.executeQuery()) {\n-                int cardid, level;\n-                while (rs.next()) {\n-                    cardid = rs.getInt(\"cardid\");\n-                    level = rs.getInt(\"level\");\n-                    if (cardid / 1000 >= 2388) {\n-                        specialCard++;\n-                    } else {\n-                        normalCard++;\n+        lock.lock();\n+        try {\n+            Connection con = DatabaseConnection.getConnection();\n+            try (PreparedStatement ps = con.prepareStatement(\"SELECT cardid, level FROM monsterbook WHERE charid = ? ORDER BY cardid ASC\")) {\n+                ps.setInt(1, charid);\n+                try (ResultSet rs = ps.executeQuery()) {\n+                    int cardid, level;\n+                    while (rs.next()) {\n+                        cardid = rs.getInt(\"cardid\");\n+                        level = rs.getInt(\"level\");\n+                        if (cardid / 1000 >= 2388) {\n+                            specialCard++;\n+                        } else {\n+                            normalCard++;\n+                        }\n+                        cards.put(cardid, level);\n                     }\n-                    cards.put(cardid, level);\n                 }\n             }\n+\n+            con.close();\n+        } finally {\n+            lock.unlock();\n         }\n         \n-        con.close();\n         calculateLevel();\n     }\n \n     public void saveCards(final int charid) {\n-        if (cards.isEmpty()) {\n+        Set<Entry<Integer, Integer>> cardSet = getCardSet();\n+        \n+        if (cardSet.isEmpty()) {\n             return;\n         }\n         try {\n@@ -125,7 +184,7 @@ public void saveCards(final int charid) {\n             ps.close();\n             boolean first = true;\n             StringBuilder query = new StringBuilder();\n-            for (Entry<Integer, Integer> all : cards.entrySet()) {\n+            for (Entry<Integer, Integer> all : cardSet) {\n                 if (first) {\n                     query.append(\"INSERT INTO monsterbook VALUES (\");\n                     first = false;"}, {"sha": "5bd1d984010ae70274f3ec8e9ae55c959c54915d", "filename": "src/client/inventory/ItemFactory.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/client/inventory/ItemFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/client/inventory/ItemFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/ItemFactory.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -141,7 +141,6 @@ public synchronized void saveItems(List<Pair<Item, MapleInventoryType>> items, i\n         ResultSet rs = null;\n \n         lock.lock();\n-\t\t\n         try {\n             StringBuilder query = new StringBuilder();\n             query.append(\"DELETE `inventoryitems`, `inventoryequipment` FROM `inventoryitems` LEFT JOIN `inventoryequipment` USING(`inventoryitemid`) WHERE `type` = ? AND `\");"}, {"sha": "b527f8dc20341406c584a7e101533854a7504057", "filename": "src/client/inventory/MapleInventory.java", "status": "modified", "additions": 130, "deletions": 53, "changes": 183, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/client/inventory/MapleInventory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/client/inventory/MapleInventory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/MapleInventory.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -29,13 +29,16 @@\n import java.util.List;\n import java.util.Map.Entry;\n import java.util.Map;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n \n import tools.Pair;\n import client.MapleCharacter;\n import client.MapleClient;\n import constants.ItemConstants;\n import server.MapleItemInformationProvider;\n import server.MapleInventoryManipulator;\n+import tools.FilePrinter;\n \n /**\n  *\n@@ -47,6 +50,7 @@\n     private byte slotLimit;\n     private MapleInventoryType type;\n     private boolean checked = false;\n+    private Lock lock = new ReentrantLock();\n     \n     public MapleInventory(MapleCharacter mc, MapleInventoryType type, byte slotLimit) {\n         this.owner = mc;\n@@ -64,15 +68,34 @@ public boolean isEquipInventory() {\n     }\n \n     public byte getSlotLimit() {\n-\treturn slotLimit;\n+        lock.lock();\n+        try {\n+            return slotLimit;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public void setSlotLimit(int newLimit) {\n-\tslotLimit = (byte) newLimit;\n+        lock.lock();\n+        try {\n+            slotLimit = (byte) newLimit;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n+    public Collection<Item> list() {\n+        lock.lock();\n+        try {\n+            return Collections.unmodifiableCollection(inventory.values());\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n+    \n     public Item findById(int itemId) {\n-        for (Item item : inventory.values()) {\n+        for (Item item : list()) {\n             if (item.getItemId() == itemId) {\n                 return item;\n             }\n@@ -81,10 +104,10 @@ public Item findById(int itemId) {\n     }\n     \n     public Item findByName(String name) {\n-        for (Item item : inventory.values()) {\n+        for (Item item : list()) {\n             String itemName = MapleItemInformationProvider.getInstance().getName(item.getItemId());\n             if(itemName == null) {\n-                System.out.println(\"[CRITICAL] Item \"  + item.getItemId() + \" has no name.\");\n+                FilePrinter.printError(FilePrinter.EXCEPTION, \"[CRITICAL] Item \"  + item.getItemId() + \" has no name.\");\n                 continue;\n             }\n             \n@@ -97,7 +120,7 @@ public Item findByName(String name) {\n \n     public int countById(int itemId) {\n         int qty = 0;\n-        for (Item item : inventory.values()) {\n+        for (Item item : list()) {\n             if (item.getItemId() == itemId) {\n                 qty += item.getQuantity();\n             }\n@@ -138,7 +161,7 @@ public int freeSlotCountById(int itemId, int required) {\n \n     public List<Item> listById(int itemId) {\n         List<Item> ret = new ArrayList<>();\n-        for (Item item : inventory.values()) {\n+        for (Item item : list()) {\n             if (item.getItemId() == itemId) {\n                 ret.add(item);\n             }\n@@ -149,10 +172,6 @@ public int freeSlotCountById(int itemId, int required) {\n         return ret;\n     }\n \n-    public Collection<Item> list() {\n-        return inventory.values();\n-    }\n-\n     public short addItem(Item item) {\n         short slotId = getNextFreeSlot();\n         if (slotId < 0 || item == null) {\n@@ -171,29 +190,34 @@ public void addFromDB(Item item) {\n     }\n \n     public void move(short sSlot, short dSlot, short slotMax) {\n-        Item source = (Item) inventory.get(sSlot);\n-        Item target = (Item) inventory.get(dSlot);\n-        if (source == null) {\n-            return;\n-        }\n-        if (target == null) {\n-            source.setPosition(dSlot);\n-            inventory.put(dSlot, source);\n-            inventory.remove(sSlot);\n-        } else if (target.getItemId() == source.getItemId() && !ItemConstants.isRechargable(source.getItemId())) {\n-            if (type.getType() == MapleInventoryType.EQUIP.getType()) {\n-                swap(target, source);\n+        lock.lock();\n+        try {\n+            Item source = (Item) inventory.get(sSlot);\n+            Item target = (Item) inventory.get(dSlot);\n+            if (source == null) {\n+                return;\n             }\n-            if (source.getQuantity() + target.getQuantity() > slotMax) {\n-                short rest = (short) ((source.getQuantity() + target.getQuantity()) - slotMax);\n-                source.setQuantity(rest);\n-                target.setQuantity(slotMax);\n-            } else {\n-                target.setQuantity((short) (source.getQuantity() + target.getQuantity()));\n+            if (target == null) {\n+                source.setPosition(dSlot);\n+                inventory.put(dSlot, source);\n                 inventory.remove(sSlot);\n+            } else if (target.getItemId() == source.getItemId() && !ItemConstants.isRechargable(source.getItemId())) {\n+                if (type.getType() == MapleInventoryType.EQUIP.getType()) {\n+                    swap(target, source);\n+                }\n+                if (source.getQuantity() + target.getQuantity() > slotMax) {\n+                    short rest = (short) ((source.getQuantity() + target.getQuantity()) - slotMax);\n+                    source.setQuantity(rest);\n+                    target.setQuantity(slotMax);\n+                } else {\n+                    target.setQuantity((short) (source.getQuantity() + target.getQuantity()));\n+                    inventory.remove(sSlot);\n+                }\n+            } else {\n+                swap(target, source);\n             }\n-        } else {\n-            swap(target, source);\n+        } finally {\n+            lock.unlock();\n         }\n     }\n \n@@ -208,15 +232,20 @@ private void swap(Item source, Item target) {\n     }\n \n     public Item getItem(short slot) {\n-        return inventory.get(slot);\n+        lock.lock();\n+        try {\n+            return inventory.get(slot);\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public void removeItem(short slot) {\n         removeItem(slot, (short) 1, false);\n     }\n \n     public void removeItem(short slot, short quantity, boolean allowZero) {\n-        Item item = inventory.get(slot);\n+        Item item = getItem(slot);\n         if (item == null) {// TODO is it ok not to throw an exception here?\n             return;\n         }\n@@ -230,56 +259,94 @@ public void removeItem(short slot, short quantity, boolean allowZero) {\n     }\n \n     public void addSlot(short slot, Item item) {\n-        inventory.put(slot, item);\n+        lock.lock();\n+        try {\n+            inventory.put(slot, item);\n+        } finally {\n+            lock.unlock();\n+        }\n         \n         if(ItemConstants.isRateCoupon(item.getItemId())) {\n             owner.updateCouponRates();\n         }\n     }\n     \n     public void removeSlot(short slot) {\n-        Item item = inventory.remove(slot);\n+        Item item;\n+        lock.lock();\n+        try {\n+            item = inventory.remove(slot);\n+        } finally {\n+            lock.unlock();\n+        }\n         \n         if(item != null && ItemConstants.isRateCoupon(item.getItemId())) {\n             owner.updateCouponRates();\n         }\n     }\n \n     public boolean isFull() {\n-        return inventory.size() >= slotLimit;\n+        lock.lock();\n+        try {\n+            return inventory.size() >= slotLimit;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public boolean isFull(int margin) {\n-        return inventory.size() + margin >= slotLimit;\n+        lock.lock();\n+        try {\n+            return inventory.size() + margin >= slotLimit;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n     \n     public boolean isFullAfterSomeItems(int margin, int used) {\n-        return inventory.size() + margin >= slotLimit - used;\n+        lock.lock();\n+        try {\n+            return inventory.size() + margin >= slotLimit - used;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public short getNextFreeSlot() {\n         if (isFull()) {\n             return -1;\n         }\n-        for (short i = 1; i <= slotLimit; i++) {\n-            if (!inventory.keySet().contains(i)) {\n-                return i;\n+        \n+        lock.lock();\n+        try {\n+            for (short i = 1; i <= slotLimit; i++) {\n+                if (!inventory.containsKey(i)) {\n+                    return i;\n+                }\n             }\n+            return -1;\n+        } finally {\n+            lock.unlock();\n         }\n-        return -1;\n     }\n \n     public short getNumFreeSlot() {\n \tif (isFull()) {\n \t    return 0;\n \t}\n-\tshort free = 0;\n-\tfor (short i = 1; i <= slotLimit; i++) {\n-        if (!inventory.keySet().contains(i)) {\n-        \tfree++;\n-\t    }\n-\t}\n-\treturn free;\n+        \n+        lock.lock();\n+        try {\n+            short free = 0;\n+            for (short i = 1; i <= slotLimit; i++) {\n+                if (!inventory.containsKey(i)) {\n+                    free++;\n+                }\n+            }\n+            return free;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n     \n     public static boolean checkSpot(MapleCharacter chr, Item item) {\n@@ -394,7 +461,7 @@ public MapleInventoryType getType() {\n \n     @Override\n     public Iterator<Item> iterator() {\n-        return Collections.unmodifiableCollection(inventory.values()).iterator();\n+        return Collections.unmodifiableCollection(list()).iterator();\n     }\n \n     public Collection<MapleInventory> allInventories() {\n@@ -404,7 +471,7 @@ public MapleInventoryType getType() {\n     public Item findByCashId(int cashId) {\n         boolean isRing = false;\n         Equip equip = null;\n-\tfor (Item item : inventory.values()) {\n+\tfor (Item item : list()) {\n             if (item.getType() == MapleInventoryType.EQUIP.getType()) {\n                 equip = (Equip) item;\n                 isRing = equip.getRingId() > -1;\n@@ -417,10 +484,20 @@ public Item findByCashId(int cashId) {\n     }\n \n     public boolean checked() {\n-        return checked;\n+        lock.lock();\n+        try {\n+            return checked;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public void checked(boolean yes) {\n-        checked = yes;\n+        lock.lock();\n+        try {\n+            checked = yes;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n }\n\\ No newline at end of file"}, {"sha": "80937e85434ee043d5c6eeab310f5c3488b1ce52", "filename": "src/constants/ServerConstants.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/constants/ServerConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/constants/ServerConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/ServerConstants.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -44,6 +44,7 @@\n     public static final boolean USE_ITEM_SORT_BY_NAME = false;      //Item sorting based on name rather than id.\n     public static final boolean USE_PARTY_SEARCH = false;\n     public static final boolean USE_AUTOBAN = false;                //Commands the server to detect infractors automatically.\n+    public static final boolean USE_AUTOSAVE = true;                //Enables server autosaving feature (saves characters to DB each 1 hour).\n     public static final boolean USE_SERVER_AUTOASSIGNER = true;     //Server-builtin autoassigner, uses algorithm based on distributing AP accordingly to required secondary stat on equipments.\n     public static final boolean USE_REFRESH_RANK_MOVE = true;\n     public static final boolean USE_ENFORCE_MDOOR_POSITION = true;  //Forces mystic door to be spawned near spawnpoints. (since things bugs out other way, and this helps players to locate the door faster)"}, {"sha": "a121fdb87ba90d86ff6874b1a3499854698514f8", "filename": "src/net/server/CharacterAutosaverWorker.java", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/net/server/CharacterAutosaverWorker.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/net/server/CharacterAutosaverWorker.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/CharacterAutosaverWorker.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -0,0 +1,50 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+\n+package net.server;\n+\n+import net.server.world.World;\n+import client.MapleCharacter;\n+import constants.ServerConstants;\n+\n+/**\n+ * @author Ronan\n+ */\n+public class CharacterAutosaverWorker implements Runnable {\n+    private World wserv;\n+    \n+    @Override\n+    public void run() {\n+        if(!ServerConstants.USE_AUTOSAVE) return;\n+        \n+        PlayerStorage ps = wserv.getPlayerStorage();\n+        for(MapleCharacter chr: ps.getAllCharacters()) {\n+            if(chr != null && chr.isLoggedin()) {\n+                chr.saveToDB(false);\n+            }\n+        }\n+    }\n+    \n+    public CharacterAutosaverWorker(World world) {\n+        wserv = world;\n+    }\n+}"}, {"sha": "8629ed37478a824c6c6b80654ab5fa5ed67f8e12", "filename": "src/net/server/channel/handlers/EnterMTSHandler.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/net/server/channel/handlers/EnterMTSHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/net/server/channel/handlers/EnterMTSHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/EnterMTSHandler.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -61,7 +61,6 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         Server.getInstance().getPlayerBuffStorage().addBuffsToStorage(chr.getId(), chr.getAllBuffs());\n         chr.cancelExpirationTask();\n         chr.saveToDB();\n-        System.out.println(\"STRANGE SAVE TO DB\");\n         chr.getMap().removePlayer(c.getPlayer());\n         try {\n             c.announce(MaplePacketCreator.openCashShop(c, true));"}, {"sha": "e1ff85376a40c6761f4abd32193bc09ead1ee0fc", "filename": "src/net/server/channel/handlers/SpawnPetHandler.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/net/server/channel/handlers/SpawnPetHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/net/server/channel/handlers/SpawnPetHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/SpawnPetHandler.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -90,7 +90,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             chr.getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showPet(c.getPlayer(), pet, false, false), true);\n             c.announce(MaplePacketCreator.petStatUpdate(c.getPlayer()));\n             c.announce(MaplePacketCreator.enableActions());\n-                    \n+            \n+            chr.commitExcludedItems();\n             chr.getClient().getWorldServer().registerPetHunger(chr, chr.getPetIndex(pet));\n         }\n     }"}, {"sha": "e1f81313c5b8d497a55805f14cd80cdfbf10a3f1", "filename": "src/net/server/world/World.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/net/server/world/World.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/net/server/world/World.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/World.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -45,8 +45,9 @@\n import java.util.concurrent.ScheduledFuture;\n \n import server.TimerManager;\n-import net.server.PetFullnessWorker;\n+import net.server.CharacterAutosaverWorker;\n import net.server.MountTirednessWorker;\n+import net.server.PetFullnessWorker;\n import net.server.PlayerStorage;\n import net.server.Server;\n import net.server.channel.Channel;\n@@ -82,7 +83,9 @@\n     private Map<Integer, Byte> activeMounts = new LinkedHashMap<>();\n     private ScheduledFuture<?> mountsSchedule;\n     private long mountUpdate;\n-\n+    \n+    private ScheduledFuture<?> charactersSchedule;\n+    \n     public World(int world, int flag, String eventmsg, int exprate, int droprate, int mesorate, int bossdroprate) {\n         this.id = world;\n         this.flag = flag;\n@@ -99,6 +102,7 @@ public World(int world, int flag, String eventmsg, int exprate, int droprate, in\n         \n         petsSchedule = TimerManager.getInstance().register(new PetFullnessWorker(this), 60 * 1000, 60 * 1000);\n         mountsSchedule = TimerManager.getInstance().register(new MountTirednessWorker(this), 60 * 1000, 60 * 1000);\n+        charactersSchedule = TimerManager.getInstance().register(new CharacterAutosaverWorker(this), 60 * 60 * 1000, 60 * 60 * 1000);\n     }\n \n     public List<Channel> getChannels() {"}, {"sha": "dd9e279bbbe63a766f6b5e6ed125c5bf218054b8", "filename": "src/server/CashShop.java", "status": "modified", "additions": 33, "deletions": 12, "changes": 45, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/server/CashShop.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/server/CashShop.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/CashShop.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -30,6 +30,8 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n \n import provider.MapleData;\n import provider.MapleDataProvider;\n@@ -43,6 +45,7 @@\n import client.inventory.MapleInventoryType;\n import client.inventory.MaplePet;\n import constants.ItemConstants;\n+import java.util.Collections;\n \n /*\n  * @author Flav\n@@ -99,12 +102,13 @@ public Item toItem() {\n                 item = new Item(itemId, (byte) 0, count, petid);\n             }\n \n-            if (ItemConstants.EXPIRING_ITEMS)\n-\t\t\t\tif(itemId == 5211048 || itemId == 5360042) { // 4 Hour 2X coupons, the period is 1, but we don't want them to last a day.\n-\t\t\t\t\titem.setExpiration(System.currentTimeMillis() + (1000 * 60 * 60 * 4));\n-\t\t\t\t} else {\n-\t\t\t\t\titem.setExpiration(System.currentTimeMillis() + (1000 * 60 * 60 * 24 * period));\n-\t\t\t\t}\n+            if (ItemConstants.EXPIRING_ITEMS) {\n+                    if(itemId == 5211048 || itemId == 5360042) { // 4 Hour 2X coupons, the period is 1, but we don't want them to last a day.\n+                            item.setExpiration(System.currentTimeMillis() + (1000 * 60 * 60 * 4));\n+                    } else {\n+                            item.setExpiration(System.currentTimeMillis() + (1000 * 60 * 60 * 24 * period));\n+                    }\n+            }\n             item.setSN(sn);\n             return item;\n         }\n@@ -237,6 +241,7 @@ public static void reloadSpecialCashItems() {//Yay?\n     private List<Item> inventory = new ArrayList<>();\n     private List<Integer> wishList = new ArrayList<>();\n     private int notes = 0;\n+    private Lock lock = new ReentrantLock();\n \n     public CashShop(int accountId, int characterId, int jobType) throws SQLException {\n         this.accountId = accountId;\n@@ -325,13 +330,18 @@ public void open(boolean b) {\n     }\n \n     public List<Item> getInventory() {\n-        return inventory;\n+        lock.lock();\n+        try {\n+            return Collections.unmodifiableList(inventory);\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public Item findByCashId(int cashId) {\n         boolean isRing = false;\n         Equip equip = null;\n-        for (Item item : inventory) {\n+        for (Item item : getInventory()) {\n             if (item.getType() == 1) {\n                 equip = (Equip) item;\n                 isRing = equip.getRingId() > -1;\n@@ -345,11 +355,21 @@ public Item findByCashId(int cashId) {\n     }\n \n     public void addToInventory(Item item) {\n-        inventory.add(item);\n+        lock.lock();\n+        try {\n+            inventory.add(item);\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public void removeFromInventory(Item item) {\n-        inventory.remove(item);\n+        lock.lock();\n+        try {\n+            inventory.remove(item);\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public List<Integer> getWishList() {\n@@ -458,15 +478,16 @@ public void save(Connection con) throws SQLException {\n         ps.close();\n         List<Pair<Item, MapleInventoryType>> itemsWithType = new ArrayList<>();\n \n-        for (Item item : inventory) {\n+        List<Item> inv = getInventory();\n+        for (Item item : inv) {\n             itemsWithType.add(new Pair<>(item, MapleItemInformationProvider.getInstance().getInventoryType(item.getItemId())));\n         }\n \n         factory.saveItems(itemsWithType, accountId, con);\n         ps = con.prepareStatement(\"DELETE FROM `wishlists` WHERE `charid` = ?\");\n         ps.setInt(1, characterId);\n         ps.executeUpdate();\n-\t\tps.close();\n+        ps.close();\n         ps = con.prepareStatement(\"INSERT INTO `wishlists` VALUES (DEFAULT, ?, ?)\");\n         ps.setInt(1, characterId);\n "}, {"sha": "f1591dfe9cc84b77aadf88e02d29166cc90c52f1", "filename": "src/server/MapleStorage.java", "status": "modified", "additions": 65, "deletions": 21, "changes": 86, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/server/MapleStorage.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/server/MapleStorage.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleStorage.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -36,6 +36,8 @@\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n import tools.Pair;\n@@ -47,10 +49,11 @@\n public class MapleStorage {\n \n     private int id;\n-    private List<Item> items;\n     private int meso;\n     private byte slots;\n     private Map<MapleInventoryType, List<Item>> typeItems = new HashMap<>();\n+    private List<Item> items;\n+    private Lock lock = new ReentrantLock();\n \n     private MapleStorage(int id, byte slots, int meso) {\n         this.id = id;\n@@ -135,7 +138,8 @@ public void saveToDB(Connection con) {\n             }\n             List<Pair<Item, MapleInventoryType>> itemsWithType = new ArrayList<>();\n \n-            for (Item item : items) {\n+            List<Item> list = getItems();\n+            for (Item item : list) {\n                 itemsWithType.add(new Pair<>(item, MapleItemInformationProvider.getInstance().getInventoryType(item.getItemId())));\n             }\n \n@@ -146,30 +150,56 @@ public void saveToDB(Connection con) {\n     }\n \n     public Item getItem(byte slot) {\n-        return items.get(slot);\n+        lock.lock();\n+        try {\n+            return items.get(slot);\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public Item takeOut(byte slot) {\n-        Item ret = items.remove(slot);\n+        Item ret;\n+        \n+        lock.lock();\n+        try {\n+            ret = items.remove(slot);\n+        } finally {\n+            lock.unlock();\n+        }\n+        \n         MapleInventoryType type = MapleItemInformationProvider.getInstance().getInventoryType(ret.getItemId());\n         typeItems.put(type, new ArrayList<>(filterItems(type)));\n         return ret;\n     }\n \n     public void store(Item item) {\n-        items.add(item);\n+        lock.lock();\n+        try {\n+            items.add(item);\n+        } finally {\n+            lock.unlock();\n+        }\n+        \n         MapleInventoryType type = MapleItemInformationProvider.getInstance().getInventoryType(item.getItemId());\n         typeItems.put(type, new ArrayList<>(filterItems(type)));\n     }\n \n     public List<Item> getItems() {\n-        return Collections.unmodifiableList(items);\n+        lock.lock();\n+        try {\n+            return Collections.unmodifiableList(items);\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     private List<Item> filterItems(MapleInventoryType type) {\n+        List<Item> storageItems = getItems();\n         List<Item> ret = new LinkedList<>();\n         MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n-        for (Item item : items) {\n+        \n+        for (Item item : storageItems) {\n             if (ii.getInventoryType(item.getItemId()) == type) {\n                 ret.add(item);\n             }\n@@ -179,7 +209,8 @@ public void store(Item item) {\n \n     public byte getSlot(MapleInventoryType type, byte slot) {\n         byte ret = 0;\n-        for (Item item : items) {\n+        List<Item> storageItems = getItems();\n+        for (Item item : storageItems) {\n             if (item == typeItems.get(type).get(slot)) {\n                 return ret;\n             }\n@@ -190,21 +221,29 @@ public byte getSlot(MapleInventoryType type, byte slot) {\n \n     public void sendStorage(MapleClient c, int npcId) {\n         final MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n-        Collections.sort(items, new Comparator<Item>() {\n-            @Override\n-            public int compare(Item o1, Item o2) {\n-                if (ii.getInventoryType(o1.getItemId()).getType() < ii.getInventoryType(o2.getItemId()).getType()) {\n-                    return -1;\n-                } else if (ii.getInventoryType(o1.getItemId()) == ii.getInventoryType(o2.getItemId())) {\n-                    return 0;\n+        \n+        lock.lock();\n+        try {\n+            Collections.sort(items, new Comparator<Item>() {\n+                @Override\n+                public int compare(Item o1, Item o2) {\n+                    if (ii.getInventoryType(o1.getItemId()).getType() < ii.getInventoryType(o2.getItemId()).getType()) {\n+                        return -1;\n+                    } else if (ii.getInventoryType(o1.getItemId()) == ii.getInventoryType(o2.getItemId())) {\n+                        return 0;\n+                    }\n+                    return 1;\n                 }\n-                return 1;\n-            }\n-        });\n+            });\n+        } finally {\n+            lock.unlock();\n+        }\n+        \n+        List<Item> storageItems = getItems();\n         for (MapleInventoryType type : MapleInventoryType.values()) {\n-            typeItems.put(type, new ArrayList<>(items));\n+            typeItems.put(type, new ArrayList<>(storageItems));\n         }\n-        c.announce(MaplePacketCreator.getStorage(npcId, slots, items, meso));\n+        c.announce(MaplePacketCreator.getStorage(npcId, slots, storageItems, meso));\n     }\n \n     public void sendStored(MapleClient c, MapleInventoryType type) {\n@@ -231,7 +270,12 @@ public void sendMeso(MapleClient c) {\n     }\n \n     public boolean isFull() {\n-        return items.size() >= slots;\n+        lock.lock();\n+        try {\n+            return items.size() >= slots;\n+        } finally {\n+            lock.unlock();\n+        }\n     }\n \n     public void close() {"}, {"sha": "045a3dfa88e86463bcf65c0d03e59366a74dba35", "filename": "src/server/life/MapleLifeFactory.java", "status": "modified", "additions": 93, "deletions": 86, "changes": 179, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/server/life/MapleLifeFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/server/life/MapleLifeFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleLifeFactory.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -55,100 +55,107 @@ public static AbstractLoadedMapleLife getLife(int id, String type) {\n     }\n \n     public static MapleMonster getMonster(int mid) {\n-        MapleMonsterStats stats = monsterStats.get(Integer.valueOf(mid));\n-        if (stats == null) {\n-            MapleData monsterData = data.getData(StringUtil.getLeftPaddedStr(Integer.toString(mid) + \".img\", '0', 11));\n-            if (monsterData == null) {\n-                return null;\n-            }\n-            MapleData monsterInfoData = monsterData.getChildByPath(\"info\");\n-            stats = new MapleMonsterStats();\n-            stats.setHp(MapleDataTool.getIntConvert(\"maxHP\", monsterInfoData));\n-            stats.setFriendly(MapleDataTool.getIntConvert(\"damagedByMob\", monsterInfoData, 0) == 1);\n-            stats.setPADamage(MapleDataTool.getIntConvert(\"PADamage\", monsterInfoData));\n-            stats.setPDDamage(MapleDataTool.getIntConvert(\"PDDamage\", monsterInfoData));\n-            stats.setMADamage(MapleDataTool.getIntConvert(\"MADamage\", monsterInfoData));\n-            stats.setMDDamage(MapleDataTool.getIntConvert(\"MDDamage\", monsterInfoData));  \n-            stats.setMp(MapleDataTool.getIntConvert(\"maxMP\", monsterInfoData, 0));\n-            stats.setExp(MapleDataTool.getIntConvert(\"exp\", monsterInfoData, 0));\n-            stats.setLevel(MapleDataTool.getIntConvert(\"level\", monsterInfoData));\n-            stats.setRemoveAfter(MapleDataTool.getIntConvert(\"removeAfter\", monsterInfoData, 0));\n-            stats.setBoss(MapleDataTool.getIntConvert(\"boss\", monsterInfoData, 0) > 0);\n-            stats.setExplosiveReward(MapleDataTool.getIntConvert(\"explosiveReward\", monsterInfoData, 0) > 0);\n-            stats.setFfaLoot(MapleDataTool.getIntConvert(\"publicReward\", monsterInfoData, 0) > 0);\n-            stats.setUndead(MapleDataTool.getIntConvert(\"undead\", monsterInfoData, 0) > 0);\n-            stats.setName(MapleDataTool.getString(mid + \"/name\", mobStringData, \"MISSINGNO\"));\n-            stats.setBuffToGive(MapleDataTool.getIntConvert(\"buff\", monsterInfoData, -1));\n-            stats.setCP(MapleDataTool.getIntConvert(\"getCP\", monsterInfoData, 0));\n-            stats.setRemoveOnMiss(MapleDataTool.getIntConvert(\"removeOnMiss\", monsterInfoData, 0) > 0);\n-\n-            MapleData special = monsterInfoData.getChildByPath(\"coolDamage\");\n-            if (special != null) {\n-                int coolDmg = MapleDataTool.getIntConvert(\"coolDamage\", monsterInfoData);\n-                int coolProb = MapleDataTool.getIntConvert(\"coolDamageProb\", monsterInfoData, 0);\n-                stats.setCool(new Pair<>(coolDmg, coolProb));\n-            }\n-            special = monsterInfoData.getChildByPath(\"loseItem\");\n-            if (special != null) {\n-                for (MapleData liData : special.getChildren()) {\n-                    stats.addLoseItem(new loseItem(MapleDataTool.getInt(liData.getChildByPath(\"id\")), (byte) MapleDataTool.getInt(liData.getChildByPath(\"prop\")), (byte) MapleDataTool.getInt(liData.getChildByPath(\"x\"))));\n+        try {\n+            MapleMonsterStats stats = monsterStats.get(Integer.valueOf(mid));\n+            if (stats == null) {\n+                MapleData monsterData = data.getData(StringUtil.getLeftPaddedStr(Integer.toString(mid) + \".img\", '0', 11));\n+                if (monsterData == null) {\n+                    return null;\n                 }\n-            }\n-            special = monsterInfoData.getChildByPath(\"selfDestruction\");\n-            if (special != null) {\n-                stats.setSelfDestruction(new selfDestruction((byte) MapleDataTool.getInt(special.getChildByPath(\"action\")), MapleDataTool.getIntConvert(\"removeAfter\", special, -1), MapleDataTool.getIntConvert(\"hp\", special, -1)));\n-            }\n-            MapleData firstAttackData = monsterInfoData.getChildByPath(\"firstAttack\");\n-            int firstAttack = 0;\n-            if (firstAttackData != null) {\n-                if (firstAttackData.getType() == MapleDataType.FLOAT) {\n-                    firstAttack = Math.round(MapleDataTool.getFloat(firstAttackData));\n-                } else {\n-                    firstAttack = MapleDataTool.getInt(firstAttackData);\n+                MapleData monsterInfoData = monsterData.getChildByPath(\"info\");\n+                stats = new MapleMonsterStats();\n+                stats.setHp(MapleDataTool.getIntConvert(\"maxHP\", monsterInfoData));\n+                stats.setFriendly(MapleDataTool.getIntConvert(\"damagedByMob\", monsterInfoData, 0) == 1);\n+                stats.setPADamage(MapleDataTool.getIntConvert(\"PADamage\", monsterInfoData));\n+                stats.setPDDamage(MapleDataTool.getIntConvert(\"PDDamage\", monsterInfoData));\n+                stats.setMADamage(MapleDataTool.getIntConvert(\"MADamage\", monsterInfoData));\n+                stats.setMDDamage(MapleDataTool.getIntConvert(\"MDDamage\", monsterInfoData));  \n+                stats.setMp(MapleDataTool.getIntConvert(\"maxMP\", monsterInfoData, 0));\n+                stats.setExp(MapleDataTool.getIntConvert(\"exp\", monsterInfoData, 0));\n+                stats.setLevel(MapleDataTool.getIntConvert(\"level\", monsterInfoData));\n+                stats.setRemoveAfter(MapleDataTool.getIntConvert(\"removeAfter\", monsterInfoData, 0));\n+                stats.setBoss(MapleDataTool.getIntConvert(\"boss\", monsterInfoData, 0) > 0);\n+                stats.setExplosiveReward(MapleDataTool.getIntConvert(\"explosiveReward\", monsterInfoData, 0) > 0);\n+                stats.setFfaLoot(MapleDataTool.getIntConvert(\"publicReward\", monsterInfoData, 0) > 0);\n+                stats.setUndead(MapleDataTool.getIntConvert(\"undead\", monsterInfoData, 0) > 0);\n+                stats.setName(MapleDataTool.getString(mid + \"/name\", mobStringData, \"MISSINGNO\"));\n+                stats.setBuffToGive(MapleDataTool.getIntConvert(\"buff\", monsterInfoData, -1));\n+                stats.setCP(MapleDataTool.getIntConvert(\"getCP\", monsterInfoData, 0));\n+                stats.setRemoveOnMiss(MapleDataTool.getIntConvert(\"removeOnMiss\", monsterInfoData, 0) > 0);\n+\n+                MapleData special = monsterInfoData.getChildByPath(\"coolDamage\");\n+                if (special != null) {\n+                    int coolDmg = MapleDataTool.getIntConvert(\"coolDamage\", monsterInfoData);\n+                    int coolProb = MapleDataTool.getIntConvert(\"coolDamageProb\", monsterInfoData, 0);\n+                    stats.setCool(new Pair<>(coolDmg, coolProb));\n                 }\n-            }\n-            stats.setFirstAttack(firstAttack > 0);\n-            stats.setDropPeriod(MapleDataTool.getIntConvert(\"dropItemPeriod\", monsterInfoData, 0) * 10000);\n-            \n-            stats.setTagColor(MapleDataTool.getIntConvert(\"hpTagColor\", monsterInfoData, 0));\n-            stats.setTagBgColor(MapleDataTool.getIntConvert(\"hpTagBgcolor\", monsterInfoData, 0));\n-\n-            for (MapleData idata : monsterData) {\n-                if (!idata.getName().equals(\"info\")) {\n-                    int delay = 0;\n-                    for (MapleData pic : idata.getChildren()) {\n-                        delay += MapleDataTool.getIntConvert(\"delay\", pic, 0);\n+                special = monsterInfoData.getChildByPath(\"loseItem\");\n+                if (special != null) {\n+                    for (MapleData liData : special.getChildren()) {\n+                        stats.addLoseItem(new loseItem(MapleDataTool.getInt(liData.getChildByPath(\"id\")), (byte) MapleDataTool.getInt(liData.getChildByPath(\"prop\")), (byte) MapleDataTool.getInt(liData.getChildByPath(\"x\"))));\n                     }\n-                    stats.setAnimationTime(idata.getName(), delay);\n                 }\n-            }\n-            MapleData reviveInfo = monsterInfoData.getChildByPath(\"revive\");\n-            if (reviveInfo != null) {\n-                List<Integer> revives = new LinkedList<>();\n-                for (MapleData data_ : reviveInfo) {\n-                    revives.add(MapleDataTool.getInt(data_));\n+                special = monsterInfoData.getChildByPath(\"selfDestruction\");\n+                if (special != null) {\n+                    stats.setSelfDestruction(new selfDestruction((byte) MapleDataTool.getInt(special.getChildByPath(\"action\")), MapleDataTool.getIntConvert(\"removeAfter\", special, -1), MapleDataTool.getIntConvert(\"hp\", special, -1)));\n                 }\n-                stats.setRevives(revives);\n-            }\n-            decodeElementalString(stats, MapleDataTool.getString(\"elemAttr\", monsterInfoData, \"\"));\n-            MapleData monsterSkillData = monsterInfoData.getChildByPath(\"skill\");\n-            if (monsterSkillData != null) {\n-                int i = 0;\n-                List<Pair<Integer, Integer>> skills = new ArrayList<>();\n-                while (monsterSkillData.getChildByPath(Integer.toString(i)) != null) {\n-                    skills.add(new Pair<>(Integer.valueOf(MapleDataTool.getInt(i + \"/skill\", monsterSkillData, 0)), Integer.valueOf(MapleDataTool.getInt(i + \"/level\", monsterSkillData, 0))));\n-                    i++;\n+                MapleData firstAttackData = monsterInfoData.getChildByPath(\"firstAttack\");\n+                int firstAttack = 0;\n+                if (firstAttackData != null) {\n+                    if (firstAttackData.getType() == MapleDataType.FLOAT) {\n+                        firstAttack = Math.round(MapleDataTool.getFloat(firstAttackData));\n+                    } else {\n+                        firstAttack = MapleDataTool.getInt(firstAttackData);\n+                    }\n                 }\n-                stats.setSkills(skills);\n-            }\n-            MapleData banishData = monsterInfoData.getChildByPath(\"ban\");\n-            if (banishData != null) {\n-                stats.setBanishInfo(new BanishInfo(MapleDataTool.getString(\"banMsg\", banishData), MapleDataTool.getInt(\"banMap/0/field\", banishData, -1), MapleDataTool.getString(\"banMap/0/portal\", banishData, \"sp\")));\n+                stats.setFirstAttack(firstAttack > 0);\n+                stats.setDropPeriod(MapleDataTool.getIntConvert(\"dropItemPeriod\", monsterInfoData, 0) * 10000);\n+\n+                stats.setTagColor(MapleDataTool.getIntConvert(\"hpTagColor\", monsterInfoData, 0));\n+                stats.setTagBgColor(MapleDataTool.getIntConvert(\"hpTagBgcolor\", monsterInfoData, 0));\n+\n+                for (MapleData idata : monsterData) {\n+                    if (!idata.getName().equals(\"info\")) {\n+                        int delay = 0;\n+                        for (MapleData pic : idata.getChildren()) {\n+                            delay += MapleDataTool.getIntConvert(\"delay\", pic, 0);\n+                        }\n+                        stats.setAnimationTime(idata.getName(), delay);\n+                    }\n+                }\n+                MapleData reviveInfo = monsterInfoData.getChildByPath(\"revive\");\n+                if (reviveInfo != null) {\n+                    List<Integer> revives = new LinkedList<>();\n+                    for (MapleData data_ : reviveInfo) {\n+                        revives.add(MapleDataTool.getInt(data_));\n+                    }\n+                    stats.setRevives(revives);\n+                }\n+                decodeElementalString(stats, MapleDataTool.getString(\"elemAttr\", monsterInfoData, \"\"));\n+                MapleData monsterSkillData = monsterInfoData.getChildByPath(\"skill\");\n+                if (monsterSkillData != null) {\n+                    int i = 0;\n+                    List<Pair<Integer, Integer>> skills = new ArrayList<>();\n+                    while (monsterSkillData.getChildByPath(Integer.toString(i)) != null) {\n+                        skills.add(new Pair<>(Integer.valueOf(MapleDataTool.getInt(i + \"/skill\", monsterSkillData, 0)), Integer.valueOf(MapleDataTool.getInt(i + \"/level\", monsterSkillData, 0))));\n+                        i++;\n+                    }\n+                    stats.setSkills(skills);\n+                }\n+                MapleData banishData = monsterInfoData.getChildByPath(\"ban\");\n+                if (banishData != null) {\n+                    stats.setBanishInfo(new BanishInfo(MapleDataTool.getString(\"banMsg\", banishData), MapleDataTool.getInt(\"banMap/0/field\", banishData, -1), MapleDataTool.getString(\"banMap/0/portal\", banishData, \"sp\")));\n+                }\n+                monsterStats.put(Integer.valueOf(mid), stats);\n             }\n-            monsterStats.put(Integer.valueOf(mid), stats);\n+            MapleMonster ret = new MapleMonster(mid, stats);\n+            return ret;\n+        } catch(NullPointerException npe) {\n+            System.out.println(\"[SEVERE] MOB \" + mid + \" failed to load. Issue: \" + npe.getMessage() + \"\\n\\n\");\n+            npe.printStackTrace();\n+            \n+            return null;\n         }\n-        MapleMonster ret = new MapleMonster(mid, stats);\n-        return ret;\n     }\n \n     private static void decodeElementalString(MapleMonsterStats stats, String elemAttr) {"}, {"sha": "7f66af234eed355cbcb62040e963dbf634e88b55", "filename": "src/server/maps/MapleMap.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/server/maps/MapleMap.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/server/maps/MapleMap.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMap.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -2325,11 +2325,11 @@ public MapleFootholdTree getFootholds() {\n     }\n     \n     public void setMapPointBoundings(int px, int py, int h, int w) {\n-        mapArea.setBounds(px, py, w, h);\n+        mapArea.setBounds(px + 7, py, w - 14, h);\n     }\n     \n     public void setMapLineBoundings(int vrTop, int vrBottom, int vrLeft, int vrRight) {\n-        mapArea.setBounds(vrLeft, vrTop, vrRight - vrLeft, vrBottom - vrTop);\n+        mapArea.setBounds(vrLeft + 7, vrTop, vrRight - vrLeft - 14, vrBottom - vrTop);\n     }\n     \n     /**"}, {"sha": "81fb33a7bda6e95b805a14feffdeac229f812958", "filename": "src/tools/FilePrinter.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/f387d589b2536295187bf40524a383f3d167d01f/src/tools/FilePrinter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/f387d589b2536295187bf40524a383f3d167d01f/src/tools/FilePrinter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/FilePrinter.java?ref=f387d589b2536295187bf40524a383f3d167d01f", "patch": "@@ -41,6 +41,7 @@\n             FREDRICK = \"fredrick/\",\n             NPC_UNCODED = \"uncodedNPCs.txt\",\n             QUEST_UNCODED = \"uncodedQuests.txt\",\n+            AUTOSAVING_CHARACTER = \"saveCharAuto.txt\",\n             SAVING_CHARACTER = \"saveChar.txt\",\n             USED_COMMANDS = \"usedCommands.txt\";//more to come (maps)\n     "}]}]},
