{"fetchDate": "2019-12-19", "content": [{"sha": "514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6NTE0NjU2ZDIzOGY3ZDBiY2QwZDVjZTkyYjRlMGNjY2VmOGE1ZTI1NA==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-05-21T18:17:18Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2017-05-21T18:17:18Z"}, "message": "No delay on card pick-up + refactored item pickup process\n\nFixed a issue on server delaying whenever a player gets a new card for\nthe mobbook. Some code refactoring unifying the several item picking-up\nmethods on the project.", "tree": {"sha": "f2ecbda5db23fa5cee0317e00fb88d122eb16c00", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/f2ecbda5db23fa5cee0317e00fb88d122eb16c00"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "html_url": "https://github.com/ronancpl/HeavenMS/commit/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fcdc07b5b3f883da29619e094ba3f8ab401165a", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/7fcdc07b5b3f883da29619e094ba3f8ab401165a", "html_url": "https://github.com/ronancpl/HeavenMS/commit/7fcdc07b5b3f883da29619e094ba3f8ab401165a"}], "stats": {"total": 496, "additions": 204, "deletions": 292}, "files": [{"sha": "dd3c97f02b8ea18babcba86a7723bebbde09c4d6", "filename": "mychanges_ptbr.txt", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/mychanges_ptbr.txt?ref=514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "patch": "@@ -234,4 +234,9 @@ Corre\n 20 Maio 2017,\n Adi\ufffd\ufffdo: mec\ufffdnica de cadeia para GMs.\n Em conjunto com vcoc, adicionaram-se comandos: !clearslot, !hide/unhide, !jail, !itemvac e !healmap.\n-Corre\ufffd\ufffdo de bug em tabela SQL que continha informa\ufffd\ufffdo imcompleta para com alguns registros de cards e respectivos mobs.\n\\ No newline at end of file\n+Corre\ufffd\ufffdo de bug em tabela SQL que continha informa\ufffd\ufffdo imcompleta para com alguns registros de cards e respectivos mobs.\n+\n+21 Maio 2017,\n+Refatora\ufffd\ufffdo de c\ufffddigo referente ao m\ufffdtodos de coleta de item pelos jogadores.\n+Retiradas inconsist\ufffdncias entre infos de mobbook e \"cart\ufffdo-de-visitas\" do jogador.\n+Foi retirado o gargalo no sistema sempre que jogador incorpora um novo card ao mobbook.\n\\ No newline at end of file"}, {"sha": "607873874c94660f55f684109dfdcb3875179057", "filename": "nbproject/private/private.xml", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/nbproject/private/private.xml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/nbproject/private/private.xml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/nbproject/private/private.xml?ref=514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "patch": "@@ -3,12 +3,8 @@\n     <editor-bookmarks xmlns=\"http://www.netbeans.org/ns/editor-bookmarks/2\" lastBookmarkId=\"0\"/>\n     <open-files xmlns=\"http://www.netbeans.org/ns/projectui-open-files/2\">\n         <group>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/sql/tools/test_mobcarddrop.sql</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/client/command/Commands.java</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/scripting/AbstractPlayerInteraction.java</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/scripting/event/EventInstanceManager.java</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/client/MapleCharacter.java</file>\n-            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/scripting/event/EventManager.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/net/server/channel/handlers/ItemPickupHandler.java</file>\n+            <file>file:/C:/Nexon/MapleSolaxia/MapleSolaxiaV2/src/tools/MaplePacketCreator.java</file>\n         </group>\n     </open-files>\n </project-private>"}, {"sha": "ccf4d0919e53eb4b5321aed4e37f065250ffc356", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "patch": "@@ -144,6 +144,8 @@\n import constants.skills.SuperGM;\n import constants.skills.Swordsman;\n import constants.skills.ThunderBreaker;\n+import scripting.item.ItemScriptManager;\n+import server.maps.MapleMapItem;\n \n public class MapleCharacter extends AbstractAnimatedMapleMapObject {\n     private static final int[] DROP_RATE_GAIN = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};\n@@ -1326,6 +1328,146 @@ public void controlMonster(MapleMonster monster, boolean aggro) {\n         controlled.add(monster);\n         client.announce(MaplePacketCreator.controlMonster(monster, false, aggro));\n     }\n+    \n+    private static boolean useItem(final MapleClient c, final int id) {\n+        if (id / 1000000 == 2) {\n+            MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n+            if (ii.isConsumeOnPickup(id)) {\n+                if (id > 2022430 && id < 2022434) {\n+                    for (MapleCharacter mc : c.getPlayer().getMap().getCharacters()) {\n+                        if (mc.getParty() == c.getPlayer().getParty()) {\n+                            ii.getItemEffect(id).applyTo(mc);\n+                        }\n+                    }\n+                } else {\n+                    ii.getItemEffect(id).applyTo(c.getPlayer());\n+                }\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+    \n+    public final void pickupItem(MapleMapObject ob) {\n+        pickupItem(ob, -1);\n+    }\n+    \n+    public final void pickupItem(MapleMapObject ob, int petIndex) {     // yes, one picks the MapleMapObject, not the MapleMapItem\n+        if (ob == null) {                                               // pet index refers to the one picking up the item\n+            return;\n+        }\n+\t\t\n+        if (ob instanceof MapleMapItem) {\n+            MapleMapItem mapitem = (MapleMapItem) ob;\n+            if(System.currentTimeMillis() - mapitem.getDropTime() < 900) {\n+                client.announce(MaplePacketCreator.enableActions());\n+                return;\n+            }\n+            \n+            boolean isPet = petIndex > -1;\n+            final byte[] pickupPacket = MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), (isPet) ? 5 : 2, this.getId(), isPet, petIndex);\n+            \n+            boolean hasSpaceInventory = true;\n+            if (mapitem.getItemId() == 4031865 || mapitem.getItemId() == 4031866 || mapitem.getMeso() > 0 || MapleItemInformationProvider.getInstance().isConsumeOnPickup(mapitem.getItemId()) || (hasSpaceInventory = MapleInventoryManipulator.checkSpace(client, mapitem.getItemId(), mapitem.getItem().getQuantity(), mapitem.getItem().getOwner()))) {\n+                if ((this.getMapId() > 209000000 && this.getMapId() < 209000016) || (this.getMapId() >= 990000500 && this.getMapId() <= 990000502)) {//happyville trees and guild PQ\n+                    if (!mapitem.isPlayerDrop() || mapitem.getDropper().getObjectId() == client.getPlayer().getObjectId()) {\n+                        if(mapitem.getMeso() > 0) {\n+                            this.gainMeso(mapitem.getMeso(), true, true, false);\n+                            this.getMap().broadcastMessage(pickupPacket, mapitem.getPosition());\n+                            this.getMap().removeMapObject(ob);\n+                            mapitem.setPickedUp(true);\n+                        } else if (MapleInventoryManipulator.addFromDrop(client, mapitem.getItem(), false)) {\n+                            this.getMap().broadcastMessage(pickupPacket, mapitem.getPosition());\n+                            this.getMap().removeMapObject(ob);\n+                            mapitem.setPickedUp(true);\n+                        } else {\n+                            client.announce(MaplePacketCreator.enableActions());\n+                            return;\n+                        }\n+                    } else {\n+                        client.announce(MaplePacketCreator.showItemUnavailable());\n+                        client.announce(MaplePacketCreator.enableActions());\n+                        return;\n+                    }\n+                    client.announce(MaplePacketCreator.enableActions());\n+                    return;\n+                }\n+            \n+                synchronized (mapitem) {\n+                    if (mapitem.getQuest() > 0 && !this.needQuestItem(mapitem.getQuest(), mapitem.getItemId())) {\n+                        client.announce(MaplePacketCreator.showItemUnavailable());\n+                        client.announce(MaplePacketCreator.enableActions());\n+                        return;\n+                    }\n+                    if (mapitem.isPickedUp()) {\n+                        client.announce(MaplePacketCreator.showItemUnavailable());\n+                        client.announce(MaplePacketCreator.enableActions());\n+                        return;\n+                    }\n+                    if (mapitem.getMeso() > 0) {\n+                        if (this.getParty() != null) {\n+                            int mesosamm = mapitem.getMeso();\n+                            if (mesosamm > 50000 * this.getMesoRate()) {\n+                                return;\n+                            }\n+                            int partynum = 0;\n+                            for (MaplePartyCharacter partymem : this.getParty().getMembers()) {\n+                                if (partymem.isOnline() && partymem.getMapId() == this.getMap().getId() && partymem.getChannel() == client.getChannel()) {\n+                                    partynum++;\n+                                }\n+                            }\n+                            for (MaplePartyCharacter partymem : this.getParty().getMembers()) {\n+                                if (partymem.isOnline() && partymem.getMapId() == this.getMap().getId()) {\n+                                    MapleCharacter somecharacter = client.getChannelServer().getPlayerStorage().getCharacterById(partymem.getId());\n+                                    if (somecharacter != null) {\n+                                        somecharacter.gainMeso(mesosamm / partynum, true, true, false);\n+                                    }\n+                                }\n+                            }\n+                        } else {\n+                            this.gainMeso(mapitem.getMeso(), true, true, false);\n+                        }\n+                    } else if (mapitem.getItem().getItemId() / 10000 == 243) {\n+                        MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n+                        MapleItemInformationProvider.scriptedItem info = ii.getScriptedItemInfo(mapitem.getItem().getItemId());\n+                        if (info.runOnPickup()) {\n+                            ItemScriptManager ism = ItemScriptManager.getInstance();\n+                            String scriptName = info.getScript();\n+                            if (ism.scriptExists(scriptName)) {\n+                                ism.getItemScript(client, scriptName);\n+                            }\n+\n+                        } else {\n+                            if (!MapleInventoryManipulator.addFromDrop(client, mapitem.getItem(), true)) {\n+                                client.announce(MaplePacketCreator.enableActions());\n+                                return;\n+                            }\n+                        }\n+                    } else if(mapitem.getItemId() == 4031865 || mapitem.getItemId() == 4031866) {\n+                        // Add NX to account, show effect and make item disappear\n+                        this.getCashShop().gainCash(1, mapitem.getItemId() == 4031865 ? 100 : 250);\n+                    } else if (useItem(client, mapitem.getItem().getItemId())) {\n+                        if (mapitem.getItem().getItemId() / 10000 == 238) {\n+                            this.getMonsterBook().addCard(client, mapitem.getItem().getItemId());\n+                        }\n+                    } else if (MapleInventoryManipulator.addFromDrop(client, mapitem.getItem(), true)) {\n+                    } else if (mapitem.getItem().getItemId() == 4031868) {\n+                        this.getMap().broadcastMessage(MaplePacketCreator.updateAriantPQRanking(this.getName(), this.getItemQuantity(4031868, false), false));\n+                    } else {\n+                        client.announce(MaplePacketCreator.enableActions());\n+                        return;\n+                    }\n+                    mapitem.setPickedUp(true);\n+                    this.getMap().broadcastMessage(pickupPacket, mapitem.getPosition());\n+                    this.getMap().removeMapObject(ob);\n+                }\n+            } else if(!hasSpaceInventory) {\n+                client.announce(MaplePacketCreator.getInventoryFull());\n+                client.announce(MaplePacketCreator.getShowInventoryFull());\n+            }\n+        }\n+        client.announce(MaplePacketCreator.enableActions());\n+    }\n \n     public int countItem(int itemid) {\n         return inventory[MapleItemInformationProvider.getInstance().getInventoryType(itemid).ordinal()].countById(itemid);"}, {"sha": "7f091b2c86948495a153f7ecf3951a8a5939018e", "filename": "src/client/MonsterBook.java", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/client/MonsterBook.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/client/MonsterBook.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MonsterBook.java?ref=514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "patch": "@@ -32,13 +32,13 @@\n import tools.MaplePacketCreator;\n \n public final class MonsterBook {\n-    private int specialCard;\n+    private int specialCard = 0;\n     private int normalCard = 0;\n     private int bookLevel = 1;\n     private Map<Integer, Integer> cards = new LinkedHashMap<>();\n \n     public void addCard(final MapleClient c, final int cardid) {\n-        c.getPlayer().getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showForeginCardEffect(c.getPlayer().getId()), false);\n+        c.getPlayer().getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showForeignCardEffect(c.getPlayer().getId()), false);\n         for (Entry<Integer, Integer> all : cards.entrySet()) {\n             if (all.getKey() == cardid) {\n                 if (all.getValue() > 4) {\n@@ -57,7 +57,13 @@ public void addCard(final MapleClient c, final int cardid) {\n         c.announce(MaplePacketCreator.showGainCard());\n         calculateLevel();\n         \n-        c.getPlayer().saveToDB();\n+        if (cardid / 1000 >= 2388) {\n+            specialCard++;\n+        } else {\n+            normalCard++;\n+        }\n+        \n+        //c.getPlayer().saveToDB(); //is it REALLY needed to save to DB every new entry?\n     }\n \n     private void calculateLevel() {"}, {"sha": "1b06629a458c4f83077632d0b532bb17797191f6", "filename": "src/client/command/Commands.java", "status": "modified", "additions": 38, "deletions": 26, "changes": 64, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/client/command/Commands.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/client/command/Commands.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/Commands.java?ref=514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "patch": "@@ -1738,7 +1738,7 @@ public static void executeAdminCommand(MapleClient c, String[] sub, char heading\n \t\t\tbreak;\n \t\tcase \"face\":\n                         if (sub.length < 2){\n-\t\t\t\tplayer.yellowMessage(\"Syntax: !face <faceid>\");\n+\t\t\t\tplayer.yellowMessage(\"Syntax: !face [<playername>] <faceid>\");\n \t\t\t\treturn;\n \t\t\t}\n                     \n@@ -1747,13 +1747,17 @@ public static void executeAdminCommand(MapleClient c, String[] sub, char heading\n \t\t\t\tplayer.equipChanged();\n \t\t\t} else {\n \t\t\t\tvictim = c.getChannelServer().getPlayerStorage().getCharacterByName(sub[1]);\n-\t\t\t\tplayer.setFace(Integer.parseInt(sub[2]));\n-\t\t\t\tplayer.equipChanged();\n+                                if(victim == null) {\n+                                        player.yellowMessage(\"Player '\" + sub[1] + \"' has not been found on this channel.\");\n+                                        return;\n+                                }\n+\t\t\t\tvictim.setFace(Integer.parseInt(sub[2]));\n+\t\t\t\tvictim.equipChanged();\n \t\t\t}\n \t\t\tbreak;\n \t\tcase \"hair\":\n                         if (sub.length < 2){\n-\t\t\t\tplayer.yellowMessage(\"Syntax: !hair <hairid>\");\n+\t\t\t\tplayer.yellowMessage(\"Syntax: !hair [<playername>] <hairid>\");\n \t\t\t\treturn;\n \t\t\t}\n                     \n@@ -1762,32 +1766,40 @@ public static void executeAdminCommand(MapleClient c, String[] sub, char heading\n \t\t\t\tplayer.equipChanged();\n \t\t\t} else {\n \t\t\t\tvictim = c.getChannelServer().getPlayerStorage().getCharacterByName(sub[1]);\n-\t\t\t\tplayer.setHair(Integer.parseInt(sub[2]));\n-\t\t\t\tplayer.equipChanged();\n+                                if(victim == null) {\n+                                        player.yellowMessage(\"Player '\" + sub[1] + \"' has not been found on this channel.\");\n+                                        return;\n+                                }\n+\t\t\t\tvictim.setHair(Integer.parseInt(sub[2]));\n+\t\t\t\tvictim.equipChanged();\n \t\t\t}\n \t\t\tbreak;\n-                    \n                 case \"itemvac\":\n-                    List<MapleMapObject> items = player.getMap().getMapObjectsInRange(player.getPosition(), Double.POSITIVE_INFINITY, Arrays.asList(MapleMapObjectType.ITEM));\n-                    for (MapleMapObject item : items) {\n-                        MapleMapItem mapItem = (MapleMapItem) item;\n-                        if (mapItem.getMeso() > 0) {\n-                            player.gainMeso(mapItem.getMeso(), true);\n-                        } else if (mapItem.getItem().getItemId() >= 5000000 && mapItem.getItem().getItemId() <= 5000100) {\n-                            int petId = MaplePet.createPet(mapItem.getItem().getItemId());\n-                            if (petId == -1) {\n-                                continue;\n-                            }\n-                            MapleInventoryManipulator.addById(c, mapItem.getItem().getItemId(), mapItem.getItem().getQuantity(), null, petId);\n-                        } else {\n-                            MapleInventoryManipulator.addFromDrop(c, mapItem.getItem(), true);\n+                        List<MapleMapObject> list = player.getMap().getMapObjectsInRange(player.getPosition(), Double.POSITIVE_INFINITY, Arrays.asList(MapleMapObjectType.ITEM));\n+                        for (MapleMapObject item : list) {\n+                                player.pickupItem(item);\n                         }\n-                        mapItem.setPickedUp(true);\n-                        player.getMap().removeMapObject(item);\n-                        player.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapItem.getObjectId(), 2, player.getId()), mapItem.getPosition());\n-                    }\n-                    break;\n-                    \n+                        break;\n+                case \"forcevac\":\n+                        List<MapleMapObject> items = player.getMap().getMapObjectsInRange(player.getPosition(), Double.POSITIVE_INFINITY, Arrays.asList(MapleMapObjectType.ITEM));\n+                        for (MapleMapObject item : items) {\n+                                MapleMapItem mapItem = (MapleMapItem) item;\n+                                if (mapItem.getMeso() > 0) {\n+                                        player.gainMeso(mapItem.getMeso(), true);\n+                                } else if (mapItem.getItem().getItemId() >= 5000000 && mapItem.getItem().getItemId() <= 5000100) {\n+                                        int petId = MaplePet.createPet(mapItem.getItem().getItemId());\n+                                        if (petId == -1) {\n+                                                continue;\n+                                        }\n+                                        MapleInventoryManipulator.addById(c, mapItem.getItem().getItemId(), mapItem.getItem().getQuantity(), null, petId);\n+                                } else {\n+                                        MapleInventoryManipulator.addFromDrop(c, mapItem.getItem(), true);\n+                                }\n+                                mapItem.setPickedUp(true);\n+                                player.getMap().removeMapObject(item);\n+                                player.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapItem.getObjectId(), 2, player.getId()), mapItem.getPosition());\n+                        }\n+                        break;\n \t\tcase \"clearquestcache\":\n \t\t\tMapleQuest.clearCache();\n \t\t\tplayer.dropMessage(5, \"Quest Cache Cleared.\");"}, {"sha": "7e58a5bcbd31af7ff168e07b94170b5fbf23a2b9", "filename": "src/net/server/channel/handlers/ItemPickupHandler.java", "status": "modified", "additions": 2, "deletions": 137, "changes": 139, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/net/server/channel/handlers/ItemPickupHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/net/server/channel/handlers/ItemPickupHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/ItemPickupHandler.java?ref=514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "patch": "@@ -22,14 +22,7 @@\n package net.server.channel.handlers;\n \n import net.AbstractMaplePacketHandler;\n-import net.server.world.MaplePartyCharacter;\n-import scripting.item.ItemScriptManager;\n-import server.MapleInventoryManipulator;\n-import server.MapleItemInformationProvider;\n-import server.MapleItemInformationProvider.scriptedItem;\n-import server.maps.MapleMapItem;\n import server.maps.MapleMapObject;\n-import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n import client.MapleCharacter;\n import client.MapleClient;\n@@ -48,135 +41,7 @@ public final void handlePacket(final SeekableLittleEndianAccessor slea, final Ma\n         int oid = slea.readInt();\n         MapleCharacter chr = c.getPlayer();\n         MapleMapObject ob = chr.getMap().getMapObject(oid);\n-        if (ob == null) {\n-            return;\n-        }\n-\t\t\n-        if (ob instanceof MapleMapItem) {\n-            MapleMapItem mapitem = (MapleMapItem) ob;\n-            if(System.currentTimeMillis() - mapitem.getDropTime() < 900) {\n-                c.announce(MaplePacketCreator.enableActions());\n-                return;\n-            }\n-            \n-            boolean hasSpaceInventory = true;\n-            if (mapitem.getItemId() == 4031865 || mapitem.getItemId() == 4031866 || mapitem.getMeso() > 0 || MapleItemInformationProvider.getInstance().isConsumeOnPickup(mapitem.getItemId()) || (hasSpaceInventory = MapleInventoryManipulator.checkSpace(c, mapitem.getItemId(), mapitem.getItem().getQuantity(), mapitem.getItem().getOwner()))) {\n-                if ((chr.getMapId() > 209000000 && chr.getMapId() < 209000016) || (chr.getMapId() >= 990000500 && chr.getMapId() <= 990000502)) {//happyville trees and guild PQ\n-                    if (!mapitem.isPlayerDrop() || mapitem.getDropper().getObjectId() == c.getPlayer().getObjectId()) {\n-                        if(mapitem.getMeso() > 0) {\n-                            chr.gainMeso(mapitem.getMeso(), true, true, false);\n-                            chr.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 2, chr.getId()), mapitem.getPosition());\n-                            chr.getMap().removeMapObject(ob);\n-                            mapitem.setPickedUp(true);\n-                        } else if (MapleInventoryManipulator.addFromDrop(c, mapitem.getItem(), false)) {\n-                            chr.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 2, chr.getId()), mapitem.getPosition());\n-                            chr.getMap().removeMapObject(ob);\n-                            mapitem.setPickedUp(true);\n-                        } else {\n-                            c.announce(MaplePacketCreator.enableActions());\n-                            return;\n-                        }\n-                    } else {\n-                        c.announce(MaplePacketCreator.showItemUnavailable());\n-                        c.announce(MaplePacketCreator.enableActions());\n-                        return;\n-                    }\n-                    c.announce(MaplePacketCreator.enableActions());\n-                    return;\n-                }\n-            \n-                synchronized (mapitem) {\n-                    if (mapitem.getQuest() > 0 && !chr.needQuestItem(mapitem.getQuest(), mapitem.getItemId())) {\n-                        c.announce(MaplePacketCreator.showItemUnavailable());\n-                        c.announce(MaplePacketCreator.enableActions());\n-                        return;\n-                    }\n-                    if (mapitem.isPickedUp()) {\n-                        c.announce(MaplePacketCreator.showItemUnavailable());\n-                        c.announce(MaplePacketCreator.enableActions());\n-                        return;\n-                    }\n-                    if (mapitem.getMeso() > 0) {\n-                        if (chr.getParty() != null) {\n-                            int mesosamm = mapitem.getMeso();\n-                            if (mesosamm > 50000 * chr.getMesoRate()) {\n-                                return;\n-                            }\n-                            int partynum = 0;\n-                            for (MaplePartyCharacter partymem : chr.getParty().getMembers()) {\n-                                if (partymem.isOnline() && partymem.getMapId() == chr.getMap().getId() && partymem.getChannel() == c.getChannel()) {\n-                                    partynum++;\n-                                }\n-                            }\n-                            for (MaplePartyCharacter partymem : chr.getParty().getMembers()) {\n-                                if (partymem.isOnline() && partymem.getMapId() == chr.getMap().getId()) {\n-                                    MapleCharacter somecharacter = c.getChannelServer().getPlayerStorage().getCharacterById(partymem.getId());\n-                                    if (somecharacter != null) {\n-                                        somecharacter.gainMeso(mesosamm / partynum, true, true, false);\n-                                    }\n-                                }\n-                            }\n-                        } else {\n-                            chr.gainMeso(mapitem.getMeso(), true, true, false);\n-                        }\n-                    } else if (mapitem.getItem().getItemId() / 10000 == 243) {\n-                        MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n-                        scriptedItem info = ii.getScriptedItemInfo(mapitem.getItem().getItemId());\n-                        if (info.runOnPickup()) {\n-                            ItemScriptManager ism = ItemScriptManager.getInstance();\n-                            String scriptName = info.getScript();\n-                            if (ism.scriptExists(scriptName)) {\n-                                ism.getItemScript(c, scriptName);\n-                            }\n-\n-                        } else {\n-                            if (!MapleInventoryManipulator.addFromDrop(c, mapitem.getItem(), true)) {\n-                                c.announce(MaplePacketCreator.enableActions());\n-                                return;\n-                            }\n-                        }\n-                    } else if(mapitem.getItemId() == 4031865 || mapitem.getItemId() == 4031866) {\n-                        // Add NX to account, show effect and make item disappear\n-                        chr.getCashShop().gainCash(1, mapitem.getItemId() == 4031865 ? 100 : 250);\n-                    } else if (useItem(c, mapitem.getItem().getItemId())) {\n-                        if (mapitem.getItem().getItemId() / 10000 == 238) {\n-                            chr.getMonsterBook().addCard(c, mapitem.getItem().getItemId());\n-                        }\n-                    } else if (MapleInventoryManipulator.addFromDrop(c, mapitem.getItem(), true)) {\n-                    } else if (mapitem.getItem().getItemId() == 4031868) {\n-                        chr.getMap().broadcastMessage(MaplePacketCreator.updateAriantPQRanking(chr.getName(), chr.getItemQuantity(4031868, false), false));\n-                    } else {\n-                        c.announce(MaplePacketCreator.enableActions());\n-                        return;\n-                    }\n-                    mapitem.setPickedUp(true);\n-                    chr.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 2, chr.getId()), mapitem.getPosition());\n-                    chr.getMap().removeMapObject(ob);\n-                }\n-            } else if(!hasSpaceInventory) {\n-                c.announce(MaplePacketCreator.getInventoryFull());\n-                c.announce(MaplePacketCreator.getShowInventoryFull());\n-            }\n-        }\n-        c.announce(MaplePacketCreator.enableActions());\n-    }\n-\n-    static boolean useItem(final MapleClient c, final int id) {\n-        if (id / 1000000 == 2) {\n-            MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n-            if (ii.isConsumeOnPickup(id)) {\n-                if (id > 2022430 && id < 2022434) {\n-                    for (MapleCharacter mc : c.getPlayer().getMap().getCharacters()) {\n-                        if (mc.getParty() == c.getPlayer().getParty()) {\n-                            ii.getItemEffect(id).applyTo(mc);\n-                        }\n-                    }\n-                } else {\n-                    ii.getItemEffect(id).applyTo(c.getPlayer());\n-                }\n-                return true;\n-            }\n-        }\n-        return false;\n+        \n+        chr.pickupItem(ob);\n     }\n }"}, {"sha": "38a7d2a448c08bbcd2e38fad6401d9a9212498af", "filename": "src/net/server/channel/handlers/PetLootHandler.java", "status": "modified", "additions": 4, "deletions": 118, "changes": 122, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/net/server/channel/handlers/PetLootHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/net/server/channel/handlers/PetLootHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PetLootHandler.java?ref=514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "patch": "@@ -25,20 +25,13 @@\n import client.MapleClient;\n import client.inventory.MaplePet;\n import net.AbstractMaplePacketHandler;\n-import server.MapleInventoryManipulator;\n-import server.maps.MapleMapItem;\n import server.maps.MapleMapObject;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n-import client.inventory.MapleInventoryType;\n-import net.server.world.MaplePartyCharacter;\n-import scripting.item.ItemScriptManager;\n-import server.MapleItemInformationProvider;\n-import server.MapleItemInformationProvider.scriptedItem;\n import constants.ServerConstants;\n \n /**\n- * @author TheRamon\n+ * @author TheRamon, Ronan\n  */\n public final class PetLootHandler extends AbstractMaplePacketHandler {\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n@@ -48,7 +41,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             return;\n         }\n         \n-        MaplePet pet = chr.getPet(chr.getPetIndex(slea.readInt()));//why would it be an int...?\n+        int petIndex = chr.getPetIndex(slea.readInt());\n+        MaplePet pet = chr.getPet(petIndex);\n         if (pet == null || !pet.isSummoned()) {\n             c.announce(MaplePacketCreator.enableActions());\n             return;\n@@ -57,114 +51,6 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         slea.skip(13);\n         int oid = slea.readInt();\n         MapleMapObject ob = chr.getMap().getMapObject(oid);\n-        if (ob == null) {\n-            c.announce(MaplePacketCreator.getInventoryFull());\n-            c.announce(MaplePacketCreator.enableActions());\n-            return;\n-        }\n-        if (ob instanceof MapleMapItem) {\n-            MapleMapItem mapitem = (MapleMapItem) ob;\n-            synchronized (mapitem) {\n-                if (!chr.needQuestItem(mapitem.getQuest(), mapitem.getItemId())) {\n-                    c.announce(MaplePacketCreator.showItemUnavailable());\n-                    c.announce(MaplePacketCreator.enableActions());\n-                    return;\n-                }\n-                if(System.currentTimeMillis() - mapitem.getDropTime() < 900) {\n-                    c.announce(MaplePacketCreator.enableActions());\n-                    return;\n-                } \n-                if (mapitem.isPickedUp()) {\n-                    c.announce(MaplePacketCreator.showItemUnavailable());\n-                    c.announce(MaplePacketCreator.enableActions());\n-                    return;\n-                }\n-                if (mapitem.getDropper() == c.getPlayer()) {\n-                    c.announce(MaplePacketCreator.enableActions());\n-                    return;\n-                }\n-                if (mapitem.getMeso() > 0) {\n-                    if (chr.getParty() != null) {\n-                        int mesosamm = mapitem.getMeso();\n-                        if (mesosamm > 50000 * chr.getMesoRate()) {\n-                            c.announce(MaplePacketCreator.enableActions());\n-                            return;\n-                        }\n-                        int partynum = 0;\n-                        for (MaplePartyCharacter partymem : chr.getParty().getMembers()) {\n-                             if (partymem.isOnline() && partymem.getMapId() == chr.getMap().getId() && partymem.getChannel() == c.getChannel()) {\n-                                 partynum++;\n-                             }\n-                         }\n-                         for (MaplePartyCharacter partymem : chr.getParty().getMembers()) {\n-                              if (partymem.isOnline() && partymem.getMapId() == chr.getMap().getId()) {\n-                                  MapleCharacter somecharacter = c.getChannelServer().getPlayerStorage().getCharacterById(partymem.getId());\n-                                  if (somecharacter != null) somecharacter.gainMeso(mesosamm / partynum, true, true, false);\n-                              }\n-                         }\n-                         chr.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 5, chr.getId(), true, chr.getPetIndex(pet)), mapitem.getPosition());\n-                         chr.getMap().removeMapObject(ob);\n-                    } else if (chr.getInventory(MapleInventoryType.EQUIPPED).findById(1812000) != null) {\n-                        chr.gainMeso(mapitem.getMeso(), true, true, false);\n-                        chr.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 5, chr.getId(), true, chr.getPetIndex(pet)), mapitem.getPosition());\n-                        chr.getMap().removeMapObject(ob);\n-                    } else {\n-                        mapitem.setPickedUp(false);\n-                        c.announce(MaplePacketCreator.enableActions());\n-                        return;\n-                    }\n-                } else if (ItemPickupHandler.useItem(c, mapitem.getItem().getItemId())) {\n-                    if (mapitem.getItem().getItemId() / 10000 == 238) {\n-                        chr.getMonsterBook().addCard(c, mapitem.getItem().getItemId());\n-                    }\n-                    mapitem.setPickedUp(true);\n-                    chr.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 5, chr.getId(), true, chr.getPetIndex(pet)), mapitem.getPosition());\n-                    chr.getMap().removeMapObject(ob);\n-                } else if (mapitem.getItem().getItemId() / 100 == 50000) {\n-                    if (chr.getInventory(MapleInventoryType.EQUIPPED).findById(1812007) != null) {\n-                        for (int i : chr.getExcluded()) {\n-                            if (mapitem.getItem().getItemId() == i) {\n-                                c.announce(MaplePacketCreator.enableActions());\n-                                return;\n-                            }\n-                        }\n-                    } else if (MapleInventoryManipulator.addById(c, mapitem.getItem().getItemId(), mapitem.getItem().getQuantity(), null, -1, mapitem.getItem().getExpiration())) {\n-                        chr.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 5, chr.getId(), true, chr.getPetIndex(pet)), mapitem.getPosition());\n-                        chr.getMap().removeMapObject(ob);\n-                    } else {\n-                        c.announce(MaplePacketCreator.enableActions());\n-                        return;\n-                    }\n-                } else if (mapitem.getItem().getItemId() / 10000 == 243) {\n-                    MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n-                    scriptedItem info = ii.getScriptedItemInfo(mapitem.getItem().getItemId());\n-                    if (info.runOnPickup()) {\n-                        ItemScriptManager ism = ItemScriptManager.getInstance();\n-                        String scriptName = info.getScript();\n-                        if (ism.scriptExists(scriptName))\n-                            ism.getItemScript(c, scriptName);\n-\n-                    } else {\n-                        MapleInventoryManipulator.addFromDrop(c, mapitem.getItem(), true);\n-                    }\n-                    chr.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 5, chr.getId(), true, chr.getPetIndex(pet)), mapitem.getPosition());\n-                    chr.getMap().removeMapObject(ob);\n-                } else if(mapitem.getItemId() == 4031865 || mapitem.getItemId() == 4031866) {\n-                    // Add NX to account, show effect and make item disappear\n-                    chr.getCashShop().gainCash(1, mapitem.getItemId() == 4031865 ? 100 : 250);\n-                    chr.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 5, chr.getId(), true, chr.getPetIndex(pet)), mapitem.getPosition());\n-                    chr.getMap().removeMapObject(ob);\n-                } else if (MapleInventoryManipulator.addFromDrop(c, mapitem.getItem(), true)) {\n-                    chr.getMap().broadcastMessage(MaplePacketCreator.removeItemFromMap(mapitem.getObjectId(), 5, chr.getId(), true, chr.getPetIndex(pet)), mapitem.getPosition());\n-                    chr.getMap().removeMapObject(ob);\n-                } else {\n-                    c.announce(MaplePacketCreator.enableActions());\n-                    return;\n-                }\n-                mapitem.setPickedUp(true);\n-            }\n-        }\n-        \n-        c.announce(MaplePacketCreator.enableActions());\n+        chr.pickupItem(ob, petIndex);\n     }\n }"}, {"sha": "9d8e1b2ff33d26f2da36661dad2b4767f44c2364", "filename": "src/tools/MaplePacketCreator.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/tools/MaplePacketCreator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/514656d238f7d0bcd0d5ce92b4e0cccef8a5e254/src/tools/MaplePacketCreator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MaplePacketCreator.java?ref=514656d238f7d0bcd0d5ce92b4e0cccef8a5e254", "patch": "@@ -5526,7 +5526,7 @@ public static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MaplePe\n                 return mplew.getPacket();\n         }\n \n-        public static byte[] showForeginCardEffect(int id) {\n+        public static byte[] showForeignCardEffect(int id) {\n                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter(7);\n                 mplew.writeShort(SendOpcode.SHOW_FOREIGN_EFFECT.getValue());\n                 mplew.writeInt(id);"}]}]},
