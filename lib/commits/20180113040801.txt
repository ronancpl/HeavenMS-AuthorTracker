{"fetchDate": "2019-12-19", "content": [{"sha": "346d39c03af00bd49243c5b68b16f936911e1c81", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6MzQ2ZDM5YzAzYWYwMGJkNDkyNDNjNWI2OGIxNmY5MzY5MTFlMWM4MQ==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2018-01-13T04:08:01Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2018-01-13T04:08:01Z"}, "message": "More handler updates\n\nMinor review in some handlers with regards to multiple MapleCharacter fetching in their contents. Changed to fetch from a variable containing the target character.", "tree": {"sha": "baef43e042a444d9194164dd10990103fc480ed9", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/baef43e042a444d9194164dd10990103fc480ed9"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/346d39c03af00bd49243c5b68b16f936911e1c81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/346d39c03af00bd49243c5b68b16f936911e1c81", "html_url": "https://github.com/ronancpl/HeavenMS/commit/346d39c03af00bd49243c5b68b16f936911e1c81", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/346d39c03af00bd49243c5b68b16f936911e1c81/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c3f58f41394f8a7c6b7fea29711f4a651450f5", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/c4c3f58f41394f8a7c6b7fea29711f4a651450f5", "html_url": "https://github.com/ronancpl/HeavenMS/commit/c4c3f58f41394f8a7c6b7fea29711f4a651450f5"}], "stats": {"total": 580, "additions": 289, "deletions": 291}, "files": [{"sha": "434a5d8587bfdc779ec61f08dd8a377379dc87bb", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -753,6 +753,8 @@ Corrigido AP reset modificando stats de forma err\n 03 Janeiro 2018,\n Corrigido item megafone permitindo o display de equipamentos n\ufffdo-comercializ\ufffdveis, mesmo marcados como Untradeable.\n \n-10 - 11 Janeiro 2018,\n+10 - 13 Janeiro 2018,\n Incrementado portal de MK Castle agora permitindo uso dos 2 itens poss\ufffdveis.\n-Resolvido alguns logs de erros disparados por mapas nulos no c\ufffddigo-fonte.\n\\ No newline at end of file\n+Resolvido alguns logs de erros disparados por mapas nulos no c\ufffddigo-fonte.\n+Resolvido pequenos problemas de volatidade (nulos) nas referencias ao jogador em alguns handlers.\n+Corrigido alguns problemas com copyright em alguns arquivos.\n\\ No newline at end of file"}, {"sha": "05dfad86cc2c6fe310aebd3d9c086e420e63fc73", "filename": "scripts/npc/2091005.js", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/scripts/npc/2091005.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/scripts/npc/2091005.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2091005.js?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -1,19 +1,20 @@\n /*\n-    This file is part of the HeavenMS (MapleSolaxiaV2) MapleStory Server\n-    Copyleft (L) 2017 RonanLana\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+    Copyleft (L) 2017 RonanLana (HeavenMS)\n \n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU Affero General Public License as\n     published by the Free Software Foundation version 3 as published by\n     the Free Software Foundation. You may not use, modify or distribute\n     this program under any other version of the GNU Affero General Public\n     License.\n-\n     This program is distributed in the hope that it will be useful,\n     but WITHOUT ANY WARRANTY; without even the implied warranty of\n     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     GNU Affero General Public License for more details.\n-\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */"}, {"sha": "e611bbb72a6177f6d06ec19788c84c82045ac305", "filename": "src/net/server/channel/handlers/AutoAggroHandler.java", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/AutoAggroHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/AutoAggroHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/AutoAggroHandler.java?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -37,21 +37,19 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         MapleMap map = c.getPlayer().getMap();\n         int oid = slea.readInt();\n         \n-        try {\n-            MapleMonster monster = map.getMonsterByOid(oid);\n-            if (monster != null && monster.getController() != null) {\n-                if (!monster.isControllerHasAggro()) {\n-                    if (map.getCharacterById(monster.getController().getId()) == null) {\n-                        monster.switchController(c.getPlayer(), true);\n-                    } else {\n-                        monster.switchController(monster.getController(), true);\n-                    }\n-                } else if (map.getCharacterById(monster.getController().getId()) == null) {\n+        MapleMonster monster = map.getMonsterByOid(oid);\n+        if (monster != null && monster.getController() != null) {\n+            if (!monster.isControllerHasAggro()) {\n+                if (map.getCharacterById(monster.getController().getId()) == null) {\n                     monster.switchController(c.getPlayer(), true);\n+                } else {\n+                    monster.switchController(monster.getController(), true);\n                 }\n-            } else if (monster != null && monster.getController() == null) {\n+            } else if (map.getCharacterById(monster.getController().getId()) == null) {\n                 monster.switchController(c.getPlayer(), true);\n             }\n-        } catch(NullPointerException npe) {}\n+        } else if (monster != null && monster.getController() == null) {\n+            monster.switchController(c.getPlayer(), true);\n+        }\n     }\n }"}, {"sha": "f9b60158a7f9a4d88ab9affc7ab82d26251452a1", "filename": "src/net/server/channel/handlers/CloseRangeDamageHandler.java", "status": "modified", "additions": 49, "deletions": 49, "changes": 98, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/CloseRangeDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/CloseRangeDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/CloseRangeDamageHandler.java?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -49,53 +49,53 @@\n public final class CloseRangeDamageHandler extends AbstractDealDamageHandler {\n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-        MapleCharacter player = c.getPlayer();\n-        player.setPetLootCd(System.currentTimeMillis());\n+        MapleCharacter chr = c.getPlayer();\n+        chr.setPetLootCd(System.currentTimeMillis());\n         \n-        /*long timeElapsed = System.currentTimeMillis() - player.getAutobanManager().getLastSpam(8);\n+        /*long timeElapsed = System.currentTimeMillis() - chr.getAutobanManager().getLastSpam(8);\n         if(timeElapsed < 300) {\n-                AutobanFactory.FAST_ATTACK.alert(player, \"Time: \" + timeElapsed);\n+                AutobanFactory.FAST_ATTACK.alert(chr, \"Time: \" + timeElapsed);\n         }\n-        player.getAutobanManager().spam(8);*/\n+        chr.getAutobanManager().spam(8);*/\n         \n-        AttackInfo attack = parseDamage(slea, player, false, false);\n-        if (player.getBuffEffect(MapleBuffStat.MORPH) != null) {\n-            if(player.getBuffEffect(MapleBuffStat.MORPH).isMorphWithoutAttack()) {\n+        AttackInfo attack = parseDamage(slea, chr, false, false);\n+        if (chr.getBuffEffect(MapleBuffStat.MORPH) != null) {\n+            if(chr.getBuffEffect(MapleBuffStat.MORPH).isMorphWithoutAttack()) {\n                 // How are they attacking when the client won't let them?\n-                player.getClient().disconnect(false, false);\n+                chr.getClient().disconnect(false, false);\n                 return; \n             }\n         }\n         \n-        if (c.getPlayer().getDojoEnergy() < 10000 && (attack.skill == 1009 || attack.skill == 10001009 || attack.skill == 20001009)) // PE hacking or maybe just lagging\n+        if (chr.getDojoEnergy() < 10000 && (attack.skill == 1009 || attack.skill == 10001009 || attack.skill == 20001009)) // PE hacking or maybe just lagging\n             return;\n-        if (player.getMap().isDojoMap() && attack.numAttacked > 0) {\n-            player.setDojoEnergy(player.getDojoEnergy() + ServerConstants.DOJO_ENERGY_ATK);\n-            c.announce(MaplePacketCreator.getEnergy(\"energy\", player.getDojoEnergy()));\n+        if (chr.getMap().isDojoMap() && attack.numAttacked > 0) {\n+            chr.setDojoEnergy(chr.getDojoEnergy() + ServerConstants.DOJO_ENERGY_ATK);\n+            c.announce(MaplePacketCreator.getEnergy(\"energy\", chr.getDojoEnergy()));\n         }\n         \n-        player.getMap().broadcastMessage(player, MaplePacketCreator.closeRangeAttack(player, attack.skill, attack.skilllevel, attack.stance, attack.numAttackedAndDamage, attack.allDamage, attack.speed, attack.direction, attack.display), false, true);\n+        chr.getMap().broadcastMessage(chr, MaplePacketCreator.closeRangeAttack(chr, attack.skill, attack.skilllevel, attack.stance, attack.numAttackedAndDamage, attack.allDamage, attack.speed, attack.direction, attack.display), false, true);\n         int numFinisherOrbs = 0;\n-        Integer comboBuff = player.getBuffedValue(MapleBuffStat.COMBO);\n+        Integer comboBuff = chr.getBuffedValue(MapleBuffStat.COMBO);\n         if (GameConstants.isFinisherSkill(attack.skill)) {\n             if (comboBuff != null) {\n                 numFinisherOrbs = comboBuff.intValue() - 1;\n             }\n-            player.handleOrbconsume();\n+            chr.handleOrbconsume();\n         } else if (attack.numAttacked > 0) {\n             if (attack.skill != 1111008 && comboBuff != null) {\n-                int orbcount = player.getBuffedValue(MapleBuffStat.COMBO);\n-                int oid = player.isCygnus() ? DawnWarrior.COMBO : Crusader.COMBO;\n-                int advcomboid = player.isCygnus() ? DawnWarrior.ADVANCED_COMBO : Hero.ADVANCED_COMBO;\n+                int orbcount = chr.getBuffedValue(MapleBuffStat.COMBO);\n+                int oid = chr.isCygnus() ? DawnWarrior.COMBO : Crusader.COMBO;\n+                int advcomboid = chr.isCygnus() ? DawnWarrior.ADVANCED_COMBO : Hero.ADVANCED_COMBO;\n                 Skill combo = SkillFactory.getSkill(oid);\n                 Skill advcombo = SkillFactory.getSkill(advcomboid);\n                 MapleStatEffect ceffect;\n-                int advComboSkillLevel = player.getSkillLevel(advcombo);\n+                int advComboSkillLevel = chr.getSkillLevel(advcombo);\n                 if (advComboSkillLevel > 0) {\n                     ceffect = advcombo.getEffect(advComboSkillLevel);\n                 } else {\n-                    int comboLv = player.getSkillLevel(combo);\n-                    if(comboLv <= 0 || player.isGM()) comboLv = SkillFactory.getSkill(oid).getMaxLevel();\n+                    int comboLv = chr.getSkillLevel(combo);\n+                    if(comboLv <= 0 || chr.isGM()) comboLv = SkillFactory.getSkill(oid).getMaxLevel();\n                     \n                     if(comboLv > 0) ceffect = combo.getEffect(comboLv);\n                     else ceffect = null;\n@@ -109,20 +109,20 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                             }\n                         }\n \n-                        int olv = player.getSkillLevel(oid);\n+                        int olv = chr.getSkillLevel(oid);\n                         if(olv <= 0) olv = SkillFactory.getSkill(oid).getMaxLevel();\n                         \n                         int duration = combo.getEffect(olv).getDuration();\n                         List<Pair<MapleBuffStat, Integer>> stat = Collections.singletonList(new Pair<>(MapleBuffStat.COMBO, neworbcount));\n-                        player.setBuffedValue(MapleBuffStat.COMBO, neworbcount);                 \n-                        duration -= (int) (System.currentTimeMillis() - player.getBuffedStarttime(MapleBuffStat.COMBO));\n+                        chr.setBuffedValue(MapleBuffStat.COMBO, neworbcount);                 \n+                        duration -= (int) (System.currentTimeMillis() - chr.getBuffedStarttime(MapleBuffStat.COMBO));\n                         c.announce(MaplePacketCreator.giveBuff(oid, duration, stat));\n-                        player.getMap().broadcastMessage(player, MaplePacketCreator.giveForeignBuff(player.getId(), stat), false);\n+                        chr.getMap().broadcastMessage(chr, MaplePacketCreator.giveForeignBuff(chr.getId(), stat), false);\n                     }\n                 }\n-            } else if (player.getSkillLevel(player.isCygnus() ? SkillFactory.getSkill(15100004) : SkillFactory.getSkill(5110001)) > 0 && (player.getJob().isA(MapleJob.MARAUDER) || player.getJob().isA(MapleJob.THUNDERBREAKER2))) {\n+            } else if (chr.getSkillLevel(chr.isCygnus() ? SkillFactory.getSkill(15100004) : SkillFactory.getSkill(5110001)) > 0 && (chr.getJob().isA(MapleJob.MARAUDER) || chr.getJob().isA(MapleJob.THUNDERBREAKER2))) {\n                 for (int i = 0; i < attack.numAttacked; i++) {\n-                    player.handleEnergyChargeGain();\n+                    chr.handleEnergyChargeGain();\n                 }\n             }\n         }\n@@ -132,60 +132,60 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             if (dmgIt.hasNext()) {\n                 totDamageToOneMonster = dmgIt.next().get(0).intValue();\n             }\n-            int remainingHP = player.getHp() - totDamageToOneMonster * attack.getAttackEffect(player, null).getX() / 100;\n+            int remainingHP = chr.getHp() - totDamageToOneMonster * attack.getAttackEffect(chr, null).getX() / 100;\n             if (remainingHP > 1) {\n-                player.setHp(remainingHP);\n+                chr.setHp(remainingHP);\n             } else {\n-                player.setHp(1);\n+                chr.setHp(1);\n             }\n-            player.updateSingleStat(MapleStat.HP, player.getHp());\n-            player.checkBerserk(player.isHidden());\n+            chr.updateSingleStat(MapleStat.HP, chr.getHp());\n+            chr.checkBerserk(chr.isHidden());\n         }\n         if (attack.numAttacked > 0 && attack.skill == 1211002) {\n             boolean advcharge_prob = false;\n-            int advcharge_level = player.getSkillLevel(SkillFactory.getSkill(1220010));\n+            int advcharge_level = chr.getSkillLevel(SkillFactory.getSkill(1220010));\n             if (advcharge_level > 0) {\n                 advcharge_prob = SkillFactory.getSkill(1220010).getEffect(advcharge_level).makeChanceResult();\n             }\n             if (!advcharge_prob) {\n-                player.cancelEffectFromBuffStat(MapleBuffStat.WK_CHARGE);\n+                chr.cancelEffectFromBuffStat(MapleBuffStat.WK_CHARGE);\n             }\n         }\n         int attackCount = 1;\n         if (attack.skill != 0) {\n-            attackCount = attack.getAttackEffect(player, null).getAttackCount();\n+            attackCount = attack.getAttackEffect(chr, null).getAttackCount();\n         }\n         if (numFinisherOrbs == 0 && GameConstants.isFinisherSkill(attack.skill)) {\n             return;\n         }\n         if (attack.skill % 10000000 == 1009) { // bamboo\n-            if (c.getPlayer().getDojoEnergy() < 10000) { // PE hacking or maybe just lagging\n+            if (chr.getDojoEnergy() < 10000) { // PE hacking or maybe just lagging\n                 return;\n             }\n             \n-            player.setDojoEnergy(0);\n-            c.announce(MaplePacketCreator.getEnergy(\"energy\", player.getDojoEnergy()));\n+            chr.setDojoEnergy(0);\n+            c.announce(MaplePacketCreator.getEnergy(\"energy\", chr.getDojoEnergy()));\n             c.announce(MaplePacketCreator.serverNotice(5, \"As you used the secret skill, your energy bar has been reset.\"));\n         } else if (attack.skill > 0) {\n             Skill skill = SkillFactory.getSkill(attack.skill);\n-            MapleStatEffect effect_ = skill.getEffect(player.getSkillLevel(skill));\n+            MapleStatEffect effect_ = skill.getEffect(chr.getSkillLevel(skill));\n             if (effect_.getCooldown() > 0) {\n-                if (player.skillIsCooling(attack.skill)) {\n+                if (chr.skillIsCooling(attack.skill)) {\n                     return;\n                 } else {\n                     c.announce(MaplePacketCreator.skillCooldown(attack.skill, effect_.getCooldown()));\n-                    player.addCooldown(attack.skill, System.currentTimeMillis(), effect_.getCooldown() * 1000);\n+                    chr.addCooldown(attack.skill, System.currentTimeMillis(), effect_.getCooldown() * 1000);\n                 }\n             }\n         }\n-        if ((player.getSkillLevel(SkillFactory.getSkill(NightWalker.VANISH)) > 0 || player.getSkillLevel(SkillFactory.getSkill(Rogue.DARK_SIGHT)) > 0) && player.getBuffedValue(MapleBuffStat.DARKSIGHT) != null) {// && player.getBuffSource(MapleBuffStat.DARKSIGHT) != 9101004\n-            player.cancelEffectFromBuffStat(MapleBuffStat.DARKSIGHT);\n-            player.cancelBuffStats(MapleBuffStat.DARKSIGHT);\n-        } else if(player.getSkillLevel(SkillFactory.getSkill(WindArcher.WIND_WALK)) > 0 && player.getBuffedValue(MapleBuffStat.WIND_WALK) != null) {\n-            player.cancelEffectFromBuffStat(MapleBuffStat.WIND_WALK);\n-            player.cancelBuffStats(MapleBuffStat.WIND_WALK);\n+        if ((chr.getSkillLevel(SkillFactory.getSkill(NightWalker.VANISH)) > 0 || chr.getSkillLevel(SkillFactory.getSkill(Rogue.DARK_SIGHT)) > 0) && chr.getBuffedValue(MapleBuffStat.DARKSIGHT) != null) {// && chr.getBuffSource(MapleBuffStat.DARKSIGHT) != 9101004\n+            chr.cancelEffectFromBuffStat(MapleBuffStat.DARKSIGHT);\n+            chr.cancelBuffStats(MapleBuffStat.DARKSIGHT);\n+        } else if(chr.getSkillLevel(SkillFactory.getSkill(WindArcher.WIND_WALK)) > 0 && chr.getBuffedValue(MapleBuffStat.WIND_WALK) != null) {\n+            chr.cancelEffectFromBuffStat(MapleBuffStat.WIND_WALK);\n+            chr.cancelBuffStats(MapleBuffStat.WIND_WALK);\n         }\n         \n-        applyAttack(attack, player, attackCount);\n+        applyAttack(attack, chr, attackCount);\n     }\n }\n\\ No newline at end of file"}, {"sha": "34af281eb9056a919793576aedd840d729762f1f", "filename": "src/net/server/channel/handlers/MagicDamageHandler.java", "status": "modified", "additions": 22, "deletions": 23, "changes": 45, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/MagicDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/MagicDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MagicDamageHandler.java?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -22,7 +22,6 @@\n package net.server.channel.handlers;\n \n import server.MapleStatEffect;\n-import server.TimerManager;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n import client.MapleBuffStat;\n@@ -39,51 +38,51 @@\n public final class MagicDamageHandler extends AbstractDealDamageHandler {\n \t@Override\n \tpublic final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-\t\tMapleCharacter player = c.getPlayer();\n-                player.setPetLootCd(System.currentTimeMillis());\n+\t\tMapleCharacter chr = c.getPlayer();\n+                chr.setPetLootCd(System.currentTimeMillis());\n \n-\t\t/*long timeElapsed = System.currentTimeMillis() - player.getAutobanManager().getLastSpam(8);\n+\t\t/*long timeElapsed = System.currentTimeMillis() - chr.getAutobanManager().getLastSpam(8);\n \t\tif(timeElapsed < 300) {\n-\t\t\tAutobanFactory.FAST_ATTACK.alert(player, \"Time: \" + timeElapsed);\n+\t\t\tAutobanFactory.FAST_ATTACK.alert(chr, \"Time: \" + timeElapsed);\n \t\t}\n-\t\tplayer.getAutobanManager().spam(8);*/\n+\t\tchr.getAutobanManager().spam(8);*/\n \n-\t\tAttackInfo attack = parseDamage(slea, player, false, true);\n+\t\tAttackInfo attack = parseDamage(slea, chr, false, true);\n                 \n-\t\tif (player.getBuffEffect(MapleBuffStat.MORPH) != null) {\n-\t\t\tif(player.getBuffEffect(MapleBuffStat.MORPH).isMorphWithoutAttack()) {\n+\t\tif (chr.getBuffEffect(MapleBuffStat.MORPH) != null) {\n+\t\t\tif(chr.getBuffEffect(MapleBuffStat.MORPH).isMorphWithoutAttack()) {\n \t\t\t\t// How are they attacking when the client won't let them?\n-\t\t\t\tplayer.getClient().disconnect(false, false);\n+\t\t\t\tchr.getClient().disconnect(false, false);\n \t\t\t\treturn; \n \t\t\t}\n \t\t}\n                 \n-                if (player.getMap().isDojoMap() && attack.numAttacked > 0) {\n-                        player.setDojoEnergy(player.getDojoEnergy() +  + ServerConstants.DOJO_ENERGY_ATK);\n-                        c.announce(MaplePacketCreator.getEnergy(\"energy\", player.getDojoEnergy()));\n+                if (chr.getMap().isDojoMap() && attack.numAttacked > 0) {\n+                        chr.setDojoEnergy(chr.getDojoEnergy() +  + ServerConstants.DOJO_ENERGY_ATK);\n+                        c.announce(MaplePacketCreator.getEnergy(\"energy\", chr.getDojoEnergy()));\n                 }\n \n                 int charge = (attack.skill == Evan.FIRE_BREATH || attack.skill == Evan.ICE_BREATH || attack.skill == FPArchMage.BIG_BANG || attack.skill == ILArchMage.BIG_BANG || attack.skill == Bishop.BIG_BANG) ? attack.charge : -1;\n-                byte[] packet = MaplePacketCreator.magicAttack(player, attack.skill, attack.skilllevel, attack.stance, attack.numAttackedAndDamage, attack.allDamage, charge, attack.speed, attack.direction, attack.display);\n+                byte[] packet = MaplePacketCreator.magicAttack(chr, attack.skill, attack.skilllevel, attack.stance, attack.numAttackedAndDamage, attack.allDamage, charge, attack.speed, attack.direction, attack.display);\n \t\t\n-\t\tplayer.getMap().broadcastMessage(player, packet, false, true);\n-\t\tMapleStatEffect effect = attack.getAttackEffect(player, null);\n+\t\tchr.getMap().broadcastMessage(chr, packet, false, true);\n+\t\tMapleStatEffect effect = attack.getAttackEffect(chr, null);\n \t\tSkill skill = SkillFactory.getSkill(attack.skill);\n-\t\tMapleStatEffect effect_ = skill.getEffect(player.getSkillLevel(skill));\n+\t\tMapleStatEffect effect_ = skill.getEffect(chr.getSkillLevel(skill));\n \t\tif (effect_.getCooldown() > 0) {\n-\t\t\tif (player.skillIsCooling(attack.skill)) {\n+\t\t\tif (chr.skillIsCooling(attack.skill)) {\n \t\t\t\treturn;\n \t\t\t} else {\n \t\t\t\tc.announce(MaplePacketCreator.skillCooldown(attack.skill, effect_.getCooldown()));\n-\t\t\t\tplayer.addCooldown(attack.skill, System.currentTimeMillis(), effect_.getCooldown() * 1000);\n+\t\t\t\tchr.addCooldown(attack.skill, System.currentTimeMillis(), effect_.getCooldown() * 1000);\n \t\t\t}\n \t\t}\n-\t\tapplyAttack(attack, player, effect.getAttackCount());\n-\t\tSkill eaterSkill = SkillFactory.getSkill((player.getJob().getId() - (player.getJob().getId() % 10)) * 10000);// MP Eater, works with right job\n-\t\tint eaterLevel = player.getSkillLevel(eaterSkill);\n+\t\tapplyAttack(attack, chr, effect.getAttackCount());\n+\t\tSkill eaterSkill = SkillFactory.getSkill((chr.getJob().getId() - (chr.getJob().getId() % 10)) * 10000);// MP Eater, works with right job\n+\t\tint eaterLevel = chr.getSkillLevel(eaterSkill);\n \t\tif (eaterLevel > 0) {\n \t\t\tfor (Integer singleDamage : attack.allDamage.keySet()) {\n-\t\t\t\teaterSkill.getEffect(eaterLevel).applyPassive(player, player.getMap().getMapObject(singleDamage), 0);\n+\t\t\t\teaterSkill.getEffect(eaterLevel).applyPassive(chr, chr.getMap().getMapObject(singleDamage), 0);\n \t\t\t}\n \t\t}\n \t}"}, {"sha": "7843d5d95c0c42633ac2c11df858b2e78dd1fba6", "filename": "src/net/server/channel/handlers/MoveLifeHandler.java", "status": "modified", "additions": 59, "deletions": 61, "changes": 120, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/MoveLifeHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/MoveLifeHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MoveLifeHandler.java?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -46,71 +46,69 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         \n         int objectid = slea.readInt();\n         short moveid = slea.readShort();\n-        \n-        try {\n-            MapleMapObject mmo = map.getMapObject(objectid);\n-            if (mmo == null || mmo.getType() != MapleMapObjectType.MONSTER) {\n-                return;\n-            }\n-            MapleMonster monster = (MapleMonster) mmo;\n-            List<LifeMovementFragment> res;\n-            byte skillByte = slea.readByte();\n-            byte skill = slea.readByte();\n-            int skill_1 = slea.readByte() & 0xFF;\n-            byte skill_2 = slea.readByte();\n-            byte skill_3 = slea.readByte();\n-            byte skill_4 = slea.readByte();\n-            slea.read(8);\n-            MobSkill toUse = null;\n-            if (skillByte == 1 && monster.getNoSkills() > 0) {\n-                int random = Randomizer.nextInt(monster.getNoSkills());\n-                Pair<Integer, Integer> skillToUse = monster.getSkills().get(random);\n-                toUse = MobSkillFactory.getMobSkill(skillToUse.getLeft(), skillToUse.getRight());\n-                int percHpLeft = (monster.getHp() / monster.getMaxHp()) * 100;\n-                if (toUse.getHP() < percHpLeft || !monster.canUseSkill(toUse)) {\n-                    toUse = null;\n-                }\n-            }\n-            if ((skill_1 >= 100 && skill_1 <= 200) && monster.hasSkill(skill_1, skill_2)) {\n-                MobSkill skillData = MobSkillFactory.getMobSkill(skill_1, skill_2);\n-                if (skillData != null && monster.canUseSkill(skillData)) {\n-                    skillData.applyEffect(c.getPlayer(), monster, true, banishPlayers);\n-                }\n+\n+        MapleMapObject mmo = map.getMapObject(objectid);\n+        if (mmo == null || mmo.getType() != MapleMapObjectType.MONSTER) {\n+            return;\n+        }\n+        MapleMonster monster = (MapleMonster) mmo;\n+        List<LifeMovementFragment> res;\n+        byte skillByte = slea.readByte();\n+        byte skill = slea.readByte();\n+        int skill_1 = slea.readByte() & 0xFF;\n+        byte skill_2 = slea.readByte();\n+        byte skill_3 = slea.readByte();\n+        byte skill_4 = slea.readByte();\n+        slea.read(8);\n+        MobSkill toUse = null;\n+        if (skillByte == 1 && monster.getNoSkills() > 0) {\n+            int random = Randomizer.nextInt(monster.getNoSkills());\n+            Pair<Integer, Integer> skillToUse = monster.getSkills().get(random);\n+            toUse = MobSkillFactory.getMobSkill(skillToUse.getLeft(), skillToUse.getRight());\n+            int percHpLeft = (monster.getHp() / monster.getMaxHp()) * 100;\n+            if (toUse.getHP() < percHpLeft || !monster.canUseSkill(toUse)) {\n+                toUse = null;\n             }\n-            slea.readByte();\n-            slea.readInt(); // whatever\n-            short start_x = slea.readShort(); // hmm.. startpos?\n-            short start_y = slea.readShort(); // hmm...\n-            Point startPos = new Point(start_x, start_y);\n-            res = parseMovement(slea);\n-            if (monster.getController() != c.getPlayer()) {\n-                if (monster.isAttackedBy(c.getPlayer())) {// aggro and controller change\n-                    monster.switchController(c.getPlayer(), true);\n-                } else {\n-                    return;\n-                }\n-            } else if (skill == -1 && monster.isControllerKnowsAboutAggro() && !monster.isMobile() && !monster.isFirstAttack()) {\n-                monster.setControllerHasAggro(false);\n-                monster.setControllerKnowsAboutAggro(false);\n+        }\n+        if ((skill_1 >= 100 && skill_1 <= 200) && monster.hasSkill(skill_1, skill_2)) {\n+            MobSkill skillData = MobSkillFactory.getMobSkill(skill_1, skill_2);\n+            if (skillData != null && monster.canUseSkill(skillData)) {\n+                skillData.applyEffect(c.getPlayer(), monster, true, banishPlayers);\n             }\n-            boolean aggro = monster.isControllerHasAggro();\n-            if (toUse != null) {\n-                    c.announce(MaplePacketCreator.moveMonsterResponse(objectid, moveid, monster.getMp(), aggro, toUse.getSkillId(), toUse.getSkillLevel()));\n+        }\n+        slea.readByte();\n+        slea.readInt(); // whatever\n+        short start_x = slea.readShort(); // hmm.. startpos?\n+        short start_y = slea.readShort(); // hmm...\n+        Point startPos = new Point(start_x, start_y);\n+        res = parseMovement(slea);\n+        if (monster.getController() != c.getPlayer()) {\n+            if (monster.isAttackedBy(c.getPlayer())) {// aggro and controller change\n+                monster.switchController(c.getPlayer(), true);\n             } else {\n-                c.announce(MaplePacketCreator.moveMonsterResponse(objectid, moveid, monster.getMp(), aggro));\n-            }\n-            if (aggro) {\n-                monster.setControllerKnowsAboutAggro(true);\n-            }\n-            if (res != null) {\n-                map.broadcastMessage(c.getPlayer(), MaplePacketCreator.moveMonster(skillByte, skill, skill_1, skill_2, skill_3, skill_4, objectid, startPos, res), monster.getPosition());\n-                updatePosition(res, monster, -1);\n-                map.moveMonster(monster, monster.getPosition());\n+                return;\n             }\n+        } else if (skill == -1 && monster.isControllerKnowsAboutAggro() && !monster.isMobile() && !monster.isFirstAttack()) {\n+            monster.setControllerHasAggro(false);\n+            monster.setControllerKnowsAboutAggro(false);\n+        }\n+        boolean aggro = monster.isControllerHasAggro();\n+        if (toUse != null) {\n+                c.announce(MaplePacketCreator.moveMonsterResponse(objectid, moveid, monster.getMp(), aggro, toUse.getSkillId(), toUse.getSkillLevel()));\n+        } else {\n+            c.announce(MaplePacketCreator.moveMonsterResponse(objectid, moveid, monster.getMp(), aggro));\n+        }\n+        if (aggro) {\n+            monster.setControllerKnowsAboutAggro(true);\n+        }\n+        if (res != null) {\n+            map.broadcastMessage(c.getPlayer(), MaplePacketCreator.moveMonster(skillByte, skill, skill_1, skill_2, skill_3, skill_4, objectid, startPos, res), monster.getPosition());\n+            updatePosition(res, monster, -1);\n+            map.moveMonster(monster, monster.getPosition());\n+        }\n \n-            for (MapleCharacter chr : banishPlayers) {\n-                chr.changeMapBanish(monster.getBanish().getMap(), monster.getBanish().getPortal(), monster.getBanish().getMsg());\n-            }\n-        } catch(NullPointerException npe) {}\n+        for (MapleCharacter chr : banishPlayers) {\n+            chr.changeMapBanish(monster.getBanish().getMap(), monster.getBanish().getPortal(), monster.getBanish().getMsg());\n+        }\n     }\n }"}, {"sha": "7f63bb92bc67dcec5b47496be7070e74c3cec1d7", "filename": "src/net/server/channel/handlers/PetAutoPotHandler.java", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/PetAutoPotHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/PetAutoPotHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PetAutoPotHandler.java?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -1,19 +1,20 @@\n /*\n-    This file is part of the HeavenMS (MapleSolaxiaV2) MapleStory Server\n-    Copyleft (L) 2017 RonanLana\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+    Copyleft (L) 2017 RonanLana (HeavenMS)\n \n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU Affero General Public License as\n     published by the Free Software Foundation version 3 as published by\n     the Free Software Foundation. You may not use, modify or distribute\n     this program under any other version of the GNU Affero General Public\n     License.\n-\n     This program is distributed in the hope that it will be useful,\n     but WITHOUT ANY WARRANTY; without even the implied warranty of\n     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     GNU Affero General Public License for more details.\n-\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n@@ -34,7 +35,7 @@ This file is part of the HeavenMS (MapleSolaxiaV2) MapleStory Server\n \n /**\n  *\n- * @author Ronan\n+ * @author Ronan (multi-pot consumption feature)\n  */\n public final class PetAutoPotHandler extends AbstractMaplePacketHandler {\n     @Override\n@@ -69,14 +70,12 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         if(toUse != null) {\n             MapleStatEffect stat = MapleItemInformationProvider.getInstance().getItemEffect(toUse.getItemId());\n             \n-            if (toUse.getQuantity() <= 0) return;\n+            if (toUse.getQuantity() <= 0 || toUse.getItemId() != itemId) {\n+                c.announce(MaplePacketCreator.enableActions());\n+                return;\n+            }\n             \n             do {\n-                if (toUse.getItemId() != itemId) {\n-                    c.announce(MaplePacketCreator.enableActions());\n-                    return;\n-                }\n-                \n                 MapleInventoryManipulator.removeFromSlot(c, MapleInventoryType.USE, slot, (short) 1, false);\n                 stat.applyTo(chr);\n "}, {"sha": "8b4629302512046a5669ff63879d5918a162555f", "filename": "src/net/server/channel/handlers/RangedAttackHandler.java", "status": "modified", "additions": 50, "deletions": 51, "changes": 101, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/RangedAttackHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/RangedAttackHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/RangedAttackHandler.java?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -24,7 +24,6 @@\n import server.MapleInventoryManipulator;\n import server.MapleItemInformationProvider;\n import server.MapleStatEffect;\n-import server.TimerManager;\n import tools.MaplePacketCreator;\n import tools.Randomizer;\n import tools.data.input.SeekableLittleEndianAccessor;\n@@ -51,47 +50,47 @@\n \n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-        MapleCharacter player = c.getPlayer();\n-        player.setPetLootCd(System.currentTimeMillis());\n+        MapleCharacter chr = c.getPlayer();\n+        chr.setPetLootCd(System.currentTimeMillis());\n \t\t\n-        /*long timeElapsed = System.currentTimeMillis() - player.getAutobanManager().getLastSpam(8);\n+        /*long timeElapsed = System.currentTimeMillis() - chr.getAutobanManager().getLastSpam(8);\n         if(timeElapsed < 300) {\n-            AutobanFactory.FAST_ATTACK.alert(player, \"Time: \" + timeElapsed);\n+            AutobanFactory.FAST_ATTACK.alert(chr, \"Time: \" + timeElapsed);\n         }\n-        player.getAutobanManager().spam(8);*/\n+        chr.getAutobanManager().spam(8);*/\n \t\t\n-        AttackInfo attack = parseDamage(slea, player, true, false);\n+        AttackInfo attack = parseDamage(slea, chr, true, false);\n         \n-        if (player.getBuffEffect(MapleBuffStat.MORPH) != null) {\n-            if(player.getBuffEffect(MapleBuffStat.MORPH).isMorphWithoutAttack()) {\n+        if (chr.getBuffEffect(MapleBuffStat.MORPH) != null) {\n+            if(chr.getBuffEffect(MapleBuffStat.MORPH).isMorphWithoutAttack()) {\n                 // How are they attacking when the client won't let them?\n-                player.getClient().disconnect(false, false);\n+                chr.getClient().disconnect(false, false);\n                 return; \n             }\n         }\n         \n-        if (player.getMap().isDojoMap() && attack.numAttacked > 0) {\n-            player.setDojoEnergy(player.getDojoEnergy() + ServerConstants.DOJO_ENERGY_ATK);\n-            c.announce(MaplePacketCreator.getEnergy(\"energy\", player.getDojoEnergy()));\n+        if (chr.getMap().isDojoMap() && attack.numAttacked > 0) {\n+            chr.setDojoEnergy(chr.getDojoEnergy() + ServerConstants.DOJO_ENERGY_ATK);\n+            c.announce(MaplePacketCreator.getEnergy(\"energy\", chr.getDojoEnergy()));\n         }\n         \n         if (attack.skill == Buccaneer.ENERGY_ORB || attack.skill == ThunderBreaker.SPARK || attack.skill == Shadower.TAUNT || attack.skill == NightLord.TAUNT) {\n-            player.getMap().broadcastMessage(player, MaplePacketCreator.rangedAttack(player, attack.skill, attack.skilllevel, attack.stance, attack.numAttackedAndDamage, 0, attack.allDamage, attack.speed, attack.direction, attack.display), false);\n-            applyAttack(attack, player, 1);\n+            chr.getMap().broadcastMessage(chr, MaplePacketCreator.rangedAttack(chr, attack.skill, attack.skilllevel, attack.stance, attack.numAttackedAndDamage, 0, attack.allDamage, attack.speed, attack.direction, attack.display), false);\n+            applyAttack(attack, chr, 1);\n         } else if (attack.skill == Aran.COMBO_SMASH || attack.skill == Aran.COMBO_FENRIR || attack.skill == Aran.COMBO_TEMPEST) {\n-            player.getMap().broadcastMessage(player, MaplePacketCreator.rangedAttack(player, attack.skill, attack.skilllevel, attack.stance, attack.numAttackedAndDamage, 0, attack.allDamage, attack.speed, attack.direction, attack.display), false);\n-            if (attack.skill == Aran.COMBO_SMASH && player.getCombo() >= 30) {\n-            \tplayer.setCombo((short) 0);\n-            \tapplyAttack(attack, player, 1);\n-            } else if (attack.skill == Aran.COMBO_FENRIR && player.getCombo() >= 100) {\n-            \tplayer.setCombo((short) 0);\n-            \tapplyAttack(attack, player, 2);\n-            } else if (attack.skill == Aran.COMBO_TEMPEST && player.getCombo() >= 200) {\n-            \tplayer.setCombo((short) 0);\n-                applyAttack(attack, player, 4);\n+            chr.getMap().broadcastMessage(chr, MaplePacketCreator.rangedAttack(chr, attack.skill, attack.skilllevel, attack.stance, attack.numAttackedAndDamage, 0, attack.allDamage, attack.speed, attack.direction, attack.display), false);\n+            if (attack.skill == Aran.COMBO_SMASH && chr.getCombo() >= 30) {\n+            \tchr.setCombo((short) 0);\n+            \tapplyAttack(attack, chr, 1);\n+            } else if (attack.skill == Aran.COMBO_FENRIR && chr.getCombo() >= 100) {\n+            \tchr.setCombo((short) 0);\n+            \tapplyAttack(attack, chr, 2);\n+            } else if (attack.skill == Aran.COMBO_TEMPEST && chr.getCombo() >= 200) {\n+            \tchr.setCombo((short) 0);\n+                applyAttack(attack, chr, 4);\n             }\n         } else {\n-            Item weapon = player.getInventory(MapleInventoryType.EQUIPPED).getItem((short) -11);\n+            Item weapon = chr.getInventory(MapleInventoryType.EQUIPPED).getItem((short) -11);\n             MapleWeaponType type = MapleItemInformationProvider.getInstance().getWeaponType(weapon.getItemId());\n             if (type == MapleWeaponType.NOT_A_WEAPON) {\n                 return;\n@@ -101,17 +100,17 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             byte bulletCount = 1;\n             MapleStatEffect effect = null;\n             if (attack.skill != 0) {\n-                effect = attack.getAttackEffect(player, null);\n+                effect = attack.getAttackEffect(chr, null);\n                 bulletCount = effect.getBulletCount();\n                 if (effect.getCooldown() > 0) {\n                     c.announce(MaplePacketCreator.skillCooldown(attack.skill, effect.getCooldown()));\n                 }\n             }\n-            boolean hasShadowPartner = player.getBuffedValue(MapleBuffStat.SHADOWPARTNER) != null;\n+            boolean hasShadowPartner = chr.getBuffedValue(MapleBuffStat.SHADOWPARTNER) != null;\n             if (hasShadowPartner) {\n                 bulletCount *= 2;\n             }\n-            MapleInventory inv = player.getInventory(MapleInventoryType.USE);\n+            MapleInventory inv = chr.getInventory(MapleInventoryType.USE);\n             for (short i = 1; i <= inv.getSlotLimit(); i++) {\n                 Item item = inv.getItem(i);\n                 if (item != null) {\n@@ -122,18 +121,18 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     boolean cbow = ItemConstants.isArrowForCrossBow(id);\n                     if (item.getQuantity() >= bulletCount) { //Fixes the bug where you can't use your last arrow.\n                         if (type == MapleWeaponType.CLAW && ItemConstants.isThrowingStar(id) && weapon.getItemId() != 1472063) {\n-                            if (((id == 2070007 || id == 2070018) && player.getLevel() < 70) || (id == 2070016 && player.getLevel() < 50)) {\n+                            if (((id == 2070007 || id == 2070018) && chr.getLevel() < 70) || (id == 2070016 && chr.getLevel() < 50)) {\n                             } else {\t\n                                 projectile = id;\n                                 break;\n                             }\n                         } else if ((type == MapleWeaponType.GUN && ItemConstants.isBullet(id))) {\n                             if (id == 2331000 && id == 2332000) {\n-                                if (player.getLevel() > 69) {\n+                                if (chr.getLevel() > 69) {\n                                     projectile = id;\n                                     break;\n                                 }\n-                            } else if (player.getLevel() > (id % 10) * 20 + 9) {\n+                            } else if (chr.getLevel() > (id % 10) * 20 + 9) {\n                                 projectile = id;\n                                 break;\n                             }\n@@ -144,8 +143,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     }\n                 }\n             }\n-            boolean soulArrow = player.getBuffedValue(MapleBuffStat.SOULARROW) != null;\n-            boolean shadowClaw = player.getBuffedValue(MapleBuffStat.SHADOW_CLAW) != null;\n+            boolean soulArrow = chr.getBuffedValue(MapleBuffStat.SOULARROW) != null;\n+            boolean shadowClaw = chr.getBuffedValue(MapleBuffStat.SHADOW_CLAW) != null;\n             if (projectile != 0) {\n                 if (!soulArrow && !shadowClaw && attack.skill != 11101004 && attack.skill != 15111007 && attack.skill != 14101006) {\n                     byte bulletConsume = bulletCount;\n@@ -161,7 +160,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             if (projectile != 0 || soulArrow || attack.skill == 11101004 || attack.skill == 15111007 || attack.skill == 14101006) {                \n             \tint visProjectile = projectile; //visible projectile sent to players\n                 if (ItemConstants.isThrowingStar(projectile)) {\n-                    MapleInventory cash = player.getInventory(MapleInventoryType.CASH);\n+                    MapleInventory cash = chr.getInventory(MapleInventoryType.CASH);\n                     for (int i = 1; i <= cash.getSlotLimit(); i++) { // impose order...\n                         Item item = cash.getItem((short) i);\n                         if (item != null) {\n@@ -181,46 +180,46 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     case 3221001: // Pierce\n                     case 5221004: // Rapid Fire\n                     case 13111002: // KoC Hurricane\n-                        packet = MaplePacketCreator.rangedAttack(player, attack.skill, attack.skilllevel, attack.rangedirection, attack.numAttackedAndDamage, visProjectile, attack.allDamage, attack.speed, attack.direction, attack.display);\n+                        packet = MaplePacketCreator.rangedAttack(chr, attack.skill, attack.skilllevel, attack.rangedirection, attack.numAttackedAndDamage, visProjectile, attack.allDamage, attack.speed, attack.direction, attack.display);\n                         break;\n                     default:\n-                        packet = MaplePacketCreator.rangedAttack(player, attack.skill, attack.skilllevel, attack.stance, attack.numAttackedAndDamage, visProjectile, attack.allDamage, attack.speed, attack.direction, attack.display);\n+                        packet = MaplePacketCreator.rangedAttack(chr, attack.skill, attack.skilllevel, attack.stance, attack.numAttackedAndDamage, visProjectile, attack.allDamage, attack.speed, attack.direction, attack.display);\n                         break;\n                 }\n-                player.getMap().broadcastMessage(player, packet, false, true);\n+                chr.getMap().broadcastMessage(chr, packet, false, true);\n                 if (effect != null) {\n                     int money = effect.getMoneyCon();\n                     if (money != 0) {\n                         int moneyMod = money / 2;\n                         money += Randomizer.nextInt(moneyMod);\n-                        if (money > player.getMeso()) {\n-                            money = player.getMeso();\n+                        if (money > chr.getMeso()) {\n+                            money = chr.getMeso();\n                         }\n-                        player.gainMeso(-money, false);\n+                        chr.gainMeso(-money, false);\n                     }\n                 }\n                 if (attack.skill != 0) {\n                     Skill skill = SkillFactory.getSkill(attack.skill);\n-                    MapleStatEffect effect_ = skill.getEffect(player.getSkillLevel(skill));\n+                    MapleStatEffect effect_ = skill.getEffect(chr.getSkillLevel(skill));\n                     if (effect_.getCooldown() > 0) {\n-                        if (player.skillIsCooling(attack.skill)) {\n+                        if (chr.skillIsCooling(attack.skill)) {\n                             return;\n                         } else {\n                             c.announce(MaplePacketCreator.skillCooldown(attack.skill, effect_.getCooldown()));\n-                            player.addCooldown(attack.skill, System.currentTimeMillis(), effect_.getCooldown() * 1000);\n+                            chr.addCooldown(attack.skill, System.currentTimeMillis(), effect_.getCooldown() * 1000);\n                         }\n                     }\n                 }\n                 \n-                if (player.getSkillLevel(SkillFactory.getSkill(NightWalker.VANISH)) > 0 && player.getBuffedValue(MapleBuffStat.DARKSIGHT) != null && attack.numAttacked > 0 && player.getBuffSource(MapleBuffStat.DARKSIGHT) != 9101004) {\n-                    player.cancelEffectFromBuffStat(MapleBuffStat.DARKSIGHT);\n-                    player.cancelBuffStats(MapleBuffStat.DARKSIGHT);\n-                } else if(player.getSkillLevel(SkillFactory.getSkill(WindArcher.WIND_WALK)) > 0 && player.getBuffedValue(MapleBuffStat.WIND_WALK) != null && attack.numAttacked > 0) {\n-                    player.cancelEffectFromBuffStat(MapleBuffStat.WIND_WALK);\n-                    player.cancelBuffStats(MapleBuffStat.WIND_WALK);\n+                if (chr.getSkillLevel(SkillFactory.getSkill(NightWalker.VANISH)) > 0 && chr.getBuffedValue(MapleBuffStat.DARKSIGHT) != null && attack.numAttacked > 0 && chr.getBuffSource(MapleBuffStat.DARKSIGHT) != 9101004) {\n+                    chr.cancelEffectFromBuffStat(MapleBuffStat.DARKSIGHT);\n+                    chr.cancelBuffStats(MapleBuffStat.DARKSIGHT);\n+                } else if(chr.getSkillLevel(SkillFactory.getSkill(WindArcher.WIND_WALK)) > 0 && chr.getBuffedValue(MapleBuffStat.WIND_WALK) != null && attack.numAttacked > 0) {\n+                    chr.cancelEffectFromBuffStat(MapleBuffStat.WIND_WALK);\n+                    chr.cancelBuffStats(MapleBuffStat.WIND_WALK);\n                 }\n                 \n-                applyAttack(attack, player, bulletCount);\n+                applyAttack(attack, chr, bulletCount);\n             }\n         }\n     }"}, {"sha": "df6be698bf463c28c1e366c5583d3fbe7101520e", "filename": "src/net/server/channel/handlers/SpecialMoveHandler.java", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/SpecialMoveHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/SpecialMoveHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/SpecialMoveHandler.java?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -22,11 +22,9 @@\n package net.server.channel.handlers;\n \n import java.awt.Point;\n-import java.util.concurrent.ScheduledFuture;\n \n import net.AbstractMaplePacketHandler;\n import server.MapleStatEffect;\n-import server.TimerManager;\n import server.life.MapleMonster;\n import tools.FilePrinter;\n import tools.MaplePacketCreator;\n@@ -54,25 +52,27 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n     \tMapleCharacter chr = c.getPlayer();\n         chr.getAutobanManager().setTimestamp(4, slea.readInt(), 3);\n         int skillid = slea.readInt();\n+        \n         /*\n-        if ((!GameConstants.isPQSkillMap(c.getPlayer().getMapId()) && GameConstants.isPqSkill(skillid)) || (!c.getPlayer().isGM() && GameConstants.isGMSkills(skillid)) || (!GameConstants.isInJobTree(skillid, c.getPlayer().getJob().getId()) && !c.getPlayer().isGM())) {\n-        \tAutobanFactory.PACKET_EDIT.alert(c.getPlayer(), c.getPlayer().getName() + \" tried to packet edit skills.\");\n-        \tFilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + \".txt\", c.getPlayer().getName() + \" tried to use skill \" + skillid + \" without it being in their job.\\r\\n\");\n+        if ((!GameConstants.isPqSkillMap(chr.getMapId()) && GameConstants.isPqSkill(skillid)) || (!chr.isGM() && GameConstants.isGMSkills(skillid)) || (!GameConstants.isInJobTree(skillid, chr.getJob().getId()) && !chr.isGM())) {\n+        \tAutobanFactory.PACKET_EDIT.alert(chr, chr.getName() + \" tried to packet edit skills.\");\n+        \tFilePrinter.printError(FilePrinter.EXPLOITS + chr.getName() + \".txt\", chr.getName() + \" tried to use skill \" + skillid + \" without it being in their job.\\r\\n\");\n     \t\tc.disconnect(true, false);\n             return;\n         }\n-                */\n+        */\n+        \n         Point pos = null;\n         int __skillLevel = slea.readByte();\n         Skill skill = SkillFactory.getSkill(skillid);\n         int skillLevel = chr.getSkillLevel(skill);\n         if (skillid % 10000000 == 1010 || skillid % 10000000 == 1011) {\n-            if (c.getPlayer().getDojoEnergy() < 10000) { // PE hacking or maybe just lagging\n+            if (chr.getDojoEnergy() < 10000) { // PE hacking or maybe just lagging\n                 return;\n             }\n             skillLevel = 1;\n-            c.getPlayer().setDojoEnergy(0);\n-            c.announce(MaplePacketCreator.getEnergy(\"energy\", c.getPlayer().getDojoEnergy()));\n+            chr.setDojoEnergy(0);\n+            c.announce(MaplePacketCreator.getEnergy(\"energy\", chr.getDojoEnergy()));\n             c.announce(MaplePacketCreator.serverNotice(5, \"As you used the secret skill, your energy bar has been reset.\"));\n         }\n         if (skillLevel == 0 || skillLevel != __skillLevel) return;\n@@ -93,16 +93,16 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             for (int i = 0; i < num; i++) {\n                 mobId = slea.readInt();\n                 success = slea.readByte();\n-                chr.getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showMagnet(mobId, success), false);\n+                chr.getMap().broadcastMessage(chr, MaplePacketCreator.showMagnet(mobId, success), false);\n                 MapleMonster monster = chr.getMap().getMonsterByOid(mobId);\n                 if (monster != null) {\n                 \tif (!monster.isBoss()) {\n-                \t\tmonster.switchController(c.getPlayer(), monster.isControllerHasAggro());\n+                \t\tmonster.switchController(chr, monster.isControllerHasAggro());\n                 \t}\n                 }\n             }\n             byte direction = slea.readByte();\n-            chr.getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showBuffeffect(chr.getId(), skillid, chr.getSkillLevel(skillid), direction), false);\n+            chr.getMap().broadcastMessage(chr, MaplePacketCreator.showBuffeffect(chr.getId(), skillid, chr.getSkillLevel(skillid), direction), false);\n             c.announce(MaplePacketCreator.enableActions());\n             return;\n         } else if (skillid == Brawler.MP_RECOVERY) {// MP Recovery\n@@ -116,7 +116,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             chr.updateSingleStat(MapleStat.MP, chr.getMp());\n         } else if (skillid == Priest.DISPEL || skillid == SuperGM.HEAL_PLUS_DISPEL) {\n             slea.skip((skillid == Priest.DISPEL) ? 10 : 11);\n-            chr.getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showBuffeffect(chr.getId(), skillid, chr.getSkillLevel(skillid)), false);\n+            chr.getMap().broadcastMessage(chr, MaplePacketCreator.showBuffeffect(chr.getId(), skillid, chr.getSkillLevel(skillid)), false);\n         } else if (skillid % 10000000 == 1004) {\n             slea.readShort();\n         }\n@@ -126,11 +126,11 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         }\n         if (chr.isAlive()) {\n             if (skill.getId() != Priest.MYSTIC_DOOR) {\n-                skill.getEffect(skillLevel).applyTo(c.getPlayer(), pos);\n+                skill.getEffect(skillLevel).applyTo(chr, pos);\n             } else if(chr.canDoor()) {\n                 //update door lists\n                 chr.cancelMagicDoor();\n-                skill.getEffect(skillLevel).applyTo(c.getPlayer(), pos);\n+                skill.getEffect(skillLevel).applyTo(chr, pos);\n             } else {\n                 chr.message(\"Please wait 5 seconds before casting Mystic Door again.\");\n                 c.announce(MaplePacketCreator.enableActions());"}, {"sha": "9c5c8ebc4bdb36d2a858b2908f8ffedc3a651ddc", "filename": "src/net/server/channel/handlers/SummonDamageHandler.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/SummonDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/SummonDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/SummonDamageHandler.java?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -28,12 +28,10 @@\n import client.status.MonsterStatusEffect;\n import java.util.ArrayList;\n import java.util.List;\n-import net.AbstractMaplePacketHandler;\n import server.MapleStatEffect;\n import server.life.MapleMonster;\n import server.maps.MapleSummon;\n import tools.MaplePacketCreator;\n-import tools.data.input.LittleEndianAccessor;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n public final class SummonDamageHandler extends AbstractDealDamageHandler {"}, {"sha": "b27b36720f2465cdd1fcb133e3ff6fdd7f377435", "filename": "src/net/server/channel/handlers/TakeDamageHandler.java", "status": "modified", "additions": 59, "deletions": 56, "changes": 115, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/TakeDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/TakeDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/TakeDamageHandler.java?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -63,7 +63,7 @@\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         List<MapleCharacter> banishPlayers = new ArrayList<>();\n         \n-        MapleCharacter player = c.getPlayer();\n+        MapleCharacter chr = c.getPlayer();\n         slea.readInt();\n         byte damagefrom = slea.readByte();\n         slea.readByte(); //Element\n@@ -73,7 +73,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         boolean is_pgmr = false, is_pg = true, is_deadly = false;\n         int mpattack = 0;\n         MapleMonster attacker = null;\n-        final MapleMap map = player.getMap();\n+        final MapleMap map = chr.getMap();\n         if (damagefrom != -3 && damagefrom != -4) {\n             monsteridfrom = slea.readInt();\n \t    oid = slea.readInt();\n@@ -100,17 +100,17 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                             loseItems = assaulter.getStats().loseItem();\n                             if (loseItems != null) {\n                                 MapleInventoryType type;\n-                                final int playerpos = player.getPosition().x;\n+                                final int playerpos = chr.getPosition().x;\n                                 byte d = 1;\n-                                Point pos = new Point(0, player.getPosition().y);\n+                                Point pos = new Point(0, chr.getPosition().y);\n                                 for (loseItem loseItem : loseItems) {\n                                     type = ItemConstants.getInventoryType(loseItem.getId());\n                                     for (byte b = 0; b < loseItem.getX(); b++) {//LOL?\n                                         if (Randomizer.nextInt(101) >= loseItem.getChance()) {\n-                                            if (player.haveItem(loseItem.getId())) {\n+                                            if (chr.haveItem(loseItem.getId())) {\n                                                 pos.x = (int) (playerpos + ((d % 2 == 0) ? (25 * (d + 1) / 2) : -(25 * (d / 2))));\n                                                 MapleInventoryManipulator.removeById(c, type, loseItem.getId(), 1, false, false);\n-                                                map.spawnItemDrop(c.getPlayer(), c.getPlayer(), new Item(loseItem.getId(), (short) 0, (short) 1), map.calcDropPos(pos, player.getPosition()), true, true);\n+                                                map.spawnItemDrop(chr, chr, new Item(loseItem.getId(), (short) 0, (short) 1), map.calcDropPos(pos, chr.getPosition()), true, true);\n                                                 d++;\n                                             } else {\n                                                 break;\n@@ -140,123 +140,126 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             MobAttackInfo attackInfo = MobAttackInfoFactory.getMobAttackInfo(attacker, damagefrom);\n             if (attackInfo != null) {\n \t            if (attackInfo.isDeadlyAttack()) {\n-\t                mpattack = player.getMp() - 1;\n+\t                mpattack = chr.getMp() - 1;\n                         is_deadly = true;\n \t            }\n \t            mpattack += attackInfo.getMpBurn();\n \t            MobSkill skill = MobSkillFactory.getMobSkill(attackInfo.getDiseaseSkill(), attackInfo.getDiseaseLevel());\n \t            if (skill != null && damage > 0) {\n-\t                skill.applyEffect(player, attacker, false, banishPlayers);\n+\t                skill.applyEffect(chr, attacker, false, banishPlayers);\n \t            }\n \t            \n                     attacker.setMp(attacker.getMp() - attackInfo.getMpCon());\n-                    if (player.getBuffedValue(MapleBuffStat.MANA_REFLECTION) != null && damage > 0 && !attacker.isBoss()) {\n-                        int jobid = player.getJob().getId();\n+                    if (chr.getBuffedValue(MapleBuffStat.MANA_REFLECTION) != null && damage > 0 && !attacker.isBoss()) {\n+                        int jobid = chr.getJob().getId();\n                         if (jobid == 212 || jobid == 222 || jobid == 232) {\n                             int id = jobid * 10000 + 1002;\n                             Skill manaReflectSkill = SkillFactory.getSkill(id);\n-                            if (player.isBuffFrom(MapleBuffStat.MANA_REFLECTION, manaReflectSkill) && player.getSkillLevel(manaReflectSkill) > 0 && manaReflectSkill.getEffect(player.getSkillLevel(manaReflectSkill)).makeChanceResult()) {\n-                                int bouncedamage = (damage * manaReflectSkill.getEffect(player.getSkillLevel(manaReflectSkill)).getX() / 100);\n+                            if (chr.isBuffFrom(MapleBuffStat.MANA_REFLECTION, manaReflectSkill) && chr.getSkillLevel(manaReflectSkill) > 0 && manaReflectSkill.getEffect(chr.getSkillLevel(manaReflectSkill)).makeChanceResult()) {\n+                                int bouncedamage = (damage * manaReflectSkill.getEffect(chr.getSkillLevel(manaReflectSkill)).getX() / 100);\n                                 if (bouncedamage > attacker.getMaxHp() / 5) {\n                                     bouncedamage = attacker.getMaxHp() / 5;\n                                 }\n-                                map.damageMonster(player, attacker, bouncedamage);\n-                                map.broadcastMessage(player, MaplePacketCreator.damageMonster(oid, bouncedamage), true);\n-                                player.getClient().announce(MaplePacketCreator.showOwnBuffEffect(id, 5));\n-                                map.broadcastMessage(player, MaplePacketCreator.showBuffeffect(player.getId(), id, 5), false);\n+                                map.damageMonster(chr, attacker, bouncedamage);\n+                                map.broadcastMessage(chr, MaplePacketCreator.damageMonster(oid, bouncedamage), true);\n+                                chr.getClient().announce(MaplePacketCreator.showOwnBuffEffect(id, 5));\n+                                map.broadcastMessage(chr, MaplePacketCreator.showBuffeffect(chr.getId(), id, 5), false);\n                             }\n                         }\n                     }\n \t        }\n         }\n         if (damage == -1) {\n-            fake = 4020002 + (player.getJob().getId() / 10 - 40) * 100000;\n+            fake = 4020002 + (chr.getJob().getId() / 10 - 40) * 100000;\n         }\n         \n         //in dojo player cannot use pot, so deadly attacks should be turned off as well\n-        if(is_deadly && player.getMap().isDojoMap() && !ServerConstants.USE_DEADLY_DOJO) {\n+        if(is_deadly && chr.getMap().isDojoMap() && !ServerConstants.USE_DEADLY_DOJO) {\n             damage = 0;\n             mpattack = 0;\n         }\n         \n         if (damage == 0) {\n-            player.getAutobanManager().addMiss();\n+            chr.getAutobanManager().addMiss();\n         } else {\n-            player.getAutobanManager().resetMisses();\n+            chr.getAutobanManager().resetMisses();\n         }\n-        if (damage > 0 && !player.isHidden()) {\n-            if (attacker != null && damagefrom == -1 && player.getBuffedValue(MapleBuffStat.POWERGUARD) != null) { // PG works on bosses, but only at half of the rate.\n-                int bouncedamage = (int) (damage * (player.getBuffedValue(MapleBuffStat.POWERGUARD).doubleValue() / (attacker.isBoss() ? 200 : 100)));\n+        if (damage > 0 && !chr.isHidden()) {\n+            if (attacker != null && damagefrom == -1 && chr.getBuffedValue(MapleBuffStat.POWERGUARD) != null) { // PG works on bosses, but only at half of the rate.\n+                int bouncedamage = (int) (damage * (chr.getBuffedValue(MapleBuffStat.POWERGUARD).doubleValue() / (attacker.isBoss() ? 200 : 100)));\n                 bouncedamage = Math.min(bouncedamage, attacker.getMaxHp() / 10);\n                 damage -= bouncedamage;\n-                map.damageMonster(player, attacker, bouncedamage);\n-                map.broadcastMessage(player, MaplePacketCreator.damageMonster(oid, bouncedamage), false, true);\n-                player.checkMonsterAggro(attacker);\n+                map.damageMonster(chr, attacker, bouncedamage);\n+                map.broadcastMessage(chr, MaplePacketCreator.damageMonster(oid, bouncedamage), false, true);\n+                chr.checkMonsterAggro(attacker);\n             }\n-            if (attacker != null && damagefrom == -1 && player.getBuffedValue(MapleBuffStat.BODY_PRESSURE) != null) {\n+            if (attacker != null && damagefrom == -1 && chr.getBuffedValue(MapleBuffStat.BODY_PRESSURE) != null) {\n                 Skill skill = SkillFactory.getSkill(Aran.BODY_PRESSURE);\n-                final MapleStatEffect eff = skill.getEffect(player.getSkillLevel(skill));\n+                final MapleStatEffect eff = skill.getEffect(chr.getSkillLevel(skill));\n                 if (!attacker.alreadyBuffedStats().contains(MonsterStatus.NEUTRALISE)) {\n                     if (!attacker.isBoss() && eff.makeChanceResult()) {\n-                    \tattacker.applyStatus(player, new MonsterStatusEffect(Collections.singletonMap(MonsterStatus.NEUTRALISE, 1), skill, null, false), false, (eff.getDuration()/10) * 2, false);\n+                    \tattacker.applyStatus(chr, new MonsterStatusEffect(Collections.singletonMap(MonsterStatus.NEUTRALISE, 1), skill, null, false), false, (eff.getDuration()/10) * 2, false);\n                     }\n                 }\n             }\n             if (damagefrom != -3 && damagefrom != -4) {\n                 int achilles = 0;\n                 Skill achilles1 = null;\n-                int jobid = player.getJob().getId();\n+                int jobid = chr.getJob().getId();\n                 if (jobid < 200 && jobid % 10 == 2) {\n                     achilles1 = SkillFactory.getSkill(jobid * 10000 + (jobid == 112 ? 4 : 5));\n-                    achilles = player.getSkillLevel(achilles1);\n+                    achilles = chr.getSkillLevel(achilles1);\n                 }\n                 if (achilles != 0 && achilles1 != null) {\n                     damage *= (achilles1.getEffect(achilles).getX() / 1000.0);\n                 }\n             }\n-            Integer mesoguard = player.getBuffedValue(MapleBuffStat.MESOGUARD);\n-            if (player.getBuffedValue(MapleBuffStat.MAGIC_GUARD) != null && mpattack == 0) {\n-                int mploss = (int) (damage * (player.getBuffedValue(MapleBuffStat.MAGIC_GUARD).doubleValue() / 100.0));\n+            Integer mesoguard = chr.getBuffedValue(MapleBuffStat.MESOGUARD);\n+            if (chr.getBuffedValue(MapleBuffStat.MAGIC_GUARD) != null && mpattack == 0) {\n+                int mploss = (int) (damage * (chr.getBuffedValue(MapleBuffStat.MAGIC_GUARD).doubleValue() / 100.0));\n                 int hploss = damage - mploss;\n-                if (mploss > player.getMp()) {\n-                    hploss += mploss - player.getMp();\n-                    mploss = player.getMp();\n+                \n+                int curmp = chr.getMp();\n+                if (mploss > curmp) {\n+                    hploss += mploss - curmp;\n+                    mploss = curmp;\n                 }\n-                player.addMPHP(-hploss, -mploss);\n+                \n+                chr.addMPHP(-hploss, -mploss);\n             } else if (mesoguard != null) {\n                 damage = Math.round(damage / 2);\n                 int mesoloss = (int) (damage * (mesoguard.doubleValue() / 100.0));\n-                if (player.getMeso() < mesoloss) {\n-                    player.gainMeso(-player.getMeso(), false);\n-                    player.cancelBuffStats(MapleBuffStat.MESOGUARD);\n+                if (chr.getMeso() < mesoloss) {\n+                    chr.gainMeso(-chr.getMeso(), false);\n+                    chr.cancelBuffStats(MapleBuffStat.MESOGUARD);\n                 } else {\n-                    player.gainMeso(-mesoloss, false);\n+                    chr.gainMeso(-mesoloss, false);\n                 }\n-                player.addMPHP(-damage, -mpattack);\n+                chr.addMPHP(-damage, -mpattack);\n             } else {\n-                if (player.getBuffedValue(MapleBuffStat.MONSTER_RIDING) != null) {\n-                    if (player.getBuffedValue(MapleBuffStat.MONSTER_RIDING).intValue() == Corsair.BATTLE_SHIP) {\n-                        player.decreaseBattleshipHp(damage);\n+                if (chr.getBuffedValue(MapleBuffStat.MONSTER_RIDING) != null) {\n+                    if (chr.getBuffedValue(MapleBuffStat.MONSTER_RIDING).intValue() == Corsair.BATTLE_SHIP) {\n+                        chr.decreaseBattleshipHp(damage);\n                     }\n                 }\n-                player.addMPHP(-damage, -mpattack);\n+                chr.addMPHP(-damage, -mpattack);\n             }\n         }\n-        if (!player.isHidden()) {\n-            map.broadcastMessage(player, MaplePacketCreator.damagePlayer(damagefrom, monsteridfrom, player.getId(), damage, fake, direction, is_pgmr, pgmr, is_pg, oid, pos_x, pos_y), false);\n-            player.checkBerserk(true);\n+        if (!chr.isHidden()) {\n+            map.broadcastMessage(chr, MaplePacketCreator.damagePlayer(damagefrom, monsteridfrom, chr.getId(), damage, fake, direction, is_pgmr, pgmr, is_pg, oid, pos_x, pos_y), false);\n+            chr.checkBerserk(true);\n         }\n         else {\n-            map.broadcastGMMessage(player, MaplePacketCreator.damagePlayer(damagefrom, monsteridfrom, player.getId(), damage, fake, direction, is_pgmr, pgmr, is_pg, oid, pos_x, pos_y), false);\n-            player.checkBerserk(false);\n+            map.broadcastGMMessage(chr, MaplePacketCreator.damagePlayer(damagefrom, monsteridfrom, chr.getId(), damage, fake, direction, is_pgmr, pgmr, is_pg, oid, pos_x, pos_y), false);\n+            chr.checkBerserk(false);\n         }\n         if (GameConstants.isDojo(map.getId())) {\n-            player.setDojoEnergy(player.getDojoEnergy() + ServerConstants.DOJO_ENERGY_DMG);\n-            c.announce(MaplePacketCreator.getEnergy(\"energy\", player.getDojoEnergy()));\n+            chr.setDojoEnergy(chr.getDojoEnergy() + ServerConstants.DOJO_ENERGY_DMG);\n+            c.announce(MaplePacketCreator.getEnergy(\"energy\", chr.getDojoEnergy()));\n         }\n         \n-        for (MapleCharacter chr : banishPlayers) {  // chill, if this list ever gets non-empty an attacker does exist, trust me :)\n-            chr.changeMapBanish(attacker.getBanish().getMap(), attacker.getBanish().getPortal(), attacker.getBanish().getMsg());\n+        for (MapleCharacter player : banishPlayers) {  // chill, if this list ever gets non-empty an attacker does exist, trust me :)\n+            player.changeMapBanish(attacker.getBanish().getMap(), attacker.getBanish().getPortal(), attacker.getBanish().getMsg());\n         }\n     }\n }"}, {"sha": "fc2cd68b6e9c80cd566f7e7acaada1c3759a28d2", "filename": "src/net/server/channel/handlers/TouchMonsterDamageHandler.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/TouchMonsterDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/src/net/server/channel/handlers/TouchMonsterDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/TouchMonsterDamageHandler.java?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -21,16 +21,17 @@\n */\n package net.server.channel.handlers;\n \n-import net.server.channel.handlers.AbstractDealDamageHandler;\n import client.MapleBuffStat;\n import client.MapleClient;\n+import client.MapleCharacter;\n import tools.data.input.SeekableLittleEndianAccessor;\n \n public final class TouchMonsterDamageHandler extends AbstractDealDamageHandler {\n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n-        if (c.getPlayer().getEnergyBar() == 15000 || c.getPlayer().getBuffedValue(MapleBuffStat.BODY_PRESSURE) != null) {\n-            applyAttack(parseDamage(slea, c.getPlayer(), false, false), c.getPlayer(), 1);\n+        MapleCharacter chr = c.getPlayer();\n+        if (chr.getEnergyBar() == 15000 || chr.getBuffedValue(MapleBuffStat.BODY_PRESSURE) != null) {\n+            applyAttack(parseDamage(slea, chr, false, false), c.getPlayer(), 1);\n         }\n     }\n }"}, {"sha": "5a466530e4c9ecf0932ad41f9b1d86cf0426a5b7", "filename": "src/server/MapleStorageInventory.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/346d39c03af00bd49243c5b68b16f936911e1c81/src/server/MapleStorageInventory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/346d39c03af00bd49243c5b68b16f936911e1c81/src/server/MapleStorageInventory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleStorageInventory.java?ref=346d39c03af00bd49243c5b68b16f936911e1c81", "patch": "@@ -253,12 +253,12 @@ private void moveItem(short src, short dst) {\n         if(dst > this.getSlotLimit()) {\n             return;\n         }\n-        MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();\n+        \n         Item source = this.getItem(src);\n         if (source == null) {\n             return;\n         }\n-        short slotMax = ii.getSlotMax(c, source.getItemId());\n+        short slotMax = MapleItemInformationProvider.getInstance().getSlotMax(c, source.getItemId());\n         this.move(src, dst, slotMax);\n     }\n "}]}]},
