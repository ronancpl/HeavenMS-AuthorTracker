{"fetchDate": "2019-12-19", "content": [{"sha": "80cd240ab8ab77ea06f6674cea28316340f96291", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6ODBjZDI0MGFiOGFiNzdlYTA2ZjY2NzRjZWEyODMxNjM0MGY5NjI5MQ==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-10-12T20:13:03Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-10-12T20:13:03Z"}, "message": "Channel Services + Mob Movement patch + Portal map scripts\n\nRefactored several schedulers within the channel class, now running within their own service modules.\nFixed a case where mob movements would get mistakably processed for other than the target mob during a map transition, leading to weird movements on the mob in the entered area.\nAdded usage of foreign key for petid's.\nImplemented functionality for \"Hair Membership\" coupons.\nFixed skill Body Pressure not applying the chance to neutralise on touch.\nFixed quest related to NPC Shaman Rock not completing due to unmatched progress.\nFixed an issue with updating title progress \"Touch the Sky\".", "tree": {"sha": "2a55af85736e7bcbb0e79dce09f1ab8ec004fc40", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/2a55af85736e7bcbb0e79dce09f1ab8ec004fc40"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/80cd240ab8ab77ea06f6674cea28316340f96291", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/80cd240ab8ab77ea06f6674cea28316340f96291", "html_url": "https://github.com/ronancpl/HeavenMS/commit/80cd240ab8ab77ea06f6674cea28316340f96291", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/80cd240ab8ab77ea06f6674cea28316340f96291/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b93c9ce1d6dca9fa65908204341bfc4c08ccd771", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/b93c9ce1d6dca9fa65908204341bfc4c08ccd771", "html_url": "https://github.com/ronancpl/HeavenMS/commit/b93c9ce1d6dca9fa65908204341bfc4c08ccd771"}], "stats": {"total": 1968, "additions": 1192, "deletions": 776}, "files": [{"sha": "7ba64be0d395670802d380f1ce1d36fe7225092f", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/README.md", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/README.md", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/README.md?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -12,6 +12,8 @@ Being a NetBeans 8.2 Project, this means that it's easier to install the project\n \n In this project, many gameplay-wise issues generated from either the original WZ files and the server source have been partially or completely solved. Considering the use of the provided edited WZ's and server-side wz.xml files should be of the greatest importance when dealing with this instance of server source, in order to perceive it at it's full potential. My opinion, though!\n \n+- In other case, as fallback from the provided ones, consider using **whole clean set**. Selecting part of the provided ones to play pretty much *may eventually* lead to unexpected issues.\n+\n The main objective of this project is to try as best as possible to recreate what once was the original MapleStory v83, while adding up some flavors that spices up the gameplay. In other words, aim to get the best of the MapleStory of that era.\n \n ---"}, {"sha": "7a8ac3c0671ad27068e0084c8de141556927a814", "filename": "config.yaml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/config.yaml", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/config.yaml", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/config.yaml?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -310,7 +310,6 @@ server:\n     MAX_AP: 32767                               #Max AP allotted on the auto-assigner.\n     MAX_EVENT_LEVELS: 8                         #Event has different levels of rewarding system.\n     BLOCK_NPC_RACE_CONDT: 500   # (0.5 * 1000) Time the player client must wait before reopening a conversation with an NPC.\n-    PET_LOOT_UPON_ATTACK: 700   # (0.7 * 1000) Time the pet must wait before trying to pick items up.\n     TOT_MOB_QUEST_REQUIREMENT: 77               #Overwrites old 999-mobs requirement for the ToT questline with new requirement value, set 0 for default.\n     MOB_REACTOR_REFRESH_TIME: 30000         # (30 * 1000) Overwrites refresh time for those reactors oriented to inflict damage to bosses (Ice Queen, Riche), set 0 for default.\n     PARTY_SEARCH_REENTRY_LIMIT: 10              #Max amount of times a party leader is allowed to persist on the Party Search before entry expiration (thus needing to manually restart the Party Search to be able to search for members)."}, {"sha": "4cb1acf7974cda77fb0f7b70a8690e4bfbdfe407", "filename": "docs/issues.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/docs/issues.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/docs/issues.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/issues.txt?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -18,6 +18,7 @@ Known issues:\n - Reportedly, there are cases where mob positions fail to sync between player's client-view.\n - Visual equip EXP watch value will present stuttering for early levels requirement (EXP needed less than 100), and requirement at level 200 will not progress at all due to the level cap in client.\n - Monster Magnet will crash the player when trying to pull fixed monsters.\n+- Some magic skills such as \"Energy Bolt\" or \"Holy Arrow\" doesn't display damage to other players when the attacks come from close range to the targeted mob. Oddly enough, using \"closeRangeAttack\" packet seems to clear the issue on most skills, however in others \"Error 5\" crash renders this unusable.\n ---------------------------\n \n ---------------------------"}, {"sha": "8e9a567bb38cbd9792a1402980ca08d554fc668c", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -2180,4 +2180,20 @@ Corrigido an\u00e1lise de alerta de HP/MP lado-servidor n\u00e3o contando com os atribut\n 03 Outubro 2019,\n Corrigido skill \"Energy Charge\" levando atualiza\u00e7\u00e3o de buff ao tocar em mobs, levando a casos onde o buff nos stats poderia inesperadamente ficar retido al\u00e9m do tempo de atua\u00e7\u00e3o previsto.\n Substitu\u00eddo utiliza\u00e7\u00e3o de \"Jackson annotations + SnakeYaml\" por \"YamlBeans\", utilizando-se assim menos artefatos JARs no processo (anteriormente 5, agora somente 1). Nota: na transi\u00e7\u00e3o, fora constatado que a utiliza\u00e7\u00e3o da tecnologia anterior era mais permissiva perante o arquivo de configura\u00e7\u00f5es, por\u00e9m estrutura do novo arquivo foi normalizado e est\u00e1 agora funcional.\n-Refatorado inicializa\u00e7\u00e3o de eventos ao iniciar o servidor, em busca de melhorar o tempo de startup.\n\\ No newline at end of file\n+Refatorado inicializa\u00e7\u00e3o de eventos ao iniciar o servidor, em busca de melhorar o tempo de startup.\n+\n+05 - 08 Outubro 2019,\n+Refatorado os diversos schedulers que estavam presentes na classe de canais, agora abstra\u00eddas e atuando dentro de servi\u00e7os.\n+Corrigido circunst\u00e2ncia onde movimentos de mobs poderiam estar sendo processados enquanto jogador est\u00e1 transitando mapas, levando a poss\u00edvel inconsist\u00eancia na aplica\u00e7\u00e3o de movimento do mob na \u00e1rea acessada.\n+\n+10 - 12 Outubro 2019,\n+Modificado uso de \"default\" de petid nos itens de invent\u00e1rio armazenados na DB (de -1 para nulo), assim permitindo criar chaves \u00fanicas.\n+Adicionado uso de chaves estrangeiras para o petid.\n+Implementado c\u00f3digo de suporte para cupons de \"associa\u00e7\u00e3o\" de cosm\u00e9ticos de cabelo.\n+Corrigido bug recente em bosses com atributo \"link\" sem HPbar sendo detectados como possuindo HPbar, se o mob base possui.\n+Corrigido bug recente na skill \"Body Pressure\" n\u00e3o aplicando a sua passiva com chance de neutralizar ao tocar mobs.\n+Corrigido quest com NPC \"Shaman Rock\" aplicando progresso que n\u00e3o corresponde com o esperado (progresso extra agora movido para um novo questid).\n+Adicionado m\u00e9todo que permite executar scripts de mapa no sistema de scripts de portal.\n+Corrigido problema recente ao referenciar script com progresso \"Touch the Sky\" (script de portal utilizando m\u00e9todos de scripts de mapa).\n+Adicionado fallback para scripts de NPC MapleTV.\n+Revisado aplica\u00e7\u00e3o e abordagem deste c\u00f3digo-base nos arquivos XML legado.\n\\ No newline at end of file"}, {"sha": "815a15c05c7f17ed4523be888cededb1a1818c45", "filename": "scripts/map/onUserEnter/highposition.js", "status": "renamed", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/map/onUserEnter/highposition.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/map/onUserEnter/highposition.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/map/onUserEnter/highposition.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -1,6 +1,8 @@\n /*\n-    This file is part of the HeavenMS MapleStory Server\n-    Copyleft (L) 2016 - 2018 RonanLana\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n \n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU Affero General Public License as\n@@ -17,20 +19,11 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.task;\n \n-import net.server.audit.locks.MonitoredLockType;\n-\n-/**\n+/*\n+ * Author: kevintjuh93\n  *\n- * @author Ronan\n- */\n-public class MobMistScheduler extends BaseScheduler {\n-    public MobMistScheduler() {\n-        super(MonitoredLockType.CHANNEL_MOBMIST);\n-    }\n-    \n-    public void registerMistCancelAction(Runnable runAction, long delay) {\n-        registerEntry(runAction, runAction, delay);\n-    }\n+*/\n+function start(ms) {\n+\tms.touchTheSky();\n }", "previous_filename": "src/net/server/channel/task/MobMistScheduler.java"}, {"sha": "2984176cd9e9f823c85c8c00e621b09d7935b044", "filename": "scripts/npc/1012103.js", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/1012103.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/1012103.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1012103.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -72,7 +72,10 @@ function action(mode, type, selection) {\n         } else if (status == 2){\n             cm.dispose();\n             if (beauty == 1){\n-                if (cm.haveItem(5150001)){\n+                if (cm.haveItem(5420002)){\n+                    cm.setHair(hairnew[selection]);\n+                    cm.sendOk(\"Enjoy your new and improved hairstyle!\");\n+                } else if (cm.haveItem(5150001)){\n                     cm.gainItem(5150001, -1);\n                     cm.setHair(hairnew[selection]);\n                     cm.sendOk(\"Enjoy your new and improved hairstyle!\");"}, {"sha": "62de216d0c1d5ba0e0e848e414233e6918572ed4", "filename": "scripts/npc/1052100.js", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/1052100.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/1052100.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1052100.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -78,7 +78,10 @@ function action(mode, type, selection) {\n         else if (status == 2){\n             cm.dispose();\n             if (beauty == 1){\n-                if (cm.haveItem(5150003)){\n+                if (cm.haveItem(5420003)){\n+                    cm.setHair(hairnew[selection]);\n+                    cm.sendOk(\"Enjoy your new and improved hairstyle!\");\n+                } else if (cm.haveItem(5150003)){\n                     cm.gainItem(5150003, -1);\n                     cm.setHair(hairnew[selection]);\n                     cm.sendOk(\"Enjoy your new and improved hairstyle!\");"}, {"sha": "c5d98a2b9fdec0ab9dd244865530ec97a0d0941b", "filename": "scripts/npc/1063012.js", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/1063012.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/1063012.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1063012.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -21,6 +21,9 @@\n */\n var status = -1;\n \n+/*\n+Custom Quest 100300\n+*/\n function activateShamanRock(slot,progress) {\n     var ch = progress[slot];\n     if(ch == '0') {\n@@ -45,10 +48,10 @@ function start() {\n         else if(map == 105070000) activateShamanRock(2,progress);\n         \n         else if(map == 105090000) { // workaround... TWO SAME NPC ID ON SAME MAP\n-            var npcOid = cm.getQuestProgressInt(2236, 1);\n+            var npcOid = cm.getQuestProgressInt(100300, 1);\n             if (npcOid == 0) {\n                 activateShamanRock(3,progress);\n-                cm.setQuestProgress(2236, 1, cm.getNpcObjectId());\n+                cm.setQuestProgress(100300, 1, cm.getNpcObjectId());\n             } else if (cm.getNpcObjectId() != npcOid) {\n                 activateShamanRock(4,progress);\n             }"}, {"sha": "c5d98a2b9fdec0ab9dd244865530ec97a0d0941b", "filename": "scripts/npc/1063013.js", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/1063013.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/1063013.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1063013.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -21,6 +21,9 @@\n */\n var status = -1;\n \n+/*\n+Custom Quest 100300\n+*/\n function activateShamanRock(slot,progress) {\n     var ch = progress[slot];\n     if(ch == '0') {\n@@ -45,10 +48,10 @@ function start() {\n         else if(map == 105070000) activateShamanRock(2,progress);\n         \n         else if(map == 105090000) { // workaround... TWO SAME NPC ID ON SAME MAP\n-            var npcOid = cm.getQuestProgressInt(2236, 1);\n+            var npcOid = cm.getQuestProgressInt(100300, 1);\n             if (npcOid == 0) {\n                 activateShamanRock(3,progress);\n-                cm.setQuestProgress(2236, 1, cm.getNpcObjectId());\n+                cm.setQuestProgress(100300, 1, cm.getNpcObjectId());\n             } else if (cm.getNpcObjectId() != npcOid) {\n                 activateShamanRock(4,progress);\n             }"}, {"sha": "7d9cbbfc2e98112ce9b8116d0ef54445475456bc", "filename": "scripts/npc/2010001.js", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/2010001.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/2010001.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2010001.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -83,7 +83,10 @@ function action(mode, type, selection) {\n         else if (status == 2){\n             cm.dispose();\n             if (beauty == 1){\n-                if (cm.haveItem(5150005) == true){\n+                if (cm.haveItem(5420004)){\n+                    cm.setHair(hairnew[selection]);\n+                    cm.sendOk(\"Enjoy your new and improved hairstyle!\");\n+                } else if (cm.haveItem(5150005) == true){\n                     cm.gainItem(5150005, -1);\n                     cm.setHair(hairnew[selection]);\n                     cm.sendOk(\"Enjoy your new and improved hairstyle!\");"}, {"sha": "46646dacf4e41d416b5cfae83c69dffce8390acd", "filename": "scripts/npc/2041007.js", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/2041007.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/2041007.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2041007.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -81,7 +81,10 @@ function action(mode, type, selection) {\n         else if (status == 2){\n             cm.dispose();\n             if (beauty == 1){\n-                if (cm.haveItem(5150007) == true){\n+                if (cm.haveItem(5420005)){\n+                    cm.setHair(hairnew[selection]);\n+                    cm.sendOk(\"Enjoy your new and improved hairstyle!\");\n+                } else if (cm.haveItem(5150007) == true){\n                     cm.gainItem(5150007, -1);\n                     cm.setHair(hairnew[selection]);\n                     cm.sendOk(\"Enjoy your new and improved hairstyle!\");"}, {"sha": "b4320132c21fa390a8c1f755bf509f6306e3524d", "filename": "scripts/npc/2090100.js", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/2090100.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/2090100.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2090100.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -81,7 +81,10 @@ function action(mode, type, selection) {\n         else if (status == 2){\n             cm.dispose();\n             if (beauty == 1){\n-                if (cm.haveItem(5150025)){\n+                if (cm.haveItem(5420006)){\n+                    cm.setHair(hairnew[selection]);\n+                    cm.sendOk(\"Enjoy your new and improved hairstyle!\");\n+                } else if (cm.haveItem(5150025)){\n                     cm.gainItem(5150025, -1);\n                     cm.setHair(hairnew[selection]);\n                     cm.sendOk(\"Enjoy your new and improved hairstyle!\");"}, {"sha": "7f4b75ea3d901b64c8091eeb21b20e637784c608", "filename": "scripts/npc/2111013.js", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/2111013.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/2111013.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2111013.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -40,7 +40,6 @@ function action(mode, type, selection) {\n     \n                 if(status == 0) {\n                         if(cm.isQuestStarted(3311)) {\n-                                var slot = 2;\n                                 var progress = cm.getQuestProgressInt(3311);\n                                 \n                                 if (progress == 4) {"}, {"sha": "f6e1e7310d4021a65352a33d45350ac20d91d5ef", "filename": "scripts/npc/2111014.js", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/2111014.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/2111014.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2111014.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -40,7 +40,6 @@ function action(mode, type, selection) {\n     \n                 if(status == 0) {\n                         if(cm.isQuestStarted(3311)) {\n-                                var slot = 0;\n                                 var progress = cm.getQuestProgressInt(3311);\n                                 \n                                 if (progress == 4) {"}, {"sha": "a41d48c24646d44400ebaf4033b6c857eb179068", "filename": "scripts/npc/9201015.js", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/9201015.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/9201015.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9201015.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -84,7 +84,10 @@ function action(mode, type, selection) {\n         else if (status == 2){\n             cm.dispose();\n             if (beauty == 1){\n-                if (cm.haveItem(5150020) == true){\n+                if (cm.haveItem(5420000)){\n+                    cm.setHair(hairnew[selection]);\n+                    cm.sendOk(\"Enjoy your new and improved hairstyle!\");\n+                } else if (cm.haveItem(5150020) == true){\n                     cm.gainItem(5150020, -1);\n                     cm.setHair(hairnew[selection]);\n                     cm.sendOk(\"Enjoy your new and improved hairstyle!\");"}, {"sha": "8cc7915ba8841a4a6aac79f7e5a7a2b8166f2bf8", "filename": "scripts/npc/9201064.js", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/9201064.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/9201064.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9201064.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -73,7 +73,10 @@ function action(mode, type, selection) {\n         else if (status == 2){\n             cm.dispose();\n             if (beauty == 1){\n-                if (cm.haveItem(5150031)){\n+                if (cm.haveItem(5420001)){\n+                    cm.setHair(hairnew[selection]);\n+                    cm.sendOk(\"Enjoy your new and improved hairstyle!\");\n+                } else if (cm.haveItem(5150031)){\n                     cm.gainItem(5150031, -1);\n                     cm.setHair(hairnew[selection]);\n                     cm.sendOk(\"Enjoy your new and improved hairstyle!\");"}, {"sha": "59092f758aec97ff708812b64ff620d9433bd67d", "filename": "scripts/npc/mapleTV.js", "status": "renamed", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/mapleTV.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/npc/mapleTV.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/mapleTV.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -17,20 +17,33 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.task;\n+/* \n+\tDefault Maple TV\n+ */\n \n-import net.server.audit.locks.MonitoredLockType;\n+var status;\n+ \n+function start() {\n+        status = -1;\n+        action(1, 0, 0);\n+}\n \n-/**\n- *\n- * @author Ronan\n- */\n-public class MobClearSkillScheduler extends BaseScheduler {\n-    public MobClearSkillScheduler() {\n-        super(MonitoredLockType.CHANNEL_MOBSKILL);\n-    }\n+function action(mode, type, selection) {\n+        if (mode == -1) {\n+                cm.dispose();\n+        } else {\n+                if (mode == 0 && type > 0) {\n+                        cm.dispose();\n+                        return;\n+                }\n+                if (mode == 1)\n+                        status++;\n+                else\n+                        status--;\n     \n-    public void registerClearSkillAction(Runnable runAction, long delay) {\n-        registerEntry(runAction, runAction, delay);\n-    }\n-}\n+                if(status == 0) {\n+                        // do nothing\n+                        cm.dispose();\n+                }\n+        }\n+}\n\\ No newline at end of file", "previous_filename": "src/net/server/channel/task/MobClearSkillScheduler.java"}, {"sha": "e19516f8a57479a3d808ca5c7cebcf581faa5f1b", "filename": "scripts/portal/highposition.js", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/portal/highposition.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/portal/highposition.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/highposition.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -20,10 +20,8 @@\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n \n-/*\n- * Author: kevintjuh93\n- *\n-*/\n-function start(ms) {\n-\tms.touchTheSky();\n+// Author: Ronan\n+function enter(ms) {\n+    ms.runMapScript();\n+    return false;\n }\n\\ No newline at end of file"}, {"sha": "0a674f2c082add3fce238bba1711c31219629fec", "filename": "scripts/quest/2232.js", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/quest/2232.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/quest/2232.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/2232.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -0,0 +1,25 @@\n+var status = -1;\n+\n+function start(mode, type, selection) {\n+    var familyEntry = qm.getPlayer().getFamilyEntry();\n+    if (familyEntry != null && familyEntry.getJuniorCount() > 0) {\n+        qm.forceCompleteQuest();\n+        qm.gainExp(3000);\n+        qm.sendNext(\"Good job!\");\n+    } else {\n+        qm.sendNext(\"I see that you have not successfully find a Junior, ok?\");\n+    }\n+    qm.dispose();\n+}\n+\n+function end(mode, type, selection) {\n+    var familyEntry = qm.getPlayer().getFamilyEntry();\n+    if (familyEntry != null && familyEntry.getJuniorCount() > 0) {  // script found thanks to kvmba\n+        qm.forceCompleteQuest();\n+        qm.gainExp(3000);\n+        qm.sendNext(\"Good job!\");\n+    } else {\n+        qm.sendNext(\"I see that you have not successfully find a Junior, ok?\");\n+    }\n+    qm.dispose();\n+}\n\\ No newline at end of file"}, {"sha": "3de79f99d4218b6823e4d59f5e228b44a1661452", "filename": "scripts/quest/2251.js", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/quest/2251.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/scripts/quest/2251.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/2251.js?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -0,0 +1,38 @@\n+-/*\n+\tAuthor: Kevin\n+\tQuest: Zombie Mushroom Signal 3 (2251)\n+\tNPC: The Rememberer (1061011)\n+\tItem: Recording Charm (4032399)\n+*/\n+\n+var status = -1;      // script restored thanks to kvmba\n+\n+function end(mode, type, selection) {\n+    if (mode == -1) {\n+        qm.dispose();\n+    } else {\n+        if(mode == 0 && type > 0) {\n+            qm.dispose();\n+            return;\n+        }\n+        \n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+        \n+        if (status == 0) {\n+            if(!qm.haveItem(4032399, 20)) {\n+                qm.sendOk(\"Please bring me 20 #b#t4032399##k...  #i4032399#\");\n+            }\n+            else {\n+                qm.gainItem(4032399, -20);\n+                qm.sendOk(\"Oh, you brought 20 #b#t4032399##k! Thank you.\");\n+                qm.gainExp(8000);\n+                qm.forceCompleteQuest();\n+            }\n+        } else if (status == 1) {\n+            qm.dispose();\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "2c71f7eb4ca260656fddde96e88d163f6e20e8df", "filename": "sql/db_database.sql", "status": "modified", "additions": 31, "deletions": 9, "changes": 40, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/sql/db_database.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/sql/db_database.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_database.sql?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -1,4 +1,4 @@\n-#EXECUTE THIS FIRST, THEN NEXT SQL: 'db_drops.sql'\n+\ufeff#EXECUTE THIS FIRST, THEN NEXT SQL: 'db_drops.sql'\n \n SET SQL_MODE = \"NO_AUTO_VALUE_ON_ZERO\";\n SET time_zone = \"+00:00\";\n@@ -8,9 +8,9 @@ SET time_zone = \"+00:00\";\n /*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\n /*!40101 SET NAMES utf8 */;\n \n-DROP DATABASE IF EXISTS `heavenms`;\n-CREATE DATABASE `heavenms` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n-USE `heavenms`;\n+DROP DATABASE IF EXISTS `heavenms2`;\n+CREATE DATABASE `heavenms2` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n+USE `heavenms2`;\n \n CREATE TABLE IF NOT EXISTS `accounts` (\n   `id` int(11) NOT NULL AUTO_INCREMENT,\n@@ -12968,7 +12968,7 @@ CREATE TABLE IF NOT EXISTS `inventoryitems` (\n   `position` int(11) NOT NULL DEFAULT '0',\n   `quantity` int(11) NOT NULL DEFAULT '0',\n   `owner` tinytext NOT NULL,\n-  `petid` int(11) NOT NULL DEFAULT '-1',\n+  `petid` int(11) unsigned UNIQUE DEFAULT NULL,\n   `flag` int(11) NOT NULL,\n   `expiration` bigint(20) NOT NULL DEFAULT '-1',\n   `giftFrom` varchar(26) NOT NULL,\n@@ -16463,7 +16463,7 @@ INSERT INTO `nxcoupons` (`id`, `couponid`, `rate`, `activeday`, `starthour`, `en\n (40,5360042,2,254,0,24);\n \n CREATE TABLE IF NOT EXISTS `pets` (\n-  `petid` int(10) unsigned NOT NULL AUTO_INCREMENT,\n+  `petid` int(11) unsigned NOT NULL AUTO_INCREMENT,\n   `name` varchar(13) DEFAULT NULL,\n   `level` int(10) unsigned NOT NULL,\n   `closeness` int(10) unsigned NOT NULL,\n@@ -16473,11 +16473,14 @@ CREATE TABLE IF NOT EXISTS `pets` (\n   PRIMARY KEY (`petid`)\n ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n+ALTER TABLE `inventoryitems` ADD CONSTRAINT `fk_itempetid` FOREIGN KEY (`petid`) REFERENCES `pets` (`petid`) ON DELETE SET NULL ;\n+\n CREATE TABLE IF NOT EXISTS `petignores` (\n   `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n-  `petid` int(10) unsigned NOT NULL ,\n+  `petid` int(11) unsigned NOT NULL ,\n   `itemid` int(10) unsigned NOT NULL ,\n-  PRIMARY KEY (`id`)\n+  PRIMARY KEY (`id`),\n+  CONSTRAINT `fk_petignorepetid` FOREIGN KEY (`petid`) REFERENCES `pets` (`petid`) ON DELETE CASCADE\n ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n CREATE TABLE IF NOT EXISTS `playerdiseases` (\n@@ -20859,6 +20862,25 @@ INSERT INTO `shopitems` (`shopitemid`, `shopid`, `itemid`, `price`, `pitch`, `po\n (6531, 1337, 2040711, 1, 0, 62),\n (6532, 1337, 2340000, 1, 0, 63),\n (20020, 1337, 1082149, 1, 0, 64),\n+(20255, 1337, 2044503, 1, 0, 86),\t# 20255~20273: thanks to ozanrijen\n+(20256, 1337, 2044703, 1, 0, 87),\n+(20257, 1337, 2044603, 1, 0, 88),\n+(20258, 1337, 2043303, 1, 0, 89),\n+(20259, 1337, 2043103, 1, 0, 90),\n+(20260, 1337, 2043203, 1, 0, 91),\n+(20261, 1337, 2043003, 1, 0, 92),\n+(20262, 1337, 2044403, 1, 0, 93),\n+(20263, 1337, 2044303, 1, 0, 94),\n+(20264, 1337, 2043803, 1, 0, 95),\n+(20265, 1337, 2044103, 1, 0, 96),\n+(20266, 1337, 2044203, 1, 0, 97),\n+(20267, 1337, 2044003, 1, 0, 98),\n+(20268, 1337, 2043703, 1, 0, 99),\n+(20269, 1337, 2040806, 1, 0, 100),\n+(20270, 1337, 2040007, 1, 0, 101),\n+(20271, 1337, 2040506, 1, 0, 102),\n+(20272, 1337, 2040710, 1, 0, 103),\n+(20273, 1337, 2040711, 1, 0, 104),\n (6533, 9000069, 2022503, 0, 5, 1),\n (6534, 9000069, 2000004, 0, 5, 2),\n (6535, 9000069, 2022514, 0, 10, 3),\n@@ -21470,4 +21492,4 @@ ALTER TABLE `skills`\n \n /*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;\n /*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;\n-/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;\n+/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;\n\\ No newline at end of file"}, {"sha": "1488258ec08946e30e6fe5ac69f16c9cc67a9e55", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 28, "deletions": 23, "changes": 51, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -142,7 +142,6 @@\n import constants.game.ExpTable;\n import constants.game.GameConstants;\n import constants.inventory.ItemConstants;\n-import constants.net.ServerConstants;\n import constants.skills.Aran;\n import constants.skills.Beginner;\n import constants.skills.Bishop;\n@@ -172,6 +171,9 @@\n import constants.skills.Sniper;\n import constants.skills.Warrior;\n import constants.skills.ThunderBreaker;\n+import net.server.channel.services.ServiceType;\n+import net.server.channel.services.task.BaseService;\n+import net.server.channel.services.task.FaceExpressionService;\n import org.apache.mina.util.ConcurrentHashSet;\n \n public class MapleCharacter extends AbstractMapleCharacterObject {\n@@ -320,7 +322,6 @@\n     private boolean loggedIn = false;\n     private boolean useCS;  //chaos scroll upon crafting item.\n     private long npcCd;\n-    private long petLootCd;\n     private long lastHpDec = 0;\n     private int newWarpMap = -1;\n     private boolean canWarpMap = true;  //only one \"warp\" must be used per call, and this will define the right one.\n@@ -398,8 +399,6 @@ public void onAnnounceStatPoolUpdate() {\n         }\n         quests = new LinkedHashMap<>();\n         setPosition(new Point(0, 0));\n-        \n-        petLootCd = Server.getInstance().getCurrentTime();\n     }\n     \n     private static MapleJob getJobStyleInternal(int jobid, byte opt) {\n@@ -439,7 +438,7 @@ public MapleJob getJobStyle() {\n     public static MapleCharacter getDefault(MapleClient c) {\n         MapleCharacter ret = new MapleCharacter();\n         ret.client = c;\n-        ret.gmLevel = 0;\n+        ret.setGMLevel(0);\n         ret.hp = 50;\n         ret.setMaxHp(50);\n         ret.mp = 5;\n@@ -569,14 +568,6 @@ public void setSessionTransitionState() {\n         client.getSession().setAttribute(MapleClient.CLIENT_TRANSITION);\n     }\n     \n-    public long getPetLootCd() {\n-        return petLootCd;\n-    }\n-    \n-    public void setPetLootCd(long cd) {\n-        petLootCd = cd;\n-    }\n-    \n     public boolean getCS() {\n         return useCS;\n     }\n@@ -822,7 +813,7 @@ public int calculateMaxBaseDamage(int watk, MapleWeaponType weapon) {\n             mainstat = localstr;\n             secondarystat = localdex;\n         }\n-        return (int) (((weapon.getMaxDamageMultiplier() * mainstat + secondarystat) / 100.0) * watk);\n+        return (int) Math.ceil(((weapon.getMaxDamageMultiplier() * mainstat + secondarystat) / 100.0) * watk);\n     }\n \n     public int calculateMaxBaseDamage(int watk) {\n@@ -838,7 +829,7 @@ public int calculateMaxBaseDamage(int watk) {\n                 }\n \n                 int attack = (int) Math.min(Math.floor((2 * getLevel() + 31) / 3), 31);\n-                maxbasedamage = (int) (localstr * weapMulti + localdex) * attack / 100;\n+                maxbasedamage = (int) Math.ceil((localstr * weapMulti + localdex) * attack / 100.0);\n             } else {\n                 maxbasedamage = 1;\n             }\n@@ -2346,6 +2337,10 @@ public static boolean deleteCharFromDB(MapleCharacter player, int senderAccId) {\n                             ps.setInt(1, cid);\n                             ps.executeUpdate();\n                     }\n+                    try (PreparedStatement ps = con.prepareStatement(\"DELETE FROM family_character WHERE cid = ?\")) {\n+                            ps.setInt(1, cid);\n+                            ps.executeUpdate();\n+                    }\n                     try (PreparedStatement ps = con.prepareStatement(\"DELETE FROM famelog WHERE characterid_to = ?\")) {\n                             ps.setInt(1, cid);\n                             ps.executeUpdate();\n@@ -2383,7 +2378,7 @@ public static boolean deleteCharFromDB(MapleCharacter player, int senderAccId) {\n                                             }\n                                             \n                                             int petid = rs.getInt(\"petid\");\n-                                            if(petid > -1) {\n+                                            if(!rs.wasNull()) {\n                                                     try (PreparedStatement ps2 = con.prepareStatement(\"DELETE FROM pets WHERE petid = ?\")) {\n                                                             ps2.setInt(1, petid);\n                                                             ps2.executeUpdate();\n@@ -2850,7 +2845,9 @@ public void changeFaceExpression(int emote) {\n         long timeNow = Server.getInstance().getCurrentTime();\n         if(timeNow - lastExpression > 2000) {\n             lastExpression = timeNow;\n-            client.getChannelServer().registerFaceExpression(map, this, emote);\n+            \n+            FaceExpressionService service = (FaceExpressionService) client.getChannelServer().getServiceAccess(ServiceType.FACE_EXPRESSION);\n+            service.registerFaceExpression(map, this, emote);\n         }\n     }\n \n@@ -5614,6 +5611,8 @@ public MapleRockPaperScissor getRPS() { // thanks inhyuk for suggesting RPS addi\n     public void setGMLevel(int level) {\n         this.gmLevel = Math.min(level, 6);\n         this.gmLevel = Math.max(level, 0);\n+        \n+        whiteChat = gmLevel >= 4;   // thanks ozanrijen for suggesting default white chat\n     }\n     \n     public void closePartySearchInteractions() {\n@@ -6975,8 +6974,7 @@ public static MapleCharacter loadCharacterEntryFromDB(ResultSet rs, List<Item> e\n             ret.gachaexp.set(rs.getInt(\"gachaexp\"));\n             ret.mapid = rs.getInt(\"map\");\n             ret.initialSpawnPoint = rs.getInt(\"spawnpoint\");\n-            \n-            ret.gmLevel = rs.getInt(\"gm\");\n+            ret.setGMLevel(rs.getInt(\"gm\"));\n             ret.world = rs.getByte(\"world\");\n             ret.rank = rs.getInt(\"rank\");\n             ret.rankMove = rs.getInt(\"rankMove\");\n@@ -7029,7 +7027,7 @@ public MapleCharacter generateCharacterEntry() {\n         \n         ret.inventory[MapleInventoryType.EQUIPPED.ordinal()] = this.getInventory(MapleInventoryType.EQUIPPED);\n         \n-        ret.gmLevel = this.gmLevel();\n+        ret.setGMLevel(this.gmLevel());\n         ret.world = this.getWorld();\n         ret.rank = this.getRank();\n         ret.rankMove = this.getRankMove();\n@@ -7091,7 +7089,7 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool\n             ret.loadCharSkillPoints(rs.getString(\"sp\").split(\",\"));\n             ret.meso.set(rs.getInt(\"meso\"));\n             ret.merchantmeso = rs.getInt(\"MerchantMesos\");\n-            ret.gmLevel = rs.getInt(\"gm\");\n+            ret.setGMLevel(rs.getInt(\"gm\"));\n             ret.skinColor = MapleSkinColor.getById(rs.getInt(\"skincolor\"));\n             ret.gender = rs.getInt(\"gender\");\n             ret.job = MapleJob.getById(rs.getInt(\"job\"));\n@@ -7187,11 +7185,14 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool\n             PreparedStatement ps2, ps3;\n             ResultSet rs2, rs3;\n             \n-            ps3 = con.prepareStatement(\"SELECT petid FROM inventoryitems WHERE characterid = ? AND petid > -1\");\n+            ps3 = con.prepareStatement(\"SELECT petid FROM inventoryitems WHERE characterid = ? AND petid IS NOT NULL\");\n             ps3.setInt(1, charid);\n             rs3 = ps3.executeQuery();\n             while(rs3.next()) {\n                 int petId = rs3.getInt(\"petid\");\n+                if (rs3.wasNull()) {\n+                    petId = -1;\n+                }\n \n                 ps2 = con.prepareStatement(\"SELECT itemid FROM petignores WHERE petid = ?\");\n                 ps2.setInt(1, petId);\n@@ -7371,7 +7372,11 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool\n                 ps.setInt(1, charid);\n                 rs = ps.executeQuery();\n                 while (rs.next()) {\n-                    ret.skills.put(SkillFactory.getSkill(rs.getInt(\"skillid\")), new SkillEntry(rs.getByte(\"skilllevel\"), rs.getInt(\"masterlevel\"), rs.getLong(\"expiration\")));\n+                    Skill pSkill = SkillFactory.getSkill(rs.getInt(\"skillid\"));\n+                    if(pSkill != null)  // edit reported by shavit, thanks Zein for noticing an NPE here\n+                    {\n+                        ret.skills.put(pSkill, new SkillEntry(rs.getByte(\"skilllevel\"), rs.getInt(\"masterlevel\"), rs.getLong(\"expiration\")));\n+                    }\n                 }\n                 rs.close();\n                 ps.close();"}, {"sha": "fdd8712292237fcaedec2cbc4c64adfce470f18c", "filename": "src/client/inventory/Item.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/inventory/Item.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/inventory/Item.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/Item.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -126,7 +126,11 @@ public void setOwner(String owner) {\n     public int getPetId() {\n         return petid;\n     }\n- \n+    \n+    public Integer getPetIdForDb() {\n+        return petid > -1 ? petid : null;\n+    }\n+    \n     @Override\n     public int compareTo(Item other) {\n         if (this.id < other.getItemId()) {"}, {"sha": "fa7f4fac9793aa07162c1881526e1924739c8a3a", "filename": "src/client/inventory/ItemFactory.java", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/inventory/ItemFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/inventory/ItemFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/ItemFactory.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -173,7 +173,12 @@ private static Equip loadEquipFromResultSet(ResultSet rs) throws SQLException {\n                 if (mit.equals(MapleInventoryType.EQUIP) || mit.equals(MapleInventoryType.EQUIPPED)) {\n                     items.add(new Pair<Item, MapleInventoryType>(loadEquipFromResultSet(rs), mit));\n                 } else {\n-                    Item item = new Item(rs.getInt(\"itemid\"), (byte) rs.getInt(\"position\"), (short) rs.getInt(\"quantity\"), rs.getInt(\"petid\"));\n+                    int petid = rs.getInt(\"petid\");\n+                    if (rs.wasNull()) {\n+                        petid = -1;\n+                    }\n+                    \n+                    Item item = new Item(rs.getInt(\"itemid\"), (byte) rs.getInt(\"position\"), (short) rs.getInt(\"quantity\"), petid);\n                     item.setOwner(rs.getString(\"owner\"));\n                     item.setExpiration(rs.getLong(\"expiration\"));\n                     item.setGiftFrom(rs.getString(\"giftFrom\"));\n@@ -229,7 +234,7 @@ private void saveItemsCommon(List<Pair<Item, MapleInventoryType>> items, int id,\n                     ps.setInt(6, item.getPosition());\n                     ps.setInt(7, item.getQuantity());\n                     ps.setString(8, item.getOwner());\n-                    ps.setInt(9, item.getPetId());\n+                    ps.setObject(9, item.getPetIdForDb(), java.sql.Types.INTEGER);\n                     ps.setInt(10, item.getFlag());\n                     ps.setLong(11, item.getExpiration());\n                     ps.setString(12, item.getGiftFrom());\n@@ -329,7 +334,12 @@ private void saveItemsCommon(List<Pair<Item, MapleInventoryType>> items, int id,\n                     items.add(new Pair<Item, MapleInventoryType>(loadEquipFromResultSet(rs), mit));\n                 } else {\n                     if(bundles > 0) {\n-                        Item item = new Item(rs.getInt(\"itemid\"), (byte) rs.getInt(\"position\"), (short)(bundles * rs.getInt(\"quantity\")), rs.getInt(\"petid\"));\n+                        int petid = rs.getInt(\"petid\");\n+                        if (rs.wasNull()) {\n+                            petid = -1;\n+                        }\n+                        \n+                        Item item = new Item(rs.getInt(\"itemid\"), (byte) rs.getInt(\"position\"), (short)(bundles * rs.getInt(\"quantity\")), petid);\n                         item.setOwner(rs.getString(\"owner\"));\n                         item.setExpiration(rs.getLong(\"expiration\"));\n                         item.setGiftFrom(rs.getString(\"giftFrom\"));\n@@ -404,7 +414,7 @@ private void saveItemsMerchant(List<Pair<Item, MapleInventoryType>> items, List<\n                     ps.setInt(6, item.getPosition());\n                     ps.setInt(7, item.getQuantity());\n                     ps.setString(8, item.getOwner());\n-                    ps.setInt(9, item.getPetId());\n+                    ps.setObject(9, item.getPetIdForDb(), java.sql.Types.INTEGER);\n                     ps.setInt(10, item.getFlag());\n                     ps.setLong(11, item.getExpiration());\n                     ps.setString(12, item.getGiftFrom());"}, {"sha": "f26944c5faeef714367c08030666c48428f3aad4", "filename": "src/client/inventory/MaplePet.java", "status": "modified", "additions": 1, "deletions": 65, "changes": 66, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/inventory/MaplePet.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/inventory/MaplePet.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/MaplePet.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -98,75 +98,11 @@ public static MaplePet loadFromDb(int itemid, short position, int petid) {\n         }\n     }\n     \n-    private static void unreferenceMissingPetsFromInventoryDb() {\n-        PreparedStatement ps = null;\n-        Connection con = null;\n-        try {\n-            con = DatabaseConnection.getConnection();\n-            \n-            ps = con.prepareStatement(\"UPDATE inventoryitems SET petid = -1, expiration = 0 WHERE petid != -1 AND petid NOT IN (SELECT petid FROM pets)\");\n-            ps.executeUpdate();\n-            \n-            ps.close();\n-            con.close();\n-        } catch(SQLException ex) {\n-            ex.printStackTrace();\n-        } finally {\n-            try {\n-                if(ps != null && !ps.isClosed()) {\n-                    ps.close();\n-                }\n-                if(con != null && !con.isClosed()) {\n-                    con.close();\n-                }\n-            } catch (SQLException e) {\n-                e.printStackTrace();\n-            }\n-        }\n-    }\n-    \n-    private static void deleteMissingPetsFromDb() {\n-        PreparedStatement ps = null;\n-        Connection con = null;\n-        try {\n-            con = DatabaseConnection.getConnection();\n-            \n-            ps = con.prepareStatement(\"DELETE FROM pets WHERE petid NOT IN (SELECT petid FROM inventoryitems WHERE petid != -1)\");\n-            ps.executeUpdate();\n-            \n-            ps.close();\n-            con.close();\n-        } catch(SQLException ex) {\n-            ex.printStackTrace();\n-        } finally {\n-            try {\n-                if(ps != null && !ps.isClosed()) {\n-                    ps.close();\n-                }\n-                if(con != null && !con.isClosed()) {\n-                    con.close();\n-                }\n-            } catch (SQLException e) {\n-                e.printStackTrace();\n-            }\n-        }\n-    }\n-    \n-    public static void clearMissingPetsFromDb() {\n-        unreferenceMissingPetsFromInventoryDb();\n-        deleteMissingPetsFromDb();\n-    }\n-    \n     public static void deleteFromDb(MapleCharacter owner, int petid) {\n         try {\n             Connection con = DatabaseConnection.getConnection();\n             \n-            PreparedStatement ps = con.prepareStatement(\"DELETE FROM pets WHERE `petid` = ?\");\n-            ps.setInt(1, petid);\n-            ps.executeUpdate();\n-            ps.close();\n-            \n-            ps = con.prepareStatement(\"DELETE FROM petignores WHERE `petid` = ?\");  // thanks Vcoc for detecting petignores remaining after deletion\n+            PreparedStatement ps = con.prepareStatement(\"DELETE FROM pets WHERE `petid` = ?\");  // thanks Vcoc for detecting petignores remaining after deletion\n             ps.setInt(1, petid);\n             ps.executeUpdate();\n             ps.close();"}, {"sha": "52fd28f8d93bf34e4ed1f04a1db5827efd8c0cae", "filename": "src/client/inventory/manipulator/MapleCashidGenerator.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/inventory/manipulator/MapleCashidGenerator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/inventory/manipulator/MapleCashidGenerator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/manipulator/MapleCashidGenerator.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -41,7 +41,10 @@ private static void loadExistentCashIdsFromQuery(Connection con, String query) t\n         ResultSet rs = ps.executeQuery();\n         \n         while (rs.next()) {\n-            existentCashids.add(rs.getInt(1));\n+            int id = rs.getInt(1);\n+            if (!rs.wasNull()) {\n+                existentCashids.add(id);\n+            }\n         }\n         \n         rs.close();"}, {"sha": "0f45f86c79d3c6ae28e65fcf7df185762a60d33b", "filename": "src/client/processor/action/SpawnPetProcessor.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/processor/action/SpawnPetProcessor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/client/processor/action/SpawnPetProcessor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/processor/action/SpawnPetProcessor.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -62,7 +62,7 @@ public static void processSpawnPet(MapleClient c, byte slot, boolean lead) {\n                         long expiration = chr.getInventory(MapleInventoryType.CASH).getItem(slot).getExpiration();\n                         MapleInventoryManipulator.removeById(c, MapleInventoryType.CASH, petid, (short) 1, false, false);\n                         MapleInventoryManipulator.addById(c, evolveid, (short) 1, null, petId, expiration);\n-                        MaplePet.deleteFromDb(chr, petid);\n+                        \n                         c.announce(MaplePacketCreator.enableActions());\n                         return;\n                     }"}, {"sha": "b8b0a59dfad1ea6cf9ad5be142479584a69bed3a", "filename": "src/config/ServerConfig.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/config/ServerConfig.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/config/ServerConfig.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/config/ServerConfig.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -154,7 +154,6 @@\n     public int MAX_AP;\n     public int MAX_EVENT_LEVELS;\n     public long BLOCK_NPC_RACE_CONDT;\n-    public long PET_LOOT_UPON_ATTACK;\n     public int TOT_MOB_QUEST_REQUIREMENT;\n     public int MOB_REACTOR_REFRESH_TIME;\n     public int PARTY_SEARCH_REENTRY_LIMIT;"}, {"sha": "1f1fbb739885bfa3280ced068f8f36ae7c5c2a7f", "filename": "src/net/server/Server.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/Server.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/Server.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/Server.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -21,7 +21,6 @@\n  */\n package net.server;\n \n-import java.io.FileInputStream;\n import java.io.IOException;\n import java.net.InetSocketAddress;\n import java.security.Security;"}, {"sha": "889774edbb202fdb8c1c086ca6881519efcf0d6a", "filename": "src/net/server/channel/Channel.java", "status": "modified", "additions": 25, "deletions": 138, "changes": 163, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/Channel.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/Channel.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/Channel.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -50,7 +50,6 @@\n \n import net.server.PlayerStorage;\n import net.server.Server;\n-import net.server.channel.task.*;\n \n import net.server.world.World;\n import net.server.world.MapleParty;\n@@ -77,7 +76,9 @@\n import tools.MaplePacketCreator;\n import tools.Pair;\n import client.MapleCharacter;\n-import client.status.MonsterStatusEffect;\n+import net.server.channel.services.ServiceType;\n+import net.server.channel.services.ServicesManager;\n+import net.server.channel.services.task.BaseService;\n import server.maps.MapleMiniDungeonInfo;\n \n public final class Channel {\n@@ -89,13 +90,7 @@\n     private String ip, serverMessage;\n     private MapleMapManager mapManager;\n     private EventScriptManager eventSM;\n-    private MobStatusScheduler mobStatusSchedulers[] = new MobStatusScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n-    private MobAnimationScheduler mobAnimationSchedulers[] = new MobAnimationScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n-    private MobClearSkillScheduler mobClearSkillSchedulers[] = new MobClearSkillScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n-    private MobMistScheduler mobMistSchedulers[] = new MobMistScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n-    private FaceExpressionScheduler faceExpressionSchedulers[] = new FaceExpressionScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n-    private EventScheduler eventSchedulers[] = new EventScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n-    private OverallScheduler channelSchedulers[] = new OverallScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n+    private ServicesManager services = new ServicesManager();\n     private Map<Integer, MapleHiredMerchant> hiredMerchants = new HashMap<>();\n     private final Map<Integer, Integer> storedVars = new HashMap<>();\n     private Set<Integer> playersAway = new HashSet<>();\n@@ -173,33 +168,31 @@ public Channel(final int world, final int channel, long startTime) {\n                 dojoTask[i] = null;\n             }\n             \n-            for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n-                faceLock[i] = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHANNEL_FACEEXPRS, true);\n-                \n-                mobStatusSchedulers[i] = new MobStatusScheduler();\n-                mobAnimationSchedulers[i] = new MobAnimationScheduler();\n-                mobClearSkillSchedulers[i] = new MobClearSkillScheduler();\n-                mobMistSchedulers[i] = new MobMistScheduler();\n-                faceExpressionSchedulers[i] = new FaceExpressionScheduler(faceLock[i]);\n-                eventSchedulers[i] = new EventScheduler();\n-                channelSchedulers[i] = new OverallScheduler();\n-            }\n+            services = new ServicesManager();\n             \n             System.out.println(\"    Channel \" + getId() + \": Listening on port \" + port);\n         } catch (Exception e) {\n             e.printStackTrace();\n         }\n     }\n     \n-    public void reloadEventScriptManager(){\n+    public synchronized void reloadEventScriptManager(){\n+        if (finishedShutdown) {\n+            return;\n+        }\n+        \n     \teventSM.cancel();\n     \teventSM = null;\n     \teventSM = new EventScriptManager(this, getEvents());\n     \teventSM.init();\n     }\n \n-    public final void shutdown() {\n+    public final synchronized void shutdown() {\n         try {\n+            if (finishedShutdown) {\n+                return;\n+            }\n+            \n             System.out.println(\"Shutting down Channel \" + channel + \" on World \" + world);\n             \n             closeAllMerchants();\n@@ -227,51 +220,19 @@ public final void shutdown() {\n         }\n     }\n     \n+    private void closeChannelServices() {\n+        services.shutdown();\n+    }\n+    \n     private void closeChannelSchedules() {\n         for(int i = 0; i < 20; i++) {\n             if(dojoTask[i] != null) {\n                 dojoTask[i].cancel(false);\n                 dojoTask[i] = null;\n             }\n         }\n-\n-        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n-            if(mobStatusSchedulers[i] != null) {\n-                mobStatusSchedulers[i].dispose();\n-                mobStatusSchedulers[i] = null;\n-            }\n-            \n-            if(mobAnimationSchedulers[i] != null) {\n-                mobAnimationSchedulers[i].dispose();\n-                mobAnimationSchedulers[i] = null;\n-            }\n-            \n-            if(mobClearSkillSchedulers[i] != null) {\n-                mobClearSkillSchedulers[i].dispose();\n-                mobClearSkillSchedulers[i] = null;\n-            }\n-            \n-            if(mobMistSchedulers[i] != null) {\n-                mobMistSchedulers[i].dispose();\n-                mobMistSchedulers[i] = null;\n-            }\n-            \n-            if(faceExpressionSchedulers[i] != null) {\n-                faceExpressionSchedulers[i].dispose();\n-                faceExpressionSchedulers[i] = null;\n-            }\n-            \n-            if(eventSchedulers[i] != null) {\n-                eventSchedulers[i].dispose();\n-                eventSchedulers[i] = null;\n-            }\n-            \n-            if(channelSchedulers[i] != null) {\n-                channelSchedulers[i].dispose();\n-                channelSchedulers[i] = null;\n-            }\n-        }\n         \n+        closeChannelServices();\n         disposeLocks();\n     }\n     \n@@ -315,7 +276,11 @@ private void closeAllMerchants() {\n     public MapleMapManager getMapFactory() {\n         return mapManager;\n     }\n-\n+    \n+    public BaseService getServiceAccess(ServiceType sv) {\n+        return services.getAccess(sv).getService();\n+    }\n+    \n     public int getWorld() {\n         return world;\n     }\n@@ -1030,84 +995,6 @@ public boolean canInitMonsterCarnival(boolean cpq1, int field) {\n         return !usedMC.contains(getMonsterCarnivalRoom(cpq1, field));\n     }\n     \n-    private static int getChannelSchedulerIndex(int mapid) {\n-        int section = 1000000000 / YamlConfig.config.server.CHANNEL_LOCKS;\n-        return mapid / section;\n-    }\n-    \n-    public void registerMobStatus(int mapid, MonsterStatusEffect mse, Runnable cancelAction, long duration) {\n-        registerMobStatus(mapid, mse, cancelAction, duration, null, -1);\n-    }\n-    \n-    public void registerMobStatus(int mapid, MonsterStatusEffect mse, Runnable cancelAction, long duration, Runnable overtimeAction, int overtimeDelay) {\n-        mobStatusSchedulers[getChannelSchedulerIndex(mapid)].registerMobStatus(mse, cancelAction, duration, overtimeAction, overtimeDelay);\n-    }\n-    \n-    public void interruptMobStatus(int mapid, MonsterStatusEffect mse) {\n-        mobStatusSchedulers[getChannelSchedulerIndex(mapid)].interruptMobStatus(mse);\n-    }\n-    \n-    public boolean registerMobOnAnimationEffect(int mapid, int mobHash, long delay) {\n-        return mobAnimationSchedulers[getChannelSchedulerIndex(mapid)].registerAnimationMode(mobHash, delay);\n-    }\n-    \n-    public void registerMobClearSkillAction(int mapid, Runnable runAction, long delay) {\n-        mobClearSkillSchedulers[getChannelSchedulerIndex(mapid)].registerClearSkillAction(runAction, delay);\n-    }\n-    \n-    public void registerMobMistCancelAction(int mapid, Runnable runAction, long delay) {\n-        mobMistSchedulers[getChannelSchedulerIndex(mapid)].registerMistCancelAction(runAction, delay);\n-    }\n-    \n-    public void registerEventAction(int mapid, Runnable runAction, long delay) {\n-        eventSchedulers[getChannelSchedulerIndex(mapid)].registerDelayedAction(runAction, delay);\n-    }\n-    \n-    public void registerOverallAction(int mapid, Runnable runAction, long delay) {\n-        channelSchedulers[getChannelSchedulerIndex(mapid)].registerDelayedAction(runAction, delay);\n-    }\n-    \n-    public void forceRunOverallAction(int mapid, Runnable runAction) {\n-        channelSchedulers[getChannelSchedulerIndex(mapid)].forceRunDelayedAction(runAction);\n-    }\n-    \n-    public void registerFaceExpression(final MapleMap map, final MapleCharacter chr, int emote) {\n-        int lockid = getChannelSchedulerIndex(map.getId());\n-        \n-        Runnable cancelAction = new Runnable() {\n-            @Override\n-            public void run() {\n-                if(chr.isLoggedinWorld()) {\n-                    map.broadcastMessage(chr, MaplePacketCreator.facialExpression(chr, 0), false);\n-                }\n-            }\n-        };\n-        \n-        faceLock[lockid].lock();\n-        try {\n-            if(!chr.isLoggedinWorld()) {\n-                return;\n-            }\n-            \n-            faceExpressionSchedulers[lockid].registerFaceExpression(chr.getId(), cancelAction);\n-        } finally {\n-            faceLock[lockid].unlock();\n-        }\n-        \n-        map.broadcastMessage(chr, MaplePacketCreator.facialExpression(chr, emote), false);\n-    }\n-    \n-    public void unregisterFaceExpression(int mapid, MapleCharacter chr) {\n-        int lockid = getChannelSchedulerIndex(mapid);\n-        \n-        faceLock[lockid].lock();\n-        try {\n-            faceExpressionSchedulers[lockid].unregisterFaceExpression(chr.getId());\n-        } finally {\n-            faceLock[lockid].unlock();\n-        }\n-    }\n-    \n     public void debugMarriageStatus() {\n         System.out.println(\" ----- WORLD DATA -----\");\n         getWorldServer().debugMarriageStatus();"}, {"sha": "a39a2155d76fb0ba08abd02f223994c168584249", "filename": "src/net/server/channel/handlers/AbstractDealDamageHandler.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/AbstractDealDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/AbstractDealDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/AbstractDealDamageHandler.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -656,7 +656,7 @@ protected AttackInfo parseDamage(LittleEndianAccessor lea, MapleCharacter chr, b\n         \n         // Find the base damage to base futher calculations on.\n         // Several skills have their own formula in this section.\n-        long calcDmgMax = 0;\n+        long calcDmgMax;\n         \n         if(magic && ret.skill != 0) {   // thanks onechord for noticing a few false positives stemming from maxdmg as 0\n             calcDmgMax = (long) (Math.ceil((chr.getTotalMagic() * Math.ceil(chr.getTotalMagic() / 1000.0) + chr.getTotalMagic()) / 30.0) + Math.ceil(chr.getTotalInt() / 200.0));\n@@ -846,7 +846,7 @@ else if(orbs >= 5)\n                             }\n                     } else if (ret.skill == Aran.BODY_PRESSURE) {\n                         if (monster != null) {\n-                            int bodyPressureDmg = monster.getMaxHp() * SkillFactory.getSkill(Aran.BODY_PRESSURE).getEffect(ret.skilllevel).getDamage() / 100;\n+                            int bodyPressureDmg = (int) Math.ceil(monster.getMaxHp() * SkillFactory.getSkill(Aran.BODY_PRESSURE).getEffect(ret.skilllevel).getDamage() / 100.0);\n                             if (bodyPressureDmg > calcDmgMax) {\n                                 calcDmgMax = bodyPressureDmg;\n                             }"}, {"sha": "d7792beec8485e6f7c3df9ceaf1974671608efbd", "filename": "src/net/server/channel/handlers/CloseRangeDamageHandler.java", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/CloseRangeDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/CloseRangeDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/CloseRangeDamageHandler.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -26,32 +26,30 @@\n import java.util.List;\n \n import config.YamlConfig;\n-import server.MapleStatEffect;\n-import tools.MaplePacketCreator;\n-import tools.Pair;\n-import tools.data.input.SeekableLittleEndianAccessor;\n import client.MapleBuffStat;\n import client.MapleCharacter;\n import client.MapleClient;\n import client.MapleJob;\n import client.Skill;\n import client.SkillFactory;\n import constants.game.GameConstants;\n-import constants.net.ServerConstants;\n import constants.skills.Crusader;\n import constants.skills.DawnWarrior;\n import constants.skills.DragonKnight;\n import constants.skills.Hero;\n import constants.skills.NightWalker;\n import constants.skills.Rogue;\n import constants.skills.WindArcher;\n+import server.MapleStatEffect;\n+import tools.MaplePacketCreator;\n+import tools.Pair;\n+import tools.data.input.SeekableLittleEndianAccessor;\n \n public final class CloseRangeDamageHandler extends AbstractDealDamageHandler {\n     \n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         MapleCharacter chr = c.getPlayer();\n-        //chr.setPetLootCd(currentServerTime());\n         \n         /*long timeElapsed = currentServerTime() - chr.getAutobanManager().getLastSpam(8);\n         if(timeElapsed < 300) {"}, {"sha": "fa82dbfd1c4e9ab1d8147fecb46f5e02b8d37c18", "filename": "src/net/server/channel/handlers/MagicDamageHandler.java", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/MagicDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/MagicDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MagicDamageHandler.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -21,25 +21,24 @@\n  */\n package net.server.channel.handlers;\n \n-import config.YamlConfig;\n-import server.MapleStatEffect;\n-import tools.MaplePacketCreator;\n-import tools.data.input.SeekableLittleEndianAccessor;\n import client.MapleBuffStat;\n import client.MapleCharacter;\n import client.MapleClient;\n import client.Skill;\n import client.SkillFactory;\n+import config.YamlConfig;\n import constants.skills.Bishop;\n import constants.skills.Evan;\n import constants.skills.FPArchMage;\n import constants.skills.ILArchMage;\n+import server.MapleStatEffect;\n+import tools.MaplePacketCreator;\n+import tools.data.input.SeekableLittleEndianAccessor;\n \n public final class MagicDamageHandler extends AbstractDealDamageHandler {\n \t@Override\n \tpublic final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n \t\tMapleCharacter chr = c.getPlayer();\n-                //chr.setPetLootCd(currentServerTime());\n \n \t\t/*long timeElapsed = currentServerTime() - chr.getAutobanManager().getLastSpam(8);\n \t\tif(timeElapsed < 300) {"}, {"sha": "ebfd0a20ffc6b8863da6e1b3eb314069d4cfa3ab", "filename": "src/net/server/channel/handlers/MoveLifeHandler.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/MoveLifeHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/MoveLifeHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/MoveLifeHandler.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -55,6 +55,10 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 MapleCharacter player = c.getPlayer();\n                 MapleMap map = player.getMap();\n                 \n+                if (player.isChangingMaps()) {  // thanks Lame for noticing mob movement shuffle (mob OID on different maps) happening on map transitions\n+                    return;\n+                }\n+                \n \t\tint objectid = slea.readInt();\n \t\tshort moveid = slea.readShort();\n \t\tMapleMapObject mmo = map.getMapObject(objectid);"}, {"sha": "71f71c345c57c64d1400db89f664e346ad962112", "filename": "src/net/server/channel/handlers/NPCTalkHandler.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/NPCTalkHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/NPCTalkHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/NPCTalkHandler.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -59,16 +59,19 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                     c.announce(MaplePacketCreator.enableActions());\n                     return;\n                 }\n-                if(npc.getId() >= 9100100 && npc.getId() <= 9100200) {\n-                    // Custom handling for gachapon scripts to reduce the amount of scripts needed.\n+                \n+                // Custom handling to reduce the amount of scripts needed.\n+                if (npc.getId() >= 9100100 && npc.getId() <= 9100200) {\n                     NPCScriptManager.getInstance().start(c, npc.getId(), \"gachapon\", null);\n+                } else if (npc.getName().endsWith(\"Maple TV\")) {\n+                    NPCScriptManager.getInstance().start(c, npc.getId(), \"mapleTV\", null);\n                 } else {\n                     boolean hasNpcScript = NPCScriptManager.getInstance().start(c, npc.getId(), oid, null);\n                     if (!hasNpcScript) {\n                         if (!npc.hasShop()) {\n                             FilePrinter.printError(FilePrinter.NPC_UNCODED, \"NPC \" + npc.getName() + \"(\" + npc.getId() + \") is not coded.\");\n                             return;\n-                        } else if(c.getPlayer().getShop() != null) {\n+                        } else if (c.getPlayer().getShop() != null) {\n                             c.announce(MaplePacketCreator.enableActions());\n                             return;\n                         }"}, {"sha": "8b794344f29043b5d01e5bb8b32f2fdfd7119eab", "filename": "src/net/server/channel/handlers/PetLootHandler.java", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/PetLootHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/PetLootHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PetLootHandler.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -26,13 +26,11 @@\n import client.MapleCharacter;\n import client.MapleClient;\n import client.inventory.MaplePet;\n-import config.YamlConfig;\n import net.AbstractMaplePacketHandler;\n import server.maps.MapleMapItem;\n import server.maps.MapleMapObject;\n import tools.MaplePacketCreator;\n import tools.data.input.SeekableLittleEndianAccessor;\n-import constants.net.ServerConstants;\n \n /**\n  * @author TheRamon\n@@ -42,10 +40,6 @@\n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         MapleCharacter chr = c.getPlayer();\n-        if(currentServerTime() - chr.getPetLootCd() < YamlConfig.config.server.PET_LOOT_UPON_ATTACK) {\n-            c.announce(MaplePacketCreator.enableActions());\n-            return;\n-        }\n         \n         int petIndex = chr.getPetIndex(slea.readInt());\n         MaplePet pet = chr.getPet(petIndex);"}, {"sha": "f2d33047f4c9f2a1d513d9cbcf42b25f3d706377", "filename": "src/net/server/channel/handlers/RangedAttackHandler.java", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/RangedAttackHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/RangedAttackHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/RangedAttackHandler.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -21,13 +21,6 @@\n  */\n package net.server.channel.handlers;\n \n-import client.inventory.manipulator.MapleInventoryManipulator;\n-import config.YamlConfig;\n-import server.MapleItemInformationProvider;\n-import server.MapleStatEffect;\n-import tools.MaplePacketCreator;\n-import tools.Randomizer;\n-import tools.data.input.SeekableLittleEndianAccessor;\n import client.MapleBuffStat;\n import client.MapleCharacter;\n import client.MapleClient;\n@@ -37,22 +30,28 @@\n import client.inventory.MapleInventory;\n import client.inventory.MapleInventoryType;\n import client.inventory.MapleWeaponType;\n+import client.inventory.manipulator.MapleInventoryManipulator;\n+import config.YamlConfig;\n import constants.inventory.ItemConstants;\n-import constants.net.ServerConstants;\n import constants.skills.Aran;\n import constants.skills.Buccaneer;\n import constants.skills.NightLord;\n import constants.skills.NightWalker;\n import constants.skills.Shadower;\n import constants.skills.ThunderBreaker;\n import constants.skills.WindArcher;\n+import server.MapleItemInformationProvider;\n+import server.MapleStatEffect;\n+import tools.MaplePacketCreator;\n+import tools.Randomizer;\n+import tools.data.input.SeekableLittleEndianAccessor;\n+\n \n public final class RangedAttackHandler extends AbstractDealDamageHandler {\n \n     @Override\n     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {\n         MapleCharacter chr = c.getPlayer();\n-        //chr.setPetLootCd(currentServerTime());\n         \n         /*long timeElapsed = currentServerTime() - chr.getAutobanManager().getLastSpam(8);\n         if(timeElapsed < 300) {"}, {"sha": "9b2dfd610d83f274aeef9155deacf82aa86a5ba0", "filename": "src/net/server/channel/handlers/TakeDamageHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/TakeDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/handlers/TakeDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/TakeDamageHandler.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -213,7 +213,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                         map.broadcastMessage(chr, MaplePacketCreator.damageMonster(oid, bouncedamage), false, true);\n                         attacker.aggroMonsterDamage(chr, bouncedamage);\n                     }\n-                    MapleStatEffect bPressure = chr.getBuffEffect(MapleBuffStat.COMBO_BARRIER);\n+                    MapleStatEffect bPressure = chr.getBuffEffect(MapleBuffStat.BODY_PRESSURE);\n                     if (bPressure != null) {\n                         Skill skill = SkillFactory.getSkill(Aran.BODY_PRESSURE);\n                         if (!attacker.alreadyBuffedStats().contains(MonsterStatus.NEUTRALISE)) {"}, {"sha": "bf9ed40a024aed7c93cf26161886a98ba14a545e", "filename": "src/net/server/channel/services/BaseScheduler.java", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/BaseScheduler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/BaseScheduler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/BaseScheduler.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -17,7 +17,7 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.task;\n+package net.server.channel.services;\n \n import config.YamlConfig;\n import java.util.Collections;", "previous_filename": "src/net/server/channel/task/BaseScheduler.java"}, {"sha": "2b4865dd611fb33a1a17adcc92e96ea182c10195", "filename": "src/net/server/channel/services/SchedulerListener.java", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/SchedulerListener.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/SchedulerListener.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/SchedulerListener.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -17,7 +17,7 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.task;\n+package net.server.channel.services;\n \n import java.util.List;\n ", "previous_filename": "src/net/server/channel/task/SchedulerListener.java"}, {"sha": "580d6fee86f55cbb361ac786b542e814fed29369", "filename": "src/net/server/channel/services/Service.java", "status": "renamed", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/Service.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/Service.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/Service.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -1,6 +1,6 @@\n /*\n-    This file is part of the HeavenMS MapleStory Server\n-    Copyleft (L) 2016 - 2018 RonanLana\n+    This file is part of the HeavenMS MapleStory Server, commands OdinMS-based\n+    Copyleft (L) 2016 - 2019 RonanLana\n \n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU Affero General Public License as\n@@ -17,24 +17,36 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.task;\n+package net.server.channel.services;\n \n-import net.server.audit.locks.MonitoredLockType;\n+import net.server.channel.services.task.BaseService;\n \n /**\n  *\n  * @author Ronan\n  */\n-public class OverallScheduler extends BaseScheduler {\n-    public OverallScheduler() {\n-        super(MonitoredLockType.CHANNEL_OVERALL);\n+public class Service <T extends BaseService> {\n+    \n+    private Class<T> cls;\n+    private BaseService service;\n+    \n+    public Service(Class<T> s) {\n+        try {\n+            cls = s;\n+            service = (BaseService) cls.getConstructor().newInstance();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n     }\n     \n-    public void registerDelayedAction(Runnable runAction, long delay) {\n-        registerEntry(runAction, runAction, delay);\n+    public T getService() {\n+        return cls.cast(service);\n     }\n     \n-    public void forceRunDelayedAction(Runnable runAction) {\n-        interruptEntry(runAction);\n+    public void dispose() {\n+        service.dispose();\n+        service = null;\n     }\n+    \n }\n+", "previous_filename": "src/net/server/channel/task/OverallScheduler.java"}, {"sha": "47e5097eed3340a1f4e3a2e2f060bc6229982f80", "filename": "src/net/server/channel/services/ServiceType.java", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/ServiceType.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/ServiceType.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/ServiceType.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -0,0 +1,48 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server, commands OdinMS-based\n+    Copyleft (L) 2016 - 2019 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.services;\n+\n+import net.server.channel.services.task.*;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public enum ServiceType {\n+    \n+    MOB_STATUS(MobStatusService.class),\n+    MOB_ANIMATION(MobAnimationService.class),\n+    MOB_CLEAR_SKILL(MobClearSkillService.class),\n+    MOB_MIST(MobMistService.class),\n+    FACE_EXPRESSION(FaceExpressionService.class),\n+    EVENT(EventService.class),\n+    OVERALL(OverallService.class);\n+    \n+    private Class<? extends BaseService> s;\n+    \n+    private ServiceType(Class<? extends BaseService> service) {\n+        s = service;\n+    }\n+    \n+    public Service createService() {\n+        return new Service(s);\n+    }\n+    \n+}"}, {"sha": "a183f2ca6ae49eca605509c238c73ea869a4bee3", "filename": "src/net/server/channel/services/ServicesManager.java", "status": "renamed", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/ServicesManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/ServicesManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/ServicesManager.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -1,6 +1,6 @@\n /*\n-    This file is part of the HeavenMS MapleStory Server\n-    Copyleft (L) 2016 - 2018 RonanLana\n+    This file is part of the HeavenMS MapleStory Server, commands OdinMS-based\n+    Copyleft (L) 2016 - 2019 RonanLana\n \n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU Affero General Public License as\n@@ -17,26 +17,34 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.task;\n-\n-import java.util.Collections;\n-import net.server.audit.locks.MonitoredLockType;\n-import net.server.audit.locks.MonitoredReentrantLock;\n+package net.server.channel.services;\n \n /**\n  *\n  * @author Ronan\n  */\n-public class FaceExpressionScheduler extends BaseScheduler {\n-    public FaceExpressionScheduler(final MonitoredReentrantLock channelFaceLock) {\n-        super(MonitoredLockType.CHANNEL_FACESCHDL, Collections.singletonList(channelFaceLock));\n+public class ServicesManager {\n+    \n+    private Service[] services;\n+    \n+    public ServicesManager() {\n+        ServiceType[] serviceTypes = ServiceType.values();\n+        \n+        services = new Service[serviceTypes.length];\n+        for (ServiceType type : serviceTypes) {\n+            services[type.ordinal()] = type.createService();\n+        }\n     }\n     \n-    public void registerFaceExpression(Integer characterId, Runnable runAction) {\n-        registerEntry(characterId, runAction, 5000);\n+    public Service getAccess(ServiceType s) {\n+        return services[s.ordinal()];\n     }\n     \n-    public void unregisterFaceExpression(Integer characterId) {\n-        interruptEntry(characterId);\n+    public void shutdown() {\n+        for (int i = 0; i < ServiceType.values().length; i++) {\n+            services[i].dispose();\n+        }\n+        services = null;\n     }\n+    \n }", "previous_filename": "src/net/server/channel/task/FaceExpressionScheduler.java"}, {"sha": "a17ccf207e6a6bb3d7a219de4773ae2f7213b266", "filename": "src/net/server/channel/services/task/BaseService.java", "status": "renamed", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/BaseService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/BaseService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/task/BaseService.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -1,6 +1,6 @@\n /*\n-    This file is part of the HeavenMS MapleStory Server\n-    Copyleft (L) 2016 - 2018 RonanLana\n+    This file is part of the HeavenMS MapleStory Server, commands OdinMS-based\n+    Copyleft (L) 2016 - 2019 RonanLana\n \n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU Affero General Public License as\n@@ -17,20 +17,21 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.task;\n+package net.server.channel.services.task;\n \n-import net.server.audit.locks.MonitoredLockType;\n+import config.YamlConfig;\n \n /**\n  *\n  * @author Ronan\n  */\n-public class EventScheduler extends BaseScheduler {\n-    public EventScheduler() {\n-        super(MonitoredLockType.CHANNEL_EVENTS);\n-    }\n+public abstract class BaseService {\n     \n-    public void registerDelayedAction(Runnable runAction, long delay) {\n-        registerEntry(runAction, runAction, delay);\n+    protected static int getChannelSchedulerIndex(int mapid) {\n+        int section = 1000000000 / YamlConfig.config.server.CHANNEL_LOCKS;\n+        return mapid / section;\n     }\n+    \n+    public abstract void dispose();\n+    \n }", "previous_filename": "src/net/server/channel/task/EventScheduler.java"}, {"sha": "f9b6a6c0770b67b27be6b55a926399769a89d0de", "filename": "src/net/server/channel/services/task/EventService.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/EventService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/EventService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/task/EventService.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -0,0 +1,65 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.services.task;\n+\n+import config.YamlConfig;\n+import net.server.audit.locks.MonitoredLockType;\n+import net.server.channel.services.BaseScheduler;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class EventService extends BaseService {\n+    \n+    private EventScheduler eventSchedulers[] = new EventScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n+    \n+    public EventService() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            eventSchedulers[i] = new EventScheduler();\n+        }\n+    }\n+    \n+    public void dispose() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            if(eventSchedulers[i] != null) {\n+                eventSchedulers[i].dispose();\n+                eventSchedulers[i] = null;\n+            }\n+        }\n+    }\n+    \n+    public void registerEventAction(int mapid, Runnable runAction, long delay) {\n+        eventSchedulers[getChannelSchedulerIndex(mapid)].registerDelayedAction(runAction, delay);\n+    }\n+    \n+    private class EventScheduler extends BaseScheduler {\n+        \n+        public EventScheduler() {\n+            super(MonitoredLockType.CHANNEL_EVENTS);\n+        }\n+\n+        public void registerDelayedAction(Runnable runAction, long delay) {\n+            registerEntry(runAction, runAction, delay);\n+        }\n+        \n+    }\n+    \n+}"}, {"sha": "968b3d6c0cb930bdd08e3fd23647a1971e2a8c3d", "filename": "src/net/server/channel/services/task/FaceExpressionService.java", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/FaceExpressionService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/FaceExpressionService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/task/FaceExpressionService.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -0,0 +1,128 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.services.task;\n+\n+import client.MapleCharacter;\n+import config.YamlConfig;\n+import java.util.Collections;\n+import net.server.audit.LockCollector;\n+import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReentrantLock;\n+import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import net.server.channel.services.BaseScheduler;\n+import server.maps.MapleMap;\n+import tools.MaplePacketCreator;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class FaceExpressionService extends BaseService {\n+    \n+    private FaceExpressionScheduler faceExpressionSchedulers[] = new FaceExpressionScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n+    private MonitoredReentrantLock faceLock[] = new MonitoredReentrantLock[YamlConfig.config.server.CHANNEL_LOCKS];\n+    \n+    public FaceExpressionService() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            faceLock[i] = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHANNEL_FACEEXPRS, true);\n+            faceExpressionSchedulers[i] = new FaceExpressionScheduler(faceLock[i]);\n+        }\n+    }\n+    \n+    private void emptyLocks() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            faceLock[i] = faceLock[i].dispose();\n+        }\n+    }\n+    \n+    private void disposeLocks() {\n+        LockCollector.getInstance().registerDisposeAction(new Runnable() {\n+            @Override\n+            public void run() {\n+                emptyLocks();\n+            }\n+        });\n+    }\n+    \n+    public void dispose() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            if(faceExpressionSchedulers[i] != null) {\n+                faceExpressionSchedulers[i].dispose();\n+                faceExpressionSchedulers[i] = null;\n+            }\n+        }\n+        \n+        disposeLocks();\n+    }\n+    \n+    public void registerFaceExpression(final MapleMap map, final MapleCharacter chr, int emote) {\n+        int lockid = getChannelSchedulerIndex(map.getId());\n+        \n+        Runnable cancelAction = new Runnable() {\n+            @Override\n+            public void run() {\n+                if(chr.isLoggedinWorld()) {\n+                    map.broadcastMessage(chr, MaplePacketCreator.facialExpression(chr, 0), false);\n+                }\n+            }\n+        };\n+        \n+        faceLock[lockid].lock();\n+        try {\n+            if(!chr.isLoggedinWorld()) {\n+                return;\n+            }\n+            \n+            faceExpressionSchedulers[lockid].registerFaceExpression(chr.getId(), cancelAction);\n+        } finally {\n+            faceLock[lockid].unlock();\n+        }\n+        \n+        map.broadcastMessage(chr, MaplePacketCreator.facialExpression(chr, emote), false);\n+    }\n+    \n+    public void unregisterFaceExpression(int mapid, MapleCharacter chr) {\n+        int lockid = getChannelSchedulerIndex(mapid);\n+        \n+        faceLock[lockid].lock();\n+        try {\n+            faceExpressionSchedulers[lockid].unregisterFaceExpression(chr.getId());\n+        } finally {\n+            faceLock[lockid].unlock();\n+        }\n+    }\n+    \n+    private class FaceExpressionScheduler extends BaseScheduler {\n+        \n+        public FaceExpressionScheduler(final MonitoredReentrantLock channelFaceLock) {\n+            super(MonitoredLockType.CHANNEL_FACESCHDL, Collections.singletonList(channelFaceLock));\n+        }\n+\n+        public void registerFaceExpression(Integer characterId, Runnable runAction) {\n+            registerEntry(characterId, runAction, 5000);\n+        }\n+\n+        public void unregisterFaceExpression(Integer characterId) {\n+            interruptEntry(characterId);\n+        }\n+    \n+    }\n+    \n+}"}, {"sha": "e3043a01692934a453c02e88e2cba2ab5ea76c53", "filename": "src/net/server/channel/services/task/MobAnimationService.java", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/MobAnimationService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/MobAnimationService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/task/MobAnimationService.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -0,0 +1,125 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.services.task;\n+\n+import config.YamlConfig;\n+import net.server.audit.locks.MonitoredLockType;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import net.server.audit.LockCollector;\n+import net.server.audit.locks.MonitoredReentrantLock;\n+import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import net.server.channel.services.BaseScheduler;\n+import net.server.channel.services.SchedulerListener;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class MobAnimationService extends BaseService {\n+    \n+    private MobAnimationScheduler mobAnimationSchedulers[] = new MobAnimationScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n+    \n+    public MobAnimationService() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            mobAnimationSchedulers[i] = new MobAnimationScheduler();\n+        }\n+    }\n+    \n+    public void dispose() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            if(mobAnimationSchedulers[i] != null) {\n+                mobAnimationSchedulers[i].dispose();\n+                mobAnimationSchedulers[i] = null;\n+            }\n+        }\n+    }\n+    \n+    public boolean registerMobOnAnimationEffect(int mapid, int mobHash, long delay) {\n+        return mobAnimationSchedulers[getChannelSchedulerIndex(mapid)].registerAnimationMode(mobHash, delay);\n+    }\n+    \n+    private static Runnable r = new Runnable() {\n+        @Override\n+        public void run() {}    // do nothing\n+    };\n+    \n+    private class MobAnimationScheduler extends BaseScheduler {\n+        Set<Integer> onAnimationMobs = new HashSet<>(1000);\n+        private MonitoredReentrantLock animationLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHANNEL_MOBANIMAT, true);\n+        \n+        public MobAnimationScheduler() {\n+            super(MonitoredLockType.CHANNEL_MOBACTION);\n+\n+            super.addListener(new SchedulerListener() {\n+                @Override\n+                public void removedScheduledEntries(List<Object> toRemove, boolean update) {\n+                    animationLock.lock();\n+                    try {\n+                        for(Object hashObj : toRemove) {\n+                            Integer mobHash = (Integer) hashObj;\n+                            onAnimationMobs.remove(mobHash);\n+                        }\n+                    } finally {\n+                        animationLock.unlock();\n+                    }\n+                }\n+            });\n+        }\n+\n+        public boolean registerAnimationMode(Integer mobHash, long animationTime) {\n+            animationLock.lock();\n+            try {\n+                if(onAnimationMobs.contains(mobHash)) {\n+                    return false;\n+                }\n+\n+                registerEntry(mobHash, r, animationTime);\n+                onAnimationMobs.add(mobHash);\n+                return true;\n+            } finally {\n+                animationLock.unlock();\n+            }\n+        }\n+\n+        @Override\n+        public void dispose() {\n+            disposeLocks();\n+            super.dispose();\n+        }\n+\n+        private void disposeLocks() {\n+            LockCollector.getInstance().registerDisposeAction(new Runnable() {\n+                @Override\n+                public void run() {\n+                    emptyLocks();\n+                }\n+            });\n+        }\n+\n+        private void emptyLocks() {\n+            animationLock = animationLock.dispose();\n+        }\n+        \n+    }\n+    \n+}"}, {"sha": "7092c48a423150fccb6cab103e678a08117d75ba", "filename": "src/net/server/channel/services/task/MobClearSkillService.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/MobClearSkillService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/MobClearSkillService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/task/MobClearSkillService.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -0,0 +1,65 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.services.task;\n+\n+import config.YamlConfig;\n+import net.server.audit.locks.MonitoredLockType;\n+import net.server.channel.services.BaseScheduler;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class MobClearSkillService extends BaseService {\n+    \n+    private MobClearSkillScheduler mobClearSkillSchedulers[] = new MobClearSkillScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n+    \n+    public MobClearSkillService() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            mobClearSkillSchedulers[i] = new MobClearSkillScheduler();\n+        }\n+    }\n+    \n+    public void dispose() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            if(mobClearSkillSchedulers[i] != null) {\n+                mobClearSkillSchedulers[i].dispose();\n+                mobClearSkillSchedulers[i] = null;\n+            }\n+        }    \n+    }\n+    \n+    public void registerMobClearSkillAction(int mapid, Runnable runAction, long delay) {\n+        mobClearSkillSchedulers[getChannelSchedulerIndex(mapid)].registerClearSkillAction(runAction, delay);\n+    }\n+    \n+    private class MobClearSkillScheduler extends BaseScheduler {\n+        \n+        public MobClearSkillScheduler() {\n+            super(MonitoredLockType.CHANNEL_MOBSKILL);\n+        }\n+\n+        public void registerClearSkillAction(Runnable runAction, long delay) {\n+            registerEntry(runAction, runAction, delay);\n+        }\n+        \n+    }\n+    \n+}"}, {"sha": "6428dd099856a5c21b1146a6f401620a709264e2", "filename": "src/net/server/channel/services/task/MobMistService.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/MobMistService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/MobMistService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/task/MobMistService.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -0,0 +1,65 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.services.task;\n+\n+import config.YamlConfig;\n+import net.server.audit.locks.MonitoredLockType;\n+import net.server.channel.services.BaseScheduler;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class MobMistService extends BaseService {\n+    \n+    private MobMistScheduler mobMistSchedulers[] = new MobMistScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n+    \n+    public MobMistService() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            mobMistSchedulers[i] = new MobMistScheduler();\n+        }\n+    }\n+    \n+    public void dispose() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            if(mobMistSchedulers[i] != null) {\n+                mobMistSchedulers[i].dispose();\n+                mobMistSchedulers[i] = null;\n+            }\n+        }    \n+    }\n+    \n+    public void registerMobMistCancelAction(int mapid, Runnable runAction, long delay) {\n+        mobMistSchedulers[getChannelSchedulerIndex(mapid)].registerMistCancelAction(runAction, delay);\n+    }\n+    \n+    private class MobMistScheduler extends BaseScheduler {\n+\n+        public MobMistScheduler() {\n+            super(MonitoredLockType.CHANNEL_MOBMIST);\n+        }\n+\n+        public void registerMistCancelAction(Runnable runAction, long delay) {\n+            registerEntry(runAction, runAction, delay);\n+        }\n+        \n+    }\n+    \n+}"}, {"sha": "e6b39b3a78996f5c038bdb5093cb6909be5b88c7", "filename": "src/net/server/channel/services/task/MobStatusService.java", "status": "added", "additions": 168, "deletions": 0, "changes": 168, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/MobStatusService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/MobStatusService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/task/MobStatusService.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -0,0 +1,168 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.services.task;\n+\n+import client.status.MonsterStatusEffect;\n+import config.YamlConfig;\n+import java.util.HashMap;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import net.server.audit.LockCollector;\n+import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReentrantLock;\n+import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import net.server.channel.services.BaseScheduler;\n+import net.server.channel.services.SchedulerListener;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class MobStatusService extends BaseService {\n+    \n+    private MobStatusScheduler mobStatusSchedulers[] = new MobStatusScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n+    \n+    public MobStatusService() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            mobStatusSchedulers[i] = new MobStatusScheduler();\n+        }\n+    }\n+    \n+    public void dispose() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            if(mobStatusSchedulers[i] != null) {\n+                mobStatusSchedulers[i].dispose();\n+                mobStatusSchedulers[i] = null;\n+            }\n+        }\n+    }\n+    \n+    public void registerMobStatus(int mapid, MonsterStatusEffect mse, Runnable cancelAction, long duration) {\n+        registerMobStatus(mapid, mse, cancelAction, duration, null, -1);\n+    }\n+    \n+    public void registerMobStatus(int mapid, MonsterStatusEffect mse, Runnable cancelAction, long duration, Runnable overtimeAction, int overtimeDelay) {\n+        mobStatusSchedulers[getChannelSchedulerIndex(mapid)].registerMobStatus(mse, cancelAction, duration, overtimeAction, overtimeDelay);\n+    }\n+    \n+    public void interruptMobStatus(int mapid, MonsterStatusEffect mse) {\n+        mobStatusSchedulers[getChannelSchedulerIndex(mapid)].interruptMobStatus(mse);\n+    }\n+    \n+    private class MobStatusScheduler extends BaseScheduler {\n+\n+        private Map<MonsterStatusEffect, MobStatusOvertimeEntry> registeredMobStatusOvertime = new HashMap<>();\n+        private MonitoredReentrantLock overtimeStatusLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHANNEL_OVTSTATUS, true);\n+\n+        private class MobStatusOvertimeEntry {\n+            private int procCount;\n+            private int procLimit;\n+            private Runnable r;\n+\n+            protected MobStatusOvertimeEntry(int delay, Runnable run) {\n+                procCount = 0;\n+                procLimit = (int)Math.ceil((float) delay / YamlConfig.config.server.MOB_STATUS_MONITOR_PROC);\n+                r = run;\n+            }\n+\n+            protected void update(List<Runnable> toRun) {\n+                procCount++;\n+                if(procCount >= procLimit) {\n+                    procCount = 0;\n+                    toRun.add(r);\n+                }\n+            }\n+        }\n+\n+        public MobStatusScheduler() {\n+            super(MonitoredLockType.CHANNEL_MOBSTATUS);\n+\n+            super.addListener(new SchedulerListener() {\n+                @Override\n+                public void removedScheduledEntries(List<Object> toRemove, boolean update) {\n+                    List<Runnable> toRun = new ArrayList<>();\n+\n+                    overtimeStatusLock.lock();\n+                    try {\n+                        for(Object mseo : toRemove) {\n+                            MonsterStatusEffect mse = (MonsterStatusEffect) mseo;\n+                            registeredMobStatusOvertime.remove(mse);\n+                        }\n+\n+                        if(update) {\n+                            // it's probably ok to use one thread for both management & overtime actions\n+                            List<MobStatusOvertimeEntry> mdoeList = new ArrayList<>(registeredMobStatusOvertime.values());\n+                            for(MobStatusOvertimeEntry mdoe : mdoeList) {\n+                                mdoe.update(toRun);\n+                            }\n+                        }\n+                    } finally {\n+                        overtimeStatusLock.unlock();\n+                    }\n+\n+                    for(Runnable r : toRun) {\n+                        r.run();\n+                    }\n+                }\n+            });\n+        }\n+\n+        public void registerMobStatus(MonsterStatusEffect mse, Runnable cancelStatus, long duration, Runnable overtimeStatus, int overtimeDelay) {\n+            if(overtimeStatus != null) {\n+                MobStatusOvertimeEntry mdoe = new MobStatusOvertimeEntry(overtimeDelay, overtimeStatus);\n+\n+                overtimeStatusLock.lock();\n+                try {\n+                    registeredMobStatusOvertime.put(mse, mdoe);\n+                } finally {\n+                    overtimeStatusLock.unlock();\n+                }\n+            }\n+\n+            registerEntry(mse, cancelStatus, duration);\n+        }\n+\n+        public void interruptMobStatus(MonsterStatusEffect mse) {\n+            interruptEntry(mse);\n+        }\n+\n+        @Override\n+        public void dispose() {\n+            disposeLocks();\n+            super.dispose();\n+        }\n+\n+        private void disposeLocks() {\n+            LockCollector.getInstance().registerDisposeAction(new Runnable() {\n+                @Override\n+                public void run() {\n+                    emptyLocks();\n+                }\n+            });\n+        }\n+\n+        private void emptyLocks() {\n+            overtimeStatusLock = overtimeStatusLock.dispose();\n+        }\n+        \n+    }\n+    \n+}"}, {"sha": "3dad65daa208488358881d721ebd6f32d5383cea", "filename": "src/net/server/channel/services/task/OverallService.java", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/OverallService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/net/server/channel/services/task/OverallService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/services/task/OverallService.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -0,0 +1,74 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.channel.services.task;\n+\n+import config.YamlConfig;\n+import net.server.audit.locks.MonitoredLockType;\n+import net.server.channel.services.BaseScheduler;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class OverallService extends BaseService {   // thanks Alex for suggesting a refactor over the several channel schedulers unnecessarily populating the Channel class\n+    \n+    private OverallScheduler channelSchedulers[] = new OverallScheduler[YamlConfig.config.server.CHANNEL_LOCKS];\n+    \n+    public OverallService() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            channelSchedulers[i] = new OverallScheduler();\n+        }\n+    }\n+    \n+    public void dispose() {\n+        for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n+            if(channelSchedulers[i] != null) {\n+                channelSchedulers[i].dispose();\n+                channelSchedulers[i] = null;\n+            }\n+        }\n+    }\n+    \n+    public void registerOverallAction(int mapid, Runnable runAction, long delay) {\n+        channelSchedulers[getChannelSchedulerIndex(mapid)].registerDelayedAction(runAction, delay);\n+    }\n+    \n+    public void forceRunOverallAction(int mapid, Runnable runAction) {\n+        channelSchedulers[getChannelSchedulerIndex(mapid)].forceRunDelayedAction(runAction);\n+    }\n+    \n+    \n+    public class OverallScheduler extends BaseScheduler {\n+        \n+        public OverallScheduler() {\n+            super(MonitoredLockType.CHANNEL_OVERALL);\n+        }\n+\n+        public void registerDelayedAction(Runnable runAction, long delay) {\n+            registerEntry(runAction, runAction, delay);\n+        }\n+\n+        public void forceRunDelayedAction(Runnable runAction) {\n+            interruptEntry(runAction);\n+        }\n+        \n+    }\n+    \n+}"}, {"sha": "b83e634c2c821094aca1772bc2b564a2c50fea91", "filename": "src/net/server/channel/task/MobAnimationScheduler.java", "status": "removed", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/b93c9ce1d6dca9fa65908204341bfc4c08ccd771/src/net/server/channel/task/MobAnimationScheduler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/b93c9ce1d6dca9fa65908204341bfc4c08ccd771/src/net/server/channel/task/MobAnimationScheduler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/task/MobAnimationScheduler.java?ref=b93c9ce1d6dca9fa65908204341bfc4c08ccd771", "patch": "@@ -1,96 +0,0 @@\n-/*\n-    This file is part of the HeavenMS MapleStory Server\n-    Copyleft (L) 2016 - 2018 RonanLana\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n-package net.server.channel.task;\n-\n-import net.server.audit.locks.MonitoredLockType;\n-\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Set;\n-import net.server.audit.LockCollector;\n-import net.server.audit.locks.MonitoredReentrantLock;\n-import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n-\n-/**\n- *\n- * @author Ronan\n- */\n-public class MobAnimationScheduler extends BaseScheduler {\n-    Set<Integer> onAnimationMobs = new HashSet<>(1000);\n-    private MonitoredReentrantLock animationLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHANNEL_MOBANIMAT, true);\n-    \n-    private static Runnable r = new Runnable() {\n-        @Override\n-        public void run() {}    // do nothing\n-    };\n-    \n-    public MobAnimationScheduler() {\n-        super(MonitoredLockType.CHANNEL_MOBACTION);\n-        \n-        super.addListener(new SchedulerListener() {\n-            @Override\n-            public void removedScheduledEntries(List<Object> toRemove, boolean update) {\n-                animationLock.lock();\n-                try {\n-                    for(Object hashObj : toRemove) {\n-                        Integer mobHash = (Integer) hashObj;\n-                        onAnimationMobs.remove(mobHash);\n-                    }\n-                } finally {\n-                    animationLock.unlock();\n-                }\n-            }\n-        });\n-    }\n-    \n-    public boolean registerAnimationMode(Integer mobHash, long animationTime) {\n-        animationLock.lock();\n-        try {\n-            if(onAnimationMobs.contains(mobHash)) {\n-                return false;\n-            }\n-            \n-            registerEntry(mobHash, r, animationTime);\n-            onAnimationMobs.add(mobHash);\n-            return true;\n-        } finally {\n-            animationLock.unlock();\n-        }\n-    }\n-    \n-    @Override\n-    public void dispose() {\n-        disposeLocks();\n-        super.dispose();\n-    }\n-    \n-    private void disposeLocks() {\n-        LockCollector.getInstance().registerDisposeAction(new Runnable() {\n-            @Override\n-            public void run() {\n-                emptyLocks();\n-            }\n-        });\n-    }\n-    \n-    private void emptyLocks() {\n-        animationLock = animationLock.dispose();\n-    }\n-}"}, {"sha": "8de9577e7a2b45926b7bb465ed6512b2b13f006e", "filename": "src/net/server/channel/task/MobStatusScheduler.java", "status": "removed", "additions": 0, "deletions": 131, "changes": 131, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/b93c9ce1d6dca9fa65908204341bfc4c08ccd771/src/net/server/channel/task/MobStatusScheduler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/b93c9ce1d6dca9fa65908204341bfc4c08ccd771/src/net/server/channel/task/MobStatusScheduler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/task/MobStatusScheduler.java?ref=b93c9ce1d6dca9fa65908204341bfc4c08ccd771", "patch": "@@ -1,131 +0,0 @@\n-/*\n-    This file is part of the HeavenMS MapleStory Server\n-    Copyleft (L) 2016 - 2018 RonanLana\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU Affero General Public License as\n-    published by the Free Software Foundation version 3 as published by\n-    the Free Software Foundation. You may not use, modify or distribute\n-    this program under any other version of the GNU Affero General Public\n-    License.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU Affero General Public License for more details.\n-\n-    You should have received a copy of the GNU Affero General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-*/\n-package net.server.channel.task;\n-\n-import client.status.MonsterStatusEffect;\n-import config.YamlConfig;\n-import java.util.HashMap;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Map;\n-import net.server.audit.LockCollector;\n-import net.server.audit.locks.MonitoredLockType;\n-import net.server.audit.locks.MonitoredReentrantLock;\n-import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n-\n-/**\n- *\n- * @author Ronan\n- */\n-public class MobStatusScheduler extends BaseScheduler {\n-    private Map<MonsterStatusEffect, MobStatusOvertimeEntry> registeredMobStatusOvertime = new HashMap<>();\n-    private MonitoredReentrantLock overtimeStatusLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHANNEL_OVTSTATUS, true);\n-    \n-    private class MobStatusOvertimeEntry {\n-        private int procCount;\n-        private int procLimit;\n-        private Runnable r;\n-        \n-        protected MobStatusOvertimeEntry(int delay, Runnable run) {\n-            procCount = 0;\n-            procLimit = (int)Math.ceil((float) delay / YamlConfig.config.server.MOB_STATUS_MONITOR_PROC);\n-            r = run;\n-        }\n-        \n-        protected void update(List<Runnable> toRun) {\n-            procCount++;\n-            if(procCount >= procLimit) {\n-                procCount = 0;\n-                toRun.add(r);\n-            }\n-        }\n-    }\n-    \n-    public MobStatusScheduler() {\n-        super(MonitoredLockType.CHANNEL_MOBSTATUS);\n-        \n-        super.addListener(new SchedulerListener() {\n-            @Override\n-            public void removedScheduledEntries(List<Object> toRemove, boolean update) {\n-                List<Runnable> toRun = new ArrayList<>();\n-                \n-                overtimeStatusLock.lock();\n-                try {\n-                    for(Object mseo : toRemove) {\n-                        MonsterStatusEffect mse = (MonsterStatusEffect) mseo;\n-                        registeredMobStatusOvertime.remove(mse);\n-                    }\n-                    \n-                    if(update) {\n-                        // it's probably ok to use one thread for both management & overtime actions\n-                        List<MobStatusOvertimeEntry> mdoeList = new ArrayList<>(registeredMobStatusOvertime.values());\n-                        for(MobStatusOvertimeEntry mdoe : mdoeList) {\n-                            mdoe.update(toRun);\n-                        }\n-                    }\n-                } finally {\n-                    overtimeStatusLock.unlock();\n-                }\n-                \n-                for(Runnable r : toRun) {\n-                    r.run();\n-                }\n-            }\n-        });\n-    }\n-    \n-    public void registerMobStatus(MonsterStatusEffect mse, Runnable cancelStatus, long duration, Runnable overtimeStatus, int overtimeDelay) {\n-        if(overtimeStatus != null) {\n-            MobStatusOvertimeEntry mdoe = new MobStatusOvertimeEntry(overtimeDelay, overtimeStatus);\n-            \n-            overtimeStatusLock.lock();\n-            try {\n-                registeredMobStatusOvertime.put(mse, mdoe);\n-            } finally {\n-                overtimeStatusLock.unlock();\n-            }\n-        }\n-        \n-        registerEntry(mse, cancelStatus, duration);\n-    }\n-    \n-    public void interruptMobStatus(MonsterStatusEffect mse) {\n-        interruptEntry(mse);\n-    }\n-    \n-    @Override\n-    public void dispose() {\n-        disposeLocks();\n-        super.dispose();\n-    }\n-    \n-    private void disposeLocks() {\n-        LockCollector.getInstance().registerDisposeAction(new Runnable() {\n-            @Override\n-            public void run() {\n-                emptyLocks();\n-            }\n-        });\n-    }\n-    \n-    private void emptyLocks() {\n-        overtimeStatusLock = overtimeStatusLock.dispose();\n-    }\n-}"}, {"sha": "51b92419e118aed7d9a2865b056d86b7db706060", "filename": "src/provider/MapleDataTool.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/provider/MapleDataTool.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/provider/MapleDataTool.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/provider/MapleDataTool.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -107,7 +107,12 @@ public static int getInt(MapleData data, int def) {\n         } else if (data.getType() == MapleDataType.STRING) {\n             return Integer.parseInt(getString(data));\n         } else {\n-            return ((Integer) data.getData()).intValue();\n+            Object numData = data.getData();\n+            if (numData instanceof Integer) {\n+                return (Integer) numData;\n+            } else {\n+                return (Short) numData;\n+            }\n         }\n     }\n "}, {"sha": "ad23c6703bc4f4d3b7ec4188265e51a474b8ec10", "filename": "src/scripting/portal/PortalPlayerInteraction.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/scripting/portal/PortalPlayerInteraction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/scripting/portal/PortalPlayerInteraction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/portal/PortalPlayerInteraction.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -27,8 +27,8 @@\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import scripting.AbstractPlayerInteraction;\n+import scripting.map.MapScriptManager;\n import server.maps.MaplePortal;\n-import server.quest.MapleQuest;\n import tools.DatabaseConnection;\n import tools.MaplePacketCreator;\n \n@@ -44,6 +44,11 @@ public PortalPlayerInteraction(MapleClient c, MaplePortal portal) {\n     public MaplePortal getPortal() {\n         return portal;\n     }\n+    \n+    public void runMapScript() {\n+        MapScriptManager msm = MapScriptManager.getInstance();\n+        msm.runMapScript(c, \"onUserEnter/\" + portal.getScriptName(), false);\n+    }\n \n     public boolean hasLevel30Character() {\n         PreparedStatement ps = null;"}, {"sha": "f144d21c519aae7d45bb9fc10abfa8e08c9d8f50", "filename": "src/server/MapleSkillbookInformationProvider.java", "status": "modified", "additions": 21, "deletions": 154, "changes": 175, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/MapleSkillbookInformationProvider.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/MapleSkillbookInformationProvider.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleSkillbookInformationProvider.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -21,7 +21,6 @@\n \n import java.io.BufferedReader;\n import java.io.File;\n-import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.InputStreamReader;\n import java.sql.Connection;\n@@ -38,13 +37,17 @@\n import java.util.Set;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n+import provider.MapleData;\n+import provider.MapleDataProviderFactory;\n+import provider.MapleDataTool;\n import tools.DatabaseConnection;\n \n /**\n  *\n  * @author RonanLana\n  */\n public class MapleSkillbookInformationProvider {\n+    \n     private final static MapleSkillbookInformationProvider instance = new MapleSkillbookInformationProvider();\n     \n     public static MapleSkillbookInformationProvider getInstance() {\n@@ -86,167 +89,31 @@ public static MapleSkillbookInformationProvider getInstance() {\n     static {\n         loadSkillbooks();\n     }\n-\n-    private static String getName(String token) {\n-        int i, j;\n-        char[] dest;\n-        String d;\n-        \n-        i = token.lastIndexOf(\"name\");\n-        i = token.indexOf(\"\\\"\", i) + 1; //lower bound of the string\n-        j = token.indexOf(\"\\\"\", i);     //upper bound\n-\n-        if(j < i) {           //node value containing 'name' in it's scope, cheap fix since we don't deal with strings anyway\n-            System.out.println(\"[CRITICAL] Found this '\" + token + \"'\");\n-            return \"0\";\n-        }\n-        \n-        dest = new char[initialStringLength];\n-        token.getChars(i, j, dest, 0);\n-\n-        d = new String(dest);\n-        return(d.trim());\n-    }\n     \n-    private static String getValue(String token) {\n-        int i, j;\n-        char[] dest;\n-        String d;\n-\n-        i = token.lastIndexOf(\"value\");\n-        i = token.indexOf(\"\\\"\", i) + 1; //lower bound of the string\n-        j = token.indexOf(\"\\\"\", i);     //upper bound\n-\n-        dest = new char[initialStringLength];\n-        token.getChars(i, j, dest, 0);\n-\n-        d = new String(dest);\n-        return(d.trim());\n-    }\n-    \n-    private static void forwardCursor(int st) {\n-        String line = null;\n-\n-        try {\n-            while(status >= st && (line = bufferedReader.readLine()) != null) {\n-                simpleToken(line);\n-            }\n-        }\n-        catch(Exception e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n-    private static void simpleToken(String token) {\n-        if(token.contains(\"/imgdir\")) {\n-            status -= 1;\n-        }\n-        else if(token.contains(\"imgdir\") && !token.endsWith(\"/>\")) {    // '\\>' XML node description not being accounted, issue found thanks to Robin Schulz, CanIGetaPR\n-            status += 1;\n-        }\n-    }\n-    \n-    private static void inspectQuestItemList(int st) {\n-        String line = null;\n-\n-        try {\n-            while(status >= st && (line = bufferedReader.readLine()) != null) {\n-                readItemToken(line);\n-            }\n-        }\n-        catch(Exception e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n     public static boolean isSkillBook(int itemid) {\n         return itemid >= skillbookMinItemid && itemid < skillbookMaxItemid;\n     }\n     \n-    private static void processCurrentItem() {\n-        try {\n-            if(isSkillBook(currentItemid)) {\n-                if(currentCount > 0) {\n-                    foundSkillbooks.put(currentItemid, SkillBookEntry.QUEST);\n-                }\n-            }\n-        } catch(Exception e) {}\n-    }\n-    \n-    private static void readItemToken(String token) {\n-        if(token.contains(\"/imgdir\")) {\n-            status -= 1;\n-            \n-            processCurrentItem();\n-            \n-            currentItemid = 0;\n-            currentCount = 0;\n-        }\n-        else if(token.contains(\"imgdir\") && !token.endsWith(\"/>\")) {\n-            status += 1;\n-        }\n-        else {\n-            String d = getName(token);\n-            \n-            if(d.equals(\"id\")) {\n-                currentItemid = Integer.parseInt(getValue(token));\n-            } else if(d.equals(\"count\")) {\n-                currentCount = Integer.parseInt(getValue(token));\n-            }\n-        }\n-    }\n-\n-    private static void translateActToken(String token) {\n-        String d;\n-        int temp;\n-\n-        if(token.contains(\"/imgdir\")) {\n-            status -= 1;\n-        }\n-        else if(token.contains(\"imgdir\") && !token.endsWith(\"/>\")) {\n-            if(status == 1) {           //getting QuestId\n-                d = getName(token);\n-                questId = Integer.parseInt(d);\n-            }\n-            else if(status == 2) {      //start/complete\n-                d = getName(token);\n-                isCompleteState = Integer.parseInt(d);\n-            }\n-            else if(status == 3) {\n-                d = getName(token);\n-\n-                if(d.contains(\"item\")) {\n-                    temp = status;\n-                    inspectQuestItemList(temp);\n-                } else {\n-                    forwardCursor(status);\n-                }\n-            }\n-\n-            status += 1;\n-        }\n-    }\n-    \n     private static void fetchSkillbooksFromQuests() {\n-        String line = \"\";\n-        int lineNumber = 0; // add line number, thanks to Alex (CanIGetaPR)\n+        MapleData actData = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/\" + \"Quest.wz\")).getData(\"Act.img\");\n         \n-        try {\n-            fileReader = new InputStreamReader(new FileInputStream(wzPath + \"/Quest.wz/Act.img.xml\"), \"UTF-8\");\n-            bufferedReader = new BufferedReader(fileReader);\n-\n-            while((line = bufferedReader.readLine()) != null) {\n-                lineNumber++;\n-                translateActToken(line);\n+        for (MapleData questData : actData.getChildren()) {\n+            for (MapleData questStatusData : questData.getChildren()) {\n+                for (MapleData questNodeData : questStatusData.getChildren()) {\n+                    if (questNodeData.getName().contentEquals(\"item\")) {\n+                        for (MapleData questItemData : questNodeData.getChildren()) {\n+                            int itemid = MapleDataTool.getInt(\"id\", questItemData, 0);\n+                            int itemcount = MapleDataTool.getInt(\"count\", questItemData, 0);\n+                            \n+                            if (isSkillBook(itemid) && itemcount > 0) {\n+                                foundSkillbooks.put(currentItemid, SkillBookEntry.QUEST);\n+                            }\n+                        }\n+                        \n+                        break;\n+                    }\n+                }\n             }\n-\n-            bufferedReader.close();\n-            fileReader.close();\n-        } catch(IOException ioe) {\n-            System.out.println(\"Failed to read Quest.wz file. Line \" + lineNumber + \": \" + line);\n-            ioe.printStackTrace();\n-        } catch (Exception e) {\n-            System.out.println(\"Failed to parse Quest.wz XML file.\");   // catch this exception, thanks to YonhNi\n         }\n     }\n     "}, {"sha": "3a03929f1a654549272c4261ca2a8335e52b2e89", "filename": "src/server/life/MapleLifeFactory.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/life/MapleLifeFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/life/MapleLifeFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleLifeFactory.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -163,11 +163,11 @@ private static void setMonsterAttackInfo(int mid, List<MobAttackInfoHolder> atta\n         }\n         stats.setFirstAttack(firstAttack > 0);\n         stats.setDropPeriod(MapleDataTool.getIntConvert(\"dropItemPeriod\", monsterInfoData, stats.getDropPeriod() / 10000) * 10000);\n-\n-        if (!(stats.isBoss() && !hpbarBosses.contains(mid))) {  // thanks Riizade, Z1peR, Anesthetic for noticing some bosses crashing players due to missing requirements\n-            stats.setTagColor(MapleDataTool.getIntConvert(\"hpTagColor\", monsterInfoData, 0));\n-            stats.setTagBgColor(MapleDataTool.getIntConvert(\"hpTagBgcolor\", monsterInfoData, 0));\n-        }\n+        \n+        // thanks yuxaij, Riizade, Z1peR, Anesthetic for noticing some bosses crashing players due to missing requirements\n+        boolean hpbarBoss = stats.isBoss() && hpbarBosses.contains(mid);\n+        stats.setTagColor(hpbarBoss ? MapleDataTool.getIntConvert(\"hpTagColor\", monsterInfoData, 0) : 0);\n+        stats.setTagBgColor(hpbarBoss ? MapleDataTool.getIntConvert(\"hpTagBgcolor\", monsterInfoData, 0) : 0);\n         \n         for (MapleData idata : monsterData) {\n             if (!idata.getName().equals(\"info\")) {"}, {"sha": "cc4aafa00ad5c7bea829591af96b978ea8dd2de8", "filename": "src/server/life/MapleMonster.java", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/life/MapleMonster.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/life/MapleMonster.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleMonster.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -72,6 +72,11 @@\n import net.server.audit.LockCollector;\n import net.server.audit.locks.MonitoredLockType;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import net.server.channel.services.ServiceType;\n+import net.server.channel.services.task.MobAnimationService;\n+import net.server.channel.services.task.MobClearSkillService;\n+import net.server.channel.services.task.MobStatusService;\n+import net.server.channel.services.task.OverallService;\n import net.server.coordinator.world.MapleMonsterAggroCoordinator;\n import server.MapleStatEffect;\n import server.loot.MapleLootManager;\n@@ -333,7 +338,8 @@ private boolean applyAnimationIfRoaming(int attackPos, MobSkill skill) {   // ro\n             }\n \n             if(animationTime > 0) {\n-                return map.getChannelServer().registerMobOnAnimationEffect(map.getId(), this.hashCode(), animationTime);\n+                MobAnimationService service = (MobAnimationService) map.getChannelServer().getServiceAccess(ServiceType.MOB_ANIMATION);\n+                return service.registerMobOnAnimationEffect(map.getId(), this.hashCode(), animationTime);\n             } else {\n                 return true;\n             }\n@@ -1197,7 +1203,8 @@ public boolean applyStatus(MapleCharacter from, final MonsterStatusEffect status\n                     if (oldEffect != null) {\n                         oldEffect.removeActiveStatus(stat);\n                         if (oldEffect.getStati().isEmpty()) {\n-                            ch.interruptMobStatus(mapid, oldEffect);\n+                            MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ServiceType.MOB_STATUS);\n+                            service.interruptMobStatus(mapid, oldEffect);\n                         }\n                     }\n                 }\n@@ -1303,7 +1310,8 @@ public void run() {\n             statiLock.unlock();\n         }\n         \n-        ch.registerMobStatus(mapid, status, cancelTask, duration + animationTime - 100, overtimeAction, overtimeDelay);\n+        MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ServiceType.MOB_STATUS);\n+        service.registerMobStatus(mapid, status, cancelTask, duration + animationTime - 100, overtimeAction, overtimeDelay);\n         return true;\n     }\n     \n@@ -1354,7 +1362,8 @@ public void run() {\n             statiLock.unlock();\n         }\n         \n-        map.getChannelServer().registerMobStatus(map.getId(), effect, cancelTask, duration);\n+        MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ServiceType.MOB_STATUS);\n+        service.registerMobStatus(map.getId(), effect, cancelTask, duration);\n     }\n     \n     public void refreshMobPosition() {\n@@ -1552,7 +1561,8 @@ public void run() {\n             }\n         };\n         \n-        mmap.getChannelServer().registerMobClearSkillAction(mmap.getId(), r, cooltime);\n+        MobClearSkillService service = (MobClearSkillService) map.getChannelServer().getServiceAccess(ServiceType.MOB_CLEAR_SKILL);\n+        service.registerMobClearSkillAction(mmap.getId(), r, cooltime);\n     }\n \n     private void clearSkill(int skillId, int level) {\n@@ -1619,8 +1629,9 @@ public void run() {\n                     mons.clearAttack(attackPos);\n                 }\n             };\n-\n-            mmap.getChannelServer().registerMobClearSkillAction(mmap.getId(), r, cooltime);\n+            \n+            MobClearSkillService service = (MobClearSkillService) map.getChannelServer().getServiceAccess(ServiceType.MOB_CLEAR_SKILL);\n+            service.registerMobClearSkillAction(mmap.getId(), r, cooltime);\n         } finally {\n             monsterLock.unlock();\n         }\n@@ -1667,15 +1678,17 @@ private DamageTask(int dealDamage, MapleCharacter chr, MonsterStatusEffect statu\n         public void run() {\n             int curHp = hp.get();\n             if(curHp <= 1) {\n-                map.getChannelServer().interruptMobStatus(map.getId(), status);\n+                MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ServiceType.MOB_STATUS);\n+                service.interruptMobStatus(map.getId(), status);\n                 return;\n             }\n             \n             int damage = dealDamage;\n             if (damage >= curHp) {\n                 damage = curHp - 1;\n                 if (type == 1 || type == 2) {\n-                    map.getChannelServer().interruptMobStatus(map.getId(), status);\n+                    MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ServiceType.MOB_STATUS);\n+                    service.interruptMobStatus(map.getId(), status);\n                 }\n             }\n             if (damage > 0) {\n@@ -1731,7 +1744,8 @@ public void run() {\n                     }\n                 };\n                 \n-                mmap.getChannelServer().registerMobClearSkillAction(mmap.getId(), r, milli);\n+                MobClearSkillService service = (MobClearSkillService) mmap.getChannelServer().getServiceAccess(ServiceType.MOB_CLEAR_SKILL);\n+                service.registerMobClearSkillAction(mmap.getId(), r, milli);\n             }\n         } finally {\n             monsterLock.unlock();\n@@ -2213,7 +2227,8 @@ public void run() {\n         };\n         \n         // had to schedule this since mob wouldn't stick to puppet aggro who knows why\n-        this.getMap().getChannelServer().registerOverallAction(this.getMap().getId(), r, YamlConfig.config.server.UPDATE_INTERVAL);\n+        OverallService service = (OverallService) this.getMap().getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+        service.registerOverallAction(this.getMap().getId(), r, YamlConfig.config.server.UPDATE_INTERVAL);\n     }\n     \n     /**"}, {"sha": "e91b05bd6549d20f1128bd7f5c0a203a96306319", "filename": "src/server/life/MobSkill.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/life/MobSkill.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/life/MobSkill.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MobSkill.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -32,6 +32,8 @@\n import constants.game.GameConstants;\n import java.util.LinkedList;\n import java.util.Map;\n+import net.server.channel.services.ServiceType;\n+import net.server.channel.services.task.OverallService;\n import tools.Randomizer;\n import server.maps.MapleMap;\n import server.maps.MapleMapObject;\n@@ -115,7 +117,8 @@ public void run() {\n             }\n         };\n \n-        monster.getMap().getChannelServer().registerOverallAction(monster.getMap().getId(), toRun, animationTime);\n+        OverallService service = (OverallService) monster.getMap().getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+        service.registerOverallAction(monster.getMap().getId(), toRun, animationTime);\n     }\n \n     public void applyEffect(MapleCharacter player, MapleMonster monster, boolean skill, List<MapleCharacter> banishPlayers) {"}, {"sha": "24499433e6eb975709e7c85db3b7cd29c92c3b62", "filename": "src/server/maps/AbstractMapleMapObject.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/maps/AbstractMapleMapObject.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/maps/AbstractMapleMapObject.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/AbstractMapleMapObject.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -37,8 +37,7 @@ public Point getPosition() {\n \n     @Override\n     public void setPosition(Point position) {\n-        this.position.x = position.x;\n-        this.position.y = position.y;\n+        this.position.move(position.x, position.y);\n     }\n \n     @Override"}, {"sha": "a58f9897bb66b8af50ce674929b122e67cfcc072", "filename": "src/server/maps/MapleDoor.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/maps/MapleDoor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/maps/MapleDoor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleDoor.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -28,7 +28,8 @@\n import tools.Pair;\n \n import client.MapleCharacter;\n-import constants.net.ServerConstants;\n+import net.server.channel.services.ServiceType;\n+import net.server.channel.services.task.OverallService;\n \n /**\n  *\n@@ -131,7 +132,9 @@ public static void attemptRemoveDoor(final MapleCharacter owner) {\n             long effectTimeLeft = 3000 - destroyDoor.getElapsedDeployTime();   // portal deployment effect duration\n             if (effectTimeLeft > 0) {\n                 MapleMap town = destroyDoor.getTown();\n-                town.getChannelServer().registerOverallAction(town.getId(), new Runnable() {\n+                \n+                OverallService service = (OverallService) town.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+                service.registerOverallAction(town.getId(), new Runnable() {\n                     @Override\n                     public void run() {\n                         destroyDoor.broadcastRemoveDoor(owner);   // thanks BHB88 for noticing doors crashing players when instantly cancelling buff"}, {"sha": "a5b90e371169255340c70061512fa5dd644217d3", "filename": "src/server/maps/MapleMap.java", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/maps/MapleMap.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/maps/MapleMap.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMap.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -65,6 +65,10 @@\n import net.server.Server;\n import net.server.coordinator.world.MapleMonsterAggroCoordinator;\n import net.server.channel.Channel;\n+import net.server.channel.services.ServiceType;\n+import net.server.channel.services.task.FaceExpressionService;\n+import net.server.channel.services.task.MobMistService;\n+import net.server.channel.services.task.OverallService;\n import net.server.world.World;\n import scripting.map.MapScriptManager;\n import server.MapleItemInformationProvider;\n@@ -1942,7 +1946,8 @@ public void run() {\n     public void dismissRemoveAfter(final MapleMonster monster) {\n         Runnable removeAfterAction = monster.popRemoveAfterAction();\n         if (removeAfterAction != null) {\n-            this.getChannelServer().forceRunOverallAction(mapid, removeAfterAction);\n+            OverallService service = (OverallService) this.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+            service.forceRunOverallAction(mapid, removeAfterAction);\n         }\n     }\n     \n@@ -2203,7 +2208,8 @@ public void run() {\n             }\n         };\n         \n-        this.getChannelServer().registerMobMistCancelAction(mapid, mistSchedule, duration);\n+        MobMistService service = (MobMistService) this.getChannelServer().getServiceAccess(ServiceType.MOB_MIST);\n+        service.registerMobMistCancelAction(mapid, mistSchedule, duration);\n     }\n     \n     public void spawnKite(final MapleKite kite) {\n@@ -2302,7 +2308,8 @@ public final void spawnItemDropList(List<Integer> list, int minCopies, int maxCo\n     }\n \n     private void registerMapSchedule(Runnable r, long delay) {\n-        this.getChannelServer().registerOverallAction(mapid, r, delay);\n+        OverallService service = (OverallService) this.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+        service.registerOverallAction(mapid, r, delay);\n     }\n     \n     private void activateItemReactors(final MapleMapItem drop, final MapleClient c) {\n@@ -2788,7 +2795,8 @@ public void removePlayerPuppet(MapleCharacter player) {\n     public void removePlayer(MapleCharacter chr) {\n         Channel cserv = chr.getClient().getChannelServer();\n         \n-        cserv.unregisterFaceExpression(mapid, chr);\n+        FaceExpressionService service = (FaceExpressionService) this.getChannelServer().getServiceAccess(ServiceType.FACE_EXPRESSION);\n+        service.unregisterFaceExpression(mapid, chr);\n         chr.unregisterChairBuff();\n         \n         chrWLock.lock();\n@@ -3548,7 +3556,8 @@ public void run() {\n                             if (reactor.getDelay() > 0) {\n                                 MapleMap reactorMap = reactor.getMap();\n                                 \n-                                reactorMap.getChannelServer().registerOverallAction(reactorMap.getId(), new Runnable() {\n+                                OverallService service = (OverallService) reactorMap.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+                                service.registerOverallAction(reactorMap.getId(), new Runnable() {\n                                     @Override\n                                     public void run() {\n                                         reactor.lockReactor();"}, {"sha": "7530303434e64948cdbe39391c2a459d737f7f73", "filename": "src/server/maps/MapleReactor.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/maps/MapleReactor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/maps/MapleReactor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleReactor.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -36,6 +36,8 @@\n import tools.MaplePacketCreator;\n import tools.Pair;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.channel.services.ServiceType;\n+import net.server.channel.services.task.OverallService;\n import server.partyquest.GuardianSpawnPoint;\n \n /**\n@@ -368,14 +370,17 @@ public void run() {\n         };\n         \n         delayedRespawnRun = r;\n-        map.getChannelServer().registerOverallAction(map.getId(), r, this.getDelay());\n+        \n+        OverallService service = (OverallService) map.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+        service.registerOverallAction(map.getId(), r, this.getDelay());\n     }\n     \n     public boolean forceDelayedRespawn() {\n         Runnable r = delayedRespawnRun;\n         \n         if (r != null) {\n-            map.getChannelServer().forceRunOverallAction(map.getId(), r);\n+            OverallService service = (OverallService) map.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+            service.forceRunOverallAction(map.getId(), r);\n             return true;\n         } else {\n             return false;"}, {"sha": "3561475dc6f69bf8b22f485754e0031786b822d0", "filename": "src/server/quest/actions/InfoAction.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/quest/actions/InfoAction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/src/server/quest/actions/InfoAction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/quest/actions/InfoAction.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -20,6 +20,7 @@\n package server.quest.actions;\n \n import client.MapleCharacter;\n+import client.MapleQuestStatus;\n import provider.MapleData;\n import provider.MapleDataTool;\n import server.quest.MapleQuest;"}, {"sha": "096a8c9c7f54f7d5c62a69b9bb45bc9e31eb0a39", "filename": "tools/MapleInvalidItemWithNoNameFetcher/src/maplenoitemnamefetcher/MapleNoItemNameFetcher.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/80cd240ab8ab77ea06f6674cea28316340f96291/tools/MapleInvalidItemWithNoNameFetcher/src/maplenoitemnamefetcher/MapleNoItemNameFetcher.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/80cd240ab8ab77ea06f6674cea28316340f96291/tools/MapleInvalidItemWithNoNameFetcher/src/maplenoitemnamefetcher/MapleNoItemNameFetcher.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/tools/MapleInvalidItemWithNoNameFetcher/src/maplenoitemnamefetcher/MapleNoItemNameFetcher.java?ref=80cd240ab8ab77ea06f6674cea28316340f96291", "patch": "@@ -445,7 +445,7 @@ private static String getMissingEquipName(int itemid) {\n     \n     private static String getMissingEquipDesc(int itemid) {\n         String s = descContentCache.get(itemid);\n-        if (s == null) {\n+        if (s == null && itemid >= 2000000) {   // thanks Halcyon for noticing \"missing info\" on equips\n             s = \"MISSING INFO \" + itemid;\n         }\n         "}]}]},
