{"fetchDate": "2019-12-19", "content": [{"sha": "7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "node_id": "MDY6Q29tbWl0NDUwODIwMjM6N2Q4ZDQ2OTFkYWE5YTk1NmU0NjYyNjg3YzBjOTcwYzZjN2NkNjJmMg==", "commit": {"author": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-10-29T04:48:58Z"}, "committer": {"name": "ronancpl", "email": "rcpl2010@gmail.com", "date": "2019-10-29T04:48:58Z"}, "message": "Services unrestrained to channels + Event scripts placeholder\n\nFixed an inconsistent scenario where player data would remain in world player storage even though they were no longer online.\nImplemented missing functionality for \"Safety Charm\" which allows 30% MaxHP/MP heal on return.\nImproved services facility, no longer tightly related to channels.\nImplemented a world service for \"save players\" (services acts as a monitor).\nReviewed the event script initialization approach. Players no longer are retained from logging in on a channel whilst the events don't finish loadup.\nFixed certain quest items not showing up, which would happen due to them not being quest requisites.\nFixed NPC Pi crashing players when trying to craft arrows.\nFixed pet re-evolution quest not working on Robos.\nFixed boss HPBar not disappearing in certain situations.\nRevised gathered mob info on linked mobs, no longer marshaling stats.\nFixed two possible deadlock scenarios within the cancel effect method.\nAdded lock auditing support for read-write locks.\nImplemented code support for Cygnus intro clip.\nReviewed updateBuffEffect, now properly checking for pirate buffs in order to send the expected packet.\nReviewed unnecessary load of field objects, which would be doing so just for fetching the predicted map names.\nFixed mob buff tooltips not showing on \"fake\" mobs in the event of them turning into \"real\".\nReviewed usage of \"unique\" constraint on petid within the inventoryitems table.\nFixed portal in Ariant unexpectedly leading players who completed the \"secret passageway\" of Sleepywood into it.\nFixed a loop case in quest scripts from Magatia's broker having ore request.", "tree": {"sha": "8ca4f6fb3df29e6457413d4e966095cc0924b3b1", "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/trees/8ca4f6fb3df29e6457413d4e966095cc0924b3b1"}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/git/commits/7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "html_url": "https://github.com/ronancpl/HeavenMS/commit/7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "comments_url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/comments", "author": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ronancpl", "id": 9257761, "node_id": "MDQ6VXNlcjkyNTc3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9257761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronancpl", "html_url": "https://github.com/ronancpl", "followers_url": "https://api.github.com/users/ronancpl/followers", "following_url": "https://api.github.com/users/ronancpl/following{/other_user}", "gists_url": "https://api.github.com/users/ronancpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronancpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronancpl/subscriptions", "organizations_url": "https://api.github.com/users/ronancpl/orgs", "repos_url": "https://api.github.com/users/ronancpl/repos", "events_url": "https://api.github.com/users/ronancpl/events{/privacy}", "received_events_url": "https://api.github.com/users/ronancpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54cdba01aef107c96ea645a0cae992e4ac2dbd7a", "url": "https://api.github.com/repos/ronancpl/HeavenMS/commits/54cdba01aef107c96ea645a0cae992e4ac2dbd7a", "html_url": "https://github.com/ronancpl/HeavenMS/commit/54cdba01aef107c96ea645a0cae992e4ac2dbd7a"}], "stats": {"total": 1440, "additions": 944, "deletions": 496}, "files": [{"sha": "4cd46d25818ff35329e6737ae503c077635ad964", "filename": "docs/mychanges_ptbr.txt", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/docs/mychanges_ptbr.txt", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/docs/mychanges_ptbr.txt", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/docs/mychanges_ptbr.txt?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -2196,4 +2196,41 @@ Corrigido quest com NPC \"Shaman Rock\" aplicando progresso que n\u00e3o corresponde c\n Adicionado m\u00e9todo que permite executar scripts de mapa no sistema de scripts de portal.\n Corrigido problema recente ao referenciar script com progresso \"Touch the Sky\" (script de portal utilizando m\u00e9todos de scripts de mapa).\n Adicionado fallback para scripts de NPC MapleTV.\n-Revisado aplica\u00e7\u00e3o e abordagem deste c\u00f3digo-base nos arquivos XML legado.\n\\ No newline at end of file\n+Revisado aplica\u00e7\u00e3o e abordagem deste c\u00f3digo-base nos arquivos XML legado.\n+\n+15 - 16 Outubro 2019,\n+Corrigido caso inconsistente onde objeto de jogador seria mantido no storage de jogadores caso o jogador tentasse se deregistrar de um canal (sem desconectar) e n\u00e3o mais retornando na mesma sess\u00e3o.\n+Adicionado c\u00f3digo para funcionalidade de \"Safety Charm\", que permite jogadores curar 30% MaxHP/MaxMP ao retornar em campo.\n+Implementado extens\u00e3o das facilidades de servi\u00e7os, agora atuando desjuntamente de canais.\n+Implementado servi\u00e7o de mundo para salvar jogadores, assim evitando gera\u00e7\u00e3o de novas threads para cada jogador que est\u00e1 sendo persistido na DB.\n+\n+18 Outubro 2019,\n+Revisado abordagem de inicializa\u00e7\u00e3o de scripts de eventos em canais. Usu\u00e1rios n\u00e3o s\u00e3o mais bloqueados ao tentar logar devido ao canal n\u00e3o ter todos os eventos carregados.\n+\n+19 Outubro 2019,\n+Corrigido certos itens de quest n\u00e3o aparecendo de mobs em casos onde o mesmo n\u00e3o \u00e9 requisito para iniciar/completar.\n+Corrigido NPC Pi crashando jogadores ao tentar criar flechas.\n+Corrigido script de reevolu\u00e7\u00e3o de pets n\u00e3o atuando em pet Robos, al\u00e9m de agora evitar repetir pets na convers\u00e3o.\n+\n+21 - 22 Outubro 2019,\n+Corrigido boss HPbar n\u00e3o desaparecendo em certos cen\u00e1rios. O mesmo deveria ocorrer assim que mob \u00e9 retirado do mapa.\n+Revisado informa\u00e7\u00f5es de mob, que n\u00e3o s\u00e3o propag\u00e1veis, sendo repassados \u00e0 defini\u00e7\u00e3o do novo mob.\n+Revisado carregamento de storages ao inicializar informa\u00e7\u00f5es de conta podendo retornar nulo indevidamente em caso de exce\u00e7\u00e3o lan\u00e7ada.\n+Corrigido dois casos de deadlock ocorrendo ao tentar cancelar efeito de stat de jogador.\n+Adicionado auditoria de locks para os componentes que travam para leitura e escrita.\n+Adicionado clip de introdu\u00e7\u00e3o de Cygnus.\n+Revisado updateBuffEffect, agora checando por determinados buffs de pirata e usando pacotes espec\u00edficos para os mesmos.\n+Revisado gera\u00e7\u00e3o desnecess\u00e1ria de objetos de mapa ao carregar nomes para comando \"goto\".\n+Corrigido buffs de mob em fakes desaparecendo assim que o mesmo muda de estado para real.\n+\n+24 Outubro 2019,\n+Revisado uso de scriptids na gera\u00e7\u00e3o de PlayerNPCs. Agora somente ids existentes na base especificada vai adiante.\n+\n+27 Outubro 2019,\n+Revisado l\u00f3gica booleana na detec\u00e7\u00e3o de foothold abaixo, n\u00e3o realizando m\u00faltiplas checagens sobre um mesmo atributo.\n+\n+28 Outubro 2019,\n+Revisado l\u00f3gica recente de uso de petid \u00fanico levando a lan\u00e7amento de exce\u00e7\u00e3o (transa\u00e7\u00f5es de DB implica retirada de item de pet do CS storage na DB antes de colocar o mesmo no invent\u00e1rio).\n+Corrigido portal relacionado a quest em Ariant inesperadamente levando jogadores \u00e0 passagem secreta de Sleepywood, em caso de conclus\u00e3o de questline da mesma.\n+Corrigido loop em scripts de quest de associa\u00e7\u00e3o a Alcadno/Zenumist em Magatia.\n+Adicionado utiliza\u00e7\u00e3o de dispose em quest scripts para o comando hom\u00f4nimo.\n\\ No newline at end of file"}, {"sha": "f7eb69877d25687a49f4223320d768581f5badcf", "filename": "scripts/map/onUserEnter/cygnusJobTutorial.js", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/map/onUserEnter/cygnusJobTutorial.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/map/onUserEnter/cygnusJobTutorial.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/map/onUserEnter/cygnusJobTutorial.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -0,0 +1,25 @@\n+/*\n+\tThis file is part of the OdinMS Maple Story Server\n+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>\n+\t\t       Matthias Butz <matze@odinms.de>\n+\t\t       Jan Christian Meyer <vimes@odinms.de>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+\n+function start(ms) {\n+\tms.displayCygnusIntro();\t   \t       \n+}\n\\ No newline at end of file"}, {"sha": "7351fdf8dc541187da3871761e90577472ea58a4", "filename": "scripts/map/onUserEnter/startEreb.js", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/map/onUserEnter/startEreb.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/map/onUserEnter/startEreb.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/map/onUserEnter/startEreb.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -0,0 +1,5 @@\n+function start(ms) {\n+        if (ms.getJobId() == 1000 && ms.getLevel() >= 10) {\n+                ms.unlockUI();\n+        }\n+}\n\\ No newline at end of file"}, {"sha": "9b27839836df3e3edc088b68f186b297689f5990", "filename": "scripts/npc/1012103.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/npc/1012103.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/npc/1012103.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1012103.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -72,7 +72,7 @@ function action(mode, type, selection) {\n         } else if (status == 2){\n             cm.dispose();\n             if (beauty == 1){\n-                if (cm.haveItem(5420002)){\n+                if (cm.haveItem(5420002)){  // thanks MedicOP for noticing uncoded functionality for Hair Membership coupons\n                     cm.setHair(hairnew[selection]);\n                     cm.sendOk(\"Enjoy your new and improved hairstyle!\");\n                 } else if (cm.haveItem(5150001)){"}, {"sha": "117a444e68c0e72daea851b1b0b40895344b4fcf", "filename": "scripts/npc/1096005.js", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/npc/1096005.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/npc/1096005.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/1096005.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -18,7 +18,6 @@ function action(mode, type, selection) {\n \t\tcm.sendNext(\"All right! Let's go!\");\n \t} else if (status == 1) {\n \t\tcm.removeNPC(579711);\n-\t\tcm.removeNPC2(579711);\n \t\tcm.updateInfo(\"fire\", \"0\");\n \t\tcm.playSound(\"cannonshooter/fire\");\n \t\tcm.sendDirectionInfo(\"Effect/Direction4.img/effect/cannonshooter/flying/0\", 7000, 0, 0, -1, -1);"}, {"sha": "3a2a99abf85f718296bfc868d7c6b4bb9c7f4447", "filename": "scripts/npc/2040016.js", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/npc/2040016.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/npc/2040016.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/2040016.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -172,19 +172,7 @@ function action(mode, type, selection) {\n             matQty = matQtySet[selectedItem];\n             cost = costSet[selectedItem];\n         }\n-\t\t\n-        if (selectedType == 5){ //arrow refine\n-            var itemSet = new Array(2060000,2061000,2060001,2061001,2060002,2061002);\n-            var matSet = new Array(new Array (4003001,4003004),new Array (4003001,4003004),new Array (4011000,4003001,4003004),new Array (4011000,4003001,4003004),\n-                new Array (4011001,4003001,4003005),new Array (4011001,4003001,4003005));\n-            var matQtySet = new Array (new Array (1,1),new Array (1,1),new Array (1,3,10),new Array (1,3,10),new Array (1,5,15),new Array (1,5,15));\n-            var costSet = new Array (0,0,0,0,0,0);\n-            item = itemSet[selectedItem];\n-            mats = matSet[selectedItem];\n-            matQty = matQtySet[selectedItem];\n-            cost = costSet[selectedItem];\n-        }\n-                \n+\t        \n         var prompt = \"So, you want me to make some #t\" + item + \"#s? In that case, how many do you want me to make?\";\n \t\t\n         cm.sendGetNumber(prompt,1,1,100)\n@@ -197,6 +185,19 @@ function action(mode, type, selection) {\n         }\n         else\n             qty = (selection > 0) ? selection : (selection < 0 ? -selection : 1);\n+\n+        // thanks kvmba for noticing arrow selection crashing players\n+        if (selectedType == 5){ //arrow refine\n+            var itemSet = new Array(2060000,2061000,2060001,2061001,2060002,2061002);\n+            var matSet = new Array(new Array (4003001,4003004),new Array (4003001,4003004),new Array (4011000,4003001,4003004),new Array (4011000,4003001,4003004),\n+                new Array (4011001,4003001,4003005),new Array (4011001,4003001,4003005));\n+            var matQtySet = new Array (new Array (1,1),new Array (1,1),new Array (1,3,10),new Array (1,3,10),new Array (1,5,15),new Array (1,5,15));\n+            var costSet = new Array (0,0,0,0,0,0);\n+            item = itemSet[selectedItem];\n+            mats = matSet[selectedItem];\n+            matQty = matQtySet[selectedItem];\n+            cost = costSet[selectedItem];\n+        }\n \t\t\n         var prompt = \"You want me to make \";\n         if (qty == 1)"}, {"sha": "9ac781cf1db3ea8ad27786437b259f86eaa9008a", "filename": "scripts/npc/9977777.js", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/npc/9977777.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/npc/9977777.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/npc/9977777.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -77,7 +77,7 @@ function writeFeatureTab_Quests() {\n         addFeature(\"3rd job quiz with all 40-question pool available.\");\n         addFeature(\"Item raising functional.\");\n         addFeature(\"Cleared issue with player movement during NPC talk.\");\n-        addFeature(\"Reviewed usage of quest progress data as requirement.\");\n+        addFeature(\"Reviewed usage of quest progress data as requisite.\");\n }\n \n function writeFeatureTab_PlayerSocialNetwork() {\n@@ -287,6 +287,7 @@ function writeFeatureTab_Project() {\n         addFeature(\"Remodeled item scripts, properly using NPC dialogs.\");\n         addFeature(\"ThreadTracker: runtime tool for deadlock detection.\");\n         addFeature(\"Channel, World and Server-wide timer management.\");\n+        addFeature(\"Developed services as preemptive task scheduler.\");\n         addFeature(\"Thoroughly reviewed encapsulation for player stats.\");\n         addFeature(\"Heavily reviewed future task management, spawning much less threads and relieving task overload on the TimerManager.\");\n }\n@@ -327,7 +328,7 @@ function action(mode, type, selection) {\n                         status--;\n                     \n                 if (status == 0) {\n-                        var sendStr = \"HeavenMS was developed on the timespan of 3 years, based on where Solaxia left. I'm glad to say the development itself had continuously been agraciated by dozens of contributors and cheerers (truly thanks for the trusting vow, guys & gals!).\\r\\n\\r\\nTalking about results: many nice features emerged, development aimed to get back the old GMS experience. Now many of these so-long missing features are gracefully presented to you in the shape of this server. Long live MapleStory!!\\r\\n\\r\\nThese are the features from #bHeavenMS#k:\\r\\n\\r\\n\";\n+                        var sendStr = \"HeavenMS was developed on the timespan of 4 years, based on where Solaxia left. I'm glad to say the development itself had continuously been agraciated by dozens of contributors and cheerers (truly thanks for the trusting vow, guys & gals!).\\r\\n\\r\\nTalking about results: many nice features emerged, development aimed to get back the old GMS experience. Now many of these so-long missing features are gracefully presented to you in the shape of this server. Long live MapleStory!!\\r\\n\\r\\nThese are the features from #bHeavenMS#k:\\r\\n\\r\\n\";\n                         for(var i = 0; i < tabs.length; i++) {\n                             sendStr += \"#L\" + i + \"##b\" + tabs[i] + \"#k#l\\r\\n\";\n                         }"}, {"sha": "2496c7eed65e5e94dda08b8dca11db7a72e5f316", "filename": "scripts/portal/highposition.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/portal/highposition.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/portal/highposition.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/highposition.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -22,6 +22,7 @@\n \n // Author: Ronan\n function enter(ms) {\n+    // thanks kvmba for noticing some issues running this script\n     ms.runMapScript();\n     return false;\n }\n\\ No newline at end of file"}, {"sha": "796f9541bf63e1a8ae606438afc32610c7e898a3", "filename": "scripts/portal/thief_in1.js", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/portal/thief_in1.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/portal/thief_in1.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/portal/thief_in1.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -1,9 +1,6 @@\n function enter(pi) {\n-        if(pi.isQuestCompleted(20730) || pi.isQuestCompleted(21734)) {  // puppeteer defeated, newfound secret path\n-            pi.playPortalSound(); pi.warp(105040201,2);\n-            return true;\n-        }\n-    \n-\tpi.openNpc(1063011, \"ThiefPassword\");\n+        // unexpected warp condition noticed thanks to IxianMace\n+\n+        pi.openNpc(1063011, \"ThiefPassword\");\n \treturn false;\n }\n\\ No newline at end of file"}, {"sha": "91b02cc2f10db9accf54ba8bf6a806b77dbeac34", "filename": "scripts/quest/20020.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/quest/20020.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/quest/20020.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/20020.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -31,7 +31,7 @@ function start(mode, type, selection) {\n         } else if (status == 4) {\n             qm.forceStartQuest();\n             qm.forceCompleteQuest();\n-            //qm.warp(913040100, 0);\n+            qm.warp(913040100, 0);\n             qm.dispose();\n         }\n     }"}, {"sha": "3e0352f326a72ac246f44c5b65f2246de8b5644f", "filename": "scripts/quest/3301.js", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/quest/3301.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/quest/3301.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3301.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -28,32 +28,39 @@\n var status = -1;\n var oreArray;\n \n-function start(mode, type, selection) {\n-}\n-\n function end(mode, type, selection) {\n-    if (mode == -1 || (mode == 0 && type > 0)) {\n-\tqm.dispose();\n+    if (mode == -1) {\n+        qm.dispose();\n     } else {\n-\toreArray = getOreArray();\n-\tif (status == -1) {\n+        if (mode == 0 && type > 0) {\n+            qm.dispose();\n+            return;\n+        }\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+\n+        if (status == 0) {\n+            oreArray = getOreArray();\n \t    if (oreArray.length > 0) {\n-\t\tstatus++;\n \t\tqm.sendSimple(\"Oh, looks like someone's ready to make a deal. You want to join Zenumist so badly, huh? I really don't understand you, but that's just fine. What will you give me in return?\\r\\n\" + getOreString(oreArray));\n \t    } else {\n-\t\tqm.sendOk(\"What is this, you don't have the ores with you. No ore, no deal.\");\n+\t\tqm.sendOk(\"What is this, you don't have the #rjewel ores#k with you. No ore, no deal.\");\n \t\tqm.dispose();\n+                return;\n \t    }\n-\t} else if (status == 0) {\n+\t} else if (status == 1) {\n             if (!qm.haveItem(oreArray[selection], 2)) {\n-                qm.sendNext(\"What's this, you haven't got the ores. No ores no deal!\");\n+                qm.sendNext(\"What's this, you haven't got the #rjewel ores#k. No ores no deal!\");\n+                qm.dispose();\n                 return;\n             }\n \n \t    qm.gainItem(oreArray[selection], -2); // Take 2 ores\n \t    qm.sendNext(\"Then wait for awhile. I'll go and get the stuff to help you pass the test of Chief Zenumist.\");\n \t    qm.forceCompleteQuest();\n-\t} else if (status == 1) {\n+\t} else if (status == 2) {\n \t    qm.dispose();\n \t}\n     }"}, {"sha": "d6884ab614c3ad828002f2217b8ca2508f26f335", "filename": "scripts/quest/3303.js", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/quest/3303.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/quest/3303.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/3303.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -28,32 +28,39 @@\n var status = -1;\n var oreArray;\n \n-function start(mode, type, selection) {\n-}\n-\n function end(mode, type, selection) {\n-    if (mode == -1 || (mode == 0 && type > 0)) {\n-\tqm.dispose();\n+    if (mode == -1) {\n+        qm.dispose();\n     } else {\n-\toreArray = getOreArray();\n-\tif (status == -1) {\n+        if (mode == 0 && type > 0) {\n+            qm.dispose();\n+            return;\n+        }\n+        if (mode == 1)\n+            status++;\n+        else\n+            status--;\n+\n+        if (status == 0) {\n+            oreArray = getOreArray();\n \t    if (oreArray.length > 0) {\n-\t\tstatus++;\n-\t\tqm.sendSimple(\"Oh, looks like someone's ready to make a deal. You want to join Alcadno so badly, huh? I really don't understand you, but that's just fine. What will you give me in return?\\r\\n\" + getOreString(oreArray));\n+\t\tqm.sendSimple(\"Oh, looks like someone's ready to make a deal. You want to join Zenumist so badly, huh? I really don't understand you, but that's just fine. What will you give me in return?\\r\\n\" + getOreString(oreArray));\n \t    } else {\n-\t\tqm.sendOk(\"What is this, you don't have the ores with you. No ore, no deal.\");\n+\t\tqm.sendOk(\"What is this, you don't have the #rjewel ores#k with you. No ore, no deal.\");    // script would loop undefinitely at completion, thanks IxianMace for noticing\n \t\tqm.dispose();\n+                return;\n \t    }\n-\t} else if (status == 0) {\n+\t} else if (status == 1) {\n             if (!qm.haveItem(oreArray[selection], 2)) {     // thanks resinate for noticing a function missing here\n-                qm.sendNext(\"What's this, you haven't got the ores. No ores no deal!\");\n+                qm.sendNext(\"What's this, you haven't got the #rjewel ores#k. No ores no deal!\");\n+                qm.dispose();\n                 return;\n             }\n-            \n+\n \t    qm.gainItem(oreArray[selection], -2); // Take 2 ores\n-\t    qm.sendNext(\"Then wait for awhile. I'll go and get the stuff to help you pass the test of Chief Alcadno.\");\n+\t    qm.sendNext(\"Then wait for awhile. I'll go and get the stuff to help you pass the test of Chief Zenumist.\");\n \t    qm.forceCompleteQuest();\n-\t} else if (status == 1) {\n+\t} else if (status == 2) {\n \t    qm.dispose();\n \t}\n     }"}, {"sha": "bc0d038f3a0c6956314d5b79bdac8e12f20db7a8", "filename": "scripts/quest/8189.js", "status": "modified", "additions": 40, "deletions": 33, "changes": 73, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/quest/8189.js", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/scripts/quest/8189.js", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/scripts/quest/8189.js?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -47,47 +47,54 @@ function end(mode, type, selection) {\n \t\t} else if (status == 1) {\n \t\t\tqm.sendNextPrev(\"Then here we go...! #rHYAHH!#k\");\n \t\t} else if (status == 2) {\n-\t\t\tvar pet = 0;\n-\t\t\tif (qm.getPlayer().getPet(0).getItemId() >= 5000029 && qm.getPlayer().getPet(0).getItemId() <= 5000033) {\n-\t\t\t\tvar pet = 0;\n-\t\t\t} else if (qm.getPlayer().getPet(1).getItemId() >= 5000029 && qm.getPlayer().getPet(1).getItemId() <= 5000033) {\n-\t\t\t\tvar pet = 1;\n-\t\t\t} else if (qm.getPlayer().getPet(2).getItemId() >= 5000029 && qm.getPlayer().getPet(2).getItemId() <= 5000033) {\n-\t\t\t\tvar pet = 2;\n-\t\t\t} else {\n-\t\t\t\tqm.sendOk(\"Something wrong, try again.\");\n-\t\t\t\tqm.dispose();\n-                                return;\n-\t\t\t}\n-\t\t\tvar id = qm.getPlayer().getPet(pet).getItemId();\n-\t\t\tif (id < 5000029 || id > 5000033) {\n-\t\t\t\tqm.sendOk(\"Something wrong, try again.\");\n-\t\t\t\tqm.dispose();\n-                                return;\n-\t\t\t}\n-\t\t\tvar rand = 1 + Math.floor(Math.random() * 10);\n-\t\t\tvar after = 0;\n-\t\t\tif (rand >= 1 && rand <= 3) {\n-\t\t\t\tafter = 5000030;\n-\t\t\t} else if (rand >= 4 && rand <= 6) {\n-\t\t\t\tafter = 5000031;\n-\t\t\t} else if (rand >= 7 && rand <= 9) {\n-\t\t\t\tafter = 5000032;\n-\t\t\t} else if (rand == 10) {\n-\t\t\t\tafter = 5000033;\n-\t\t\t} else {\n-\t\t\t\tqm.sendOk(\"Something wrong. Try again.\");\n-\t\t\t\tqm.dispose();\n+\t\t\tvar petidx = -1;\n+                        var petItemid;\n+                        for (var i = 0; i < 3; i++) {\n+                                var pet = qm.getPlayer().getPet(pet);\n+                                if (pet != null) {\n+                                        var id = pet.getItemId();\n+                                        if (id >= 5000029 && id <= 5000033) {\n+                                                petItemid = 5000030;\n+                                                petidx = i;\n+                                                break;\n+                                        } else if (id >= 5000048 && id <= 5000053) {    // thanks Conrad for noticing Robo pets not being able to re-evolve\n+                                                petItemid = 5000049;\n+                                                petidx = i;\n+                                                break;\n+                                        }\n+                                }\n+                        }\n+\n+                        if (petidx == -1) {\n+                                qm.sendOk(\"Something wrong, try again.\");\n+                                qm.dispose();\n                                 return;\n-\t\t\t}\n+                        }\n+                        \n+                        var pool = (petItemid == 5000030) ? 10 : 11;\n+                        do {\n+                                var rand = 1 + Math.floor(Math.random() * pool);\n+                                var after = 0;\n+                                if (rand >= 1 && rand <= 3) {\n+                                        after = petItemid;\n+                                } else if (rand >= 4 && rand <= 6) {\n+                                        after = petItemid + 1;\n+                                } else if (rand >= 7 && rand <= 9) {\n+                                        after = petItemid + 2;\n+                                } else if (rand == 10) {\n+                                        after = petItemid + 3;\n+                                } else {\n+                                        after = petItemid + 4;\n+                                }\n+                        } while (after == pet.getItemId());\n \t\t\t\n                         /*if (name.equals(MapleItemInformationProvider.getInstance().getName(id))) {\n \t\t\t\tname = MapleItemInformationProvider.getInstance().getName(after);\n \t\t\t} */\n \n                         qm.gainMeso(-10000);\n \t\t\tqm.gainItem(5380000, -1);\n-\t\t\tqm.evolvePet(pet, after);\n+\t\t\tqm.evolvePet(petidx, after);\n                         \n \t\t\tqm.sendOk(\"Woo! It worked again! #rYou may find your new pet under your 'CASH' inventory.\\r #kIt used to be a #b#i\" + id + \"##t\" + id + \"##k, and now it's \\r a#b #i\" + after + \"##t\" + after + \"##k! \\r\\n Come back with 10,000 mesos and another Rock of Evolution if you don't like it!\\r\\n\\r\\n#fUI/UIWindow.img/QuestIcon/4/0#\\r\\n#v\"+after+\"# #t\"+after+\"#\");\n \t\t} else if (status == 3) {"}, {"sha": "c0cb3037d18b50603cbc88315666ba366be28d83", "filename": "sql/db_database.sql", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/sql/db_database.sql", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/sql/db_database.sql", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/sql/db_database.sql?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -12968,7 +12968,7 @@ CREATE TABLE IF NOT EXISTS `inventoryitems` (\n   `position` int(11) NOT NULL DEFAULT '0',\n   `quantity` int(11) NOT NULL DEFAULT '0',\n   `owner` tinytext NOT NULL,\n-  `petid` int(11) unsigned UNIQUE DEFAULT NULL,\n+  `petid` int(11) NOT NULL DEFAULT '-1',\n   `flag` int(11) NOT NULL,\n   `expiration` bigint(20) NOT NULL DEFAULT '-1',\n   `giftFrom` varchar(26) NOT NULL,\n@@ -16473,7 +16473,7 @@ CREATE TABLE IF NOT EXISTS `pets` (\n   PRIMARY KEY (`petid`)\n ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n \n-ALTER TABLE `inventoryitems` ADD CONSTRAINT `fk_itempetid` FOREIGN KEY (`petid`) REFERENCES `pets` (`petid`) ON DELETE SET NULL ;\n+ALTER TABLE `inventoryitems` ADD CONSTRAINT `fk_itempetid` FOREIGN KEY (`petid`) REFERENCES `pets` (`petid`) ON DELETE SET NULL ;  # thanks Optimist for noticing queries over petid taking too long, shavit for pointing out an improvement using foreign key\n \n CREATE TABLE IF NOT EXISTS `petignores` (\n   `id` int(11) unsigned NOT NULL AUTO_INCREMENT,"}, {"sha": "5b92ce2ec546febdff4d310bc69d201b0d7c49cf", "filename": "src/client/AbstractMapleCharacterObject.java", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/AbstractMapleCharacterObject.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/AbstractMapleCharacterObject.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/AbstractMapleCharacterObject.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -21,17 +21,17 @@\n \n import config.YamlConfig;\n import constants.game.GameConstants;\n-import constants.net.ServerConstants;\n import java.util.Arrays;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.locks.Lock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n import server.maps.AbstractAnimatedMapleMapObject;\n import server.maps.MapleMap;\n \n@@ -51,13 +51,13 @@\n     protected Map<MapleStat, Integer> statUpdates = new HashMap<>();\n     \n     protected Lock effLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CHARACTER_EFF, true);\n-    protected ReadLock statRlock;\n-    protected WriteLock statWlock;\n+    protected MonitoredReadLock statRlock;\n+    protected MonitoredWriteLock statWlock;\n     \n     protected AbstractMapleCharacterObject() {\n-        ReentrantReadWriteLock locks = new MonitoredReentrantReadWriteLock(MonitoredLockType.CHARACTER_STA, true);\n-        statRlock = locks.readLock();\n-        statWlock = locks.writeLock();\n+        MonitoredReentrantReadWriteLock locks = new MonitoredReentrantReadWriteLock(MonitoredLockType.CHARACTER_STA, true);\n+        statRlock = MonitoredReadLockFactory.createLock(locks);\n+        statWlock = MonitoredWriteLockFactory.createLock(locks);\n         \n         for (int i = 0; i < remainingSp.length; i++) {\n             remainingSp[i] = 0;"}, {"sha": "7fe7e60fd7c7cc0236747d6c3f30dcb52318511d", "filename": "src/client/MapleCharacter.java", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/MapleCharacter.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/MapleCharacter.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleCharacter.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -171,9 +171,11 @@\n import constants.skills.Sniper;\n import constants.skills.Warrior;\n import constants.skills.ThunderBreaker;\n-import net.server.channel.services.ServiceType;\n-import net.server.channel.services.task.BaseService;\n-import net.server.channel.services.task.FaceExpressionService;\n+import net.server.services.type.ChannelServices;\n+import net.server.services.task.channel.FaceExpressionService;\n+import net.server.services.task.world.CharacterSaveService;\n+import net.server.services.type.WorldServices;\n+import org.apache.mina.core.session.IoSession;\n import org.apache.mina.util.ConcurrentHashSet;\n \n public class MapleCharacter extends AbstractMapleCharacterObject {\n@@ -214,6 +216,7 @@\n     private int localchairrate;\n     private boolean hidden, equipchanged = true, berserk, hasMerchant, hasSandboxItem = false, whiteChat = false, canRecvPartySearchInvite = true;\n     private boolean equippedMesoMagnet = false, equippedItemPouch = false, equippedPetItemIgnore = false;\n+    private boolean usedSafetyCharm = false;\n     private float autopotHpAlert, autopotMpAlert;\n     private int linkedLevel = 0;\n     private String linkedName = null;\n@@ -565,7 +568,9 @@ public boolean hasDisabledPartySearchInvite(int fromLeaderid) {\n     }\n     \n     public void setSessionTransitionState() {\n-        client.getSession().setAttribute(MapleClient.CLIENT_TRANSITION);\n+        IoSession session = client.getSession();\n+        session.setAttribute(MapleClient.CLIENT_TRANSITION);\n+        Server.getInstance().setCharacteridInTransition(session, this.getId());\n     }\n     \n     public boolean getCS() {\n@@ -2846,7 +2851,7 @@ public void changeFaceExpression(int emote) {\n         if(timeNow - lastExpression > 2000) {\n             lastExpression = timeNow;\n             \n-            FaceExpressionService service = (FaceExpressionService) client.getChannelServer().getServiceAccess(ServiceType.FACE_EXPRESSION);\n+            FaceExpressionService service = (FaceExpressionService) client.getChannelServer().getServiceAccess(ChannelServices.FACE_EXPRESSION);\n             service.registerFaceExpression(map, this, emote);\n         }\n     }\n@@ -3863,11 +3868,13 @@ public void cancelEffect(int itemId) {\n     public boolean cancelEffect(MapleStatEffect effect, boolean overwrite, long startTime) {\n         boolean ret;\n         \n+        prtLock.lock();\n         effLock.lock();\n         try {\n             ret = cancelEffect(effect, overwrite, startTime, true);\n         } finally {\n             effLock.unlock();\n+            prtLock.unlock();\n         }\n         \n         if (effect.isMagicDoor() && ret) {\n@@ -4580,6 +4587,7 @@ public void run() {\n             startChairTask();\n         }\n         \n+        prtLock.lock();\n         effLock.lock();\n         chrLock.lock();\n         try {\n@@ -4596,7 +4604,6 @@ public void run() {\n                 toDeploy = new LinkedHashMap<>();\n                 Map<Integer, Pair<MapleStatEffect, Long>> retrievedEffects = new LinkedHashMap<>();\n                 Set<MapleBuffStat> retrievedStats = new LinkedHashSet<>();\n-                \n                 for (Entry<MapleBuffStat, MapleBuffStatValueHolder> statup : appliedStatups.entrySet()) {\n                     MapleBuffStatValueHolder mbsvh = effects.get(statup.getKey());\n                     MapleBuffStatValueHolder statMbsvh = statup.getValue();\n@@ -4655,6 +4662,7 @@ public void run() {\n         } finally {\n             chrLock.unlock();\n             effLock.unlock();\n+            prtLock.unlock();\n         }\n         \n         updateLocalStats();\n@@ -5854,13 +5862,19 @@ public boolean needQuestItem(int questid, int itemid) {\n         int amountNeeded, questStatus = this.getQuestStatus(questid);\n         if (questStatus == 0) {\n             amountNeeded = MapleQuest.getInstance(questid).getStartItemAmountNeeded(itemid);\n+            if (amountNeeded == Integer.MIN_VALUE) {\n+                return false;\n+            }\n         } else if (questStatus != 1) {\n             return false;\n         } else {\n             amountNeeded = MapleQuest.getInstance(questid).getCompleteItemAmountNeeded(itemid);\n+            if (amountNeeded == Integer.MAX_VALUE) {\n+                return true;\n+            }\n         }\n         \n-        return amountNeeded > 0 && getInventory(ItemConstants.getInventoryType(itemid)).countById(itemid) < amountNeeded;\n+        return getInventory(ItemConstants.getInventoryType(itemid)).countById(itemid) < amountNeeded;\n     }\n \n     public int getRank() {\n@@ -6208,6 +6222,8 @@ public void showBuybackInfo() {\n         if (timeNow < getNextBuybackTime() && avail) {\n             s += \"Buyback available in #r\" + getTimeRemaining(getNextBuybackTime() - timeNow) + \"#k\";\n             s += \"\\r\\n\";\n+        } else {\n+            s += \"Buyback #bavailable#k\";\n         }\n         \n         this.showHint(s);\n@@ -7619,6 +7635,7 @@ private void playerDead() {\n         if (possesed > 0 && !GameConstants.isDojo(getMapId())) {\n             message(\"You have used a safety charm, so your EXP points have not been decreased.\");\n             MapleInventoryManipulator.removeById(client, ItemConstants.getInventoryType(charmID[i]), charmID[i], 1, true, false);\n+            usedSafetyCharm = true;\n         } else if (getJob() != MapleJob.BEGINNER) { //Hmm...\n             if (!FieldLimit.NO_EXP_DECREASE.check(getMap().getFieldLimit())) {  // thanks Conrad for noticing missing FieldLimit check\n                 int XPdummy = ExpTable.getExpNeededForLevel(getLevel());\n@@ -7715,7 +7732,13 @@ public void respawn(EventInstanceManager eim, int returnMap) {\n         changeMap(returnMap);\n         \n         cancelAllBuffs(false);  // thanks Oblivium91 for finding out players still could revive in area and take damage before returning to town\n-        updateHp(50);\n+        \n+        if (usedSafetyCharm) {  // thanks kvmba for noticing safety charm not providing 30% HP/MP\n+            addMPHP((int) Math.ceil(this.getClientMaxHp() * 0.3), (int) Math.ceil(this.getClientMaxMp() * 0.3));\n+        } else {\n+            updateHp(50);\n+        }\n+        \n         setStance(0);\n     }\n \n@@ -8378,7 +8401,8 @@ public void run() {\n                 }\n             };\n             \n-            ThreadManager.getInstance().newTask(r);  //spawns a new thread to deal with this\n+            CharacterSaveService service = (CharacterSaveService) getWorldServer().getServiceAccess(WorldServices.SAVE_CHARACTER);\n+            service.registerSaveCharacter(this.getId(), r);\n         } else {\n             saveCharToDB(true);\n         }\n@@ -9958,6 +9982,7 @@ public void updateQuestStatus(MapleQuestStatus qs) {\n             if (qs.getInfoNumber() > 0) {\n                 announceUpdateQuest(DelayedQuestUpdate.UPDATE, qs, true);\n             }\n+            // reminder: do not reset quest progress of infoNumbers, some quests cannot backtrack\n         }\n     }\n     "}, {"sha": "792e3da9acdc28297c94ae67a6ea38a514ebde5b", "filename": "src/client/MapleClient.java", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/MapleClient.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/MapleClient.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MapleClient.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -64,7 +64,6 @@\n \n import client.inventory.MapleInventoryType;\n import constants.game.GameConstants;\n-import constants.net.ServerConstants;\n import scripting.AbstractPlayerInteraction;\n import scripting.event.EventInstanceManager;\n import scripting.event.EventManager;\n@@ -120,7 +119,8 @@\n \tprivate final Lock lock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT, true);\n         private final Lock encoderLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_ENCODER, true);\n         private final Lock announcerLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_ANNOUNCER, true);\n-        private static final Lock loginLocks[] = new Lock[200];  // thanks Masterrulax & try2hack for pointing out a bottleneck issue here\n+        private static final int lockCount = 200;\n+        private static final Lock loginLocks[] = new Lock[lockCount];  // thanks Masterrulax & try2hack for pointing out a bottleneck issue here\n         private Calendar tempBanCalendar;\n \tprivate int votePoints;\n \tprivate int voteTime = -1;\n@@ -131,7 +131,7 @@\n         private int lang = 0;\n         \n         static {\n-            for (int i = 0; i < 200; i++) {\n+            for (int i = 0; i < lockCount; i++) {\n                 loginLocks[i] = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_LOGIN, true);\n             }\n         }\n@@ -454,14 +454,14 @@ public void banMacs() {\n \t}\n \n \tpublic int finishLogin() {\n-                Lock loginLock = loginLocks[this.getAccID() % 200];\n+                Lock loginLock = loginLocks[this.getAccID() % lockCount];\n                 loginLock.lock();\n                 try {\n                     if (getLoginState() > LOGIN_NOTLOGGEDIN) { // 0 = LOGIN_NOTLOGGEDIN, 1= LOGIN_SERVER_TRANSITION, 2 = LOGIN_LOGGEDIN\n                         loggedIn = false;\n                         return 7;\n                     }\n-                    updateLoginState(LOGIN_LOGGEDIN);\n+                    updateLoginState(MapleClient.LOGIN_LOGGEDIN);\n                 } finally {\n                     loginLock.unlock();\n                 }\n@@ -851,7 +851,7 @@ public int getLoginState() {  // 0 = LOGIN_NOTLOGGEDIN, 1= LOGIN_SERVER_TRANSITI\n \t\t\t\tif (rs.getTimestamp(\"lastlogin\").getTime() + 30000 < Server.getInstance().getCurrentTime()) {\n                                         int accountId = accId;\n \t\t\t\t\tstate = LOGIN_NOTLOGGEDIN;\n-\t\t\t\t\tupdateLoginState(LOGIN_NOTLOGGEDIN);   // ACCID = 0, issue found thanks to Tochi & K u ssss o & Thora & Omo Oppa\n+\t\t\t\t\tupdateLoginState(MapleClient.LOGIN_NOTLOGGEDIN);   // ACCID = 0, issue found thanks to Tochi & K u ssss o & Thora & Omo Oppa\n                                         this.setAccID(accountId);\n \t\t\t\t}\n \t\t\t}\n@@ -1231,6 +1231,22 @@ public boolean acceptToS() {\n \t\t}\n \t\treturn disconnectForBeingAFaggot;\n \t}\n+        \n+        public void checkChar(int accid) {  /// issue with multiple chars from same account login found by shavit, resinate\n+            if (true) {\n+                return;\n+            }\n+            \n+            for (World w : Server.getInstance().getWorlds()) {\n+                for (MapleCharacter chr : w.getPlayerStorage().getAllCharacters()) {\n+                    if (accid == chr.getAccountID()) {\n+                        FilePrinter.print(FilePrinter.EXPLOITS, \"Player:  \" + chr.getName() + \" has been removed from \" + GameConstants.WORLD_NAMES[w.getId()] + \". Possible Dupe attempt.\");\n+                        chr.getClient().forceDisconnect();\n+                        w.getPlayerStorage().removePlayer(chr.getId());\n+                    }\n+                }\n+            }\n+        }\n \n \tpublic int getVotePoints(){\n \t\tint points = 0;"}, {"sha": "6190b45f2646b61395f0025f7482c4c1da4ae9a0", "filename": "src/client/MonsterBook.java", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/MonsterBook.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/MonsterBook.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/MonsterBook.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -82,7 +82,9 @@ public void addCard(final MapleClient c, final int cardid) {\n         }\n         \n         if(qty < 5) {\n-            calculateLevel();   // current leveling system only accounts unique cards...\n+            if (qty == 0) {     // leveling system only accounts unique cards\n+                calculateLevel();\n+            }\n             \n             c.announce(MaplePacketCreator.addCard(false, cardid, qty + 1));\n             c.announce(MaplePacketCreator.showGainCard());\n@@ -94,7 +96,15 @@ public void addCard(final MapleClient c, final int cardid) {\n     private void calculateLevel() {\n         lock.lock();\n         try {\n-            bookLevel = (int) Math.max(1, Math.sqrt((normalCard + specialCard) / 5));\n+            int collectionExp = (normalCard + specialCard);\n+            \n+            int level = 0, expToNextlevel = 1;\n+            do {\n+                level++;\n+                expToNextlevel += level * 10;\n+            } while (collectionExp >= expToNextlevel);\n+            \n+            bookLevel = level;  // thanks IxianMace for noticing book level differing between book UI and character info UI\n         } finally {\n             lock.unlock();\n         }"}, {"sha": "eed816cde277d74371c67706a0243be21206c767", "filename": "src/client/command/commands/gm0/DisposeCommand.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/command/commands/gm0/DisposeCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/command/commands/gm0/DisposeCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm0/DisposeCommand.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -26,6 +26,7 @@\n import client.command.Command;\n import client.MapleClient;\n import scripting.npc.NPCScriptManager;\n+import scripting.quest.QuestScriptManager;\n import tools.MaplePacketCreator;\n \n public class DisposeCommand extends Command {\n@@ -36,6 +37,7 @@\n     @Override\n     public void execute(MapleClient c, String[] params) {\n         NPCScriptManager.getInstance().dispose(c);\n+        QuestScriptManager.getInstance().dispose(c);\n         c.announce(MaplePacketCreator.enableActions());\n         c.removeClickedNPC();\n         c.getPlayer().message(\"You've been disposed.\");"}, {"sha": "52c7824da97704368db5eb23b185d2fba9b6fbb4", "filename": "src/client/command/commands/gm0/MapOwnerClaimCommand.java", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/command/commands/gm0/MapOwnerClaimCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/command/commands/gm0/MapOwnerClaimCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm0/MapOwnerClaimCommand.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -42,20 +42,25 @@ public void execute(MapleClient c, String[] params) {\n                 \n                 if (YamlConfig.config.server.USE_MAP_OWNERSHIP_SYSTEM) {\n                     if (chr.getEventInstance() == null) {\n-                        MapleMap ownedMap = chr.getOwnedMap();  // thanks Conrad for suggesting not unlease a map as soon as player exits it\n-                        if (ownedMap != null) {\n-                            ownedMap.unclaimOwnership(chr);\n-                            \n-                            if (chr.getMap() == ownedMap) {\n-                                chr.dropMessage(5, \"This lawn is now free real estate.\");\n-                                return;\n+                        MapleMap map = chr.getMap();\n+                        if (map.countBosses() == 0) {   // thanks Conrad for suggesting bosses prevent map leasing\n+                            MapleMap ownedMap = chr.getOwnedMap();  // thanks Conrad for suggesting not unlease a map as soon as player exits it\n+                            if (ownedMap != null) {\n+                                ownedMap.unclaimOwnership(chr);\n+\n+                                if (map == ownedMap) {\n+                                    chr.dropMessage(5, \"This lawn is now free real estate.\");\n+                                    return;\n+                                }\n+                            }\n+\n+                            if (map.claimOwnership(chr)) {\n+                                chr.dropMessage(5, \"You have leased this lawn for a while, until you leave here or after 1 minute of inactivity.\");\n+                            } else {\n+                                chr.dropMessage(5, \"This lawn has already been leased by a player.\");\n                             }\n-                        }\n-                        \n-                        if (chr.getMap().claimOwnership(chr)) {\n-                            chr.dropMessage(5, \"You have leased this lawn for a while, until you leave here or after 1 minute of inactivity.\");\n                         } else {\n-                            chr.dropMessage(5, \"This lawn has already been leased by a player.\");\n+                            chr.dropMessage(5, \"This lawn is currently under a boss siege.\");\n                         }\n                     } else {\n                         chr.dropMessage(5, \"This lawn cannot be leased.\");"}, {"sha": "1657e467dd8ddcc10da52394d74bf83b994ad345", "filename": "src/client/command/commands/gm1/GotoCommand.java", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/command/commands/gm1/GotoCommand.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/command/commands/gm1/GotoCommand.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/command/commands/gm1/GotoCommand.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -29,11 +29,10 @@\n import constants.game.GameConstants;\n import java.util.ArrayList;\n import java.util.Collections;\n-import net.server.Server;\n import server.maps.MaplePortal;\n import server.maps.FieldLimit;\n import server.maps.MapleMap;\n-import server.maps.MapleMapManager;\n+import server.maps.MapleMapFactory;\n import server.maps.MapleMiniDungeonInfo;\n \n import java.util.Comparator;\n@@ -47,19 +46,28 @@\n     {\n         setDescription(\"\");\n         \n-        MapleMapManager mapManager = Server.getInstance().getWorlds().get(0).getChannels().get(0).getMapFactory();\n-        \n         List<Entry<String, Integer>> towns = new ArrayList<>(GameConstants.GOTO_TOWNS.entrySet());\n         sortGotoEntries(towns);\n-        for (Map.Entry<String, Integer> e : towns) {\n-            GOTO_TOWNS_INFO += (\"'\" + e.getKey() + \"' - #b\" + (mapManager.getMap(e.getValue()).getMapName()) + \"#k\\r\\n\");\n-        }\n         \n-        List<Entry<String, Integer>> areas = new ArrayList<>(GameConstants.GOTO_AREAS.entrySet());\n-        sortGotoEntries(areas);\n-        for (Map.Entry<String, Integer> e : areas) {\n-            GOTO_AREAS_INFO += (\"'\" + e.getKey() + \"' - #b\" + (mapManager.getMap(e.getValue()).getMapName()) + \"#k\\r\\n\");\n+        try {\n+            // thanks shavit for noticing goto areas getting loaded from wz needlessly, only for the name retrieval\n+            \n+            for (Map.Entry<String, Integer> e : towns) {\n+                GOTO_TOWNS_INFO += (\"'\" + e.getKey() + \"' - #b\" + (MapleMapFactory.loadPlaceName(e.getValue())) + \"#k\\r\\n\");\n+            }\n+\n+            List<Entry<String, Integer>> areas = new ArrayList<>(GameConstants.GOTO_AREAS.entrySet());\n+            sortGotoEntries(areas);\n+            for (Map.Entry<String, Integer> e : areas) {\n+                GOTO_AREAS_INFO += (\"'\" + e.getKey() + \"' - #b\" + (MapleMapFactory.loadPlaceName(e.getValue())) + \"#k\\r\\n\");\n+            }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            \n+            GOTO_TOWNS_INFO = \"(none)\";\n+            GOTO_AREAS_INFO = \"(none)\";\n         }\n+        \n     }\n     \n     public static String GOTO_TOWNS_INFO = \"\";"}, {"sha": "5da563f29dfef393f626928817081d59371ce6f4", "filename": "src/client/inventory/Item.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/inventory/Item.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/inventory/Item.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/Item.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -127,10 +127,6 @@ public int getPetId() {\n         return petid;\n     }\n     \n-    public Integer getPetIdForDb() {\n-        return petid > -1 ? petid : null;\n-    }\n-    \n     @Override\n     public int compareTo(Item other) {\n         if (this.id < other.getItemId()) {"}, {"sha": "7ece9b334bf9652e75d003122011e5ded5d27927", "filename": "src/client/inventory/ItemFactory.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/inventory/ItemFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/client/inventory/ItemFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/client/inventory/ItemFactory.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -234,7 +234,7 @@ private void saveItemsCommon(List<Pair<Item, MapleInventoryType>> items, int id,\n                     ps.setInt(6, item.getPosition());\n                     ps.setInt(7, item.getQuantity());\n                     ps.setString(8, item.getOwner());\n-                    ps.setObject(9, item.getPetIdForDb(), java.sql.Types.INTEGER);\n+                    ps.setInt(9, item.getPetId());      // thanks Daddy Egg for alerting a case of unique petid constraint breach getting raised\n                     ps.setInt(10, item.getFlag());\n                     ps.setLong(11, item.getExpiration());\n                     ps.setString(12, item.getGiftFrom());\n@@ -414,7 +414,7 @@ private void saveItemsMerchant(List<Pair<Item, MapleInventoryType>> items, List<\n                     ps.setInt(6, item.getPosition());\n                     ps.setInt(7, item.getQuantity());\n                     ps.setString(8, item.getOwner());\n-                    ps.setObject(9, item.getPetIdForDb(), java.sql.Types.INTEGER);\n+                    ps.setInt(9, item.getPetId());\n                     ps.setInt(10, item.getFlag());\n                     ps.setLong(11, item.getExpiration());\n                     ps.setString(12, item.getGiftFrom());"}, {"sha": "358b2d1ef1f3f38980dfa95b14e6222622743c7d", "filename": "src/constants/game/GameConstants.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/constants/game/GameConstants.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/constants/game/GameConstants.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/constants/game/GameConstants.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -573,7 +573,7 @@ public static boolean isGMSkills(final int skill) {\n     }\n     \n     public static boolean isFreeMarketRoom(int mapid) {\n-        return mapid > 910000000 && mapid < 910000023;\n+        return mapid / 1000000 == 910 && mapid > 910000000; // FM rooms subset, thanks to shavit\n     }\n     \n     public static boolean isMerchantLocked(MapleMap map) {"}, {"sha": "9576cad5104961f2deeee784e92bfcf100a6621a", "filename": "src/net/server/PlayerStorage.java", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/PlayerStorage.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/PlayerStorage.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/PlayerStorage.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -28,18 +28,19 @@\n import java.util.List;\n import java.util.LinkedHashMap;\n import java.util.Map;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n \n public class PlayerStorage {\n-    private final ReentrantReadWriteLock locks = new MonitoredReentrantReadWriteLock(MonitoredLockType.PLAYER_STORAGE, true);\n+    private final MonitoredReentrantReadWriteLock locks = new MonitoredReentrantReadWriteLock(MonitoredLockType.PLAYER_STORAGE, true);\n     private final Map<Integer, MapleCharacter> storage = new LinkedHashMap<>();\n     private final Map<String, MapleCharacter> nameStorage = new LinkedHashMap<>();\n-    private ReadLock rlock = locks.readLock();\n-    private WriteLock wlock = locks.writeLock();\n+    private MonitoredReadLock rlock = MonitoredReadLockFactory.createLock(locks);\n+    private MonitoredWriteLock wlock = MonitoredWriteLockFactory.createLock(locks);\n \n     public void addPlayer(MapleCharacter chr) {\n         wlock.lock();"}, {"sha": "f5f351d72da90689e722df82c3713ab4f45a7293", "filename": "src/net/server/Server.java", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/Server.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/Server.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/Server.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -41,15 +41,16 @@\n import java.util.Set;\n import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.locks.Lock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n \n import config.YamlConfig;\n import net.server.audit.ThreadTracker;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n \n import net.MapleServerHandler;\n import net.mina.MapleCodecFactory;\n@@ -87,7 +88,6 @@\n import client.command.CommandsExecutor;\n import client.inventory.Item;\n import client.inventory.ItemFactory;\n-import client.inventory.MaplePet;\n import client.inventory.manipulator.MapleCashidGenerator;\n import client.newyear.NewYearCardRecord;\n import constants.inventory.ItemConstants;\n@@ -146,13 +146,13 @@ public static Server getInstance() {\n     private final Lock srvLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.SERVER);\n     private final Lock disLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.SERVER_DISEASES);\n     \n-    private final ReentrantReadWriteLock wldLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.SERVER_WORLDS, true);\n-    private final ReadLock wldRLock = wldLock.readLock();\n-    private final WriteLock wldWLock = wldLock.writeLock();\n+    private final MonitoredReentrantReadWriteLock wldLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.SERVER_WORLDS, true);\n+    private final MonitoredReadLock wldRLock = MonitoredReadLockFactory.createLock(wldLock);\n+    private final MonitoredWriteLock wldWLock = MonitoredWriteLockFactory.createLock(wldLock);\n     \n-    private final ReentrantReadWriteLock lgnLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.SERVER_LOGIN, true);\n-    private final ReadLock lgnRLock = lgnLock.readLock();\n-    private final WriteLock lgnWLock = lgnLock.writeLock();\n+    private final MonitoredReentrantReadWriteLock lgnLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.SERVER_LOGIN, true);\n+    private final MonitoredReadLock lgnRLock = MonitoredReadLockFactory.createLock(lgnLock);\n+    private final MonitoredWriteLock lgnWLock = MonitoredWriteLockFactory.createLock(lgnLock);\n     \n     private final AtomicLong currentTime = new AtomicLong(0);\n     private long serverCurrentTime = 0;\n@@ -1896,13 +1896,13 @@ private synchronized void shutdownInternal(boolean restart) {\n                 }\n             }\n         }\n-\n+        \n+        resetServerWorlds();\n+        \n         ThreadManager.getInstance().stop();\n         TimerManager.getInstance().purge();\n         TimerManager.getInstance().stop();\n         \n-        resetServerWorlds();\n-        \n         System.out.println(\"Worlds + Channels are offline.\");\n         acceptor.unbind();\n         acceptor = null;"}, {"sha": "a67d5be827778ab672e3393b043f73fd85c3b696", "filename": "src/net/server/audit/locks/MonitoredLockType.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/audit/locks/MonitoredLockType.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/audit/locks/MonitoredLockType.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/audit/locks/MonitoredLockType.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -78,6 +78,7 @@\n     WORLD_PSHOPS,\n     WORLD_MERCHS,\n     WORLD_MAPOBJS,\n+    WORLD_SAVECHARS,\n     WORLD_SUGGEST,\n     EIM,\n     EIM_PARTY,"}, {"sha": "07a4eea3c56846e50259eb4e37cb70fc6bdeea12", "filename": "src/net/server/channel/Channel.java", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/channel/Channel.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/channel/Channel.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/Channel.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -34,9 +34,11 @@\n import java.util.Set;\n import java.util.WeakHashMap;\n import java.util.concurrent.ScheduledFuture;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n+\n+import net.server.audit.locks.MonitoredReadLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n \n import config.YamlConfig;\n import net.server.audit.LockCollector;\n@@ -64,6 +66,10 @@\n import org.apache.mina.transport.socket.SocketSessionConfig;\n import org.apache.mina.transport.socket.nio.NioSocketAcceptor;\n \n+import client.MapleCharacter;\n+import net.server.services.ServicesManager;\n+import net.server.services.BaseService;\n+import net.server.services.type.ChannelServices;\n import scripting.event.EventScriptManager;\n import server.TimerManager;\n import server.events.gm.MapleEvent;\n@@ -73,13 +79,9 @@\n import server.maps.MapleMap;\n import server.maps.MapleMapManager;\n import server.maps.MapleMiniDungeon;\n+import server.maps.MapleMiniDungeonInfo;\n import tools.MaplePacketCreator;\n import tools.Pair;\n-import client.MapleCharacter;\n-import net.server.channel.services.ServiceType;\n-import net.server.channel.services.ServicesManager;\n-import net.server.channel.services.task.BaseService;\n-import server.maps.MapleMiniDungeonInfo;\n \n public final class Channel {\n \n@@ -90,7 +92,7 @@\n     private String ip, serverMessage;\n     private MapleMapManager mapManager;\n     private EventScriptManager eventSM;\n-    private ServicesManager services = new ServicesManager();\n+    private ServicesManager services;\n     private Map<Integer, MapleHiredMerchant> hiredMerchants = new HashMap<>();\n     private final Map<Integer, Integer> storedVars = new HashMap<>();\n     private Set<Integer> playersAway = new HashSet<>();\n@@ -121,9 +123,9 @@\n     private Set<Integer> ongoingCathedralGuests = null;\n     private long ongoingStartTime;\n     \n-    private ReentrantReadWriteLock merchantLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.MERCHANT, true);\n-    private ReadLock merchRlock = merchantLock.readLock();\n-    private WriteLock merchWlock = merchantLock.writeLock();\n+    private MonitoredReentrantReadWriteLock merchantLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.MERCHANT, true);\n+    private MonitoredReadLock merchRlock = MonitoredReadLockFactory.createLock(merchantLock);\n+    private MonitoredWriteLock merchWlock = MonitoredWriteLockFactory.createLock(merchantLock);\n     \n     private MonitoredReentrantLock faceLock[] = new MonitoredReentrantLock[YamlConfig.config.server.CHANNEL_LOCKS];\n     \n@@ -155,8 +157,8 @@ public Channel(final int world, final int channel, long startTime) {\n                 eventSM = new EventScriptManager(this, getEvents());\n                 eventSM.init();\n             } else {\n-                String[] ev = {};\n-                eventSM = new EventScriptManager(null, ev);\n+                String[] ev = {\"0_EXAMPLE\"};\n+                eventSM = new EventScriptManager(this, ev);\n             }\n             \n             dojoStage = new int[20];\n@@ -168,7 +170,7 @@ public Channel(final int world, final int channel, long startTime) {\n                 dojoTask[i] = null;\n             }\n             \n-            services = new ServicesManager();\n+            services = new ServicesManager(ChannelServices.OVERALL);\n             \n             System.out.println(\"    Channel \" + getId() + \": Listening on port \" + port);\n         } catch (Exception e) {\n@@ -181,10 +183,9 @@ public synchronized void reloadEventScriptManager(){\n             return;\n         }\n         \n-    \teventSM.cancel();\n+        eventSM.cancel();\n     \teventSM = null;\n     \teventSM = new EventScriptManager(this, getEvents());\n-    \teventSM.init();\n     }\n \n     public final synchronized void shutdown() {\n@@ -199,7 +200,7 @@ public final synchronized void shutdown() {\n             disconnectAwayPlayers();\n             players.disconnectAll();\n             \n-            eventSM.cancel();\n+            eventSM.dispose();\n             eventSM = null;\n             \n             mapManager.dispose();\n@@ -277,7 +278,7 @@ public MapleMapManager getMapFactory() {\n         return mapManager;\n     }\n     \n-    public BaseService getServiceAccess(ServiceType sv) {\n+    public BaseService getServiceAccess(ChannelServices sv) {\n         return services.getAccess(sv).getService();\n     }\n     "}, {"sha": "5be8060028ef4acf16adb854a472bfdfec9cc769", "filename": "src/net/server/channel/handlers/NPCAnimationHandler.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/channel/handlers/NPCAnimationHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/channel/handlers/NPCAnimationHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/NPCAnimationHandler.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -39,7 +39,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         if (length == 6) { // NPC Talk\n             mplew.writeShort(SendOpcode.NPC_ACTION.getValue());\n             mplew.writeInt(slea.readInt());\n-            mplew.writeShort(slea.readShort());\n+            mplew.write(slea.readByte());   // 2 bytes, thanks resinate\n+            mplew.write(slea.readByte());\n             c.announce(mplew.getPacket());\n         } else if (length > 6) { // NPC Move\n             byte[] bytes = slea.read(length - 9);"}, {"sha": "49df1547bbfb7b74b93e907ddb2f3baf2093e379", "filename": "src/net/server/channel/handlers/PlayerLoggedinHandler.java", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/channel/handlers/PlayerLoggedinHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/channel/handlers/PlayerLoggedinHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/PlayerLoggedinHandler.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -63,7 +63,6 @@\n import client.inventory.MaplePet;\n import constants.game.GameConstants;\n import constants.game.ScriptableNPCConstants;\n-import constants.net.ServerConstants;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.HashSet;\n@@ -116,30 +115,27 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                 }\n \n                 Channel cserv = wserv.getChannel(c.getChannel());\n-                if(cserv == null || !cserv.isActive()) {\n+                if(cserv == null) {\n                     c.setChannel(1);\n                     cserv = wserv.getChannel(c.getChannel());\n \n                     if(cserv == null) {\n                         c.disconnect(true, false);\n                         return;\n-                    } else if (!cserv.isActive()) {\n-                        c.announce(MaplePacketCreator.getAfterLoginError(7));\n-                        return;\n                     }\n                 }\n \n                 MapleCharacter player = wserv.getPlayerStorage().getCharacterById(cid);\n                 boolean newcomer = false;\n-\n+                \n                 IoSession session = c.getSession();\n+                if (!server.validateCharacteridInTransition(session, cid)) {\n+                    c.disconnect(true, false);\n+                    return;\n+                }\n+                \n                 String remoteHwid;\n                 if (player == null) {\n-                    if (!server.validateCharacteridInTransition(session, cid)) {\n-                        c.disconnect(true, false);\n-                        return;\n-                    }\n-\n                     remoteHwid = MapleSessionCoordinator.getInstance().getGameSessionHwid(session);\n                     if (remoteHwid == null) {\n                         c.disconnect(true, false);"}, {"sha": "ee1c30db7582e45aa5279cdca60c54d84e7bb203", "filename": "src/net/server/channel/handlers/TakeDamageHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/channel/handlers/TakeDamageHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/channel/handlers/TakeDamageHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/channel/handlers/TakeDamageHandler.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -213,7 +213,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n                         map.broadcastMessage(chr, MaplePacketCreator.damageMonster(oid, bouncedamage), false, true);\n                         attacker.aggroMonsterDamage(chr, bouncedamage);\n                     }\n-                    MapleStatEffect bPressure = chr.getBuffEffect(MapleBuffStat.BODY_PRESSURE);\n+                    MapleStatEffect bPressure = chr.getBuffEffect(MapleBuffStat.BODY_PRESSURE); // thanks Atoot for noticing an issue on Body Pressure neutralise\n                     if (bPressure != null) {\n                         Skill skill = SkillFactory.getSkill(Aran.BODY_PRESSURE);\n                         if (!attacker.alreadyBuffedStats().contains(MonsterStatus.NEUTRALISE)) {"}, {"sha": "be779f2665686c5afdbf39d98a001d7ee5f55f17", "filename": "src/net/server/coordinator/login/LoginStorage.java", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/coordinator/login/LoginStorage.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/coordinator/login/LoginStorage.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/coordinator/login/LoginStorage.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -37,21 +37,20 @@\n     private ConcurrentHashMap<Integer, List<Long>> loginHistory = new ConcurrentHashMap<>();\n     \n     public boolean registerLogin(int accountId) {\n-        List<Long> accHist = loginHistory.putIfAbsent(accountId, new LinkedList<Long>());\n-        if (accHist != null) {\n-            synchronized (accHist) {\n-                if (accHist.size() > YamlConfig.config.server.MAX_ACCOUNT_LOGIN_ATTEMPT) {\n-                    long blockExpiration = Server.getInstance().getCurrentTime() + YamlConfig.config.server.LOGIN_ATTEMPT_DURATION;\n-                    Collections.fill(accHist, blockExpiration);\n-                    \n-                    return false;\n-                }\n-            }\n-        } else {\n-            accHist = loginHistory.get(accountId);\n+        List<Long> accHist = loginHistory.get(accountId);\n+        if (accHist == null) {\n+            accHist = new LinkedList<Long>();\n+            loginHistory.put(accountId, accHist);\n         }\n         \n         synchronized (accHist) {\n+            if (accHist.size() > YamlConfig.config.server.MAX_ACCOUNT_LOGIN_ATTEMPT) {\n+                long blockExpiration = Server.getInstance().getCurrentTime() + YamlConfig.config.server.LOGIN_ATTEMPT_DURATION;\n+                Collections.fill(accHist, blockExpiration);\n+\n+                return false;\n+            }\n+            \n             accHist.add(Server.getInstance().getCurrentTime() + YamlConfig.config.server.LOGIN_ATTEMPT_DURATION);\n             return true;\n         }"}, {"sha": "33434101cc33cdc22e99a6671e30bb17c9d83b6d", "filename": "src/net/server/coordinator/partysearch/MaplePartySearchCoordinator.java", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/coordinator/partysearch/MaplePartySearchCoordinator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/coordinator/partysearch/MaplePartySearchCoordinator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/coordinator/partysearch/MaplePartySearchCoordinator.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -25,8 +25,6 @@\n import java.io.File;\n import net.server.world.MapleParty;\n import net.server.coordinator.world.MapleInviteCoordinator.InviteType;\n-import net.server.coordinator.partysearch.PartySearchEchelon;\n-import net.server.coordinator.partysearch.PartySearchStorage;\n import tools.MaplePacketCreator;\n import tools.Pair;\n \n@@ -38,11 +36,12 @@\n import java.util.Map;\n import java.util.Map.Entry;\n import java.util.Set;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n import net.server.coordinator.world.MapleInviteCoordinator;\n import provider.MapleData;\n import provider.MapleDataProviderFactory;\n@@ -58,9 +57,9 @@\n     private Map<MapleJob, PartySearchEchelon> upcomers = new HashMap<>();\n     \n     private List<MapleCharacter> leaderQueue = new LinkedList<>();\n-    private final ReentrantReadWriteLock leaderQueueLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.WORLD_PARTY_SEARCH_QUEUE, true);\n-    private final ReadLock leaderQueueRLock = leaderQueueLock.readLock();\n-    private final WriteLock leaderQueueWLock = leaderQueueLock.writeLock();\n+    private final MonitoredReentrantReadWriteLock leaderQueueLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.WORLD_PARTY_SEARCH_QUEUE, true);\n+    private final MonitoredReadLock leaderQueueRLock = MonitoredReadLockFactory.createLock(leaderQueueLock);\n+    private final MonitoredWriteLock leaderQueueWLock = MonitoredWriteLockFactory.createLock(leaderQueueLock);\n     \n     private Map<Integer, MapleCharacter> searchLeaders = new HashMap<>();\n     private Map<Integer, LeaderSearchMetadata> searchSettings = new HashMap<>();"}, {"sha": "9b597028c2328a5cfa472c8421a1b29b92dffcd9", "filename": "src/net/server/coordinator/partysearch/PartySearchEchelon.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/coordinator/partysearch/PartySearchEchelon.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/coordinator/partysearch/PartySearchEchelon.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/coordinator/partysearch/PartySearchEchelon.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -25,12 +25,12 @@\n import java.util.List;\n import java.util.Map;\n \n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n \n import java.lang.ref.WeakReference;\n \n@@ -40,9 +40,9 @@\n  */\n public class PartySearchEchelon {\n     \n-    private final ReentrantReadWriteLock psLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.WORLD_PARTY_SEARCH_ECHELON, true);\n-    private final ReadLock psRLock = psLock.readLock();\n-    private final WriteLock psWLock = psLock.writeLock();\n+    private final MonitoredReentrantReadWriteLock psLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.WORLD_PARTY_SEARCH_ECHELON, true);\n+    private final MonitoredReadLock psRLock = MonitoredReadLockFactory.createLock(psLock);\n+    private final MonitoredWriteLock psWLock = MonitoredWriteLockFactory.createLock(psLock);\n     \n     private Map<Integer, WeakReference<MapleCharacter>> echelon = new HashMap<>(20);\n     "}, {"sha": "2198a1a44e3d49d26dbe33b78fcd5aa2e8037f66", "filename": "src/net/server/coordinator/partysearch/PartySearchStorage.java", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/coordinator/partysearch/PartySearchStorage.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/coordinator/partysearch/PartySearchStorage.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/coordinator/partysearch/PartySearchStorage.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -28,12 +28,14 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n \n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n+\n import tools.IntervalBuilder;\n \n /**\n@@ -45,9 +47,9 @@\n     private List<PartySearchCharacter> storage = new ArrayList<>(20);\n     private IntervalBuilder emptyIntervals = new IntervalBuilder();\n     \n-    private final ReentrantReadWriteLock psLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.WORLD_PARTY_SEARCH_STORAGE, true);\n-    private final ReadLock psRLock = psLock.readLock();\n-    private final WriteLock psWLock = psLock.writeLock();\n+    private final MonitoredReentrantReadWriteLock psLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.WORLD_PARTY_SEARCH_STORAGE, true);\n+    private final MonitoredReadLock psRLock = MonitoredReadLockFactory.createLock(psLock);\n+    private final MonitoredWriteLock psWLock = MonitoredWriteLockFactory.createLock(psLock);\n     \n     public List<PartySearchCharacter> getStorageList() {\n         psRLock.lock();"}, {"sha": "66c290d3b7a86d58fbc772b87e419b94eca0f107", "filename": "src/net/server/handlers/login/CharlistRequestHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/handlers/login/CharlistRequestHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/handlers/login/CharlistRequestHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/CharlistRequestHandler.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -44,7 +44,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n         \n         int channel = slea.readByte() + 1;\n         Channel ch = wserv.getChannel(channel);\n-        if(ch == null || !ch.isActive()) {\n+        if(ch == null) {\n             c.announce(MaplePacketCreator.getServerStatus(2));\n             return;\n         }"}, {"sha": "45beacc73c341fce346134c65a00ae3c2f3b25e4", "filename": "src/net/server/handlers/login/LoginPasswordHandler.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/handlers/login/LoginPasswordHandler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/handlers/login/LoginPasswordHandler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/handlers/login/LoginPasswordHandler.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -150,6 +150,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)\n             return;\n         }\n         if (c.finishLogin() == 0) {\n+            c.checkChar(c.getAccID());\n             login(c);\n         } else {\n             c.announce(MaplePacketCreator.getLoginFailed(7));"}, {"sha": "61013b612924fa6b3e24ac3f1dde2194cf3cfd8c", "filename": "src/net/server/services/BaseScheduler.java", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/BaseScheduler.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/BaseScheduler.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/BaseScheduler.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,7 +17,7 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services;\n+package net.server.services;\n \n import config.YamlConfig;\n import java.util.Collections;", "previous_filename": "src/net/server/channel/services/BaseScheduler.java"}, {"sha": "4a6a95da6297cd885df0a74745352d4e8d442d96", "filename": "src/net/server/services/BaseService.java", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/BaseService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/BaseService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/BaseService.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,7 +17,7 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services.task;\n+package net.server.services;\n \n import config.YamlConfig;\n ", "previous_filename": "src/net/server/channel/services/task/BaseService.java"}, {"sha": "692513df409f54a84e904111c9c202ef49b50bbb", "filename": "src/net/server/services/SchedulerListener.java", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/SchedulerListener.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/SchedulerListener.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/SchedulerListener.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,7 +17,7 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services;\n+package net.server.services;\n \n import java.util.List;\n ", "previous_filename": "src/net/server/channel/services/SchedulerListener.java"}, {"sha": "b9798d47537a3c47c9c4f1ec0a0747293125c638", "filename": "src/net/server/services/Service.java", "status": "renamed", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/Service.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/Service.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/Service.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,9 +17,7 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services;\n-\n-import net.server.channel.services.task.BaseService;\n+package net.server.services;\n \n /**\n  *", "previous_filename": "src/net/server/channel/services/Service.java"}, {"sha": "7d43fcdeb63a0e82e776d31b4738a5f2bec05106", "filename": "src/net/server/services/ServiceType.java", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/ServiceType.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/ServiceType.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/ServiceType.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -0,0 +1,30 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server, commands OdinMS-based\n+    Copyleft (L) 2016 - 2019 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.services;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public interface ServiceType <T extends Enum<?>> {\n+    public abstract Service createService();\n+    public int ordinal();\n+    public T[] enumValues();\n+}"}, {"sha": "a083a9b610f8ee4a7a92cdeca0b2c25143a24918", "filename": "src/net/server/services/ServicesManager.java", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/ServicesManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/ServicesManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/ServicesManager.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,7 +17,7 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services;\n+package net.server.services;\n \n /**\n  *\n@@ -27,12 +27,12 @@\n     \n     private Service[] services;\n     \n-    public ServicesManager() {\n-        ServiceType[] serviceTypes = ServiceType.values();\n+    public ServicesManager(ServiceType serviceBundle) {\n+        Enum[] serviceTypes = serviceBundle.enumValues();\n         \n         services = new Service[serviceTypes.length];\n-        for (ServiceType type : serviceTypes) {\n-            services[type.ordinal()] = type.createService();\n+        for (Enum type : serviceTypes) {\n+            services[type.ordinal()] = ((ServiceType) type).createService();\n         }\n     }\n     \n@@ -41,7 +41,7 @@ public Service getAccess(ServiceType s) {\n     }\n     \n     public void shutdown() {\n-        for (int i = 0; i < ServiceType.values().length; i++) {\n+        for (int i = 0; i < services.length; i++) {\n             services[i].dispose();\n         }\n         services = null;", "previous_filename": "src/net/server/channel/services/ServicesManager.java"}, {"sha": "bb781c917e9ce886b4d891050be56809122f6bbd", "filename": "src/net/server/services/task/channel/EventService.java", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/EventService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/EventService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/task/channel/EventService.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,11 +17,12 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services.task;\n+package net.server.services.task.channel;\n \n+import net.server.services.BaseService;\n import config.YamlConfig;\n import net.server.audit.locks.MonitoredLockType;\n-import net.server.channel.services.BaseScheduler;\n+import net.server.services.BaseScheduler;\n \n /**\n  *\n@@ -37,6 +38,7 @@ public EventService() {\n         }\n     }\n     \n+    @Override\n     public void dispose() {\n         for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n             if(eventSchedulers[i] != null) {", "previous_filename": "src/net/server/channel/services/task/EventService.java"}, {"sha": "52b5d343f17574e6f3cf67ab2518b85514528f05", "filename": "src/net/server/services/task/channel/FaceExpressionService.java", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/FaceExpressionService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/FaceExpressionService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/task/channel/FaceExpressionService.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,16 +17,17 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services.task;\n+package net.server.services.task.channel;\n \n+import net.server.services.BaseService;\n import client.MapleCharacter;\n import config.YamlConfig;\n import java.util.Collections;\n import net.server.audit.LockCollector;\n import net.server.audit.locks.MonitoredLockType;\n import net.server.audit.locks.MonitoredReentrantLock;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n-import net.server.channel.services.BaseScheduler;\n+import net.server.services.BaseScheduler;\n import server.maps.MapleMap;\n import tools.MaplePacketCreator;\n \n@@ -61,6 +62,7 @@ public void run() {\n         });\n     }\n     \n+    @Override\n     public void dispose() {\n         for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n             if(faceExpressionSchedulers[i] != null) {", "previous_filename": "src/net/server/channel/services/task/FaceExpressionService.java"}, {"sha": "46d7234c9e610c895d3dbdc74a85d2dd67e4dc9c", "filename": "src/net/server/services/task/channel/MobAnimationService.java", "status": "renamed", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/MobAnimationService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/MobAnimationService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/task/channel/MobAnimationService.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,8 +17,9 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services.task;\n+package net.server.services.task.channel;\n \n+import net.server.services.BaseService;\n import config.YamlConfig;\n import net.server.audit.locks.MonitoredLockType;\n \n@@ -28,8 +29,8 @@\n import net.server.audit.LockCollector;\n import net.server.audit.locks.MonitoredReentrantLock;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n-import net.server.channel.services.BaseScheduler;\n-import net.server.channel.services.SchedulerListener;\n+import net.server.services.BaseScheduler;\n+import net.server.services.SchedulerListener;\n \n /**\n  *\n@@ -45,6 +46,7 @@ public MobAnimationService() {\n         }\n     }\n     \n+    @Override\n     public void dispose() {\n         for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n             if(mobAnimationSchedulers[i] != null) {", "previous_filename": "src/net/server/channel/services/task/MobAnimationService.java"}, {"sha": "c5bb1c3e757603cf86842ae18d34c3c8ffd358aa", "filename": "src/net/server/services/task/channel/MobClearSkillService.java", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/MobClearSkillService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/MobClearSkillService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/task/channel/MobClearSkillService.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,11 +17,12 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services.task;\n+package net.server.services.task.channel;\n \n+import net.server.services.BaseService;\n import config.YamlConfig;\n import net.server.audit.locks.MonitoredLockType;\n-import net.server.channel.services.BaseScheduler;\n+import net.server.services.BaseScheduler;\n \n /**\n  *\n@@ -37,6 +38,7 @@ public MobClearSkillService() {\n         }\n     }\n     \n+    @Override\n     public void dispose() {\n         for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n             if(mobClearSkillSchedulers[i] != null) {", "previous_filename": "src/net/server/channel/services/task/MobClearSkillService.java"}, {"sha": "d666880a84e541c783bca39e72ed711546990774", "filename": "src/net/server/services/task/channel/MobMistService.java", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/MobMistService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/MobMistService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/task/channel/MobMistService.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,11 +17,12 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services.task;\n+package net.server.services.task.channel;\n \n+import net.server.services.BaseService;\n import config.YamlConfig;\n import net.server.audit.locks.MonitoredLockType;\n-import net.server.channel.services.BaseScheduler;\n+import net.server.services.BaseScheduler;\n \n /**\n  *\n@@ -37,6 +38,7 @@ public MobMistService() {\n         }\n     }\n     \n+    @Override\n     public void dispose() {\n         for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n             if(mobMistSchedulers[i] != null) {", "previous_filename": "src/net/server/channel/services/task/MobMistService.java"}, {"sha": "62faa567352cdab0b7189ee938a54c7d19f501fc", "filename": "src/net/server/services/task/channel/MobStatusService.java", "status": "renamed", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/MobStatusService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/MobStatusService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/task/channel/MobStatusService.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,8 +17,9 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services.task;\n+package net.server.services.task.channel;\n \n+import net.server.services.BaseService;\n import client.status.MonsterStatusEffect;\n import config.YamlConfig;\n import java.util.HashMap;\n@@ -29,8 +30,8 @@\n import net.server.audit.locks.MonitoredLockType;\n import net.server.audit.locks.MonitoredReentrantLock;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n-import net.server.channel.services.BaseScheduler;\n-import net.server.channel.services.SchedulerListener;\n+import net.server.services.BaseScheduler;\n+import net.server.services.SchedulerListener;\n \n /**\n  *\n@@ -46,6 +47,7 @@ public MobStatusService() {\n         }\n     }\n     \n+    @Override\n     public void dispose() {\n         for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n             if(mobStatusSchedulers[i] != null) {", "previous_filename": "src/net/server/channel/services/task/MobStatusService.java"}, {"sha": "74303d3b2fd2212c8a99eb730d6b9b077abc2042", "filename": "src/net/server/services/task/channel/OverallService.java", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/OverallService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/channel/OverallService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/task/channel/OverallService.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,11 +17,12 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services.task;\n+package net.server.services.task.channel;\n \n+import net.server.services.BaseService;\n import config.YamlConfig;\n import net.server.audit.locks.MonitoredLockType;\n-import net.server.channel.services.BaseScheduler;\n+import net.server.services.BaseScheduler;\n \n /**\n  *\n@@ -37,6 +38,7 @@ public OverallService() {\n         }\n     }\n     \n+    @Override\n     public void dispose() {\n         for(int i = 0; i < YamlConfig.config.server.CHANNEL_LOCKS; i++) {\n             if(channelSchedulers[i] != null) {", "previous_filename": "src/net/server/channel/services/task/OverallService.java"}, {"sha": "a1e32fc36bf1491d45c599d659f96ab17d213304", "filename": "src/net/server/services/task/world/CharacterSaveService.java", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/world/CharacterSaveService.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/task/world/CharacterSaveService.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/task/world/CharacterSaveService.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -0,0 +1,62 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server\n+    Copyleft (L) 2016 - 2018 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.services.task.world;\n+\n+import net.server.audit.locks.MonitoredLockType;\n+import net.server.services.BaseScheduler;\n+import net.server.services.BaseService;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public class CharacterSaveService extends BaseService {\n+    \n+    CharacterSaveScheduler chrSaveScheduler = new CharacterSaveScheduler();\n+    \n+    @Override\n+    public void dispose() {\n+        if(chrSaveScheduler != null) {\n+            chrSaveScheduler.dispose();\n+            chrSaveScheduler = null;\n+        }\n+    }\n+    \n+    public void registerSaveCharacter(int characterId, Runnable runAction) {\n+        chrSaveScheduler.registerSaveCharacter(characterId, runAction);\n+    }\n+    \n+    private class CharacterSaveScheduler extends BaseScheduler {\n+        \n+        public CharacterSaveScheduler() {\n+            super(MonitoredLockType.WORLD_SAVECHARS);\n+        }\n+\n+        public void registerSaveCharacter(Integer characterId, Runnable runAction) {\n+            registerEntry(characterId, runAction, 0);\n+        }\n+\n+        public void unregisterSaveCharacter(Integer characterId) {\n+            interruptEntry(characterId);\n+        }\n+    \n+    }\n+    \n+}"}, {"sha": "d878edf66c4061f5a7d06ba7ab7e8d342e7626e0", "filename": "src/net/server/services/type/ChannelServices.java", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/type/ChannelServices.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/type/ChannelServices.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/type/ChannelServices.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -0,0 +1,63 @@\n+/*\n+    This file is part of the HeavenMS MapleStory Server, commands OdinMS-based\n+    Copyleft (L) 2016 - 2019 RonanLana\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU Affero General Public License as\n+    published by the Free Software Foundation version 3 as published by\n+    the Free Software Foundation. You may not use, modify or distribute\n+    this program under any other version of the GNU Affero General Public\n+    License.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU Affero General Public License for more details.\n+\n+    You should have received a copy of the GNU Affero General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+package net.server.services.type;\n+\n+import net.server.services.ServiceType;\n+import net.server.services.task.channel.EventService;\n+import net.server.services.task.channel.FaceExpressionService;\n+import net.server.services.task.channel.MobAnimationService;\n+import net.server.services.task.channel.MobClearSkillService;\n+import net.server.services.task.channel.MobMistService;\n+import net.server.services.task.channel.MobStatusService;\n+import net.server.services.task.channel.OverallService;\n+import net.server.services.BaseService;\n+import net.server.services.Service;\n+\n+/**\n+ *\n+ * @author Ronan\n+ */\n+public enum ChannelServices implements ServiceType {\n+    \n+    MOB_STATUS(MobStatusService.class),\n+    MOB_ANIMATION(MobAnimationService.class),\n+    MOB_CLEAR_SKILL(MobClearSkillService.class),\n+    MOB_MIST(MobMistService.class),\n+    FACE_EXPRESSION(FaceExpressionService.class),\n+    EVENT(EventService.class),\n+    OVERALL(OverallService.class);\n+    \n+    private Class<? extends BaseService> s;\n+    \n+    private ChannelServices(Class<? extends BaseService> service) {\n+        s = service;\n+    }\n+    \n+    @Override\n+    public Service createService() {\n+        return new Service(s);\n+    }\n+    \n+    @Override\n+    public ChannelServices[] enumValues() {\n+        return ChannelServices.values();\n+    }\n+    \n+}"}, {"sha": "033ea3fe38782144382b3eef26d82719bcc6aa80", "filename": "src/net/server/services/type/WorldServices.java", "status": "renamed", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/type/WorldServices.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/services/type/WorldServices.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/services/type/WorldServices.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -17,32 +17,35 @@\n     You should have received a copy of the GNU Affero General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n-package net.server.channel.services;\n+package net.server.services.type;\n \n-import net.server.channel.services.task.*;\n+import net.server.services.ServiceType;\n+import net.server.services.BaseService;\n+import net.server.services.Service;\n+import net.server.services.task.world.CharacterSaveService;\n \n /**\n  *\n  * @author Ronan\n  */\n-public enum ServiceType {\n+public enum WorldServices implements ServiceType {\n     \n-    MOB_STATUS(MobStatusService.class),\n-    MOB_ANIMATION(MobAnimationService.class),\n-    MOB_CLEAR_SKILL(MobClearSkillService.class),\n-    MOB_MIST(MobMistService.class),\n-    FACE_EXPRESSION(FaceExpressionService.class),\n-    EVENT(EventService.class),\n-    OVERALL(OverallService.class);\n+    SAVE_CHARACTER(CharacterSaveService.class);\n     \n     private Class<? extends BaseService> s;\n     \n-    private ServiceType(Class<? extends BaseService> service) {\n+    private WorldServices(Class<? extends BaseService> service) {\n         s = service;\n     }\n     \n+    @Override\n     public Service createService() {\n         return new Service(s);\n     }\n     \n+    @Override\n+    public WorldServices[] enumValues() {\n+        return WorldServices.values();\n+    }\n+    \n }", "previous_filename": "src/net/server/channel/services/ServiceType.java"}, {"sha": "b22c6837da626578f15daec5ca24db8a967f64cf", "filename": "src/net/server/world/World.java", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/world/World.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/net/server/world/World.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/net/server/world/World.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -29,7 +29,6 @@\n import client.MapleFamily;\n import config.YamlConfig;\n import constants.game.GameConstants;\n-import constants.net.ServerConstants;\n \n import java.sql.Connection;\n import java.sql.PreparedStatement;\n@@ -50,9 +49,6 @@\n import java.util.TreeMap;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.atomic.AtomicInteger;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n \n import java.util.Set;\n import java.util.HashSet;\n@@ -74,9 +70,13 @@\n import net.server.Server;\n import net.server.audit.LockCollector;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n import net.server.channel.Channel;\n import net.server.channel.CharacterIdChannelPair;\n import net.server.coordinator.world.MapleInviteCoordinator;\n@@ -87,6 +87,9 @@\n import net.server.guild.MapleGuild;\n import net.server.guild.MapleGuildCharacter;\n import net.server.guild.MapleGuildSummary;\n+import net.server.services.BaseService;\n+import net.server.services.ServicesManager;\n+import net.server.services.type.WorldServices;\n import net.server.task.CharacterAutosaverTask;\n import net.server.task.FamilyDailyResetTask;\n import net.server.task.FishingTask;\n@@ -123,12 +126,13 @@\n     private Map<Integer, Pair<Integer, Integer>> relationshipCouples = new HashMap<>();\n     private Map<Integer, MapleGuildSummary> gsStore = new HashMap<>();\n     private PlayerStorage players = new PlayerStorage();\n+    private ServicesManager services = new ServicesManager(WorldServices.SAVE_CHARACTER);\n     private MapleMatchCheckerCoordinator matchChecker = new MapleMatchCheckerCoordinator();\n     private MaplePartySearchCoordinator partySearch = new MaplePartySearchCoordinator();\n     \n-    private final ReentrantReadWriteLock chnLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.WORLD_CHANNELS, true);\n-    private ReadLock chnRLock = chnLock.readLock();\n-    private WriteLock chnWLock = chnLock.writeLock();\n+    private final MonitoredReentrantReadWriteLock chnLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.WORLD_CHANNELS, true);\n+    private MonitoredReadLock chnRLock = MonitoredReadLockFactory.createLock(chnLock);\n+    private MonitoredWriteLock chnWLock = MonitoredWriteLockFactory.createLock(chnLock);\n     \n     private Map<Integer, SortedMap<Integer, MapleCharacter>> accountChars = new HashMap<>();\n     private Map<Integer, MapleStorage> accountStorages = new HashMap<>();\n@@ -145,9 +149,9 @@\n     \n     private Map<Integer, Integer> owlSearched = new LinkedHashMap<>();\n     private List<Map<Integer, Integer>> cashItemBought = new ArrayList<>(9);\n-    private final ReentrantReadWriteLock suggestLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.WORLD_SUGGEST, true);\n-    private ReadLock suggestRLock = suggestLock.readLock();\n-    private WriteLock suggestWLock = suggestLock.writeLock();\n+    private final MonitoredReentrantReadWriteLock suggestLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.WORLD_SUGGEST, true);\n+    private MonitoredReadLock suggestRLock = MonitoredReadLockFactory.createLock(suggestLock);\n+    private MonitoredWriteLock suggestWLock = MonitoredWriteLockFactory.createLock(suggestLock);\n     \n     private Map<Integer, Integer> disabledServerMessages = new HashMap<>();    // reuse owl lock\n     private MonitoredReentrantLock srvMessagesLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.WORLD_SRVMESSAGES);\n@@ -2064,6 +2068,14 @@ public void runPartySearchUpdateSchedule() {\n         partySearch.runPartySearch();\n     }\n     \n+    public BaseService getServiceAccess(WorldServices sv) {\n+        return services.getAccess(sv).getService();\n+    }\n+    \n+    private void closeWorldServices() {\n+        services.shutdown();\n+    }\n+    \n     private void clearWorldData() {\n         List<MapleParty> pList;\n         partyLock.lock();\n@@ -2077,6 +2089,7 @@ private void clearWorldData() {\n             p.disposeLocks();\n         }\n         \n+        closeWorldServices();\n         disposeLocks();\n     }\n     "}, {"sha": "01d3b869de7dcca71841243343e99411a3d36f6a", "filename": "src/scripting/AbstractPlayerInteraction.java", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/scripting/AbstractPlayerInteraction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/scripting/AbstractPlayerInteraction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/AbstractPlayerInteraction.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -56,6 +56,7 @@\n import client.MapleCharacter;\n import client.MapleCharacter.DelayedQuestUpdate;\n import client.MapleClient;\n+import client.MapleJob;\n import client.MapleQuestStatus;\n import client.SkillFactory;\n import client.inventory.Equip;\n@@ -94,6 +95,18 @@ public MapleCharacter getChar() {\n \t\treturn c.getPlayer();\n \t}\n         \n+        public int getJobId() {\n+\t\treturn getPlayer().getJob().getId();\n+\t}\n+        \n+\tpublic MapleJob getJob(){\n+\t\treturn getPlayer().getJob();\n+\t}\n+        \n+\tpublic int getLevel() {\n+\t\treturn getPlayer().getLevel();\n+\t}\n+        \n         public MapleMap getMap() {\n                 return c.getPlayer().getMap();\n         }"}, {"sha": "87c67d40d47c3e96279f298690c3ec23162a26c6", "filename": "src/scripting/event/EventInstanceManager.java", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/scripting/event/EventInstanceManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/scripting/event/EventInstanceManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/event/EventInstanceManager.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -36,8 +36,12 @@\n import net.server.audit.LockCollector;\n import net.server.audit.locks.MonitoredLockType;\n import net.server.audit.locks.MonitoredReentrantLock;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n import net.server.world.MapleParty;\n import net.server.world.MaplePartyCharacter;\n import server.maps.MaplePortal;\n@@ -55,9 +59,6 @@\n import constants.net.ServerConstants;\n import java.awt.Point;\n import java.util.concurrent.ScheduledFuture;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n import net.server.coordinator.world.MapleEventRecallCoordinator;\n@@ -91,9 +92,9 @@\n \tprivate MapleExpedition expedition = null;\n         private List<Integer> mapIds = new LinkedList<>();\n         \n-        private final ReentrantReadWriteLock lock = new MonitoredReentrantReadWriteLock(MonitoredLockType.EIM, true);\n-        private ReadLock rL = lock.readLock();\n-        private WriteLock wL = lock.writeLock();\n+        private final MonitoredReentrantReadWriteLock lock = new MonitoredReentrantReadWriteLock(MonitoredLockType.EIM, true);\n+        private MonitoredReadLock rL = MonitoredReadLockFactory.createLock(lock);\n+        private MonitoredWriteLock wL = MonitoredWriteLockFactory.createLock(lock);\n         \n         private MonitoredReentrantLock pL = MonitoredReentrantLockFactory.createLock(MonitoredLockType.EIM_PARTY, true);\n         private MonitoredReentrantLock sL = MonitoredReentrantLockFactory.createLock(MonitoredLockType.EIM_SCRIPT, true);"}, {"sha": "1e6afe628b0815653848a63ef098e25f6d047a1a", "filename": "src/scripting/event/EventScriptManager.java", "status": "modified", "additions": 31, "deletions": 10, "changes": 41, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/scripting/event/EventScriptManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/scripting/event/EventScriptManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/event/EventScriptManager.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -21,9 +21,11 @@\n  */\n package scripting.event;\n \n-import java.util.LinkedHashMap;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.HashSet;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Set;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n \n@@ -48,9 +50,10 @@ public EventEntry(NashornScriptEngine iv, EventManager em) {\n         public EventManager em;\n     }\n     \n-    private Map<String, EventEntry> events = new LinkedHashMap<>();\n+    private static EventEntry fallback;\n+    private Map<String, EventEntry> events = new ConcurrentHashMap<>();\n     private boolean active = false;\n-\n+    \n     public EventScriptManager(Channel cserv, String[] scripts) {\n         super();\n         for (String script : scripts) {\n@@ -59,21 +62,24 @@ public EventScriptManager(Channel cserv, String[] scripts) {\n                 events.put(script, new EventEntry(iv, new EventManager(cserv, iv, script)));\n             }\n         }\n+        \n+        init();\n+        fallback = events.remove(\"0_EXAMPLE\");\n     }\n \n     public EventManager getEventManager(String event) {\n         EventEntry entry = events.get(event);\n         if (entry == null) {\n-            return null;\n+            return fallback.em;\n         }\n         return entry.em;\n     }\n     \n     public boolean isActive() {\n         return active;\n     }\n-\n-    public void init() {\n+    \n+    public final void init() {\n         for (EventEntry entry : events.values()) {\n             try {\n                 entry.iv.put(\"em\", entry.em);\n@@ -84,16 +90,17 @@ public void init() {\n             }\n         }\n         \n-        active = true;\n+        active = events.size() > 1; // bootup loads only 1 script\n     }\n \n     private void reloadScripts() {\n-        if (events.isEmpty()) {\n+        Set<Entry<String, EventEntry>> eventEntries = new HashSet<>(events.entrySet());\n+        if (eventEntries.isEmpty()) {\n             return;\n         }\n \n-        Channel cserv = events.values().iterator().next().em.getChannelServer();\n-        for (Entry<String, EventEntry> entry : events.entrySet()) {\n+        Channel cserv = eventEntries.iterator().next().getValue().em.getChannelServer();\n+        for (Entry<String, EventEntry> entry : eventEntries) {\n             String script = entry.getKey();\n             NashornScriptEngine iv = getScriptEngine(\"event/\" + script + \".js\");\n             events.put(script, new EventEntry(iv, new EventManager(cserv, iv, script)));\n@@ -112,4 +119,18 @@ public void cancel() {\n             entry.em.cancel();\n         }\n     }\n+    \n+    public void dispose() {\n+        if (events.isEmpty()) {\n+            return;\n+        }\n+        \n+        Set<EventEntry> eventEntries = new HashSet<>(events.values());\n+        events.clear();\n+        \n+        active = false;\n+        for (EventEntry entry : eventEntries) {\n+            entry.em.cancel();\n+        }\n+    }\n }"}, {"sha": "cc94de2edddcb6feaecc3a0f8161665f5bb8aabb", "filename": "src/scripting/map/MapScriptMethods.java", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/scripting/map/MapScriptMethods.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/scripting/map/MapScriptMethods.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/map/MapScriptMethods.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -35,7 +35,35 @@\n \tpublic MapScriptMethods(MapleClient c) {\n         super(c);\n     }\n-\n+    \n+    public void displayCygnusIntro() {\n+        switch (c.getPlayer().getMapId()) {\n+            case 913040100:\n+                lockUI();\n+                c.announce(MaplePacketCreator.showIntro(\"Effect/Direction.img/cygnusJobTutorial/Scene0\"));\n+                break;\n+            case 913040101:\n+                c.announce(MaplePacketCreator.showIntro(\"Effect/Direction.img/cygnusJobTutorial/Scene1\"));\n+                break;\n+            case 913040102:\n+                c.announce(MaplePacketCreator.showIntro(\"Effect/Direction.img/cygnusJobTutorial/Scene2\"));\n+                break;\n+            case 913040103:\n+                c.announce(MaplePacketCreator.showIntro(\"Effect/Direction.img/cygnusJobTutorial/Scene3\"));\n+                break;\n+            case 913040104:\n+                c.announce(MaplePacketCreator.showIntro(\"Effect/Direction.img/cygnusJobTutorial/Scene4\"));\n+                break;\n+            case 913040105:\n+                c.announce(MaplePacketCreator.showIntro(\"Effect/Direction.img/cygnusJobTutorial/Scene5\"));\n+                break;\n+            case 913040106:\n+                lockUI();\n+                c.announce(MaplePacketCreator.showIntro(\"Effect/Direction.img/cygnusJobTutorial/Scene6\"));\n+                break;\n+        }\n+    }\n+    \n     public void displayAranIntro() {\n         switch (c.getPlayer().getMapId()) {\n             case 914090010:"}, {"sha": "49dae8d220ba9ac65ced41025172890ce8b7032f", "filename": "src/scripting/npc/NPCConversationManager.java", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/scripting/npc/NPCConversationManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/scripting/npc/NPCConversationManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/scripting/npc/NPCConversationManager.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -253,14 +253,6 @@ public String getText() {\n \t\treturn this.getText;\n \t}\n \n-\tpublic int getJobId() {\n-\t\treturn getPlayer().getJob().getId();\n-\t}\n-\n-\tpublic MapleJob getJob(){\n-\t\treturn getPlayer().getJob();\n-\t}\n-\n \t@Override\n         public boolean forceStartQuest(int id) {\n                 return forceStartQuest(id, npc);\n@@ -303,10 +295,6 @@ public void gainExp(int gain) {\n \t\tgetPlayer().gainExp(gain, true, true);\n \t}\n \n-\tpublic int getLevel() {\n-\t\treturn getPlayer().getLevel();\n-\t}\n-\n         @Override\n \tpublic void showEffect(String effect) {\n \t\tgetPlayer().getMap().broadcastMessage(MaplePacketCreator.environmentChange(effect, 3));"}, {"sha": "667a2295dd46312e4bc7cda2b8be68952cc0e524", "filename": "src/server/MapleStatEffect.java", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/MapleStatEffect.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/MapleStatEffect.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleStatEffect.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -27,6 +27,7 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n+import java.util.HashMap;\n import java.util.Map;\n \n import config.YamlConfig;\n@@ -60,7 +61,6 @@\n import client.status.MonsterStatus;\n import client.status.MonsterStatusEffect;\n import constants.inventory.ItemConstants;\n-import constants.net.ServerConstants;\n import constants.skills.Aran;\n import constants.skills.Assassin;\n import constants.skills.Bandit;\n@@ -933,7 +933,7 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n             applyto.toggleHide(false);\n             return true;\n         }\n-\n+        \n         if (primary && isHeal()) {\n             affectedPlayers = applyBuff(applyfrom, useMaxRange);\n         }\n@@ -1162,7 +1162,7 @@ private boolean applyTo(MapleCharacter applyfrom, MapleCharacter applyto, boolea\n \n     private int applyBuff(MapleCharacter applyfrom, boolean useMaxRange) {\n         int affectedc = 1;\n-\n+        \n         if (isPartyBuff() && (applyfrom.getParty() != null || isGmBuff())) {\n             Rectangle bounds = (!useMaxRange) ? calculateBoundingBox(applyfrom.getPosition(), applyfrom.isFacingLeft()) : new Rectangle(Integer.MIN_VALUE / 2, Integer.MIN_VALUE / 2, Integer.MAX_VALUE, Integer.MAX_VALUE);\n             List<MapleMapObject> affecteds = applyfrom.getMap().getMapObjectsInRect(bounds, Arrays.asList(MapleMapObjectType.PLAYER));\n@@ -1181,7 +1181,7 @@ private int applyBuff(MapleCharacter applyfrom, boolean useMaxRange) {\n                     }\n                 }\n             }\n-\n+            \n             affectedc += affectedp.size();   // used for heal\n             for (MapleCharacter affected : affectedp) {\n                 applyTo(applyfrom, affected, false, null, useMaxRange, affectedc);\n@@ -1281,15 +1281,19 @@ public void updateBuffEffect(MapleCharacter target, List<Pair<MapleBuffStat, Int\n \n         long leftDuration = (starttime + localDuration) - Server.getInstance().getCurrentTime();\n         if (leftDuration > 0) {\n-            target.announce(MaplePacketCreator.giveBuff((skill ? sourceid : -sourceid), (int) leftDuration, activeStats));\n+            if (isDash() || isInfusion()) {\n+                target.announce(MaplePacketCreator.givePirateBuff(activeStats, (skill ? sourceid : -sourceid), (int) leftDuration));\n+            } else {\n+                target.announce(MaplePacketCreator.giveBuff((skill ? sourceid : -sourceid), (int) leftDuration, activeStats));\n+            }\n         }\n     }\n     \n     private void applyBuffEffect(MapleCharacter applyfrom, MapleCharacter applyto, boolean primary) {\n         if (!isMonsterRiding() && !isCouponBuff() && !isMysticDoor() && !isHyperBody() && !isCombo()) {     // last mystic door already dispelled if it has been used before.\n             applyto.cancelEffect(this, true, -1);\n         }\n-\n+        \n         List<Pair<MapleBuffStat, Integer>> localstatups = statups;\n         int localDuration = getBuffLocalDuration();\n         int localsourceid = sourceid;\n@@ -1393,12 +1397,11 @@ private void applyBuffEffect(MapleCharacter applyfrom, MapleCharacter applyto, b\n                 \n                 applyto.announce(buff);\n             }\n-\n+            \n             long starttime = Server.getInstance().getCurrentTime();\n             //CancelEffectAction cancelAction = new CancelEffectAction(applyto, this, starttime);\n             //ScheduledFuture<?> schedule = TimerManager.getInstance().schedule(cancelAction, localDuration);\n             applyto.registerEffect(this, starttime, starttime + localDuration, false);\n-\n             if (mbuff != null) {\n                 applyto.getMap().broadcastMessage(applyto, mbuff, false);\n             }"}, {"sha": "af551e435cba798a0dbf873c45ebff4ad6706e46", "filename": "src/server/MapleStorage.java", "status": "modified", "additions": 23, "deletions": 27, "changes": 50, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/MapleStorage.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/MapleStorage.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/MapleStorage.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -22,6 +22,7 @@\n import client.inventory.Item;\n import client.inventory.ItemFactory;\n import client.inventory.MapleInventoryType;\n+import constants.game.GameConstants;\n import java.io.File;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n@@ -44,6 +45,7 @@\n import tools.MaplePacketCreator;\n import tools.Pair;\n import net.server.audit.locks.MonitoredLockType;\n+import tools.FilePrinter;\n \n /**\n  *\n@@ -67,51 +69,45 @@ private MapleStorage(int id, byte slots, int meso) {\n         this.meso = meso;\n     }\n \n-    private static MapleStorage create(int id, int world) {\n-        try {\n-            Connection con = DatabaseConnection.getConnection();\n-            try (PreparedStatement ps = con.prepareStatement(\"INSERT INTO storages (accountid, world, slots, meso) VALUES (?, ?, 4, 0)\")) {\n-                ps.setInt(1, id);\n-                ps.setInt(2, world);\n-                ps.executeUpdate();\n-            }\n-            \n-            con.close();\n-        } catch (Exception e) {\n-            e.printStackTrace();\n+    private static MapleStorage create(int id, int world) throws SQLException {\n+        Connection con = DatabaseConnection.getConnection();\n+        try (PreparedStatement ps = con.prepareStatement(\"INSERT INTO storages (accountid, world, slots, meso) VALUES (?, ?, 4, 0)\")) {\n+            ps.setInt(1, id);\n+            ps.setInt(2, world);\n+            ps.executeUpdate();\n         }\n+        con.close();\n+        \n         return loadOrCreateFromDB(id, world);\n     }\n \n     public static MapleStorage loadOrCreateFromDB(int id, int world) {\n-        MapleStorage ret = null;\n-        int storeId;\n         try {\n+            MapleStorage ret;\n             Connection con = DatabaseConnection.getConnection();\n             PreparedStatement ps = con.prepareStatement(\"SELECT storageid, slots, meso FROM storages WHERE accountid = ? AND world = ?\");\n             ps.setInt(1, id);\n             ps.setInt(2, world);\n+            \n             ResultSet rs = ps.executeQuery();\n-            if (!rs.next()) {\n-                rs.close();\n-                ps.close();\n-                con.close();\n-                return create(id, world);\n-            } else {\n-                storeId = rs.getInt(\"storageid\");\n-                ret = new MapleStorage(storeId, (byte) rs.getInt(\"slots\"), rs.getInt(\"meso\"));\n-                rs.close();\n-                ps.close();\n+            if (rs.next()) {\n+                ret = new MapleStorage(rs.getInt(\"storageid\"), (byte) rs.getInt(\"slots\"), rs.getInt(\"meso\"));\n                 for (Pair<Item, MapleInventoryType> item : ItemFactory.STORAGE.loadItems(ret.id, false)) {\n                     ret.items.add(item.getLeft());\n                 }\n+            } else {\n+                ret = create(id, world);\n             }\n             \n+            rs.close();\n+            ps.close();\n             con.close();\n-        } catch (SQLException ex) {\n-            ex.printStackTrace();\n+            \n+            return ret;\n+        } catch (SQLException ex) { // exceptions leading to deploy null storages found thanks to Jefe\n+            FilePrinter.printError(FilePrinter.STORAGE, ex, \"SQL error occurred when trying to load storage for accountid \" + id + \", world \" + GameConstants.WORLD_NAMES[world]);\n+            throw new RuntimeException(ex);\n         }\n-        return ret;\n     }\n \n     public byte getSlots() {"}, {"sha": "4d74054ee49afd12da32bdeaebbfe9951b43968c", "filename": "src/server/life/MapleLifeFactory.java", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MapleLifeFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MapleLifeFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleLifeFactory.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -102,21 +102,19 @@ private static void setMonsterAttackInfo(int mid, List<MobAttackInfoHolder> atta\n         MapleData monsterInfoData = monsterData.getChildByPath(\"info\");\n         \n         List<MobAttackInfoHolder> attackInfos = new LinkedList<>();\n-        MapleMonsterStats stats;\n+        MapleMonsterStats stats = new MapleMonsterStats();\n         \n         int linkMid = MapleDataTool.getIntConvert(\"link\", monsterInfoData, 0);\n-        if (linkMid == 0) {\n-            stats = new MapleMonsterStats();\n-        } else {\n+        if (linkMid != 0) {\n             Pair<MapleMonsterStats, List<MobAttackInfoHolder>> linkStats = getMonsterStats(linkMid);\n             if (linkStats == null) {\n                 return null;\n             }\n             \n-            stats = linkStats.getLeft();\n+            // thanks resinate for noticing non-propagable infos such as revives getting retrieved\n             attackInfos.addAll(linkStats.getRight());\n         }\n-\n+        \n         stats.setHp(MapleDataTool.getIntConvert(\"maxHP\", monsterInfoData));\n         stats.setFriendly(MapleDataTool.getIntConvert(\"damagedByMob\", monsterInfoData, stats.isFriendly() ? 1 : 0) == 1);\n         stats.setPADamage(MapleDataTool.getIntConvert(\"PADamage\", monsterInfoData));"}, {"sha": "4f1cf25adfd8b01a2817d7ba9b70305762df8e6c", "filename": "src/server/life/MapleMonster.java", "status": "modified", "additions": 31, "deletions": 28, "changes": 59, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MapleMonster.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MapleMonster.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MapleMonster.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -72,11 +72,11 @@\n import net.server.audit.LockCollector;\n import net.server.audit.locks.MonitoredLockType;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n-import net.server.channel.services.ServiceType;\n-import net.server.channel.services.task.MobAnimationService;\n-import net.server.channel.services.task.MobClearSkillService;\n-import net.server.channel.services.task.MobStatusService;\n-import net.server.channel.services.task.OverallService;\n+import net.server.services.type.ChannelServices;\n+import net.server.services.task.channel.MobAnimationService;\n+import net.server.services.task.channel.MobClearSkillService;\n+import net.server.services.task.channel.MobStatusService;\n+import net.server.services.task.channel.OverallService;\n import net.server.coordinator.world.MapleMonsterAggroCoordinator;\n import server.MapleStatEffect;\n import server.loot.MapleLootManager;\n@@ -338,7 +338,7 @@ private boolean applyAnimationIfRoaming(int attackPos, MobSkill skill) {   // ro\n             }\n \n             if(animationTime > 0) {\n-                MobAnimationService service = (MobAnimationService) map.getChannelServer().getServiceAccess(ServiceType.MOB_ANIMATION);\n+                MobAnimationService service = (MobAnimationService) map.getChannelServer().getServiceAccess(ChannelServices.MOB_ANIMATION);\n                 return service.registerMobOnAnimationEffect(map.getId(), this.hashCode(), animationTime);\n             } else {\n                 return true;\n@@ -770,7 +770,7 @@ private void giveExpToCharacter(MapleCharacter attacker, Float personalExp, Floa\n         \n         return MapleLootManager.retrieveRelevantDrops(this.getId(), lootChars);\n     }\n-\n+    \n     public MapleCharacter killBy(final MapleCharacter killer) {\n         distributeExperience(killer != null ? killer.getId() : 0);\n         \n@@ -824,7 +824,6 @@ public void run() {\n                                     \n                                     if(htKilled) {\n                                         reviveMap.killMonster(ht, killer, true);\n-                                        ht.broadcastMobHpBar(killer);\n                                     }\n                                 }\n                                 \n@@ -1041,16 +1040,20 @@ public boolean hasBossHPBar() {\n         return isBoss() && getTagColor() > 0;\n     }\n     \n+    public void broadcastMonsterStatus() {\n+        Collection<MonsterStatusEffect> mseList = this.getStati().values();\n+        for (MapleCharacter chr : map.getAllPlayers()) {\n+            announceMonsterStatusInternal(chr.getClient(), mseList);\n+        }\n+    }\n+    \n     public void announceMonsterStatus(MapleClient client) {\n-        statiLock.lock();\n-        try {\n-            if (stati.size() > 0) {\n-                for (final MonsterStatusEffect mse : this.stati.values()) {\n-                    client.announce(MaplePacketCreator.applyMonsterStatus(getObjectId(), mse, null));\n-                }\n-            }\n-        } finally {\n-            statiLock.unlock();\n+        announceMonsterStatusInternal(client, this.getStati().values());\n+    }\n+    \n+    public void announceMonsterStatusInternal(MapleClient client, Collection<MonsterStatusEffect> mseList) {\n+        for (MonsterStatusEffect mse : mseList) {\n+            client.announce(MaplePacketCreator.applyMonsterStatus(getObjectId(), mse, null));\n         }\n     }\n     \n@@ -1203,7 +1206,7 @@ public boolean applyStatus(MapleCharacter from, final MonsterStatusEffect status\n                     if (oldEffect != null) {\n                         oldEffect.removeActiveStatus(stat);\n                         if (oldEffect.getStati().isEmpty()) {\n-                            MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ServiceType.MOB_STATUS);\n+                            MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ChannelServices.MOB_STATUS);\n                             service.interruptMobStatus(mapid, oldEffect);\n                         }\n                     }\n@@ -1310,7 +1313,7 @@ public void run() {\n             statiLock.unlock();\n         }\n         \n-        MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ServiceType.MOB_STATUS);\n+        MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ChannelServices.MOB_STATUS);\n         service.registerMobStatus(mapid, status, cancelTask, duration + animationTime - 100, overtimeAction, overtimeDelay);\n         return true;\n     }\n@@ -1362,7 +1365,7 @@ public void run() {\n             statiLock.unlock();\n         }\n         \n-        MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ServiceType.MOB_STATUS);\n+        MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ChannelServices.MOB_STATUS);\n         service.registerMobStatus(map.getId(), effect, cancelTask, duration);\n     }\n     \n@@ -1561,7 +1564,7 @@ public void run() {\n             }\n         };\n         \n-        MobClearSkillService service = (MobClearSkillService) map.getChannelServer().getServiceAccess(ServiceType.MOB_CLEAR_SKILL);\n+        MobClearSkillService service = (MobClearSkillService) map.getChannelServer().getServiceAccess(ChannelServices.MOB_CLEAR_SKILL);\n         service.registerMobClearSkillAction(mmap.getId(), r, cooltime);\n     }\n \n@@ -1630,7 +1633,7 @@ public void run() {\n                 }\n             };\n             \n-            MobClearSkillService service = (MobClearSkillService) map.getChannelServer().getServiceAccess(ServiceType.MOB_CLEAR_SKILL);\n+            MobClearSkillService service = (MobClearSkillService) map.getChannelServer().getServiceAccess(ChannelServices.MOB_CLEAR_SKILL);\n             service.registerMobClearSkillAction(mmap.getId(), r, cooltime);\n         } finally {\n             monsterLock.unlock();\n@@ -1678,7 +1681,7 @@ private DamageTask(int dealDamage, MapleCharacter chr, MonsterStatusEffect statu\n         public void run() {\n             int curHp = hp.get();\n             if(curHp <= 1) {\n-                MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ServiceType.MOB_STATUS);\n+                MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ChannelServices.MOB_STATUS);\n                 service.interruptMobStatus(map.getId(), status);\n                 return;\n             }\n@@ -1687,7 +1690,7 @@ public void run() {\n             if (damage >= curHp) {\n                 damage = curHp - 1;\n                 if (type == 1 || type == 2) {\n-                    MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ServiceType.MOB_STATUS);\n+                    MobStatusService service = (MobStatusService) map.getChannelServer().getServiceAccess(ChannelServices.MOB_STATUS);\n                     service.interruptMobStatus(map.getId(), status);\n                 }\n             }\n@@ -1744,7 +1747,7 @@ public void run() {\n                     }\n                 };\n                 \n-                MobClearSkillService service = (MobClearSkillService) mmap.getChannelServer().getServiceAccess(ServiceType.MOB_CLEAR_SKILL);\n+                MobClearSkillService service = (MobClearSkillService) mmap.getChannelServer().getServiceAccess(ChannelServices.MOB_CLEAR_SKILL);\n                 service.registerMobClearSkillAction(mmap.getId(), r, milli);\n             }\n         } finally {\n@@ -1780,7 +1783,7 @@ public int getPADamage() {\n     public Map<MonsterStatus, MonsterStatusEffect> getStati() {\n         statiLock.lock();\n         try {\n-            return Collections.unmodifiableMap(stati);\n+            return new HashMap<>(stati);\n         } finally {\n             statiLock.unlock();\n         }\n@@ -2120,7 +2123,7 @@ public void aggroAutoAggroUpdate(MapleCharacter player) {\n         MapleCharacter chrController = this.getActiveController();\n         \n         if (chrController == null) {\n-            this.aggroSwitchController(player, true);\n+        this.aggroSwitchController(player, true);\n         } else if (chrController.getId() == player.getId()) {\n             this.setControllerHasAggro(true);\n         }\n@@ -2227,7 +2230,7 @@ public void run() {\n         };\n         \n         // had to schedule this since mob wouldn't stick to puppet aggro who knows why\n-        OverallService service = (OverallService) this.getMap().getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+        OverallService service = (OverallService) this.getMap().getChannelServer().getServiceAccess(ChannelServices.OVERALL);\n         service.registerOverallAction(this.getMap().getId(), r, YamlConfig.config.server.UPDATE_INTERVAL);\n     }\n     "}, {"sha": "e49da183a2a8c7e5cddc500042328eeb4574a2dc", "filename": "src/server/life/MaplePlayerNPC.java", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MaplePlayerNPC.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MaplePlayerNPC.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MaplePlayerNPC.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -361,11 +361,15 @@ private static void fetchAvailableScriptIdsFromDb(byte branch, List<Integer> lis\n             int j = 0;\n             for(int i = branchSid; i < nextBranchSid; i++) {\n                 if(!usedScriptIds.contains(i)) {\n-                    availables.add(i);\n-                    j++;\n-                    \n-                    if(j == 20) {\n-                        break;\n+                    if (MaplePlayerNPCFactory.isExistentScriptid(i)) {  // thanks Ark, Zein, geno, Ariel, JrCl0wn for noticing client crashes due to use of missing scriptids\n+                        availables.add(i);\n+                        j++;\n+\n+                        if(j == 20) {\n+                            break;\n+                        }\n+                    } else {\n+                        break;  // after this point no more scriptids expected...\n                     }\n                 }\n             }"}, {"sha": "8abc2605da586b9951bbee6fd4d0080add84d87e", "filename": "src/server/life/MaplePlayerNPCFactory.java", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MaplePlayerNPCFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MaplePlayerNPCFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MaplePlayerNPCFactory.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -19,6 +19,7 @@\n */\n package server.life;\n \n+import constants.net.ServerConstants;\n import java.io.File;\n import java.util.HashMap;\n import java.util.Map;\n@@ -36,9 +37,15 @@\n  */\n public class MaplePlayerNPCFactory {\n     \n+    private static MapleDataProvider npcData = MapleDataProviderFactory.getDataProvider(new File(\"wz/Npc.wz\"));\n+    \n     private static final Map<Integer, List<MaplePlayerNPC>> dnpcMaps = new HashMap<>();\n     private static Integer runningDeveloperOid = 2147483000;  // 647 slots, long enough\n     \n+    public static boolean isExistentScriptid(int scriptid) {\n+        return npcData.getData(scriptid + \".img\") != null;\n+    }\n+    \n     public static void loadDeveloperRoomMetadata(MapleDataProvider npc) {\n         MapleData thisData = npc.getData(\"9977777.img\");\n         if(thisData != null) {\n@@ -60,7 +67,7 @@ public static void loadDeveloperRoomMetadata(MapleDataProvider npc) {\n     }\n     \n     public static void loadFactoryMetadata() {\n-        MapleDataProvider npc = MapleDataProviderFactory.getDataProvider(new File(\"wz/Npc.wz\"));\n+        MapleDataProvider npc = npcData;\n         loadDeveloperRoomMetadata(npc);\n \n         MapleDataProvider etc = MapleDataProviderFactory.getDataProvider(new File(\"wz/Etc.wz\"));"}, {"sha": "a5cd921fd54cedf5838dce1bc0e90cebdd7a7303", "filename": "src/server/life/MobSkill.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MobSkill.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MobSkill.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MobSkill.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -32,8 +32,8 @@\n import constants.game.GameConstants;\n import java.util.LinkedList;\n import java.util.Map;\n-import net.server.channel.services.ServiceType;\n-import net.server.channel.services.task.OverallService;\n+import net.server.services.type.ChannelServices;\n+import net.server.services.task.channel.OverallService;\n import tools.Randomizer;\n import server.maps.MapleMap;\n import server.maps.MapleMapObject;\n@@ -117,7 +117,7 @@ public void run() {\n             }\n         };\n \n-        OverallService service = (OverallService) monster.getMap().getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+        OverallService service = (OverallService) monster.getMap().getChannelServer().getServiceAccess(ChannelServices.OVERALL);\n         service.registerOverallAction(monster.getMap().getId(), toRun, animationTime);\n     }\n "}, {"sha": "584b73d760d80a20a8471e31f93c23376b23b853", "filename": "src/server/life/MobSkillFactory.java", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MobSkillFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/life/MobSkillFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/life/MobSkillFactory.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -27,11 +27,12 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n import provider.MapleData;\n import provider.MapleDataProvider;\n import provider.MapleDataProviderFactory;\n@@ -46,9 +47,9 @@\n     private static Map<String, MobSkill> mobSkills = new HashMap<String, MobSkill>();\n     private final static MapleDataProvider dataSource = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/Skill.wz\"));\n     private static MapleData skillRoot = dataSource.getData(\"MobSkill.img\");\n-    private final static ReentrantReadWriteLock dataLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.MOBSKILL_FACTORY);\n-    private final static ReadLock rL = dataLock.readLock();\n-    private final static WriteLock wL = dataLock.writeLock();\n+    private final static MonitoredReentrantReadWriteLock dataLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.MOBSKILL_FACTORY);\n+    private final static MonitoredReadLock rL = MonitoredReadLockFactory.createLock(dataLock);\n+    private final static MonitoredWriteLock wL = MonitoredWriteLockFactory.createLock(dataLock);\n \n     public static MobSkill getMobSkill(final int skillId, final int level) {\n         final String key = skillId + \"\" + level;"}, {"sha": "c1d933b7161e6c31f19829722c4f94c7044028c9", "filename": "src/server/loot/MapleLootManager.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/loot/MapleLootManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/loot/MapleLootManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/loot/MapleLootManager.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -56,14 +56,12 @@ private static boolean isRelevantDrop(MonsterDropEntry dropEntry, List<MapleChar\n                     qItemAmount = qCompleteAmount;\n                 }\n                 \n-                if (qItemAmount <= 0) {\n-                    continue;\n-                }\n+                // thanks kvmba for noticing quest items with no required amount failing to be detected as such\n                 \n                 int qItemStatus = chrInv.hasItem(dropEntry.itemId, qItemAmount);\n                 if (qItemStatus == 2) {\n                     continue;\n-                } /*else if (restricted && qItemStatus == 1) {\n+                } /*else if (restricted && qItemStatus == 1) {  // one-of-a-kind loots should be available everytime, thanks onechord for noticing\n                     continue;\n                 }*/\n             } /*else if (restricted && chrInv.hasItem(dropEntry.itemId, 1) > 0) {   // thanks Conrad, Legalize for noticing eligible loots not being available to drop for non-killer parties"}, {"sha": "89dd65b7baca9f70f21ed3ef4016ded0f3d8f1bd", "filename": "src/server/maps/MapleDoor.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleDoor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleDoor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleDoor.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -28,8 +28,8 @@\n import tools.Pair;\n \n import client.MapleCharacter;\n-import net.server.channel.services.ServiceType;\n-import net.server.channel.services.task.OverallService;\n+import net.server.services.type.ChannelServices;\n+import net.server.services.task.channel.OverallService;\n \n /**\n  *\n@@ -133,7 +133,7 @@ public static void attemptRemoveDoor(final MapleCharacter owner) {\n             if (effectTimeLeft > 0) {\n                 MapleMap town = destroyDoor.getTown();\n                 \n-                OverallService service = (OverallService) town.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+                OverallService service = (OverallService) town.getChannelServer().getServiceAccess(ChannelServices.OVERALL);\n                 service.registerOverallAction(town.getId(), new Runnable() {\n                     @Override\n                     public void run() {"}, {"sha": "44ff494cd63b09e0319175ff295c5a5bff82be7c", "filename": "src/server/maps/MapleDoorObject.java", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleDoorObject.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleDoorObject.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleDoorObject.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -20,11 +20,14 @@\n package server.maps;\n \n import java.awt.Point;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n import client.MapleCharacter;\n import client.MapleClient;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n import net.server.world.MapleParty;\n import tools.MaplePacketCreator;\n \n@@ -41,9 +44,9 @@\n     private int linkedPortalId;\n     private Point linkedPos;\n     \n-    private final ReentrantReadWriteLock locks = new MonitoredReentrantReadWriteLock(MonitoredLockType.PLAYER_DOOR, true);\n-    private ReentrantReadWriteLock.ReadLock rlock = locks.readLock();\n-    private ReentrantReadWriteLock.WriteLock wlock = locks.writeLock();\n+    private final MonitoredReentrantReadWriteLock locks = new MonitoredReentrantReadWriteLock(MonitoredLockType.PLAYER_DOOR, true);\n+    private MonitoredReadLock rlock = MonitoredReadLockFactory.createLock(locks);\n+    private MonitoredWriteLock wlock = MonitoredWriteLockFactory.createLock(locks);\n     \n     public MapleDoorObject(int owner, MapleMap destination, MapleMap origin, int townPortalId, Point targetPosition, Point toPosition) {\n         super();"}, {"sha": "ef077fdeb74a8d6732205e24757224d9c92d4bab", "filename": "src/server/maps/MapleFootholdTree.java", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleFootholdTree.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleFootholdTree.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleFootholdTree.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -169,25 +169,27 @@ public MapleFoothold findBelow(Point p) {\n         }\n         Collections.sort(xMatches);\n         for (MapleFoothold fh : xMatches) {\n-            if (!fh.isWall() && fh.getY1() != fh.getY2()) {\n-                int calcY;\n-                double s1 = Math.abs(fh.getY2() - fh.getY1());\n-                double s2 = Math.abs(fh.getX2() - fh.getX1());\n-                double s4 = Math.abs(p.x - fh.getX1());\n-                double alpha = Math.atan(s2 / s1);\n-                double beta = Math.atan(s1 / s2);\n-                double s5 = Math.cos(alpha) * (s4 / Math.cos(beta));\n-                if (fh.getY2() < fh.getY1()) {\n-                    calcY = fh.getY1() - (int) s5;\n+            if (!fh.isWall()) {\n+                if (fh.getY1() != fh.getY2()) {\n+                    int calcY;\n+                    double s1 = Math.abs(fh.getY2() - fh.getY1());\n+                    double s2 = Math.abs(fh.getX2() - fh.getX1());\n+                    double s4 = Math.abs(p.x - fh.getX1());\n+                    double alpha = Math.atan(s2 / s1);\n+                    double beta = Math.atan(s1 / s2);\n+                    double s5 = Math.cos(alpha) * (s4 / Math.cos(beta));\n+                    if (fh.getY2() < fh.getY1()) {\n+                        calcY = fh.getY1() - (int) s5;\n+                    } else {\n+                        calcY = fh.getY1() + (int) s5;\n+                    }\n+                    if (calcY >= p.y) {\n+                        return fh;\n+                    }\n                 } else {\n-                    calcY = fh.getY1() + (int) s5;\n-                }\n-                if (calcY >= p.y) {\n-                    return fh;\n-                }\n-            } else if (!fh.isWall()) {\n-                if (fh.getY1() >= p.y) {\n-                    return fh;\n+                    if (fh.getY1() >= p.y) {\n+                        return fh;\n+                    }\n                 }\n             }\n         }"}, {"sha": "a76e44bcadef72da6b91f053992ff062f3c4e41c", "filename": "src/server/maps/MapleMap.java", "status": "modified", "additions": 71, "deletions": 40, "changes": 111, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleMap.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleMap.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMap.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -55,20 +55,21 @@\n import java.util.concurrent.ScheduledFuture;\n import java.util.concurrent.atomic.AtomicInteger;\n import java.util.concurrent.locks.Lock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n import net.server.audit.locks.factory.MonitoredReentrantLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n import java.lang.ref.WeakReference;\n import net.server.Server;\n import net.server.coordinator.world.MapleMonsterAggroCoordinator;\n import net.server.channel.Channel;\n-import net.server.channel.services.ServiceType;\n-import net.server.channel.services.task.FaceExpressionService;\n-import net.server.channel.services.task.MobMistService;\n-import net.server.channel.services.task.OverallService;\n+import net.server.services.type.ChannelServices;\n+import net.server.services.task.channel.FaceExpressionService;\n+import net.server.services.task.channel.MobMistService;\n+import net.server.services.task.channel.OverallService;\n import net.server.world.World;\n import scripting.map.MapScriptManager;\n import server.MapleItemInformationProvider;\n@@ -177,10 +178,10 @@\n     private int timeExpand;\n \n     //locks\n-    private ReadLock chrRLock;\n-    private WriteLock chrWLock;\n-    private ReadLock objectRLock;\n-    private WriteLock objectWLock;\n+    private MonitoredReadLock chrRLock;\n+    private MonitoredWriteLock chrWLock;\n+    private MonitoredReadLock objectRLock;\n+    private MonitoredWriteLock objectWLock;\n \n     private Lock lootLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.MAP_LOOT, true);\n     \n@@ -196,13 +197,13 @@ public MapleMap(int mapid, int world, int channel, int returnMapId, float monste\n         if (this.monsterRate == 0) {\n             this.monsterRate = 1;\n         }\n-        final ReentrantReadWriteLock chrLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.MAP_CHRS, true);\n-        chrRLock = chrLock.readLock();\n-        chrWLock = chrLock.writeLock();\n+        final MonitoredReentrantReadWriteLock chrLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.MAP_CHRS, true);\n+        chrRLock = MonitoredReadLockFactory.createLock(chrLock);\n+        chrWLock = MonitoredWriteLockFactory.createLock(chrLock);\n \n-        final ReentrantReadWriteLock objectLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.MAP_OBJS, true);\n-        objectRLock = objectLock.readLock();\n-        objectWLock = objectLock.writeLock();\n+        final MonitoredReentrantReadWriteLock objectLock = new MonitoredReentrantReadWriteLock(MonitoredLockType.MAP_OBJS, true);\n+        objectRLock = MonitoredReadLockFactory.createLock(objectLock);\n+        objectWLock = MonitoredWriteLockFactory.createLock(objectLock);\n         \n         aggroMonitor = new MapleMonsterAggroCoordinator();\n     }\n@@ -570,7 +571,7 @@ public Point calcDropPos(Point initial, Point fallback) {\n             initial.x = xLimits.right;\n         }\n         \n-        Point ret = calcPointBelow(new Point(initial.x, initial.y - 85));\n+        Point ret = calcPointBelow(new Point(initial.x, initial.y - 85));   // actual drop ranges: default - 120, explosive - 360\n         if (ret == null) {\n             ret = bsearchDropPos(initial, fallback);\n         }\n@@ -758,6 +759,10 @@ private void dropFromMonster(final MapleCharacter chr, final MapleMonster mob, f\n         final List<MonsterDropEntry> otherQuestEntry = new ArrayList<>();\n         sortDropEntries(YamlConfig.config.server.USE_SPAWN_RELEVANT_LOOT ? mob.retrieveRelevantDrops() : mi.retrieveEffectiveDrop(mob.getId()), dropEntry, visibleQuestEntry, otherQuestEntry, chr);\n         \n+        if (dropEntry.isEmpty() && visibleQuestEntry.isEmpty()) {   // thanks resinate\n+            return;\n+        }\n+        \n         registerMobItemDrops(droptype, mobpos, chRate, pos, dropEntry, visibleQuestEntry, otherQuestEntry, globalEntry, chr, mob);\n     }\n     \n@@ -1333,6 +1338,18 @@ public int countAlivePlayers() {\n         return count;\n     }\n     \n+    public int countBosses() {\n+        int count = 0;\n+        \n+        for(MapleMonster mob: getAllMonsters()) {\n+            if (mob.isBoss()) {\n+                count++;\n+            }\n+        }\n+        \n+        return count;\n+    }\n+    \n     public boolean damageMonster(final MapleCharacter chr, final MapleMonster monster, final int damage) {\n         if (monster.getId() == 8800000) {\n             for (MapleMapObject object : chr.getMap().getMapObjects()) {\n@@ -1388,6 +1405,9 @@ private boolean removeKilledMonsterObject(MapleMonster monster) {\n             spawnedMonstersOnMap.decrementAndGet();\n             removeMapObject(monster);\n             monster.disposeMapObject();\n+            if (monster.hasBossHPBar()) {   // thanks resinate for noticing boss HPbar not clearing after mob defeat in certain scenarios\n+                broadcastBossHpMessage(monster, monster.hashCode(), monster.makeBossHPBarPacket(), monster.getPosition());\n+            }\n             \n             return true;\n         } finally {\n@@ -1462,14 +1482,13 @@ public void killMonster(final MapleMonster monster, final MapleCharacter chr, fi\n                                 if (mons != null) {\n                                     if (mons.getId() == 8800000) {\n                                         makeMonsterReal(mons);\n-                                        mons.aggroUpdateController();\n                                         break;\n                                     }\n                                 }\n                             }\n                         }\n                     }\n-\n+                    \n                     MapleCharacter dropOwner = monster.killBy(chr);\n                     if (withDrops && !monster.dropsDisabled()) {\n                         if (dropOwner == null) {\n@@ -1904,10 +1923,7 @@ public void sendPackets(MapleClient c) {\n         });\n         \n         monster.aggroUpdateController();\n-        \n-        if (monster.hasBossHPBar()) {\n-            broadcastBossHpMessage(monster, monster.hashCode(), monster.makeBossHPBarPacket(), monster.getPosition());\n-        }\n+        updateBossSpawn(monster);\n         \n         spawnedMonstersOnMap.incrementAndGet();\n         addSelfDestructive(monster);\n@@ -1946,7 +1962,7 @@ public void run() {\n     public void dismissRemoveAfter(final MapleMonster monster) {\n         Runnable removeAfterAction = monster.popRemoveAfterAction();\n         if (removeAfterAction != null) {\n-            OverallService service = (OverallService) this.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+            OverallService service = (OverallService) this.getChannelServer().getServiceAccess(ChannelServices.OVERALL);\n             service.forceRunOverallAction(mapid, removeAfterAction);\n         }\n     }\n@@ -2009,6 +2025,7 @@ public void sendPackets(MapleClient c) {\n         }, null);\n         \n         monster.aggroUpdateController();\n+        updateBossSpawn(monster);\n         \n         if ((monster.getTeam() == 1 || monster.getTeam() == 0) && (isCPQMap() || isCPQMap2())) {\n             List<MCSkill> teamS = null;\n@@ -2025,10 +2042,6 @@ public void sendPackets(MapleClient c) {\n                 }\n             }\n         }\n-        \n-        if (monster.hasBossHPBar()) {\n-            broadcastBossHpMessage(monster, monster.hashCode(), monster.makeBossHPBarPacket(), monster.getPosition());\n-        }\n \n         if (monster.getDropPeriodTime() > 0) { //9300102 - Watchhog, 9300061 - Moon Bunny (HPQ), 9300093 - Tylus\n             if (monster.getId() == 9300102) {\n@@ -2078,10 +2091,7 @@ public void sendPackets(MapleClient c) {\n         });\n         \n         monster.aggroUpdateController();\n-        \n-        if (monster.hasBossHPBar()) {\n-            broadcastBossHpMessage(monster, monster.hashCode(), monster.makeBossHPBarPacket(), monster.getPosition());\n-        }\n+        updateBossSpawn(monster);\n \n         spawnedMonstersOnMap.incrementAndGet();\n         addSelfDestructive(monster);\n@@ -2105,8 +2115,9 @@ public void sendPackets(MapleClient c) {\n     public void makeMonsterReal(final MapleMonster monster) {\n         monster.setFake(false);\n         broadcastMessage(MaplePacketCreator.makeMonsterReal(monster));\n-        \n+        monster.broadcastMonsterStatus();\n         monster.aggroUpdateController();\n+        updateBossSpawn(monster);\n     }\n \n     public void spawnReactor(final MapleReactor reactor) {\n@@ -2208,7 +2219,7 @@ public void run() {\n             }\n         };\n         \n-        MobMistService service = (MobMistService) this.getChannelServer().getServiceAccess(ServiceType.MOB_MIST);\n+        MobMistService service = (MobMistService) this.getChannelServer().getServiceAccess(ChannelServices.MOB_MIST);\n         service.registerMobMistCancelAction(mapid, mistSchedule, duration);\n     }\n     \n@@ -2308,7 +2319,7 @@ public final void spawnItemDropList(List<Integer> list, int minCopies, int maxCo\n     }\n \n     private void registerMapSchedule(Runnable r, long delay) {\n-        OverallService service = (OverallService) this.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+        OverallService service = (OverallService) this.getChannelServer().getServiceAccess(ChannelServices.OVERALL);\n         service.registerOverallAction(mapid, r, delay);\n     }\n     \n@@ -2795,7 +2806,7 @@ public void removePlayerPuppet(MapleCharacter player) {\n     public void removePlayer(MapleCharacter chr) {\n         Channel cserv = chr.getClient().getChannelServer();\n         \n-        FaceExpressionService service = (FaceExpressionService) this.getChannelServer().getServiceAccess(ServiceType.FACE_EXPRESSION);\n+        FaceExpressionService service = (FaceExpressionService) this.getChannelServer().getServiceAccess(ChannelServices.FACE_EXPRESSION);\n         service.unregisterFaceExpression(mapid, chr);\n         chr.unregisterChairBuff();\n         \n@@ -2914,6 +2925,21 @@ private void broadcastMessage(MapleCharacter source, final byte[] packet, double\n         }\n     }\n     \n+    private void updateBossSpawn(MapleMonster monster) {\n+        if (monster.hasBossHPBar()) {\n+            broadcastBossHpMessage(monster, monster.hashCode(), monster.makeBossHPBarPacket(), monster.getPosition());\n+        }\n+        if (monster.isBoss()) {\n+            if (unclaimOwnership() != null) {\n+                String mobName = MapleMonsterInformationProvider.getInstance().getMobNameFromId(monster.getId());\n+                if (mobName != null) {\n+                    mobName = mobName.trim();\n+                    this.dropMessage(5, \"This lawn has been taken siege by \" + mobName + \"'s forces and will be kept hold until their defeat.\");\n+                }\n+            }\n+        }\n+    }\n+    \n     public void broadcastBossHpMessage(MapleMonster mm, int bossHash, final byte[] packet) {\n         broadcastBossHpMessage(mm, bossHash, null, packet, Double.POSITIVE_INFINITY, null);\n     }\n@@ -3556,7 +3582,7 @@ public void run() {\n                             if (reactor.getDelay() > 0) {\n                                 MapleMap reactorMap = reactor.getMap();\n                                 \n-                                OverallService service = (OverallService) reactorMap.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+                                OverallService service = (OverallService) reactorMap.getChannelServer().getServiceAccess(ChannelServices.OVERALL);\n                                 service.registerOverallAction(reactorMap.getId(), new Runnable() {\n                                     @Override\n                                     public void run() {\n@@ -4219,8 +4245,13 @@ public boolean claimOwnership(MapleCharacter chr) {\n         }\n     }\n     \n+    public MapleCharacter unclaimOwnership() {\n+        MapleCharacter lastOwner = this.mapOwner;\n+        return unclaimOwnership(lastOwner) ? lastOwner : null;\n+    }\n+    \n     public boolean unclaimOwnership(MapleCharacter chr) {\n-        if (mapOwner == chr) {\n+        if (chr != null && mapOwner == chr) {\n             this.mapOwner = null;\n             chr.setOwnedMap(null);\n             \n@@ -4255,7 +4286,7 @@ public boolean isOwnershipRestricted(MapleCharacter chr) {\n     public void checkMapOwnerActivity() {\n         long timeNow = Server.getInstance().getCurrentTime();\n         if (timeNow - mapOwnerLastActivityTime > 60000) {\n-            if (unclaimOwnership(mapOwner)) {\n+            if (unclaimOwnership() != null) {\n                 this.dropMessage(5, \"This lawn is now free real estate.\");\n             }\n         }"}, {"sha": "d98158e6c6cdc97e9b8b46ee34db4c36195f5fe9", "filename": "src/server/maps/MapleMapFactory.java", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleMapFactory.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleMapFactory.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMapFactory.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -54,7 +54,7 @@\n         nameData = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/String.wz\")).getData(\"Map.img\");\n         mapSource = MapleDataProviderFactory.getDataProvider(new File(System.getProperty(\"wzpath\") + \"/Map.wz\"));\n     }\n-\n+    \n     private static void loadLifeFromWz(MapleMap map, MapleData mapData) {\n         for (MapleData life : mapData.getChildByPath(\"life\")) {\n             life.getName();\n@@ -309,9 +309,10 @@ public static MapleMap loadMapFromWz(int mapid, int world, int channel, EventIns\n                 }\n             }\n         }\n+        \n         try {\n-            map.setMapName(MapleDataTool.getString(\"mapName\", nameData.getChildByPath(getMapStringName(mapid)), \"\"));\n-            map.setStreetName(MapleDataTool.getString(\"streetName\", nameData.getChildByPath(getMapStringName(mapid)), \"\"));\n+            map.setMapName(loadPlaceName(mapid));\n+            map.setStreetName(loadStreetName(mapid));\n         } catch (Exception e) {\n             if (mapid / 1000 != 1020) {     // explorer job introduction scenes\n                 e.printStackTrace();\n@@ -434,4 +435,20 @@ private static String getMapStringName(int mapid) {\n         return builder.toString();\n     }\n     \n+    public static String loadPlaceName(int mapid) throws Exception {\n+        try {\n+            return MapleDataTool.getString(\"mapName\", nameData.getChildByPath(getMapStringName(mapid)), \"\");\n+        } catch (Exception e) {\n+            return \"\";\n+        }\n+    }\n+    \n+    public static String loadStreetName(int mapid) throws Exception {\n+        try {\n+            return MapleDataTool.getString(\"streetName\", nameData.getChildByPath(getMapStringName(mapid)), \"\");\n+        } catch (Exception e) {\n+            return \"\";\n+        }\n+    }\n+    \n }"}, {"sha": "bda9c73af364fe9fe6a93d3e4c0c9e43f24c021f", "filename": "src/server/maps/MapleMapManager.java", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleMapManager.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleMapManager.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleMapManager.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -21,11 +21,12 @@\n \n import java.util.HashMap;\n import java.util.Map;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n import scripting.event.EventInstanceManager;\n \n public class MapleMapManager {\n@@ -35,17 +36,17 @@\n     \n     private Map<Integer, MapleMap> maps = new HashMap<>();\n     \n-    private ReadLock mapsRLock;\n-    private WriteLock mapsWLock;\n+    private MonitoredReadLock mapsRLock;\n+    private MonitoredWriteLock mapsWLock;\n \n     public MapleMapManager(EventInstanceManager eim, int world, int channel) {\n         this.world = world;\n         this.channel = channel;\n         this.event = eim;\n \n-        ReentrantReadWriteLock rrwl = new MonitoredReentrantReadWriteLock(MonitoredLockType.MAP_MANAGER);\n-        this.mapsRLock = rrwl.readLock();\n-        this.mapsWLock = rrwl.writeLock();\n+        MonitoredReentrantReadWriteLock rrwl = new MonitoredReentrantReadWriteLock(MonitoredLockType.MAP_MANAGER);\n+        this.mapsRLock = MonitoredReadLockFactory.createLock(rrwl);\n+        this.mapsWLock = MonitoredWriteLockFactory.createLock(rrwl);\n     }\n \n     public MapleMap resetMap(int mapid) {"}, {"sha": "6ec657c0a6f737a37231704b062999633cfabbbb", "filename": "src/server/maps/MapleReactor.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleReactor.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/maps/MapleReactor.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/maps/MapleReactor.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -36,8 +36,8 @@\n import tools.MaplePacketCreator;\n import tools.Pair;\n import net.server.audit.locks.MonitoredLockType;\n-import net.server.channel.services.ServiceType;\n-import net.server.channel.services.task.OverallService;\n+import net.server.services.type.ChannelServices;\n+import net.server.services.task.channel.OverallService;\n import server.partyquest.GuardianSpawnPoint;\n \n /**\n@@ -371,15 +371,15 @@ public void run() {\n         \n         delayedRespawnRun = r;\n         \n-        OverallService service = (OverallService) map.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+        OverallService service = (OverallService) map.getChannelServer().getServiceAccess(ChannelServices.OVERALL);\n         service.registerOverallAction(map.getId(), r, this.getDelay());\n     }\n     \n     public boolean forceDelayedRespawn() {\n         Runnable r = delayedRespawnRun;\n         \n         if (r != null) {\n-            OverallService service = (OverallService) map.getChannelServer().getServiceAccess(ServiceType.OVERALL);\n+            OverallService service = (OverallService) map.getChannelServer().getServiceAccess(ChannelServices.OVERALL);\n             service.forceRunOverallAction(map.getId(), r);\n             return true;\n         } else {"}, {"sha": "ab6914542bb49b613d993bf618310bbc4b0b1192", "filename": "src/server/quest/MapleQuest.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/quest/MapleQuest.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/quest/MapleQuest.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/quest/MapleQuest.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -225,7 +225,7 @@ public boolean canQuestByInfoProgress(MapleCharacter chr) {\n             \n             int ixSize = ix.size();\n             for (int i = 0; i < ixSize; i++) {\n-                String progress = chr.getClient().getAbstractPlayerInteraction().getQuestProgress(infoNumber, i);\n+                String progress = chr.getAbstractPlayerInteraction().getQuestProgress(infoNumber, i);\n                 String ixProgress = ix.get(i);\n                 \n                 if (!progress.contentEquals(ixProgress)) {\n@@ -387,19 +387,19 @@ public short getId() {\n     public int getStartItemAmountNeeded(int itemid) {\n         MapleQuestRequirement req = startReqs.get(MapleQuestRequirementType.ITEM);\n         if(req == null)\n-                return 0;\n+                return Integer.MIN_VALUE;\n \t\t\n         ItemRequirement ireq = (ItemRequirement) req;\n-        return ireq.getItemAmountNeeded(itemid);\n+        return ireq.getItemAmountNeeded(itemid, false);\n     }\n     \n     public int getCompleteItemAmountNeeded(int itemid) {\n         MapleQuestRequirement req = completeReqs.get(MapleQuestRequirementType.ITEM);\n         if(req == null)\n-                return 0;\n+                return Integer.MAX_VALUE;\n \t\t\n         ItemRequirement ireq = (ItemRequirement) req;\n-        return ireq.getItemAmountNeeded(itemid);\n+        return ireq.getItemAmountNeeded(itemid, true);\n     }\n \n     public int getMobAmountNeeded(int mid) {"}, {"sha": "aa8b696a45652bffc5477852aad43f8f414e809f", "filename": "src/server/quest/actions/ItemAction.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/quest/actions/ItemAction.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/quest/actions/ItemAction.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/quest/actions/ItemAction.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -272,7 +272,7 @@ private boolean canHold(MapleCharacter chr, List<Pair<Item, MapleInventoryType>>\n                 }\n                 \n                 // thanks onechord for noticing quests unnecessarily giving out \"full inventory\" from quests that also takes items from players\n-                return chr.getClient().getAbstractPlayerInteraction().canHoldAllAfterRemoving(toAddItemids, toAddQuantity, toRemoveItemids, toRemoveQuantity);\n+                return chr.getAbstractPlayerInteraction().canHoldAllAfterRemoving(toAddItemids, toAddQuantity, toRemoveItemids, toRemoveQuantity);\n         }\n \t\n \tprivate boolean canGetItem(ItemData item, MapleCharacter chr) {"}, {"sha": "67eb679c282d4ad28cebfc2af465065e033aa4a2", "filename": "src/server/quest/requirements/ItemRequirement.java", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/quest/requirements/ItemRequirement.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/server/quest/requirements/ItemRequirement.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/server/quest/requirements/ItemRequirement.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -96,11 +96,12 @@ public boolean check(MapleCharacter chr, Integer npcid) {\n \t\treturn true;\n \t}\n \t\n-\tpublic int getItemAmountNeeded(int itemid) {\n-                if(items.containsKey(itemid)) {\n-\t\t\treturn items.get(itemid);\n-\t\t}\n-\t\t\n-\t\treturn 0;\n+\tpublic int getItemAmountNeeded(int itemid, boolean complete) {\n+                Integer amount = items.get(itemid);\n+                if (amount != null) {\n+\t\t\treturn amount;\n+\t\t} else {\n+                        return complete ? Integer.MAX_VALUE : Integer.MIN_VALUE;\n+                }\n \t}\n }"}, {"sha": "f072b4796a42168a691079cd86d944a53ffff699", "filename": "src/tools/IntervalBuilder.java", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/tools/IntervalBuilder.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/tools/IntervalBuilder.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/IntervalBuilder.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -22,11 +22,12 @@\n import java.awt.geom.Line2D;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n-import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n import net.server.audit.locks.MonitoredLockType;\n+import net.server.audit.locks.MonitoredReadLock;\n import net.server.audit.locks.MonitoredReentrantReadWriteLock;\n+import net.server.audit.locks.MonitoredWriteLock;\n+import net.server.audit.locks.factory.MonitoredReadLockFactory;\n+import net.server.audit.locks.factory.MonitoredWriteLockFactory;\n \n /**\n  *\n@@ -36,13 +37,13 @@\n         \n     private List<Line2D> intervalLimits = new ArrayList<>();\n     \n-    protected ReadLock intervalRlock;\n-    protected WriteLock intervalWlock;\n+    protected MonitoredReadLock intervalRlock;\n+    protected MonitoredWriteLock intervalWlock;\n     \n     public IntervalBuilder() {\n-        ReentrantReadWriteLock locks = new MonitoredReentrantReadWriteLock(MonitoredLockType.INTERVAL, true);\n-        intervalRlock = locks.readLock();\n-        intervalWlock = locks.writeLock();\n+        MonitoredReentrantReadWriteLock locks = new MonitoredReentrantReadWriteLock(MonitoredLockType.INTERVAL, true);\n+        intervalRlock = MonitoredReadLockFactory.createLock(locks);\n+        intervalWlock = MonitoredWriteLockFactory.createLock(locks);\n     }\n \n     private void refitOverlappedIntervals(int st, int en, int newFrom, int newTo) {"}, {"sha": "333b68a1456653cb655712d0364dbef975eb2e25", "filename": "src/tools/MaplePacketCreator.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/ronancpl/HeavenMS/blob/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/tools/MaplePacketCreator.java", "raw_url": "https://github.com/ronancpl/HeavenMS/raw/7d8d4691daa9a956e4662687c0c970c6c7cd62f2/src/tools/MaplePacketCreator.java", "contents_url": "https://api.github.com/repos/ronancpl/HeavenMS/contents/src/tools/MaplePacketCreator.java?ref=7d8d4691daa9a956e4662687c0c970c6c7cd62f2", "patch": "@@ -1086,7 +1086,6 @@ public int compare(Pair<MapleStat, Integer> o1, Pair<MapleStat, Integer> o2) {\n                 mplew.writeShort(chr.getHp());\n                 mplew.writeBool(false);\n                 mplew.writeLong(getTime(Server.getInstance().getCurrentTime()));\n-                mplew.skip(18);\n                 return mplew.getPacket();\n         }\n         \n@@ -1103,7 +1102,6 @@ public int compare(Pair<MapleStat, Integer> o1, Pair<MapleStat, Integer> o2) {\n                 mplew.writeInt(spawnPosition.x);    // spawn position placement thanks to Arnah (Vertisy)\n                 mplew.writeInt(spawnPosition.y);\n                 mplew.writeLong(getTime(Server.getInstance().getCurrentTime()));\n-                mplew.skip(18);\n                 return mplew.getPacket();\n         }\n         "}]}]},
