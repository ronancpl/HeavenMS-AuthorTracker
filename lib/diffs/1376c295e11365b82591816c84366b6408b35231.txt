diff --git a/scripts/npc/2101014.js b/scripts/npc/2101014.js
index 54a97819b..95e68a20b 100644
--- a/scripts/npc/2101014.js
+++ b/scripts/npc/2101014.js
@@ -48,26 +48,26 @@ function action(mode, type, selection) {
                 var expedicao2 = cm.getExpedition(exped2);
                 
                 var channelMaps = cm.getClient().getChannelServer().getMapFactory();
-                var startSnd = "Voc� gostaria de participar do Desafio #eAriant Coliseu#n?\r\n\r\n#e#r       (Escolha uma arena)#n#k\r\n#b";
+                var startSnd = "What would you like to do? \r\n\r\n\t#e#r(Choose a Battle Arena)#n#k\r\n#b";
                 var toSnd = startSnd;
 
                 if (expedicao == null) {
-                    toSnd += "#L0#Comece Ariant Coliseu (1)#l\r\n";
+                    toSnd += "#L0#Battle Arena (1) (Empty)#l\r\n";
                 } else if (channelMaps.getMap(980010101).getCharacters().isEmpty()) {
-                    toSnd += "#L0#Junte-se ao Ariant Coliseu (1)  Dono (" + expedicao.getLeader().getName() + ")" + " Membros Atuais: " + cm.getExpeditionMemberNames(exped) + "\r\n";
+                    toSnd += "#L0#Join Battle Arena (1)  Owner (" + expedicao.getLeader().getName() + ")" + " Current Member: " + cm.getExpeditionMemberNames(exped) + "\r\n";
                 }
                 if (expedicao1 == null) {
-                    toSnd += "#L1#Comece Ariant Coliseu (2)#l\r\n";
+                    toSnd += "#L1#Battle Arena (2) (Empty)#l\r\n";
                 } else if (channelMaps.getMap(980010201).getCharacters().isEmpty()) {
-                    toSnd += "#L1#Junte-se ao Ariant Coliseu (2)  Dono (" + expedicao1.getLeader().getName() + ")" + " Membros Atuais: " + cm.getExpeditionMemberNames(exped1) + "\r\n";
+                    toSnd += "#L1#Join Battle Arena (2)  Owner (" + expedicao1.getLeader().getName() + ")" + " Current Member: " + cm.getExpeditionMemberNames(exped1) + "\r\n";
                 }
                 if (expedicao2 == null) {
-                    toSnd += "#L2#Comece Ariant Coliseu (3)#l\r\n";
+                    toSnd += "#L2#Battle Arena (3) (Empty)#l\r\n";
                 } else if (channelMaps.getMap(980010301).getCharacters().isEmpty()) {
-                    toSnd += "#L2#Junte-se ao Ariant Coliseu (3)  Dono (" + expedicao2.getLeader().getName() + ")" + " Membros Atuais: " + cm.getExpeditionMemberNames(exped2) + "\r\n";
+                    toSnd += "#L2#Join Battle Arena (3)  Owner (" + expedicao2.getLeader().getName() + ")" + " Current Member: " + cm.getExpeditionMemberNames(exped2) + "\r\n";
                 }
                 if (toSnd.equals(startSnd)) {
-                    cm.sendOk("Todas as arenas esta ocupadas agora. Eu sugiro que voc� volte mais tarde ou mudar de canal.");
+                    cm.sendOk("All the Battle Arena is currently occupied. I suggest you to come back later or change channels.");
                     cm.dispose();
                 } else {
                     cm.sendSimple(toSnd);
@@ -83,15 +83,15 @@ function action(mode, type, selection) {
                 if (expedicao != null) {
                     enterArena(-1);
                 } else {
-                    cm.sendGetText("Quantos jogadores voce quer em sua instancia?");
+                    cm.sendGetText("Up to how many partipants can join in this match? (2~5 people)");
                 }
             } else if (status == 2) {
                 var players = parseInt(cm.getText());   // AriantPQ option limit found thanks to NarutoFury (iMrSiN)
                 if (isNaN(players)) {
-                    cm.sendNext("Por favor insira um valor numérico de limite de jogadores permitidos em sua instancia.");
+                    cm.sendNext("Please enter a numeric limit value of allowed players in your instance.");
                     status = 0;
                 } else if (players < 2) {
-                    cm.sendNext("Sua instancia precisa ter ao menos 2 jogadores.");
+                    cm.sendNext("The numeric limit value should not be less than 2 players.");
                     status = 0;
                 } else {
                     enterArena(players);
@@ -136,7 +136,7 @@ function enterArena(arenaPlayers) {
         if (arenaPlayers != -1) {
             if (cm.createExpedition(exped, true, 0, arenaPlayers)) {
                 cm.warp(map, 0);
-                cm.getPlayer().dropMessage("Sua Arena foi criada. Aguarde as pessoas entrarem agora!");
+                cm.getPlayer().dropMessage("Your arena was created successfully. Wait for people to join the battle.");
             } else {
                 cm.sendOk("An unexpected error has occurred when starting the expedition, please try again later.");
             }
@@ -147,24 +147,24 @@ function enterArena(arenaPlayers) {
         cm.dispose();
     } else {
         if (playerAlreadyInLobby(cm.getPlayer())) {
-            cm.sendOk("Desculpe, você já pertence a alguma Lobby.");
+            cm.sendOk("Sorry, you're already inside the lobby.");
             cm.dispose();
             return;
         }
 
         var playerAdd = expedicao.addMemberInt(cm.getPlayer());
         if (playerAdd == 3) {
-            cm.sendOk("Desculpe, a Lobby esta cheia agora.");
+            cm.sendOk("Sorry, the lobby is full now");
             cm.dispose();
         } else {
             if (playerAdd == 0) {
                 cm.warp(map, 0);
                 cm.dispose();
             } else if (playerAdd == 2) {
-                cm.sendOk("Desculpe, mas o l�der pediu para nao ser autorizado a entrar.");
+                cm.sendOk("Sorry, the leader do not allowed you to enter.");
                 cm.dispose();
             } else {
-                cm.sendOk("erro.");
+                cm.sendOk("Error.");
                 cm.dispose();
             }
         }
diff --git a/scripts/npc/2101015.js b/scripts/npc/2101015.js
index 418bf8b33..edaf1f311 100644
--- a/scripts/npc/2101015.js
+++ b/scripts/npc/2101015.js
@@ -6,7 +6,7 @@ importPackage(Packages.client);
 function start() {
     arena = cm.getPlayer().getAriantColiseum();
     if (arena == null) {
-        cm.sendOk("Ei, não vi você em campo durante as atividades do coliseu! O que você está fazendo aqui?");
+        cm.sendOk("Hey, I did not see you on the field during the battle in the arena! What are you doing here?");
         cm.dispose();
         return;
     }
@@ -28,22 +28,22 @@ function action(mode, type, selection) {
         else
             status--;
         if (status == 0) {
-            menuStr = generateSelectionMenu(["Gostaria de verificar meus pontos de batalha / adquirir a minha Cadeira de Praia com Palmeira", "Gostaria de saber mais sobre os pontos da Arena de Batalha"]);
-            cm.sendSimple("Olá, o que posso fazer por você?\r\n\r\n" + menuStr);
+            menuStr = generateSelectionMenu(["I would like to check my battle points! / I would like to exchange (1) Palm Tree Beach Chair", "I would like to know more about the points of the Battle Arena."]);
+            cm.sendSimple("Hello, what I can do for you?\r\n\r\n" + menuStr);
         } else if (status == 1) {
             if (selection == 0) {
                 apqpoints = cm.getPlayer().getAriantPoints();
                 if (apqpoints < 100) {
-                    cm.sendOk("A sua Pontua��o de Arena de Batalha � #b" + apqpoints + "#k Pontos. Voc� precisa ultrapassar os #b100 Pontos#k para que eu possa lhe dar a #bCadeira de Praia com Palmeira#k. Fale comigo novamente somente quando voc� tiver pontos suficientes.");
+                    cm.sendOk("Your Battle Arena score: #b" + apqpoints + "#k points. You need to surpass #b100 points#k so that I can give you the #bPalm Tree Beach Chair#k. Talk to me again when you have enough points.");
                     cm.dispose();
                 } else if (apqpoints + arena.getAriantRewardTier(cm.getPlayer()) >= 100) {
-                    cm.sendOk("A sua Pontua��o de Arena de Batalha � #b" + apqpoints + "#k Pontos, e voc� praticamente já possui essa pontuação! Converse com minha esposa, #p2101016#, para adquiri-los e então torne a conversar comigo!");
+                    cm.sendOk("Your Battle Arena score: #b" + apqpoints + "#k points and you pratically already have that score! Talk to my wife, #p2101016#to get them and then re-chat with me!");
                     cm.dispose();
                 } else {
-                    cm.sendNext("Uaaau, parece que voc� conseguiu os #b100 Pontos#k necess�rios para troca, vamos l�?!");
+                    cm.sendNext("Wow, it looks like you got the #b100#k points ready to trade, let's trade?!");
                 }
             } else if (selection == 1) {
-                cm.sendOk("O objetivo maior das Arenas de Batalha é permitir ao jogador acumular pontos para então trocá-los honrosamente pelo prêmio maior: a #bCadeira de Praia com Palmeira#k. Acumule pontos durante as batalhas e fale comigo quando chegar a hora de adquirir seu item.\r\n\r\nEm cada batalha, é dado ao jogador a oportunidade de #bsomar pontos baseando-se na quantidade de joias#k que o jogador possui ao final. Contudo tome cuidado! Se sua distância de pontos dentre os outros jogadores #rfor muito alto#k, isso terá sido tudo por nada e você ganhará mero #r1 ponto#k.");
+                cm.sendOk("The main objective of the Battle Arena is to allow the player to accumulate points so that they can be traded honorably for the highest prize: the #bPalm Tree Beach Chair#k. Collect points during the battles and talk to me when it's time to get the prize. In each battle, the player is given the opportunity to score points based on the amount of jewelry that the player has at the end. But be careful! If your points distance from other players #ris too high#k, this will have been all for nothing and you will earn mere #r1 point#k only.");
                 cm.dispose();
             }
         } else if (status == 2) {
diff --git a/scripts/npc/2101016.js b/scripts/npc/2101016.js
index 2e6070a93..8a483d907 100644
--- a/scripts/npc/2101016.js
+++ b/scripts/npc/2101016.js
@@ -6,7 +6,7 @@ importPackage(Packages.client);
 function start() {
     arena = cm.getPlayer().getAriantColiseum();
     if (arena == null) {
-        cm.sendOk("Ei, não vi você em campo durante as atividades do coliseu! O que você está fazendo aqui?");
+        cm.sendOk("Hey, I did not see you on the field during the battle in the arena! What are you doing here?");
         cm.dispose();
         return;
     }
@@ -30,10 +30,10 @@ function action(mode, type, selection) {
         if (status == 0) {
             copns = arena.getAriantScore(cm.getPlayer());
             if (copns < 1 && !cm.getPlayer().isGM()) {
-                cm.sendOk("Que pena, voc� nao conseguiu nenhuma j�ia!");
+                cm.sendOk("Too bad, you did not get any jewelry!");
                 cm.dispose();
             } else {
-                cm.sendNext("Ok, vamos ver...Voc� foi muito bem, e voc� trouxe #b" + copns + "#k j�ias que eu adoro. Como voc� completou a partida, vou recompens�-lo com a pontua��o da Arena de Batalhas de #b" + arena.getAriantRewardTier(cm.getPlayer()) + " Pontos#k. Se voc� quiser saber mais sobre a pontua��o de Arena de Batalha, ent�o fale com #b#p2101015##k.");
+                cm.sendNext("Ok, let's see... You did very well and you brought #b" + copns + "#k jewelry that I love. Since you have completed the match, I will reward you with a Battle Arena score of #b" + arena.getAriantRewardTier(cm.getPlayer()) + " points#k. If you want to know more about the Battle Arena score, then talk to #b#p2101015##k.");
             }
         } else if (status == 1) {
             //cm.warp(980010020, 0);
@@ -44,6 +44,7 @@ function action(mode, type, selection) {
             
             cm.getPlayer().gainExp(92.7 * cm.getPlayer().getExpRate() * copns, true, true);
             cm.getPlayer().gainAriantPoints(copns);
+            cm.sendOk("Alright! Make me more jewels next time! Ahahahahah!"); 
             cm.dispose();
         }
     }
diff --git a/scripts/npc/2101017.js b/scripts/npc/2101017.js
index acc2fab71..03318dabc 100644
--- a/scripts/npc/2101017.js
+++ b/scripts/npc/2101017.js
@@ -52,17 +52,17 @@ function action(mode, type, selection) {
             expedMembers = expedicao.getMemberList();
             if (status == 0) {
                 if (cm.isLeaderExpedition(exped)) {
-                    cm.sendSimple("O que voce gostaria de fazer?#b\r\n\r\n#L1#Ver registro atual da arena!#l\r\n#L2#Banir player!#l\r\n#L3#Comece a luta!#l\r\n#L4#Sair desta arena!#l");
+                    cm.sendSimple("What would you like to do? #b\r\n#L1#View current members#l\r\n#L2#Ban members#l\r\n#L3#Start the battle#l\r\n#L4#Leave the arena#l");
                     status = 1;
                 } else {
-                    var toSend = "Voce tem atualmente essas pessoas em sua arena :\r\n#b";
+                    var toSend = "Current members inside this arena:\r\n#b";
                     toSend += cm.getExpeditionMemberNames(exped);
                     cm.sendOk(toSend);
                     cm.dispose();
                 }
             } else if (status == 1) {
                 if (selection == 1) {
-                    var toSend = "Voce tem atualmente essas pessoas em sua arena :\r\n#b";
+                    var toSend = "Current members inside this arena:\r\n#b";
                     toSend += cm.getExpeditionMemberNames(exped);
                     cm.sendOk(toSend);
                     cm.dispose();
@@ -82,11 +82,11 @@ function action(mode, type, selection) {
                     status = 6;
                 } else if (selection == 3) {
                     if (expedicao.getMembers().size() < 1) {
-                        cm.sendOk("Voc� precisa de mais que 2 jogadores para iniciar.");
+                        cm.sendOk("Need one more players to start the battle.");
                         cm.dispose();
                     } else {
                         if (cm.getParty() != null) {
-                            cm.sendOk("Voc� n�o pode entrar na batalha em um grupo.");
+                            cm.sendOk("You cannot enter the battle as a party group.");
                             cm.dispose();
                             return;
                         }
@@ -99,7 +99,7 @@ function action(mode, type, selection) {
                         cm.dispose();
                     }
                 } else if (selection == 4) {
-                    cm.mapMessage(5, "O lider da Arena saiu.");
+                    cm.mapMessage(5, "The Leader of the arena left.");
                     expedicao.warpExpeditionTeam(980010000);
                     cm.endExpedition(expedicao);
                     cm.dispose();
@@ -129,21 +129,21 @@ function action(mode, type, selection) {
             if (status == 0) {
                 var gotTheBombs = expedicao.getProperty("gotBomb" + cm.getChar().getId());
                 if (gotTheBombs != null) {
-                    cm.sendOk("Eu ja lhe dei as bombas, por favor, mate os #eEscorpioes#n para conseguir mais delas!");
+                    cm.sendOk("I already gave you the bomb, please kill the #bScorpio#k now!");
                     cm.dispose();
                 } else if (cm.canHoldAll([2270002, 2100067], [50, 5])) {
-                    cm.sendOk("Eu lhe dei (5) #b#eBombas#k#n e (50) #b#eRochas Elementais#k#n.\r\nUse as rochas elementais para capturar os escorpioes para Sra.#r#eSpirit Jewels#k#n!");
+                    cm.sendOk("I have given you (5) #b#eBombs#k#n and (50) #b#eElement Rock#k#n.\r\nUse the Elementary Rocks to capture the scorpions for #r#eSpirit Jewels#k#n!");
                     expedicao.setProperty("gotBomb" + cm.getChar().getId(), "1");
                     cm.gainItem(2270002, 50);
                     cm.gainItem(2100067, 5);
                     cm.dispose();
                 } else {
-                    cm.sendOk("Por favor encontre 2 espaços no seu inventário de USE antes de receber seus itens!");
+                    cm.sendOk("It seems that your inventory is full.");
                     cm.dispose();
                 }
             }
         } else {
-            cm.sendOk("Olá, já ouviu falar da Ariant Coliseum Battle Arena? É um evento competitivo disponível para jogadores entre níveis 20 a 30.");
+            cm.sendOk("Hi there, have you heard of the Ariant Coliseum Battle Arena, it's a competitive event available to players between level 20 to 30!");
             cm.dispose();
         } 
     }
