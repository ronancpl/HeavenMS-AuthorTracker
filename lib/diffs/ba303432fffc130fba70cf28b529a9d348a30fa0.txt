diff --git a/src/scripting/event/EventInstanceManager.java b/src/scripting/event/EventInstanceManager.java
index ce17333c4..fd912b965 100644
--- a/src/scripting/event/EventInstanceManager.java
+++ b/src/scripting/event/EventInstanceManager.java
@@ -987,9 +987,14 @@ public MapleMonster getMonster(int mid) {
         }
         
         private List<Integer> convertToIntegerArray(List<Double> list) {
-                List<Integer> intList = new ArrayList<>();
+            List<Integer> intList;
+            if(ServerConstants.JAVA_8)
+                 intList=new ArrayList<Integer> (new ArrayList(java.util.Arrays.asList(list.toArray())));
+            else
+            {
+                 intList = new ArrayList<>();
                 for(Double d: list) intList.add(d.intValue());
-
+            }
                 return intList;
         }
         
diff --git a/src/scripting/event/EventManager.java b/src/scripting/event/EventManager.java
index 286997cd2..8a961be13 100644
--- a/src/scripting/event/EventManager.java
+++ b/src/scripting/event/EventManager.java
@@ -60,6 +60,7 @@
 import net.server.audit.locks.MonitoredLockType;
 import net.server.audit.locks.MonitoredReentrantLock;
 import net.server.audit.locks.factory.MonitoredReentrantLockFactory;
+import jdk.nashorn.api.scripting.ScriptUtils;
 
 /**
  *
@@ -645,7 +646,11 @@ public boolean startInstance(int lobbyId, EventInstanceManager eim, String ldr,
             Object p = iv.invokeFunction("getEligibleParty", party.getPartyMembers());
             
             if(p != null) {
-                List<MaplePartyCharacter> lmpc = new ArrayList<>((List<MaplePartyCharacter>) p);
+                List<MaplePartyCharacter> lmpc;
+                if(ServerConstants.JAVA_8)
+                    lmpc = new ArrayList<>(((Map<String, MaplePartyCharacter>)(ScriptUtils.convert(p, Map.class))).values());
+                else
+                    lmpc = new ArrayList<>((List<MaplePartyCharacter>) p);
                 party.setEligibleMembers(lmpc);
                 return lmpc;
             }
