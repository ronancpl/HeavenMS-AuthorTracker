diff --git a/build/built-jar.properties b/build/built-jar.properties
index eceba121a..01cee0faf 100644
--- a/build/built-jar.properties
+++ b/build/built-jar.properties
@@ -1,4 +1,4 @@
-#Mon, 16 Oct 2017 14:34:51 -0200
+#Wed, 18 Oct 2017 15:51:18 -0200
 
 
 C\:\\Nexon\\MapleSolaxia\\MapleSolaxiaV2=
diff --git a/build/classes/client/MapleCharacter$16.class b/build/classes/client/MapleCharacter$16.class
index 39bb6eaa1..fe4cc766c 100644
Binary files a/build/classes/client/MapleCharacter$16.class and b/build/classes/client/MapleCharacter$16.class differ
diff --git a/build/classes/client/MapleCharacter$17.class b/build/classes/client/MapleCharacter$17.class
index 8afb4b892..965122e4d 100644
Binary files a/build/classes/client/MapleCharacter$17.class and b/build/classes/client/MapleCharacter$17.class differ
diff --git a/build/classes/client/MapleCharacter$18.class b/build/classes/client/MapleCharacter$18.class
index 4dfd86e07..ac0d4b00f 100644
Binary files a/build/classes/client/MapleCharacter$18.class and b/build/classes/client/MapleCharacter$18.class differ
diff --git a/build/classes/client/MapleCharacter$19.class b/build/classes/client/MapleCharacter$19.class
index 4d9bda9ca..249ec7f3a 100644
Binary files a/build/classes/client/MapleCharacter$19.class and b/build/classes/client/MapleCharacter$19.class differ
diff --git a/build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class b/build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class
index a02b7bffb..2075f82ad 100644
Binary files a/build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class and b/build/classes/client/MapleCharacter$MapleBuffStatValueHolder.class differ
diff --git a/build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class b/build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class
index 0229b42f7..fd5e4e341 100644
Binary files a/build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class and b/build/classes/client/MapleCharacter$MapleCoolDownValueHolder.class differ
diff --git a/build/classes/client/MapleCharacter$SkillEntry.class b/build/classes/client/MapleCharacter$SkillEntry.class
index 41c25bfb8..d65dce29a 100644
Binary files a/build/classes/client/MapleCharacter$SkillEntry.class and b/build/classes/client/MapleCharacter$SkillEntry.class differ
diff --git a/build/classes/client/MapleCharacter.class b/build/classes/client/MapleCharacter.class
index a6d890a1b..a9e18a97d 100644
Binary files a/build/classes/client/MapleCharacter.class and b/build/classes/client/MapleCharacter.class differ
diff --git a/build/classes/constants/GameConstants$1.class b/build/classes/constants/GameConstants$1.class
index 40631c683..e366eef88 100644
Binary files a/build/classes/constants/GameConstants$1.class and b/build/classes/constants/GameConstants$1.class differ
diff --git a/build/classes/constants/GameConstants.class b/build/classes/constants/GameConstants.class
index a9b18c893..b89ad9a31 100644
Binary files a/build/classes/constants/GameConstants.class and b/build/classes/constants/GameConstants.class differ
diff --git a/build/classes/constants/ServerConstants.class b/build/classes/constants/ServerConstants.class
index 901322b9a..70652c40d 100644
Binary files a/build/classes/constants/ServerConstants.class and b/build/classes/constants/ServerConstants.class differ
diff --git a/build/classes/net/server/channel/handlers/HiredMerchantRequest.class b/build/classes/net/server/channel/handlers/HiredMerchantRequest.class
index b07f3437c..2209266a3 100644
Binary files a/build/classes/net/server/channel/handlers/HiredMerchantRequest.class and b/build/classes/net/server/channel/handlers/HiredMerchantRequest.class differ
diff --git a/build/classes/net/server/channel/handlers/PlayerLoggedinHandler.class b/build/classes/net/server/channel/handlers/PlayerLoggedinHandler.class
index e5f971a63..f349b2a90 100644
Binary files a/build/classes/net/server/channel/handlers/PlayerLoggedinHandler.class and b/build/classes/net/server/channel/handlers/PlayerLoggedinHandler.class differ
diff --git a/build/classes/net/server/channel/handlers/UseCashItemHandler$1.class b/build/classes/net/server/channel/handlers/UseCashItemHandler$1.class
index dd32ed840..20cba0b42 100644
Binary files a/build/classes/net/server/channel/handlers/UseCashItemHandler$1.class and b/build/classes/net/server/channel/handlers/UseCashItemHandler$1.class differ
diff --git a/build/classes/net/server/channel/handlers/UseCashItemHandler.class b/build/classes/net/server/channel/handlers/UseCashItemHandler.class
index b56eb8f79..5df32d8bd 100644
Binary files a/build/classes/net/server/channel/handlers/UseCashItemHandler.class and b/build/classes/net/server/channel/handlers/UseCashItemHandler.class differ
diff --git a/build/classes/net/server/world/World$1.class b/build/classes/net/server/world/World$1.class
index 04ce90d4a..8fb6c46f5 100644
Binary files a/build/classes/net/server/world/World$1.class and b/build/classes/net/server/world/World$1.class differ
diff --git a/build/classes/net/server/world/World.class b/build/classes/net/server/world/World.class
index 91d2968bf..d2bf7bd67 100644
Binary files a/build/classes/net/server/world/World.class and b/build/classes/net/server/world/World.class differ
diff --git a/build/classes/scripting/event/EventManager$1.class b/build/classes/scripting/event/EventManager$1.class
index c7591f826..1f9b5957a 100644
Binary files a/build/classes/scripting/event/EventManager$1.class and b/build/classes/scripting/event/EventManager$1.class differ
diff --git a/build/classes/scripting/event/EventManager$2.class b/build/classes/scripting/event/EventManager$2.class
index 5586d9ff9..9b3cb8ad2 100644
Binary files a/build/classes/scripting/event/EventManager$2.class and b/build/classes/scripting/event/EventManager$2.class differ
diff --git a/build/classes/scripting/event/EventManager$3.class b/build/classes/scripting/event/EventManager$3.class
index b28630116..a35c8b5b2 100644
Binary files a/build/classes/scripting/event/EventManager$3.class and b/build/classes/scripting/event/EventManager$3.class differ
diff --git a/build/classes/scripting/event/EventManager$EventManagerWorker.class b/build/classes/scripting/event/EventManager$EventManagerWorker.class
index cd1c215d7..26068b494 100644
Binary files a/build/classes/scripting/event/EventManager$EventManagerWorker.class and b/build/classes/scripting/event/EventManager$EventManagerWorker.class differ
diff --git a/build/classes/scripting/event/EventManager.class b/build/classes/scripting/event/EventManager.class
index 081f5b214..845ac25c2 100644
Binary files a/build/classes/scripting/event/EventManager.class and b/build/classes/scripting/event/EventManager.class differ
diff --git a/build/classes/server/MapleInventoryManipulator.class b/build/classes/server/MapleInventoryManipulator.class
index 507064618..fdd63aa75 100644
Binary files a/build/classes/server/MapleInventoryManipulator.class and b/build/classes/server/MapleInventoryManipulator.class differ
diff --git a/build/classes/server/life/MapleMonster$1.class b/build/classes/server/life/MapleMonster$1.class
index bf9b74d22..0b90120e4 100644
Binary files a/build/classes/server/life/MapleMonster$1.class and b/build/classes/server/life/MapleMonster$1.class differ
diff --git a/build/classes/server/life/MapleMonster$2.class b/build/classes/server/life/MapleMonster$2.class
index 8be88f2d3..947aba94f 100644
Binary files a/build/classes/server/life/MapleMonster$2.class and b/build/classes/server/life/MapleMonster$2.class differ
diff --git a/build/classes/server/life/MapleMonster$3.class b/build/classes/server/life/MapleMonster$3.class
index 2b8283dac..da2f603b7 100644
Binary files a/build/classes/server/life/MapleMonster$3.class and b/build/classes/server/life/MapleMonster$3.class differ
diff --git a/build/classes/server/life/MapleMonster$4.class b/build/classes/server/life/MapleMonster$4.class
index f8ab42e84..2e0760ef2 100644
Binary files a/build/classes/server/life/MapleMonster$4.class and b/build/classes/server/life/MapleMonster$4.class differ
diff --git a/build/classes/server/life/MapleMonster$5.class b/build/classes/server/life/MapleMonster$5.class
index 33c13f8bd..58f188cec 100644
Binary files a/build/classes/server/life/MapleMonster$5.class and b/build/classes/server/life/MapleMonster$5.class differ
diff --git a/build/classes/server/life/MapleMonster$6.class b/build/classes/server/life/MapleMonster$6.class
index e688f4b68..295643d0d 100644
Binary files a/build/classes/server/life/MapleMonster$6.class and b/build/classes/server/life/MapleMonster$6.class differ
diff --git a/build/classes/server/life/MapleMonster$DamageTask.class b/build/classes/server/life/MapleMonster$DamageTask.class
index 873b54e0b..f7fd11c75 100644
Binary files a/build/classes/server/life/MapleMonster$DamageTask.class and b/build/classes/server/life/MapleMonster$DamageTask.class differ
diff --git a/build/classes/server/life/MapleMonster.class b/build/classes/server/life/MapleMonster.class
index 10067c547..73681f144 100644
Binary files a/build/classes/server/life/MapleMonster.class and b/build/classes/server/life/MapleMonster.class differ
diff --git a/build/classes/tools/MaplePacketCreator.class b/build/classes/tools/MaplePacketCreator.class
index 1f6cabd44..ad9bbc1da 100644
Binary files a/build/classes/tools/MaplePacketCreator.class and b/build/classes/tools/MaplePacketCreator.class differ
diff --git a/dist/MapleSolaxia.jar b/dist/MapleSolaxia.jar
index b89d19b0c..3eb034012 100644
Binary files a/dist/MapleSolaxia.jar and b/dist/MapleSolaxia.jar differ
diff --git a/docs/mychanges_ptbr.txt b/docs/mychanges_ptbr.txt
index a462593a7..927a1ebe4 100644
--- a/docs/mychanges_ptbr.txt
+++ b/docs/mychanges_ptbr.txt
@@ -585,4 +585,9 @@ Se houve sucesso usando white scroll, slot ainda 
 15 Outubro 2017,
 Corrigido Mini-dungeons não liberando os jogadores corretamente. Se player entra em outra sessão de MD antes de dar o timeout da primeira, o timeout leva efeito mesmo fora da sessão.
 Corrigido um bug/exploit que permitia stackar map chair recovery.
-Corrigido um bug no inventário de CASH mesclando itens de mesmo id.
\ No newline at end of file
+Corrigido um bug no inventário de CASH mesclando itens de mesmo id.
+Adicionado contador de buscas por itens realizados pelos jogadores ao usar Owl. Sugestão de mais pesquisados na Owl implementado.
+
+17 Outubro 2017,
+Consertado Roaring Tiger Messenger aparecendo fora da tela ao final da animação.
+Consertado bugs envolvendo ganho de EXP em party, para casos onde o level do mob alvo é bem maior que o do atacante/leecher.
\ No newline at end of file
diff --git a/nbproject/private/private.xml b/nbproject/private/private.xml
index 5af0ed1ac..3287222d2 100644
--- a/nbproject/private/private.xml
+++ b/nbproject/private/private.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project-private xmlns="http://www.netbeans.org/ns/project-private/1">
-    <editor-bookmarks xmlns="http://www.netbeans.org/ns/editor-bookmarks/2" lastBookmarkId="1"/>
+    <editor-bookmarks xmlns="http://www.netbeans.org/ns/editor-bookmarks/2" lastBookmarkId="2"/>
     <open-files xmlns="http://www.netbeans.org/ns/projectui-open-files/2">
         <group/>
     </open-files>
diff --git a/src/client/MapleCharacter.java b/src/client/MapleCharacter.java
index 6b5019e77..3951515d4 100644
--- a/src/client/MapleCharacter.java
+++ b/src/client/MapleCharacter.java
@@ -5293,6 +5293,7 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool
                 if (party != null) {
                     ret.mpc = party.getMemberById(ret.id);
                     if (ret.mpc != null) {
+                        ret.mpc = new MaplePartyCharacter(ret);
                         ret.party = party;
                     }
                 }
diff --git a/src/client/autoban/AutobanManager.java b/src/client/autoban/AutobanManager.java
index b86669564..83990b106 100644
--- a/src/client/autoban/AutobanManager.java
+++ b/src/client/autoban/AutobanManager.java
@@ -93,8 +93,8 @@ public long getLastSpam(int type) {
      *  <code>type</code>:<br>
      * 0: HealOverTime<br>
      * 1: Pet Food<br>
-     * 2: ItemMerge<br>
-     * 3: ItemSort<br>
+     * 2: InventoryMerge<br>
+     * 3: InventorySort<br>
      * 4: SpecialMove<br>
      * 5: UseCatchItem<br>
      * 6: Item Drop<br>
diff --git a/src/constants/GameConstants.java b/src/constants/GameConstants.java
index d2d7974c9..cd3c097f0 100644
--- a/src/constants/GameConstants.java
+++ b/src/constants/GameConstants.java
@@ -10,7 +10,6 @@
  * @author Ronan
  */
 public class GameConstants {
-    //public static final int[] OWL_DATA = {2000014, 2000015, 2000016};
     public static final int[] OWL_DATA = new int[]{1082002, 2070005, 2070006, 1022047, 1102041, 2044705, 2340000, 2040017, 1092030, 2040804};
     
     // Ronan's rates upgrade system
diff --git a/src/constants/ServerConstants.java b/src/constants/ServerConstants.java
index 9766c96f5..4349fd3f6 100644
--- a/src/constants/ServerConstants.java
+++ b/src/constants/ServerConstants.java
@@ -48,6 +48,7 @@
     public static final boolean USE_AUTOSAVE = true;                //Enables server autosaving feature (saves characters to DB each 1 hour).
     public static final boolean USE_SERVER_AUTOASSIGNER = true;     //Server-builtin autoassigner, uses algorithm based on distributing AP accordingly with required secondary stat on equipments.
     public static final boolean USE_REFRESH_RANK_MOVE = true;
+    public static final boolean USE_ENFORCE_OWL_SUGGESTIONS = false;//Forces the Owl of Minerva to always display the defined item array on GameConstants.OWL_DATA instead of the featured by the players.
     public static final boolean USE_ENFORCE_UNMERCHABLE_PET = true; //Forces players to not sell pets via merchants. (since non-named pets gets dirty name and other possible DB-related issues)
     public static final boolean USE_ENFORCE_MDOOR_POSITION = true;  //Forces mystic door to be spawned near spawnpoints. (since things bugs out other way, and this helps players to locate the door faster)
     public static final boolean USE_ERASE_PERMIT_ON_OPENSHOP = true;//Forces "shop permit" item to be consumed when player deploy his/her player shop.
@@ -63,8 +64,10 @@
     public static final int BOSS_DROP_RATE = 20;
     public static final double EQUIP_EXP_RATE = 10.0;               //Rate for equipment exp gain, grows linearly. Set 1.0 for default (about 100~200 same-level range mobs killed to pass equip from level 1 to 2).
     
+    public static final double PARTY_BONUS_EXP_RATE = 1.0;          //Rate for the party exp reward.
+    public static final double PQ_BONUS_EXP_RATE = 0.5;             //Rate for the PQ exp reward.
+    
     public static final int PARTY_EXPERIENCE_MOD = 1;               //Change for event stuff.
-    public static final double PQ_BONUS_EXP_MOD = 0.5;
     
     public static final byte MAX_MONITORED_BUFFSTATS = 5;       //Limits accounting for "dormant" buff effects, that should take place when stronger stat buffs expires.
     public static final int MAX_AP = 32767;                     //Max AP allotted on the auto-assigner.
@@ -117,15 +120,19 @@
     public static final byte PET_EXHAUST_COUNT = 3;             //Number of proc counts (1 per minute) on the exhaust schedule for fullness.
     public static final byte MOUNT_EXHAUST_COUNT = 1;           //Number of proc counts (1 per minute) on the exhaust schedule for tiredness.
     
+    //Pet Hunger Configuration
+    public static final boolean PETS_NEVER_HUNGRY = false;      //If true, pets and mounts will never grow hungry.
+    public static final boolean GM_PETS_NEVER_HUNGRY = true;    //If true, pets and mounts owned by GMs will never grow hungry.
+    
+    //Event Configuration
+    public static final int EVENT_MAX_GUILD_QUEUE = 10;         //Max number of guilds in queue for GPQ.
+    public static final long EVENT_LOBBY_DELAY = 10;            //Cooldown duration in seconds before reopening an event lobby.
+    
     //Dojo Configuration
     public static final boolean USE_DEADLY_DOJO = false;        //Should bosses really use 1HP,1MP attacks in dojo?
     public static final int DOJO_ENERGY_ATK = 100;              //Dojo energy gain when deal attack
     public static final int DOJO_ENERGY_DMG =  20;              //Dojo energy gain when recv attack
 	
-    //Pet Hunger Configuration
-    public static final boolean PETS_NEVER_HUNGRY = false;      //If true, pets and mounts will never grow hungry.
-    public static final boolean GM_PETS_NEVER_HUNGRY = true;    //If true, pets and mounts owned by GMs will never grow hungry.
-	
     //Event End Timestamp
     public static final long EVENT_END_TIMESTAMP = 1428897600000L;
 	
diff --git a/src/net/server/channel/Channel.java b/src/net/server/channel/Channel.java
index 238b3ca35..ed4a698ba 100644
--- a/src/net/server/channel/Channel.java
+++ b/src/net/server/channel/Channel.java
@@ -500,7 +500,7 @@ public boolean addMiniDungeon(int dungeonid) {
             if(dungeons.containsKey(dungeonid)) return false;
             
             MapleMiniDungeonInfo mmdi = MapleMiniDungeonInfo.getDungeon(dungeonid);
-            MapleMiniDungeon mmd = new MapleMiniDungeon(mmdi.getBase(), 30);    // all minidungeons timeouts on 30 mins
+            MapleMiniDungeon mmd = new MapleMiniDungeon(mmdi.getBase(), 30);    // all minidungeons timeout on 30 mins
             
             dungeons.put(dungeonid, mmd);
             return true;
diff --git a/src/net/server/channel/handlers/HiredMerchantRequest.java b/src/net/server/channel/handlers/HiredMerchantRequest.java
index 368d829aa..29fe4a2b4 100644
--- a/src/net/server/channel/handlers/HiredMerchantRequest.java
+++ b/src/net/server/channel/handlers/HiredMerchantRequest.java
@@ -37,6 +37,7 @@
  * @author XoticStory
  */
 public final class HiredMerchantRequest extends AbstractMaplePacketHandler {
+    @Override
     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
         MapleCharacter chr = c.getPlayer();
         if (chr.getMap().getMapObjectsInRange(chr.getPosition(), 23000, Arrays.asList(MapleMapObjectType.HIRED_MERCHANT)).isEmpty() && (GameConstants.isFreeMarketRoom(chr.getMapId()))) {
diff --git a/src/net/server/channel/handlers/PlayerLoggedinHandler.java b/src/net/server/channel/handlers/PlayerLoggedinHandler.java
index bf6759745..cfc9e1860 100644
--- a/src/net/server/channel/handlers/PlayerLoggedinHandler.java
+++ b/src/net/server/channel/handlers/PlayerLoggedinHandler.java
@@ -44,7 +44,6 @@
 import tools.data.input.SeekableLittleEndianAccessor;
 import client.BuddylistEntry;
 import client.CharacterNameAndId;
-import client.MapleBuffStat;
 import client.MapleCharacter;
 import client.MapleClient;
 import client.MapleFamily;
diff --git a/src/net/server/channel/handlers/UseCashItemHandler.java b/src/net/server/channel/handlers/UseCashItemHandler.java
index 6ae08f56f..6d10f04ed 100644
--- a/src/net/server/channel/handlers/UseCashItemHandler.java
+++ b/src/net/server/channel/handlers/UseCashItemHandler.java
@@ -34,6 +34,7 @@
 import client.inventory.MaplePet;
 import client.inventory.ModifyInventory;
 import constants.ItemConstants;
+import constants.ServerConstants;
 
 import java.sql.SQLException;
 import java.util.ArrayList;
@@ -441,6 +442,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
         } else if (itemType == 523) {
             int itemid = slea.readInt();
             
+            if(!ServerConstants.USE_ENFORCE_OWL_SUGGESTIONS) c.getWorldServer().addOwlItemSearch(itemid);
             player.setOwlSearch(itemid);
             List<Pair<MaplePlayerShopItem, AbstractMapleMapObject>> hmsAvailable = c.getWorldServer().getAvailableItemBundles(itemid);
             if(!hmsAvailable.isEmpty()) remove(c, itemId);
diff --git a/src/net/server/channel/handlers/UseOwlOfMinervaHandler.java b/src/net/server/channel/handlers/UseOwlOfMinervaHandler.java
index 530c89139..38a8ae361 100644
--- a/src/net/server/channel/handlers/UseOwlOfMinervaHandler.java
+++ b/src/net/server/channel/handlers/UseOwlOfMinervaHandler.java
@@ -25,11 +25,46 @@
 import net.AbstractMaplePacketHandler;
 import tools.data.input.SeekableLittleEndianAccessor;
 import tools.MaplePacketCreator;
+import tools.Pair;
+
+import java.util.Comparator;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.PriorityQueue;
+
+import constants.GameConstants;
 
 public final class UseOwlOfMinervaHandler extends AbstractMaplePacketHandler {
 
     @Override
     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
-        c.announce(MaplePacketCreator.getOwlOpen());
+        List<Pair<Integer, Integer>> owlSearched = c.getWorldServer().getOwlSearchedItems();
+        List<Integer> owlLeaderboards;
+        
+        if(owlSearched.size() < 5) {
+            owlLeaderboards = new LinkedList<>();
+            for(int i : GameConstants.OWL_DATA) {
+                owlLeaderboards.add(i);
+            }
+        } else {
+            Comparator<Pair<Integer, Integer>> comparator = new Comparator<Pair<Integer, Integer>>() {  // descending order
+                @Override
+                public int compare(Pair<Integer, Integer> p1, Pair<Integer, Integer> p2) {
+                    return p2.getRight().compareTo(p1.getRight());
+                }
+            };
+            
+            PriorityQueue<Pair<Integer, Integer>> queue = new PriorityQueue<>(10, comparator);
+            for(Pair<Integer, Integer> p : owlSearched) {
+                queue.add(p);
+            }
+            
+            owlLeaderboards = new LinkedList<>();
+            for(int i = 0; i < Math.min(owlSearched.size(), 10); i++) {
+                owlLeaderboards.add(queue.remove().getLeft());
+            }
+        }
+        
+        c.announce(MaplePacketCreator.getOwlOpen(owlLeaderboards));
     }
 }
\ No newline at end of file
diff --git a/src/net/server/world/World.java b/src/net/server/world/World.java
index 8293aec5d..ab980bb9b 100644
--- a/src/net/server/world/World.java
+++ b/src/net/server/world/World.java
@@ -40,7 +40,10 @@
 import java.util.HashMap;
 import java.util.LinkedHashMap;
 import java.util.Map;
+import java.util.Map.Entry;
 import java.util.concurrent.atomic.AtomicInteger;
+import java.util.concurrent.locks.Lock;
+import java.util.concurrent.locks.ReentrantLock;
 import java.util.Set;
 import java.util.HashSet;
 import java.util.concurrent.ScheduledFuture;
@@ -69,6 +72,7 @@
 /**
  *
  * @author kevintjuh93
+ * @author Ronan (thread-oriented world schedules)
  */
 public class World {
 
@@ -84,6 +88,9 @@
     private PlayerStorage players = new PlayerStorage();
     private Set<Integer> queuedGuilds = new HashSet<>();
     
+    private Map<Integer, Integer> owlSearched = new LinkedHashMap<>();
+    private Lock owlLock = new ReentrantLock();
+    
     private Map<Integer, Byte> activePets = new LinkedHashMap<>();
     private ScheduledFuture<?> petsSchedule;
     private long petUpdate;
@@ -720,6 +727,39 @@ private static Integer getPetKey(MapleCharacter chr, byte petSlot) {    // assum
         return (chr.getId() << 2) + petSlot;
     }
     
+    public void addOwlItemSearch(Integer itemid) {
+        owlLock.lock();
+        try {
+            Integer cur = owlSearched.get(itemid);
+            if(cur != null) {
+                owlSearched.put(itemid, cur + 1);
+            } else {
+                owlSearched.put(itemid, 1);
+            }
+        } finally {
+            owlLock.unlock();
+        }
+    }
+    
+    public List<Pair<Integer, Integer>> getOwlSearchedItems() {
+        if(ServerConstants.USE_ENFORCE_OWL_SUGGESTIONS) {
+            return new ArrayList<>(0);
+        }
+        
+        owlLock.lock();
+        try {
+            List<Pair<Integer, Integer>> searchCounts = new ArrayList<>(owlSearched.size());
+            
+            for(Entry<Integer, Integer> e : owlSearched.entrySet()) {
+                searchCounts.add(new Pair<>(e.getKey(), e.getValue()));
+            }
+            
+            return searchCounts;
+        } finally {
+            owlLock.unlock();
+        }
+    }
+    
     public void registerPetHunger(MapleCharacter chr, byte petSlot) {
         if(chr.isGM() && ServerConstants.GM_PETS_NEVER_HUNGRY || ServerConstants.PETS_NEVER_HUNGRY) {
             return;
diff --git a/src/scripting/AbstractPlayerInteraction.java b/src/scripting/AbstractPlayerInteraction.java
index 39a960afe..73eaa9083 100644
--- a/src/scripting/AbstractPlayerInteraction.java
+++ b/src/scripting/AbstractPlayerInteraction.java
@@ -642,9 +642,9 @@ public void givePartyExp(String PQ) {
 
 
 	public void givePartyExp(String PQ, boolean instance) {
-		//1 player = 0% bonus (100)
-		//2 players = 0% bonus (100)
-		//3 players = +0% bonus (100)
+		//1 player  =  +0% bonus (100)
+		//2 players =  +0% bonus (100)
+		//3 players =  +0% bonus (100)
 		//4 players = +10% bonus (110)
 		//5 players = +20% bonus (120)
 		//6 players = +30% bonus (130)
@@ -671,8 +671,8 @@ public void givePartyExp(String PQ, boolean instance) {
 			int base = PartyQuest.getExp(PQ, player.getLevel());
 			int exp = base * bonus / 100;
 			player.gainExp(exp, true, true);
-			if(ServerConstants.PQ_BONUS_EXP_MOD > 0 && System.currentTimeMillis() <= ServerConstants.EVENT_END_TIMESTAMP) {
-				player.gainExp((int) (exp * ServerConstants.PQ_BONUS_EXP_MOD), true, true);
+			if(ServerConstants.PQ_BONUS_EXP_RATE > 0 && System.currentTimeMillis() <= ServerConstants.EVENT_END_TIMESTAMP) {
+				player.gainExp((int) (exp * ServerConstants.PQ_BONUS_EXP_RATE), true, true);
 			}
 		}
 	}
diff --git a/src/scripting/event/EventManager.java b/src/scripting/event/EventManager.java
index 364566eb6..f499f069a 100644
--- a/src/scripting/event/EventManager.java
+++ b/src/scripting/event/EventManager.java
@@ -33,6 +33,8 @@
 import javax.script.Invocable;
 import javax.script.ScriptException;
 
+import constants.ServerConstants;
+import client.MapleCharacter;
 import net.server.Server;
 import net.server.world.World;
 import net.server.channel.Channel;
@@ -44,15 +46,14 @@
 import server.maps.MapleMap;
 import server.life.MapleMonster;
 import server.life.MapleLifeFactory;
+import server.quest.MapleQuest;
 
-import client.MapleCharacter;
 import java.util.List;
 import java.util.ArrayList;
 import java.util.LinkedList;
 import java.util.Queue;
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantLock;
-import server.quest.MapleQuest;
 
 /**
  *
@@ -75,11 +76,9 @@
     private String name;
     private Lock lobbyLock = new ReentrantLock();
     private Lock queueLock = new ReentrantLock();
-    
-    private static final int limitGuilds = 10;  // max numbers of guilds in queue for GPQ.
-    private static final int maxLobbys = 8;     // an event manager holds up to this amount of concurrent lobbys
-    private static final long lobbyDelay = 10;  // 10 seconds cooldown before reopening a lobby
 
+    private static final int maxLobbys = 8;     // an event manager holds up to this amount of concurrent lobbys
+    
     public EventManager(Channel cserv, Invocable iv, String name) {
         this.server = Server.getInstance();
         this.iv = iv;
@@ -107,7 +106,7 @@ public void cancel() {
     }
     
     public long getLobbyDelay() {
-        return lobbyDelay;
+        return ServerConstants.EVENT_LOBBY_DELAY;
     }
     
     private List<Integer> getLobbyRange() {
@@ -128,6 +127,7 @@ public long getLobbyDelay() {
 
     public ScheduledFuture<?> schedule(final String methodName, final EventInstanceManager eim, long delay) {
         return TimerManager.getInstance().schedule(new Runnable() {
+            @Override
             public void run() {
                 try {
                     iv.invokeFunction(methodName, eim);
@@ -140,6 +140,7 @@ public void run() {
 
     public ScheduledFuture<?> scheduleAtTimestamp(final String methodName, long timestamp) {
         return TimerManager.getInstance().scheduleAtTimestamp(new Runnable() {
+            @Override
             public void run() {
                 try {
                     iv.invokeFunction(methodName, (Object) null);
@@ -190,7 +191,7 @@ public void run() {
                 freeLobbyInstance(name);
                 instances.remove(name);
             }
-        }, lobbyDelay * 1000);
+        }, ServerConstants.EVENT_LOBBY_DELAY * 1000);
     }
 
     public void setProperty(String key, String value) {
@@ -561,7 +562,7 @@ private void exportMovedQueueToGuild(Integer guildId, int place) {
     
     public boolean isQueueFull() {
         synchronized(queuedGuilds) {
-            return queuedGuilds.size() >= limitGuilds;
+            return queuedGuilds.size() >= ServerConstants.EVENT_MAX_GUILD_QUEUE;
         }
     }
     
diff --git a/src/server/MapleInventoryManipulator.java b/src/server/MapleInventoryManipulator.java
index 8be55f8cc..5b0c4c36b 100644
--- a/src/server/MapleInventoryManipulator.java
+++ b/src/server/MapleInventoryManipulator.java
@@ -355,18 +355,15 @@ public static void removeById(MapleClient c, MapleInventoryType type, int itemId
 
     public static void move(MapleClient c, MapleInventoryType type, short src, short dst) {
         if (src < 0 || dst < 0) {
-            System.out.println("src " + src + " dst " + dst);
             return;
         }
         if(dst > c.getPlayer().getInventory(type).getSlotLimit()) {
-            System.out.println("slim " + c.getPlayer().getInventory(type).getSlotLimit() + " dst " + dst);
             return;
         }
         MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();
         Item source = c.getPlayer().getInventory(type).getItem(src);
         Item initialTarget = c.getPlayer().getInventory(type).getItem(dst);
         if (source == null) {
-            System.out.println("null");
             return;
         }
         short olddstQ = -1;
diff --git a/src/server/life/MapleMonster.java b/src/server/life/MapleMonster.java
index ad330d384..4d8c317e3 100644
--- a/src/server/life/MapleMonster.java
+++ b/src/server/life/MapleMonster.java
@@ -258,7 +258,7 @@ public boolean isAttackedBy(MapleCharacter chr) {
         return takenDamage.containsKey(chr.getId());
     }
 
-    private void distributeExperienceToParty(int pid, int exp, int killer, Map<Integer, Integer> expDist, Set<MapleCharacter> underleveled) {
+    private void distributeExperienceToParty(int pid, int exp, int killer, Set<MapleCharacter> underleveled) {
         List<MapleCharacter> members = new LinkedList<>();
         MapleCharacter pchar = getMap().getAnyCharacterFromParty(pid);
         if(pchar != null) {
@@ -290,7 +290,7 @@ private void distributeExperienceToParty(int pid, int exp, int killer, Map<Integ
         for (MapleCharacter mc : members) {
             int id = mc.getId();
             int level = mc.getLevel();
-            if (expDist.containsKey(id) || level >= leechMinLevel) {
+            if (level >= leechMinLevel) {
                 boolean isKiller = killer == id;
                 boolean mostDamage = mostDamageCid == id;
                 int xp = (int) ((0.80f * exp * level) / partyLevel);
@@ -344,7 +344,7 @@ public void distributeExperience(int killerId) {
         }
         
         for (Entry<Integer, Integer> party : partyExp.entrySet()) {
-            distributeExperienceToParty(party.getKey(), party.getValue(), killerId, expDist, underleveled);
+            distributeExperienceToParty(party.getKey(), party.getValue(), killerId, underleveled);
         }
         
         for(MapleCharacter mc : underleveled) {
@@ -358,16 +358,17 @@ public void giveExpToCharacter(MapleCharacter attacker, int exp, boolean isKille
                 getMap().getEventInstance().monsterKilled(attacker, this);
             }
         }
-        final int partyModifier = numExpSharers > 1 ? (110 + (5 * (numExpSharers - 2))) : 0;
-
+        
+        //PARTY BONUS: 2p -> +2% , 3p -> +4% , 4p -> +6% , 5p -> +8% , 6p -> +10%
+        final float partyModifier = numExpSharers <= 1 ? 0.0f : 0.02f * (numExpSharers - 1);
+        
         int partyExp = 0;
-
         if (attacker.getHp() > 0) {
             int personalExp = exp * attacker.getExpRate();
 
             if (exp > 0) {
-                if (partyModifier > 0) {
-                    partyExp = (int) (personalExp * ServerConstants.PARTY_EXPERIENCE_MOD * partyModifier / 1000f);
+                if (partyModifier > 0.0f) {
+                    partyExp = (int) (personalExp * partyModifier * ServerConstants.PARTY_BONUS_EXP_RATE);
                 }
                 Integer holySymbol = attacker.getBuffedValue(MapleBuffStat.HOLY_SYMBOL);
                 boolean GMHolySymbol = attacker.getBuffSource(MapleBuffStat.HOLY_SYMBOL) == SuperGM.HOLY_SYMBOL;
diff --git a/src/tools/MaplePacketCreator.java b/src/tools/MaplePacketCreator.java
index 7f91cb9c8..f8db5a86d 100644
--- a/src/tools/MaplePacketCreator.java
+++ b/src/tools/MaplePacketCreator.java
@@ -5019,13 +5019,13 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 return mplew.getPacket();
         }
 
-        public static byte[] getOwlOpen() {
+        public static byte[] getOwlOpen(List<Integer> owlLeaderboards) {
                 MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
 
                 mplew.writeShort(SendOpcode.SHOP_SCANNER_RESULT.getValue());
                 mplew.write(7);
-                mplew.write(GameConstants.OWL_DATA.length);
-                for (int i : GameConstants.OWL_DATA) {
+                mplew.write(owlLeaderboards.size());
+                for (Integer i : owlLeaderboards) {
                         mplew.writeInt(i);
                 }
 
diff --git a/wz/Map.wz/MapHelper.img.xml b/wz/Map.wz/MapHelper.img.xml
index d8a29423b..d61a36a9c 100644
--- a/wz/Map.wz/MapHelper.img.xml
+++ b/wz/Map.wz/MapHelper.img.xml
@@ -2372,20 +2372,20 @@
       </canvas>
     </imgdir>
     <imgdir name="Tiger2">
-      <canvas name="0" width="281" height="131">
-        <vector name="origin" x="53" y="0"/>
+      <canvas name="0" width="225" height="120">
+        <vector name="origin" x="0" y="0"/>
         <int name="z" value="0"/>
       </canvas>
-      <canvas name="1" width="282" height="132">
-        <vector name="origin" x="54" y="0"/>
+      <canvas name="1" width="225" height="120">
+        <vector name="origin" x="0" y="0"/>
         <int name="z" value="0"/>
       </canvas>
-      <canvas name="2" width="284" height="133">
-        <vector name="origin" x="56" y="0"/>
+      <canvas name="2" width="225" height="120">
+        <vector name="origin" x="0" y="0"/>
         <int name="z" value="0"/>
       </canvas>
-      <canvas name="3" width="282" height="132">
-        <vector name="origin" x="54" y="0"/>
+      <canvas name="3" width="225" height="120">
+        <vector name="origin" x="0" y="0"/>
         <int name="z" value="0"/>
       </canvas>
     </imgdir>
diff --git a/wz/Mob.wz/9400549.img.xml b/wz/Mob.wz/9400549.img.xml
index eb4c0252e..576d2d5b7 100644
--- a/wz/Mob.wz/9400549.img.xml
+++ b/wz/Mob.wz/9400549.img.xml
@@ -20,6 +20,9 @@
     <int name="boss" value="1"/>
     <string name="elemAttr" value="L3"/>
     <int name="chaseSpeed" value="10"/>
+    <int name="HPgaugeHide" value="1"/>
+    <int name="hpTagBgcolor" value="5"/>
+    <int name="hpTagColor" value="1"/>
   </imgdir>
   <imgdir name="move">
     <canvas name="0" width="132" height="175">
diff --git a/wz/UI.wz/UIWindow.img.xml b/wz/UI.wz/UIWindow.img.xml
index f33be1451..ab1e7db08 100644
--- a/wz/UI.wz/UIWindow.img.xml
+++ b/wz/UI.wz/UIWindow.img.xml
@@ -10214,7 +10214,7 @@
         <int name="delay" value="500"/>
         <vector name="origin" x="0" y="0"/>
       </canvas>
-      <canvas name="2220000" width="25" height="25">
+      <canvas name="9400549" width="25" height="25">
         <int name="delay" value="500"/>
         <vector name="origin" x="0" y="0"/>
       </canvas>
@@ -10222,6 +10222,10 @@
         <int name="delay" value="500"/>
         <vector name="origin" x="0" y="0"/>
       </canvas>
+      <canvas name="2220000" width="25" height="25">
+        <int name="delay" value="500"/>
+        <vector name="origin" x="0" y="0"/>
+      </canvas>
     </imgdir>
     <imgdir name="Gage">
       <imgdir name="1">
