diff --git a/docs/issues.txt b/docs/issues.txt
index ccff9e18d..b0d48368c 100644
--- a/docs/issues.txt
+++ b/docs/issues.txt
@@ -10,6 +10,9 @@ Known issues:
 - If there are multiple bosses that shows HPBar on the map, if a player hits more than one the HPBar may start flickering on the screen.
 - Sometimes battleship may behave oddly with the enhanced buff system, making the character d/c in certain scenarios.
 - Dragon Roar doesn't show the stun effect to players.
+- Cygnus job 'Final Attack' skills not functional.
+- Steal skill doesn't deduct the loot from the drop pool from a mob.
+- Using Shark Wave with Transformation on female thunderbreakers will cause consecutive attacks to proc immediately.
 - Snipe will show much higher damage value than actually applicable to the attacker.
 - Some monster status such as freeze and weapon/magic reflect doesn't behave properly in certain scenarios. Freeze seems to not work on mobs with low OID or are starters from server boot time.
 - On low-end connections, things such as command summoning a player that is currently logging in (already visible to other players) may cause the player to freeze, consequently freezing the account as well since the server-side disconnection doesn't happen.
diff --git a/docs/mychanges_ptbr.txt b/docs/mychanges_ptbr.txt
index c876cdebb..510964378 100644
--- a/docs/mychanges_ptbr.txt
+++ b/docs/mychanges_ptbr.txt
@@ -2049,4 +2049,38 @@ Corrigido alguns danos de summons sendo calculados extremamente baixos quando o
 Corrigido funcionalidade de loot explosivo de mobs não aplicando devidamente.
 Corrigido linguagens, bastante usado na MCPQ, não utilizando o valor requisitado pelo jogador ao logar/trocar de canais.
 Corrigido casos de NPE ao tentar realizar updates de posição lado-servidor em alguns summons de jogador.
-Revisado reset de reatores em reatores que estão desaparecidos por um tempo, para retornar de imediato.
\ No newline at end of file
+Revisado reset de reatores em reatores que estão desaparecidos por um tempo, para retornar de imediato.
+
+31 Julho 2019,
+Revisado AP inicial de jogadores, agora mantendo dois sistemas para suprir a falta de 9 AP's. Ambos com AP's começando em 4/4/4/4: 0AP inicialmente, com ganhos de 4AP na primeira mudança de classe e 5AP na segunda mudança. Se não estiver usando esse método, jogadores possuem de início 9 AP's à disposição.
+
+02 Agosto 2019,
+Refatorado vários scripts de quests, não mais realizando disposes e envio de caixas de texto no mesmo status.
+
+05 Agosto 2019,
+Revisado casos onde o sistema de recompensas de quests avisa "inventário cheio" mesmo embora novos espaços pudessem ser encontrados na retirada de itens.
+Corrigido posicionamento não-verificado de lojas criadas por jogadores.
+Corrigido ganho reduzido de EXP ao utilizar skill Mortal Blow.
+Corrigido clique em "O" na UI de recepção de itens pelo Duey não realizando ação alguma.
+Corrigido representação de "quick" na lista de pacotes recebidos pelo Duey não constando os pacotes enviados sem mensagem escrita.
+Revisado certos casos onde itens enviados com "quick delivery" não conseguiam ser recebidos imediatamente.
+
+06 Agosto 2019,
+Corrigido certas montarias não-ligadas a itens de inventário não atuando devidamente ao transicionar mapas (terceiros não conseguiam visualizar a montaria).
+Revisado os vários scripts de quests anteriormente refatorado. Adição: último if status sinalizando disposes de caixas de texto nos penúltimos status.
+
+08 - 10 Agosto 2019,
+Adicionado handler para aplicação de dano em mobs por objetos de ambiente.
+Revisado uso de Steal ao aplicar dano, preenchendo lista (e buscando evitar novas aplicações) assim que utilizado.
+Setado checagem para limites de lobbyid ao se iniciar uma instância de evento.
+Revisado boss logs somente removendo os itens da tabela a partir de um dia antes, não todas as entradas, assim que a tarefa de reset é iniciada.
+Refatorado elementos não-condizentes com o padrão de design Factory na classe geradora de mapas.
+Revisado possível cenário de vazamento de memória ocorrido devido a exceção lançada em algum trecho entre removeKilledMonsterObject e dispatchMonsterKilled.
+Aprimorado loots de reatores, agora colocando loots visíveis ao jogador no centro, similarmente a como loots de mobs ocorrem.
+Ajustado frequência de loots de reatores para 200ms.
+
+12 - 14 Agosto 2019,
+Refatorado vários casos de erros em acessos a funções estáticas a partir de scripts, que passou a ocorrer após trocar de versão Java.
+Corrigido listas que mantém conteúdo dos mundos e canais esvaziando antes que os processos em execução do TimerManager terminem de executar, no momento do sinal de shutdown do servidor.
+Revisado update de quests para o jogador durante script de quests, problema permite movimento enquanto o mesmo ainda está falando com o NPC.
+Revisado novamente os scripts de quest! Problema detectado envolvia incidências de iniciar e completar de quests com disposes na mesma estrutura status.
\ No newline at end of file
diff --git a/scripts/event/3rdJob_bowman.js b/scripts/event/3rdJob_bowman.js
index 447ae673d..2fe501b8c 100644
--- a/scripts/event/3rdJob_bowman.js
+++ b/scripts/event/3rdJob_bowman.js
@@ -31,7 +31,7 @@ var maxMapId = 108010101;
 
 var eventTime = 20; //20 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
         return lobbyRange;
diff --git a/scripts/event/3rdJob_magician.js b/scripts/event/3rdJob_magician.js
index aa244b511..9742e19f1 100644
--- a/scripts/event/3rdJob_magician.js
+++ b/scripts/event/3rdJob_magician.js
@@ -31,7 +31,7 @@ var maxMapId = 108010201;
 
 var eventTime = 20; //20 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
         return lobbyRange;
diff --git a/scripts/event/3rdJob_mount.js b/scripts/event/3rdJob_mount.js
index cd366824e..5a04044b6 100644
--- a/scripts/event/3rdJob_mount.js
+++ b/scripts/event/3rdJob_mount.js
@@ -33,7 +33,7 @@ var eventMaps = [923010000];
 
 var eventTime = 5; //5 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
     return lobbyRange;
diff --git a/scripts/event/3rdJob_pirate.js b/scripts/event/3rdJob_pirate.js
index ef18f1dc3..82e268496 100644
--- a/scripts/event/3rdJob_pirate.js
+++ b/scripts/event/3rdJob_pirate.js
@@ -31,7 +31,7 @@ var maxMapId = 108010501;
 
 var eventTime = 20; //20 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
         return lobbyRange;
diff --git a/scripts/event/3rdJob_thief.js b/scripts/event/3rdJob_thief.js
index 285c4d048..a94013099 100644
--- a/scripts/event/3rdJob_thief.js
+++ b/scripts/event/3rdJob_thief.js
@@ -31,7 +31,7 @@ var maxMapId = 108010401;
 
 var eventTime = 20; //20 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
         return lobbyRange;
diff --git a/scripts/event/3rdJob_warrior.js b/scripts/event/3rdJob_warrior.js
index f3b7f0bf9..ce0e50da8 100644
--- a/scripts/event/3rdJob_warrior.js
+++ b/scripts/event/3rdJob_warrior.js
@@ -31,7 +31,7 @@ var maxMapId = 108010301;
 
 var eventTime = 20; //20 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
         return lobbyRange;
diff --git a/scripts/event/4jaerial.js b/scripts/event/4jaerial.js
index d4dc9708d..95ec6c3e1 100644
--- a/scripts/event/4jaerial.js
+++ b/scripts/event/4jaerial.js
@@ -30,7 +30,7 @@ var maxMapId = 912020000;
 
 var eventTime = 2; //2 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
     return lobbyRange;
diff --git a/scripts/event/4jship.js b/scripts/event/4jship.js
index ddb0da250..17f62c445 100644
--- a/scripts/event/4jship.js
+++ b/scripts/event/4jship.js
@@ -30,7 +30,7 @@ var maxMapId = 912010200;
 
 var eventTime = 4; //4 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
     return lobbyRange;
diff --git a/scripts/event/4jsuper.js b/scripts/event/4jsuper.js
index 565d7c6f2..cffac5f48 100644
--- a/scripts/event/4jsuper.js
+++ b/scripts/event/4jsuper.js
@@ -30,7 +30,7 @@ var maxMapId = 912010200;
 
 var eventTime = 4; //4 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
     return lobbyRange;
diff --git a/scripts/event/Aran_2ndmount.js b/scripts/event/Aran_2ndmount.js
index 1be6114b1..ce31cc64e 100644
--- a/scripts/event/Aran_2ndmount.js
+++ b/scripts/event/Aran_2ndmount.js
@@ -31,7 +31,7 @@ var maxMapId = 921110000;
 
 var eventTime = 3; //3 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
     return lobbyRange;
diff --git a/scripts/event/Aran_3rdmount.js b/scripts/event/Aran_3rdmount.js
index 04e135d0b..c5c5058fa 100644
--- a/scripts/event/Aran_3rdmount.js
+++ b/scripts/event/Aran_3rdmount.js
@@ -31,7 +31,7 @@ var maxMapId = 914030000;
 
 var eventTime = 3; //3 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
     return lobbyRange;
diff --git a/scripts/event/BalrogQuest.js b/scripts/event/BalrogQuest.js
index fcef456bf..c69e05b52 100644
--- a/scripts/event/BalrogQuest.js
+++ b/scripts/event/BalrogQuest.js
@@ -31,7 +31,7 @@ var maxMapId = 910520000;
 
 var eventTime = 10;     //10 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function setLobbyRange() {
     return lobbyRange;
diff --git a/scripts/event/DelliBattle.js b/scripts/event/DelliBattle.js
index ef3869e12..415521505 100644
--- a/scripts/event/DelliBattle.js
+++ b/scripts/event/DelliBattle.js
@@ -35,7 +35,7 @@ var maxMapId = 925010300;
 
 var eventTime = 6;     // 6 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function init() {
         setEventRequirements();
diff --git a/scripts/event/ElementalBattle.js b/scripts/event/ElementalBattle.js
index 00a2a18de..6a32a98b7 100644
--- a/scripts/event/ElementalBattle.js
+++ b/scripts/event/ElementalBattle.js
@@ -36,7 +36,7 @@ var maxMapId = 922020100;
 
 var eventTime = 20;     // 20 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function init() {
         setEventRequirements();
diff --git a/scripts/event/MahaBattle.js b/scripts/event/MahaBattle.js
index 08698a399..3d533e674 100644
--- a/scripts/event/MahaBattle.js
+++ b/scripts/event/MahaBattle.js
@@ -33,7 +33,7 @@ var maxMapId = 914020000;
 
 var eventTime = 10;     // 10 minutes
 
-var lobbyRange = [0, 0];
+var lobbyRange = [0, 7];
 
 function init() {}
 
diff --git a/scripts/npc/2010007.js b/scripts/npc/2010007.js
index b70d2ca93..5ea75f4e3 100644
--- a/scripts/npc/2010007.js
+++ b/scripts/npc/2010007.js
@@ -57,8 +57,10 @@ function action(mode, type, selection) {
                 if (cm.getPlayer().getGuildId() < 1 || cm.getPlayer().getGuildRank() != 1) {
                     cm.sendOk("You can only increase your Guild's capacity if you are the leader.");
                     cm.dispose();
-                } else
-                    cm.sendYesNo("Increasing your Guild capacity by #b5#k costs #b " + cm.getPlayer().getGuild().getIncreaseGuildCost(cm.getPlayer().getGuild().getCapacity()) +" mesos#k, are you sure you want to continue?");
+                } else {
+                    var MapleGuild = Java.type("net.server.guild.MapleGuild");  // thanks Conrad for noticing an issue due to call on a static method here
+                    cm.sendYesNo("Increasing your Guild capacity by #b5#k costs #b " + MapleGuild.getIncreaseGuildCost(cm.getPlayer().getGuild().getCapacity()) +" mesos#k, are you sure you want to continue?");
+                }
             }
         } else if (status == 2) {
             if (sel == 0 && cm.getPlayer().getGuildId() <= 0) {
diff --git a/scripts/npc/9201005.js b/scripts/npc/9201005.js
index 354076b11..7e4006775 100644
--- a/scripts/npc/9201005.js
+++ b/scripts/npc/9201005.js
@@ -21,6 +21,8 @@
 	Marriage NPC
  */
 
+importPackage(Packages.net.server.channel);
+
 var status;
 var wid;
 var isMarrying;
@@ -176,7 +178,7 @@ function action(mode, type, selection) {
                                         if(resStatus > 0) {
                                             cm.gainItem((weddingType) ? weddingEntryTicketPremium : weddingEntryTicketCommon, -1);
 
-                                            var expirationTime = cserv.getRelativeWeddingTicketExpireTime(resStatus);
+                                            var expirationTime = Channel.getRelativeWeddingTicketExpireTime(resStatus);
                                             cm.gainItem(weddingSendTicket,15,false,true,expirationTime);
                                             partner.getAbstractPlayerInteraction().gainItem(weddingSendTicket,15,false,true,expirationTime);
 
@@ -251,7 +253,7 @@ function action(mode, type, selection) {
                             if(cm.canHold(weddingSendTicket, 3)) {
                                 cm.gainItem(5251100, -1);
 
-                                var expirationTime = cserv.getRelativeWeddingTicketExpireTime(resStatus);
+                                var expirationTime = Channel.getRelativeWeddingTicketExpireTime(resStatus);
                                 cm.gainItem(weddingSendTicket,3,false,true,expirationTime);
                             } else {
                                 cm.sendOk("Please have a free ETC slot available to get more invitations.");
diff --git a/scripts/npc/9201008.js b/scripts/npc/9201008.js
index b13337fc7..8d1813e23 100644
--- a/scripts/npc/9201008.js
+++ b/scripts/npc/9201008.js
@@ -21,6 +21,8 @@
 	Marriage NPC
  */
 
+importPackage(Packages.net.server.channel);
+
 var status;
 var wid;
 var isMarrying;
@@ -176,7 +178,7 @@ function action(mode, type, selection) {
                                         if(resStatus > 0) {
                                             cm.gainItem((weddingType) ? weddingEntryTicketPremium : weddingEntryTicketCommon, -1);
 
-                                            var expirationTime = cserv.getRelativeWeddingTicketExpireTime(resStatus);
+                                            var expirationTime = Channel.getRelativeWeddingTicketExpireTime(resStatus);
                                             cm.gainItem(weddingSendTicket,15,false,true,expirationTime);
                                             partner.getAbstractPlayerInteraction().gainItem(weddingSendTicket,15,false,true,expirationTime);
 
@@ -251,7 +253,7 @@ function action(mode, type, selection) {
                             if(cm.canHold(weddingSendTicket, 3)) {
                                 cm.gainItem(5251100, -1);
 
-                                var expirationTime = cserv.getRelativeWeddingTicketExpireTime(resStatus);
+                                var expirationTime = Channel.getRelativeWeddingTicketExpireTime(resStatus);
                                 cm.gainItem(weddingSendTicket,3,false,true,expirationTime);
                             } else {
                                 cm.sendOk("Please have a free ETC slot available to get more invitations.");
diff --git a/scripts/npc/9201023.js b/scripts/npc/9201023.js
index d654fed77..8e6326a9a 100644
--- a/scripts/npc/9201023.js
+++ b/scripts/npc/9201023.js
@@ -99,14 +99,14 @@ function action(mode, type, selection) {
 
         if(status == 0) {
             if(!cm.isQuestStarted(100400)) {
-                cm.sendOk("Hello #b#h0##k, I'm #p9201001# the fairy of Love.");
+                cm.sendOk("Hello #b#h0##k, I'm #p9201023# the fairy of Love.");     // thanks Periwinks (LuckyStory) for noticing Nana's introducing themselves as Nana (H)
                 cm.dispose();
                 return;
             }
             
             nanaLoc = getNanaLocation(cm.getPlayer());
             if(nanaLoc == -1) {
-                cm.sendOk("Hello #b#h0##k, I'm #p9201001# the fairy of Love.");
+                cm.sendOk("Hello #b#h0##k, I'm #p9201023# the fairy of Love.");
                 cm.dispose();
                 return;
             }
diff --git a/scripts/npc/9201024.js b/scripts/npc/9201024.js
index d654fed77..271cf7a75 100644
--- a/scripts/npc/9201024.js
+++ b/scripts/npc/9201024.js
@@ -99,14 +99,14 @@ function action(mode, type, selection) {
 
         if(status == 0) {
             if(!cm.isQuestStarted(100400)) {
-                cm.sendOk("Hello #b#h0##k, I'm #p9201001# the fairy of Love.");
+                cm.sendOk("Hello #b#h0##k, I'm #p9201024# the fairy of Love.");
                 cm.dispose();
                 return;
             }
             
             nanaLoc = getNanaLocation(cm.getPlayer());
             if(nanaLoc == -1) {
-                cm.sendOk("Hello #b#h0##k, I'm #p9201001# the fairy of Love.");
+                cm.sendOk("Hello #b#h0##k, I'm #p9201024# the fairy of Love.");
                 cm.dispose();
                 return;
             }
diff --git a/scripts/npc/9201025.js b/scripts/npc/9201025.js
index d654fed77..d284706f1 100644
--- a/scripts/npc/9201025.js
+++ b/scripts/npc/9201025.js
@@ -99,14 +99,14 @@ function action(mode, type, selection) {
 
         if(status == 0) {
             if(!cm.isQuestStarted(100400)) {
-                cm.sendOk("Hello #b#h0##k, I'm #p9201001# the fairy of Love.");
+                cm.sendOk("Hello #b#h0##k, I'm #p9201025# the fairy of Love.");
                 cm.dispose();
                 return;
             }
             
             nanaLoc = getNanaLocation(cm.getPlayer());
             if(nanaLoc == -1) {
-                cm.sendOk("Hello #b#h0##k, I'm #p9201001# the fairy of Love.");
+                cm.sendOk("Hello #b#h0##k, I'm #p9201025# the fairy of Love.");
                 cm.dispose();
                 return;
             }
diff --git a/scripts/npc/9201026.js b/scripts/npc/9201026.js
index d654fed77..48d97f52a 100644
--- a/scripts/npc/9201026.js
+++ b/scripts/npc/9201026.js
@@ -99,14 +99,14 @@ function action(mode, type, selection) {
 
         if(status == 0) {
             if(!cm.isQuestStarted(100400)) {
-                cm.sendOk("Hello #b#h0##k, I'm #p9201001# the fairy of Love.");
+                cm.sendOk("Hello #b#h0##k, I'm #p9201026# the fairy of Love.");
                 cm.dispose();
                 return;
             }
             
             nanaLoc = getNanaLocation(cm.getPlayer());
             if(nanaLoc == -1) {
-                cm.sendOk("Hello #b#h0##k, I'm #p9201001# the fairy of Love.");
+                cm.sendOk("Hello #b#h0##k, I'm #p9201026# the fairy of Love.");
                 cm.dispose();
                 return;
             }
diff --git a/scripts/npc/9201027.js b/scripts/npc/9201027.js
index d654fed77..e02f52039 100644
--- a/scripts/npc/9201027.js
+++ b/scripts/npc/9201027.js
@@ -99,14 +99,14 @@ function action(mode, type, selection) {
 
         if(status == 0) {
             if(!cm.isQuestStarted(100400)) {
-                cm.sendOk("Hello #b#h0##k, I'm #p9201001# the fairy of Love.");
+                cm.sendOk("Hello #b#h0##k, I'm #p9201027# the fairy of Love.");
                 cm.dispose();
                 return;
             }
             
             nanaLoc = getNanaLocation(cm.getPlayer());
             if(nanaLoc == -1) {
-                cm.sendOk("Hello #b#h0##k, I'm #p9201001# the fairy of Love.");
+                cm.sendOk("Hello #b#h0##k, I'm #p9201027# the fairy of Love.");
                 cm.dispose();
                 return;
             }
diff --git a/scripts/npc/9977777.js b/scripts/npc/9977777.js
index 06a5f714a..a02e7870f 100644
--- a/scripts/npc/9977777.js
+++ b/scripts/npc/9977777.js
@@ -75,6 +75,7 @@ function writeFeatureTab_Quests() {
         addFeature("Rewarding system now looks up for item stacking.");
         addFeature("3rd job quiz with all 40-question pool available.");
         addFeature("Item raising functional.");
+        addFeature("Cleared issue with player movement during NPC talk.");
 }
 
 function writeFeatureTab_PlayerSocialNetwork() {
@@ -295,7 +296,7 @@ function writeAllFeatures() {
                 feature_cursor = [];
 
                 var tabName = (tabs[i]).replace(re, "");
-                eval("writeFeatureTab_" + tabName)();
+                this["writeFeatureTab_" + tabName]();
         
                 feature_tree.push(feature_cursor);
         }
diff --git a/scripts/portal/party3_jailin.js b/scripts/portal/party3_jailin.js
index f4b107c22..64847fd21 100644
--- a/scripts/portal/party3_jailin.js
+++ b/scripts/portal/party3_jailin.js
@@ -1,46 +1,72 @@
 importPackage(Packages.tools);
 
-function enter(pi) {
-        var map = pi.getMap();
+var leverSequenceExit = false;
+
+function enterLeverSequence(pi) {
+    var map = pi.getMap();
     
-        var jailn = (pi.getMap().getId() / 10) % 10;
-        var maxToggles = (jailn == 1) ? 7 : 6;
-        
-        var mapProp = pi.getEventInstance().getProperty("jail" + jailn);
-        
-        if(mapProp == null) {
-            var seq = 0;
-            
-            for(var i = 1; i <= maxToggles; i++) {
-                if(Math.random() < 0.5) seq += (1 << i);
-            }
-            
-            pi.getEventInstance().setProperty("jail" + jailn, seq);
-            mapProp = seq;
+    var jailn = (pi.getMap().getId() / 10) % 10;
+    var maxToggles = (jailn == 1) ? 7 : 6;
+
+    var mapProp = pi.getEventInstance().getProperty("jail" + jailn);
+
+    if(mapProp == null) {
+        var seq = 0;
+
+        for(var i = 1; i <= maxToggles; i++) {
+            if(Math.random() < 0.5) seq += (1 << i);
         }
-        
-        mapProp = Number(mapProp);
-        if(mapProp != 0) {
-            var countMiss = 0;
-            for(var i = 1; i <= maxToggles; i++) {
-                if(!(pi.getMap().getReactorByName("lever" + i).getState() == (mapProp >> i) % 2)) {
-                    countMiss++;
-                }
-            }
-            
-            if(countMiss > 0) {
-                map.broadcastMessage(MaplePacketCreator.showEffect("quest/party/wrong_kor"));
-                map.broadcastMessage(MaplePacketCreator.playSound("Party1/Failed"));
-                
-                pi.playerMessage(5, "The right combination of levers is needed to pass. " + countMiss + " lever(s) are misplaced.");
-                return false;
+
+        pi.getEventInstance().setProperty("jail" + jailn, seq);
+        mapProp = seq;
+    }
+
+    mapProp = Number(mapProp);
+    if(mapProp != 0) {
+        var countMiss = 0;
+        for(var i = 1; i <= maxToggles; i++) {
+            if(!(pi.getMap().getReactorByName("lever" + i).getState() == (mapProp >> i) % 2)) {
+                countMiss++;
             }
-            
-            map.broadcastMessage(MaplePacketCreator.showEffect("quest/party/clear"));
-            map.broadcastMessage(MaplePacketCreator.playSound("Party1/Clear"));
-            pi.getEventInstance().setProperty("jail" + jailn, "0");
         }
-        
+
+        if(countMiss > 0) {
+            map.broadcastMessage(MaplePacketCreator.showEffect("quest/party/wrong_kor"));
+            map.broadcastMessage(MaplePacketCreator.playSound("Party1/Failed"));
+
+            pi.playerMessage(5, "The right combination of levers is needed to pass. " + countMiss + " lever(s) are misplaced.");
+            return false;
+        }
+
+        map.broadcastMessage(MaplePacketCreator.showEffect("quest/party/clear"));
+        map.broadcastMessage(MaplePacketCreator.playSound("Party1/Clear"));
+        pi.getEventInstance().setProperty("jail" + jailn, "0");
+    }
+
+    pi.playPortalSound(); pi.warp(pi.getMapId() + 2,0);
+    return true;
+}
+
+function enterNoMobs(pi) {
+    var map = pi.getMap();
+    var mobcount = map.countMonster(9300044);
+
+    if (mobcount > 0) {
+        pi.playerMessage(5, "Please use the levers to defeat all the threats before you proceed.");
+        return false;
+    } else {
         pi.playPortalSound(); pi.warp(pi.getMapId() + 2,0);
         return true;
+    }
+}
+
+function enter(pi) {
+    var ret;
+    if (leverSequenceExit) {
+        ret = enterLeverSequence(pi);
+    } else {
+        ret = enterNoMobs(pi);
+    }
+
+    return ret;
 }
\ No newline at end of file
diff --git a/scripts/quest/10940.js b/scripts/quest/10940.js
index 67c8cc040..6590a761e 100644
--- a/scripts/quest/10940.js
+++ b/scripts/quest/10940.js
@@ -10,14 +10,15 @@ function start(mode, type, selection) {
             status++;
         else
             qm.dispose();
-        if (status == 0)
+        if (status == 0) {
             qm.sendAcceptDecline("Hello, #h0#. Welcome to Maple World. It's currently event season, and we're welcome new characters with a gift. Would you like your gift now?");
-        else if (status == 1) {
+        } else if (status == 1) {
+            qm.sendOk("Open your inventory and double-click on it! These gifts will make you look stylish. Oh, one more thing! You'll get another gift at level 30. Good luck!");
             qm.forceStartQuest();
 	    qm.forceCompleteQuest();
             qm.gainItem(2430191, 1, true);
-	    qm.sendOk("Open your inventory and double-click on it! These gifts will make you look stylish. Oh, one more thing! You'll get another gift at level 30. Good luck!");
-	    qm.dispose();
+        } else if (status == 2) {
+            qm.dispose();
         }
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20002.js b/scripts/quest/20002.js
index fd1174641..8284cc250 100644
--- a/scripts/quest/20002.js
+++ b/scripts/quest/20002.js
@@ -44,13 +44,16 @@ function start(mode, type, selection) {
         else if (status == 2)
             qm.sendAcceptDecline("Ah, I don't know if you are aware of this, but you won't find any monsters here in Ereve. Any form of evil will not be able to set foot on this island. Don't worry, you'll still have your opportunity to train here. Shinsoo created a fantasy creature called Mimi, which will be used as your training partners. Shall we begin?");
         else if (status == 3) {
+            qm.forceStartQuest();
+            qm.forceCompleteQuest();
+
             qm.gainExp(60);
             qm.gainItem(2000020, 10); // Red Potion for Noblesse * 10
             qm.gainItem(2000021, 10); // Blue Potion for Noblesse * 10
             qm.gainItem(1002869, 1);  // Elegant Noblesse Hat * 1
+
             qm.sendOk("Ha, I like your enthusiasm, but you must prepare yourself for the training first before we start things off. Make sure that you are equipped with weapons, and that your skills are calibrated and ready to be used. I also gave you some potions, so have it ready just in case. Let me know when you're ready. You're going to wish that you didn't sign up to become a Cygnus Knight.");
-            qm.forceStartQuest();
-            qm.forceCompleteQuest();
+        } else if (status == 4) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/20008.js b/scripts/quest/20008.js
index dca016c82..e5d7d9d61 100644
--- a/scripts/quest/20008.js
+++ b/scripts/quest/20008.js
@@ -34,17 +34,21 @@ function start(mode, type, selection) {
     if (mode < 1) {
         qm.dispose();
     } 
-    if (mode > 0)
+    else if (mode > 0)
         status++;
     if (status == 0)
         qm.sendSimple("Are you ready to take on a mission? If you can't pass this test, then you won't be able to call yourself a real Knight. Are you sure you can do this? If you are afraid to do this, let me know. I won't tell Neinheart. \r\n #L0#I'll try this later.#l \r\n #L1#I'm not afraid. Let's do this.#l");
-    else if (selection == 0) {
-        qm.sendNext("If you call yourself a Knight, then do not hesitate. Show everyone how much courage you have in you.");
+    else if (status == 1) {
+        if (selection == 0) {
+            qm.sendNext("If you call yourself a Knight, then do not hesitate. Show everyone how much courage you have in you.");
+            qm.dispose();
+        } else if (selection == 1) {
+            choice1 = selection;
+            qm.sendSimple("I'm glad you didn't run away, but... are you sure you want to become a Knight-in-Training? What I am asking is whether you're okay with being a Cygnus Knight, and therefore being tied to the Empress at all times? She may be an Empress, but she's also still just a kid. Are you sure you can fight for her? I won't let Neinheart know so just tell me what you really feel. \r\n #L2#If the Empress wants peace in the Maple World, then I'm down for whatever.#l \r\n #L3#As long as I can become a knight I'll endure whatever #l");
+            qm.forceStartQuest();
+            qm.forceCompleteQuest();
+        }
+    } else if (status == 2) {
         qm.dispose();
-    } else if (selection == 1) {
-        choice1 = selection;
-        qm.sendSimple("I'm glad you didn't run away, but... are you sure you want to become a Knight-in-Training? What I am asking is whether you're okay with being a Cygnus Knight, and therefore being tied to the Empress at all times? She may be an Empress, but she's also still just a kid. Are you sure you can fight for her? I won't let Neinheart know so just tell me what you really feel. \r\n #L2#If the Empress wants peace in the Maple World, then I'm down for whatever.#l \r\n #L3#As long as I can become a knight I'll endure whatever #l");
-        qm.forceStartQuest();
-        qm.forceCompleteQuest();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20016.js b/scripts/quest/20016.js
index 770529ce0..9d6e0f190 100644
--- a/scripts/quest/20016.js
+++ b/scripts/quest/20016.js
@@ -50,9 +50,10 @@ function start(mode, type, selection) {
     } else if (status == 11) {
     	qm.sendNextPrev("But no one starts as a strong Knight on day one. The Empress didn't want someone strong. She wanted someone with courage whom she could develop into a strong Knight through rigorous training. So, you should first become a Knight-in-Training. We'll talk about your missions when you get to that point.");
     } else if (status == 12) {
-    	qm.sendPrev("Take the portal on the left to reach the Training Forest. There, you will find #p1102000#, the Training Instructor, who will teach you how to become stronger. I don't want to find you wandering around aimlessly until you reach Lv. 10, you hear?");
     	qm.forceCompleteQuest();
-    	qm.dispose();
+        qm.sendPrev("Take the portal on the left to reach the Training Forest. There, you will find #p1102000#, the Training Instructor, who will teach you how to become stronger. I don't want to find you wandering around aimlessly until you reach Lv. 10, you hear?");
+    } else if (status == 13) {
+        qm.dispose();
     }
 }
 
diff --git a/scripts/quest/20100.js b/scripts/quest/20100.js
index 883ac2875..697eba843 100644
--- a/scripts/quest/20100.js
+++ b/scripts/quest/20100.js
@@ -39,9 +39,11 @@ function start(mode, type, selection) {
     if (status == 0)
         qm.sendAcceptDecline("Ahhh, you're back. I can see that you're at level 10 now. It looks like you're flashing a glimmer of hope towards becoming a Knight. The basic training has now ended, and it's time for you to make the decision.");
     else if (status == 1) {
-        qm.sendOk("Now look to the left. The leaders of the Knights will be waiting for you. There will be 5 paths for you to choose from. All you need to do is choose one of them. All 5 of them will lead you to the path of a Knight, so... I suggest you pay attention to what each path offers, and select the one you'd most like to take.");
         qm.forceStartQuest();
         qm.forceCompleteQuest();
+        
+        qm.sendOk("Now look to the left. The leaders of the Knights will be waiting for you. There will be 5 paths for you to choose from. All you need to do is choose one of them. All 5 of them will lead you to the path of a Knight, so... I suggest you pay attention to what each path offers, and select the one you'd most like to take.");
+    } else if (status == 2) {
         qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20101.js b/scripts/quest/20101.js
index 9af9d25a2..5c4fb9ea9 100644
--- a/scripts/quest/20101.js
+++ b/scripts/quest/20101.js
@@ -49,6 +49,7 @@ function end(mode, type, selection) {
     	qm.sendNextPrev("Unlike your time as a Nobless, once you become the Dawn Warrior, you will lost a portion of your EXP when you run out of HP, okay?");
     } else if (status == 5) {
     	qm.sendNextPrev("Now... I want you to go out there and show the world how the Knights of Cygnus operate.");
-    	qm.dispose();
+    } else if (status == 6) {
+        qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20102.js b/scripts/quest/20102.js
index cbdf5aee8..852b4d733 100644
--- a/scripts/quest/20102.js
+++ b/scripts/quest/20102.js
@@ -49,6 +49,7 @@ function end(mode, type, selection) {
     	qm.sendNextPrev("Unlike your time as a Nobless, once you become the Blaze Wizard, you will lost a portion of your EXP when you run out of HP, okay?");
     } else if (status == 5) {
     	qm.sendNextPrev("Now... I want you to go out there and show the world how the Knights of Cygnus operate.");
-    	qm.dispose();
+    } else if (status == 6) {
+        qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20103.js b/scripts/quest/20103.js
index 9d603bf42..2c119025c 100644
--- a/scripts/quest/20103.js
+++ b/scripts/quest/20103.js
@@ -50,6 +50,7 @@ function end(mode, type, selection) {
     	qm.sendNextPrev("Unlike your time as a Nobless, once you become the Wind Archer, you will lost a portion of your EXP when you run out of HP, okay?");
     } else if (status == 5) {
     	qm.sendNextPrev("Now... I want you to go out there and show the world how the Knights of Cygnus operate.");
-    	qm.dispose();
+    } else if (status == 6) {
+        qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20104.js b/scripts/quest/20104.js
index 232a97ad5..3957ff610 100644
--- a/scripts/quest/20104.js
+++ b/scripts/quest/20104.js
@@ -50,6 +50,7 @@ function end(mode, type, selection) {
     	qm.sendNextPrev("Unlike your time as a Nobless, once you become the Night Walker, you will lost a portion of your EXP when you run out of HP, okay?");
     } else if (status == 5) {
     	qm.sendNextPrev("Now... I want you to go out there and show the world how the Knights of Cygnus operate.");
-    	qm.dispose();
+    } else if (status == 6) {
+        qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20105.js b/scripts/quest/20105.js
index 6580c083c..5d957edb9 100644
--- a/scripts/quest/20105.js
+++ b/scripts/quest/20105.js
@@ -49,6 +49,7 @@ function end(mode, type, selection) {
     	qm.sendNextPrev("Unlike your time as a Nobless, once you become the Thunder Breaker, you will lost a portion of your EXP when you run out of HP, okay?");
     } else if (status == 5) {
     	qm.sendNextPrev("Now... I want you to go out there and show the world how the Knights of Cygnus operate.");
-    	qm.dispose();
+    } else if (status == 6) {
+        qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20200.js b/scripts/quest/20200.js
index a8e6afb23..a1a075269 100644
--- a/scripts/quest/20200.js
+++ b/scripts/quest/20200.js
@@ -44,7 +44,9 @@ function start(mode, type, selection) {
         } else if (status == 1) {
             qm.startQuest();
             qm.completeQuest();
+            
             qm.sendOk("If you wish to take the Knighthood Exam, please come to Ereve. Each Chief Knight will test your abilities, and if you meet their standards, then you will officially become a Knight.");
+        } else if (status == 2) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/20311.js b/scripts/quest/20311.js
index 31be87645..407573809 100644
--- a/scripts/quest/20311.js
+++ b/scripts/quest/20311.js
@@ -48,19 +48,18 @@ function start(mode, type, selection) {
             nPSP = (qm.getPlayer().getLevel() - 70) * 3;
             if (qm.getPlayer().getRemainingSp() > nPSP) {
                 qm.sendNext("You still have way too much #bSP#k with you. You can't earn a new title like that, I strongly urge you to use more SP on your 1st and 2nd level skills.");
-                qm.dispose();
             } else {
                 if (!qm.canHold(1142068)) {
                     qm.sendNext("If you wish to receive the medal befitting the title, you may want to make some room in your equipment inventory.");
-                    qm.dispose();
                 } else {
+                    qm.completeQuest();
                     qm.gainItem(1142068, 1);
                     qm.getPlayer().changeJob(Packages.client.MapleJob.DAWNWARRIOR3);
                     qm.sendOk("#h #, as of this moment, you are an Advanced Knight. From this moment on, you shall carry yourself with dignity and respect befitting your new title, an Advanced Knight of Cygnus Knights. May your glory continue to shine as bright as this moment.");
-                    qm.completeQuest();
-                    qm.dispose();
                 }
             }
+        } else if (status == 3) {
+            qm.dispose();
         }
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20312.js b/scripts/quest/20312.js
index 26458ea86..b562dea87 100644
--- a/scripts/quest/20312.js
+++ b/scripts/quest/20312.js
@@ -48,20 +48,18 @@ function start(mode, type, selection) {
             nPSP = (qm.getPlayer().getLevel() - 70) * 3;
             if (qm.getPlayer().getRemainingSp() > nPSP) {
                 qm.sendNext("You still have way too much #bSP#k with you. You can't earn a new title like that, I strongly urge you to use more SP on your 1st and 2nd level skills.");
-                qm.dispose();
             } else {
                 if (!qm.canHold(1142068)) {
                     qm.sendNext("If you wish to receive the medal befitting the title, you may want to make some room in your equipment inventory.");
-                    qm.dispose();
                 } else {
+                    qm.completeQuest();
                     qm.gainItem(1142068, 1);
                     qm.getPlayer().changeJob(Packages.client.MapleJob.BLAZEWIZARD3);
                     qm.sendOk("#h #, as of this moment, you are an Advanced Knight. From this moment on, you will train yourself with fervor as you will lead your group of Knights for the safety of this world. That fervor will provide you with plenty of courage.");
-                    qm.completeQuest();
-                    qm.dispose();
                 }
             }
-
+        } else if (status == 3) {
+            qm.dispose();
         }
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20313.js b/scripts/quest/20313.js
index 73cb22324..58e7a8906 100644
--- a/scripts/quest/20313.js
+++ b/scripts/quest/20313.js
@@ -48,20 +48,18 @@ function start(mode, type, selection) {
             nPSP = (qm.getPlayer().getLevel() - 70) * 3;
             if (qm.getPlayer().getRemainingSp() > nPSP) {
                 qm.sendNext("You still have way too much #bSP#k with you. You can't earn a new title like that, I strongly urge you to use more SP on your 1st and 2nd level skills.");
-                qm.dispose();
             } else {
                 if (!qm.canHold(1142068)) {
                     qm.sendNext("If you wish to receive the medal befitting the title, you may want to make some room in your equipment inventory.");
-                    qm.dispose();
                 } else {
+                    qm.completeQuest();
                     qm.gainItem(1142068, 1);
                     qm.getPlayer().changeJob(Packages.client.MapleJob.WINDARCHER3);
                     qm.sendOk("#h #, as of this moment, you are an Advanced Knight. From this moment on, you will be carrying a while lot of responsibility befitting your new title as an Advanced Knight of Cygnus Knights. You may view the world in a carefree mode, but please remember what your mission is.");
-                    qm.completeQuest();
-                    qm.dispose();
                 }
             }
-
+        } else if (status == 3) {
+            qm.dispose();
         }
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20314.js b/scripts/quest/20314.js
index 17bb31731..be6c955c9 100644
--- a/scripts/quest/20314.js
+++ b/scripts/quest/20314.js
@@ -48,20 +48,18 @@ function start(mode, type, selection) {
             nPSP = (qm.getPlayer().getLevel() - 70) * 3;
             if (qm.getPlayer().getRemainingSp() > nPSP) {
                 qm.sendNext("You still have way too much #bSP#k with you. You can't earn a new title like that, I strongly urge you to use more SP on your 1st and 2nd level skills.");
-                qm.dispose();
             } else {
                 if (!qm.canHold(1142068)) {
                     qm.sendNext("If you wish to receive the medal befitting the title, you may want to make some room in your equipment inventory.");
-                    qm.dispose();
                 } else {
                     qm.gainItem(1142068, 1);
                     qm.getPlayer().changeJob(Packages.client.MapleJob.NIGHTWALKER3);
-                    qm.sendOk("#h #, from here on out, you are an Advanced Knight of Cygnus Knights. The title comes with a newfound broad view on everything. You may encounter temptations here and there, but I want you to keep your faith and beliefs intact and do not succumb to the darkness.");
                     qm.completeQuest();
-                    qm.dispose();
+                    qm.sendOk("#h #, from here on out, you are an Advanced Knight of Cygnus Knights. The title comes with a newfound broad view on everything. You may encounter temptations here and there, but I want you to keep your faith and beliefs intact and do not succumb to the darkness.");
                 }
             }
-
+        } else if (status == 3) {
+            qm.dispose();
         }
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/20315.js b/scripts/quest/20315.js
index 05b43e4c1..073fc6da8 100644
--- a/scripts/quest/20315.js
+++ b/scripts/quest/20315.js
@@ -48,20 +48,18 @@ function start(mode, type, selection) {
             nPSP = (qm.getPlayer().getLevel() - 70) * 3;
             if (qm.getPlayer().getRemainingSp() > nPSP) {
                 qm.sendNext("You still have way too much #bSP#k with you. You can't earn a new title like that, I strongly urge you to use more SP on your 1st and 2nd level skills.");
-                qm.dispose();
             } else {
                 if (!qm.canHold(1142068)) {
                     qm.sendNext("If you wish to receive the medal befitting the title, you may want to make some room in your equipment inventory.");
-                    qm.dispose();
                 } else {
                     qm.gainItem(1142068, 1);
                     qm.getPlayer().changeJob(Packages.client.MapleJob.THUNDERBREAKER3);
-                    qm.sendOk("#h #, from here on out, you will become an Advanced Knight of the Knights of Cygnus! As your standing rises, so does the difficulty of the tasks you will be receiving. But challenge is good, right? You have to enjoy life. Enjoy what's given to you!");
                     qm.completeQuest();
-                    qm.dispose();
+                    qm.sendOk("#h #, from here on out, you will become an Advanced Knight of the Knights of Cygnus! As your standing rises, so does the difficulty of the tasks you will be receiving. But challenge is good, right? You have to enjoy life. Enjoy what's given to you!");
                 }
             }
-
+        } else if (status == 3) {
+            qm.dispose();
         }
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/2034.js b/scripts/quest/2034.js
index d123cc9aa..37105e5b1 100644
--- a/scripts/quest/2034.js
+++ b/scripts/quest/2034.js
@@ -1,7 +1,6 @@
 importPackage(Packages.client);
 
 var item;
-var stance;
 var status = -1;
 var item;
 
@@ -23,8 +22,7 @@ function end(mode, type, selection) {
 		return;
 	    }
 
-            stance = qm.getPlayer().getJobStyle();
-            
+            var stance = qm.getPlayer().getJobStyle();
             if(stance == Packages.client.MapleJob.WARRIOR) item = 1072003;
             else if(stance == Packages.client.MapleJob.MAGICIAN) item = 1072077;
             else if(stance == Packages.client.MapleJob.BOWMAN || stance == Packages.client.MapleJob.CROSSBOWMAN) item = 1072081;
@@ -34,11 +32,13 @@ function end(mode, type, selection) {
          
             qm.gainItem(item, 1);
             qm.gainItem(4000007, -150);
-            
             qm.gainExp(2200);
             qm.completeQuest();
             
             qm.sendOk("Alright, if you need work sometime down the road, feel free to come back and see me. This town sure can use a person like you for help~");
+        }
+
+        else if (status == 2) {
             qm.dispose();
-	}
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/20520.js b/scripts/quest/20520.js
index e507450ba..6f1c5e193 100644
--- a/scripts/quest/20520.js
+++ b/scripts/quest/20520.js
@@ -44,6 +44,7 @@ function start(mode, type, selection) {
 		qm.forceStartQuest();
 		qm.forceCompleteQuest();
 		qm.sendOk("There's a special mount that only the Cygnus Knights can enjoy. If you are interested, visit #bEreve#k. I will give you more information on it.");
-		qm.dispose();
-	}
+	} else if (status == 3) {
+            qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/20522.js b/scripts/quest/20522.js
index e4e52c989..862c2bf98 100644
--- a/scripts/quest/20522.js
+++ b/scripts/quest/20522.js
@@ -54,6 +54,7 @@ function start(mode, type, selection) {
         qm.forceStartQuest();
         if(!qm.haveItem(4220137)) qm.gainItem(4220137);
 	qm.sendOk("Mimiana's egg can be raised by #bsharing your daily experiences with it#k. Once Mimiana fully grows up, please come see me.");
+    } else if (status == 4) {
 	qm.dispose();
     }
 }
@@ -70,17 +71,15 @@ function end(mode, type, selection) {
     } else if (status == 1) {   //pretty sure there would need to have an egg EXP condition... Whatever.
         if(!qm.haveItem(4220137)) {
             qm.sendOk("I see, you lost your egg... You need to be more careful when raising a baby Mimiana!");
-            qm.dispose();
             return;
         }
         
-	qm.sendOk("Oh, were you able to awaken Mimiana Egg? That's amazing... Most knights can't even dream of awakening it in such a short amount of time.");
-        
-        qm.forceCompleteQuest();
+	qm.forceCompleteQuest();
         qm.gainItem(4220137, -1);
         qm.gainExp(37600);
-        
-	qm.dispose();
+        qm.sendOk("Oh, were you able to awaken Mimiana Egg? That's amazing... Most knights can't even dream of awakening it in such a short amount of time.");
+    } else if (status == 2) {
+        qm.dispose();
     }
 }
 
diff --git a/scripts/quest/20526.js b/scripts/quest/20526.js
index 2b06a930d..440581b89 100644
--- a/scripts/quest/20526.js
+++ b/scripts/quest/20526.js
@@ -55,6 +55,7 @@ function start(mode, type, selection) {
         
         if(!qm.haveItem(4220137)) qm.gainItem(4220137);
 	qm.sendOk("Mimiana's egg can be raised by #bsharing your daily experiences with it#k. Once Mimiana fully grows up, please come see me. One more thing, I talked with #p2060005# beforehand and retrieved the #b#t4032117##k for you. The price to charge remains the same: #r10,000,000 mesos#k.");
+    } else if (status == 4) {
 	qm.dispose();
     }
 }
@@ -80,14 +81,13 @@ function end(mode, type, selection) {
             return;
         }
         
-	qm.sendOk("Okay, you now may mount Mimiana again. Take good care of it this time.");
-        
+        qm.forceCompleteQuest();
         qm.gainItem(1902005, 1);
         qm.gainItem(4220137, -1);
         qm.gainMeso(-10000000);
-        
-        qm.forceCompleteQuest();
-	qm.dispose();
+        qm.sendOk("Okay, you now may mount Mimiana again. Take good care of it this time.");
+    } else if (status == 2) {
+        qm.dispose();
     }
 }
 
diff --git a/scripts/quest/20527.js b/scripts/quest/20527.js
index feaf651d3..b6ebc5419 100644
--- a/scripts/quest/20527.js
+++ b/scripts/quest/20527.js
@@ -38,12 +38,12 @@ function start(mode, type, selection) {
             var mount = qm.getPlayer().getMount();
             
             if(mount != null && mount.getLevel() >= 3) {
-                qm.sendNext("Alright, I'll get you started in how to train Mimio, the next step for Mimianas. When you're ready, talk to me again.");
                 qm.forceCompleteQuest();
+                qm.sendNext("Alright, I'll get you started in how to train Mimio, the next step for Mimianas. When you're ready, talk to me again.");
             } else {
                 qm.sendNext("It looks like your Mimiana haven't reached #rlevel 3#k yet. Please train it a bit more before trying to advance it.");
             }
-            
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/20600.js b/scripts/quest/20600.js
index 76a86566e..cee458fe5 100644
--- a/scripts/quest/20600.js
+++ b/scripts/quest/20600.js
@@ -9,7 +9,7 @@ function start(mode, type, selection) {
 
     if (status == 0) {
     	qm.sendAcceptDecline("#h0#. Have you been slacking off on training since reaching Level 100? We all know how powerful you are, but the training is not complete. Take a look at these Knight Commanders. They train day and night, preparing themselves for the possible encounter with the Black Mage.");
-    } else {
+    } else if (status == 1) {
 	if (mode == 1) {
 	    qm.forceStartQuest();
 	}
diff --git a/scripts/quest/20610.js b/scripts/quest/20610.js
index 3da0a28c2..3f15cbab6 100644
--- a/scripts/quest/20610.js
+++ b/scripts/quest/20610.js
@@ -14,8 +14,10 @@ function start(mode, type, selection) {
 	    qm.sendOk("Well, what you're doing right now doesn't make you look like someone that's humble. You just look complacent by doing that, and that's never a good thing.");
 	} else {
 	    qm.forceStartQuest();
+            qm.dispose();
 	}
-	qm.dispose();
+    } else if (status == 2) {
+        qm.dispose();
     }
 }
 
diff --git a/scripts/quest/21011.js b/scripts/quest/21011.js
index 4275db3e1..736aea907 100644
--- a/scripts/quest/21011.js
+++ b/scripts/quest/21011.js
@@ -48,8 +48,9 @@ function start(mode, type, selection) {
     } else if (status == 4) {
 	qm.forceStartQuest();
 	qm.sendOk("My brother #bPuir #kis just down the street, and he's been dying to meet you! I know you're busy, but could you please stop by and say hello to Puir? Please...");
+    } else if (status == 5) {
 	qm.dispose();
-	}
+    }
 }
 
 function end(mode, type, selection) {
@@ -83,7 +84,7 @@ function end(mode, type, selection) {
 		qm.sendNext("#b(Your skills are nowhere close to being hero-like... But a sword? Have you ever even held a sword in your lifetime? You can't remember... How do you even equip it?)", 3);
 	}else
 		qm.dropMessage(1,"Your inventory is full");   
-	} else if (status == 6) {
+    } else if (status == 6) {
 		qm.guideHint(16); 
 		qm.dispose();
     }
diff --git a/scripts/quest/21012.js b/scripts/quest/21012.js
index 644dab447..6b1e39106 100644
--- a/scripts/quest/21012.js
+++ b/scripts/quest/21012.js
@@ -71,14 +71,16 @@ function end(mode, type, selection) {
         if(qm.isQuestCompleted(21012))
             qm.dropMessage(1,"Unknown Error");		
         else if(qm.canHold(2000022) && qm.canHold(2000023)){
+            qm.forceCompleteQuest();
             qm.gainExp(57);
             qm.gainItem(2000022, 10);
             qm.gainItem(2000023, 10);
-            qm.forceCompleteQuest();
 	    qm.sendOk("#b(Even if you're really the hero everyone says you are... What good are you without any skills?)", 3);
-            qm.dispose();
-	}else
+	} else {
             qm.dropMessage(1,"Your inventory is full");  
-	    qm.dispose();	
+	    qm.dispose();
+        }
+    } else if (status == 2) {
+        qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/21013.js b/scripts/quest/21013.js
index 700a6d6af..ae758bccc 100644
--- a/scripts/quest/21013.js
+++ b/scripts/quest/21013.js
@@ -73,7 +73,7 @@ function end(mode, type, selection) {
 			qm.gainItem(4032309, -1);
 			qm.gainItem(4032310, -1);
             qm.gainItem(3010062, 1);
-	    qm.sendNextPrev("Here, a fully-assembled chair, just for you! I've always wanted to give you a chair as a gift, because I know a hero can occasionally use some good rest. Tee hee.", 9);	
+	    qm.sendNext("Here, a fully-assembled chair, just for you! I've always wanted to give you a chair as a gift, because I know a hero can occasionally use some good rest. Tee hee.", 9);	
     } else if (status == 2) { 
 	qm.sendNext("A hero is not invincible. A hero is human. I'm sure you will face challenges and even falter at times. But you are a hero because you have what it takes to overcome any obstacles you may encounter.", 9);
     } else if (status == 3) { 
diff --git a/scripts/quest/21100.js b/scripts/quest/21100.js
index 483bc4f16..475a81af9 100644
--- a/scripts/quest/21100.js
+++ b/scripts/quest/21100.js
@@ -31,6 +31,7 @@ function start(mode, type, selection) {
 			qm.sendOk("If the #p1201001# reacts to you, then we'll know that you're #bAran#k, the hero that wielded a #p1201001#.", 8);
 			qm.showIntro("Effect/Direction1.img/aranTutorial/ClickPoleArm");
 		}
-		qm.dispose();
-	}
+	} else if (status == 8) {
+            qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/21200.js b/scripts/quest/21200.js
index c034377a6..c7e7bb101 100644
--- a/scripts/quest/21200.js
+++ b/scripts/quest/21200.js
@@ -35,6 +35,7 @@ function start(mode, type, selection) {
         qm.sendAcceptDecline("How is the training going? Wow, you've reached such a high level! That's amazing. I knew you would do just fine on Victoria Island... Oh, look at me. I'm wasting your time. I know you're busy, but you'll have to return to the island for a bit.");
     else if(status == 1){
         qm.sendOk("Your #b#p1201001##k in #b#m140000000##k is acting strange all of a sudden. According to the records, the Polearm acts this way when it is calling for its master. #bPerhaps it's calling for you#k. Please return to the island and check things out.");
+    } else if(status == 2){
         qm.startQuest();
         qm.dispose();
     }
diff --git a/scripts/quest/21201.js b/scripts/quest/21201.js
index 4d8f0f8d0..db80f5d8e 100644
--- a/scripts/quest/21201.js
+++ b/scripts/quest/21201.js
@@ -60,7 +60,6 @@ function end(mode, type, selection) {
             if(!qm.isQuestCompleted(21201)) {
                 if(!qm.canHold(1142130)) {
                     qm.sendOk("Wow, your #bequip#k inventory is full. I need you to make at least 1 empty slot to complete this quest.");   // thanks MedicOP for finding an issue here
-                    qm.dispose();
                     return;
                 }
 
@@ -78,6 +77,7 @@ function end(mode, type, selection) {
             }
 
             qm.sendNext("Your level isn't what it used to be back in your glory days, so I can't restore all of your old abilities. But the few I can restore should help you level up faster. Now hurry up and train so you can return to the old you.");    
+        } else if (status == 9) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/21202.js b/scripts/quest/21202.js
index bddef9d73..4d0591fb0 100644
--- a/scripts/quest/21202.js
+++ b/scripts/quest/21202.js
@@ -42,7 +42,7 @@ function start(mode, type, selection) {
         qm.sendAcceptDecline("I'm too old to make weapons now, but.. I do have a Polearm that I made way back when. It's still in excellent shape. But I can't give it to you because that Polearm is extremely sharp, so sharp it could hurt its master. Do you still want it?");
     } else if(status == 5) {
         qm.sendOk("Well, if you say so.. I can't object to that. I'll tell you what. I'll give you a quick test, and if you pass it, the Giant Polearm is yours. Head over to the #bTraining Center#k and take on the #rScarred Bears#k that are there. Your job is to bring back #b30 Sign of Acceptances#k.");
-    } else {
+    } else if(status == 6) {
         qm.startQuest();
         qm.dispose();
     }
diff --git a/scripts/quest/2124.js b/scripts/quest/2124.js
index 079a61dad..451b5f413 100644
--- a/scripts/quest/2124.js
+++ b/scripts/quest/2124.js
@@ -24,15 +24,30 @@
 */
 
 function end(mode, type, selection) {
-    
-    if(!qm.haveItem(4031619, 1)) {
-        qm.sendOk("Please bring me the box with the supplies that lies with #b#p2012019##k...");
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            if(!qm.haveItem(4031619, 1)) {
+                qm.sendOk("Please bring me the box with the supplies that lies with #b#p2012019##k...");
+            }
+            else {
+                qm.gainItem(4031619, -1);
+                qm.sendOk("Oh, you brought #p2012019#'s box! Thank you.");
+                qm.forceCompleteQuest();
+            }
+        } else if (status == 1) {
+            qm.dispose();
+        }
     }
-    else {
-        qm.gainItem(4031619, -1);
-        qm.sendOk("Oh, you brought #p2012019#'s box! Thank you.");
-        qm.forceCompleteQuest();
-    }
-    
-    qm.dispose();
 }
\ No newline at end of file
diff --git a/scripts/quest/2126.js b/scripts/quest/2126.js
index 079a61dad..451b5f413 100644
--- a/scripts/quest/2126.js
+++ b/scripts/quest/2126.js
@@ -24,15 +24,30 @@
 */
 
 function end(mode, type, selection) {
-    
-    if(!qm.haveItem(4031619, 1)) {
-        qm.sendOk("Please bring me the box with the supplies that lies with #b#p2012019##k...");
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            if(!qm.haveItem(4031619, 1)) {
+                qm.sendOk("Please bring me the box with the supplies that lies with #b#p2012019##k...");
+            }
+            else {
+                qm.gainItem(4031619, -1);
+                qm.sendOk("Oh, you brought #p2012019#'s box! Thank you.");
+                qm.forceCompleteQuest();
+            }
+        } else if (status == 1) {
+            qm.dispose();
+        }
     }
-    else {
-        qm.gainItem(4031619, -1);
-        qm.sendOk("Oh, you brought #p2012019#'s box! Thank you.");
-        qm.forceCompleteQuest();
-    }
-    
-    qm.dispose();
 }
\ No newline at end of file
diff --git a/scripts/quest/2127.js b/scripts/quest/2127.js
index 482e0fbda..822ace878 100644
--- a/scripts/quest/2127.js
+++ b/scripts/quest/2127.js
@@ -24,8 +24,24 @@
 */
 
 function end(mode, type, selection) {
-    qm.sendOk("I see you're ready for the task. Now, pay heed to the details of your mission...");
-    qm.forceCompleteQuest();
-    
-    qm.dispose();
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.sendOk("I see you're ready for the task. Now, pay heed to the details of your mission...");
+            qm.forceCompleteQuest();
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/21300.js b/scripts/quest/21300.js
index 002ea062f..e0c454d61 100644
--- a/scripts/quest/21300.js
+++ b/scripts/quest/21300.js
@@ -11,13 +11,14 @@ function start(mode, type, selection) {
         return;
     }
 	
-	if (status == 0) {
-        qm.sendNext("How's the training going? Hmmm... Level 70... That's still not much, but you have really made some strides since the first time I met you fresh out of ice. Keep training, and I am sure one day you'll be able to regain your pre-battle form.");
+    if (status == 0) {
+            qm.sendNext("How's the training going? Hmmm... Level 70... That's still not much, but you have really made some strides since the first time I met you fresh out of ice. Keep training, and I am sure one day you'll be able to regain your pre-battle form.");
     } else if (status == 1) {
-		qm.sendAcceptDecline("But before doing that, I'll need you back in Rein for a bit. #bYour pole arm is reacting strange once again. It looks like it has something it wants to tell you. #kIt might be able to awaken your hidden powers, so please come immediately.");
-	} else if (status == 2) {
-		qm.sendOk("Anyway, I thought it was really something that a weapon has its own identity, but seriously... this weapon does not stop talking. It first kept on crying because I wasn't really paying attention to its needs, and... ahh, please keep this a secret from the pole arm. I don't think it's a good idea to upset the weapon any further.");
-		qm.forceStartQuest();
-		qm.dispose();
-	}
+            qm.sendAcceptDecline("But before doing that, I'll need you back in Rein for a bit. #bYour pole arm is reacting strange once again. It looks like it has something it wants to tell you. #kIt might be able to awaken your hidden powers, so please come immediately.");
+    } else if (status == 2) {
+            qm.forceStartQuest();
+            qm.sendOk("Anyway, I thought it was really something that a weapon has its own identity, but seriously... this weapon does not stop talking. It first kept on crying because I wasn't really paying attention to its needs, and... ahh, please keep this a secret from the pole arm. I don't think it's a good idea to upset the weapon any further.");
+    } else if (status == 3) {
+            qm.dispose();
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/21301.js b/scripts/quest/21301.js
index f09d16ba3..e9077098d 100644
--- a/scripts/quest/21301.js
+++ b/scripts/quest/21301.js
@@ -24,8 +24,9 @@ function end(mode, type, selection) {
 	} else if (status == 5) {
 		qm.sendNextPrev("...No hope, no dreams... Nooooo!!");
 	} else if (status == 6) {
-		qm.sendNextPrev("#b(Maha is beginning to really get hysterical. I better leave right this minute. Maybe Lirin can do something about it.)", 2);
 		qm.completeQuest();
-		qm.dispose();
-	}
+                qm.sendNextPrev("#b(Maha is beginning to really get hysterical. I better leave right this minute. Maybe Lilin can do something about it.)", 2);
+	} else if (status == 7) {
+            qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/21302.js b/scripts/quest/21302.js
index 35556f958..69a40ee7b 100644
--- a/scripts/quest/21302.js
+++ b/scripts/quest/21302.js
@@ -59,6 +59,7 @@ function end(mode, type, selection) {
         }
         
         qm.sendNext("Come on, keep training so you can get all your abilities back, and that way we can explore together once more!");    
+    } else if (status == 3) {
         qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/21400.js b/scripts/quest/21400.js
index 363d87b00..2caeb2de2 100644
--- a/scripts/quest/21400.js
+++ b/scripts/quest/21400.js
@@ -14,8 +14,9 @@ function start(mode, type, selection) {
 	if (status == 0) {
         qm.sendAcceptDecline("How is the training going? I know you're busy, but please come to #bRien#k immediately. The #bMaha#k has started to act weird again... But its even weirder now. It's different from before. It's... darker than usual.");
     } else if (status == 1) {
-		qm.sendOk("I have a bad feeling about this. Please come back here. I've never seen or herd Maha like this, but I can sense the suffering its going through. #bOnly you, the master of Maha, can do something about it!");
-		qm.startQuest();
-		qm.dispose();
-	}
+            qm.startQuest();
+            qm.sendOk("I have a bad feeling about this. Please come back here. I've never seen or herd Maha like this, but I can sense the suffering its going through. #bOnly you, the master of Maha, can do something about it!");
+    } else if (status == 2) {
+            qm.dispose();
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/21401.js b/scripts/quest/21401.js
index dea993fd1..600aaded9 100644
--- a/scripts/quest/21401.js
+++ b/scripts/quest/21401.js
@@ -68,7 +68,9 @@ function end(mode, type, selection) {
 			qm.completeQuest();
 		}
 		qm.sendNext("Your skills have been restored. Those skills have been dormant for so long that you'll have to re-train yourself, but you'll be as good as new once you complete your training.");
-	}
+	} else if(status == 3) {
+                qm.dispose();
+        }
 }
 
 function spawnMob(x, y, id, map) {
diff --git a/scripts/quest/2148.js b/scripts/quest/2148.js
index e333dafc5..58c7a3512 100644
--- a/scripts/quest/2148.js
+++ b/scripts/quest/2148.js
@@ -1,9 +1,26 @@
 var status = -1;
 
 function start(mode, type, selection) {
-        qm.sendNext("Some bats seems to accompany this tree wherever it goes. Creepy...");
-        qm.forceCompleteQuest();
+    if (mode == -1) {
         qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.sendNext("Some bats seems to accompany this tree wherever it goes. Creepy...");
+            qm.forceCompleteQuest();
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
 function end(mode, type, selection) {
         qm.dispose();
diff --git a/scripts/quest/2149.js b/scripts/quest/2149.js
index 9088a2d9c..3e10046fd 100644
--- a/scripts/quest/2149.js
+++ b/scripts/quest/2149.js
@@ -1,10 +1,28 @@
 var status = -1;
 
 function start(mode, type, selection) {
-        qm.sendNext("It is said that a old tree gets alive whenever something sinister disturbs this land... We need a hero that fends our village of that creature!");
-        qm.forceCompleteQuest();
+    if (mode == -1) {
         qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.sendNext("It is said that a old tree gets alive whenever something sinister disturbs this land... We need a hero that fends our village of that creature!");
+            qm.forceCompleteQuest();
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
+
 function end(mode, type, selection) {
         qm.dispose();
 }
\ No newline at end of file
diff --git a/scripts/quest/2150.js b/scripts/quest/2150.js
index a7d30cf45..38cb1538d 100644
--- a/scripts/quest/2150.js
+++ b/scripts/quest/2150.js
@@ -1,10 +1,28 @@
 var status = -1;
 
 function start(mode, type, selection) {
-        qm.sendNext("The tree has a scarf upon its branches, I tell you.");
-        qm.forceCompleteQuest();
+    if (mode == -1) {
         qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.sendNext("The tree has a scarf upon its branches, I tell you.");
+            qm.forceCompleteQuest();    
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }        
 }
+
 function end(mode, type, selection) {
         qm.dispose();
 }
\ No newline at end of file
diff --git a/scripts/quest/2151.js b/scripts/quest/2151.js
index 49d470f73..56facb7ee 100644
--- a/scripts/quest/2151.js
+++ b/scripts/quest/2151.js
@@ -1,10 +1,28 @@
 var status = -1;
 
 function start(mode, type, selection) {
-        qm.sendNext("The tree has a strange carving that resembles a scary face.");
-        qm.forceCompleteQuest();
+    if (mode == -1) {
         qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.sendNext("The tree has a strange carving that resembles a scary face.");
+            qm.forceCompleteQuest();
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
+
 function end(mode, type, selection) {
         qm.dispose();
 }
\ No newline at end of file
diff --git a/scripts/quest/2152.js b/scripts/quest/2152.js
index 845e64777..a8453cbc3 100644
--- a/scripts/quest/2152.js
+++ b/scripts/quest/2152.js
@@ -1,10 +1,28 @@
 var status = -1;
 
 function start(mode, type, selection) {
-        qm.sendNext("That tree... I've heard of it before, I even studied its behavior! If I recall correctly, the #bStumpy#k comes alive when the soil deems infertile by some sort of magic, and those stumps who evolves under these conditions starts to drain these suspicious magical sources instead of water and minerals for living, which makes them very threathening to people and villages nearby.");
-        qm.forceCompleteQuest();
+    if (mode == -1) {
         qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.sendNext("That tree... I've heard of it before, I even studied its behavior! If I recall correctly, the #bStumpy#k comes alive when the soil deems infertile by some sort of magic, and those stumps who evolves under these conditions starts to drain these suspicious magical sources instead of water and minerals for living, which makes them very threathening to people and villages nearby.");
+            qm.forceCompleteQuest();
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
+
 function end(mode, type, selection) {
         qm.dispose();
 }
\ No newline at end of file
diff --git a/scripts/quest/21600.js b/scripts/quest/21600.js
index 7d5f2e1c3..f30354e46 100644
--- a/scripts/quest/21600.js
+++ b/scripts/quest/21600.js
@@ -39,9 +39,9 @@ function start(mode, type, selection) {
         } else if (status == 1) {
             qm.sendAcceptDecline("Picked your interest, huh? Very well, first you must make your way to #bAqua#k, there is a person there who makes #rfood for wolf cubs#k. Bring one portion to me, and I shall deem you able to tame and take care of one. What do you say, will you try for it?");
         } else if (status == 2) {
-            qm.sendNext("Alright. The one you must meet is #bNanuke#k, she is on top of a #rsnowy whale#k, somewhere in the ocean. Good luck!");
             qm.forceStartQuest();
-            
+            qm.sendNext("Alright. The one you must meet is #bNanuke#k, she is on top of a #rsnowy whale#k, somewhere in the ocean. Good luck!");
+        } else if (status == 3) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/21613.js b/scripts/quest/21613.js
index cc99db89f..488aa7cef 100644
--- a/scripts/quest/21613.js
+++ b/scripts/quest/21613.js
@@ -44,7 +44,6 @@ function start(mode, type, selection) {
             var em = qm.getEventManager("Aran_3rdmount");
             if (em == null) {
                 qm.sendOk("Sorry, but the 3rd mount quest (Wolves) is closed.");
-                qm.dispose();
                 return;
             }
             else {
@@ -54,9 +53,9 @@ function start(mode, type, selection) {
                 } else {
                     qm.forceStartQuest();
                 }
-                
-                qm.dispose();
             }
+        } else if (status == 4) {
+            qm.dispose();
         }
     }
 }
diff --git a/scripts/quest/21618.js b/scripts/quest/21618.js
index 1f606ef1c..fae1da010 100644
--- a/scripts/quest/21618.js
+++ b/scripts/quest/21618.js
@@ -71,11 +71,12 @@ function end(mode, type, selection) {
             }
             
             qm.sendNext("Step aside, behold the mighty prowess of Maha!!");
-        } else {
+        } else if (status == 1) {
+            qm.forceCompleteQuest();
+            
             qm.gainItem(1902017, -1);
             qm.gainItem(1902018, 1);
             
-            qm.forceCompleteQuest();
             qm.dispose();
         }
     }
diff --git a/scripts/quest/21700.js b/scripts/quest/21700.js
index 4e4b8c233..7157a1567 100644
--- a/scripts/quest/21700.js
+++ b/scripts/quest/21700.js
@@ -33,8 +33,9 @@ function start(mode, type, selection) {
 			qm.forceStartQuest();
 		}
     } else if (status == 6) {
-		qm.sendPrev("You'll find a Training Center if you exit to the #bleft#k. There, you'll meet #b#p1202006##k. I'm a bit worried because I think he may be struggling with bouts of Alzheimer's, but he spent a long time researching skills to help you. I'm sure you'll learn a thing or two from him.");
-		qm.dispose();
+            qm.sendPrev("You'll find a Training Center if you exit to the #bleft#k. There, you'll meet #b#p1202006##k. I'm a bit worried because I think he may be struggling with bouts of Alzheimer's, but he spent a long time researching skills to help you. I'm sure you'll learn a thing or two from him.");
+    } else if (status == 7) {
+            qm.dispose();
     }
 }
 
diff --git a/scripts/quest/21703.js b/scripts/quest/21703.js
index d6116bd8c..380e6e59f 100644
--- a/scripts/quest/21703.js
+++ b/scripts/quest/21703.js
@@ -35,6 +35,7 @@ function start(mode, type, selection) {
     } else if (status == 7) {
         qm.forceStartQuest();
         qm.sendOk("Now go and take on those monstrous #o9300343#s!");
+    } else if (status == 8) {
         qm.dispose();
     }
 }
@@ -70,6 +71,7 @@ function end(mode, type, selection) {
         qm.sendNext("(You remembered the #bCombo Ability#k skill! You were skeptical of the training at first, since the old man suffers from Alzheimer's and all, but boy, was it effective!)", 2);
     } else if (status == 4) {
         qm.sendPrev("Now report back to #p1201000#. I know she'll be ecstatic when she sees the progress you've made!");
+    } else if (status == 5) {
         qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/21712.js b/scripts/quest/21712.js
index 28f43a1f0..8d4eb2b5a 100644
--- a/scripts/quest/21712.js
+++ b/scripts/quest/21712.js
@@ -25,7 +25,8 @@ function start(mode, type, selection) {
 	qm.sendNext("I wonder what triggered this in the first place. There is no way this puppet was naturally created, which means someone planned this. I should keep an eye on the #o1210102#s.", 9);
     } else if (status == 3) {
 	qm.sendPrev("#b(You were able to find out what caused the changes in the #o1210102#s. You should report to #p1002104# and deliver the information you've gathered.)#k", 2);
-	qm.dispose();
+    } else if (status == 4) {
+        qm.dispose();
     }
 }
 
diff --git a/scripts/quest/21728.js b/scripts/quest/21728.js
index 4795cf915..59ef6d5e4 100644
--- a/scripts/quest/21728.js
+++ b/scripts/quest/21728.js
@@ -42,7 +42,7 @@ function end(mode, type, selection) {
                 qm.gainExp(200);
                 qm.forceCompleteQuest();
             }
-            
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/21733.js b/scripts/quest/21733.js
index 5f00ad6da..bba95c962 100644
--- a/scripts/quest/21733.js
+++ b/scripts/quest/21733.js
@@ -61,7 +61,7 @@ function end(mode, type, selection) {
             qm.sendNext("Aran, thank you very much! Somehow the Puppeteer managed to bypass the security of Lith Harbor. He was trying to seek revenge because of the other day. Luckily, you came by. Nicely done!");
         } else if(status == 1) {
             qm.sendNext("I will teach you the #rPolearm Mastery#k skill, to reward your actions here. You will be able to improve your accuracy and the overall mastery of your polearm arts.");
-        } else {
+        } else if(status == 2) {
             qm.gainExp(8000);
             qm.teachSkill(21100000, 0, 20, -1); // polearm mastery
             
diff --git a/scripts/quest/21734.js b/scripts/quest/21734.js
index a5fa4b7f9..2377d6db8 100644
--- a/scripts/quest/21734.js
+++ b/scripts/quest/21734.js
@@ -63,11 +63,12 @@ function end(mode, type, selection) {
             qm.sendNext("They were after the #bcrystal seal of Victoria#k. These seals are what repels the Black Mage to further taking the continents into his grasp at once. Each continent has one, Victoria's now is safe and sound.");
         } else if(status == 2) {
             qm.sendNext("For your bravery inputted on these series of missions, I will now reward you properly. Behold, the #rCombo Drain#k Skill: that let's you heal back a portion of damage dealt to the monsters.");
-        } else {
+        } else if(status == 3) {
+            qm.forceCompleteQuest();
+            
             qm.gainExp(12500);
             qm.teachSkill(21100005, 0, 20, -1); // combo drain
             
-            qm.forceCompleteQuest();
             qm.dispose();
         }
     }
diff --git a/scripts/quest/21736.js b/scripts/quest/21736.js
index b9bda8727..12be56e8a 100644
--- a/scripts/quest/21736.js
+++ b/scripts/quest/21736.js
@@ -42,7 +42,7 @@ function start(mode, type, selection) {
             qm.sendNextPrev("It seems like something strange is happening in Orbis in Ossyria. It's a bit different from when we were dealing with the puppeteer, but my instincts tell me it has to do with the Black Wings. Please head over to Orbis.");
         } else if(status == 3) {
             qm.sendAcceptDecline("#bLisa the Fairy#k in Orbis should know a thing or two. Go see Lisa first, she knows someone that knows the whereabouts of the sealing stone. That person #rwill require a password from you#k, when requested use the #bThere's something strange going on in Orbis....#k keyword to talk to her. Understood?");
-        } else {
+        } else if(status == 4) {
             qm.forceStartQuest();
             qm.dispose();
         }
diff --git a/scripts/quest/21738.js b/scripts/quest/21738.js
index 04eb91b52..fdb5bc460 100644
--- a/scripts/quest/21738.js
+++ b/scripts/quest/21738.js
@@ -50,7 +50,7 @@ function start(mode, type, selection) {
             qm.sendAcceptDecline("I can't tell you about Sealed Garden. If you want to find out, I must first see whether you are worthy of the information. Do you mind if I look into your fate?", 9);
         } else if (status == 7) {
             qm.sendOk("Well, now let's look into your fate. Give me a second.");
-        } else {
+        } else if (status == 8) {
             qm.forceStartQuest();
             qm.dispose();
         }
diff --git a/scripts/quest/21739.js b/scripts/quest/21739.js
index 94f544f74..a86b8aa28 100644
--- a/scripts/quest/21739.js
+++ b/scripts/quest/21739.js
@@ -36,9 +36,9 @@ function end(mode, type, selection) {
         
         if(status == 0) {
             qm.sendNext("So, have you defeated the giant? Oh, a Black Wing agent undercover? And he GOT THE SEAL STONE OF ORBIS?! Oh, no. That's horrible! We need to develop countermeasures as soon as possible! Tell the informant on Lith about the situation.");
-        } else {
-            qm.gainExp(29500);
+        } else if (status == 1) {
             qm.forceCompleteQuest();
+            qm.gainExp(29500);
             qm.dispose();
         }
     }
diff --git a/scripts/quest/21740.js b/scripts/quest/21740.js
index f5f4fd3b8..e1800ca83 100644
--- a/scripts/quest/21740.js
+++ b/scripts/quest/21740.js
@@ -61,10 +61,9 @@ function end(mode, type, selection) {
             qm.sendNext("Oh, hi #h0#! You won't believe what I just uncovered. It's one of your lost skills... What, the seal of Orbis got stolen by the Black Wings? Oh my...");
         } else if(status == 1) {
             qm.sendNext("For now, let me teach you the #bCombo Smash#k, with it you will be able to deal massive amount of damage to many monsters at once. We will need to use it if we want to stand a chance against the Black Wings now, so don't forget it!");
-        } else {
-            qm.teachSkill(21100004, 0, 20, -1); // combo smash
-            
+        } else if(status == 2) {
             qm.forceCompleteQuest();
+            qm.teachSkill(21100004, 0, 20, -1); // combo smash
             qm.dispose();
         }
     }
diff --git a/scripts/quest/21741.js b/scripts/quest/21741.js
index e59180098..25bebfd53 100644
--- a/scripts/quest/21741.js
+++ b/scripts/quest/21741.js
@@ -38,9 +38,9 @@ function start(mode, type, selection) {
             qm.sendNext("Have you been advancing your levels? I found an interesting piece of information about the Black Wings. This time, you'll have to travel quite a bit. Do you know a town called #bMu Lung#k? You'll have to head there.");
         } else if (status == 1) {
             qm.sendAcceptDecline("Apparently, #bMr. Do#k in Mu Lung somehow met with the Black Wings. I don't know the details. Please go and find out why the Black Wings contacted Mr. Do and what exactly happened between them.");
-        } else {
+        } else if (status == 2) {
             qm.sendNext("Mr. Do is known to be curt, so you are going to have to remain patient while talking to him. Talk to him with the #bI heard you met the Shadow Knight of the Black Wings#k keyword.");
-            
+        } else if (status == 3) {
             qm.forceStartQuest();
             qm.dispose();
         }
diff --git a/scripts/quest/21749.js b/scripts/quest/21749.js
index e628d2707..8d3816765 100644
--- a/scripts/quest/21749.js
+++ b/scripts/quest/21749.js
@@ -38,9 +38,9 @@ function start(mode, type, selection) {
             qm.sendNext("So we have lost #btwo seal stones#k so far, from the neighboring areas of #rOrbis#k and #rMu Lung#k... Things are starting to get out of control, it seems.");
         } else if (status == 1) {
             qm.sendNext("Aran, your next objective will be to use the #btime gate to Ellin#k again. This time you will be retrieving the long lost #rSeal Stone of Ellin Forest#k. According to informations our network have gathered, #b#p2131002##k of that time have a clue about that gem, #rfind her#k. Please be successful on this task, our world is relying on you more than ever!");
-        } else {
-            qm.gainExp(500);
+        } else if (status == 2) {
             qm.forceCompleteQuest();
+            qm.gainExp(500);
             qm.dispose();
         }
     }
diff --git a/scripts/quest/21750.js b/scripts/quest/21750.js
index ea2dd7cd7..b10b401ea 100644
--- a/scripts/quest/21750.js
+++ b/scripts/quest/21750.js
@@ -36,7 +36,7 @@ function end(mode, type, selection) {
         
         if (status == 0) {
             qm.sendNext("Aran, you're finally back!!! How you've been doing? Where did you go for so long? We have so much to catch up...");
-        } else {
+        } else if (status == 1) {
             qm.forceCompleteQuest();
             qm.dispose();
         }
diff --git a/scripts/quest/21753.js b/scripts/quest/21753.js
index e59a01ca8..91e35ccce 100644
--- a/scripts/quest/21753.js
+++ b/scripts/quest/21753.js
@@ -38,8 +38,8 @@ function start(mode, type, selection) {
             qm.sendNext("Aran, I've discovered some disturbing news... You said you've come from the eastern forest section, right? We traced and studied the magic being used to support the portal over there. It turns out that's of a #rtemporal#k-type. The garments you're using... They were never seen around before. That must mean, #ryou must have come from the future#k.");
         } else if (status == 1) {
             qm.sendNext("Now about the problem: the Seal Stone that seems to have been missing in your timeline... It is a powerful artifact, that prevents the army of the #rBlack Mage#k from laying siege on our world. If that stone goes away, nothing more can prevent him. As this is a matter of great importance, find the #rself of mine#k from the future. I'm actually a #rfairy#k with a great life expectancy, I must be alive even on your timeline. Got it, #rfetch the me from the future#k!");
+        } else if (status == 2) {
             qm.forceStartQuest();
-            
             qm.dispose();
         }
     }
diff --git a/scripts/quest/21757.js b/scripts/quest/21757.js
index 71dcf5780..2f344bef3 100644
--- a/scripts/quest/21757.js
+++ b/scripts/quest/21757.js
@@ -36,11 +36,10 @@ function end(mode, type, selection) {
         
         if (status == 0) {
             qm.sendNext("Oh, a letter for the #rempress#k? From the #bheroes#k?!");
-        } else {
+        } else if (status == 1) {
+            qm.forceCompleteQuest();
             qm.gainExp(1000);
             qm.gainItem(4032330, -1);
-            qm.forceCompleteQuest();
-            
             qm.dispose();
         }
     }
diff --git a/scripts/quest/21766.js b/scripts/quest/21766.js
index 8c55c5323..dbcbb141b 100644
--- a/scripts/quest/21766.js
+++ b/scripts/quest/21766.js
@@ -10,14 +10,14 @@ function start(mode, type, selection) {
 		qm.sendNext("I have a feeling there is a secret behind that wooden box. Could you stealthily look into the wooden box next to #p20000#?");
 	} else if (status == 3) {
 		qm.sendNext("You know where #p20000# is, right? He's to the right. Just keep going until you see where Vikin is, then head down past the hanging shark and octopus, and you''ll see John. The box should be right next to him.");
-	} else {
+	} else if (status == 4) {
                 qm.forceStartQuest();
 		qm.dispose();
         }
 }
 
 function end(mode, type, selection) {
-	qm.gainExp(200);
 	qm.forceCompleteQuest();
+	qm.gainExp(200);
 	qm.dispose();
 }
\ No newline at end of file
diff --git a/scripts/quest/21767.js b/scripts/quest/21767.js
index 5d8d77451..de63158d0 100644
--- a/scripts/quest/21767.js
+++ b/scripts/quest/21767.js
@@ -1,4 +1,5 @@
 var status = -1;
+var canStart;
 
 function start(mode, type, selection) {
 	status++;
@@ -8,12 +9,20 @@ function start(mode, type, selection) {
                         qm.dispose();
                         return;
                 }
+                
+                canStart = qm.canHold(4032423, 1);
+                if(!canStart) {
+                        qm.sendNext("Please open a slot in your ETC inventory first.");
+                        return;
+                }
             
 		qm.sendNext("#bHm, there's a medicinal substance in the box. What could this be? You better take this to John and ask him what it is.#k");
-	} else {
-                qm.gainItem(4032423,1);
-		
-                qm.forceStartQuest();
+	} else if (status == 1) {
+                if(canStart) {
+                        qm.gainItem(4032423,1);
+                        qm.forceStartQuest();
+                }
+                
 		qm.dispose();
 	}
 }
\ No newline at end of file
diff --git a/scripts/quest/2186.js b/scripts/quest/2186.js
index 5361dd9c9..56ca1e0a3 100644
--- a/scripts/quest/2186.js
+++ b/scripts/quest/2186.js
@@ -4,37 +4,53 @@
 */
 
 function end(mode, type, selection){
-    if(!qm.isQuestCompleted(2186)) {
-        if(qm.haveItem(4031853)){
-            if(qm.canHold(2030019)) {
-                qm.gainItem(4031853, -1);
-                qm.gainExp(1700);
-                qm.gainItem(2030019, 10);
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            if(!qm.isQuestCompleted(2186)) {
+                if(qm.haveItem(4031853)){
+                    if(qm.canHold(2030019)) {
+                        qm.gainItem(4031853, -1);
+                        qm.gainExp(1700);
+                        qm.gainItem(2030019, 10);
 
-                qm.sendOk("Geez, you found my glasses! Thank you, thank you so much. Now I'm able to see everything again!");
-                qm.forceCompleteQuest();
-            }
-            else {
-                qm.sendOk("I need you to have an USE slot available to reward you properly!");
-            }
-        }else if(qm.haveItem(4031854) || qm.haveItem(4031855)){ //When I figure out how to make a completance with just a pickup xD
-            if(qm.canHold(2030019)) {
-                if(qm.haveItem(4031854))
-                    qm.gainItem(4031854, -1);
-                else
-                    qm.gainItem(4031855, -1);
-                   
-                qm.gainExp(1000);
-                qm.gainItem(2030019, 5);
- 
-                qm.sendOk("Hm, those aren't my glasses... But alas, I'll take it anyway. Thanks.");
-                qm.forceCompleteQuest();
-            }
-            else {
-                qm.sendOk("I need you to have an USE slot available to reward you properly!");
+                        qm.sendOk("Geez, you found my glasses! Thank you, thank you so much. Now I'm able to see everything again!");
+                        qm.forceCompleteQuest();
+                    }
+                    else {
+                        qm.sendOk("I need you to have an USE slot available to reward you properly!");
+                    }
+                }else if(qm.haveItem(4031854) || qm.haveItem(4031855)){ //When I figure out how to make a completance with just a pickup xD
+                    if(qm.canHold(2030019)) {
+                        if(qm.haveItem(4031854))
+                            qm.gainItem(4031854, -1);
+                        else
+                            qm.gainItem(4031855, -1);
+
+                        qm.gainExp(1000);
+                        qm.gainItem(2030019, 5);
+
+                        qm.sendOk("Hm, those aren't my glasses... But alas, I'll take it anyway. Thanks.");
+                        qm.forceCompleteQuest();
+                    }
+                    else {
+                        qm.sendOk("I need you to have an USE slot available to reward you properly!");
+                    }
+                }
             }
+        } else if (status == 1) {
+            qm.dispose();
         }
     }
-    
-    qm.dispose();
 }
\ No newline at end of file
diff --git a/scripts/quest/2197.js b/scripts/quest/2197.js
index 1f924c8e9..d2fa18169 100644
--- a/scripts/quest/2197.js
+++ b/scripts/quest/2197.js
@@ -1,12 +1,46 @@
 var status = -1;
 
 function start(mode, type, selection) {
-	qm.sendNext("Oh, you already have monster book. Good luck on your journey~!");
-	qm.forceCompleteQuest();
-	qm.dispose();
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.sendNext("Oh, you already have monster book. Good luck on your journey~!");
+        } else if (status == 1) {
+            qm.forceCompleteQuest();
+            qm.dispose();
+        }
+    }
 }
 function end(mode, type, selection) {
-	qm.sendNext("Oh, you already have monster book. Good luck on your journey~!");
-	qm.forceCompleteQuest();
-	qm.dispose();
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.sendNext("Oh, you already have monster book. Good luck on your journey~!");
+        } else if (status == 1) {
+            qm.forceCompleteQuest();
+            qm.dispose();
+        }
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/22001.js b/scripts/quest/22001.js
index d86963465..98ce206ec 100644
--- a/scripts/quest/22001.js
+++ b/scripts/quest/22001.js
@@ -25,7 +25,8 @@ function start(mode, type, selection) {
 			qm.sendNext("Hurry up and head #bleft#k to feed #b#p1013102##k. He's been barking to be fed all morning.");
 		}
 	} else if (status == 4) {
-		qm.sendPrev("Feed #p1013102# and come back to see me.");
-		qm.dispose();
-	}
+		qm.sendNextPrev("Feed #p1013102# and come back to see me.");
+	} else if (status == 5) {
+                qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/22002.js b/scripts/quest/22002.js
index 0ab83b73d..d759a4ec9 100644
--- a/scripts/quest/22002.js
+++ b/scripts/quest/22002.js
@@ -40,10 +40,10 @@ function end(mode, type, selection) {
 	if (status == 0) {
 		qm.sendNext("Did you eat your breakfast, Evan? Then, will you do me a favor?  \r\n\r\n#fUI/UIWindow.img/QuestIcon/4/0# \r\n#i1003028# 1 #t1003028#  \r\n#i2022621# 5 #t2022621#s \r\n#i2022622# 5 #t2022622# \r\n#fUI/UIWindow.img/QuestIcon/8/0# 60 exp");
 	} else if (status == 1) {
-		qm.gainItem(1003028, 1, true);
+		qm.forceCompleteQuest();
+                qm.gainItem(1003028, 1, true);
 		qm.gainItem(2022621, 5, true);
 		qm.gainItem(2022622, 5, true);
-		qm.forceCompleteQuest();
 		qm.gainExp(60);
 		qm.sendImage("UI/tutorial/evan/4/0");
 		qm.dispose();
diff --git a/scripts/quest/22007.js b/scripts/quest/22007.js
index 9ecdb28ad..19519e523 100644
--- a/scripts/quest/22007.js
+++ b/scripts/quest/22007.js
@@ -22,6 +22,7 @@ function end(mode, type, selection) {
 			qm.gainExp(360);
 			qm.sendImage("UI/tutorial/evan/9/0");
 		}
-		qm.dispose();
-	}
+	} else if (status == 3) {
+                qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/22008.js b/scripts/quest/22008.js
index b59b031a8..cf5431dad 100644
--- a/scripts/quest/22008.js
+++ b/scripts/quest/22008.js
@@ -69,6 +69,7 @@ function end(mode, type, selection) {
 		qm.sendNextPrev("#bThis is a weapon that Magicians use. It's a Wand#k. You probably won't really need it, but it'll make you look important if you carry it around. Hahahahaha.");
 	} else if (status == 13) {
 		qm.sendPrev("Anyway, the Foxes have increased, right? How weird is that? Why are they growing day by day? We should really look into it and get to the bottom of this.");
-		qm.dispose();
-	}
+	} else if (status == 14) {
+                qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/2214.js b/scripts/quest/2214.js
index e76ce9d2e..c4b595208 100644
--- a/scripts/quest/2214.js
+++ b/scripts/quest/2214.js
@@ -26,6 +26,7 @@
 */
 
 var status = -1;
+var canComplete;
 
 function end(mode, type, selection) {
     if (mode == -1) {
@@ -45,20 +46,24 @@ function end(mode, type, selection) {
             var hourDay = qm.getHourOfDay();
             if(!(hourDay >= 17 && hourDay < 20)) {
                 qm.sendNext("(Hmm, I'm searching the trash can but can't find the #t4031894# JM was talking about, maybe it's not time yet...)");
-                qm.dispose();
+                canComplete = false;
                 return;
             }
             
             if(!qm.canHold(4031894, 1)) {
                 qm.sendNext("(Eh, I can't hold the #t4031894# right now, I need an ETC slot available.)");
-                qm.dispose();
+                canComplete = false;
                 return;
             }
             
+            canComplete = true;
             qm.sendNext("(Ah, there is a crumbled note here... Hm, it contains details about some scheme that is about to happen, that must be what #r#p1052002##k was talking about.)");
-            qm.gainItem(4031894, 1);
-            qm.gainExp(20000);
-            qm.forceCompleteQuest();
+        } else if (status == 1) {
+            if (canComplete) {
+                qm.forceCompleteQuest();
+                qm.gainItem(4031894, 1);
+                qm.gainExp(20000);
+            }
             
             qm.dispose();
         }
diff --git a/scripts/quest/2215.js b/scripts/quest/2215.js
index 4f0070edb..e486d7479 100644
--- a/scripts/quest/2215.js
+++ b/scripts/quest/2215.js
@@ -26,6 +26,7 @@
 */
 
 var status = -1;
+var canComplete;
 
 function end(mode, type, selection) {
     if (mode == -1) {
@@ -45,26 +46,30 @@ function end(mode, type, selection) {
             var hourDay = qm.getHourOfDay();
             if(!(hourDay >= 17 && hourDay < 20)) {
                 qm.sendNext("(Hmm, I'm searching the trash can but can't find the #t4031894# JM was talking about, maybe it's not time yet...)");
-                qm.dispose();
+                canComplete = false;
                 return;
             }
             
             if(qm.getMeso() < 2000) {
                 qm.sendNext("(Oh, I don't have the combined fee amount yet.)");
-                qm.dispose();
+                canComplete = false;
                 return;
             }
             
             if(!qm.canHold(4031894, 1)) {
                 qm.sendNext("(Eh, I can't hold the #t4031894# right now, I need an ETC slot available.)");
-                qm.dispose();
+                canComplete = false;
                 return;
             }
             
+            canComplete = true;
             qm.sendNext("(Alright, now I will deposit the fee there and get the paper... That's it, yea, that's done.)");
-            qm.gainItem(4031894, 1);
-            qm.gainMeso(-2000);
-            qm.forceCompleteQuest();
+        } else if (status == 1) {
+            if (canComplete) {
+                qm.gainMeso(-2000);
+                qm.forceCompleteQuest();
+                qm.gainItem(4031894, 1);
+            }
             
             qm.dispose();
         }
diff --git a/scripts/quest/2216.js b/scripts/quest/2216.js
index 081692151..68f56e27f 100644
--- a/scripts/quest/2216.js
+++ b/scripts/quest/2216.js
@@ -36,8 +36,9 @@ function start(mode, type, selection) {
         
         if (status == 0) {
             qm.sendNext("I've just gathered an interesting information, #rDyle looks just like regular Ligators#k, but bigger.");
-            qm.gainExp(7000);
+        } else if (status == 1) {
             qm.forceCompleteQuest();
+            qm.gainExp(7000);
             
             if(isAllSubquestsDone() && qm.haveItem(4031894)) {
                 qm.gainItem(4031894, -1);
diff --git a/scripts/quest/2217.js b/scripts/quest/2217.js
index 72b4e81f3..c2dbd7b7d 100644
--- a/scripts/quest/2217.js
+++ b/scripts/quest/2217.js
@@ -36,8 +36,9 @@ function start(mode, type, selection) {
         
         if (status == 0) {
             qm.sendNext("Hey, did you notice already, it looks like some awful stench is emanating from the sewers... Ewww");
-            qm.gainExp(7000);
+        } else if (status == 1) {
             qm.forceCompleteQuest();
+            qm.gainExp(7000);
             
             if(isAllSubquestsDone() && qm.haveItem(4031894)) {
                 qm.gainItem(4031894, -1);
diff --git a/scripts/quest/2218.js b/scripts/quest/2218.js
index 80d8ee774..7e1c47dcd 100644
--- a/scripts/quest/2218.js
+++ b/scripts/quest/2218.js
@@ -36,8 +36,9 @@ function start(mode, type, selection) {
         
         if (status == 0) {
             qm.sendNext("Hey did you see how strange #rLakelis#k has been acting these days? We should see what's going on aabout her, her actions have been so weird lately...");
-            qm.gainExp(7000);
+        } else if (status == 1) {
             qm.forceCompleteQuest();
+            qm.gainExp(7000);
             
             if(isAllSubquestsDone() && qm.haveItem(4031894)) {
                 qm.gainItem(4031894, -1);
diff --git a/scripts/quest/2219.js b/scripts/quest/2219.js
index ee04b77db..2a8730e35 100644
--- a/scripts/quest/2219.js
+++ b/scripts/quest/2219.js
@@ -36,8 +36,9 @@ function start(mode, type, selection) {
         
         if (status == 0) {
             qm.sendNext("Did you know, they say someone from the sewers has been trying to #rdevelop a magic powder that let's one to grow#k, isn't that nice?");
-            qm.gainExp(7000);
+        } else if (status == 1) {
             qm.forceCompleteQuest();
+            qm.gainExp(7000);
             
             if(isAllSubquestsDone() && qm.haveItem(4031894)) {
                 qm.gainItem(4031894, -1);
diff --git a/scripts/quest/2228.js b/scripts/quest/2228.js
index fe7a66086..d7e9826d2 100644
--- a/scripts/quest/2228.js
+++ b/scripts/quest/2228.js
@@ -36,10 +36,9 @@ function start(mode, type, selection) {
         
         if (status == 0) {
             qm.sendNext("Thank you for defeating #rFaust#k. That will finally settle my spirit to rest.");
-        } else {
-            qm.gainFame(8);
-            
+        } else if (status == 1) {
             qm.forceCompleteQuest();
+            qm.gainFame(8);
             qm.dispose();
         }
     }
diff --git a/scripts/quest/2230.js b/scripts/quest/2230.js
index 7aa7e5d5f..2da466673 100644
--- a/scripts/quest/2230.js
+++ b/scripts/quest/2230.js
@@ -28,6 +28,7 @@
 */
 
 var status = -1;
+var canComplete;
 
 function start(mode, type, selection) {
     if (mode == -1) {
@@ -45,6 +46,8 @@ function start(mode, type, selection) {
             qm.sendOk("Put your hand in your pocket. I think your friend has already found you.\r\nThe purple bellflower that soaks in the sun in between the skyscraping trees...Follow the path to the unknown that leads you to the bellflower. I will wait for you here.");
             qm.forceStartQuest();
             qm.gainItem(4032086, 1); // Mysterious Egg * 1
+        } else if (status == 3) {
+            qm.dispose();
         }
     }
 }
@@ -76,11 +79,20 @@ function end(mode, type, selection) {
         } else if (status == 5) {
             qm.sendYesNo("Now do you understand? Every action comes with consequences, and pets are no exception. The egg of the snail shall hatch soon.");
         } else if (status == 6) {
-            qm.gainItem(5000054, 1, false, true, 5 * 60 * 60 * 1000);  // rune snail (5hrs), missing expiration time detected thanks to cljnilsson
+            canComplete = qm.canHold(5000054, 1);
+            if (!canComplete) {
+                qm.sendNext("Please free a slot in your CASH inventory before you try to receive the pet...");
+                return;
+            }
             
-            qm.gainItem(4032086, -1); // Mysterious Egg * -1
-            qm.forceCompleteQuest();
             qm.sendNext("This snail will only be alive for #b5 hours#k. Shower it with love. Your love will be reciprocated in the end.");
+        } else if (status == 7) {
+            if (canComplete) {
+                qm.gainItem(4032086, -1); // Mysterious Egg * -1
+                qm.forceCompleteQuest();
+                qm.gainItem(5000054, 1, false, true, 5 * 60 * 60 * 1000);  // rune snail (5hrs), missing expiration time detected thanks to cljnilsson
+            }
+            
             qm.dispose();
         }
     }
diff --git a/scripts/quest/2236.js b/scripts/quest/2236.js
index e460077dd..41e90b07a 100644
--- a/scripts/quest/2236.js
+++ b/scripts/quest/2236.js
@@ -8,6 +8,7 @@ Version 1.0 - Script Done.(20/3/2017)
 */
 
 var status = -1;
+var canStart;
 
 function start(mode, type, selection) {
     status++;
@@ -16,20 +17,28 @@ function start(mode, type, selection) {
 		    status -= 2;
 		else{
 			qm.sendOk("If we don't place these Charms on the Shaman Rocks, evil might awaken...");
-			qm.dispose();
+                        canStart = false;
+                        status = 0;
 			return;
 		}
 	}
-	if (status == 0)
+	if (status == 0) {
 		qm.sendAcceptDecline("I can feel the forces of evil. They're deep inside the dungeon and they're very, very powerful. If we want to drive the evil away from this place, we must place Charms on the Shaman Rocks inside the dungeon. Will you do that for me?");
-	if (status == 1){
-		if(qm.haveItem(4032263)) qm.gainItem(4032263, -6);
+                canStart = true;
+	} else if (status == 1) {
+                if (canStart) {
+                        qm.sendOk("Take these Charms and place them on the Shaman Rocks in the dungeon. I'm giving you a total of 6 Charms.");
+                } else {
+                        qm.dispose();
+                }
+	} else {
+                qm.forceStartQuest();
+                
+                if(qm.haveItem(4032263)) qm.gainItem(4032263, -6);
 		qm.gainItem(4032263, 6);
-
-		qm.sendOk("Take these Charms and place them on the Shaman Rocks in the dungeon. I'm giving you a total of 6 Charms.");
-		qm.forceStartQuest();
+                
 		qm.dispose();
-	}
+        }
 }
 
 function end(mode, type, selection) {
@@ -48,7 +57,7 @@ function end(mode, type, selection) {
 			qm.sendOk("Oh, not good. I still sense bad omens coming from the interior. Here, take these charms and seal them at the Shaman Rocks. We are counting on you.");
 			qm.updateQuest(2236, 0);
 		}
-	
+	} else if (status == 1) {
 		qm.dispose();
-	}
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/2245.js b/scripts/quest/2245.js
index f5d503c15..200768881 100644
--- a/scripts/quest/2245.js
+++ b/scripts/quest/2245.js
@@ -38,7 +38,6 @@ function start(mode, type, selection) {
             em = qm.getEventManager("BalrogQuest");
             if (em == null) {
                 qm.sendOk("Sorry, but the BalrogQuest is closed.");
-                qm.dispose();
                 return;
             }
             
@@ -47,8 +46,9 @@ function start(mode, type, selection) {
                 qm.sendOk("There is currently someone in this map, come back later.");
             } else {
                 qm.forceStartQuest();
+                qm.dispose();
             }
-
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/22501.js b/scripts/quest/22501.js
index 129d3d1e9..e329b8d49 100644
--- a/scripts/quest/22501.js
+++ b/scripts/quest/22501.js
@@ -20,11 +20,11 @@ function start(mode, type, selection) {
 	} else if (status == 4) {
 		if (mode == 0) {
 			qm.sendNext("*gasp* How can you refuse to feed your Dragon? This is child abuse! ");
-			qm.dispose();
 		} else {
 			qm.forceStartQuest();
 			qm.sendOk("#b#b(#p1013000# the baby Dragon appears to be extremely hungry. You must feed him. Maybe your Dad can give you advice on what dragons eat.)");
-			qm.dispose();
 		}
-	}
+	} else if (status == 5) {
+                qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/22502.js b/scripts/quest/22502.js
index af95553b7..6abcf2a1c 100644
--- a/scripts/quest/22502.js
+++ b/scripts/quest/22502.js
@@ -18,6 +18,6 @@ function start(mode, type, selection) {
 			qm.forceStartQuest();
 			qm.sendImage("UI/tutorial/evan/12/0");
 		}
-		qm.dispose();		
-	}
-}
\ No newline at end of file
+                qm.dispose();
+        }
+}
diff --git a/scripts/quest/22503.js b/scripts/quest/22503.js
index 851808fa5..b1f931d2b 100644
--- a/scripts/quest/22503.js
+++ b/scripts/quest/22503.js
@@ -22,6 +22,7 @@ function start(mode, type, selection) {
 			qm.forceStartQuest();
 			qm.sendNext("#b#b(Try giving #p1013000# some #t4032453#. You have to hunt a few #o1210100#s at the farm. Ten should be plenty...)");
 		}
-		qm.dispose();
-	}
+	} else if (status == 4) {
+                qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/22504.js b/scripts/quest/22504.js
index 118850099..a77be2beb 100644
--- a/scripts/quest/22504.js
+++ b/scripts/quest/22504.js
@@ -22,5 +22,7 @@ function start(mode, type, selection) {
 			qm.forceStartQuest();
 			qm.sendNext("#b#b(You already asked Dad once, but you don't have any better ideas. Time to ask him again!)");
 		}
-	}
+	} else if (status == 4) {
+                qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/22507.js b/scripts/quest/22507.js
index 8e3319f49..bbd890fb0 100644
--- a/scripts/quest/22507.js
+++ b/scripts/quest/22507.js
@@ -53,6 +53,7 @@ function start(mode, type, selection) {
 		qm.sendNextPrev("#b(You're a bit confused, but you are now traveling with Mir the Dragon. Perhaps you'll go on an adventure together, like he said.)", 2);
 	} else if (status == 17) {	
 		qm.sendPrev("#b#b(You still have an errand to run. Your dad needs to talk to you, so go and see him now.)");
-		qm.dispose();
-	}
+	} else if (status == 18) {
+                qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/2251.js b/scripts/quest/2251.js
index 31b5cbf4f..0eea0dc77 100644
--- a/scripts/quest/2251.js
+++ b/scripts/quest/2251.js
@@ -6,16 +6,31 @@
 */
 
 function end(mode, type, selection) {
-    
-    if(!qm.haveItem(4032399, 20)) {
-        qm.sendOk("Please bring me 20 #b#t4032399##k...  #i4032399#");
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            if(!qm.haveItem(4032399, 20)) {
+                qm.sendOk("Please bring me 20 #b#t4032399##k...  #i4032399#");
+            }
+            else {
+                qm.gainItem(4032399, -20);
+                qm.sendOk("Oh, you brought 20 #b#t4032399##k! Thank you.");
+                qm.gainExp(8000);
+                qm.forceCompleteQuest();
+            }
+        } else if (status == 1) {
+            qm.dispose();
+        }
     }
-    else {
-        qm.gainItem(4032399, -20);
-        qm.sendOk("Oh, you brought 20 #b#t4032399##k! Thank you.");
-        qm.gainExp(8000);
-        qm.forceCompleteQuest();
-    }
-    
-    qm.dispose();
 }
\ No newline at end of file
diff --git a/scripts/quest/2257.js b/scripts/quest/2257.js
index 94a483926..f21d36115 100644
--- a/scripts/quest/2257.js
+++ b/scripts/quest/2257.js
@@ -36,7 +36,7 @@ function end(mode, type, selection) {
         
         if (status == 0) {
             qm.sendNext("Hey there, do you want a ride to #r#m261000000##k? Oh a request from #b#p2101013##k?");
-        } else {
+        } else if (status == 1) {
             qm.forceCompleteQuest();
             qm.dispose();
         }
diff --git a/scripts/quest/2258.js b/scripts/quest/2258.js
index 78ae39521..8f2d5f090 100644
--- a/scripts/quest/2258.js
+++ b/scripts/quest/2258.js
@@ -38,7 +38,7 @@ function start(mode, type, selection) {
             qm.sendAcceptDecline("Meerkats spreads rumors like wildfire... By blackmailing me and my cab service, they are taking costumers away from me day after day... Hey, tell no one about this, if you clean some #rMeerkats#k from my way, I'll tell you an info about the #rMushroom Castle#k. What do you say?");
         } else if (status == 1) {
             qm.sendNext("Great, they you have #r5 minutes#k to kill #b40 Meerkats#k within this time. Good luck!");
-        } else {
+        } else if (status == 2) {
             qm.forceStartQuest();
             qm.dispose();
         }
@@ -61,7 +61,7 @@ function end(mode, type, selection) {
         
         if (status == 0) {
             qm.sendNext("You did it! ... Hey, #rMeerkats#k around here may listen to our conversation. I'm not going to talk about THAT right now.");
-        } else {
+        } else if (status == 1) {
             qm.forceCompleteQuest();
             qm.dispose();
         }
diff --git a/scripts/quest/2259.js b/scripts/quest/2259.js
index ac59e7278..783dfc5cf 100644
--- a/scripts/quest/2259.js
+++ b/scripts/quest/2259.js
@@ -60,13 +60,12 @@ function end(mode, type, selection) {
         if (status == 0) {
             if(qm.getMapId() == 260020000) {
                 qm.sendNext("Eh you're still here? To reach #b#m260020700##k, follow #reast#k from here until you reach #rMagatia#k, I will be there. Now go.");
-                qm.dispose();
                 return;
             }
             
             qm.sendNext("Oh there you are. There're no Meerkat's nearby, so there probably is no eavesdropping around here. Very well, you must be fit to go to the #rMushroom Castle#k. Talk to me once you've got #blevel 30#k.");
-        } else {
             qm.forceCompleteQuest();
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/2260.js b/scripts/quest/2260.js
index 0603161ac..4c196cdf2 100644
--- a/scripts/quest/2260.js
+++ b/scripts/quest/2260.js
@@ -38,7 +38,7 @@ function start(mode, type, selection) {
         
         if (status == 0) {
             qm.sendNext("Once you've got #b2nd job advancement#k, I'll tell you about the #bMushroom Castle#k.");
-        } else {
+        } else if (status == 1) {
             qm.forceStartQuest();
             qm.dispose();
         }
@@ -67,8 +67,8 @@ function end(mode, type, selection) {
             }
             
             qm.sendNext("Okay you seem ready to go to the #bMushroom Castle#k. In #rHenesys#k, climb at the tree fort at #bwest#k then enter a portal over there. On the other area, #rgo west#k. From there, a portal will be readily available to access the #bMushroom Castle#k area.");
-        } else {
             qm.forceCompleteQuest();
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/2293.js b/scripts/quest/2293.js
index c19bb7064..dd9cefc5d 100644
--- a/scripts/quest/2293.js
+++ b/scripts/quest/2293.js
@@ -37,9 +37,12 @@ function start(mode, type, selection) {
     if(status == 0)
     {
         qm.sendNext("Do you remember the last song that the Spirit of Rock played? I can think of a few songs that he may be imitating, so listen carefully and tell me which song it is. #bYou only get one chance,#k so please choose wisely.");
+        qm.forceStartQuest();
+    }
+    else if(status == 1)
+    {
+        qm.dispose();
     }
-    qm.forceStartQuest();
-    qm.dispose();
 }
 
 function end(mode, type, selection)
@@ -92,19 +95,24 @@ function end(mode, type, selection)
         if(selection == 1)
         {
             qm.sendOk("Obviously you don't enjoy music.");
-            qm.dispose();
         }
         else if(selection == 2)
         {
             qm.sendOk("I suppose you could get #b#eone#n#k more chance.");
-            qm.dispose();
         }
         else if(selection == 3)
         {
             qm.sendOk("So that was the song he was playing... Well, it wasn't my song after all, but I'm glad I can know that now with certainty. Thank you so much.");
-            qm.gainExp(32500);
             qm.forceCompleteQuest();
+            qm.gainExp(32500);
+        }
+        else
+        {
             qm.dispose();
         }
     }
+    else if(status == 3)
+    {
+        qm.dispose();
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/2312.js b/scripts/quest/2312.js
index 3b667a8d6..3b72709be 100644
--- a/scripts/quest/2312.js
+++ b/scripts/quest/2312.js
@@ -25,11 +25,12 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendAcceptDecline("We need your help, noble explorer. Our kingdom is currently facing a big threat, and we are in desperate need of a courageous explorer willing to fight for us, and that's how you ended up here. Please understand, though, that since we need place our faith in you, we'll have to test your skills first before we can stand firmly behind you. Will it be okay for you to do this for us?");
-	if (status == 1){
+	else if (status == 1){
 		qm.forceStartQuest();
 		qm.sendOk("Keep moving forward, and you'll see #bRenegade Spores#k, the Spores that turned their backs on the Kingdom of Mushroom. We'd appreciate it if you can teach them a lesson or two, and bring back #b50 Mutated Spores#k in return.");
-		qm.dispose();
-	}
+	} else if (status == 2){
+                qm.dispose();
+        }
 }
 
 function end(mode, type, selection) {
@@ -44,12 +45,13 @@ function end(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendOk("Did you teach those Renegade Spores a lesson?");
-	if (status == 1){
+	else if (status == 1){
 		qm.forceCompleteQuest();
 		qm.gainExp(11500);
 		qm.gainItem(4000499, -50);
 		qm.sendOk("That was amazing. I apologize for doubting your abilities. Please save our Kingdom of Mushroom from this crisis!");
-		qm.dispose();
-	}
+	} else if (status == 2){
+                qm.dispose();
+        }
 }
 	
\ No newline at end of file
diff --git a/scripts/quest/2313.js b/scripts/quest/2313.js
index 40b9d0401..e5e69bd56 100644
--- a/scripts/quest/2313.js
+++ b/scripts/quest/2313.js
@@ -25,11 +25,12 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendAcceptDecline("I have told our #bMinister of Home Affairs#k of your abilities. Please go pay a visit to him immediately.");
-	if (status == 1){
+	else if (status == 1){
 		qm.forceStartQuest();
 		qm.sendOk("Save our kingdom! We believe in you!");
-		qm.dispose();
-	}
+	} else if (status == 2){
+                qm.dispose();
+        }
 }
 
 function end(mode, type, selection) {
diff --git a/scripts/quest/2314.js b/scripts/quest/2314.js
index cfa542d54..58b157d0e 100644
--- a/scripts/quest/2314.js
+++ b/scripts/quest/2314.js
@@ -23,16 +23,17 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendAcceptDecline("In order to rescue the princess, you must first navigate the Mushroom Forest. King Pepe set up a powerful barrier forbidding anyone from entering the castle. Please investigate this matter for us.");
-	if (status == 1)
+	else if (status == 1)
 		qm.sendNext("You'll run into the barrier at the Mushroom Forest by heading east of where you are standing right now. Please be careful. I hear that the area is infested with crazy, fear-inducing monsters.");
-	if(status == 2){
+	else if(status == 2){
 		//qm.forceStartQuest();
 		//qm.forceStartQuest(2314,"1");
 		qm.gainExp(8300);
 		qm.sendOk("I see, so it was indeed not a regular barrier by any means. Great work there. If not for you help, we wouldn't have had a clue as to what that was all about.");
 		qm.forceCompleteQuest(); 
-		qm.dispose();
-	}
+	} else if(status == 3){
+                qm.dispose();
+        }
 }
 
 function end(mode, type, selection) {
@@ -47,11 +48,12 @@ function end(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendOk("I see that you have thoroughly investigated the barrier at the Mushroom Forest. What was it like?");
-	if (status == 1){
+	else if (status == 1){
+		qm.forceCompleteQuest(); 
 		qm.gainExp(8300);
 		qm.sendOk("I see, so it was indeed not a regular barrier by any means. Great work there. If not for you help, we wouldn't have had a clue as to what that was all about.");
-		qm.forceCompleteQuest(); 
-		qm.dispose();
-		}
-	}
+        } else if (status == 2){
+                qm.dispose();
+        }
+}
 	
\ No newline at end of file
diff --git a/scripts/quest/2315.js b/scripts/quest/2315.js
index e345ab6e2..b0571a862 100644
--- a/scripts/quest/2315.js
+++ b/scripts/quest/2315.js
@@ -25,11 +25,12 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendAcceptDecline("A powerful barrier of magic, huh? Then what should we do...? If we can't find a way to break that barrier, then we can't save the princess. If it's impossible to physically break through, as you mentioned, then how about requesting help from our #bMinister of Magic#k?");
-	if (status == 1){
+	else if (status == 1){
 		qm.forceStartQuest();
 		qm.sendOk("Please go see him immediately. The #bMinister of Magic#k may seem a bit on the edge, but he's very knowledgeable, and I'm sure he'll know what to do.");
-		qm.dispose();
-	}
+	} else if (status == 2){
+                qm.dispose();
+        }
 }
 
 function end(mode, type, selection) {
@@ -44,11 +45,12 @@ function end(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendOk("What? You investigated the barrier at the Mushroom Forest?");
-	if (status == 1){
-		qm.gainExp(4000);
-		qm.sendOk("Hmmm...this is interesting. It's a barrier set up by someone with a powerful force of magic, which means there's no way we can manually break through it.");
+	else if (status == 1){
 		qm.forceCompleteQuest(); 
-		qm.dispose();
-	}
+                qm.gainExp(4000);
+		qm.sendOk("Hmmm...this is interesting. It's a barrier set up by someone with a powerful force of magic, which means there's no way we can manually break through it.");
+	} else if (status == 2) {
+                qm.dispose();
+        }
 }
 	
\ No newline at end of file
diff --git a/scripts/quest/2316.js b/scripts/quest/2316.js
index 3b15ff46e..9c5d62897 100644
--- a/scripts/quest/2316.js
+++ b/scripts/quest/2316.js
@@ -25,9 +25,10 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendAcceptDecline("I think i've heard of a potion that breaks these kinds of barriers. I think it's called #bKiller Mushroom Spores#k? Hmmm... outside, you'll find the Mushroom Scholar #bScarrs#k waiting outside. #bScarrs#k is an expert on mushrooms, so go talk to him.");
-	if (status == 1){
+	else if (status == 1){
 		qm.forceStartQuest();
 		qm.sendOk("I am confident #kScarrs#k will do everything to help you.");
+        else if (status == 2){
 		qm.dispose();
 	}
 }
@@ -44,11 +45,12 @@ function end(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendOk("Ah, so you're the explorer people were talking about. I'm #bScarrs, the Royal Mushroom Scholar#k representing the Kingdom of Mushroom. So you need some #kKiller Mushroom Spores#k?");
-	if (status == 1){
+	} else if (status == 1){
+                qm.forceCompleteQuest();
 		qm.gainExp(4200);
 		qm.sendOk("#kKiller Mushroom Spores#k... I think i've heard of them before...");
-		qm.forceCompleteQuest(); 
-		qm.dispose();
-	}
+	} else if (status == 2) {
+                qm.dispose();
+        }
 }
 	
\ No newline at end of file
diff --git a/scripts/quest/2317.js b/scripts/quest/2317.js
index 359cd2b95..1e3db1a23 100644
--- a/scripts/quest/2317.js
+++ b/scripts/quest/2317.js
@@ -25,9 +25,10 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendAcceptDecline("Ah! If I am not mistaken, I saw the #bKiller Mushroom Spores#k way back when I was a kid in a book. Now I remember... it's made out of extracts of powerful poisons from Poison Mushrooms, which means you'll need some Poison Mushroom Caps. If you can get me those, I think I'll be able to make it.");
-	if (status == 1){
+	else if (status == 1){
 		qm.forceStartQuest();
 		qm.sendOk("Please defeat #bPoison Mushrooms#k and bring back #b100 Poison Mushroom Caps#k in return.");
+        } else if (status == 2){
 		qm.dispose();
 	}
 }
@@ -44,12 +45,13 @@ function end(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendOk("Have you gathered up the 100 Poison Mushroom Caps like I asked you to get?");
-	if (status == 1){
-		qm.gainExp(13500);
+	else if (status == 1){
+                qm.sendOk("I am amazed that you were able to gather up these 100 Poison Mushroom Caps, which is considered a difficult feat. I think I'll be able to make #bKiller Mushroom Spores#k our of these.");
+	} else if (status == 2) {
+                qm.forceCompleteQuest();
+                qm.gainExp(13500);
 		qm.gainItem(4000500, -100);
-		qm.sendOk("I am amazed that you were able to gather up these 100 Poison Mushroom Caps, which is considered a difficult feat. I think I'll be able to make #bKiller Mushroom Spores#k our of these.");
-		qm.forceCompleteQuest(); 
 		qm.dispose();
-	}
+        }
 }
 	
\ No newline at end of file
diff --git a/scripts/quest/2318.js b/scripts/quest/2318.js
index 3babb9a86..ff1281e50 100644
--- a/scripts/quest/2318.js
+++ b/scripts/quest/2318.js
@@ -25,9 +25,10 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendAcceptDecline("Hmmm... I looked into the making of the Spores while you were gathering up the Poison Mushroom Caps, and realised that we'll need more materials for it. I want you to gather up one more set of items. Can you do it?");
-	if (status == 1){
+	else if (status == 1){
 		qm.forceStartQuest();
 		qm.sendOk("Okay, I want you to defeat the Regenade Spores and bring back #b50 Mutated Spores#k in return.");
+        } else if (status == 2){
 		qm.dispose();
 	}
 }
@@ -44,15 +45,22 @@ function end(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendOk("Did you gather up all the necessary ingredients for it?")
-	if (status == 1){
-		qm.gainExp(11500);
+	else if (status == 1){
+                if (!qm.haveItem(4000499, 50)) {
+                        qm.sendOk("Please gather all the ingredients first.");
+                        status = 2;
+                        return;
+                }
+
+                qm.sendNext("These should be enough for me to make the #bKiller Mushroom Spores.#k Please hold on for a bit.");
+	} else if(status == 2){
+                qm.sendOk("Okay, here are the Killer Mushroom Spores. Hopefully this will be enough for you to save our princess and help regain our kingdom. Good luck!");
+	} else if(status == 3) {
+                qm.forceCompleteQuest();
+                qm.gainExp(11500);
 		qm.gainItem(4000499, -50);
-		qm.sendNext("Okay, these should be enough for me to make the #bKiller Mushroom Spores.#k Please hold on for a bit.");
-		qm.forceCompleteQuest();
 		qm.gainItem(2430014, 1);
-	} if(status == 2){
-		qm.sendPrev("Okay, here are the Killer Mushroom Spores. Hopefully this will be enough for you to save our princess and help regain our kingdom. Good luck!");
-		qm.dispose();
-	}
+                qm.dispose();
+        }
 }
 	
\ No newline at end of file
diff --git a/scripts/quest/2319.js b/scripts/quest/2319.js
index 8f5e65066..b51d69db2 100644
--- a/scripts/quest/2319.js
+++ b/scripts/quest/2319.js
@@ -25,10 +25,11 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendAcceptDecline("Oh, I almost forgot! What was I thinking? I need you to hand this #bSample of Killer Mushroom Spores#k to #bMinister of Magic#k and report the results.");
-	if (status == 1){
+	else if (status == 1){
 		qm.forceStartQuest();
 		qm.gainItem(4032389, 1);
 		qm.sendOk("The #bMinister of Magic#k told me once the #bKiller Mushroom Spores#k is complete, that he'll want a sample of it as well. I'll give you the sample; now go please hand it in to our #bMinister of Magic.#k");
+        } else if (status == 2){
 		qm.dispose();
 	}
 }
@@ -45,12 +46,13 @@ function end(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendOk("Are the #bKiller Mushroom Spores#k finally completed?");
-	if (status == 1){
+	else if (status == 1){
+                qm.forceCompleteQuest();
 		qm.gainExp(4200);
 		qm.gainItem(4032389, -1);
 		qm.sendOk("Okay, so this is the #bKiller Mushroom Spores.#k Thank you, thank you, and please tell #bScarrs#k the same.");
-		qm.forceCompleteQuest();
-		qm.dispose();
-	}
+	} else if (status == 2) {
+                qm.dispose();
+        }
 }
 	
\ No newline at end of file
diff --git a/scripts/quest/2320.js b/scripts/quest/2320.js
index cf5e5d389..2b6cc9bcd 100644
--- a/scripts/quest/2320.js
+++ b/scripts/quest/2320.js
@@ -25,10 +25,11 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendAcceptDecline("I have just one more request for you. Would you like to take a listen?");
-	if (status == 1){
+	else if (status == 1){
 		qm.forceStartQuest();
 		qm.gainItem(4032389, 1);
 		qm.sendOk("To be honest, these #bKiller Mushroom Spores#k are not completely out of my own work. Do you remember #bBruce#k from #bHenesys#k? I have been friends with him since childhood, and #bKiller Mushroom Spores#k was completed after he shared the results of his studies with me. This was all thanks to him, so I'd like for you to give this to him for me.");
+        } else if (status == 2){
 		qm.dispose();
 	}
 }
@@ -45,12 +46,13 @@ function end(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendOk("Oh! You're here on behalf of #bScarrs#k? \r\n\r\n#fUI/UIWindow.img/QuestIcon/4/0# \r\n#fUI/UIWindow.img/QuestIcon/8/0# 8800 exp");
-	if (status == 1){
+	else if (status == 1){
+                qm.forceCompleteQuest();
 		qm.gainExp(8800);
 		qm.gainItem(4032389, -1);
 		qm.sendOk("Ahh, so this is the #bKiller Mushroom Spores#k that I was working on in the past. I had a tough time gathering up the ingredients, so I left it in theory only, but he was able to complete it, with a sample to show for as well. Please tell him I appreciate his good work.");
-		qm.forceCompleteQuest();
-		qm.dispose();
-	}
+	} else if (status == 2) {
+                qm.dispose();
+        }
 }
 	
\ No newline at end of file
diff --git a/scripts/quest/2321.js b/scripts/quest/2321.js
index 8b54b52f2..126e531a9 100644
--- a/scripts/quest/2321.js
+++ b/scripts/quest/2321.js
@@ -25,9 +25,10 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendAcceptDecline("Now you'll be able to penetrate the spiny vine barrier of Mushroom Forest, but before that, #bMinister of Home Affairs#k wants to have a word with you. Please go see him immediately.");
-	if (status == 1){
+	else if (status == 1){
 		qm.forceStartQuest();
 		qm.sendOk("Good luck.");
+        } else if (status == 2){
 		qm.dispose();
 	}
 }
@@ -44,11 +45,12 @@ function end(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendOk("I have been keeping up on your fabulour work. I am aware that you have successfully created the #bKiller Mushroom Spores#k, which penetrates through the unpenetrable barrier of the forest. Congratulations!");
-	if (status == 1){
+	else if (status == 1){
+                qm.forceCompleteQuest();
 		qm.gainExp(2500);
 		qm.sendOk("The problem now is to figure out how to enter the castle.");
-		qm.forceCompleteQuest();
-		qm.dispose();
-	}
+	} else if (status == 2) {
+                qm.dispose();
+        }
 }
 	
\ No newline at end of file
diff --git a/scripts/quest/2322.js b/scripts/quest/2322.js
index fd114c25d..00b7a8cc2 100644
--- a/scripts/quest/2322.js
+++ b/scripts/quest/2322.js
@@ -25,14 +25,15 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendYesNo("Like I told you, just breaking the barrier cannot be a cause for celebration. That's because our castle for the Kingdom of Mushroom completely denies entry of anyone outside our kingdom, so it'll be hard for you to do that. Hmmm... to figure out a way to enter, can you...investigate the outer walls of the castle first?");
-	if (status == 1)
+	else if (status == 1)
 		qm.sendNext("Walk past the Mushroom Forest and when you reach the #bSplit Road of Choice#k, just walk towards the castle. Good luck.");
-	if (status == 2){
+	else if (status == 2){
 		//qm.forceStartQuest();
 		//qm.forceStartQuest(2322, "1");
 		qm.gainExp(11000);
 		qm.sendOk("Good job navigating through the area.");
 		qm.forceCompleteQuest();
+        } else if (status == 3){
 		qm.dispose();
 	}
 }
@@ -49,11 +50,12 @@ function end(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendOk("Hmmm I see... so they have completely shut off the entrance and everything.");
-	if (status == 1){
-		qm.gainExp(11000);
-		qm.sendOk("Good job navigating through the area.");
+	else if (status == 1){
 		qm.forceCompleteQuest();
-		qm.dispose();
-	}
+                qm.gainExp(11000);
+		qm.sendOk("Good job navigating through the area.");
+	} else if (status == 2) {
+                qm.dispose();
+        }
 }
 	
\ No newline at end of file
diff --git a/scripts/quest/2325.js b/scripts/quest/2325.js
index 4154deb9d..288ab7647 100644
--- a/scripts/quest/2325.js
+++ b/scripts/quest/2325.js
@@ -22,9 +22,10 @@ function end(mode, type, selection){
 		qm.sendNextPrev("Don't be afriad, #b#p1300005##k sent me here.", 2);
 	}
 	else if(status == 2){
-		qm.sendOk("What? My brother sent you here? Ahhh... I am safe now. Thank you so much...");
 		qm.forceCompleteQuest();
 		qm.gainExp(6000);
-		qm.dispose();
-	}
+                qm.sendOk("What? My brother sent you here? Ahhh... I am safe now. Thank you so much...");
+	} else if (status == 3) {
+                qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/2338.js b/scripts/quest/2338.js
index b2d909564..8722341be 100644
--- a/scripts/quest/2338.js
+++ b/scripts/quest/2338.js
@@ -37,7 +37,7 @@ function start(mode, type, selection) {
         if (status == 0) {
             if(qm.haveItem(2430014, 1)) {
                 qm.sendNext("It looks like you already have one #b#t2430014##k on your inventory.");
-                qm.dispose();
+                status = 1;
                 return;
             }
             
@@ -48,8 +48,9 @@ function start(mode, type, selection) {
             } else {
                 qm.gainItem(2430014, 1);
                 qm.forceCompleteQuest();
+                qm.dispose();
             }
-            
+        } else if (status == 2) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/2342.js b/scripts/quest/2342.js
index 6c8aed8d0..6d5d2ff6e 100644
--- a/scripts/quest/2342.js
+++ b/scripts/quest/2342.js
@@ -6,22 +6,38 @@
 var status = -1;
 
 function start(mode, type, selection){
-	if(!qm.hasItem(4001318) && qm.isQuestStarted(2331) && !qm.isQuestCompleted(2331)){
-		if(qm.canHold(4001318)){
-			qm.forceStartQuest();
-			qm.gainItem(4001318, 1);
-			qm.forceCompleteQuest();
-			qm.sendOk("Looks like you forgot to pick up the #b#t4001318##k when you fought with the #bPrime Minister#k. This is very important to our kingdom, so please deliver this to my father as soon as possible.");
-			qm.dispose();
-		}
-		else{
-			qm.sendOk("Please free up one spot in your ETC inventory");
-			qm.dispose();
-		}
-	}
-	else{
-		qm.dispose();
-	}
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            if(!qm.hasItem(4001318) && qm.isQuestStarted(2331) && !qm.isQuestCompleted(2331)){
+                if(qm.canHold(4001318)){
+                    qm.forceStartQuest();
+                    qm.gainItem(4001318, 1);
+                    qm.forceCompleteQuest();
+                    qm.sendOk("Looks like you forgot to pick up the #b#t4001318##k when you fought with the #bPrime Minister#k. This is very important to our kingdom, so please deliver this to my father as soon as possible.");
+                }
+                else{
+                    qm.sendOk("Please free up one spot in your ETC inventory");
+                }
+            }
+            else{
+                qm.dispose();
+            }
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
 
 function end(mode, type, selection){
diff --git a/scripts/quest/2560.js b/scripts/quest/2560.js
index d784079e1..985edef5c 100644
--- a/scripts/quest/2560.js
+++ b/scripts/quest/2560.js
@@ -20,8 +20,10 @@ function start(mode, type, selection) {
 			qm.sendNext("Ook! Ook! (The monkey looks very dissatisfied.)");
 		} else {
 			qm.forceStartQuest();
+                        qm.dispose();
 		}
-		qm.dispose();
-	}
+	} else if (status == 4) {
+                qm.dispose();
+        }
 }
 	
\ No newline at end of file
diff --git a/scripts/quest/2573.js b/scripts/quest/2573.js
index 25f51e126..8d05cda8e 100644
--- a/scripts/quest/2573.js
+++ b/scripts/quest/2573.js
@@ -17,10 +17,11 @@ function start(mode, type, selection) {
 		if (mode == 0) {//decline
 			qm.sendNext("Hey, take it easy! Sometimes you just gotta wait.");
 		} else {
-			qm.sendNext("Looks like we're all set! I think this is going to be a great voyage. Let's get underway.");
 			qm.warp(3000000, 0);
 			qm.forceCompleteQuest();
+                        qm.sendNext("Looks like we're all set! I think this is going to be a great voyage. Let's get underway.");
 		}
-		qm.dispose();
-	}
+	} else if (status == 3) {
+                qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/28004.js b/scripts/quest/28004.js
index f5db1d4a0..3cb9ea267 100644
--- a/scripts/quest/28004.js
+++ b/scripts/quest/28004.js
@@ -44,7 +44,7 @@ function start(mode, type, selection) {
             qm.sendNext("Okay... so here's our plan to defeat Scrooge and his dastardly plans. The Force of the Spirit I gave you is an item packed with mana. It's an item you'll definitely use at the map I am about to send you. In order to do that, you'll have to bring your party members with you as well. You should bring your party members here or form one right now!");
         } else if (status == 1) {
             qm.sendAcceptDecline("Would you like to move forward?");
-        } else {
+        } else if (status == 2) {
             var level = qm.getPlayer().getLevel();
             
             qm.warp(level <= 30 ? 889100000 : (level <= 40 ? 889100010 : 889100020));
diff --git a/scripts/quest/29900.js b/scripts/quest/29900.js
index 5a06f3b0c..dc129556d 100644
--- a/scripts/quest/29900.js
+++ b/scripts/quest/29900.js
@@ -41,14 +41,16 @@ function end(mode, type, selection) {
         if (status == 0) 
             qm.sendNext("Congratulations on earning your honorable #b<Beginner Adventurer>#k title. I wish you the best of luck in your future endeavors! Keep up the good work.\r\n\r\n#fUI/UIWindow.img/QuestIcon/4/0#\r\n #v1142107:# #t1142107# 1");
         else if (status == 1) {
-			if (qm.canHold(1142107)) {
-				qm.gainItem(1142107);
-				qm.forceCompleteQuest();
-			} else 
-				qm.sendNext("Please make room in your inventory");//NOT GMS LIKE
-			
-			qm.dispose();        
-		}
+            if (qm.canHold(1142107)) {
+                qm.gainItem(1142107);
+                qm.forceCompleteQuest();
+                qm.dispose();
+            } else {
+                qm.sendNext("Please make room in your inventory");//NOT GMS LIKE
+            }
+        } else if (status == 2) {
+            qm.dispose();
+        }
     }
 	
 }
\ No newline at end of file
diff --git a/scripts/quest/29901.js b/scripts/quest/29901.js
index 91f9acb3d..b38d41c0a 100644
--- a/scripts/quest/29901.js
+++ b/scripts/quest/29901.js
@@ -41,14 +41,16 @@ function end(mode, type, selection) {
         if (status == 0) 
             qm.sendNext("Congratulations on earning your honorable #b<Junior Adventurer>#k title. I wish you the best of luck in your future endeavors! Keep up the good work.\r\n\r\n#fUI/UIWindow.img/QuestIcon/4/0#\r\n #v1142108:# #t1142108# 1");
         else if (status == 1) {
-			if (qm.canHold(1142108)) {
-				qm.gainItem(1142108);
-				qm.forceCompleteQuest();
-			} else 
-				qm.sendNext("Please make room in your inventory");//NOT GMS LIKE
-			
-			qm.dispose();        
-		}
+                if (qm.canHold(1142108)) {
+                        qm.gainItem(1142108);
+                        qm.forceCompleteQuest();
+                        qm.dispose();
+                } else {
+                        qm.sendNext("Please make room in your inventory");//NOT GMS LIKE
+                }
+        } else if (status == 2) {
+                qm.dispose();
+        }
     }
 	
 }
\ No newline at end of file
diff --git a/scripts/quest/29902.js b/scripts/quest/29902.js
index 144dea0f8..c665731a1 100644
--- a/scripts/quest/29902.js
+++ b/scripts/quest/29902.js
@@ -41,14 +41,16 @@ function end(mode, type, selection) {
         if (status == 0) 
             qm.sendNext("Congratulations on earning your honorable #b<Veteran Adventurer>#k title. I wish you the best of luck in your future endeavors! Keep up the good work.\r\n\r\n#fUI/UIWindow.img/QuestIcon/4/0#\r\n #v1142109:# #t1142109# 1");
         else if (status == 1) {
-			if (qm.canHold(1142109)) {
-				qm.gainItem(1142109);
-				qm.forceCompleteQuest();
-			} else 
-				qm.sendNext("Please make room in your inventory");//NOT GMS LIKE
-			
-			qm.dispose();        
-		}
+                if (qm.canHold(1142109)) {
+                        qm.gainItem(1142109);
+                        qm.forceCompleteQuest();
+                        qm.dispose();
+                } else {
+                        qm.sendNext("Please make room in your inventory");//NOT GMS LIKE
+                }
+        } else if (status == 2) {
+                qm.dispose();
+        }
     }
 	
 }
\ No newline at end of file
diff --git a/scripts/quest/29903.js b/scripts/quest/29903.js
index 9b29ae4a0..999075c0f 100644
--- a/scripts/quest/29903.js
+++ b/scripts/quest/29903.js
@@ -41,14 +41,16 @@ function end(mode, type, selection) {
         if (status == 0) 
             qm.sendNext("Congratulations on earning your honorable #b<Master Adventurer>#k title. I wish you the best of luck in your future endeavors! Keep up the good work.\r\n\r\n#fUI/UIWindow.img/QuestIcon/4/0#\r\n #v1142110:# #t1142110# 1");
         else if (status == 1) {
-			if (qm.canHold(1142110)) {
-				qm.gainItem(1142110);
-				qm.forceCompleteQuest();
-			} else 
-				qm.sendNext("Please make room in your inventory");//NOT GMS LIKE
-			
-			qm.dispose();        
-		}
+                if (qm.canHold(1142110)) {
+                        qm.gainItem(1142110);
+                        qm.forceCompleteQuest();
+                        qm.dispose();
+                } else {
+                        qm.sendNext("Please make room in your inventory");//NOT GMS LIKE
+                }
+        } else if (status == 2) {
+            qm.dispose();
+        }
     }
 	
 }
\ No newline at end of file
diff --git a/scripts/quest/3108.js b/scripts/quest/3108.js
index 71e60da7c..5321d3839 100644
--- a/scripts/quest/3108.js
+++ b/scripts/quest/3108.js
@@ -37,7 +37,7 @@ function start(mode, type, selection) {
         if (status == 0) {
             qm.sendNext("(As you peek into the shattered statue, you might have found a clue about what happened. Better talk to #rScadur#k about this.)");
             qm.forceCompleteQuest();
-            
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/3301.js b/scripts/quest/3301.js
index 38db5d56c..bcf0edca8 100644
--- a/scripts/quest/3301.js
+++ b/scripts/quest/3301.js
@@ -48,8 +48,7 @@ function end(mode, type, selection) {
 	    qm.gainItem(oreArray[selection], -2); // Take 2 ores
 	    qm.sendNext("Then wait for awhile. I'll go and get the stuff to help you pass the test of Chief Zanumist.");
 	    qm.forceCompleteQuest();
-	    qm.dispose();
-	} else {
+	} else if (status == 1) {
 	    qm.dispose();
 	}
     }
diff --git a/scripts/quest/3303.js b/scripts/quest/3303.js
index 806589be9..a9d44c42f 100644
--- a/scripts/quest/3303.js
+++ b/scripts/quest/3303.js
@@ -48,8 +48,7 @@ function end(mode, type, selection) {
 	    qm.gainItem(oreArray[selection], -2); // Take 2 ores
 	    qm.sendNext("Then wait for awhile. I'll go and get the stuff to help you pass the test of Chief Alcadno.");
 	    qm.forceCompleteQuest();
-	    qm.dispose();
-	} else {
+	} else if (status == 1) {
 	    qm.dispose();
 	}
     }
diff --git a/scripts/quest/3311.js b/scripts/quest/3311.js
index ee0f6e054..572eb80bc 100644
--- a/scripts/quest/3311.js
+++ b/scripts/quest/3311.js
@@ -42,7 +42,7 @@ function end(mode, type, selection) {
             } else {
                 qm.sendNext("Found nothing yet? Please check out Dr. De Lang's house properly, something there may give out a clue about what is going on.");
             }
-            
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/3314.js b/scripts/quest/3314.js
index 576717e7d..31edf6da5 100644
--- a/scripts/quest/3314.js
+++ b/scripts/quest/3314.js
@@ -58,7 +58,7 @@ function end(mode, type, selection) {
             } else {
                 qm.sendNext("You seem pretty normal, don't you? I can't detect any possible effect from my experiment on you. Go take the pill I asked you to take and show me the effects, will you?");
             }
-        } else {
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/3321.js b/scripts/quest/3321.js
index 577995ea7..686c60fe3 100644
--- a/scripts/quest/3321.js
+++ b/scripts/quest/3321.js
@@ -48,8 +48,8 @@ function start(mode, type, selection) {
             qm.sendNext("Oh, and I have a personal favor to ask, if it's not too much. I am worried about my wife, #b#p2111004##k. Since the incident with the Huroids I could send a word to her, that must have made a toll on her... Please, if you could, could you get the #bSilver Pendant#k I left #bback at home#k, and give it to her in my stead? I regret not giving the item right away to her, it was her birthday... Maybe giving it now to her can get her a good sleeping night, at least.");
         } else if (status == 5) {
             qm.sendNext("#rMake sure to remember this pattern!#k I've hid the pendant in my house, in a container #bbehind the water pipes#k. The pipes must be turned #bin order#k: top, bottom, middle. And then, enter the secret password: '#rmy love Phyllia#k'.");
-            
             qm.forceStartQuest();
+        } else if (status == 6) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/3345.js b/scripts/quest/3345.js
index 83cb1b74a..def3916b2 100644
--- a/scripts/quest/3345.js
+++ b/scripts/quest/3345.js
@@ -43,7 +43,7 @@ function end(mode, type, selection) {
             } else {
                 qm.sendNext("Did you not seal the #rmagic circle beneath Magatia#k yet? It is a matter of great importance, please haste yourself.");
             }
-            
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/3360.js b/scripts/quest/3360.js
index d9f572b8b..1b1246c66 100644
--- a/scripts/quest/3360.js
+++ b/scripts/quest/3360.js
@@ -51,6 +51,7 @@ function start(mode, type, selection) {
 	    qm.sendOk("The key code is #b" + pass + "#k. Got that? Put the key into the door of the secret passage, and you will be able to walk around the passage freely.");
 	    qm.forceStartQuest();
             qm.setStringQuestProgress(3360, 0, pass);
+	} else if (status == 3) {
 	    qm.dispose();
 	}
     }
@@ -69,10 +70,11 @@ function end(mode, type, selection) {
                 qm.sendNext("What's up? You haven't opened the Secret Passage yet?");
             } else {
                 qm.forceCompleteQuest();
+                qm.dispose();
             }
-            
+	} else if (status == 1) {
             qm.dispose();
-	}
+        }
     }
 }
 
diff --git a/scripts/quest/3382.js b/scripts/quest/3382.js
index 046e056df..ce732bbd2 100644
--- a/scripts/quest/3382.js
+++ b/scripts/quest/3382.js
@@ -28,36 +28,50 @@
 */
 
 function end(mode, type, selection) {
-        if(qm.haveItem(4001159, 25) && qm.haveItem(4001160, 25) && !qm.haveItemWithId(1122010, true)) {
-            if(qm.canHold(1122010)) {
-                qm.gainItem(4001159, -25);
-                qm.gainItem(4001160, -25);
-                qm.gainItem(1122010, 1);
-                
-                qm.sendOk("Thank you for retrieving the marbles. Accept this pendant as a token of my appreciation.");
-            } else {
-                qm.sendNext("Free a slot on your EQUIP tab before claiming a prize.");
-                qm.dispose();
-                return;
-            }
-        } else if(qm.haveItem(4001159, 10) && qm.haveItem(4001160, 10)) {
-            if(qm.canHold(2041212)) {
-                qm.gainItem(4001159, -10);
-                qm.gainItem(4001160, -10);
-                qm.gainItem(2041212, 1);
-                
-                qm.sendOk("Thank you for retrieving the marbles. This rock, that I am giving to you, can be used to improve the stats on the #b#t1122010##k. Take it as a token of my appreciation and use it wisely.");
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            if(qm.haveItem(4001159, 25) && qm.haveItem(4001160, 25) && !qm.haveItemWithId(1122010, true)) {
+                if(qm.canHold(1122010)) {
+                    qm.gainItem(4001159, -25);
+                    qm.gainItem(4001160, -25);
+                    qm.gainItem(1122010, 1);
+
+                    qm.sendOk("Thank you for retrieving the marbles. Accept this pendant as a token of my appreciation.");
+                } else {
+                    qm.sendNext("Free a slot on your EQUIP tab before claiming a prize.");
+                    return;
+                }
+            } else if(qm.haveItem(4001159, 10) && qm.haveItem(4001160, 10)) {
+                if(qm.canHold(2041212)) {
+                    qm.gainItem(4001159, -10);
+                    qm.gainItem(4001160, -10);
+                    qm.gainItem(2041212, 1);
+
+                    qm.sendOk("Thank you for retrieving the marbles. This rock, that I am giving to you, can be used to improve the stats on the #b#t1122010##k. Take it as a token of my appreciation and use it wisely.");
+                } else {
+                    qm.sendNext("Free a slot on your USE tab before claiming a prize.");
+                    return;
+                }
             } else {
-                qm.sendNext("Free a slot on your USE tab before claiming a prize.");
-                qm.dispose();
+                qm.sendNext("I need at least #b10 of both #t4001159# and #t4001160##k to reward you appropriately. If you happen to come with #b25 of these#k instead, I can reward you with a valuable gear. Fare well.");
                 return;
             }
-        } else {
-            qm.sendNext("I need at least #b10 of both #t4001159# and #t4001160##k to reward you appropriately. If you happen to come with #b25 of these#k instead, I can reward you with a valuable gear. Fare well.");
+
+            qm.forceCompleteQuest();
+        } else if (status == 1) {
             qm.dispose();
-            return;
         }
-
-	qm.forceCompleteQuest();
-	qm.dispose();
+    }
 }
diff --git a/scripts/quest/3437.js b/scripts/quest/3437.js
index 2a3f4b1d5..6c159e63f 100644
--- a/scripts/quest/3437.js
+++ b/scripts/quest/3437.js
@@ -14,9 +14,7 @@ function end(mode, type, selection) {
 
 	if(status == 0) {
 		qm.sendNext("What the? Are you telling me you've already taken out 150 #o4230120#s? And these ... yes, these really are 120 #t4000122#s. I was wondering how you were going to complete this mission all by yourself, but you took care of it just fine. Alright, here ... this is a very important item for me, but please take it.");
-	}
-
-	else if(status == 1) {
+	} else if(status == 1) {
 	    if(qm.getPlayer().getInventory(Packages.client.inventory.MapleInventoryType.EQUIP).getNumFreeSlot() < 1) {
 		qm.sendOk("Please free a EQUIP inventory slot to receive the reward.");
 		qm.dispose();
@@ -34,16 +32,13 @@ function end(mode, type, selection) {
             else item = 1082149;
             
             qm.sendNext(talkStr);
-	}
-
-        if(status == 2) {
+	} else if(status == 2) {
+            qm.completeQuest();
             qm.gainItem(item, 1);
             qm.gainItem(4000122, -120);
-            
             qm.gainExp(6100);
-            qm.completeQuest();
-            
             qm.sendOk("Thank you so much for fulfilling your missions as one of the Mesorangers. I've told the Sector about your successful story, and the Sector seems to be very pleased with you, too. Hopefully you'll keep working with us. Bye~");
+        } else if (status == 3) {
             qm.dispose();
         }
 }
\ No newline at end of file
diff --git a/scripts/quest/3452.js b/scripts/quest/3452.js
index 82c02a1ab..a87f73f56 100644
--- a/scripts/quest/3452.js
+++ b/scripts/quest/3452.js
@@ -17,12 +17,13 @@ function end(mode, type, selection) {
 			qm.gainItem(2000011, 50);
 			qm.gainExp(8000);
 			qm.forceCompleteQuest();
+                        qm.dispose();
 		}
 		else {
 			qm.sendNext("Hm? It looks like your inventory is full.");
 		}
-                
+	} else if (status == 2) {
                 qm.dispose();
-	}
+        }
     }    
 }
\ No newline at end of file
diff --git a/scripts/quest/3454.js b/scripts/quest/3454.js
index f37a76db3..cf3332742 100644
--- a/scripts/quest/3454.js
+++ b/scripts/quest/3454.js
@@ -28,26 +28,43 @@
 */
 
 function end(mode, type, selection) {
-	if(qm.getPlayer().getInventory(Packages.client.inventory.MapleInventoryType.ETC).getNumFreeSlot() < 1) {
-		qm.sendOk("Make room on your ETC inventory first.");
-		qm.dispose();		
-		return;
-	}
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            if(qm.getPlayer().getInventory(Packages.client.inventory.MapleInventoryType.ETC).getNumFreeSlot() < 1) {
+                qm.sendOk("Make room on your ETC inventory first.");
+                qm.dispose();		
+                return;
+            }
 
-	qm.gainItem(4000125, -1);
-	qm.gainItem(4031926, -10);
-	qm.gainItem(4000119, -30);
-	qm.gainItem(4000118, -30);
+            qm.gainItem(4000125, -1);
+            qm.gainItem(4031926, -10);
+            qm.gainItem(4000119, -30);
+            qm.gainItem(4000118, -30);
 
-	rnd = Math.random();
-	if(rnd < 1.0) {
-		qm.gainItem(4031928, 1);
-	}
-	else {
-		qm.gainItem(4031927, 1);
-	}
+            rnd = Math.random();
+            if(rnd < 1.0) {
+                qm.gainItem(4031928, 1);
+            }
+            else {
+                qm.gainItem(4031927, 1);
+            }
 
-	qm.sendOk("Now, go meet Alien Gray and use this undercover to read through their plans. If this fails, we will need to gather some materials once again.");
-	qm.forceCompleteQuest();
-	qm.dispose();
+            qm.sendOk("Now, go meet Alien Gray and use this undercover to read through their plans. If this fails, we will need to gather some materials once again.");
+            qm.forceCompleteQuest();
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
diff --git a/scripts/quest/3507.js b/scripts/quest/3507.js
index 41dab043e..80f44994f 100644
--- a/scripts/quest/3507.js
+++ b/scripts/quest/3507.js
@@ -1,10 +1,26 @@
 function end(mode, type, selection) {
-        if(qm.isQuestCompleted(3523) || qm.isQuestCompleted(3524) || qm.isQuestCompleted(3525) || qm.isQuestCompleted(3526) || qm.isQuestCompleted(3527) || qm.isQuestCompleted(3529) || qm.isQuestCompleted(3539)) {
-            qm.completeQuest();
-            qm.sendOk("You are now filled with all of your memories again.. You are now allowed to go to #m270020000#.");
-        } else {
-            qm.sendOk("You have not yet checked with your first teacher about your memories?");
-        }
-    
+    if (mode == -1) {
         qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            if(qm.isQuestCompleted(3523) || qm.isQuestCompleted(3524) || qm.isQuestCompleted(3525) || qm.isQuestCompleted(3526) || qm.isQuestCompleted(3527) || qm.isQuestCompleted(3529) || qm.isQuestCompleted(3539)) {
+                qm.completeQuest();
+                qm.sendOk("You are now filled with all of your memories again.. You are now allowed to go to #m270020000#.");
+            } else {
+                qm.sendOk("You have not yet checked with your first teacher about your memories?");
+            }
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/3523.js b/scripts/quest/3523.js
index 5ee5f0577..1bca9087c 100644
--- a/scripts/quest/3523.js
+++ b/scripts/quest/3523.js
@@ -24,9 +24,26 @@
 */
 
 function start(mode, type, selection) {
-    qm.startQuest();
-    //qm.getPlayer().updateQuestInfo(3507, "1");
-    qm.completeQuest();
-    qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
-    qm.dispose();
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.startQuest();
+            //qm.getPlayer().updateQuestInfo(3507, "1");
+            qm.completeQuest();
+            qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/3524.js b/scripts/quest/3524.js
index 744ca4f70..6fde502f1 100644
--- a/scripts/quest/3524.js
+++ b/scripts/quest/3524.js
@@ -24,9 +24,26 @@
 */
 
 function start(mode, type, selection) {
-    qm.startQuest();
-    //qm.getPlayer().updateQuestInfo(3507, "1");
-    qm.completeQuest();
-    qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
-    qm.dispose();
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.startQuest();
+            //qm.getPlayer().updateQuestInfo(3507, "1");
+            qm.completeQuest();
+            qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/3525.js b/scripts/quest/3525.js
index 76d31b4b9..319a71ae0 100644
--- a/scripts/quest/3525.js
+++ b/scripts/quest/3525.js
@@ -24,9 +24,26 @@
 */
 
 function start(mode, type, selection) {
-    qm.startQuest();
-    //qm.getPlayer().updateQuestInfo(3507, "1");
-    qm.completeQuest();
-    qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
-    qm.dispose();
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.startQuest();
+            //qm.getPlayer().updateQuestInfo(3507, "1");
+            qm.completeQuest();
+            qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/3526.js b/scripts/quest/3526.js
index 295dc91cd..760132239 100644
--- a/scripts/quest/3526.js
+++ b/scripts/quest/3526.js
@@ -24,9 +24,26 @@
 */
 
 function start(mode, type, selection) {
-    qm.startQuest();
-    //qm.getPlayer().updateQuestInfo(3507, "1");
-    qm.completeQuest();
-    qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
-    qm.dispose();
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.startQuest();
+            //qm.getPlayer().updateQuestInfo(3507, "1");
+            qm.completeQuest();
+            qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/3527.js b/scripts/quest/3527.js
index 5ba2606c0..8b6c85585 100644
--- a/scripts/quest/3527.js
+++ b/scripts/quest/3527.js
@@ -24,9 +24,26 @@
 */
 
 function start(mode, type, selection) {
-    qm.startQuest();
-    //qm.getPlayer().updateQuestInfo(3507, "1");
-    qm.completeQuest();
-    qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
-    qm.dispose();
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.startQuest();
+            //qm.getPlayer().updateQuestInfo(3507, "1");
+            qm.completeQuest();
+            qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/3539.js b/scripts/quest/3539.js
index 5ba2606c0..8b6c85585 100644
--- a/scripts/quest/3539.js
+++ b/scripts/quest/3539.js
@@ -24,9 +24,26 @@
 */
 
 function start(mode, type, selection) {
-    qm.startQuest();
-    //qm.getPlayer().updateQuestInfo(3507, "1");
-    qm.completeQuest();
-    qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
-    qm.dispose();
+    if (mode == -1) {
+        qm.dispose();
+    } else {
+        if(mode == 0 && type > 0) {
+            qm.dispose();
+            return;
+        }
+        
+        if (mode == 1)
+            status++;
+        else
+            status--;
+        
+        if (status == 0) {
+            qm.startQuest();
+            //qm.getPlayer().updateQuestInfo(3507, "1");
+            qm.completeQuest();
+            qm.sendOk("You have regained your memories, talk to #b#p2140001##k to get the pass.");
+        } else if (status == 1) {
+            qm.dispose();
+        }
+    }
 }
\ No newline at end of file
diff --git a/scripts/quest/3714.js b/scripts/quest/3714.js
index 7868cb80b..e142e844f 100644
--- a/scripts/quest/3714.js
+++ b/scripts/quest/3714.js
@@ -55,11 +55,10 @@ function start(mode, type, selection) {
                 return;
             }
             
+            qm.forceCompleteQuest();
             qm.gainItem(4001094, -1);
             qm.gainItem(2041200, 1);    // quest not rewarding properly found thanks to MedicOP & Thora
             qm.gainExp(42000);
-            
-            qm.forceCompleteQuest();
             qm.dispose();
         }
     }
diff --git a/scripts/quest/3833.js b/scripts/quest/3833.js
index 7e1a3a482..b01f5946f 100644
--- a/scripts/quest/3833.js
+++ b/scripts/quest/3833.js
@@ -51,12 +51,14 @@ function end(mode, type, selection) {
 				qm.gainExp(10);
 				qm.forceCompleteQuest();
 			}
+
+                        qm.dispose();
 		}
 		else {
 			qm.sendOk("Could you make #b2 slots available#k on your USE inventory before receiving your reward?");
-		}	
-                
-                qm.dispose();
-	}
+		}
+	} else if (status == 2) {
+            qm.dispose();
+        }
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/3926.js b/scripts/quest/3926.js
index 4a6bf5601..dce1ce974 100644
--- a/scripts/quest/3926.js
+++ b/scripts/quest/3926.js
@@ -51,8 +51,8 @@ function end(mode, type, selection) {
                 qm.forceCompleteQuest();
             } else {
                 qm.sendNext("Have you brought all the jewels from the Red Scorpions? They have to be delivered to the Residential areas of the Sand Bandits.");
-            }   
-            
+            }
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/3929.js b/scripts/quest/3929.js
index 205cd6056..26b254eba 100644
--- a/scripts/quest/3929.js
+++ b/scripts/quest/3929.js
@@ -63,7 +63,7 @@ function end(mode, type, selection) {
                     qm.sendNext("Hey, what are you trying to pull on? To pass my test you must to deliver all the foods to the Residential areas.");
                 }
             }
-            
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/3933.js b/scripts/quest/3933.js
index 86dc10229..401d2bf45 100644
--- a/scripts/quest/3933.js
+++ b/scripts/quest/3933.js
@@ -43,15 +43,15 @@ function start(mode, type, selection) {
             qm.sendAcceptDecline("To truly see your strength, I'll have to face you myself. Don't worry, I'll summon my other self to face off against you. Are you ready?");
         } else if (status == 2) {
             qm.sendNext("Good, I like your confidence.");
-        } else {
+        } else if (status == 3) {
             if(qm.getWarpMap(926000000).getCharacters().size() > 0) {
                 qm.sendOk("There is someone currently in this map, come back later.");
+                qm.dispose();
             } else {
                 qm.warp(926000000);
                 qm.forceStartQuest();
+                qm.dispose();
             }
-            
-            qm.dispose();
         }
     }
 }
diff --git a/scripts/quest/3941.js b/scripts/quest/3941.js
index 93be8f435..ecee5987e 100644
--- a/scripts/quest/3941.js
+++ b/scripts/quest/3941.js
@@ -42,18 +42,23 @@ function start(mode, type, selection) {
         else
             status--;
         
-        if(!isTigunMorphed(qm.getPlayer())) {
-            qm.sendNext("What's this? I can't simply give the Queen's silk to anyone, claiming they will hand it at once to the queen. Get out of my sights.");
-            qm.dispose();
-            return;
-        }
-        
         if (status == 0) {
+            if(!isTigunMorphed(qm.getPlayer())) {
+                qm.sendNext("What's this? I can't simply give the Queen's silk to anyone, claiming they will hand it at once to the queen. Get out of my sights.");
+                status = 1;
+                return;
+            }
+
             qm.sendNext("Tigun, what are you doing here?");
         } else if (status == 1) {
+            if(!isTigunMorphed(qm.getPlayer())) {
+                qm.sendNext("What's this? I can't simply give the Queen's silk to anyone, claiming they will hand it at once to the queen. Get out of my sights.");
+                return;
+            }
+
             qm.sendNext("The Queen wants her silk right now? Alright, I have them here. Hold on a moment.");
-            
-            qm.forceStartQuest();            
+            qm.forceStartQuest();
+        } else if (status == 2) {
             qm.dispose();
         }
     }
@@ -73,13 +78,13 @@ function end(mode, type, selection) {
         else
             status--;
         
-        if(!isTigunMorphed(qm.getPlayer())) {
-            qm.sendNext("What's this? I can't simply give the Queen's silk to anyone, claiming they will hand it at once to the queen. Get out of my sights.");
-            qm.dispose();
-            return;
-        }
-        
         if (status == 0) {
+            if(!isTigunMorphed(qm.getPlayer())) {
+                qm.sendNext("What's this? I can't simply give the Queen's silk to anyone, claiming they will hand it at once to the queen. Get out of my sights.");
+                qm.dispose();
+                return;
+            }
+
             if(qm.canHold(4031571, 1)) {
                 qm.gainItem(4031571);
                 
@@ -88,7 +93,7 @@ function end(mode, type, selection) {
             } else {
                 qm.sendNext("Hey, you're lacking space to hold this, man. I will stay with it while you arrange your backpack...");
             }
-            
+        } else if (status == 1) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/3953.js b/scripts/quest/3953.js
index d338f0654..0229c9b01 100644
--- a/scripts/quest/3953.js
+++ b/scripts/quest/3953.js
@@ -43,12 +43,12 @@ function end(mode, type, selection) {
         } else if (status == 3) {
             qm.sendSimple("They have departed on an expedition to get rid of some major threats in the desert that were ravaging Ariant, for quite some time now... It's strange, they should have already returned... Thinking about it now, the last attack on the merchants was around the direction the Guardians departed... No, that can't be... Can it?\r\n\r\n#L0##bPerhaps Deo has already turned into a monster.#k");
         } else if (status == 4) {
+            qm.forceCompleteQuest();
             qm.gainItem(4011008, -1);
-            
-            qm.sendNext("We're in great trouble, if it is like this. And it really seems like it. If the Royal Cactus Deo has gone insane, Ariant is done for. You, can you do something to defeat Deo? We really need your help now.");
             qm.gainExp(20000);
-            
-            qm.forceCompleteQuest();
+
+            qm.sendNext("We're in great trouble, if it is like this. And it really seems like it. If the Royal Cactus Deo has gone insane, Ariant is done for. You, can you do something to defeat Deo? We really need your help now.");
+        } else if (status == 5) {
             qm.dispose();
         }
     }
diff --git a/scripts/quest/4647.js b/scripts/quest/4647.js
index c26f42341..0e18b92d3 100644
--- a/scripts/quest/4647.js
+++ b/scripts/quest/4647.js
@@ -40,16 +40,14 @@ function end(mode, type, selection) {
 			status--;
 		if (status == 0) {
 			if(qm.haveItem(5460000)) {
-				qm.sendOk("You got the Pet Snack! Thanks! You can use these to feed multiple pets at once!");
+				qm.completeQuest();
 				qm.teachSkill(8, 1, 1, -1);
 				qm.gainItem(5460000, -1, false);
-				qm.completeQuest();
-				qm.dispose();
+				qm.sendOk("You got the Pet Snack! Thanks! You can use these to feed multiple pets at once!");
 			} else {
 				qm.sendOk("Get me the Pet Snack! It can be found in a very big shop....");
-				qm.dispose();
 			}
-		} else {
+		} else if (status == 1) {
 			qm.dispose();
 		}
 	}
diff --git a/scripts/quest/4659.js b/scripts/quest/4659.js
index b2d3bb6c2..2e50f3ca0 100644
--- a/scripts/quest/4659.js
+++ b/scripts/quest/4659.js
@@ -52,9 +52,10 @@ function end(mode, type, selection) {
         qm.sendNext("Great job on finding your evolution materials. I will now give you a robot.");
     }
     else if (status == 1) {
-        if (qm.isQuestCompleted(4659))
+        if (qm.isQuestCompleted(4659)) {
             qm.dropMessage(1, "how did this get here?");
-        else if (qm.canHold(5000048)){
+            qm.dispose();
+        } else if (qm.canHold(5000048)){
             var pet = 0;
             var after;
             var i;
@@ -108,8 +109,10 @@ function end(mode, type, selection) {
 //            var petId = MaplePet.createPet(rand + 5000049, level, closeness, fullness);
 //            if (petId == -1) return;
 //            MapleInventoryManipulator.addById(qm.getClient(), rand+5000049, 1, "", petId);
-        } else
+            qm.dispose();
+        } else {
             qm.dropMessage(1,"Your inventory is full");
-        qm.dispose();
+            qm.dispose();
+        }
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/6033.js b/scripts/quest/6033.js
index a44563086..3362c48d8 100644
--- a/scripts/quest/6033.js
+++ b/scripts/quest/6033.js
@@ -48,12 +48,12 @@ function end(mode, type, selection) {
                 qm.dispose();
                 return;
             }
-        } else {
+        } else if (status == 2) {
+            qm.forceCompleteQuest();
+            
             var skillid = Math.floor(qm.getPlayer().getJob().getId() / 1000) * 10000000 + 1007;
             qm.teachSkill(skillid, 2, 3, -1);
-
             qm.gainExp(230000);
-            qm.forceCompleteQuest();
             qm.dispose();
         }
     }
diff --git a/scripts/quest/6036.js b/scripts/quest/6036.js
index b04c3e9c8..af09ed229 100644
--- a/scripts/quest/6036.js
+++ b/scripts/quest/6036.js
@@ -48,14 +48,13 @@ function end(mode, type, selection) {
                 qm.dispose();
                 return;
             }
-        } else {
+        } else if (status == 2) {
+            qm.forceCompleteQuest();
+            
             qm.gainItem(4031980, -1);
-                
             var skillid = Math.floor(qm.getPlayer().getJob().getId() / 1000) * 10000000 + 1007;
             qm.teachSkill(skillid, 3, 3, -1);
-
             qm.gainExp(300000);
-            qm.forceCompleteQuest();
             
             qm.dispose();
         }
diff --git a/scripts/quest/8185.js b/scripts/quest/8185.js
index b4623a147..dccab63ba 100644
--- a/scripts/quest/8185.js
+++ b/scripts/quest/8185.js
@@ -100,7 +100,8 @@ function end(mode, type, selection) {
                         //SpawnPetHandler.evolve(qm.getPlayer().getClient(), 5000029, after);
                         
                         qm.sendOk("#bSWEET! IT WORKED!#k Your dragon has grown beautifully! #rYou may find your new pet under your 'CASH' inventory.\r #kIt used to be a #b #i5000029##t5000029##k, and now it's \r a #b#i" + after + "##t" + after + "##k!\r\n\r\n#fUI/UIWindow.img/QuestIcon/4/0#\r\n#v"+after+"# #t"+after+"#");
-			qm.dispose();
-		}
+		} else if (status == 5) {
+                        qm.dispose();
+                }
 	}
 }
\ No newline at end of file
diff --git a/scripts/quest/8189.js b/scripts/quest/8189.js
index f14d59608..64b6b82f5 100644
--- a/scripts/quest/8189.js
+++ b/scripts/quest/8189.js
@@ -63,6 +63,7 @@ function end(mode, type, selection) {
 			if (id < 5000029 || id > 5000033) {
 				qm.sendOk("Something wrong, try again.");
 				qm.dispose();
+                                return;
 			}
 			var rand = 1 + Math.floor(Math.random() * 10);
 			var after = 0;
@@ -77,6 +78,7 @@ function end(mode, type, selection) {
 			} else {
 				qm.sendOk("Something wrong. Try again.");
 				qm.dispose();
+                                return;
 			}
 			
                         /*if (name.equals(MapleItemInformationProvider.getInstance().getName(id))) {
@@ -88,7 +90,8 @@ function end(mode, type, selection) {
 			qm.evolvePet(pet, after);
                         
 			qm.sendOk("Woo! It worked again! #rYou may find your new pet under your 'CASH' inventory.\r #kIt used to be a #b#i" + id + "##t" + id + "##k, and now it's \r a#b #i" + after + "##t" + after + "##k! \r\n Come back with 10,000 mesos and another Rock of Evolution if you don't like it!\r\n\r\n#fUI/UIWindow.img/QuestIcon/4/0#\r\n#v"+after+"# #t"+after+"#");
-			qm.dispose();
-		}
+		} else if (status == 3) {
+                        qm.dispose();
+                }
 	}
 }
\ No newline at end of file
diff --git a/scripts/quest/8219.js b/scripts/quest/8219.js
index d99e0bfd8..ff770041d 100644
--- a/scripts/quest/8219.js
+++ b/scripts/quest/8219.js
@@ -22,9 +22,10 @@ function start(mode, type, selection) {
     }
     if (status == 0)
             qm.sendAcceptDecline("The time is now, kid. We have all the preparations complete to further research for why all these oddities have been happening lately. I also must introduce you to my brother, Jack. ");
-    if (status == 1){
+    else if (status == 1){
             qm.sendOk("He is currently wandering around the Crimsonwood Mountain, past the sinister Phantom Forest, in the track to the Crimsonwood Keep. Your next destination is there, may your journey be a safe one.");
             qm.forceStartQuest();
+    } else if (status == 2) {
             qm.dispose();
     }
 }
@@ -48,14 +49,15 @@ function end(mode, type, selection) {
 	}
 	else if (status == 2){
 		if(qm.canHold(3992040, 1)) {
+                    qm.forceCompleteQuest();
                     qm.gainItem(3992040, 1);
                     qm.gainExp(175000);
-                    qm.forceCompleteQuest();
+                    qm.dispose();
                 }
 		else {
                     qm.sendOk("Hey, you don't have a slot in your SETUP inventory for what I have to give to you. Solve that minor issue of yours then talk to me.");
                 }
-                
+	} else if (status == 3) {
                 qm.dispose();
-	}
+        }
 }
diff --git a/scripts/quest/8221.js b/scripts/quest/8221.js
index 07e77ed2e..21a1976bc 100644
--- a/scripts/quest/8221.js
+++ b/scripts/quest/8221.js
@@ -26,6 +26,7 @@ function start(mode, type, selection) {
 	else if (status == 1){
 		qm.sendOk("Okay, I need you to have these items on hand first: #b10 #t4010006##k, #b4 #t4032005##k and #b1 #t4004000##k. Go!");
 		qm.forceStartQuest();
-		qm.dispose();
-	}
+	} else if (status == 2) {
+                qm.dispose();
+        }
 }
diff --git a/scripts/quest/8223.js b/scripts/quest/8223.js
index 84481e296..da61f8614 100644
--- a/scripts/quest/8223.js
+++ b/scripts/quest/8223.js
@@ -22,9 +22,10 @@ function start(mode, type, selection) {
 	}
 	if (status == 0)
 		qm.sendAcceptDecline("Oh, Jack sent you here? Good timing, I'm planning alongside Jack and others to storm the Keep and retake it from the Twisted Masters what is ours by right. You seem ready to fight alongside us, right?");
-	if (status == 1){
+	else if (status == 1){
 		qm.sendOk("Great! Your mission now is to rack down some numbers of their army and weaken their defenses by all effects. Defeat 75 of each: Windraider, Firebrand and Nightshadow, then return to me to report.");
 		qm.forceStartQuest();
-		qm.dispose();
-	}
+	} else if (status == 2) {
+                qm.dispose();
+        }
 }
diff --git a/scripts/quest/8224.js b/scripts/quest/8224.js
index 04a3c52d3..95844d8e5 100644
--- a/scripts/quest/8224.js
+++ b/scripts/quest/8224.js
@@ -25,6 +25,7 @@ function start(mode, type, selection) {
     else if (status == 1){
             qm.sendOk("Ok. I need you to hunt down #bthose fake trees#k in the forest, and collect 50 of their drops as proof that you made your part on this.");
             qm.forceStartQuest();
+    } else if (status == 2) {
             qm.dispose();
     }
 }
diff --git a/scripts/quest/8225.js b/scripts/quest/8225.js
index 8bb382d08..90fadcfb7 100644
--- a/scripts/quest/8225.js
+++ b/scripts/quest/8225.js
@@ -25,6 +25,7 @@ function start(mode, type, selection) {
 	else if (status == 1){
 		qm.sendOk("Very well. To prove your valor among our ranks, you must first pass on a little challenge: you have to be able to move extraordinaly well around here, known of all secrets these woods holds. Trace a #bmap of the Phantom Forest#k, then come talk to me. I shall then evaluate if you're worth to be with us.");
 		qm.forceStartQuest();
-		qm.dispose();
-	}
+	} else if (status == 2) {
+                qm.dispose();
+        }
 }
diff --git a/scripts/quest/8226.js b/scripts/quest/8226.js
index 7f84f351b..3c4fb90ae 100644
--- a/scripts/quest/8226.js
+++ b/scripts/quest/8226.js
@@ -25,6 +25,7 @@ function start(mode, type, selection) {
 	else if (status == 1){
 		qm.sendOk("Your next mission is: defeat the Elderwraiths that roam this forest. These are a tough bunch though, so stay alert. I need you to bring me 100 #t4032010# as proof of your duty.");
 		qm.forceStartQuest();
-		qm.dispose();
-	}
+	} else if (status == 2) {
+                qm.dispose();
+        }
 }
diff --git a/scripts/quest/8227.js b/scripts/quest/8227.js
index 4781e2d16..ab61a188d 100644
--- a/scripts/quest/8227.js
+++ b/scripts/quest/8227.js
@@ -30,7 +30,7 @@ function start(mode, type, selection) {
         } else {
             qm.sendOk("Hey. There's no slot on your ETC.");
         }
-
+    } else if (status == 2) {
         qm.dispose();
     }
 }
@@ -53,7 +53,7 @@ function end(mode, type, selection) {
         } else {
             qm.sendOk("You don't brought the coded letter Jack said? Come on, kid, we need that to decipher our enemies' next step!");
         }
-
+    } else if (status == 1){
         qm.dispose();
     }
 }
diff --git a/scripts/quest/8228.js b/scripts/quest/8228.js
index a17465293..ef54ea70a 100644
--- a/scripts/quest/8228.js
+++ b/scripts/quest/8228.js
@@ -30,7 +30,7 @@ function start(mode, type, selection) {
             } else {
                 qm.sendOk("Hey. There's no slot on your ETC.");
             }
-
+	} else if (status == 2){
             qm.dispose();
 	}
 }
@@ -53,7 +53,7 @@ function end(mode, type, selection) {
         } else {
             qm.sendOk("I'm afraid you don't have the letter you claimed to have with you.");
         }
-
+    } else if (status == 1) {
         qm.dispose();
     }
 }
diff --git a/scripts/quest/8230.js b/scripts/quest/8230.js
index 0f3507e9a..f1983e82d 100644
--- a/scripts/quest/8230.js
+++ b/scripts/quest/8230.js
@@ -25,6 +25,7 @@ function start(mode, type, selection) {
     else if (status == 1) {
             qm.sendOk("That's the thing: the Twisted Masters, great figures that currently holds seize of the Crimsonwood Keep, have planned a large-scale attack to the New Leaf City, that may be happening on the next few days. I can't just stay here observing while they prepare for this attack. However, I can't just leave this position, I must keep an eye on their moves at all costs. There's where you enter: go find Lukan, knight of the past Crimsonwood Keep, that is currently wandering around the woods, and receive from him further orders, he knows what to do.");
             qm.forceStartQuest();
+    } else if (status == 2) {
             qm.dispose();
     }
 }
@@ -41,7 +42,7 @@ function end(mode, type, selection) {
 		} else {
 			qm.sendOk("The folks back there on the city are counting on you on this one. Please hurry up.");
 		}
-	
-		qm.dispose();
-	}
+	} else if (status == 1) {
+                qm.dispose();
+        }
 }
\ No newline at end of file
diff --git a/scripts/quest/8231.js b/scripts/quest/8231.js
index 29da40c56..8d339bb87 100644
--- a/scripts/quest/8231.js
+++ b/scripts/quest/8231.js
@@ -28,6 +28,7 @@ function start(mode, type, selection) {
             var reqs = "#r30 #t4032031##k";
             qm.sendOk("Very well. Get me #r" + reqs + "#k, asap. The NLC is counting on you.");
             qm.forceStartQuest();
+    } else if (status == 2) {
             qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/8232.js b/scripts/quest/8232.js
index 29da40c56..8d339bb87 100644
--- a/scripts/quest/8232.js
+++ b/scripts/quest/8232.js
@@ -28,6 +28,7 @@ function start(mode, type, selection) {
             var reqs = "#r30 #t4032031##k";
             qm.sendOk("Very well. Get me #r" + reqs + "#k, asap. The NLC is counting on you.");
             qm.forceStartQuest();
+    } else if (status == 2) {
             qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/8233.js b/scripts/quest/8233.js
index e6d894a7a..40ff75b5e 100644
--- a/scripts/quest/8233.js
+++ b/scripts/quest/8233.js
@@ -28,6 +28,7 @@ function start(mode, type, selection) {
             var reqs = "#r30 #t4032011##k";
             qm.sendOk("Very well. Get me #r" + reqs + "#k, asap. The NLC is counting on you.");
             qm.forceStartQuest();
+    } else if (status == 2) {
             qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/8234.js b/scripts/quest/8234.js
index e6d894a7a..40ff75b5e 100644
--- a/scripts/quest/8234.js
+++ b/scripts/quest/8234.js
@@ -28,6 +28,7 @@ function start(mode, type, selection) {
             var reqs = "#r30 #t4032011##k";
             qm.sendOk("Very well. Get me #r" + reqs + "#k, asap. The NLC is counting on you.");
             qm.forceStartQuest();
+    } else if (status == 2) {
             qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/8235.js b/scripts/quest/8235.js
index 3ec42e672..1ea6062dd 100644
--- a/scripts/quest/8235.js
+++ b/scripts/quest/8235.js
@@ -28,6 +28,7 @@ function start(mode, type, selection) {
             var reqs = "#r1 #t4031903##k";
             qm.sendOk("Very well. Get me #r" + reqs + "#k, asap. The NLC is counting on you.");
             qm.forceStartQuest();
+    } else if (status == 2) {
             qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/8236.js b/scripts/quest/8236.js
index 3ec42e672..1ea6062dd 100644
--- a/scripts/quest/8236.js
+++ b/scripts/quest/8236.js
@@ -28,6 +28,7 @@ function start(mode, type, selection) {
             var reqs = "#r1 #t4031903##k";
             qm.sendOk("Very well. Get me #r" + reqs + "#k, asap. The NLC is counting on you.");
             qm.forceStartQuest();
+    } else if (status == 2) {
             qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/8237.js b/scripts/quest/8237.js
index c756159db..d47ec715e 100644
--- a/scripts/quest/8237.js
+++ b/scripts/quest/8237.js
@@ -28,6 +28,7 @@ function start(mode, type, selection) {
             var reqs = "#r1 #t4032013##k";
             qm.sendOk("Very well. Get me #r" + reqs + "#k, asap. The NLC is counting on you.");
             qm.forceStartQuest();
+    } else if (status == 2) {
             qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/quest/8238.js b/scripts/quest/8238.js
index c756159db..d47ec715e 100644
--- a/scripts/quest/8238.js
+++ b/scripts/quest/8238.js
@@ -28,6 +28,7 @@ function start(mode, type, selection) {
             var reqs = "#r1 #t4032013##k";
             qm.sendOk("Very well. Get me #r" + reqs + "#k, asap. The NLC is counting on you.");
             qm.forceStartQuest();
+    } else if (status == 2) {
             qm.dispose();
     }
 }
\ No newline at end of file
diff --git a/scripts/reactor/2008007.js b/scripts/reactor/2008007.js
new file mode 100644
index 000000000..da63c803c
--- /dev/null
+++ b/scripts/reactor/2008007.js
@@ -0,0 +1,29 @@
+/*
+    This file is part of the HeavenMS MapleStory Server
+    Copyleft (L) 2016 - 2018 RonanLana
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+/* @Author Ronan
+ * 
+ * 2008007.js: OrbisPQ jail obstacle trigger
+*/
+
+function hit() {
+    var map = rm.getMap();
+    map.moveEnvironment("trap" + rm.getReactor().getName()[5], 1);
+}
\ No newline at end of file
diff --git a/sql/db_database.sql b/sql/db_database.sql
index d8a8dc382..da70aa963 100644
--- a/sql/db_database.sql
+++ b/sql/db_database.sql
@@ -12828,7 +12828,7 @@ CREATE TABLE IF NOT EXISTS `dueypackages` (
   `SenderName` varchar(13) NOT NULL,
   `Mesos` int(10) unsigned DEFAULT '0',
   `TimeStamp` timestamp NOT NULL DEFAULT '2015-01-01 05:00:00',
-  `Message` varchar(200) NOT NULL DEFAULT "",
+  `Message` varchar(200) NULL,
   `Checked` tinyint(1) unsigned DEFAULT '1',
   `Type` tinyint(1) unsigned DEFAULT '0',
   PRIMARY KEY (`PackageId`)
diff --git a/src/client/MapleCharacter.java b/src/client/MapleCharacter.java
index 7e588748c..bfa645f25 100644
--- a/src/client/MapleCharacter.java
+++ b/src/client/MapleCharacter.java
@@ -168,6 +168,7 @@
 import net.server.audit.locks.MonitoredLockType;
 import net.server.audit.locks.factory.MonitoredReentrantLockFactory;
 import org.apache.mina.util.ConcurrentHashSet;
+import scripting.quest.QuestActionManager;
 import server.maps.FieldLimit;
 
 public class MapleCharacter extends AbstractMapleCharacterObject {
@@ -305,6 +306,7 @@
     private List<Integer> viptrockmaps = new ArrayList<>();
     private Map<String, MapleEvents> events = new LinkedHashMap<>();
     private PartyQuest partyQuest = null;
+    private List<Pair<DelayedQuestUpdate, Object[]>> npcUpdateQuests = new LinkedList<>();
     private MapleDragon dragon = null;
     private MapleRing marriageRing;
     private int marriageItemid = -1;
@@ -1173,7 +1175,13 @@ public synchronized void changeJob(MapleJob newJob) {
             if (this.isCygnus()) {
                 gainAp(7, true);
             } else {
-                gainAp(5, true);
+                if (ServerConstants.USE_STARTING_AP_4 || newJob.getId() % 10 >= 1) {
+                    gainAp(5, true);
+                }
+            }
+        } else {    // thanks Periwinks for noticing an AP shortage from lower levels
+            if (ServerConstants.USE_STARTING_AP_4 && newJob.getId() % 1000 >= 1) {
+                gainAp(4, true);
             }
         }
         
@@ -3877,10 +3885,8 @@ private boolean cancelEffect(MapleStatEffect effect, boolean overwrite, long sta
         
         List<Pair<MapleBuffStat, MapleBuffStatValueHolder>> toCancel = deregisterBuffStats(buffstats);
         if (effect.isMonsterRiding()) {
-            if (effect.getSourceId() != Corsair.BATTLE_SHIP) {
-                this.getClient().getWorldServer().unregisterMountHunger(this);
-                this.getMount().setActive(false);
-            }
+            this.getClient().getWorldServer().unregisterMountHunger(this);
+            this.getMount().setActive(false);
         }
         
         if (!overwrite) {
@@ -6168,7 +6174,7 @@ private int getChangedJobSp(MapleJob newJob) {
             spGain += (expectedSp - curSp);
         }
         
-        return getSpGain(spGain, curSp, job);
+        return getSpGain(spGain, curSp, newJob);
     }
     
     private int getUsedSp(MapleJob job) {
@@ -7391,7 +7397,7 @@ public void updateQuestMobCount(int id) {
                         continue;
                     }
                     if (q.progress(id)) {
-                        client.announce(MaplePacketCreator.updateQuest(q, false));
+                        announceUpdateQuest(DelayedQuestUpdate.UPDATE, q, false);
                     }
                 }
             }
@@ -7400,8 +7406,9 @@ public void updateQuestMobCount(int id) {
         }
     }
 
-    public void mount(int id, int skillid) {
+    public MapleMount mount(int id, int skillid) {
         maplemount = new MapleMount(this, id, skillid);
+        return maplemount;
     }
 
     private void playerDead() {
@@ -9632,9 +9639,9 @@ public void updateQuestInfo(int quest, String info) {
             quests.put(q.getId(), qs);
         }
 
-        announce(MaplePacketCreator.updateQuest(qs, false));
+        announceUpdateQuest(DelayedQuestUpdate.UPDATE, qs, false);
         if (qs.getQuest().getInfoNumber() > 0) {
-            announce(MaplePacketCreator.updateQuest(qs, true));
+            announceUpdateQuest(DelayedQuestUpdate.UPDATE, qs, true);
         }
         announce(MaplePacketCreator.updateQuestInfo((short) qs.getQuest().getId(), qs.getNpc()));
     }
@@ -9657,14 +9664,61 @@ public void awardQuestPoint(int awardedPoints) {
         }
     }
     
+    public enum DelayedQuestUpdate {    // quest updates allow player actions during NPC talk...
+        UPDATE, FORFEIT, COMPLETE
+    }
+    
+    private void announceUpdateQuestInternal(Pair<DelayedQuestUpdate, Object[]> questUpdate) {
+        Object[] objs = questUpdate.getRight();
+        
+        switch (questUpdate.getLeft()) {
+            case UPDATE:
+                announce(MaplePacketCreator.updateQuest((MapleQuestStatus) objs[0], (Boolean) objs[1]));
+                break;
+                
+            case FORFEIT:
+                announce(MaplePacketCreator.forfeitQuest((Short) objs[0]));
+                break;
+                
+            case COMPLETE:
+                announce(MaplePacketCreator.completeQuest((Short) objs[0], (Long) objs[1]));
+                break;
+        }
+    }
+    
+    public void announceUpdateQuest(DelayedQuestUpdate questUpdateType, Object... params) {
+        Pair<DelayedQuestUpdate, Object[]> p = new Pair<>(questUpdateType, params);
+        MapleClient c = this.getClient();
+        if (c.getQM() != null || c.getCM() != null) {
+            synchronized (npcUpdateQuests) {
+                npcUpdateQuests.add(p);
+            }
+        } else {
+            announceUpdateQuestInternal(p);
+        }
+    }
+    
+    public void flushDelayedUpdateQuests() {
+        List<Pair<DelayedQuestUpdate, Object[]>> qmQuestUpdateList;
+        
+        synchronized (npcUpdateQuests) {
+            qmQuestUpdateList = new ArrayList<>(npcUpdateQuests);
+            npcUpdateQuests.clear();
+        }
+        
+        for (Pair<DelayedQuestUpdate, Object[]> q : qmQuestUpdateList) {
+            announceUpdateQuestInternal(q);
+        }
+    }
+    
     public void updateQuest(MapleQuestStatus quest) {
         synchronized (quests) {
             quests.put(quest.getQuestID(), quest);
         }
         if (quest.getStatus().equals(MapleQuestStatus.Status.STARTED)) {
-            announce(MaplePacketCreator.updateQuest(quest, false));
+            announceUpdateQuest(DelayedQuestUpdate.UPDATE, quest, false);
             if (quest.getQuest().getInfoNumber() > 0) {
-                announce(MaplePacketCreator.updateQuest(quest, true));
+                announceUpdateQuest(DelayedQuestUpdate.UPDATE, quest, true);
             }
             announce(MaplePacketCreator.updateQuestInfo((short) quest.getQuest().getId(), quest.getNpc()));
         } else if (quest.getStatus().equals(MapleQuestStatus.Status.COMPLETED)) {
@@ -9675,11 +9729,11 @@ public void updateQuest(MapleQuestStatus quest) {
             }
             quest.setCompleted(quest.getCompleted() + 1);   // count quest completed Jayd's idea
             
-            announce(MaplePacketCreator.completeQuest(questid, quest.getCompletionTime()));
+            announceUpdateQuest(DelayedQuestUpdate.COMPLETE, questid, quest.getCompletionTime());
         } else if (quest.getStatus().equals(MapleQuestStatus.Status.NOT_STARTED)) {
-            announce(MaplePacketCreator.updateQuest(quest, false));
+            announceUpdateQuest(DelayedQuestUpdate.UPDATE, quest, false);
             if (quest.getQuest().getInfoNumber() > 0) {
-                announce(MaplePacketCreator.updateQuest(quest, true));
+                announceUpdateQuest(DelayedQuestUpdate.UPDATE, quest, true);
             }
         }
     }
diff --git a/src/client/creator/CharacterFactoryRecipe.java b/src/client/creator/CharacterFactoryRecipe.java
index 80b391c39..74d73f001 100644
--- a/src/client/creator/CharacterFactoryRecipe.java
+++ b/src/client/creator/CharacterFactoryRecipe.java
@@ -23,6 +23,7 @@
 import client.Skill;
 import client.inventory.Item;
 import client.inventory.MapleInventoryType;
+import constants.ServerConstants;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.LinkedHashMap;
 import java.util.LinkedList;
@@ -39,7 +40,7 @@
     private int level, map, top, bottom, shoes, weapon;
     private int str = 4, dex = 4, int_ = 4, luk = 4;
     private int maxHp = 50, maxMp = 5;
-    private int ap = 9, sp = 0;
+    private int ap = 0, sp = 0;
     private int meso = 0;
     private List<Pair<Skill, Integer>> skills = new LinkedList<>();
     
@@ -54,6 +55,15 @@ public CharacterFactoryRecipe(MapleJob job, int level, int map, int top, int bot
         this.bottom = bottom;
         this.shoes = shoes;
         this.weapon = weapon;
+        
+        if (!ServerConstants.USE_STARTING_AP_4) {
+            if (ServerConstants.USE_AUTOASSIGN_STARTERS_AP) {
+                str = 12;
+                dex = 5;
+            } else {
+                ap = 9;
+            }
+        }
     }
     
     public void setStr(int v) {
diff --git a/src/client/processor/DueyProcessor.java b/src/client/processor/DueyProcessor.java
index 793b0c179..d629e565c 100644
--- a/src/client/processor/DueyProcessor.java
+++ b/src/client/processor/DueyProcessor.java
@@ -60,6 +60,7 @@
 public class DueyProcessor {
     
     public enum Actions {
+        TOSERVER_RECV_ITEM(0x00),
         TOSERVER_SEND_ITEM(0x02),
         TOSERVER_CLAIM_PACKAGE(0x04),
         TOSERVER_REMOVE_PACKAGE(0x05),
@@ -113,15 +114,6 @@ public byte getCode() {
         return null;
     }
     
-    private static Timestamp getCurrentDate(boolean quick) {
-        Calendar cal = Calendar.getInstance();
-        if (!quick) {
-            cal.add(Calendar.DATE, 1);
-        }
-        
-        return new Timestamp(cal.getTime().getTime());
-    }
-    
     private static void showDueyNotification(MapleClient c, MapleCharacter player) {
         Connection con = null;
         PreparedStatement ps = null;
@@ -204,7 +196,7 @@ private static DueyPackage getPackageFromDB(ResultSet rs) {
             
             dueypack.setSender(rs.getString("SenderName"));
             dueypack.setMesos(rs.getInt("Mesos"));
-            dueypack.setSentTime(rs.getTimestamp("TimeStamp"));
+            dueypack.setSentTime(rs.getTimestamp("TimeStamp"), rs.getBoolean("Type"));
             dueypack.setMessage(rs.getString("Message"));
             
             return dueypack;
@@ -250,7 +242,7 @@ private static int createPackage(int mesos, String message, String sender, int t
                 ps.setInt(1, toCid);
                 ps.setString(2, sender);
                 ps.setInt(3, mesos);
-                ps.setTimestamp(4, getCurrentDate(quick));
+                ps.setTimestamp(4, new Timestamp(System.currentTimeMillis()));
                 ps.setString(5, message);
                 ps.setInt(6, quick ? 1 : 0);
 
@@ -515,7 +507,11 @@ public static void dueySendTalk(MapleClient c, boolean quickDelivery) {
                 }
                 c.getPlayer().setNpcCooldown(timeNow);
                 
-                c.announce(MaplePacketCreator.sendDuey(quickDelivery ? 0x1A : 0x8, loadPackages(c.getPlayer())));
+                if (quickDelivery) {
+                    c.announce(MaplePacketCreator.sendDuey(0x1A, null));
+                } else {
+                    c.announce(MaplePacketCreator.sendDuey(0x8, loadPackages(c.getPlayer())));
+                }
             } finally {
                 c.releaseClient();
             }
@@ -523,7 +519,7 @@ public static void dueySendTalk(MapleClient c, boolean quickDelivery) {
     }
     
     public static void dueyCreatePackage(Item item, int mesos, String sender, int recipientCid) {
-        int packageId = createPackage(mesos, "", sender, recipientCid, false);
+        int packageId = createPackage(mesos, null, sender, recipientCid, false);
         if (packageId != -1) {
             insertPackageItem(packageId, item);
         }
diff --git a/src/constants/GameConstants.java b/src/constants/GameConstants.java
index b7e64813d..a869edb18 100644
--- a/src/constants/GameConstants.java
+++ b/src/constants/GameConstants.java
@@ -7,9 +7,16 @@
 import java.util.Map;
 import client.MapleJob;
 import constants.skills.Aran;
+import java.io.File;
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
 import java.util.Locale;
+import provider.MapleData;
+import provider.MapleDataDirectoryEntry;
+import provider.MapleDataFileEntry;
+import provider.MapleDataProvider;
+import provider.MapleDataProviderFactory;
+import provider.MapleDataTool;
 import server.maps.MapleMap;
 import server.maps.FieldLimit;
 import server.quest.MapleQuest;
@@ -38,6 +45,8 @@
     public static final MapleDisease[] CPQ_DISEASES = {MapleDisease.SLOW, MapleDisease.SEDUCE, MapleDisease.STUN, MapleDisease.POISON,
                                                        MapleDisease.SEAL, MapleDisease.DARKNESS, MapleDisease.WEAKEN, MapleDisease.CURSE};
     
+    public static final int MAX_FIELD_MOB_DAMAGE = getMaxObstacleMobDamageFromWz() * 2;
+    
     public static int getPlayerBonusDropRate(int slot) {
         return(DROP_RATE_GAIN[slot]);
     }
@@ -672,4 +681,32 @@ public synchronized static Number parseNumber(String value) {
             return 0.0f;
         }
     }
+    
+    private static int getMaxObstacleMobDamageFromWz() {
+        MapleDataProvider mapSource = MapleDataProviderFactory.getDataProvider(new File(System.getProperty("wzpath") + "/Map.wz"));
+        int maxMobDmg = 0;
+        
+        MapleDataDirectoryEntry root = mapSource.getRoot();
+        for (MapleDataDirectoryEntry objData : root.getSubdirectories()) {
+            if (!objData.getName().contentEquals("Obj")) {
+                continue;
+            }
+            
+            for (MapleDataFileEntry obj : objData.getFiles()) {
+                for (MapleData l0 : mapSource.getData(objData.getName() + "/" + obj.getName()).getChildren()) {
+                    for (MapleData l1 : l0.getChildren()) {
+                        for (MapleData l2 : l1.getChildren()) {
+                            int objDmg = MapleDataTool.getIntConvert("s1/mobdamage", l2, 0);
+                            if (maxMobDmg < objDmg) {
+                                maxMobDmg = objDmg;
+                            }
+                        }
+                    }
+                }
+            }
+        }
+        
+        return maxMobDmg;
+    }
+    
 }
diff --git a/src/constants/ServerConstants.java b/src/constants/ServerConstants.java
index 0ace201a7..b037901ae 100644
--- a/src/constants/ServerConstants.java
+++ b/src/constants/ServerConstants.java
@@ -80,6 +80,7 @@
     public static final boolean USE_PARTY_FOR_STARTERS = true;      //Players level 10 or below can create/invite other players on the given level range.
     public static final boolean USE_AUTOASSIGN_STARTERS_AP = false; //Beginners level 10 or below have their AP autoassigned (they can't choose to levelup a stat). Set true ONLY if the localhost doesn't support AP assigning for beginners level 10 or below.
     public static final boolean USE_AUTOASSIGN_SECONDARY_CAP = true;//Prevents AP autoassign from spending on secondary stats after the player class' cap (defined on the autoassign handler) has been reached.
+    public static final boolean USE_STARTING_AP_4 = true;           //Use early-GMS 4/4/4/4 starting stats. To overcome AP shortage, this gives 4AP/5AP at 1st/2nd job advancements.
     public static final boolean USE_AUTOBAN = false;                //Commands the server to detect infractors automatically.
     public static final boolean USE_AUTOBAN_LOG = true;             //Log autoban related messages. Still logs even with USE_AUTOBAN disabled.
     public static final boolean USE_AUTOSAVE = true;                //Enables server autosaving feature (saves characters to DB each 1 hour).
diff --git a/src/net/PacketProcessor.java b/src/net/PacketProcessor.java
index 0112631ff..16d7accdc 100644
--- a/src/net/PacketProcessor.java
+++ b/src/net/PacketProcessor.java
@@ -245,6 +245,7 @@ public void reset(int channel) {
             registerHandler(RecvOpcode.PLAYER_MAP_TRANSFER, new PlayerMapTransitionHandler());
             registerHandler(RecvOpcode.USE_MAPLELIFE, new UseMapleLifeHandler());
             registerHandler(RecvOpcode.USE_CATCH_ITEM, new UseCatchItemHandler());
+            registerHandler(RecvOpcode.FIELD_DAMAGE_MOB, new FieldDamageMobHandler());
             registerHandler(RecvOpcode.MOB_DAMAGE_MOB_FRIENDLY, new MobDamageMobFriendlyHandler());
             registerHandler(RecvOpcode.PARTY_SEARCH_REGISTER, new PartySearchRegisterHandler());
             registerHandler(RecvOpcode.PARTY_SEARCH_START, new PartySearchStartHandler());
diff --git a/src/net/opcodes/RecvOpcode.java b/src/net/opcodes/RecvOpcode.java
index 3d1a942f0..e35762021 100644
--- a/src/net/opcodes/RecvOpcode.java
+++ b/src/net/opcodes/RecvOpcode.java
@@ -170,6 +170,7 @@
     MOVE_DRAGON(0xB5),
     MOVE_LIFE(0xBC),
     AUTO_AGGRO(0xBD),
+    FIELD_DAMAGE_MOB(0xBF),
     MOB_DAMAGE_MOB_FRIENDLY(0xC0),
     MONSTER_BOMB(0xC1),
     MOB_DAMAGE_MOB(0xC2),
diff --git a/src/net/server/Server.java b/src/net/server/Server.java
index 7892ce7d4..94537cb29 100644
--- a/src/net/server/Server.java
+++ b/src/net/server/Server.java
@@ -1868,12 +1868,12 @@ private synchronized void shutdownInternal(boolean restart) {
             }
         }
 
-        resetServerWorlds();
-
         ThreadManager.getInstance().stop();
         TimerManager.getInstance().purge();
         TimerManager.getInstance().stop();
-
+        
+        resetServerWorlds();
+        
         System.out.println("Worlds + Channels are offline.");
         acceptor.unbind();
         acceptor = null;
diff --git a/src/net/server/channel/handlers/AbstractDealDamageHandler.java b/src/net/server/channel/handlers/AbstractDealDamageHandler.java
index 576bf33f2..717275096 100644
--- a/src/net/server/channel/handlers/AbstractDealDamageHandler.java
+++ b/src/net/server/channel/handlers/AbstractDealDamageHandler.java
@@ -321,8 +321,9 @@ public void run() {
                         Skill steal = SkillFactory.getSkill(Bandit.STEAL);
                         if (monster.getStolen().size() < 1) { // One steal per mob <3
                             if (steal.getEffect(player.getSkillLevel(steal)).makeChanceResult()) {
-                                MapleMonsterInformationProvider mi = MapleMonsterInformationProvider.getInstance();
+                                monster.addStolen(0);
                                 
+                                MapleMonsterInformationProvider mi = MapleMonsterInformationProvider.getInstance();
                                 List<Integer> dropPool = mi.retrieveDropPool(monster.getId());
                                 if(!dropPool.isEmpty()) {
                                     Integer rndPool = (int) Math.floor(Math.random() * dropPool.get(dropPool.size() - 1));
@@ -441,11 +442,13 @@ public void run() {
                             } else {
                                 mortalBlow = SkillFactory.getSkill(Sniper.MORTAL_BLOW);
                             }
-                            if (player.getSkillLevel(mortalBlow) > 0) {	                    		
-                                MapleStatEffect mortal = mortalBlow.getEffect(player.getSkillLevel(mortalBlow));
+                            
+                            int skillLevel = player.getSkillLevel(mortalBlow);
+                            if (skillLevel > 0) {
+                                MapleStatEffect mortal = mortalBlow.getEffect(skillLevel);
                                 if (monster.getHp() <= (monster.getStats().getHp() * mortal.getX()) / 100) {
                                     if (Randomizer.rand(1, 100) <= mortal.getY()) {
-                                        monster.getMap().killMonster(monster, player, true);
+                                        map.damageMonster(player, monster, Integer.MAX_VALUE);  // thanks Conrad for noticing reduced EXP gain from skill kill
                                     }
                                 }
                             }
diff --git a/src/net/server/channel/handlers/CashShopSurpriseHandler.java b/src/net/server/channel/handlers/CashShopSurpriseHandler.java
index 7a12f9acc..9f6e9d697 100644
--- a/src/net/server/channel/handlers/CashShopSurpriseHandler.java
+++ b/src/net/server/channel/handlers/CashShopSurpriseHandler.java
@@ -40,12 +40,10 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
             Pair<Item, Item> cssResult = cs.openCashShopSurprise();
             
             if(cssResult != null) {
-                //Item cssItem = cssResult.getLeft(), cssBox = cssResult.getRight();
-                //c.announce(MaplePacketCreator.onCashGachaponOpenSuccess(c.getAccID(), cssBox.getSN(), cssBox.getQuantity(), cssItem, cssItem.getItemId(), cssItem.getQuantity(), true));
-                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xA4));
+                Item cssItem = cssResult.getLeft(), cssBox = cssResult.getRight();
+                c.announce(MaplePacketCreator.onCashGachaponOpenSuccess(c.getAccID(), cssBox.getSN(), cssBox.getQuantity(), cssItem, cssItem.getItemId(), cssItem.getQuantity(), true));
             } else {
-                //c.announce(MaplePacketCreator.onCashItemGachaponOpenFailed());
-                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0x00));
+                c.announce(MaplePacketCreator.onCashItemGachaponOpenFailed());
             }
         }
     }
diff --git a/src/net/server/channel/handlers/DueyHandler.java b/src/net/server/channel/handlers/DueyHandler.java
index 9f7166c1e..89fc36128 100644
--- a/src/net/server/channel/handlers/DueyHandler.java
+++ b/src/net/server/channel/handlers/DueyHandler.java
@@ -37,16 +37,18 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
             c.announce(MaplePacketCreator.enableActions());
             return;
     	}
-            
+        
         byte operation = slea.readByte();
-        if (operation == DueyProcessor.Actions.TOSERVER_SEND_ITEM.getCode()) {
+        if (operation == DueyProcessor.Actions.TOSERVER_RECV_ITEM.getCode()) { // on click 'O' Button, thanks inhyuk
+            DueyProcessor.dueySendTalk(c, false);
+        } else if (operation == DueyProcessor.Actions.TOSERVER_SEND_ITEM.getCode()) {
             byte inventId = slea.readByte();
             short itemPos = slea.readShort();
             short amount = slea.readShort();
             int mesos = slea.readInt();
             String recipient = slea.readMapleAsciiString();
             boolean quick = slea.readByte() != 0;
-            String message = quick ? slea.readMapleAsciiString() : "";
+            String message = quick ? slea.readMapleAsciiString() : null;
             
             DueyProcessor.dueySendItem(c, inventId, itemPos, amount, mesos, message, recipient, quick);
         } else if (operation == DueyProcessor.Actions.TOSERVER_REMOVE_PACKAGE.getCode()) {
diff --git a/src/net/server/channel/handlers/FieldDamageMobHandler.java b/src/net/server/channel/handlers/FieldDamageMobHandler.java
new file mode 100644
index 000000000..4ae3153e9
--- /dev/null
+++ b/src/net/server/channel/handlers/FieldDamageMobHandler.java
@@ -0,0 +1,59 @@
+/*
+    This file is part of the HeavenMS MapleStory Server
+    Copyleft (L) 2016 - 2018 RonanLana
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package net.server.channel.handlers;
+
+import client.MapleCharacter;
+import client.MapleClient;
+import constants.GameConstants;
+import net.AbstractMaplePacketHandler;
+import server.life.MapleMonster;
+import server.life.MapleMonsterInformationProvider;
+import server.maps.MapleMap;
+import tools.FilePrinter;
+import tools.MaplePacketCreator;
+import tools.data.input.SeekableLittleEndianAccessor;
+
+public class FieldDamageMobHandler extends AbstractMaplePacketHandler {
+    
+    @Override
+    public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
+        int mobOid = slea.readInt();    // packet structure found thanks to Darter (Rajan)
+        int dmg = slea.readInt();
+        
+        MapleCharacter chr = c.getPlayer();
+        MapleMap map = chr.getMap();
+        
+        if (map.getEnvironment().isEmpty()) {   // no environment objects activated to actually hit the mob
+            FilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + " tried to use an obstacle on mapid " + map.getId() + " to attack.");
+            return;
+        }
+        
+        MapleMonster mob = map.getMonsterByOid(mobOid);
+        if (mob != null) {
+            if (dmg < 0 || dmg > GameConstants.MAX_FIELD_MOB_DAMAGE) {
+                FilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + " tried to use an obstacle on mapid " + map.getId() + " to attack " + MapleMonsterInformationProvider.getInstance().getMobNameFromId(mob.getId()) + " with damage " + dmg);
+                return;
+            }
+            
+            map.broadcastMessage(chr, MaplePacketCreator.damageMonster(mobOid, dmg), true);
+            map.damageMonster(chr, mob, dmg);
+        }
+    }
+}
diff --git a/src/net/server/channel/handlers/HealOvertimeHandler.java b/src/net/server/channel/handlers/HealOvertimeHandler.java
index dec1b5c1b..35ab9233d 100644
--- a/src/net/server/channel/handlers/HealOvertimeHandler.java
+++ b/src/net/server/channel/handlers/HealOvertimeHandler.java
@@ -25,10 +25,9 @@
 import client.MapleClient;
 import client.autoban.AutobanFactory;
 import client.autoban.AutobanManager;
-import constants.GameConstants;
 import net.AbstractMaplePacketHandler;
 import net.server.Server;
-import server.maps.MapleMapFactory;
+import server.maps.MapleMap;
 import tools.data.input.SeekableLittleEndianAccessor;
 import tools.MaplePacketCreator;
 
@@ -47,7 +46,8 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
             abm.setTimestamp(8, timestamp, 28);  // thanks Vcoc & Thora for pointing out d/c happening here
             if ((abm.getLastSpam(0) + 1500) > timestamp) AutobanFactory.FAST_HP_HEALING.addPoint(abm, "Fast hp healing");
             
-            int abHeal = (int)(77 * MapleMapFactory.getMapRecoveryRate(chr.getMapId()) * 1.5); // thanks Ari for noticing players not getting healed in sauna in certain cases
+            MapleMap map = chr.getMap();
+            int abHeal = (int)(77 * map.getRecovery() * 1.5); // thanks Ari for noticing players not getting healed in sauna in certain cases
             if (healHP > abHeal) {
                 AutobanFactory.HIGH_HP_HEALING.autoban(chr, "Healing: " + healHP + "; Max is " + abHeal + ".");
                 return;
@@ -60,7 +60,10 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
         short healMP = slea.readShort();
         if (healMP != 0 && healMP < 1000) {
             abm.setTimestamp(9, timestamp, 28);
-            if ((abm.getLastSpam(1) + 1500) > timestamp) AutobanFactory.FAST_MP_HEALING.addPoint(abm, "Fast mp healing");
+            if ((abm.getLastSpam(1) + 1500) > timestamp) {
+                AutobanFactory.FAST_MP_HEALING.addPoint(abm, "Fast mp healing");
+                return;     // thanks resinate for noticing mp being gained even after detection
+            }
             chr.addMP(healMP);
             abm.spam(1, timestamp);
         }
diff --git a/src/net/server/channel/handlers/HiredMerchantRequest.java b/src/net/server/channel/handlers/HiredMerchantRequest.java
index 29fe4a2b4..ab3a75e6e 100644
--- a/src/net/server/channel/handlers/HiredMerchantRequest.java
+++ b/src/net/server/channel/handlers/HiredMerchantRequest.java
@@ -27,8 +27,12 @@
 import java.util.Arrays;
 import client.MapleClient;
 import constants.GameConstants;
+import java.awt.Point;
 import net.AbstractMaplePacketHandler;
+import server.MaplePortal;
+import server.maps.MapleMapObject;
 import server.maps.MapleMapObjectType;
+import server.maps.MaplePlayerShop;
 import tools.MaplePacketCreator;
 import tools.data.input.SeekableLittleEndianAccessor;
 
@@ -40,7 +44,34 @@
     @Override
     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
         MapleCharacter chr = c.getPlayer();
-        if (chr.getMap().getMapObjectsInRange(chr.getPosition(), 23000, Arrays.asList(MapleMapObjectType.HIRED_MERCHANT)).isEmpty() && (GameConstants.isFreeMarketRoom(chr.getMapId()))) {
+        
+        try {
+            for (MapleMapObject mmo : chr.getMap().getMapObjectsInRange(chr.getPosition(), 23000, Arrays.asList(MapleMapObjectType.HIRED_MERCHANT, MapleMapObjectType.PLAYER))) {
+                if (mmo instanceof MapleCharacter) {
+                    MapleCharacter mc = (MapleCharacter) mmo;
+
+                    MaplePlayerShop shop = mc.getPlayerShop();
+                    if (shop != null && shop.isOwner(mc)) {
+                        chr.announce(MaplePacketCreator.getMiniRoomError(13));
+                        return;
+                    }
+                } else {
+                    chr.announce(MaplePacketCreator.getMiniRoomError(13));
+                    return;
+                }
+            }
+
+            Point cpos = chr.getPosition();
+            MaplePortal portal = chr.getMap().findClosestTeleportPortal(cpos);
+            if (portal != null && portal.getPosition().distance(cpos) < 120.0) {
+                chr.announce(MaplePacketCreator.getMiniRoomError(10));
+                return;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        
+        if (GameConstants.isFreeMarketRoom(chr.getMapId())) {
             if (!chr.hasMerchant()) {
                 try {
                     if (ItemFactory.MERCHANT.loadItems(chr.getId(), false).isEmpty() && chr.getMerchantMeso() == 0) {
diff --git a/src/net/server/channel/handlers/NPCAnimationHandler.java b/src/net/server/channel/handlers/NPCAnimationHandler.java
index d12960167..372fa4293 100644
--- a/src/net/server/channel/handlers/NPCAnimationHandler.java
+++ b/src/net/server/channel/handlers/NPCAnimationHandler.java
@@ -30,6 +30,10 @@
 public final class NPCAnimationHandler extends AbstractMaplePacketHandler {
     @Override
     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
+        if (c.getPlayer().isChangingMaps()) {   // possible cause of error 38 in some map transition scenarios, thanks Arnah
+            return;
+        }
+        
         MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
         int length = (int) slea.available();
         if (length == 6) { // NPC Talk
diff --git a/src/net/server/channel/handlers/PlayerInteractionHandler.java b/src/net/server/channel/handlers/PlayerInteractionHandler.java
index bd38fa41e..463dcb4f1 100644
--- a/src/net/server/channel/handlers/PlayerInteractionHandler.java
+++ b/src/net/server/channel/handlers/PlayerInteractionHandler.java
@@ -34,11 +34,13 @@
 
 import net.AbstractMaplePacketHandler;
 import server.MapleItemInformationProvider;
+import server.MaplePortal;
 import server.MapleTrade;
 import constants.GameConstants;
 import server.maps.FieldLimit;
 import server.maps.MapleHiredMerchant;
 import server.maps.MapleMapObject;
+import server.maps.MapleMapObjectType;
 import server.maps.MapleMiniGame;
 import server.maps.MapleMiniGame.MiniGameType;
 import server.maps.MaplePlayerShop;
@@ -49,6 +51,7 @@
 
 import java.awt.Point;
 import java.sql.SQLException;
+import java.util.Arrays;
 
 /**
  *
@@ -237,13 +240,9 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                         return;
                     }
                     
-                    try {
-                        Point cpos = chr.getPosition();
-                        if (chr.getMap().findClosestWarpPortal(cpos).getPosition().distance(cpos) < 120.0) {
-                            chr.getClient().announce(MaplePacketCreator.getMiniRoomError(10));
-                            return;
-                        }
-                    } catch (NullPointerException npe) {}
+                    if (!canPlaceStore(chr)) {
+                        return;
+                    }
                     
                     String desc = slea.readMapleAsciiString();
                     slea.skip(3);
@@ -362,6 +361,10 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                     
                     c.announce(MaplePacketCreator.hiredMerchantOwnerMaintenanceLeave());
                 }
+                
+                if (!canPlaceStore(chr)) {    // thanks Ari for noticing player shops overlapping on opening time
+                    return;
+                }
 
                 MaplePlayerShop shop = chr.getPlayerShop();
                 MapleHiredMerchant merchant = chr.getHiredMerchant();
@@ -797,4 +800,37 @@ private static boolean isTradeOpen(MapleCharacter chr) {
         
         return false;
     }
+    
+    private static boolean canPlaceStore(MapleCharacter chr) {
+        try {
+            for (MapleMapObject mmo : chr.getMap().getMapObjectsInRange(chr.getPosition(), 23000, Arrays.asList(MapleMapObjectType.HIRED_MERCHANT, MapleMapObjectType.PLAYER))) {
+                if (mmo instanceof MapleCharacter) {
+                    MapleCharacter mc = (MapleCharacter) mmo;
+                    if (mc.getId() == chr.getId()) {
+                        continue;
+                    }
+
+                    MaplePlayerShop shop = mc.getPlayerShop();
+                    if (shop != null && shop.isOwner(mc)) {
+                        chr.announce(MaplePacketCreator.getMiniRoomError(13));
+                        return false;
+                    }
+                } else {
+                    chr.announce(MaplePacketCreator.getMiniRoomError(13));
+                    return false;
+                }
+            }
+
+            Point cpos = chr.getPosition();
+            MaplePortal portal = chr.getMap().findClosestTeleportPortal(cpos);
+            if (portal != null && portal.getPosition().distance(cpos) < 120.0) {
+                chr.announce(MaplePacketCreator.getMiniRoomError(10));
+                return false;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        
+        return true;
+    }
 }
diff --git a/src/net/server/channel/handlers/RaiseUIStateHandler.java b/src/net/server/channel/handlers/RaiseUIStateHandler.java
index d5add73e1..e0d602d94 100644
--- a/src/net/server/channel/handlers/RaiseUIStateHandler.java
+++ b/src/net/server/channel/handlers/RaiseUIStateHandler.java
@@ -1,10 +1,10 @@
 package net.server.channel.handlers;
 
+import client.MapleCharacter.DelayedQuestUpdate;
 import client.MapleClient;
 import client.MapleQuestStatus;
 import net.AbstractMaplePacketHandler;
 import server.quest.MapleQuest;
-import tools.MaplePacketCreator;
 import tools.data.input.SeekableLittleEndianAccessor;
 
 /**
@@ -25,7 +25,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                     quest.forceStart(c.getPlayer(), 22000);
                     c.getPlayer().updateQuestInfo(quest.getId(), "0"); 
                 } else if (mqs.getStatus() == MapleQuestStatus.Status.STARTED) {
-                    c.announce(MaplePacketCreator.updateQuest(mqs, false));
+                    c.getPlayer().announceUpdateQuest(DelayedQuestUpdate.UPDATE, mqs, false);
                 } else {
                     //c.announce(MaplePacketCreator.updateQuestInfo(mqs.getQuestID(), 22000, "0"));
                 }
diff --git a/src/net/server/worker/RespawnWorker.java b/src/net/server/worker/RespawnWorker.java
index 3ea15c373..f5eda668f 100644
--- a/src/net/server/worker/RespawnWorker.java
+++ b/src/net/server/worker/RespawnWorker.java
@@ -1,7 +1,9 @@
 package net.server.worker;
 
+import net.server.PlayerStorage;
 import net.server.Server;
 import net.server.channel.Channel;
+import server.maps.MapleMapManager;
 
 /**
  * @author Resinate
@@ -11,8 +13,14 @@
     @Override
     public void run() {
         for (Channel ch : Server.getInstance().getAllChannels()) {
-            if (!ch.getPlayerStorage().getAllCharacters().isEmpty()) {
-                ch.getMapFactory().updateMaps();
+            PlayerStorage ps = ch.getPlayerStorage();
+            if (ps != null) {
+                if (!ps.getAllCharacters().isEmpty()) {
+                    MapleMapManager mapManager = ch.getMapFactory();
+                    if (mapManager != null) {
+                        mapManager.updateMaps();
+                    }
+                }
             }
         }
     }
diff --git a/src/scripting/AbstractPlayerInteraction.java b/src/scripting/AbstractPlayerInteraction.java
index b6f8c031a..1aea53834 100644
--- a/src/scripting/AbstractPlayerInteraction.java
+++ b/src/scripting/AbstractPlayerInteraction.java
@@ -53,6 +53,7 @@
 import server.quest.MapleQuest;
 import tools.MaplePacketCreator;
 import client.MapleCharacter;
+import client.MapleCharacter.DelayedQuestUpdate;
 import client.MapleClient;
 import client.MapleQuestStatus;
 import client.SkillFactory;
@@ -468,12 +469,12 @@ public String getStringQuestProgress(int qid, int pid) {
         
         public void resetAllQuestProgress(int qid) {
                 getPlayer().getQuest(MapleQuest.getInstance(qid)).resetAllProgress();
-                getClient().announce(MaplePacketCreator.updateQuest(getPlayer().getQuest(MapleQuest.getInstance(qid)), false));
+                getPlayer().announceUpdateQuest(DelayedQuestUpdate.UPDATE, getPlayer().getQuest(MapleQuest.getInstance(qid)), false);
         }
         
         public void resetQuestProgress(int qid, int pid) {
                 getPlayer().getQuest(MapleQuest.getInstance(qid)).resetProgress(pid);
-                getClient().announce(MaplePacketCreator.updateQuest(getPlayer().getQuest(MapleQuest.getInstance(qid)), false));
+                getPlayer().announceUpdateQuest(DelayedQuestUpdate.UPDATE, getPlayer().getQuest(MapleQuest.getInstance(qid)), false);
         }
         
         public boolean forceStartQuest(int id) {
diff --git a/src/scripting/AbstractScriptManager.java b/src/scripting/AbstractScriptManager.java
index 1fdf81c3e..beacea578 100644
--- a/src/scripting/AbstractScriptManager.java
+++ b/src/scripting/AbstractScriptManager.java
@@ -70,7 +70,7 @@ protected NashornScriptEngine getScriptEngine(String path, MapleClient c) {
         NashornScriptEngine engine = c.getScriptEngine(cachePath);
 
         if (engine == null) {
-            engine = getScriptEngine(cachePath);
+            engine = getScriptEngine(path);
             c.setScriptEngine(path, engine);
         }
 
diff --git a/src/scripting/event/EventManager.java b/src/scripting/event/EventManager.java
index 2a15dc294..c2f89d3a5 100644
--- a/src/scripting/event/EventManager.java
+++ b/src/scripting/event/EventManager.java
@@ -347,6 +347,12 @@ private void setLockLobby(int lobbyId, boolean lock) {
     private boolean startLobbyInstance(int lobbyId) {
         lobbyLock.lock();
         try {
+            if (lobbyId < 0) {
+                lobbyId = 0;
+            } else if (lobbyId >= maxLobbys) {
+                lobbyId = maxLobbys - 1;
+            }
+            
             if(!openedLobbys.get(lobbyId)) {
                 openedLobbys.set(lobbyId, true);
                 return true;
diff --git a/src/scripting/map/MapScriptMethods.java b/src/scripting/map/MapScriptMethods.java
index d9faa6cb3..b302cfe69 100644
--- a/src/scripting/map/MapScriptMethods.java
+++ b/src/scripting/map/MapScriptMethods.java
@@ -21,6 +21,7 @@
  */
 package scripting.map;
 
+import client.MapleCharacter.DelayedQuestUpdate;
 import client.MapleClient;
 import client.MapleQuestStatus;
 import scripting.AbstractPlayerInteraction;
@@ -99,7 +100,7 @@ public void explorerQuest(short questid, String questName) {
         }
         String status = Integer.toString(q.getMedalProgress());
         String infoex = quest.getInfoEx();
-        getPlayer().announce(MaplePacketCreator.updateQuest(q, true));
+        getPlayer().announceUpdateQuest(DelayedQuestUpdate.UPDATE, q, true);
         StringBuilder smp = new StringBuilder();
         StringBuilder etm = new StringBuilder();
         if (status.equals(infoex)) {
@@ -127,7 +128,7 @@ public void touchTheSky() { //29004
             return;
         }
         String status = Integer.toString(q.getMedalProgress());
-        getPlayer().announce(MaplePacketCreator.updateQuest(q, true));
+        getPlayer().announceUpdateQuest(DelayedQuestUpdate.UPDATE, q, true);
         getPlayer().announce(MaplePacketCreator.earnTitleMessage(status + "/5 Completed"));
         getPlayer().announce(MaplePacketCreator.earnTitleMessage("The One Who's Touched the Sky title in progress."));
         if (Integer.toString(q.getMedalProgress()).equals(quest.getInfoEx())) {
diff --git a/src/scripting/npc/NPCScriptManager.java b/src/scripting/npc/NPCScriptManager.java
index 1abc21863..bee8cc60f 100644
--- a/src/scripting/npc/NPCScriptManager.java
+++ b/src/scripting/npc/NPCScriptManager.java
@@ -200,6 +200,8 @@ public void dispose(NPCConversationManager cm) {
         } else {
             resetContext(scriptFolder + "/" + cm.getNpc() + ".js", c);
         }
+        
+        c.getPlayer().flushDelayedUpdateQuests();
     }
 
     public void dispose(MapleClient c) {
diff --git a/src/scripting/quest/QuestScriptManager.java b/src/scripting/quest/QuestScriptManager.java
index 46b7dc7f6..97cbc75e6 100644
--- a/src/scripting/quest/QuestScriptManager.java
+++ b/src/scripting/quest/QuestScriptManager.java
@@ -163,6 +163,7 @@ public void dispose(QuestActionManager qm, MapleClient c) {
 		scripts.remove(c);
                 c.getPlayer().setNpcCooldown(System.currentTimeMillis());
 		resetContext("quest/" + qm.getQuest() + ".js", c);
+                c.getPlayer().flushDelayedUpdateQuests();
 	}
 
 	public void dispose(MapleClient c) {
diff --git a/src/scripting/reactor/ReactorActionManager.java b/src/scripting/reactor/ReactorActionManager.java
index 89ff6c338..cecac7436 100644
--- a/src/scripting/reactor/ReactorActionManager.java
+++ b/src/scripting/reactor/ReactorActionManager.java
@@ -30,6 +30,7 @@
 import constants.ServerConstants;
 import java.awt.Point;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 import java.util.concurrent.ScheduledFuture;
 import java.util.logging.Level;
@@ -57,24 +58,70 @@
  */
 public class ReactorActionManager extends AbstractPlayerInteraction {
     private MapleReactor reactor;
-    private MapleClient client;
     private Invocable iv;
     private ScheduledFuture<?> sprayTask = null;
 
     public ReactorActionManager(MapleClient c, MapleReactor reactor, Invocable iv) {
         super(c);
         this.reactor = reactor;
-        this.client = c;
         this.iv = iv;
     }
 
     public void hitReactor() {
-        reactor.hitReactor(client);
+        reactor.hitReactor(c);
     }
     
     public void destroyNpc(int npcId) {
         reactor.getMap().destroyNPC(npcId);
     }
+    
+    private static void sortDropEntries(List<ReactorDropEntry> from, List<ReactorDropEntry> item, List<ReactorDropEntry> visibleQuest, List<ReactorDropEntry> otherQuest, MapleCharacter chr) {
+        MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();
+        
+        for(ReactorDropEntry mde : from) {
+            if(!ii.isQuestItem(mde.itemId)) {
+                item.add(mde);
+            } else {
+                if(chr.needQuestItem(mde.questid, mde.itemId)) {
+                    visibleQuest.add(mde);
+                } else {
+                    otherQuest.add(mde);
+                }
+            }
+        }
+    }
+    
+    private static List<ReactorDropEntry> assembleReactorDropEntries(MapleCharacter chr, List<ReactorDropEntry> items) {
+        final List<ReactorDropEntry> dropEntry = new ArrayList<>();
+        final List<ReactorDropEntry> visibleQuestEntry = new ArrayList<>();
+        final List<ReactorDropEntry> otherQuestEntry = new ArrayList<>();
+        sortDropEntries(items, dropEntry, visibleQuestEntry, otherQuestEntry, chr);
+        
+        Collections.shuffle(dropEntry);
+        Collections.shuffle(visibleQuestEntry);
+        Collections.shuffle(otherQuestEntry);
+        
+        items.clear();
+        items.addAll(dropEntry);
+        items.addAll(visibleQuestEntry);
+        items.addAll(otherQuestEntry);
+        
+        List<ReactorDropEntry> items1 = new ArrayList<>(items.size());
+        List<ReactorDropEntry> items2 = new ArrayList<>(items.size() / 2);
+        
+        for (int i = 0; i < items.size(); i++) {
+            if (i % 2 == 0) {
+                items1.add(items.get(i));
+            } else {
+                items2.add(items.get(i));
+            }
+        }
+        
+        Collections.reverse(items1);
+        items1.addAll(items2);
+        
+        return items1;
+    }
 
     public void sprayItems() {
         sprayItems(false, 0, 0, 0, 0);
@@ -109,10 +156,10 @@ public void dropItems(int posX, int posY, boolean meso, int mesoChance, int minM
     }
     
     public void dropItems(boolean delayed, int posX, int posY, boolean meso, int mesoChance, final int minMeso, final int maxMeso, int minItems) {
-        if(c.getPlayer() == null) return;
-        
-        List<ReactorDropEntry> items = generateDropList(getDropChances(), c.getPlayer().getDropRate(), meso, mesoChance, minItems);
+        MapleCharacter chr = c.getPlayer();
+        if(chr == null) return;
         
+        List<ReactorDropEntry> items = assembleReactorDropEntries(chr, generateDropList(getDropChances(), chr.getDropRate(), meso, mesoChance, minItems));
         if(items.size() % 2 == 0) posX -= 12;
         final Point dropPos = new Point(posX, posY);
         
@@ -127,8 +174,8 @@ public void dropItems(boolean delayed, int posX, int posY, boolean meso, int mes
                 if (d.itemId == 0) {
                     int range = maxMeso - minMeso;
                     int displayDrop = (int) (Math.random() * range) + minMeso;
-                    int mesoDrop = (displayDrop * client.getWorldServer().getMesoRate());
-                    reactor.getMap().spawnMesoDrop(mesoDrop, reactor.getMap().calcDropPos(dropPos, reactor.getPosition()), reactor, client.getPlayer(), false, (byte) 2);
+                    int mesoDrop = (displayDrop * c.getWorldServer().getMesoRate());
+                    reactor.getMap().spawnMesoDrop(mesoDrop, reactor.getMap().calcDropPos(dropPos, reactor.getPosition()), reactor, c.getPlayer(), false, (byte) 2);
                 } else {
                     Item drop;
                     
@@ -142,10 +189,9 @@ public void dropItems(boolean delayed, int posX, int posY, boolean meso, int mes
                 }
             }
         } else {
-            final MapleCharacter chr = client.getPlayer();
             final MapleReactor r = reactor;
             final List<ReactorDropEntry> dropItems = items;
-            final int worldMesoRate = client.getWorldServer().getMesoRate();
+            final int worldMesoRate = c.getWorldServer().getMesoRate();
             
             dropPos.x -= (12 * items.size());
             
@@ -178,7 +224,7 @@ public void run() {
                     
                     dropPos.x += 25;
                 }
-            }, 100);
+            }, 200);
         }
     }
 
@@ -187,37 +233,21 @@ public void run() {
     }
     
     private List<ReactorDropEntry> generateDropList(List<ReactorDropEntry> drops, int dropRate, boolean meso, int mesoChance, int minItems) {
-        MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();
-        
         List<ReactorDropEntry> items = new ArrayList<>();
-        List<ReactorDropEntry> questItems = new ArrayList<>();
-        int numItems = 0;
-        
         if (meso && Math.random() < (1 / (double) mesoChance)) {
             items.add(new ReactorDropEntry(0, mesoChance, -1));
         }
         
         for(ReactorDropEntry mde : drops) {
             if (Math.random() < (dropRate / (double) mde.chance)) {
-                if(!ii.isQuestItem(mde.itemId)) {
-                    items.add(mde);
-                } else {
-                    questItems.add(mde);
-                }
-                
-                numItems++;
+                items.add(mde);
             }
         }
         
-        while (numItems < minItems) {
+        while (items.size() < minItems) {
             items.add(new ReactorDropEntry(0, mesoChance, -1));
-            numItems++;
         }
         
-        java.util.Collections.shuffle(items);
-        java.util.Collections.shuffle(questItems);
-        
-        items.addAll(questItems);
         return items;
     }
 
@@ -226,7 +256,7 @@ public void spawnMonster(int id) {
     }
 
     public void createMapMonitor(int mapId, String portal) {
-        new MapMonitor(client.getChannelServer().getMapFactory().getMap(mapId), portal);
+        new MapMonitor(c.getChannelServer().getMapFactory().getMap(mapId), portal);
     }
 
     public void spawnMonster(int id, int qty) {
diff --git a/src/server/CashShop.java b/src/server/CashShop.java
index ae07b4890..acdd2ddc5 100644
--- a/src/server/CashShop.java
+++ b/src/server/CashShop.java
@@ -157,7 +157,7 @@ public byte getInfo() {
         private static final Map<Integer, CashItem> items = new HashMap<>();
         private static final Map<Integer, List<Integer>> packages = new HashMap<>();
         private static final List<SpecialCashItem> specialcashitems = new ArrayList<>();
-        private static final List<Integer> randomitemids = new ArrayList<>();
+        private static final List<Integer> randomitemsns = new ArrayList<>();
 
         static {
             MapleDataProvider etc = MapleDataProviderFactory.getDataProvider(new File("wz/Etc.wz"));
@@ -184,7 +184,7 @@ public byte getInfo() {
             
             for(Entry<Integer, CashItem> e : items.entrySet()) {
                 if(e.getValue().isOnSale()) {
-                    randomitemids.add(e.getKey());
+                    randomitemsns.add(e.getKey());
                 }
             }
             
@@ -212,10 +212,10 @@ public byte getInfo() {
         }
 
         public static CashItem getRandomCashItem() {
-            if(randomitemids.isEmpty()) return null;
+            if(randomitemsns.isEmpty()) return null;
             
-            int rnd = (int)(Math.random() * randomitemids.size());
-            return items.get(randomitemids.get(rnd));
+            int rnd = (int)(Math.random() * randomitemsns.size());
+            return items.get(randomitemsns.get(rnd));
         }
         
         public static CashItem getItem(int sn) {
diff --git a/src/server/DueyPackage.java b/src/server/DueyPackage.java
index a7f7f6967..1b95a0250 100644
--- a/src/server/DueyPackage.java
+++ b/src/server/DueyPackage.java
@@ -29,7 +29,7 @@
     private String sender = null;
     private Item item = null;
     private int mesos = 0;
-    private String message = "";
+    private String message = null;
     private Calendar timestamp;
     private int packageId = 0;
 
@@ -96,13 +96,15 @@ public boolean isDeliveringTime() {
         }
     }
 
-    public void setSentTime(Timestamp ts) {
+    public void setSentTime(Timestamp ts, boolean quick) {
         Calendar cal = Calendar.getInstance();
         cal.setTimeInMillis(ts.getTime());
-        cal.set(Calendar.HOUR, 0);
-        cal.set(Calendar.MINUTE, 0);
-        cal.set(Calendar.SECOND, 0);
-        cal.set(Calendar.MILLISECOND, 0);
+        
+        if (quick) {
+            if (System.currentTimeMillis() - ts.getTime() < 24 * 60 * 60 * 1000) {  // thanks inhyuk for noticing quick delivery packages unavailable to retrieve from the get-go
+                cal.add(Calendar.DATE, -1);
+            }
+        }
         
         this.timestamp = cal;
     }
diff --git a/src/server/MaplePortal.java b/src/server/MaplePortal.java
index 3e0c02c09..23ff66043 100644
--- a/src/server/MaplePortal.java
+++ b/src/server/MaplePortal.java
@@ -25,6 +25,7 @@
 import client.MapleClient;
 
 public interface MaplePortal {
+    public final int TELEPORT_PORTAL = 1;
     public final int MAP_PORTAL = 2;
     public final int DOOR_PORTAL = 6;
     public static boolean OPEN = true;
diff --git a/src/server/MapleStatEffect.java b/src/server/MapleStatEffect.java
index 64f9e7240..a0c2dbac4 100644
--- a/src/server/MapleStatEffect.java
+++ b/src/server/MapleStatEffect.java
@@ -1288,6 +1288,7 @@ private void applyBuffEffect(MapleCharacter applyfrom, MapleCharacter applyto, b
             if (mount != null) {
                 ridingMountId = mount.getItemId();
             }
+            
             if (sourceid == Corsair.BATTLE_SHIP) {
                 ridingMountId = 1932000;
             } else if (sourceid == Beginner.SPACESHIP || sourceid == Noblesse.SPACESHIP) {
@@ -1300,28 +1301,12 @@ private void applyBuffEffect(MapleCharacter applyfrom, MapleCharacter applyto, b
                 ridingMountId = 1932005;
             } else if (sourceid == Beginner.BALROG_MOUNT || sourceid == Noblesse.BALROG_MOUNT || sourceid == Legend.BALROG_MOUNT) {
                 ridingMountId = 1932010;
-            } else {
-                if (applyto.getMount() == null) {
-                    applyto.mount(ridingMountId, sourceid);
-                }
-
-                applyto.getClient().getWorldServer().registerMountHunger(applyto);
-            }
-            if (sourceid == Corsair.BATTLE_SHIP) {
-                givemount = new MapleMount(applyto, 1932000, sourceid);
-            } else if (sourceid == Beginner.SPACESHIP || sourceid == Noblesse.SPACESHIP) {
-                givemount = new MapleMount(applyto, 1932000 + applyto.getSkillLevel(sourceid), sourceid);
-            } else if (sourceid == Beginner.YETI_MOUNT1 || sourceid == Noblesse.YETI_MOUNT1 || sourceid == Legend.YETI_MOUNT1) {
-                givemount = new MapleMount(applyto, 1932003, sourceid);
-            } else if (sourceid == Beginner.YETI_MOUNT2 || sourceid == Noblesse.YETI_MOUNT2 || sourceid == Legend.YETI_MOUNT2) {
-                givemount = new MapleMount(applyto, 1932004, sourceid);
-            } else if (sourceid == Beginner.WITCH_BROOMSTICK || sourceid == Noblesse.WITCH_BROOMSTICK || sourceid == Legend.WITCH_BROOMSTICK) {
-                givemount = new MapleMount(applyto, 1932005, sourceid);
-            } else if (sourceid == Beginner.BALROG_MOUNT || sourceid == Noblesse.BALROG_MOUNT || sourceid == Legend.BALROG_MOUNT) {
-                givemount = new MapleMount(applyto, 1932010, sourceid);
-            } else {
-                givemount = applyto.getMount();
             }
+            
+            // thanks inhyuk for noticing some skill mounts not acting properly for other players when changing maps
+            givemount = applyto.mount(ridingMountId, sourceid);
+            applyto.getClient().getWorldServer().registerMountHunger(applyto);
+            
             localDuration = sourceid;
             localsourceid = ridingMountId;
             localstatups = Collections.singletonList(new Pair<>(MapleBuffStat.MONSTER_RIDING, 0));
diff --git a/src/server/expeditions/MapleExpeditionBossLog.java b/src/server/expeditions/MapleExpeditionBossLog.java
index 02549ec4f..fac70f4ae 100644
--- a/src/server/expeditions/MapleExpeditionBossLog.java
+++ b/src/server/expeditions/MapleExpeditionBossLog.java
@@ -65,12 +65,9 @@ private BossLogEntry(int entries, int minChannel, int maxChannel, int timeLength
         private static List<Pair<Timestamp, BossLogEntry>> getBossLogResetTimestamps(Calendar timeNow, boolean week) {
             List<Pair<Timestamp, BossLogEntry>> resetTimestamps = new LinkedList<>();
             
+            Timestamp ts = new Timestamp(timeNow.getTime().getTime());  // reset all table entries actually, thanks Conrad
             for (BossLogEntry b : BossLogEntry.values()) {
                 if (b.week == week) {
-                    Calendar c = (Calendar) timeNow.clone();
-                    c.roll(Calendar.DAY_OF_MONTH, -1 * (week ? 7 : 1) * b.timeLength);
-                    Timestamp ts = new Timestamp(c.getTime().getTime());
-                    
                     resetTimestamps.add(new Pair<>(ts, b));
                 }
             }
diff --git a/src/server/life/MapleMonster.java b/src/server/life/MapleMonster.java
index 0bb34c0d7..c65000697 100644
--- a/src/server/life/MapleMonster.java
+++ b/src/server/life/MapleMonster.java
@@ -97,7 +97,7 @@
     private Set<Integer> usedAttacks = new HashSet<>();
     private Set<Integer> calledMobOids = null;
     private WeakReference<MapleMonster> callerMob = new WeakReference<>(null);
-    private List<Integer> stolenItems = new ArrayList<>();
+    private List<Integer> stolenItems = new ArrayList<>(5);
     private int team;
     private int parentMobOid = 0;
     private final HashMap<Integer, AtomicLong> takenDamage = new HashMap<>();
diff --git a/src/server/life/MapleMonsterInformationProvider.java b/src/server/life/MapleMonsterInformationProvider.java
index f4d44ea31..f5c439433 100644
--- a/src/server/life/MapleMonsterInformationProvider.java
+++ b/src/server/life/MapleMonsterInformationProvider.java
@@ -152,7 +152,7 @@ private void retrieveGlobal() {
 
                     int rnd = Randomizer.rand(mde.Minimum, mde.Maximum);
                     for (int i = 0; i < rnd - 1; i++) {
-                        extra.add(mde);   // this passes copies of the equips' MDE with min/max quantity > 1, but idc it'll be unused anyways
+                        extra.add(mde);   // this passes copies of the equips' MDE with min/max quantity > 1, but idc on equips they are unused anyways
                     }
                 }
             }
diff --git a/src/server/maps/MapleMap.java b/src/server/maps/MapleMap.java
index 98eca8265..e7503d227 100644
--- a/src/server/maps/MapleMap.java
+++ b/src/server/maps/MapleMap.java
@@ -137,6 +137,7 @@
     private int timeLimit;
     private long mapTimer;
     private int decHP = 0;
+    private float recovery = 1.0f;
     private int protectItem = 0;
     private boolean town;
     private MapleOxQuiz ox;
@@ -1408,81 +1409,85 @@ public void killMonster(final MapleMonster monster, final MapleCharacter chr, fi
             }
         } else {
             if (removeKilledMonsterObject(monster)) {
-                if (monster.getStats().getLevel() >= chr.getLevel() + 30 && !chr.isGM()) {
-                    AutobanFactory.GENERAL.alert(chr, " for killing a " + monster.getName() + " which is over 30 levels higher.");
-                }
-                
-                /*if (chr.getQuest(MapleQuest.getInstance(29400)).getStatus().equals(MapleQuestStatus.Status.STARTED)) {
-                 if (chr.getLevel() >= 120 && monster.getStats().getLevel() >= 120) {
-                 //FIX MEDAL SHET
-                 } else if (monster.getStats().getLevel() >= chr.getLevel()) {
-                 }
-                 }*/
-                
-                if (monster.getCP() > 0 && chr.getMap().isCPQMap()) {
-                    chr.gainCP(monster.getCP());
-                }
-                
-                int buff = monster.getBuffToGive();
-                if (buff > -1) {
-                    MapleItemInformationProvider mii = MapleItemInformationProvider.getInstance();
-                    for (MapleMapObject mmo : this.getPlayers()) {
-                        MapleCharacter character = (MapleCharacter) mmo;
-                        if (character.isAlive()) {
-                            MapleStatEffect statEffect = mii.getItemEffect(buff);
-                            character.getClient().announce(MaplePacketCreator.showOwnBuffEffect(buff, 1));
-                            broadcastMessage(character, MaplePacketCreator.showBuffeffect(character.getId(), buff, 1), false);
-                            statEffect.applyTo(character);
-                        }
+                try {
+                    if (monster.getStats().getLevel() >= chr.getLevel() + 30 && !chr.isGM()) {
+                        AutobanFactory.GENERAL.alert(chr, " for killing a " + monster.getName() + " which is over 30 levels higher.");
                     }
-                }
-                
-                if (monster.getId() >= 8800003 && monster.getId() <= 8800010) {
-                    boolean makeZakReal = true;
-                    Collection<MapleMapObject> objects = getMapObjects();
-                    for (MapleMapObject object : objects) {
-                        MapleMonster mons = getMonsterByOid(object.getObjectId());
-                        if (mons != null) {
-                            if (mons.getId() >= 8800003 && mons.getId() <= 8800010) {
-                                makeZakReal = false;
-                                break;
+
+                    /*if (chr.getQuest(MapleQuest.getInstance(29400)).getStatus().equals(MapleQuestStatus.Status.STARTED)) {
+                     if (chr.getLevel() >= 120 && monster.getStats().getLevel() >= 120) {
+                     //FIX MEDAL SHET
+                     } else if (monster.getStats().getLevel() >= chr.getLevel()) {
+                     }
+                     }*/
+
+                    if (monster.getCP() > 0 && chr.getMap().isCPQMap()) {
+                        chr.gainCP(monster.getCP());
+                    }
+
+                    int buff = monster.getBuffToGive();
+                    if (buff > -1) {
+                        MapleItemInformationProvider mii = MapleItemInformationProvider.getInstance();
+                        for (MapleMapObject mmo : this.getPlayers()) {
+                            MapleCharacter character = (MapleCharacter) mmo;
+                            if (character.isAlive()) {
+                                MapleStatEffect statEffect = mii.getItemEffect(buff);
+                                character.getClient().announce(MaplePacketCreator.showOwnBuffEffect(buff, 1));
+                                broadcastMessage(character, MaplePacketCreator.showBuffeffect(character.getId(), buff, 1), false);
+                                statEffect.applyTo(character);
                             }
                         }
                     }
-                    if (makeZakReal) {
-                        MapleMap map = chr.getMap();
 
+                    if (monster.getId() >= 8800003 && monster.getId() <= 8800010) {
+                        boolean makeZakReal = true;
+                        Collection<MapleMapObject> objects = getMapObjects();
                         for (MapleMapObject object : objects) {
-                            MapleMonster mons = map.getMonsterByOid(object.getObjectId());
+                            MapleMonster mons = getMonsterByOid(object.getObjectId());
                             if (mons != null) {
-                                if (mons.getId() == 8800000) {
-                                    makeMonsterReal(mons);
-                                    mons.aggroUpdateController();
+                                if (mons.getId() >= 8800003 && mons.getId() <= 8800010) {
+                                    makeZakReal = false;
                                     break;
                                 }
                             }
                         }
+                        if (makeZakReal) {
+                            MapleMap map = chr.getMap();
+
+                            for (MapleMapObject object : objects) {
+                                MapleMonster mons = map.getMonsterByOid(object.getObjectId());
+                                if (mons != null) {
+                                    if (mons.getId() == 8800000) {
+                                        makeMonsterReal(mons);
+                                        mons.aggroUpdateController();
+                                        break;
+                                    }
+                                }
+                            }
+                        }
                     }
-                }
 
-                MapleCharacter dropOwner = monster.killBy(chr);
-                if (withDrops && !monster.dropsDisabled()) {
-                    if (dropOwner == null) {
-                        dropOwner = chr;
+                    MapleCharacter dropOwner = monster.killBy(chr);
+                    if (withDrops && !monster.dropsDisabled()) {
+                        if (dropOwner == null) {
+                            dropOwner = chr;
+                        }
+                        dropFromMonster(dropOwner, monster, false);
                     }
-                    dropFromMonster(dropOwner, monster, false);
-                }
 
-                if (monster.hasBossHPBar()) {
-                    for(MapleCharacter mc : this.getAllPlayers()) {
-                        if(mc.getTargetHpBarHash() == monster.hashCode()) {
-                            mc.resetPlayerAggro();
+                    if (monster.hasBossHPBar()) {
+                        for(MapleCharacter mc : this.getAllPlayers()) {
+                            if(mc.getTargetHpBarHash() == monster.hashCode()) {
+                                mc.resetPlayerAggro();
+                            }
                         }
                     }
+                } catch (Exception e) {
+                    e.printStackTrace();
+                } finally {     // thanks resinate for pointing out a memory leak possibly from an exception thrown
+                    monster.dispatchMonsterKilled(true);
+                    broadcastMessage(MaplePacketCreator.killMonster(monster.getObjectId(), animation), monster.getPosition());
                 }
-
-                monster.dispatchMonsterKilled(true);
-                broadcastMessage(MaplePacketCreator.killMonster(monster.getObjectId(), animation), monster.getPosition());
             }
         }
     }
@@ -2707,12 +2712,12 @@ public MaplePortal getRandomPlayerSpawnpoint() {
         return portal != null ? portal : getPortal(0);
     }
     
-    public MaplePortal findClosestWarpPortal(Point from) {
+    public MaplePortal findClosestTeleportPortal(Point from) {
         MaplePortal closest = null;
         double shortestDistance = Double.POSITIVE_INFINITY;
         for (MaplePortal portal : portals.values()) {
             double distance = portal.getPosition().distanceSq(from);
-            if (portal.getType() == MaplePortal.MAP_PORTAL && distance < shortestDistance && portal.getTargetMapId() == 999999999) {
+            if (portal.getType() == MaplePortal.TELEPORT_PORTAL && distance < shortestDistance && portal.getTargetMapId() != 999999999) {
                 closest = portal;
                 shortestDistance = distance;
             }
@@ -3777,6 +3782,14 @@ public int getHPDecProtect() {
     public void setHPDecProtect(int delta) {
         this.protectItem = delta;
     }
+    
+    public float getRecovery() {
+        return recovery;
+    }
+
+    public void setRecovery(float recRate) {
+        recovery = recRate;
+    }
 
     private int hasBoat() {
         return !boat ? 0 : (docked ? 1 : 2);
diff --git a/src/server/maps/MapleMapFactory.java b/src/server/maps/MapleMapFactory.java
index 036bd7757..0c37f54d6 100644
--- a/src/server/maps/MapleMapFactory.java
+++ b/src/server/maps/MapleMapFactory.java
@@ -31,7 +31,6 @@
 import java.util.HashMap;
 import java.util.LinkedList;
 import java.util.List;
-import java.util.Map;
 import provider.MapleData;
 import provider.MapleDataProvider;
 import provider.MapleDataProviderFactory;
@@ -49,8 +48,6 @@
 
 public class MapleMapFactory {
 
-    private static Map<Integer, Float> mapRecoveryRateCache = new HashMap<>();
-    
     private static MapleData nameData;
     private static MapleDataProvider mapSource;
     
@@ -336,11 +333,10 @@ public static MapleMap loadMapFromWz(int mapid, int world, int channel, EventIns
         map.setTimeLimit(MapleDataTool.getIntConvert("timeLimit", infoData, -1));
         map.setFieldType(MapleDataTool.getIntConvert("fieldType", infoData, 0));
         map.setMobCapacity(MapleDataTool.getIntConvert("fixedMobCapacity", infoData, 500));//Is there a map that contains more than 500 mobs?
-
+        
         MapleData recData = infoData.getChildByPath("recovery");
         if (recData != null) {
-            float recoveryRate = MapleDataTool.getFloat(recData);
-            mapRecoveryRateCache.put(mapid, recoveryRate);
+            map.setRecovery(MapleDataTool.getFloat(recData));
         }
 
         HashMap<Integer, Integer> backTypes = new HashMap<>();
@@ -438,9 +434,5 @@ private static String getMapStringName(int mapid) {
         builder.append("/").append(mapid);
         return builder.toString();
     }
-
-    public static float getMapRecoveryRate(int mapid) {
-        Float recRate = mapRecoveryRateCache.get(mapid);
-        return recRate != null ? recRate : 1.0f;
-    }
+    
 }
diff --git a/src/server/maps/MapleMapManager.java b/src/server/maps/MapleMapManager.java
index 36d36212c..db3df6d49 100644
--- a/src/server/maps/MapleMapManager.java
+++ b/src/server/maps/MapleMapManager.java
@@ -139,7 +139,4 @@ public void dispose() {
         this.event = null;
     }
 
-    public static float getMapRecoveryRate(int mapid) {
-        return MapleMapFactory.getMapRecoveryRate(mapid);
-    }
 }
diff --git a/src/server/quest/MapleQuest.java b/src/server/quest/MapleQuest.java
index cefceb45d..cf7e8f94f 100644
--- a/src/server/quest/MapleQuest.java
+++ b/src/server/quest/MapleQuest.java
@@ -28,6 +28,7 @@
 import java.util.List;
 import java.util.Map;
 import client.MapleCharacter;
+import client.MapleCharacter.DelayedQuestUpdate;
 import client.MapleQuestStatus;
 import client.MapleQuestStatus.Status;
 import constants.ServerConstants;
@@ -337,7 +338,7 @@ public boolean forceStart(MapleCharacter c, int npc) {
                 if(pid >= 8200000 && pid <= 8200012) {
                     String pr = StringUtil.getLeftPaddedStr(Integer.toString(setProg), '0', 3);
                     newStatus.setProgress(pid, pr);
-                    c.announce(MaplePacketCreator.updateQuest(newStatus, false));
+                    c.announceUpdateQuest(DelayedQuestUpdate.UPDATE, newStatus, false);
                 }
             }
         }
diff --git a/src/server/quest/actions/ItemAction.java b/src/server/quest/actions/ItemAction.java
index a395035f4..a4e2d0a21 100644
--- a/src/server/quest/actions/ItemAction.java
+++ b/src/server/quest/actions/ItemAction.java
@@ -109,6 +109,7 @@ public void run(MapleCharacter chr, Integer extSelection) {
 			if (!canGetItem(iEntry, chr)) {
 				continue;
 			}
+                        
 			if(iEntry.getProp() != null) {
 				if(iEntry.getProp() == -1) {
 					if(extSelection != extNum++)
@@ -181,11 +182,11 @@ public boolean check(MapleCharacter chr, Integer extSelection) {
                                 }
 				
 			} else {
-                                if(item.getCount() > 0) {
-                                        // Make sure they can hold the item.
-                                        Item toItem = new Item(item.getId(), (short) 0, (short) item.getCount());
-                                        gainList.add(new Pair<>(toItem, type));
-                                } else {
+                                // Make sure they can hold the item.
+                                Item toItem = new Item(item.getId(), (short) 0, (short) item.getCount());
+                                gainList.add(new Pair<>(toItem, type));
+                            
+                                if(item.getCount() < 0) {
                                         // Make sure they actually have the item.
                                         int quantity = item.getCount() * -1;
                                         
@@ -229,12 +230,34 @@ public boolean check(MapleCharacter chr, Integer extSelection) {
                         gainList.add(selected);
                 }
                 
-		if (!MapleInventory.checkSpots(chr, gainList, allSlotUsed, false)) {
+                if (!canHold(chr, gainList)) {
 			chr.dropMessage(1, "Please check if you have enough space in your inventory.");
 			return false;
 		}
 		return true;
 	}
+        
+        private boolean canHold(MapleCharacter chr, List<Pair<Item, MapleInventoryType>> gainList) {
+                List<Integer> toAddItemids = new LinkedList<>();
+                List<Integer> toAddQuantity = new LinkedList<>();
+                List<Integer> toRemoveItemids = new LinkedList<>();
+                List<Integer> toRemoveQuantity = new LinkedList<>();
+                
+                for (Pair<Item, MapleInventoryType> item : gainList) {
+                        Item it = item.getLeft();
+
+                        if (it.getQuantity() > 0) {
+                                toAddItemids.add(it.getItemId());
+                                toAddQuantity.add((int) it.getQuantity());
+                        } else {
+                                toRemoveItemids.add(it.getItemId());
+                                toRemoveQuantity.add(-1 * ((int) it.getQuantity()));
+                        }
+                }
+                
+                // thanks onechord for noticing quests unnecessarily giving out "full inventory" from quests that also takes items from players
+                return chr.getClient().getAbstractPlayerInteraction().canHoldAllAfterRemoving(toAddItemids, toAddQuantity, toRemoveItemids, toRemoveQuantity);
+        }
 	
 	private boolean canGetItem(ItemData item, MapleCharacter chr) {
 		if (item.getGender() != 2 && item.getGender() != chr.getGender()) {
diff --git a/src/tools/MaplePacketCreator.java b/src/tools/MaplePacketCreator.java
index fe25226db..6006443af 100644
--- a/src/tools/MaplePacketCreator.java
+++ b/src/tools/MaplePacketCreator.java
@@ -1916,17 +1916,12 @@ private static void writeForeignBuffs(MaplePacketLittleEndianWriter mplew, Maple
                 
                 Integer bv = chr.getBuffedValue(MapleBuffStat.MONSTER_RIDING);
                 if (bv != null) {
-                        if(bv.equals(Corsair.BATTLE_SHIP)) {
-                                mplew.writeInt(1932000);
-                                mplew.writeInt(Corsair.BATTLE_SHIP);
+                        MapleMount mount = chr.getMount();
+                        if (mount != null) {
+                                mplew.writeInt(mount.getItemId());
+                                mplew.writeInt(mount.getSkillId());
                         } else {
-                                final Item mount = chr.getInventory(MapleInventoryType.EQUIPPED).getItem((short) -18);
-                                if(mount != null) {
-                                        mplew.writeInt(mount.getItemId());
-                                        mplew.writeInt(1004);
-                                } else {
-                                        mplew.writeLong(0);
-                                }
+                                mplew.writeLong(0);
                         }
                 } else {
                         mplew.writeLong(0);
@@ -6975,14 +6970,14 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
         public static byte[] onCashItemGachaponOpenFailed(){
 		MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
 		mplew.writeShort(SendOpcode.CASHSHOP_CASH_ITEM_GACHAPON_RESULT.getValue());
-		mplew.write(189);
+		mplew.write(0xE4);
 		return mplew.getPacket();
 	}
 
 	public static byte[] onCashGachaponOpenSuccess(int accountid, long sn, int remainingBoxes, Item item, int itemid, int nSelectedItemCount, boolean bJackpot){
 		MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
 		mplew.writeShort(SendOpcode.CASHSHOP_CASH_ITEM_GACHAPON_RESULT.getValue());
-		mplew.write(190);
+		mplew.write(0xE5);   // subopcode thanks to Ubaware
 		mplew.writeLong(sn);// sn of the box used
 		mplew.writeInt(remainingBoxes);
 		addCashItemInformation(mplew, item, accountid);
@@ -7253,15 +7248,15 @@ private static void getGuildInfo(final MaplePacketLittleEndianWriter mplew, Mapl
                                 mplew.writeLong(getTime(dp.sentTimeInMilliseconds()));
                                 
                                 String msg = dp.getMessage();
-                                if (!msg.isEmpty()) {
-                                    mplew.writeInt(1);
-                                    mplew.writeAsciiString(msg);
-                                    for (int i = msg.length(); i < 200; i++) {
-                                            mplew.write(0);
-                                    }
+                                if (msg != null) {
+                                        mplew.writeInt(1);
+                                        mplew.writeAsciiString(msg);
+                                        for (int i = msg.length(); i < 200; i++) {
+                                                mplew.write(0);
+                                        }
                                 } else {
-                                    mplew.writeInt(0);
-                                    mplew.skip(200);
+                                        mplew.writeInt(0);
+                                        mplew.skip(200);
                                 }
                                 
                                 mplew.write(0);
diff --git a/tools/ScriptStaticMethodTracker/method_list.c b/tools/ScriptStaticMethodTracker/method_list.c
new file mode 100644
index 000000000..4fd6a8737
--- /dev/null
+++ b/tools/ScriptStaticMethodTracker/method_list.c
@@ -0,0 +1,85 @@
+/*
+    This file is part of the HeavenMS MapleStory Server
+    Copyleft (L) 2016 - 2019 RonanLana
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+JavaMethod* createJavaMethod(const char *name) {
+    JavaMethod* method = (JavaMethod *)malloc(sizeof(JavaMethod));
+    method->name = (char *)malloc((strlen(name) + 1) * sizeof(char));
+    strcpy(method->name, name);
+    return method;
+}
+
+void freeJavaMethod(JavaMethod *method) {
+    free(method->name);
+    free(method);
+}
+
+JavaMethodList createJavaMethodList() {
+    JavaMethodList list;
+    list.size = 0;
+
+    JavaMethodListItem *item = (JavaMethodListItem *)malloc(sizeof(JavaMethodListItem));
+    item->prox = NULL;
+
+    list.last = item;
+    list.first = list.last;
+
+    return list;
+}
+
+void insertJavaMethod(JavaMethodList *list, JavaMethod *method) {
+    JavaMethodListItem *item = (JavaMethodListItem *)malloc(sizeof(JavaMethodListItem));
+    item->prox = NULL;
+
+    list->last->method = method;
+    list->last->prox = item;
+
+    list->last = item;
+    list->size++;
+}
+
+void freeJavaMethodList(JavaMethodList *list) {
+    JavaMethodListItem *aux = list->first;
+
+    list->first = list->last;
+    list->size = 0;
+
+    while (aux->prox != NULL) {
+        JavaMethodListItem *aux2 = aux;
+        aux = aux->prox;
+
+        freeJavaMethod(aux2->method);
+        free(aux2);
+    }
+    free(aux);
+}
+
+void resetJavaMethodCursor(JavaMethodList *list) {
+    list->cursor = list->first;
+}
+
+JavaMethod* readJavaMethod(JavaMethodList *list) {
+    JavaMethodListItem *aux = list->cursor;
+    if (aux->prox == NULL) {
+        return NULL;
+    }
+
+    list->cursor = aux->prox;
+    return aux->method;
+}
diff --git a/tools/ScriptStaticMethodTracker/method_list.h b/tools/ScriptStaticMethodTracker/method_list.h
new file mode 100644
index 000000000..ae4fabed1
--- /dev/null
+++ b/tools/ScriptStaticMethodTracker/method_list.h
@@ -0,0 +1,43 @@
+/*
+    This file is part of the HeavenMS MapleStory Server
+    Copyleft (L) 2016 - 2019 RonanLana
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef METHOD_LIST_H_
+#define METHOD_LIST_H_
+
+typedef struct {
+    char *name;
+} JavaMethod;
+
+typedef struct JavaMethodListItem {
+    JavaMethod *method;
+    struct JavaMethodListItem *prox;
+} JavaMethodListItem;
+
+typedef struct {
+    JavaMethodListItem *first;
+    JavaMethodListItem *last;
+    JavaMethodListItem *cursor;
+
+    int size;
+} JavaMethodList;
+
+#include "method_list.c"
+
+#endif /* METHOD_LIST_H_ */
diff --git a/tools/ScriptStaticMethodTracker/method_tracker.c b/tools/ScriptStaticMethodTracker/method_tracker.c
new file mode 100644
index 000000000..63af248de
--- /dev/null
+++ b/tools/ScriptStaticMethodTracker/method_tracker.c
@@ -0,0 +1,347 @@
+/*
+    This file is part of the HeavenMS MapleStory Server
+    Copyleft (L) 2016 - 2019 RonanLana
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+#include <stdbool.h>
+#include <pcre.h>
+
+#define SCRIPT_FILES_MAX_CONTENT_SIZE 1777777
+
+#include "method_list.h"
+#include "script_path.h"
+
+JavaMethodList getBestSubstringsFromStringList(char *aStrRegex, JavaMethodList *lines, int lines_size) {
+    JavaMethodList ret = createJavaMethodList();
+
+    // ------------ an adaptation from Mitch Richling's https://www.mitchr.me/SS/exampleCode/AUPG/pcre_example.c.html -----------
+
+    int subStrVec[30];
+    int subStrVecLength = 30;
+    const char *pcreErrorStr;
+    int pcreErrorOffset;
+
+    pcre *reCompiled = pcre_compile(aStrRegex, 0, &pcreErrorStr, &pcreErrorOffset, NULL);
+    if(reCompiled == NULL) {
+        printf("ERROR: Could not compile '%s': %s\n", aStrRegex, pcreErrorStr);
+        return ret;
+    }
+
+    pcre_extra *pcreExtra = pcre_study(reCompiled, 0, &pcreErrorStr);
+    if(pcreErrorStr != NULL) {
+        printf("ERROR: Could not study '%s': %s\n", aStrRegex, pcreErrorStr);
+        return ret;
+    }
+
+    int i;
+    for (i = 0; i < lines_size; i++) {
+        JavaMethodList list = lines[i];
+
+        resetJavaMethodCursor(&list);
+        while(true) {
+            JavaMethod *method = readJavaMethod(&list);
+            if (method == NULL) {
+                break;
+            }
+
+            char *str = method->name;
+            int pcreExecRet = pcre_exec(reCompiled, pcreExtra, str, strlen(str), 0, 0, subStrVec, subStrVecLength);
+            if(pcreExecRet < 0) {
+                switch(pcreExecRet) {
+                    //case PCRE_ERROR_NOMATCH      : printf("String did not match the pattern\n");        break;
+                    case PCRE_ERROR_NULL         : printf("Something was null\n");                      break;
+                    case PCRE_ERROR_BADOPTION    : printf("A bad option was passed\n");                 break;
+                    case PCRE_ERROR_BADMAGIC     : printf("Magic number bad (compiled re corrupt?)\n"); break;
+                    case PCRE_ERROR_UNKNOWN_NODE : printf("Something kooky in the compiled re\n");      break;
+                    case PCRE_ERROR_NOMEMORY     : printf("Ran out of memory\n");                       break;
+                    //default                      : printf("Unknown error\n");                           break;
+                }
+            } else {
+                if(pcreExecRet == 0) {
+                    printf("But too many substrings were found to fit in subStrVec!\n");
+                    // Set rc to the max number of substring matches possible.
+                    pcreExecRet = 30 / 3;
+                }
+
+                const char *psubStrMatchStr;
+                pcre_get_substring(str, subStrVec, pcreExecRet, 0, &(psubStrMatchStr));
+
+                insertJavaMethod(&ret, createJavaMethod(psubStrMatchStr));
+                pcre_free_substring(psubStrMatchStr);
+            }
+        }
+    }
+
+    pcre_free(reCompiled);
+
+    if(pcreExtra != NULL) {
+        pcre_free(pcreExtra);
+    }
+
+    return ret;
+}
+
+char* extractStaticMethodName(const char *method_line) {
+    char *aStrRegex = "([A-Za-z0-9])+(\\s)*\\(";
+
+    int lines_size = 1;
+    JavaMethodList *lines = (JavaMethodList *)malloc(lines_size * sizeof(JavaMethodList));
+
+    int i;
+    for (i = 0; i < lines_size; i++) {
+        lines[i] = createJavaMethodList();
+        insertJavaMethod(&(lines[i]), createJavaMethod(method_line));
+    }
+
+    JavaMethodList subs = getBestSubstringsFromStringList(aStrRegex, lines, lines_size);
+
+    char *ret;
+    if (subs.size > 0) {
+        resetJavaMethodCursor(&subs);
+        JavaMethod *method = readJavaMethod(&subs);
+
+        char *method_scoop = method->name;
+        int i;
+        for (i = 0; i < strlen(method_scoop) - 1; i++) {
+            char ch = method_scoop[i];
+            if (ch == '(' || ch == ' ' || ch == '\t') {
+                break;
+            }
+        }
+        method->name[i] = 0;
+
+        ret = (char *)malloc((strlen(method->name) + 1) * sizeof(char));
+        strcpy(ret, method->name);
+    } else {
+        ret = NULL;
+    }
+
+    freeJavaMethodList(&subs);
+
+    for (i = 0; i < lines_size; i++) {
+        freeJavaMethodList(&(lines[i]));
+    }
+
+    free(lines);
+
+    return ret;
+}
+
+JavaMethodList getStaticJavaMethodNames(char *aStrRegex, JavaMethodList *lines, int lines_size) {
+    JavaMethodList subs = getBestSubstringsFromStringList(aStrRegex, lines, lines_size);
+    JavaMethodList ret = createJavaMethodList();
+
+    resetJavaMethodCursor(&subs);
+    while (true) {
+        JavaMethod *method = readJavaMethod(&subs);
+        if (method == NULL) {
+            break;
+        }
+
+        char *method_name = extractStaticMethodName(method->name);
+        if (method_name != NULL) {
+            insertJavaMethod(&ret, createJavaMethod(method_name));
+            free(method_name);
+        }
+    }
+
+    freeJavaMethodList(&subs);
+
+    return ret;
+}
+
+bool isIgnoreMethod(char *method_name) {
+    const char * ignoreMethods[] = {"getInstance", "toString", NULL};
+
+    int i = 0;
+    while(true) {
+        const char *ign = ignoreMethods[i];
+        if (ign == NULL) {
+            break;
+        }
+
+        if (!strcmp(method_name, ign)) {
+            return true;
+        }
+
+        i++;
+    }
+
+    return false;
+}
+
+JavaMethodList trackerFindSourceStaticMethods(JavaMethodList *lines, int lines_size) {
+    char *aStrRegex = "(public static\\s).*([A-Za-z0-9])+(\\s)*\\(.*\\{";
+    JavaMethodList ret = createJavaMethodList();
+
+    JavaMethodList list = getStaticJavaMethodNames(aStrRegex, lines, lines_size);
+    resetJavaMethodCursor(&list);
+    while(true) {
+        JavaMethod *method = readJavaMethod(&list);
+        if (method == NULL) {
+            break;
+        }
+
+        if (isIgnoreMethod(method->name)) {
+            continue;
+        }
+
+        //printf("Java Method: %s\n", method->name);
+        insertJavaMethod(&ret, createJavaMethod(method->name));
+    }
+
+    freeJavaMethodList(&list);
+
+    return ret;
+}
+
+char *getContentFromFile(FILE *f) {
+    char str[10240];
+
+    char *content = (char *)malloc(SCRIPT_FILES_MAX_CONTENT_SIZE * sizeof(char));
+    content[0] = 0;
+
+    while (!feof(f)) {
+        fgets(str, 10240, f);
+        strcat(content, str);
+    }
+
+    return content;
+}
+
+bool locateMethodCall(const char *method_name, char *file_path) {
+    FILE *f = fopen(file_path, "r+t");
+
+    char aStrRegex[1000];
+    strcpy(aStrRegex, method_name);
+    strcat(aStrRegex, "(\\s)*\\(");
+
+    JavaMethodList *file_content = (JavaMethodList *)malloc(sizeof(JavaMethodList));
+    file_content[0] = createJavaMethodList();
+
+    char *content = getContentFromFile(f);
+
+    JavaMethod *method = createJavaMethod(content);
+    insertJavaMethod(&(file_content[0]), method);
+    free(content);
+
+    JavaMethodList list = getBestSubstringsFromStringList(aStrRegex, file_content, 1);
+    bool found = (list.size > 0);
+
+    free(file_content);
+    fclose(f);
+
+    return found;
+}
+
+void locateMethodCalls(const char *method_name, char **file_paths, int file_paths_size) {
+    int i;
+    for (i = 0; i < file_paths_size; i++) {
+        char *path = file_paths[i];
+        if (locateMethodCall(method_name, path)) {
+            printf("  %s : \'%s\'\n", path, method_name);
+        }
+    }
+}
+
+int trackerLocateScriptsStaticCalls(JavaMethodList method_names) {
+    ScriptFiles *files = createScriptFiles("../../HeavenMS/scripts");
+    if (files == NULL) {
+        printf("ERROR: Could not initialize script files.\n");
+        return -1;
+    }
+
+    resetJavaMethodCursor(&method_names);
+    while (true) {
+        JavaMethod *method = readJavaMethod(&method_names);
+        if (method == NULL) {
+            break;
+        }
+
+        locateMethodCalls(method->name, files->file_paths, files->file_paths_size);
+    }
+
+    freeScriptFiles(files);
+    return 0;
+}
+
+typedef struct {
+    JavaMethodList *file_content;
+    int size;
+} SourceFilesContent;
+
+SourceFilesContent* readSourceFileContents() {
+    ScriptFiles *srcFilePaths = createScriptFiles("../../HeavenMS/src");
+
+    SourceFilesContent *files = (SourceFilesContent *)malloc(sizeof(SourceFilesContent));
+    files->file_content = (JavaMethodList *)malloc(srcFilePaths->file_paths_size * sizeof(JavaMethodList));
+    files->size = srcFilePaths->file_paths_size;
+
+    //int max_len = 0;
+    int i;
+    for (i = 0; i < srcFilePaths->file_paths_size; i++) {
+        files->file_content[i] = createJavaMethodList();
+
+        FILE *f = fopen(srcFilePaths->file_paths[i], "r+t");
+        char *content = getContentFromFile(f);
+
+        //int this_len = strlen(content);
+        //if (max_len < this_len) max_len = this_len;
+
+        fclose(f);
+
+        insertJavaMethod(&(files->file_content[i]), createJavaMethod(content));
+    }
+
+    //printf("len: %d\n", max_len);
+    freeScriptFiles(srcFilePaths);
+
+    return files;
+}
+
+void freeSourceFileContents(SourceFilesContent *files) {
+    int i;
+    for (i = 0; i < files->size; i++) {
+        freeJavaMethodList(&(files->file_content[i]));
+    }
+
+    free(files->file_content);
+    free(files);
+}
+
+int main() {
+    printf("Loading source files...\n");
+    SourceFilesContent *src_contents = readSourceFileContents();
+
+    int lines_size = src_contents->size;
+    JavaMethodList *lines = src_contents->file_content;
+
+    printf("Tracking static methods on source...\n");
+    JavaMethodList method_names = trackerFindSourceStaticMethods(lines, lines_size);
+    printf("Finding static methods calls on scripts...\n");
+    trackerLocateScriptsStaticCalls(method_names);
+    printf("Track complete!\n");
+
+    freeSourceFileContents(src_contents);
+    freeJavaMethodList(&method_names);
+
+    return 0;
+}
diff --git a/tools/ScriptStaticMethodTracker/pcre3.dll b/tools/ScriptStaticMethodTracker/pcre3.dll
new file mode 100644
index 000000000..b5fd2a637
Binary files /dev/null and b/tools/ScriptStaticMethodTracker/pcre3.dll differ
diff --git a/tools/ScriptStaticMethodTracker/script_path.c b/tools/ScriptStaticMethodTracker/script_path.c
new file mode 100644
index 000000000..aab9ddd1b
--- /dev/null
+++ b/tools/ScriptStaticMethodTracker/script_path.c
@@ -0,0 +1,72 @@
+/*
+    This file is part of the HeavenMS MapleStory Server
+    Copyleft (L) 2016 - 2019 RonanLana
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <stdio.h>
+#include <dirent.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <unistd.h>
+
+void fetchScriptFilesFromDirectory(ScriptFiles *files, char *root_dir) {
+    struct dirent *de;
+    struct stat info;
+    DIR *dir = opendir(root_dir);
+    if (dir != NULL) {
+        de = readdir(dir);  // skip .
+        de = readdir(dir);  // skip ..
+
+        while ((de = readdir(dir)) != NULL) {
+            char file_path[SCRIPT_FILES_MAX_PATH_SIZE];
+            strcpy(file_path, root_dir);
+            strcat(file_path, "/");
+            strcat(file_path, de->d_name);
+
+            stat(file_path, &info);
+            if (S_ISREG(info.st_mode)) {
+                files->file_paths[files->file_paths_size] = (char *)malloc(SCRIPT_FILES_MAX_PATH_SIZE * sizeof(char));
+                strcpy(files->file_paths[files->file_paths_size], file_path);
+                files->file_paths_size++;
+            } else {
+                fetchScriptFilesFromDirectory(files, file_path);
+            }
+        }
+    }
+}
+
+ScriptFiles* createScriptFiles(char *root_dir) {
+    ScriptFiles *files = (ScriptFiles *)malloc(sizeof(ScriptFiles));
+
+    files->file_paths = (char **)malloc(SCRIPT_FILES_MAX_COUNT * sizeof(char *));
+    files->file_paths_size = 0;
+
+    fetchScriptFilesFromDirectory(files, root_dir);
+
+    return files;
+}
+
+void freeScriptFiles(ScriptFiles *files) {
+    int i;
+    for (i = 0; i < files->file_paths_size; i++) {
+        free(files->file_paths[i]);
+    }
+
+    free(files->file_paths);
+    free(files);
+}
diff --git a/tools/ScriptStaticMethodTracker/script_path.h b/tools/ScriptStaticMethodTracker/script_path.h
new file mode 100644
index 000000000..553d28d26
--- /dev/null
+++ b/tools/ScriptStaticMethodTracker/script_path.h
@@ -0,0 +1,34 @@
+/*
+    This file is part of the HeavenMS MapleStory Server
+    Copyleft (L) 2016 - 2019 RonanLana
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef SCRIPT_PATH_H_
+#define SCRIPT_PATH_H_
+
+#define SCRIPT_FILES_MAX_COUNT 20000
+#define SCRIPT_FILES_MAX_PATH_SIZE 1000
+
+typedef struct {
+    char **file_paths;
+    int file_paths_size;
+} ScriptFiles;
+
+#include "script_path.c"
+
+#endif /* SCRIPT_PATH_H_ */
