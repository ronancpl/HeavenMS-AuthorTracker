diff --git a/.gitignore b/.gitignore
index 412f11d8a..301f14339 100644
--- a/.gitignore
+++ b/.gitignore
@@ -11,13 +11,17 @@
 /tools/MapleArrowFetcher/dist/
 /tools/MapleArrowFetcher/nbproject/
 
-/tools/MapleBossHpBarFetcher/nbproject/
 /tools/MapleBossHpBarFetcher/build/
 /tools/MapleBossHpBarFetcher/dist/
+/tools/MapleBossHpBarFetcher/nbproject/
 
-/tools/MapleCashDropFetcher/nbproject/
 /tools/MapleCashDropFetcher/build/
 /tools/MapleCashDropFetcher/dist/
+/tools/MapleCashDropFetcher/nbproject/
+
+/tools/MapleCodeCouponGenerator/build/
+/tools/MapleCodeCouponGenerator/dist/
+/tools/MapleCodeCouponGenerator/nbproject/
 
 /tools/MapleCouponInstaller/build/
 /tools/MapleCouponInstaller/dist/
@@ -25,7 +29,7 @@
 
 /tools/MapleDojoUpdate/build/
 /tools/MapleDojoUpdate/dist/
-/tools/MapleDojoUpdate/nbproject/private/
+/tools/MapleDojoUpdate/nbproject/
 
 /tools/MapleEquipmentOmnileveler/build/
 /tools/MapleEquipmentOmnileveler/dist/
@@ -59,9 +63,9 @@
 /tools/MapleMobBookUpdate/dist/
 /tools/MapleMobBookUpdate/nbproject/
 
-/tools/MapleQuestItemCountFetcher/nbproject/
 /tools/MapleQuestItemCountFetcher/build/
 /tools/MapleQuestItemCountFetcher/dist/
+/tools/MapleQuestItemCountFetcher/nbproject/
 
 /tools/MapleQuestItemFetcher/build/
 /tools/MapleQuestItemFetcher/dist/
@@ -87,5 +91,9 @@
 /tools/MapleSkillMakerReagentIndexer/dist/
 /tools/MapleSkillMakerReagentIndexer/nbproject/
 
+/tools/SpiderDropFetcher/build/
+/tools/SpiderDropFetcher/dist/
+/tools/SpiderDropFetcher/nbproject/
+
 /out
 *.onetoc2
diff --git a/README.md b/README.md
index 6290ff825..e11315411 100644
--- a/README.md
+++ b/README.md
@@ -22,7 +22,9 @@ Client files & general tools: https://drive.google.com/drive/folders/0BzDsHSr-0V
 
 **Important note about localhosts**: these executables are red-flagged by antivirus tools as __potentially malicious softwares__, this happens due to the reverse engineering methods that were applied onto these software artifacts. Those depicted here have been put to use for years already and posed no harm so far, so they are soundly assumed to be safe.
 
-Recommended localhost: https://hostr.co/m2bVtnizCtmD
+  Latest localhost: https://hostr.co/m2bVtnizCtmD
+
+  The following list, in bottom-up chronological order, holds information regarding all changes that were applied from the starting localhost used in this development. Some lines have a link attached, that will lead you to a snapshot of the localhost at that version of the artifact. Naturally, later versions holds all previous changes along with the proposed changes.
 
 **Change log:**
 
@@ -49,10 +51,27 @@ Recommended localhost: https://hostr.co/m2bVtnizCtmD
   * MapleSilver's starting on window-mode.
 
 ---
-### Development status
+### Development information
 
 Status: <span style="color:grey">__In development (4th round)__</span>.
 
+#### Mission
+
+With non-profitting means intended, provide nostalgic pre-BB MapleStory players world-wide a quality local server for freestyle entertainment.
+
+#### Vision
+
+By taking the v83 MapleStory as the angular stone, incrementally look forward to improve the gaming experience whilst still retaining the "clean v83" conservative ideal. Also, through reviewing distinguished aspects of the server's behavior that could be classified as a potential server threat, in the long run look for ways to improve or even stabilize some of it's uncertain aspects.
+
+#### Values
+
+* Autonomy, seek self-improvement for tackling issues head-on;
+* Adventurous, take no fear of failures on the path of progress;
+* Light-hearted support, general people out there didn't experience what you've already had;
+* Humility, no matter how good you are, there's no good in boasting yourself over experiences only a few have had;
+
+#### Announcements
+
 HeavenMS development achieved an acceptable state-of-the-art and will get into a halt. A heartfelt thanks for everyone that contributed in some way for the progress of this server!
 
 Although development is halted, support for fixing features that were implemented here is still up. You can still actively help us improve the server by issuing pull requests with informative details about what's changing.
@@ -179,6 +198,24 @@ In that case, extract "lolwut.exe" from "lolwut-v0.01.rar" and place it on the M
 
 Important: should the client be refused a connection to the game server, it may be because of firewall issues. Head to the end of this file to proceed in allowing this connection through the computer's firewall. Alternatively, one can deactivate the firewall and try opening the client again.
 
+---
+### Creating an account and logging in the game
+
+By default, the server source is set to allow AUTO-REGISTERING. This means that, by simply typing in a "Login ID" and a "Password", you're able to create a new account.
+
+After creating a character, experiment typing in all-chat "@commands". This will display all available commands for the current GM level your character has.
+
+To change a character's GM level, make sure that character is not logged in, then:
+
+* Open MySQL Query Browser;
+* Double-click "heavenms" schema;
+* Double click "characters" table;
+* Execute the selected query;
+* Mark "Edit" flag on the MySQL Query Browser UI screen;
+* Locate your character's row on the displayed ResultSet;
+* Edit your character's GM level;
+* Hit APPLY CHANGES.
+
 ---
 ### Some notes about WZ/WZ.XML EDITING 
 
diff --git a/docs/feature_list.md b/docs/feature_list.md
index eb6491412..b4ebf0cc3 100644
--- a/docs/feature_list.md
+++ b/docs/feature_list.md
@@ -68,11 +68,14 @@ Player Social Network:
 * Automated support for Player NPCs and Hall of Fame.
 * Protected concurrently and improved the face expression system, guarding from trivial packet spam and exploits.
 * All upgradeable non-cash equipments in inventory with level & EXP information available for read by anyone, given proper visibility.
+* Further improved the existent minigame mechanics: remarkably checking out for no-item match requests, allowing different omok/matchcard match layouts and status update on the player matchbox tooltips.
 
 Cash & Items:
 
 * EXP/DROP/Cosmetic Coupons.
 * EXP/DROP coupons now appears as a buff effect when on active time.
+* Code coupons functional, with support for multiple items on the same code.
+* Merged unique ids for pets, rings and cash items, thus solving some cash shop inventory issues.
 * Great deal of cash items functional.
 * MapleTV mechanics stabilized and separated by world.
 * GMS-esque omok/match card drop chances.
@@ -80,7 +83,7 @@ Cash & Items:
 * Inventory system properly checks for item slot free space and ownership.
 * Storage with "Arrange Items" feature functional.
 * Close-quarters evaluation mode for items (sandbox).
-* Further improved Karma scissors mechanics.
+* Further improved Karma scissors & Untradeable items mechanics.
 * Spikes on shoes.
 * Vega's spell.
 * Owl of Minerva.
@@ -116,6 +119,8 @@ Monsters, Maps & Reactors:
 * Updated many scripted portals not implementing SFX properly.
 * Updated Crimsonwood, World Tour, Nihal Desert and Neo City, enabling quest completion and game progression in these areas.
 * Added world maps for Mushroom Castle, World Tour (Singapore, Malaysia and Zipangu) & Ellin Forest areas.
+* Added World Tour and Masteria continents in the world map.
+* Reviewed World Map's town/field tooltips and links from the main world map and Masteria region.
 * Giant Cake (anniversary-themed boss) drops Maple equipments, Maple scrolls, summoning bags and many more interesting items.
 
 PQ potentials:
@@ -182,13 +187,14 @@ Custom NPCs:
 * Donation Box: automatized item-buyer.
 * Coco & Ace of Hearts: C. scroll crafters.
 
-Admin/GM commands:
+Server Commands:
 
 * Server commands layered by GM levels.
 * Spawn Zakum/Horntail/Pinkbean.
 * Several new commands.
 * Rank command highlighting users either by world or server-wide.
 * Revamped command files layout -- thanks Arthur L.
+* Optimized Search command, caching search range contents and added map search functionality.
 
 External tools:
 
diff --git a/docs/mychanges_ptbr.txt b/docs/mychanges_ptbr.txt
index 3b31996e7..518f7a095 100644
--- a/docs/mychanges_ptbr.txt
+++ b/docs/mychanges_ptbr.txt
@@ -1276,30 +1276,30 @@ Otimizado função goto, agora não mais gerando mapas de cidade/mapid a todo us
 Melhorado função de disconnect do MapleClient, evitando múltiplos envios de dados do jogador à DB.
 Desenhado (todo conteúdo de imagens creditado à Nexon) e implementado novos mapas-mundi referente a regiões de M. Shrine, Showa, CBD e Metropolis/Kampung.
 
-03 Agosto 2018,
+03 Setembro 2018,
 Implementado buffs inexpiráveis.
 Corrigido comando resetStats não levando em conta AP's atuais dos jogadores.
 Corrigido novo sistema gerenciador de loots removendo a possibilidade de conseguir novos itens de quest após coleta do primeiro item.
 
-04 Agosto 2018,
+04 Setembro 2018,
 Corrigido um flicker na animação do efeito da skill Hurricane.
 Ajustado MapleSessionCoordinator, agora verificando HWID's ao invés de contar somente com o remote IP, evitando negação de serviço para usuários de VPNs.
 Corrigido dispel normal incorretamente mostrando efeitos aleatórios a outros jogadores, issue apontado por Thora.
 Corrigido change job não mostrando efeito a outros jogadores.
 Corrigido valores incorretos sendo retirado de jogadores para expansão de guild, issue apontado por Thora.
 
-05 Agosto 2018,
+05 Setembro 2018,
 Adicionado world map em Ellin Forest.
 Protegido concorrentemente sistema de fames.
 Adicionado ganho de quest points para jogadores que participam de PQs. Reformulado sistema de quest points para viabilizar a nova feature.
 Otimizado método de ganho de experiência em equipamentos, agora devidamente cacheado e sem busca em strings no processo.
 
-08 Agosto 2018,
+08 Setembro 2018,
 MapleServerHandler agora é devidamente deregistrado ao finalizar uma instância de channel, eliminando possível foco de memory leak.
 Funções playerDead e playerRevive são agora opcionais em EIM scripts.
 Nova ferramenta: MapleEquipmentOmnileveler. Permite adicionar e atualizar nodos referentes a níveis para todos os equipamentos. Em jogo, essa adição permite jogadores a ver nível de qualquer equipamento do jogo.
 
-09 - 10 Agosto 2018,
+09 - 10 Setembro 2018,
 Adicionado cálculo de MP ao realizar ataques de mobs.
 Aplicado vários pequenos ajustes no handler que lida com movimentação de mobs, procurando assim reduzir ruidos no fluxo do jogo (e.g. mob caindo de foothold).
 Corrigido schedules de event instances sendo chamados após finalização da mesma, levando locks já liberados a serem chamados inesperadamente.
@@ -1307,7 +1307,7 @@ Corrigido casos onde jogadores poderiam requisitar instanciação de uma nova PQ
 Aplicado reformatação geral no Character.wz, adicionando nodos de level para todos os equipamentos do jogo. Tal mudança permite que todos os equipamentos exponham nível e experiência em todos os equipamentos no inventário.
 Implementado cálculo de experiência no lado do servidor que permite mostrar adequadamente EXP dos equipamentos no lado do cliente.
 
-11 - 19 Agosto 2018,
+11 - 19 Setembro 2018,
 Corrigido MP Recovery skill não atuando segundo descrição, além de matando jogador com pouco HP disponível.
 Refatorado completamente acessos de stats no código do server.
 Refatorado check de Berserk sendo chamado em múltiplas seções do código.
@@ -1326,5 +1326,59 @@ Corrigido alliances retendo informações de guilds que foram desfeitas na DB.
 Corrigido alliances não salvando nomes de ranks na DB ao serem criadas.
 Adicionado suporte para doors na região de Mushroom Castle.
 
-24 Agosto 2018,
-Resolvido pequenas inconsistências entre os XMLs e WZs disponibilizados.
\ No newline at end of file
+24 Setembro 2018,
+Resolvido pequenas inconsistências entre os XMLs e WZs disponibilizados.
+Alterado "session write" para "announce", agora devidamente utilizando encapsulamento e lidando com sincronização de serviços.
+
+25 Setembro 2018,
+Corrigido diversas exceções no cash shop congelando próximas ações dos jogadores, somente ficando disponível após sair do mesmo.
+Reimplementado sistema de code coupons no cash shop.
+Removido skills Teleport e Super Dragon Roar redundantes do job SuperGM (jobid 910).
+Adicionado informações detalhadas do estado corrente do buyback, em forma de comando.
+Corrigido desligamento de channel com jogadores dentro do cash shop levando o sistema a lançar algumas exceções.
+
+26 Setembro 2018,
+Aprimorado code coupons, agora permitindo entrega de vários itens no mesmo código.
+Revisado uso de addById no código, não permitindo adicionar itens limpos em slots de itens que possuem marcação de dono.
+Implementado automatização de geração de coupon codes baseado em templates, utilizando arquivo XML para pegar os parâmetros.
+
+29 Setembro 2018,
+Corrigido Ereve faltando suporte para um Door portal.
+Adicionado suporte de Doors para Happyville e Crimsonwood Keep.
+Melhorado aspectos do world map da região de Masteria, adicionando interiores de Crimsonwood Keep no mapa e tooltip para interiores de Haunted House no mapa de Masteria.
+Aprimorado região interior de Crimsonwood Keep, não mais reposicionando jogadores com a funcionalidade forcedReturn do WZ.
+Corrigido arredores de Amoria não retornando jogadores para a cidade ao ressucitar pelo método usual.
+Corrigido petids e ringids misturando valores com cashids de itens comuns, potencialmente causando problemas com os inventários do jogador e do cash shop da conta do mesmo.
+
+30 Setembro 2018,
+Adicionado região de Masteria no World Map.
+Corrigido ligação de Ludibrium para Orbis não sendo mostrado corretamente.
+Melhorado ratio update de HP/MP, agora memorizando ratio recentes ao efetuar ações como modificar status do inventário de itens equipados, entre outros.
+
+01 - 03 Outubro 2018,
+Corrigido diversos problemas com o sistema de login quando o uso do bcrypt está desativado.
+Implementado/melhorado diversas mecânicas dos minigames (do aspecto dos tooltips dos boxes às pontuações visiveis dentro da sala e sistema de pontuação interno único), tornando agora finalmente viável a jogabilidade estendida dessa funcionalidade.
+Adicionado server flag para evitar levelup em equipamentos de cash.
+Melhorado verificação de itens untradeable em vários pontos do código, agora avaliando também status de Karma.
+Adicionado funcionalidade de pesquisa de mapas no comando Search.
+Otimizado comando Search, agora cacheando dados para as pesquisas.
+Corrigido pequenas inconsistências com HPMP ratio recém implementado.
+Revisado drop chance de vários itens de quest e diversos ETC drops de mobs de nível baixo.
+Revisado descrições de várias skills de GM.
+
+04 Outubro 2018,
+Prequest de Zakum agora recompensa 5 Eye of Fire, valor oficial.
+Modificado script de quiz do 3rd job, agora randomizando posicionamento das respostas.
+Modificado damage-over-time em mapas como arredores de El Nath e Aqua Road, agora dando dano a cada 5 segundos, como previsto na versão oficial.
+Corrigido comando Whodrops potencialmente lagando o servidor se comando for spammado por jogadores.
+Protegido concorrentemente handler de interação de jogadores (trades, player shops, minigames, entre outros).
+Melhorado checagem de acesso concorrente em alguns handlers, agora utilizando semáforos para fazer a filtragem de requisições a esses handlers.
+Revertido pet pickup para permitindo coletar itens indiscriminadamente de ataque. Causa de situações onde pet pickup evita ação de ataque de jogador não está claro.
+Modificado timers para diversas expedições, agora com duração máxima entre 1h30 a 2h.
+
+08 Outubro 2018,
+Protegido concorrentemente módulos de chairs.
+
+09 Outubro 2018,
+Corrigido disease seduce não funcionando da forma esperada quando jogador está sentado.
+Movido Dropspider para fora do código-fonte do server, agora estando como uma ferramenta externa.
\ No newline at end of file
diff --git a/handbook/Use.txt b/handbook/Use.txt
index 6dbac5ec5..36286ebc6 100644
--- a/handbook/Use.txt
+++ b/handbook/Use.txt
@@ -903,10 +903,10 @@
 2048003 - Scroll for Pet Equip. for Jump - Improves jump on pet equip.\nSuccess rate:100%, jump+1
 2048004 - Scroll for Pet Equip. for Jump - Improves jump on pet equip.\nSuccess rate:60%, jump+2. The success rate of this scroll can be enhanced by Vega's Spell.
 2048005 - Scroll for Pet Equip. for Jump - Improves jump on pet equip.\nSuccess rate:10%, jump+3. The success rate of this scroll can be enhanced by Vega's Spell.
-2048006 - Scroll for Speed for Pet Equip. - Improves speed on Pet Equip. nSuccess rate:65%, speed+2
-2048007 - Scroll for Speed for Pet Equip. - Improves speed on Pet Equip. nSuccess rate:15%, speed+3
-2048008 - Scroll for jump for Pet Equip. - Improves jump on Pet equip. nSuccess rate:65%, jump+2
-2048009 - Scroll for jump for Pet Equip. - Improves jump on Pet equip. nSuccess rate:15%, jump+3
+2048006 - Scroll for Pet Equip. for Speed - Improves speed on Pet Equip. nSuccess rate:65%, speed+2
+2048007 - Scroll for Pet Equip. for Speed - Improves speed on Pet Equip. nSuccess rate:15%, speed+3
+2048008 - Scroll for Pet Equip. for Jump - Improves jump on Pet equip. nSuccess rate:65%, jump+2
+2048009 - Scroll for Pet Equip. for Jump - Improves jump on Pet equip. nSuccess rate:15%, jump+3
 2048010 - Scroll for Pet Equip. for STR 60% - Improves strength on pet equipments.\nSuccess rate:60%, STR+1. The success rate of this scroll can be enhanced by Vega's Spell.
 2048011 - Scroll for Pet Equip. for INT 60% - Improves intelligence on pet equipments.\nSuccess rate:60%, INT+1. The success rate of this scroll can be enhanced by Vega's Spell.
 2048012 - Scroll for Pet Equip. for DEX 60% - Improves dexterity on pet equipments.\nSuccess rate:60%, DEX+1. The success rate of this scroll can be enhanced by Vega's Spell.
diff --git a/nbproject/private/private.properties b/nbproject/private/private.properties
index b7375e1e9..67c9c2796 100644
--- a/nbproject/private/private.properties
+++ b/nbproject/private/private.properties
@@ -1,10 +1,6 @@
 compile.on.save=true
 do.depend=false
 do.jar=true
-file.reference.mina-core-2.0.7.jar=C:\\Nexon\\HeavenMS\\cores\\mina-core-2.0.7.jar
-file.reference.mysql-connector-java-bin.jar=C:\\Nexon\\HeavenMS\\cores\\mysql-connector-java-bin.jar
-file.reference.slf4j-api-1.6.6.jar=C:\\Nexon\\HeavenMS\\cores\\slf4j-api-1.6.6.jar
-file.reference.slf4j-jdk14-1.7.5.jar=C:\\Nexon\\HeavenMS\\cores\\slf4j-jdk14-1.7.5.jar
 javac.debug=true
 javadoc.preview=true
 user.properties.file=C:\\Users\\RonanLana\\AppData\\Roaming\\NetBeans\\8.0.2\\build.properties
diff --git a/nbproject/project.properties b/nbproject/project.properties
index cd7cebb20..62e82d246 100644
--- a/nbproject/project.properties
+++ b/nbproject/project.properties
@@ -30,20 +30,20 @@ endorsed.classpath=
 excludes=
 file.reference.HikariCP-java7-2.4.12.jar=cores/HikariCP-java7-2.4.12.jar
 file.reference.MapleSolaxia-src=src
-file.reference.mina-core-2.0.7.jar=cores\\mina-core-2.0.7.jar
-file.reference.mysql-connector-java-bin.jar=cores\\mysql-connector-java-bin.jar
-file.reference.slf4j-api-1.6.6.jar=cores\\slf4j-api-1.6.6.jar
-file.reference.slf4j-jdk14-1.7.5.jar=cores\\slf4j-jdk14-1.7.5.jar
+file.reference.mina-core-2.0.7.jar=cores/mina-core-2.0.7.jar
+file.reference.mysql-connector-java-bin.jar=cores/mysql-connector-java-bin.jar
+file.reference.slf4j-api-1.6.6.jar=cores/slf4j-api-1.6.6.jar
+file.reference.slf4j-jdk14-1.7.5.jar=cores/slf4j-jdk14-1.7.5.jar
 includes=**
 jar.archive.disabled=${jnlp.enabled}
 jar.compress=true
 jar.index=${jnlp.enabled}
 javac.classpath=\
+    ${file.reference.HikariCP-java7-2.4.12.jar}:\
     ${file.reference.mina-core-2.0.7.jar}:\
     ${file.reference.mysql-connector-java-bin.jar}:\
     ${file.reference.slf4j-api-1.6.6.jar}:\
-    ${file.reference.slf4j-jdk14-1.7.5.jar}:\
-    ${file.reference.HikariCP-java7-2.4.12.jar}
+    ${file.reference.slf4j-jdk14-1.7.5.jar}
 # Space-separated list of extra javac options
 javac.compilerargs=
 javac.deprecation=false
diff --git a/scripts/event/3rdJob_bowman.js b/scripts/event/3rdJob_bowman.js
index 78db216ae..391023323 100644
--- a/scripts/event/3rdJob_bowman.js
+++ b/scripts/event/3rdJob_bowman.js
@@ -47,7 +47,7 @@ function playerEntry(eim, player) {
     player.changeMap(entryMap, 0);
     em.setProperty("noEntry","true");
     
-    player.getClient().getSession().write(MaplePacketCreator.getClock(eventTime * 60));
+    player.getClient().announce(MaplePacketCreator.getClock(eventTime * 60));
     eim.startEventTimer(eventTime * 60000);
 }
 
diff --git a/scripts/event/3rdJob_magician.js b/scripts/event/3rdJob_magician.js
index fa57fb447..d9401415e 100644
--- a/scripts/event/3rdJob_magician.js
+++ b/scripts/event/3rdJob_magician.js
@@ -47,7 +47,7 @@ function playerEntry(eim, player) {
     player.changeMap(entryMap, 0);
     em.setProperty("noEntry","true");
     
-    player.getClient().getSession().write(MaplePacketCreator.getClock(eventTime * 60));
+    player.getClient().announce(MaplePacketCreator.getClock(eventTime * 60));
     eim.startEventTimer(eventTime * 60000);
 }
 
diff --git a/scripts/event/3rdJob_mount.js b/scripts/event/3rdJob_mount.js
index 0abd5af7c..4b689f359 100644
--- a/scripts/event/3rdJob_mount.js
+++ b/scripts/event/3rdJob_mount.js
@@ -62,7 +62,7 @@ function playerEntry(eim, player) {
     player.changeMap(entryMap, 0);
     em.setProperty("noEntry","true");
     
-    player.getClient().getSession().write(MaplePacketCreator.getClock(eventTime * 60));
+    player.getClient().announce(MaplePacketCreator.getClock(eventTime * 60));
     eim.startEventTimer(eventTime * 60000);
 }
 
diff --git a/scripts/event/3rdJob_pirate.js b/scripts/event/3rdJob_pirate.js
index 3f1d8f7c6..e149acb93 100644
--- a/scripts/event/3rdJob_pirate.js
+++ b/scripts/event/3rdJob_pirate.js
@@ -47,7 +47,7 @@ function playerEntry(eim, player) {
     player.changeMap(entryMap, 0);
     em.setProperty("noEntry","true");
     
-    player.getClient().getSession().write(MaplePacketCreator.getClock(eventTime * 60));
+    player.getClient().announce(MaplePacketCreator.getClock(eventTime * 60));
     eim.startEventTimer(eventTime * 60000);
 }
 
diff --git a/scripts/event/3rdJob_thief.js b/scripts/event/3rdJob_thief.js
index 774c87326..8d925c908 100644
--- a/scripts/event/3rdJob_thief.js
+++ b/scripts/event/3rdJob_thief.js
@@ -47,7 +47,7 @@ function playerEntry(eim, player) {
     player.changeMap(entryMap, 0);
     em.setProperty("noEntry","true");
     
-    player.getClient().getSession().write(MaplePacketCreator.getClock(eventTime * 60));
+    player.getClient().announce(MaplePacketCreator.getClock(eventTime * 60));
     eim.startEventTimer(eventTime * 60000);
 }
 
diff --git a/scripts/event/3rdJob_warrior.js b/scripts/event/3rdJob_warrior.js
index e683c5f7b..5c47d0916 100644
--- a/scripts/event/3rdJob_warrior.js
+++ b/scripts/event/3rdJob_warrior.js
@@ -47,7 +47,7 @@ function playerEntry(eim, player) {
     player.changeMap(entryMap, 0);
     em.setProperty("noEntry","true");
     
-    player.getClient().getSession().write(MaplePacketCreator.getClock(eventTime * 60));
+    player.getClient().announce(MaplePacketCreator.getClock(eventTime * 60));
     eim.startEventTimer(eventTime * 60000);
 }
 
diff --git a/scripts/event/4jberserk.js b/scripts/event/4jberserk.js
index 029c588ed..1949dab5c 100644
--- a/scripts/event/4jberserk.js
+++ b/scripts/event/4jberserk.js
@@ -58,7 +58,7 @@ function playerEntry(eim, player) {
     player.changeMap(map, map.getPortal(0));
 	
 //TODO: hold time across map changes
-//player.getClient().getSession().write(tools.MaplePacketCreator.getClock(1800));
+//player.getClient().announce(tools.MaplePacketCreator.getClock(1800));
 }
 
 function playerDead(eim, player) {
diff --git a/scripts/event/Aran_2ndmount.js b/scripts/event/Aran_2ndmount.js
index fa2bfcd3d..30cde9317 100644
--- a/scripts/event/Aran_2ndmount.js
+++ b/scripts/event/Aran_2ndmount.js
@@ -53,7 +53,7 @@ function playerEntry(eim, player) {
     player.changeMap(entryMap, 2);
     em.setProperty("noEntry","true");
     
-    player.getClient().getSession().write(MaplePacketCreator.getClock(eventTime * 60));
+    player.getClient().announce(MaplePacketCreator.getClock(eventTime * 60));
     eim.startEventTimer(eventTime * 60000);
 }
 
diff --git a/scripts/event/Aran_3rdmount.js b/scripts/event/Aran_3rdmount.js
index b85b44aef..09ccfea5f 100644
--- a/scripts/event/Aran_3rdmount.js
+++ b/scripts/event/Aran_3rdmount.js
@@ -54,7 +54,7 @@ function playerEntry(eim, player) {
     player.changeMap(entryMap, 1);
     em.setProperty("noEntry","true");
     
-    player.getClient().getSession().write(MaplePacketCreator.getClock(eventTime * 60));
+    player.getClient().announce(MaplePacketCreator.getClock(eventTime * 60));
     eim.startEventTimer(eventTime * 60000);
 }
 
diff --git a/scripts/event/BalrogQuest.js b/scripts/event/BalrogQuest.js
index 67e9a3c6f..797f7b23b 100644
--- a/scripts/event/BalrogQuest.js
+++ b/scripts/event/BalrogQuest.js
@@ -29,7 +29,7 @@ var exitMap = 105100100;
 var minMapId = 910520000;
 var maxMapId = 910520000;
 
-var eventTime = 10; //10 minutes
+var eventTime = 10;     //10 minutes
 
 var lobbyRange = [0, 0];
 
@@ -56,7 +56,7 @@ function playerEntry(eim, player) {
     player.changeMap(entryMap, 1);
     em.setProperty("noEntry","true");
     
-    player.getClient().getSession().write(MaplePacketCreator.getClock(eventTime * 60));
+    player.getClient().announce(MaplePacketCreator.getClock(eventTime * 60));
     eim.startEventTimer(eventTime * 60000);
 }
 
diff --git a/scripts/event/DollHouse.js b/scripts/event/DollHouse.js
index 9e8ac8f92..b307bbee2 100644
--- a/scripts/event/DollHouse.js
+++ b/scripts/event/DollHouse.js
@@ -26,7 +26,7 @@ importPackage(Packages.tools);
 
 var entryMap = 922000010;
 var exitMap = 221024400;
-var eventTime = 10; //10 minutes
+var eventTime = 10;     //10 minutes
 
 function init() {
     em.setProperty("noEntry","false");
@@ -39,7 +39,7 @@ function playerEntry(eim, player) {
     player.changeMap(entryMap, 0);
     em.setProperty("noEntry","true");
     
-    player.getClient().getSession().write(MaplePacketCreator.getClock(eventTime * 60));
+    player.getClient().announce(MaplePacketCreator.getClock(eventTime * 60));
     eim.startEventTimer(eventTime * 60000);
 }
 
diff --git a/scripts/event/GuildQuest.js b/scripts/event/GuildQuest.js
index de751d6f1..921efdf8f 100644
--- a/scripts/event/GuildQuest.js
+++ b/scripts/event/GuildQuest.js
@@ -237,7 +237,7 @@ function changedMap(eim, player, mapid) {
 function afterChangedMap(eim, player, mapid) {
         if (mapid == 990000100) {
                 var texttt = "So, here is the brief. You guys should be warned that, once out on the fortress outskirts, anyone that would not be equipping the #b#t1032033##k will die instantly due to the deteriorated state of the air around there. That being said, once your team moves out, make sure to #bhit the glowing rocks#k in that region and #bequip the dropped item#k before advancing stages. That will protect you thoroughly from the air sickness. Good luck!";
-                player.getClient().getSession().write(Packages.tools.MaplePacketCreator.getNPCTalk(9040000, /*(byte)*/ 0, texttt, "00 00", /*(byte)*/ 0));
+                player.getClient().announce(Packages.tools.MaplePacketCreator.getNPCTalk(9040000, /*(byte)*/ 0, texttt, "00 00", /*(byte)*/ 0));
         }
 }
 
diff --git a/scripts/event/Hak.js b/scripts/event/Hak.js
index f952751c0..7a3e44741 100644
--- a/scripts/event/Hak.js
+++ b/scripts/event/Hak.js
@@ -34,7 +34,7 @@ function playerEntry(eim, player) {
         onRide = eim.getMapFactory().getMap(birdRide[myRide]);
         player.changeMap(onRide, onRide.getPortal(0));
         
-        player.getClient().getSession().write(MaplePacketCreator.getClock(rideTime / 1000));
+        player.getClient().announce(MaplePacketCreator.getClock(rideTime / 1000));
         eim.schedule("timeOut", rideTime);
 }
 
diff --git a/scripts/event/HorntailBattle.js b/scripts/event/HorntailBattle.js
index 0be282d61..6ed3a6df0 100644
--- a/scripts/event/HorntailBattle.js
+++ b/scripts/event/HorntailBattle.js
@@ -36,7 +36,7 @@ var clearMap = 240050600;
 var minMapId = 240060000;
 var maxMapId = 240060200;
 
-var eventTime = 15;     // 15 minutes
+var eventTime = 120;     // 120 minutes
 
 var lobbyRange = [0, 0];
 
diff --git a/scripts/event/KerningTrain.js b/scripts/event/KerningTrain.js
index 916f81267..13c691df9 100644
--- a/scripts/event/KerningTrain.js
+++ b/scripts/event/KerningTrain.js
@@ -35,8 +35,8 @@ function playerEntry(eim, player) {
         onRide = eim.getMapFactory().getMap(trainRide[myRide]);
         player.changeMap(onRide, onRide.getPortal(0));
         
-        player.getClient().getSession().write(MaplePacketCreator.getClock(rideTime / 1000));
-        player.getClient().getSession().write(MaplePacketCreator.earnTitleMessage("The next stop is at Kerning " + (myRide == 0 ? "Square" : "Subway") + " Station. The exit is to your left."));
+        player.getClient().announce(MaplePacketCreator.getClock(rideTime / 1000));
+        player.getClient().announce(MaplePacketCreator.earnTitleMessage("The next stop is at Kerning " + (myRide == 0 ? "Square" : "Subway") + " Station. The exit is to your left."));
         eim.schedule("timeOut", rideTime);
 }
 
diff --git a/scripts/event/MK_PrimeMinister2.js b/scripts/event/MK_PrimeMinister2.js
index ea9e3c100..c1daee1b2 100644
--- a/scripts/event/MK_PrimeMinister2.js
+++ b/scripts/event/MK_PrimeMinister2.js
@@ -2,7 +2,7 @@ importPackage(Packages.tools);
 importPackage(Packages.server.life);
 
 var minPlayers = 1;
-var eventTime = 10;
+var eventTime = 10;     // 10 minutes
 var entryMap = 106021402;
 var exitMap = 106021600;
 
@@ -36,7 +36,7 @@ function playerEntry(eim, player){
         var pm = MapleLifeFactory.getMonster(3300008);
         weddinghall.spawnMonsterOnGroundBelow(pm, new Packages.java.awt.Point(472, 27));
         
-        player.getClient().getSession().write(MaplePacketCreator.getClock(eventTime * 60));
+        player.getClient().announce(MaplePacketCreator.getClock(eventTime * 60));
         eim.startEventTimer(eventTime * 60000);
 }
 
diff --git a/scripts/event/OrbisPQ.js b/scripts/event/OrbisPQ.js
index c7bce48ab..9ab4462fd 100644
--- a/scripts/event/OrbisPQ.js
+++ b/scripts/event/OrbisPQ.js
@@ -180,7 +180,7 @@ function playerEntry(eim, player) {
         player.changeMap(map, map.getPortal(0));
         
         var texttt = "Hi, my name is Eak, the Chamberlain of the Goddess. Don't be alarmed; you won't be able to see me right now. Back when the Goddess turned into a block of stone, I simultaneously lost my own power. If you gather up the power of the Magic Cloud of Orbis, however, then I'll be able to recover my body and re-transform back to my original self. Please collect #b20#k Magic Clouds and bring them back to me. Right now, you'll only see me as a tiny, flickering light.";
-        player.getClient().getSession().write(Packages.tools.MaplePacketCreator.getNPCTalk(2013001, /*(byte)*/ 0, texttt, "00 00", /*(byte)*/ 0));
+        player.getClient().announce(Packages.tools.MaplePacketCreator.getNPCTalk(2013001, /*(byte)*/ 0, texttt, "00 00", /*(byte)*/ 0));
 }
 
 function scheduledTimeout(eim) {
diff --git a/scripts/event/PinkBeanBattle.js b/scripts/event/PinkBeanBattle.js
index e4ee83165..a147b862f 100644
--- a/scripts/event/PinkBeanBattle.js
+++ b/scripts/event/PinkBeanBattle.js
@@ -37,7 +37,7 @@ var clearMap = 270050300;
 var minMapId = 270050100;
 var maxMapId = 270050300;
 
-var eventTime = 100;     // 100 minutes
+var eventTime = 140;     // 140 minutes
 
 var lobbyRange = [0, 0];
 
diff --git a/scripts/event/RockSpirit.js b/scripts/event/RockSpirit.js
index b1cbdd466..c8b00228d 100644
--- a/scripts/event/RockSpirit.js
+++ b/scripts/event/RockSpirit.js
@@ -22,7 +22,7 @@
 importPackage(Packages.tools);
 
 var exitMap;
-var startMap;
+var entryMap;
 var otherMap;
 var minPlayers = 1;
 var fightTime = 60;
@@ -30,7 +30,7 @@ var timer = 1000 * 60 * fightTime;
 
 function init() {
 	exitMap = em.getChannelServer().getMapFactory().getMap(103040400);
-	startMap = em.getChannelServer().getMapFactory().getMap(103040410);
+	entryMap = em.getChannelServer().getMapFactory().getMap(103040410);
 	otherMap = em.getChannelServer().getMapFactory().getMap(103040420);
 }
 
@@ -44,7 +44,7 @@ function setup() {
 function afterSetup(eim) {}
 
 function respawn(eim) {
-	var map = eim.getMapInstance(startMap.getId());
+	var map = eim.getMapInstance(entryMap.getId());
 	var map2 = eim.getMapInstance(otherMap.getId());
 	map.allowSummonState(true);
 	map2.allowSummonState(true);
@@ -55,7 +55,7 @@ function respawn(eim) {
 
 
 function playerEntry(eim, player) {
-	var amplifierMap = eim.getMapInstance(startMap.getId());
+	var amplifierMap = eim.getMapInstance(entryMap.getId());
 	player.changeMap(amplifierMap);
     eim.schedule("timeOut", timer);
 }
@@ -107,7 +107,7 @@ function playerExit(eim, player) {
 function moveMap(eim, player) {
 	if (player.getMap().getId() == exitMap.getId()) {
 		removePlayer(eim, player);
-		player.getClient().getSession().write(MaplePacketCreator.removeClock());
+		player.getClient().announce(MaplePacketCreator.removeClock());
 		eim.dispose();
 	}
 }
diff --git a/scripts/event/RockSpiritVIP.js b/scripts/event/RockSpiritVIP.js
index 4895d5dc2..f7e60a5e6 100644
--- a/scripts/event/RockSpiritVIP.js
+++ b/scripts/event/RockSpiritVIP.js
@@ -22,7 +22,7 @@
 importPackage(Packages.tools);
 
 var exitMap;
-var startMap;
+var entryMap;
 var otherMap;
 var minPlayers = 1;
 var fightTime = 30;
@@ -30,7 +30,7 @@ var timer = 1000 * 60 * fightTime;
 
 function init() {
 	exitMap = em.getChannelServer().getMapFactory().getMap(103040400);
-	startMap = em.getChannelServer().getMapFactory().getMap(103040440);
+	entryMap = em.getChannelServer().getMapFactory().getMap(103040440);
 	otherMap = em.getChannelServer().getMapFactory().getMap(103040450);
 }
 
@@ -44,7 +44,7 @@ function setup() {
 function afterSetup(eim) {}
 
 function respawn(eim) {
-	var map = eim.getMapInstance(startMap.getId());
+	var map = eim.getMapInstance(entryMap.getId());
 	var map2 = eim.getMapInstance(otherMap.getId());
 	map.allowSummonState(true);
 	map2.allowSummonState(true);
@@ -55,7 +55,7 @@ function respawn(eim) {
 
 
 function playerEntry(eim, player) {
-	var amplifierMap = eim.getMapInstance(startMap.getId());
+	var amplifierMap = eim.getMapInstance(entryMap.getId());
 	player.changeMap(amplifierMap);
         eim.schedule("timeOut", timer);
 }
@@ -107,7 +107,7 @@ function playerExit(eim, player) {
 function moveMap(eim, player) {
 	if (player.getMap().getId() == exitMap.getId()) {
 		removePlayer(eim, player);
-		player.getClient().getSession().write(MaplePacketCreator.removeClock());
+		player.getClient().announce(MaplePacketCreator.removeClock());
 		eim.dispose();
 	}
 }
diff --git a/scripts/event/ZakumBattle.js b/scripts/event/ZakumBattle.js
index 7fc014adc..a91296c18 100644
--- a/scripts/event/ZakumBattle.js
+++ b/scripts/event/ZakumBattle.js
@@ -36,7 +36,7 @@ var clearMap = 211042400;
 var minMapId = 280030000;
 var maxMapId = 280030000;
 
-var eventTime = 60;     // 60 minutes
+var eventTime = 120;     // 120 minutes
 
 var lobbyRange = [0, 0];
 
diff --git a/scripts/map/onFirstUserEnter/killing_MapSetting.js b/scripts/map/onFirstUserEnter/killing_MapSetting.js
index c45b9865e..8b0ccf433 100644
--- a/scripts/map/onFirstUserEnter/killing_MapSetting.js
+++ b/scripts/map/onFirstUserEnter/killing_MapSetting.js
@@ -3,7 +3,7 @@
 function start(ms) { 
     //var pq = ms.getPyramid();
     //ms.getPlayer().resetEnteredScript();
-    //ms.getClient().getSession().write(MaplePacketCreator.getClock(pq.timer()));
+    //ms.getClient().announce(MaplePacketCreator.getClock(pq.timer()));
 }
 /*
 killing/first/stage
diff --git a/scripts/map/onFirstUserEnter/spaceGaGa_start.js b/scripts/map/onFirstUserEnter/spaceGaGa_start.js
index ce0beaf35..57d476e83 100644
--- a/scripts/map/onFirstUserEnter/spaceGaGa_start.js
+++ b/scripts/map/onFirstUserEnter/spaceGaGa_start.js
@@ -29,11 +29,11 @@ var player;
 function start(ms) { 
 	player = ms.getPlayer();
         player.resetEnteredScript(); 
-        ms.getClient().getSession().write(MaplePacketCreator.showEffect("event/space/start")); 
+        ms.getClient().announce(MaplePacketCreator.showEffect("event/space/start")); 
         player.startMapEffect("Please rescue Gaga within the time limit.", 5120027); 
 	var map = player.getMap();
 	if (map.getTimeLeft() > 0) {
-		ms.getClient().getSession().write(MaplePacketCreator.getClock(map.getTimeLeft()));
+		ms.getClient().announce(MaplePacketCreator.getClock(map.getTimeLeft()));
 	} else {
 		map.addMapTimer(180);
 	}
diff --git a/scripts/npc/1061010.js b/scripts/npc/1061010.js
index dd640d2da..7835599d7 100644
--- a/scripts/npc/1061010.js
+++ b/scripts/npc/1061010.js
@@ -21,13 +21,14 @@ function action(mode, type, selection) {
         if(status == 0){
                 cm.sendYesNo("Would you like to leave?");
         }else if(status == 1){
-                var mapid = cm.getMapId();
-                if(mapid == 108010101) cm.getPlayer().changeMap(105040305);
-                else if(mapid == 108010201) cm.getPlayer().changeMap(100040106);
-                else if(mapid == 108010301) cm.getPlayer().changeMap(105070001);
-                else if(mapid == 108010401) cm.getPlayer().changeMap(107000402);
-                else if(mapid == 108010501) cm.getPlayer().changeMap(105070200);
+                var mapid = cm.getMapId(), exitid = mapid;
+                if(mapid == 108010101) exitid = 105040305;
+                else if(mapid == 108010201) exitid = 100040106;
+                else if(mapid == 108010301) exitid = 105070001;
+                else if(mapid == 108010401) exitid = 107000402;
+                else if(mapid == 108010501) exitid = 105070200;
 
+                if (mapid != exitid) cm.getPlayer().changeMap(exitid);
                 cm.dispose();
         }
     }
diff --git a/scripts/npc/2020008.js b/scripts/npc/2020008.js
index 79679a672..2ce3f079a 100644
--- a/scripts/npc/2020008.js
+++ b/scripts/npc/2020008.js
@@ -92,7 +92,7 @@ function action(mode, type, selection){
         else if (status == 2) {
             if (cm.getPlayer().getRemainingSp() > 0)
                 if (cm.getPlayer().getRemainingSp() > (cm.getLevel() - 70) * 3) {
-                    cm.sendNext("Please, use all your SP before contining.");
+                    cm.sendNext("Please, use all your SP before continuing.");
                     cm.dispose();
                     return;
                 }
diff --git a/scripts/npc/2020009.js b/scripts/npc/2020009.js
index 0ed7c4747..39ab767c6 100644
--- a/scripts/npc/2020009.js
+++ b/scripts/npc/2020009.js
@@ -64,7 +64,7 @@ function action(mode, type, selection){
 		else if (status == 2) {
 		    if (cm.getPlayer().getRemainingSp() > 0)
 			    if (cm.getPlayer().getRemainingSp() > (cm.getLevel() - 70) * 3) {
-				    cm.sendNext("Please, use all your SP before contining.");
+				    cm.sendNext("Please, use all your SP before continuing.");
 					cm.dispose();
 					return;
 				}
diff --git a/scripts/npc/2020010.js b/scripts/npc/2020010.js
index 8cadcdca1..cab227ff6 100644
--- a/scripts/npc/2020010.js
+++ b/scripts/npc/2020010.js
@@ -66,7 +66,7 @@ function action(mode, type, selection){
 		else if (status == 2) {
 		    if (cm.getPlayer().getRemainingSp() > 0)
 			    if (cm.getPlayer().getRemainingSp() > (cm.getLevel() - 70) * 3) {
-				    cm.sendNext("Please, use all your SP before contining.");
+				    cm.sendNext("Please, use all your SP before continuing.");
 					cm.dispose();
 					return;
 				}
diff --git a/scripts/npc/2020011.js b/scripts/npc/2020011.js
index 980ec018d..a85730f09 100644
--- a/scripts/npc/2020011.js
+++ b/scripts/npc/2020011.js
@@ -64,7 +64,7 @@ function action(mode, type, selection){
         else if (status == 2) {
             if (cm.getPlayer().getRemainingSp() > 0)
                 if (cm.getPlayer().getRemainingSp() > (cm.getLevel() - 70) * 3) {
-                    cm.sendNext("Please, use all your SP before contining.");
+                    cm.sendNext("Please, use all your SP before continuing.");
                     cm.dispose();
                     return;
                 }
diff --git a/scripts/npc/2020013.js b/scripts/npc/2020013.js
index d8c6615f5..edec8efb1 100644
--- a/scripts/npc/2020013.js
+++ b/scripts/npc/2020013.js
@@ -64,7 +64,7 @@ function action(mode, type, selection){
         else if (status == 2) {
             if (cm.getPlayer().getRemainingSp() > 0)
                 if (cm.getPlayer().getRemainingSp() > (cm.getLevel() - 70) * 3) {
-                    cm.sendNext("Please, use all your SP before contining.");
+                    cm.sendNext("Please, use all your SP before continuing.");
                     cm.dispose();
                     return;
                 }
diff --git a/scripts/npc/2030006.js b/scripts/npc/2030006.js
index 3cc2d1741..6cc117e1e 100644
--- a/scripts/npc/2030006.js
+++ b/scripts/npc/2030006.js
@@ -39,7 +39,7 @@ var questionTree = [
         //Questions Related to MONSTERS
         ["Green Mushroom, Tree Stump, Bubbling, Axe Stump, Octopus, which is highest level of all?", ["Tree Stump", "Bubbling", "Axe Stump", "Octopus", "Green Mushroom"], 2],
         ["Which monster will be seen during the ship trip to Orbis/Ellinia?", ["Werewolf", "Slime", "Crimson Balrog", "Zakum", "Star Pixie"], 2],
-        ["Maple Island doesn't have which following monsters?", ["Shroom", "Blue Snail", "Orange Mushroom", "Red Snail", "Pig"], 4],
+        ["Maple Island doesn't have which following monsters?", ["Green Mushroom", "Blue Snail", "Orange Mushroom", "Red Snail", "Pig"], 0],
         ["Which monster is not at Victoria Island and Sleepywood?", ["Evil Eye", "Sentinel", "Jr. Balrog", "Ghost Stump", "Snail"], 1],
         ["El Nath doesn't have which following monsters?", ["Dark Yeti", "Dark Ligator", "Yeti & Pepe", "Bain", "Coolie Zombie"], 1],
         ["Which of following monsters can fly?", ["Malady", "Ligator", "Cold Eye", "Meerkat", "Alishar"], 0],
@@ -80,6 +80,8 @@ var question;
 var questionPool;
 var questionPoolCursor;
 
+var questionAnswer;
+
 function start() {
     status = -1;
     action(1, 0, 0);
@@ -121,7 +123,10 @@ function action(mode, type, selection) {
             question = fetchNextQuestion();
             var questionHead = generateQuestionHeading();
             var questionEntry = questionTree[question][0];
-            var questionOptions = generateSelectionMenu(questionTree[question][1]);
+            
+            var questionData = generateSelectionMenu(questionTree[question][1], questionTree[question][2]);
+            var questionOptions = questionData[0];
+            questionAnswer = questionData[1];
             
             cm.sendSimple(questionHead + questionEntry + "\r\n\r\n#b" + questionOptions + "#k");
         } else if(status >= 2 && status <= 5) {
@@ -134,7 +139,10 @@ function action(mode, type, selection) {
             question = fetchNextQuestion();
             var questionHead = generateQuestionHeading();
             var questionEntry = questionTree[question][0];
-            var questionOptions = generateSelectionMenu(questionTree[question][1]);
+            
+            var questionData = generateSelectionMenu(questionTree[question][1], questionTree[question][2]);
+            var questionOptions = questionData[0];
+            questionAnswer = questionData[1];
             
             cm.sendSimple(questionHead + questionEntry + "\r\n\r\n#b" + questionOptions + "#k");
         } else if(status == 6) {
@@ -155,7 +163,7 @@ function action(mode, type, selection) {
 }
 
 function evaluateAnswer(selection) {
-    return selection == questionTree[question][2];
+    return selection == questionAnswer;
 }
 
 function generateQuestionHeading() {
@@ -189,10 +197,36 @@ function fetchNextQuestion() {
     return next;
 }
 
-function generateSelectionMenu(array) {
+function shuffle(array) {
+    var currentIndex = array.length, temporaryValue, randomIndex;
+
+    // While there remain elements to shuffle...
+    while (0 !== currentIndex) {
+
+        // Pick a remaining element...
+        randomIndex = Math.floor(Math.random() * currentIndex);
+        currentIndex -= 1;
+
+        // And swap it with the current element.
+        temporaryValue = array[currentIndex];
+        array[currentIndex] = array[randomIndex];
+        array[randomIndex] = temporaryValue;
+    }
+
+    return array;
+}
+
+function generateSelectionMenu(array, answer) {
+    var answerStr = array[answer], answerPos = -1;
+    
+    shuffle(array);
+    
     var menu = "";
     for (var i = 0; i < array.length; i++) {
         menu += "#L" + i + "#" + array[i] + "#l\r\n";
+        if (answerStr == array[i]) {
+            answerPos = i;
+        }
     }
-    return menu;
+    return [menu, answerPos];
 }
\ No newline at end of file
diff --git a/scripts/npc/2030008.js b/scripts/npc/2030008.js
index 927124bcc..31a3afa6f 100644
--- a/scripts/npc/2030008.js
+++ b/scripts/npc/2030008.js
@@ -107,14 +107,14 @@ function action(mode, type, selection) {
             } else {
                 if(cm.haveItem(4031061) && cm.haveItem(4031062)) {
                     if(!cm.haveItem(4000082, 30)) {
-                        cm.sendOk("You have completed the trials, however there's still the need of #b30 #t4000082##k to forge the #t4001017#.");
+                        cm.sendOk("You have completed the trials, however there's still the need of #b30 #t4000082##k to forge 5 #t4001017#.");
                     } else {
                         cm.completeQuest(100201);
                         cm.gainItem(4031061, -1);
                         cm.gainItem(4031062, -1);
                         cm.gainItem(4000082, -30);
 
-                        cm.gainItem(4001017, 1);
+                        cm.gainItem(4001017, 5);
                         cm.sendNext("You #rhave completed the trials#k, from now on having my approval to challenge Zakum.");
                     }
                     
diff --git a/scripts/npc/9201021.js b/scripts/npc/9201021.js
index 2198fcd7a..49790a538 100644
--- a/scripts/npc/9201021.js
+++ b/scripts/npc/9201021.js
@@ -21,7 +21,7 @@
 */
 var status = 0;  
 
-function start() {  
+function start() {
     if(cm.getMapId() != 680000401) cm.sendSimple("Hello, where would you like to go?\r\n#b" + ((cm.getMapId() != 680000400) ? "#L0#Untamed Hearts Hunting Ground#l\r\n" : "") + ((cm.getMapId() == 680000400) ? "#L1#I have 7 keys. Bring me to smash boxes#l\r\n" : "") + "#L2#Please warp me out.#l#k");
     else cm.sendSimple("Hello, do you want to go back now? Returning here again will cost you #rother 7 keys#k.\r\n#b#L2#Please warp me back to the training grounds.#l#k");
 }  
diff --git a/scripts/npc/9977777.js b/scripts/npc/9977777.js
index eecf0196a..49f1748f5 100644
--- a/scripts/npc/9977777.js
+++ b/scripts/npc/9977777.js
@@ -82,19 +82,22 @@ function writeFeatureTab_PlayerSocialNetwork() {
         addFeature("Automated support for Player NPCs and Hall of Fame.");
         addFeature("Engagement & Wedding system.");
         addFeature("Equipments displays to everyone it's level & EXP info.");
+        addFeature("Further improved the existent minigame mechanics.");
 }
 
 function writeFeatureTab_CashItems() {
         addFeature("EXP/DROP/Cosmetic Coupons.");
         addFeature("EXP/DROP Coupon as buff effect during active time.");
         addFeature("Great deal of cash items functional.");
+        addFeature("Code coupons functional, with multi-items support.");
+        addFeature("Merged unique ids for pets, rings and cash items.");
         addFeature("MapleTV mechanics stabilized and split by world.");
         addFeature("GMS-esque omok/match card drop chances.");
         addFeature("New town scroll: antibanish. Counters boss banishes.");
         addFeature("Inventory system checks for free slot & stack space.");
         addFeature("Storage with 'Arrange Items' feature functional.");
         addFeature("Close-quarters evaluation mode for items.");
-        addFeature("Further improved Karma scissors.");
+        addFeature("Reviewed Karma scissors & Untradeable items.");
         addFeature("Scroll for Spikes on Shoes.");
         addFeature("Scroll for Cold Protection.");
         addFeature("Vega's spell.");
@@ -133,6 +136,8 @@ function writeFeatureTab_MonstersMapsReactors() {
         addFeature("Updated scripted portals, now with proper portal SFX.");
         addFeature("Reviewed Masteria, W. Tour, N. Desert and Neo City.");
         addFeature("Added world maps for M. Castle, W. Tour & Ellin areas.");
+        addFeature("Added W. Tour & Masteria continents in the world map.");
+        addFeature("Reviewed several issues with W. Map tooltips & links.");
         addFeature("Giant Cake boss drops s. bags and Maple items.");
 }
 
@@ -197,6 +202,7 @@ function writeFeatureTab_Commands() {
         addFeature("Rank command highlighting users by world or overall.");
         addFeature("Server commands layered by GM levels.");
         addFeature("Revamped command files layout - thanks Arthur L!");
+        addFeature("Improved 'Search' performance & added map search.");
 }
 
 function writeFeatureTab_CustomNPCs() {
@@ -274,9 +280,9 @@ function action(mode, type, selection) {
                         status++;
                 else
                         status--;
-    
+                    
                 if (status == 0) {
-                        var sendStr = "HeavenMS was developed on the timespan of 3 years, based on where Solaxia left. On the meantime many nice features emerged, development aimed to get back the old GMS experience. Now many of these so-long missing features are gracefully presented to you in the shape of this server. Long live MapleStory!!\r\n\r\nThese are the features from #bHeavenMS#k:\r\n\r\n";
+                        var sendStr = "HeavenMS was developed on the timespan of 3 years, based on where Solaxia left. I'm glad to say the development itself had continuously been agraciated by dozens of contributors and cheerers (truly thanks for the trusting vow, guys & gals!).\r\n\r\nTalking about results: many nice features emerged, development aimed to get back the old GMS experience. Now many of these so-long missing features are gracefully presented to you in the shape of this server. Long live MapleStory!!\r\n\r\nThese are the features from #bHeavenMS#k:\r\n\r\n";
                         for(var i = 0; i < tabs.length; i++) {
                             sendStr += "#L" + i + "##b" + tabs[i] + "#k#l\r\n";
                         }
diff --git a/scripts/npc/credits.js b/scripts/npc/credits.js
index 11d59bf77..7544ede3f 100644
--- a/scripts/npc/credits.js
+++ b/scripts/npc/credits.js
@@ -37,6 +37,7 @@ function writeServerStaff_HeavenMS() {
         addPerson("Ronan", "Developer");
         addPerson("Vcoc", "Freelance Developer");
         addPerson("Thora", "Contributor");
+        addPerson("GabrielSin", "Contributor");
         
         setHistory(2015, 2018);
 }
diff --git a/sql/db_database.sql b/sql/db_database.sql
index 589c9cf17..05a51d72d 100644
--- a/sql/db_database.sql
+++ b/sql/db_database.sql
@@ -16,7 +16,6 @@ CREATE TABLE IF NOT EXISTS `accounts` (
   `id` int(11) NOT NULL AUTO_INCREMENT,
   `name` varchar(13) NOT NULL DEFAULT '',
   `password` varchar(128) NOT NULL DEFAULT '',
-  `salt` varchar(128) DEFAULT NULL,
   `pin` varchar(10) DEFAULT NULL,
   `pic` varchar(26) DEFAULT NULL,
   `loggedin` tinyint(4) NOT NULL DEFAULT '0',
@@ -4517,7 +4516,7 @@ INSERT IGNORE INTO `temp_data` (`id`, `dropperid`, `itemid`, `minimum_quantity`,
 (4298, 5130107, 4130006, 1, 1, 0, 6000),
 (4299, 5130107, 4130011, 1, 1, 0, 6000),
 (4300, 5130108, 4000069, 1, 1, 0, 600000),
-(4301, 5130108, 4000082, 1, 1, 0, 40000),
+(4301, 5130108, 4000082, 1, 1, 0, 20000),
 (4302, 5130108, 2000003, 1, 1, 0, 20000),
 (4303, 5130108, 2000004, 1, 1, 0, 20000),
 (4304, 5130108, 2000002, 1, 1, 0, 20000),
@@ -12926,15 +12925,6 @@ CREATE TABLE IF NOT EXISTS `hiredmerchant` (
   PRIMARY KEY (`id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;
 
-CREATE TABLE IF NOT EXISTS `htsquads` (
-  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
-  `channel` int(10) unsigned NOT NULL,
-  `leaderid` int(10) unsigned NOT NULL DEFAULT '0',
-  `status` int(10) unsigned NOT NULL DEFAULT '0',
-  `members` int(10) unsigned NOT NULL DEFAULT '0',
-  PRIMARY KEY (`id`)
-) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;
-
 CREATE TABLE IF NOT EXISTS `hwidaccounts` (
   `accountid` int(11) NOT NULL DEFAULT '0',
   `hwid` varchar(40) NOT NULL DEFAULT '',
@@ -16393,13 +16383,21 @@ CREATE TABLE IF NOT EXISTS `notes` (
 ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;
 
 CREATE TABLE IF NOT EXISTS `nxcode` (
-  `code` varchar(15) NOT NULL,
-  `valid` int(11) NOT NULL DEFAULT '1',
-  `user` varchar(13) DEFAULT NULL,
-  `type` int(11) NOT NULL DEFAULT '0',
-  `item` int(11) NOT NULL DEFAULT '10000',
-  PRIMARY KEY (`code`)
-) ENGINE=InnoDB DEFAULT CHARSET=latin1;
+  `id` int(11) NOT NULL AUTO_INCREMENT,
+  `code` varchar(17) NOT NULL UNIQUE,
+  `retriever` varchar(13) DEFAULT NULL,
+  `expiration` bigint(20) unsigned NOT NULL DEFAULT '0',
+  PRIMARY KEY (`id`)
+) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;
+
+CREATE TABLE IF NOT EXISTS `nxcode_items` (
+  `id` int(11) NOT NULL AUTO_INCREMENT,
+  `codeid` int(11) NOT NULL,
+  `type` int(11) NOT NULL DEFAULT '5',
+  `item` int(11) NOT NULL DEFAULT '4000000',
+  `quantity` int(11) NOT NULL DEFAULT '1',
+  PRIMARY KEY (`id`)
+) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;
 
 CREATE TABLE IF NOT EXISTS `nxcoupons` (
   `id` int(11) NOT NULL AUTO_INCREMENT,
@@ -21414,15 +21412,6 @@ CREATE TABLE IF NOT EXISTS `wishlists` (
   PRIMARY KEY (`id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;
 
-CREATE TABLE IF NOT EXISTS `zaksquads` (
-  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
-  `channel` int(10) unsigned NOT NULL,
-  `leaderid` int(10) unsigned NOT NULL DEFAULT '0',
-  `status` int(10) unsigned NOT NULL DEFAULT '0',
-  `members` int(10) unsigned NOT NULL DEFAULT '0',
-  PRIMARY KEY (`id`)
-) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;
-
 
 ALTER TABLE `dueyitems`
   ADD CONSTRAINT `dueyitems_ibfk_1` FOREIGN KEY (`PackageId`) REFERENCES `dueypackages` (`PackageId`) ON DELETE CASCADE;
diff --git a/sql/db_drops.sql b/sql/db_drops.sql
index f46dbf5ae..9bbc61ad1 100644
--- a/sql/db_drops.sql
+++ b/sql/db_drops.sql
@@ -412,9 +412,9 @@ USE `heavenms`;
 (1210102, 4030001, 1, 1, 0, 10000), 
 (9300229, 4030001, 1, 1, 0, 10000), 
 (9500102, 4030001, 1, 1, 0, 10000),
-(1210102, 4001345, 1, 1, 0, 7000), 
-(9300229, 4001345, 1, 1, 0, 7000), 
-(9500102, 4001345, 1, 1, 0, 7000), 
+(1210102, 4001345, 1, 1, 0, 70000), 
+(9300229, 4001345, 1, 1, 0, 70000), 
+(9500102, 4001345, 1, 1, 0, 70000), 
 (1210102, 2000000, 1, 1, 0, 40000),
 (9300229, 2000000, 1, 1, 0, 40000), 
 (9500102, 2000000, 1, 1, 0, 40000), 
@@ -508,18 +508,18 @@ USE `heavenms`;
 (1210101, 4000021, 1, 1, 0, 200000), 
 (9300059, 4000021, 1, 1, 0, 200000), 
 (9400242, 4000021, 1, 1, 0, 200000), 
-(1210101, 4003004, 1, 1, 0, 7000), 
-(9300059, 4003004, 1, 1, 0, 7000), 
-(9400242, 4003004, 1, 1, 0, 7000), 
+(1210101, 4003004, 1, 1, 0, 70000), 
+(9300059, 4003004, 1, 1, 0, 70000), 
+(9400242, 4003004, 1, 1, 0, 70000), 
 (1210101, 4030012, 1, 1, 0, 125000), 
 (9300059, 4030012, 1, 1, 0, 125000), 
 (9400242, 4030012, 1, 1, 0, 125000), 
-(1210101, 4001343, 1, 1, 0, 7000), 
-(9300059, 4001343, 1, 1, 0, 7000), 
-(9400242, 4001343, 1, 1, 0, 7000), 
-(1210101, 4001342, 1, 1, 0, 7000), 
-(9300059, 4001342, 1, 1, 0, 7000), 
-(9400242, 4001342, 1, 1, 0, 7000), 
+(1210101, 4001343, 1, 1, 0, 70000), 
+(9300059, 4001343, 1, 1, 0, 70000), 
+(9400242, 4001343, 1, 1, 0, 70000), 
+(1210101, 4001342, 1, 1, 0, 70000), 
+(9300059, 4001342, 1, 1, 0, 70000), 
+(9400242, 4001342, 1, 1, 0, 70000), 
 (1210101, 2000000, 1, 1, 0, 40000), 
 (9300059, 2000000, 1, 1, 0, 40000), 
 (9400242, 2000000, 1, 1, 0, 40000), 
@@ -566,9 +566,9 @@ USE `heavenms`;
 (9300059, 1072285, 1, 1, 0, 700), 
 (9400242, 1072285, 1, 1, 0, 700), 
 (1110101, 4030009, 1, 1, 0, 28000), 
-(1110101, 4001344, 1, 1, 0, 7000), 
-(1110101, 4001356, 1, 1, 0, 7000), 
-(1110101, 4001360, 1, 1, 0, 12000), 
+(1110101, 4001344, 1, 1, 0, 70000), 
+(1110101, 4001356, 1, 1, 0, 70000), 
+(1110101, 4001360, 1, 1, 0, 120000), 
 (1110101, 2000000, 1, 1, 0, 40000), 
 (1110101, 2040802, 1, 1, 0, 750), 
 (1110101, 2380008, 1, 1, 0, 0), 
@@ -4654,7 +4654,7 @@ USE `heavenms`;
 (9300186, 1082195, 1, 1, 0, 40000), 
 (9500339, 1082195, 1, 1, 0, 40000), 
 (9303003, 1082195, 1, 1, 0, 700), 
-(3300008, 4001318, 1, 1, 0, 7000), 
+(3300008, 4001318, 1, 1, 0, 600000), 
 (3300008, 2388070, 1, 4, 0, 20000), 
 (3300008, 2000002, 1, 4, 0, 40000), 
 (3300008, 2000003, 1, 4, 0, 40000), 
@@ -16180,8 +16180,8 @@ USE `heavenms`;
 (9420513, 1060106, 1, 1, 0, 40000), 
 (9420513, 1072173, 1, 1, 0, 40000),
 (9420513, 1332026, 1, 1, 0, 40000), 
-(9400549, 4031903, 1, 1, 0, 7000), 
-(9400571, 4031903, 1, 1, 0, 7000), 
+(9400549, 4031903, 1, 1, 0, 100000), 
+(9400571, 4031903, 1, 1, 0, 100000), 
 (9400549, 2020014, 1, 4, 0, 3000), 
 (9400571, 2020014, 1, 4, 0, 3000),
 (9400549, 2002025, 1, 4, 0, 10000), 
@@ -20007,29 +20007,29 @@ USE `heavenms`;
 (9300154, 4031782, 1, 1, 0, 400000),
 (9300154, 4031783, 1, 1, 0, 400000),
 (9300154, 4031784, 1, 1, 0, 400000),
-(1110100, 4032317, 1, 1, 21717, 20000),
-(1110130, 4032317, 1, 1, 21717, 20000),
-(1110100, 4032318, 1, 1, 21718, 20000),
-(1110130, 4032318, 1, 1, 21718, 20000),
+(1110100, 4032317, 1, 1, 21717, 40000),
+(1110130, 4032317, 1, 1, 21717, 40000),
+(1110100, 4032318, 1, 1, 21718, 40000),
+(1110130, 4032318, 1, 1, 21718, 40000),
 (9400204, 4130020, 1, 1, 0, 3000),
-(9400614, 4001341, 1, 1, 28172, 15000),
-(9400615, 4001341, 1, 1, 28172, 15000),
-(9400616, 4001341, 1, 1, 28172, 15000),
-(1110101, 4001347, 1, 1, 28229, 80000),
-(1110100, 4001348, 1, 1, 28231, 400000),
-(1120100, 4001349, 1, 1, 28235, 100000),
-(1210101, 4001350, 1, 1, 28235, 100000),
-(2220100, 4001351, 1, 1, 28237, 100000),
-(9400614, 4001352, 1, 1, 28205, 40000),
-(9400615, 4001352, 1, 1, 28205, 40000),
-(9400616, 4001352, 1, 1, 28205, 40000),
-(9400617, 4001352, 1, 1, 28205, 40000),
-(9400617, 4001362, 1, 1, 28252, 40000),
-(9400655, 4001362, 1, 1, 28252, 40000),
-(9400656, 4001362, 1, 1, 28252, 40000),
-(9400617, 4001363, 1, 1, 28252, 40000),
-(9400655, 4001363, 1, 1, 28252, 40000),
-(9400656, 4001363, 1, 1, 28252, 40000),
+(9400614, 4001341, 1, 1, 28172, 30000),
+(9400615, 4001341, 1, 1, 28172, 30000),
+(9400616, 4001341, 1, 1, 28172, 30000),
+(1110101, 4001347, 1, 1, 28229, 160000),
+(1110100, 4001348, 1, 1, 28231, 800000),
+(1120100, 4001349, 1, 1, 28235, 200000),
+(1210101, 4001350, 1, 1, 28235, 200000),
+(2220100, 4001351, 1, 1, 28237, 200000),
+(9400614, 4001352, 1, 1, 28205, 80000),
+(9400615, 4001352, 1, 1, 28205, 80000),
+(9400616, 4001352, 1, 1, 28205, 80000),
+(9400617, 4001352, 1, 1, 28205, 80000),
+(9400617, 4001362, 1, 1, 28252, 80000),
+(9400655, 4001362, 1, 1, 28252, 80000),
+(9400656, 4001362, 1, 1, 28252, 80000),
+(9400617, 4001363, 1, 1, 28252, 80000),
+(9400655, 4001363, 1, 1, 28252, 80000),
+(9400656, 4001363, 1, 1, 28252, 80000),
 (9400609, 2000002, 1, 1, 0, 40000),
 (9400609, 2000003, 1, 1, 0, 40000),
 (9400609, 2000004, 1, 1, 0, 10000),
@@ -20077,17 +20077,17 @@ USE `heavenms`;
 (9400613, 1082258, 1, 1, 0, 5000),
 (9400613, 1072421, 1, 1, 0, 5000),
 (4110302, 2383007, 1, 1, 0, 8000),
-(130100, 4032374, 1, 1, 2405, 40000),
-(1110101, 4032374, 1, 1, 2405, 40000),
-(210100, 4032376, 1, 1, 2406, 40000),
-(1110101, 4032376, 1, 1, 2406, 40000),
-(210100, 4032377, 1, 1, 2407, 40000),
-(1210101, 4032377, 1, 1, 2407, 40000),
-(130100, 4032378, 1, 1, 2408, 40000),
-(1120100, 4032378, 1, 1, 2408, 40000),
-(1110100, 4032379, 1, 1, 2409, 40000),
-(1210100, 4032379, 1, 1, 2409, 40000),
-(2130100, 4001344, 1, 1, 0, 7000),
+(130100, 4032374, 1, 1, 2405, 80000),
+(1110101, 4032374, 1, 1, 2405, 80000),
+(210100, 4032376, 1, 1, 2406, 80000),
+(1110101, 4032376, 1, 1, 2406, 80000),
+(210100, 4032377, 1, 1, 2407, 80000),
+(1210101, 4032377, 1, 1, 2407, 80000),
+(130100, 4032378, 1, 1, 2408, 80000),
+(1120100, 4032378, 1, 1, 2408, 80000),
+(1110100, 4032379, 1, 1, 2409, 80000),
+(1210100, 4032379, 1, 1, 2409, 80000),
+(2130100, 4001344, 1, 1, 0, 70000),
 (7220002, 4031789, 1, 1, 3844, 999999),
 (8830007, 1302112, 1, 1, 0, 4000),
 (8830007, 1302113, 1, 1, 0, 4000),
diff --git a/src/client/AbstractMapleCharacterObject.java b/src/client/AbstractMapleCharacterObject.java
index a7a422391..e1c999c74 100644
--- a/src/client/AbstractMapleCharacterObject.java
+++ b/src/client/AbstractMapleCharacterObject.java
@@ -42,6 +42,7 @@
     protected int hpMpApUsed, remainingAp;
     protected int[] remainingSp = new int[10];
     protected transient int clientmaxhp, clientmaxmp, localmaxhp = 50, localmaxmp = 5;
+    protected float transienthp = Float.NEGATIVE_INFINITY, transientmp = Float.NEGATIVE_INFINITY;
     
     private AbstractCharacterListener listener = null;
     protected Map<MapleStat, Integer> statUpdates = new HashMap<>();
@@ -222,6 +223,8 @@ protected void setHp(int newHp) {
         } else if (thp > localmaxhp) {
             thp = localmaxhp;
         }
+        
+        if (this.hp != thp) this.transienthp = Float.NEGATIVE_INFINITY;
         this.hp = thp;
         
         dispatchHpChanged(oldHp);
@@ -234,6 +237,8 @@ protected void setMp(int newMp) {
         } else if (tmp > localmaxmp) {
             tmp = localmaxmp;
         }
+        
+        if (this.mp != tmp) this.transientmp = Float.NEGATIVE_INFINITY;
         this.mp = tmp;
     }
     
@@ -246,11 +251,13 @@ private void setRemainingSp(int remainingSp, int skillbook) {
     }
     
     protected void setMaxHp(int hp_) {
+        if (this.maxhp < hp_) this.transienthp = Float.NEGATIVE_INFINITY;
         this.maxhp = hp_;
         this.clientmaxhp = Math.min(30000, hp_);
     }
     
     protected void setMaxMp(int mp_) {
+        if (this.maxmp < mp_) this.transientmp = Float.NEGATIVE_INFINITY;
         this.maxmp = mp_;
         this.clientmaxmp = Math.min(30000, mp_);
     }
diff --git a/src/client/MapleCharacter.java b/src/client/MapleCharacter.java
index ef7ad023e..83cf9af07 100644
--- a/src/client/MapleCharacter.java
+++ b/src/client/MapleCharacter.java
@@ -118,6 +118,7 @@
 import client.inventory.MapleWeaponType;
 import client.inventory.ModifyInventory;
 import client.inventory.PetDataFactory;
+import client.inventory.manipulator.MapleCashidGenerator;
 import client.inventory.manipulator.MapleInventoryManipulator;
 import client.newyear.NewYearCardRecord;
 import constants.ExpTable;
@@ -945,7 +946,7 @@ public void changeCI(int type) {
     public void setMasteries(int jobId) {
         int[] skills = new int[4];
         for (int i = 0; i > skills.length; i++) {
-        	skills[i] = 0; //that initialization meng
+            skills[i] = 0; //that initialization meng
         }
         if (jobId == 112) {
             skills[0] = Hero.ACHILLES;
@@ -1002,11 +1003,11 @@ public void setMasteries(int jobId) {
             skills[1] = Aran.HIGH_MASTERY;
             skills[2] = Aran.FREEZE_STANDING;
         } else if (jobId == 2217) {
-        	skills[0] = Evan.MAPLE_WARRIOR;
-        	skills[1] = Evan.ILLUSION;
+            skills[0] = Evan.MAPLE_WARRIOR;
+            skills[1] = Evan.ILLUSION;
         } else if (jobId == 2218) {
-        	skills[0] = Evan.BLESSING_OF_THE_ONYX;
-        	skills[1] = Evan.BLAZE;
+            skills[0] = Evan.BLESSING_OF_THE_ONYX;
+            skills[1] = Evan.BLAZE;
         }
         for (Integer skillId : skills) {
             if (skillId != 0) {
@@ -1341,12 +1342,11 @@ public void forceChangeMap(final MapleMap target, final MaplePortal pto) {
     }
     
     private boolean buffMapProtection() {
-        effLock.lock();
-        chrLock.lock();
-        
         int thisMapid = mapid;
         int returnMapid = client.getChannelServer().getMapFactory().getMap(thisMapid).getReturnMapId();
         
+        effLock.lock();
+        chrLock.lock();
         try {
             for(Entry<MapleBuffStat, MapleBuffStatValueHolder> mbs : effects.entrySet()) {
                 if(mbs.getKey() == MapleBuffStat.MAP_PROTECTION) {
@@ -1884,7 +1884,7 @@ public boolean canHold(int itemid, int quantity) {
             if(hold + quantity <= ii.getSlotMax(client, itemid))
                 return true;
         }
-
+        
         return getInventory(ItemConstants.getInventoryType(itemid)).getNextFreeSlot() > -1;
     }
 
@@ -1903,7 +1903,7 @@ public void decreaseBattleshipHp(int decrease) {
             Skill battleship = SkillFactory.getSkill(Corsair.BATTLE_SHIP);
             int cooldown = battleship.getEffect(getSkillLevel(battleship)).getCooldown();
             announce(MaplePacketCreator.skillCooldown(Corsair.BATTLE_SHIP, cooldown));
-            addCooldown(Corsair.BATTLE_SHIP, System.currentTimeMillis(), (long)(cooldown * 1000));
+            addCooldown(Corsair.BATTLE_SHIP, Server.getInstance().getCurrentTime(), (long)(cooldown * 1000));
             removeCooldown(5221999);
             cancelEffectFromBuffStat(MapleBuffStat.MONSTER_RIDING);
         } else {
@@ -2080,6 +2080,8 @@ public static boolean deleteCharFromDB(MapleCharacter player, int senderAccId) {
                                                                                     ps3.setInt(1, ringid);
                                                                                     ps3.executeUpdate();
                                                                             }
+                                                                            
+                                                                            MapleCashidGenerator.freeCashId(ringid);
                                                                     }
                                                             }
                                                     }
@@ -2090,11 +2092,13 @@ public static boolean deleteCharFromDB(MapleCharacter player, int senderAccId) {
                                                     ps2.executeUpdate();
                                             }
                                             
-                                            if(rs.getInt("petid") > -1) {
+                                            int petid = rs.getInt("petid");
+                                            if(petid > -1) {
                                                     try (PreparedStatement ps2 = con.prepareStatement("DELETE FROM pets WHERE petid = ?")) {
-                                                            ps2.setInt(1, rs.getInt("petid"));
+                                                            ps2.setInt(1, petid);
                                                             ps2.executeUpdate();
                                                     }
+                                                    MapleCashidGenerator.freeCashId(petid);
                                             }
                                     }
                             }
@@ -2453,6 +2457,10 @@ public void giveDebuff(final MapleDisease disease, MobSkill skill) {
                 chrLock.unlock();
             }
             
+            if (disease == MapleDisease.SEDUCE && chair.get() != 0) {
+                sitChair(0);
+            }
+            
             final List<Pair<MapleDisease, Integer>> debuff = Collections.singletonList(new Pair<>(disease, Integer.valueOf(skill.getX())));
             client.announce(MaplePacketCreator.giveDebuff(debuff, skill));
             
@@ -2550,7 +2558,7 @@ private void startHpDecreaseTask(long lastHpTask) {
             public void run() {
                 doHurtHp();
             }
-        }, 10000, 10000 - lastHpTask);
+        }, ServerConstants.MAP_DAMAGE_OVERTIME_INTERVAL, ServerConstants.MAP_DAMAGE_OVERTIME_INTERVAL - lastHpTask);
     }
     
     public void resetHpDecreaseTask() {
@@ -2559,7 +2567,7 @@ public void resetHpDecreaseTask() {
         }
         
         long lastHpTask = Server.getInstance().getCurrentTime() - lastHpDec;
-        startHpDecreaseTask((lastHpTask > 10000) ? 10000 : lastHpTask);
+        startHpDecreaseTask((lastHpTask > ServerConstants.MAP_DAMAGE_OVERTIME_INTERVAL) ? ServerConstants.MAP_DAMAGE_OVERTIME_INTERVAL : lastHpTask);
     }
     
     public void dropMessage(String message) {
@@ -2682,7 +2690,7 @@ public void run() {
                         effLock.unlock();
                     }
                     
-                    long curTime = System.currentTimeMillis();
+                    long curTime = Server.getInstance().getCurrentTime();
                     for(Entry<Integer, MapleCoolDownValueHolder> bel : es) {
                         MapleCoolDownValueHolder mcdvh = bel.getValue();
                         if(curTime >= mcdvh.startTime + mcdvh.length) {
@@ -5247,8 +5255,9 @@ public void giveCoolDowns(final int skillid, long starttime, long length) {
             this.battleshipHp = (int) length;
             addCooldown(skillid, 0, length);
         } else {
-            int time = (int) ((length + starttime) - System.currentTimeMillis());
-            addCooldown(skillid, System.currentTimeMillis(), time);
+            long timeNow = Server.getInstance().getCurrentTime();
+            int time = (int) ((length + starttime) - timeNow);
+            addCooldown(skillid, timeNow, time);
         }
     }
     
@@ -5433,9 +5442,43 @@ private int getBuybackFee() {
         int grade = Math.min(Math.max(level, 30), 120) - 30;
         
         fee += (grade * ServerConstants.BUYBACK_LEVEL_STACK_FEE);
+        if (ServerConstants.USE_BUYBACK_WITH_MESOS) fee *= ServerConstants.BUYBACK_MESO_MULTIPLIER;
+        
         return (int) Math.floor(fee);
     }
     
+    public void showBuybackInfo() {
+        String s = "#eBUYBACK STATUS#n\r\n\r\nCurrent buyback fee: #b" + getBuybackFee() + " " + (ServerConstants.USE_BUYBACK_WITH_MESOS ? "mesos" : "NX") + "#k\r\n\r\n";
+        
+        long timeNow = Server.getInstance().getCurrentTime();
+        boolean avail = true;
+        if (!isAlive()) {
+            long timeLapsed = timeNow - lastDeathtime;
+            long timeRemaining = ServerConstants.BUYBACK_RETURN_MINUTES * 60 * 1000 - (timeLapsed + Math.max(0, getNextBuybackTime() - timeNow));
+            if (timeRemaining < 1) {
+                s += "Buyback #e#rUNAVAILABLE#k#n";
+                avail = false;
+            } else {
+                s += "Buyback countdown: #e#b" + getTimeRemaining(ServerConstants.BUYBACK_RETURN_MINUTES * 60 * 1000 - timeLapsed) + "#k#n";
+            }
+            s += "\r\n";
+        }
+        
+        if (timeNow < getNextBuybackTime() && avail) {
+            s += "Buyback available in #r" + getTimeRemaining(getNextBuybackTime() - timeNow) + "#k";
+            s += "\r\n";
+        }
+        
+        this.showHint(s);
+    }
+    
+    private static String getTimeRemaining(long timeLeft) {
+        int seconds = (int) Math.floor(timeLeft / 1000) % 60;
+        int minutes = (int) Math.floor(timeLeft / (1000*60)) % 60;
+        
+        return (minutes > 0 ? (String.format("%02d", minutes) + " minutes, ") : "") + String.format("%02d", seconds) + " seconds";
+    }
+    
     public boolean couldBuyback() {  // Ronan's buyback system
         long timeNow = Server.getInstance().getCurrentTime();
         
@@ -5447,16 +5490,12 @@ public boolean couldBuyback() {  // Ronan's buyback system
         long nextBuybacktime = getNextBuybackTime();
         if (timeNow < nextBuybacktime) {
             long timeLeft = nextBuybacktime - timeNow;
-            int seconds = (int) Math.floor(timeLeft / 1000) % 60;
-            int minutes = (int) Math.floor(timeLeft / (1000*60)) % 60;
-            
-            this.dropMessage(5, "Next buyback available in " + (minutes > 0 ? (String.format("%02d", minutes) + " minutes, ") : "") + String.format("%02d", seconds) + " seconds.");
+            this.dropMessage(5, "Next buyback available in " + getTimeRemaining(timeLeft) + ".");
             return false;
         }
         
         boolean usingMesos = ServerConstants.USE_BUYBACK_WITH_MESOS;
         int fee = getBuybackFee();
-        if (usingMesos) fee *= ServerConstants.BUYBACK_MESO_MULTIPLIER;
         
         if (!canBuyback(fee, usingMesos)) {
             this.dropMessage(5, "You don't have " + fee + " " + (usingMesos ? "mesos" : "NX") + " to buyback.");
@@ -5528,7 +5567,7 @@ public boolean isGuildLeader() {    // true on guild master or jr. master
     public void leaveMap() {
         controlled.clear();
         visibleMapObjects.clear();
-        chair.set(0);
+        setChair(0);
         if (hpDecreaseTask != null) {
             hpDecreaseTask.cancel(false);
         }
@@ -5710,7 +5749,7 @@ public void run() {
         if (ServerConstants.USE_PERFECT_PITCH && level >= 30) {
             //milestones?
             if (MapleInventoryManipulator.checkSpace(client, 4310000, (short) 1, "")) {
-                MapleInventoryManipulator.addById(client, 4310000, (short) 1);
+                MapleInventoryManipulator.addById(client, 4310000, (short) 1, "", -1);
             }
         } else if (level == 10) {
             Runnable r = new Runnable() {
@@ -6452,7 +6491,7 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool
                 ps = con.prepareStatement("SELECT SkillID,StartTime,length FROM cooldowns WHERE charid = ?");
                 ps.setInt(1, ret.getId());
                 rs = ps.executeQuery();
-                long curTime = System.currentTimeMillis();
+                long curTime = Server.getInstance().getCurrentTime();
                 while (rs.next()) {
                     final int skillid = rs.getInt("SkillID");
                     final long length = rs.getLong("length"), startTime = rs.getLong("StartTime");
@@ -6534,7 +6573,7 @@ public static MapleCharacter loadCharFromDB(int charid, MapleClient client, bool
                 ret.storage = MapleStorage.loadOrCreateFromDB(ret.accountid, ret.world);
                 
                 int startHp = ret.hp, startMp = ret.mp;
-                ret.recalcLocalStats();
+                ret.reapplyLocalStats();
                 ret.changeHpMp(startHp, startMp, true);
                 //ret.resetBattleshipHp();
             }
@@ -6651,7 +6690,7 @@ public void mount(int id, int skillid) {
     private void playerDead() {
         cancelAllBuffs(false);
         dispelDebuffs();
-        lastDeathtime = System.currentTimeMillis();
+        lastDeathtime = Server.getInstance().getCurrentTime();
         
         EventInstanceManager eim = getEventInstance();
         if (eim != null) {
@@ -6702,12 +6741,51 @@ private void playerDead() {
             cancelEffectFromBuffStat(MapleBuffStat.MONSTER_RIDING);
         }
 
-        if (getChair() != 0) {
+        unsitChairInternal();
+        client.announce(MaplePacketCreator.enableActions());
+    }
+    
+    private void unsitChairInternal() {
+        if (chair.get() != 0) {
             setChair(0);
-            client.announce(MaplePacketCreator.cancelChair(-1));
-            getMap().broadcastMessage(this, MaplePacketCreator.showChair(getId(), 0), false);
+            if (unregisterChairBuff()) {
+                getMap().broadcastMessage(this, MaplePacketCreator.cancelForeignChairSkillEffect(this.getId()), false);
+            }
+
+            getMap().broadcastMessage(this, MaplePacketCreator.showChair(this.getId(), 0), false);
         }
-        client.announce(MaplePacketCreator.enableActions());
+
+        announce(MaplePacketCreator.cancelChair(-1));
+    }
+    
+    public void sitChair(int itemId) {
+        if (client.tryacquireClient()) {
+            try {
+                if (itemId >= 1000000) {    // sit on item chair
+                    if (chair.get() == 0) {
+                        setChair(itemId);
+                        getMap().broadcastMessage(this, MaplePacketCreator.showChair(this.getId(), itemId), false);
+                    }
+                    announce(MaplePacketCreator.enableActions());
+                } else if (itemId != 0) {    // sit on map chair
+                    if (chair.get() == 0) {
+                        setChair(itemId);
+                        if (registerChairBuff()) {
+                            getMap().broadcastMessage(this, MaplePacketCreator.giveForeignChairSkillEffect(this.getId()), false);
+                        }
+                        announce(MaplePacketCreator.cancelChair(itemId));
+                    }
+                } else {    // stand up
+                    unsitChairInternal();
+                }
+            } finally {
+                client.releaseClient();
+            }
+        }
+    }
+    
+    private void setChair(int chair) {
+        this.chair.set(chair);
     }
     
     public void respawn(int returnMap) {
@@ -6780,15 +6858,11 @@ private void recalcEquipStats() {
         localwatk += equipwatk;
     }
     
-    private List<Pair<MapleStat, Integer>> recalcLocalStats() {
+    private void reapplyLocalStats() {
         effLock.lock();
+        chrLock.lock();
         statWlock.lock();
         try {
-            List<Pair<MapleStat, Integer>> hpmpupdate = new ArrayList<>(2);
-            
-            int oldlocalmaxhp = localmaxhp;
-            int oldlocalmaxmp = localmaxmp;
-
             localmaxhp = getMaxHp();
             localmaxmp = getMaxMp();
             localdex = getDex();
@@ -6815,11 +6889,6 @@ private void recalcEquipStats() {
             localmaxhp = Math.min(30000, localmaxhp);
             localmaxmp = Math.min(30000, localmaxmp);
 
-            if (ServerConstants.USE_FIXED_RATIO_HPMP_UPDATE) {
-                if (localmaxhp != oldlocalmaxhp) hpmpupdate.add(calcHpRatioUpdate(localmaxhp, oldlocalmaxhp));
-                if (localmaxmp != oldlocalmaxmp) hpmpupdate.add(calcMpRatioUpdate(localmaxmp, oldlocalmaxmp));
-            }
-
             MapleStatEffect combo = getBuffEffect(MapleBuffStat.ARAN_COMBO);
             if (combo != null) {
                 localwatk += combo.getX();
@@ -6906,10 +6975,54 @@ private void recalcEquipStats() {
                 }
                 // Add throwing stars to dmg.
             }
+        } finally {
+            statWlock.unlock();
+            chrLock.unlock();
+            effLock.unlock();
+        }
+    }
+    
+    private List<Pair<MapleStat, Integer>> recalcLocalStats() {
+        effLock.lock();
+        chrLock.lock();
+        statWlock.lock();
+        try {
+            List<Pair<MapleStat, Integer>> hpmpupdate = new ArrayList<>(2);
+            int oldlocalmaxhp = localmaxhp;
+            int oldlocalmaxmp = localmaxmp;
+            
+            reapplyLocalStats();
+            
+            if (ServerConstants.USE_FIXED_RATIO_HPMP_UPDATE) {
+                if (localmaxhp != oldlocalmaxhp) {
+                    Pair<MapleStat, Integer> hpUpdate;
+
+                    if (transienthp == Float.NEGATIVE_INFINITY) {
+                        hpUpdate = calcHpRatioUpdate(localmaxhp, oldlocalmaxhp);
+                    } else {
+                        hpUpdate = calcHpRatioTransient();
+                    }
+
+                    hpmpupdate.add(hpUpdate);
+                }
+
+                if (localmaxmp != oldlocalmaxmp) {
+                    Pair<MapleStat, Integer> mpUpdate;
+
+                    if (transientmp == Float.NEGATIVE_INFINITY) {
+                        mpUpdate = calcMpRatioUpdate(localmaxmp, oldlocalmaxmp);
+                    } else {
+                        mpUpdate = calcMpRatioTransient();
+                    }
+
+                    hpmpupdate.add(mpUpdate);
+                }
+            }
 
             return hpmpupdate;
         } finally {
             statWlock.unlock();
+            chrLock.unlock();
             effLock.unlock();
         }
     }
@@ -7789,10 +7902,6 @@ public void setBuffedValue(MapleBuffStat effect, int value) {
         }
     }
 
-    public void setChair(int chair) {
-        this.chair.set(chair);
-    }
-
     public void setChalkboard(String text) {
         this.chalktext = text;
     }
@@ -7968,7 +8077,7 @@ private void hpChangeAction(int oldHp) {
     
     private Pair<MapleStat, Integer> calcHpRatioUpdate(int newHp, int oldHp) {
         int delta = newHp - oldHp;
-        this.hp = calcHpMpRatioUpdate(hp, oldHp, delta);
+        this.hp = calcHpRatioUpdate(hp, oldHp, delta);
         
         hpChangeAction(Short.MIN_VALUE);
         return new Pair<>(MapleStat.HP, hp);
@@ -7976,19 +8085,47 @@ private void hpChangeAction(int oldHp) {
     
     private Pair<MapleStat, Integer> calcMpRatioUpdate(int newMp, int oldMp) {
         int delta = newMp - oldMp;
-        this.mp = calcHpMpRatioUpdate(mp, oldMp, delta);
+        this.mp = calcMpRatioUpdate(mp, oldMp, delta);
         return new Pair<>(MapleStat.MP, mp);
     }
     
-    private static int calcHpMpRatioUpdate(int curpoint, int maxpoint, int diffpoint) {
+    private static int calcTransientRatio(float transientpoint) {
+        int ret = (int) transientpoint;
+        return !(ret <= 0 && transientpoint > 0.0f) ? ret : 1;
+    }
+    
+    private Pair<MapleStat, Integer> calcHpRatioTransient() {
+        this.hp = calcTransientRatio(transienthp * localmaxhp);
+        
+        hpChangeAction(Short.MIN_VALUE);
+        return new Pair<>(MapleStat.HP, hp);
+    }
+    
+    private Pair<MapleStat, Integer> calcMpRatioTransient() {
+        this.mp = calcTransientRatio(transientmp * localmaxmp);
+        return new Pair<>(MapleStat.MP, mp);
+    }
+    
+    private int calcHpRatioUpdate(int curpoint, int maxpoint, int diffpoint) {
         int curMax = maxpoint;
         int nextMax = Math.min(30000, maxpoint + diffpoint);
         
         float temp = curpoint * nextMax;
-        int ret = (int) Math.round(temp / curMax);
+        int ret = (int) Math.ceil(temp / curMax);
         
-        //System.out.println("cur: " + curpoint + " next: " + ret + " max: " + curMax + " nextmax:" + nextMax + " diff: " + diffpoint);
-        return !(ret <= 0 && curpoint > 0) ? ret : 1;
+        transienthp = (maxpoint > nextMax) ? ((float) curpoint) / maxpoint : ((float) ret) / nextMax;
+        return ret;
+    }
+    
+    private int calcMpRatioUpdate(int curpoint, int maxpoint, int diffpoint) {
+        int curMax = maxpoint;
+        int nextMax = Math.min(30000, maxpoint + diffpoint);
+        
+        float temp = curpoint * nextMax;
+        int ret = (int) Math.ceil(temp / curMax);
+        
+        transientmp = (maxpoint > nextMax) ? ((float) curpoint) / maxpoint : ((float) ret) / nextMax;
+        return ret;
     }
     
     public boolean applyHpMpChange(int hpCon, int hpchange, int mpchange) {
@@ -8137,7 +8274,6 @@ public void setParty(MapleParty p) {
                 doorSlot = -1;
 
                 party = null;
-                //cancelMagicDoor();  // cancel magic doors if kicked out / quitted from party.
             } else {
                 party = p;
             }
@@ -9082,11 +9218,27 @@ private void unequipPendantOfSpirit() {
         }
         pendantExp = 0;
     }
+    
+    private Collection<Item> getUpgradeableEquipList() {
+        Collection<Item> fullList = getInventory(MapleInventoryType.EQUIPPED).list();
+        if (ServerConstants.USE_EQUIPMNT_LVLUP_CASH) {
+            return fullList;
+        }
+        
+        Collection<Item> eqpList = new LinkedHashSet<>();
+        for (Item it : fullList) {
+            if (!ii.isCash(it.getItemId())) {
+                eqpList.add(it);
+            }
+        }
 
+        return eqpList;
+    }
+    
     public void increaseEquipExp(int expGain) {
         if(expGain < 0) expGain = Integer.MAX_VALUE;
         
-        for (Item item : getInventory(MapleInventoryType.EQUIPPED).list()) {
+        for (Item item : getUpgradeableEquipList()) {
             Equip nEquip = (Equip) item;
             String itemName = ii.getName(nEquip.getItemId());
             if (itemName == null) {
diff --git a/src/client/MapleClient.java b/src/client/MapleClient.java
index 451e9a341..4e1ce4aae 100644
--- a/src/client/MapleClient.java
+++ b/src/client/MapleClient.java
@@ -41,6 +41,7 @@
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
+import java.util.concurrent.Semaphore;
 import java.util.concurrent.locks.Lock;
 
 import tools.*;
@@ -109,8 +110,10 @@
 	private String pic = null;
 	private String hwid = null;
 	private int picattempt = 0;
+        private byte csattempt = 0;
 	private byte gender = -1;
 	private boolean disconnecting = false;
+        private final Semaphore actionsSemaphore = new Semaphore(7);
 	private final Lock lock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT, true);
         private final Lock encoderLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_ENCODER, true);
         private static final Lock loginLock = MonitoredReentrantLockFactory.createLock(MonitoredLockType.CLIENT_LOGIN, true);
@@ -532,7 +535,6 @@ public int login(String login, String pwd, String nibbleHwid) {
 				gender = rs.getByte("gender");
 				characterSlots = rs.getByte("characterslots");
 				String passhash = rs.getString("password");
-				String salt = rs.getString("salt");
 				byte tos = rs.getByte("tos");
 
 				ps.close();
@@ -547,8 +549,9 @@ public int login(String login, String pwd, String nibbleHwid) {
 					loginok = 7;
 				} else if (passhash.charAt(0) == '$' && passhash.charAt(1) == '2' && BCrypt.checkpw(pwd, passhash)) {
 					loginok = (tos == 0) ? 23 : 0;
-				} else if (pwd.equals(passhash) || checkHash(passhash, "SHA-1", pwd) || checkHash(passhash, "SHA-512", pwd + salt)) {
-					loginok = (tos == 0) ? -23 : -10; // migrate to bcrypt
+				} else if (pwd.equals(passhash) || checkHash(passhash, "SHA-1", pwd) || checkHash(passhash, "SHA-512", pwd)) {
+                                        // thanks GabrielSin for detecting some no-bcrypt inconsistencies here
+					loginok = (tos == 0) ? (!ServerConstants.BCRYPT_MIGRATION ? 23 : -23) : (!ServerConstants.BCRYPT_MIGRATION ? 0 : -10); // migrate to bcrypt
 				} else {
 					loggedIn = false;
 					loginok = 4;
@@ -775,7 +778,7 @@ public int getLoginState() {  // 0 = LOGIN_NOTLOGGEDIN, 1= LOGIN_SERVER_TRANSITI
 			if (!rs.next()) {
 				rs.close();
 				ps.close();
-				throw new RuntimeException("getLoginState - MapleClient");
+				throw new RuntimeException("getLoginState - MapleClient AccID: " + getAccID());
 			}
                         
 			birthday = Calendar.getInstance();
@@ -1170,10 +1173,20 @@ public void unlockClient() {
                 lock.unlock();
 	}
         
-        public boolean trylockClient() {
-                return lock.tryLock();
+        public boolean tryacquireClient() {
+                if (actionsSemaphore.tryAcquire()) {
+                        lockClient();
+                        return true;
+                } else {
+                        return false;
+                }
 	}
         
+        public void releaseClient() {
+                unlockClient();
+                actionsSemaphore.release();
+        }
+        
         public void lockEncoder() {
                 encoderLock.lock();
 	}
@@ -1198,7 +1211,7 @@ private static boolean checkHash(String hash, String type, String password) {
 		try {
 			MessageDigest digester = MessageDigest.getInstance(type);
 			digester.update(password.getBytes("UTF-8"), 0, password.length());
-			return HexTool.toString(digester.digest()).replace(" ", "").toLowerCase().equals(hash);
+                        return HexTool.toString(digester.digest()).replace(" ", "").toLowerCase().equals(hash);
 		} catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {
 			throw new RuntimeException("Encoding the string failed", e);
 		}
@@ -1431,4 +1444,22 @@ public void closePlayerScriptInteractions() {
                 this.removeClickedNPC();
                 NPCScriptManager.getInstance().dispose(this);
         }
+        
+        public boolean attemptCsCoupon() {
+                if (csattempt > 2) {
+                        resetCsCoupon();
+                        return false;
+                }
+                
+                csattempt++;
+                return true;
+        }
+        
+        public void resetCsCoupon() {
+                csattempt = 0;
+        }
+        
+        public void enableCSActions() {
+                announce(MaplePacketCreator.enableCSUse(player));
+        }
 }
diff --git a/src/client/MapleRing.java b/src/client/MapleRing.java
index e05200fd6..53111f3fb 100644
--- a/src/client/MapleRing.java
+++ b/src/client/MapleRing.java
@@ -25,8 +25,9 @@
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.SQLException;
-import java.sql.Statement;
+import tools.Pair;
 import tools.DatabaseConnection;
+import client.inventory.manipulator.MapleCashidGenerator;
 
 /**
  *
@@ -86,6 +87,9 @@ public static void removeRing(final MapleRing ring) {
             ps.executeBatch();
             ps.close();
             
+            MapleCashidGenerator.freeCashId(ring.getRingId());
+            MapleCashidGenerator.freeCashId(ring.getPartnerRingId());
+            
             ps = con.prepareStatement("UPDATE inventoryequipment SET ringid=-1 WHERE ringid=?");
             ps.setInt(1, ring.getRingId());
             ps.addBatch();
@@ -102,46 +106,40 @@ public static void removeRing(final MapleRing ring) {
         }
     }
     
-    public static int createRing(int itemid, final MapleCharacter partner1, final MapleCharacter partner2) {
+    public static Pair<Integer, Integer> createRing(int itemid, final MapleCharacter partner1, final MapleCharacter partner2) {
         try {
             if (partner1 == null) {
-                return -2;
+                return new Pair<>(-3, -3);
             } else if (partner2 == null) {
-                return -1;
+                return new Pair<>(-2, -2);
             }
+            
             int[] ringID = new int[2];
+            ringID[0] = MapleCashidGenerator.generateCashId();
+            ringID[1] = MapleCashidGenerator.generateCashId();
+            
             Connection con = DatabaseConnection.getConnection();
-            PreparedStatement ps = con.prepareStatement("INSERT INTO rings (itemid, partnerChrId, partnername) VALUES (?, ?, ?)", Statement.RETURN_GENERATED_KEYS);
-            ps.setInt(1, itemid);
-            ps.setInt(2, partner2.getId());
-            ps.setString(3, partner2.getName());
-            ps.executeUpdate();
-            ResultSet rs = ps.getGeneratedKeys();
-            rs.next();
-            ringID[0] = rs.getInt(1); // ID.
-            rs.close();
-            ps.close();
-            ps = con.prepareStatement("INSERT INTO rings (itemid, partnerRingId, partnerChrId, partnername) VALUES (?, ?, ?, ?)", Statement.RETURN_GENERATED_KEYS);
-            ps.setInt(1, itemid);
-            ps.setInt(2, ringID[0]);
-            ps.setInt(3, partner1.getId());
-            ps.setString(4, partner1.getName());
+            PreparedStatement ps = con.prepareStatement("INSERT INTO rings (id, itemid, partnerRingId, partnerChrId, partnername) VALUES (?, ?, ?, ?, ?)");
+            ps.setInt(1, ringID[0]);
+            ps.setInt(2, itemid);
+            ps.setInt(3, ringID[1]);
+            ps.setInt(4, partner2.getId());
+            ps.setString(5, partner2.getName());
             ps.executeUpdate();
-            rs = ps.getGeneratedKeys();
-            rs.next();
-            ringID[1] = rs.getInt(1);
-            rs.close();
             ps.close();
-            ps = con.prepareStatement("UPDATE rings SET partnerRingId = ? WHERE id = ?");
+            ps = con.prepareStatement("INSERT INTO rings (id, itemid, partnerRingId, partnerChrId, partnername) VALUES (?, ?, ?, ?, ?)");
             ps.setInt(1, ringID[1]);
-            ps.setInt(2, ringID[0]);
+            ps.setInt(2, itemid);
+            ps.setInt(3, ringID[0]);
+            ps.setInt(4, partner1.getId());
+            ps.setString(5, partner1.getName());
             ps.executeUpdate();
             ps.close();
             con.close();
-            return ringID[0];
+            return new Pair<>(ringID[0], ringID[1]);
         } catch (SQLException ex) {
             ex.printStackTrace();
-            return -1;
+            return new Pair<>(-1, -1);
         }
     }
 
diff --git a/src/client/autoban/AutobanManager.java b/src/client/autoban/AutobanManager.java
index 83fc5dbd8..ac2791519 100644
--- a/src/client/autoban/AutobanManager.java
+++ b/src/client/autoban/AutobanManager.java
@@ -8,6 +8,7 @@
 import client.MapleCharacter;
 import java.util.HashMap;
 import java.util.Map;
+import net.server.Server;
 import tools.FilePrinter;
 
 /**
@@ -35,12 +36,12 @@ public void addPoint(AutobanFactory fac, String reason) {
     		return;
     	}
         if (lastTime.containsKey(fac)) {
-            if (lastTime.get(fac) < (System.currentTimeMillis() - fac.getExpire())) {
+            if (lastTime.get(fac) < (Server.getInstance().getCurrentTime() - fac.getExpire())) {
                 points.put(fac, points.get(fac) / 2); //So the points are not completely gone.
             }
         }
         if (fac.getExpire() != -1)
-            lastTime.put(fac, System.currentTimeMillis());
+            lastTime.put(fac, Server.getInstance().getCurrentTime());
         
         if (points.containsKey(fac)) {
             points.put(fac, points.get(fac) + 1);
@@ -76,7 +77,7 @@ else if (samemisscount > 0)
     
     //Don't use the same type for more than 1 thing
     public void spam(int type) {
-        this.spam[type] = System.currentTimeMillis();
+        this.spam[type] = Server.getInstance().getCurrentTime();
     }
     
     public void spam(int type, int timestamp) {
diff --git a/src/client/command/CommandsExecutor.java b/src/client/command/CommandsExecutor.java
index a40e14d7e..da78955c1 100644
--- a/src/client/command/CommandsExecutor.java
+++ b/src/client/command/CommandsExecutor.java
@@ -162,6 +162,7 @@ private void registerLv0Commands(){
         addCommand("droplimit", DropLimitCommand.class);
         addCommand("time", TimeCommand.class);
         addCommand("credits", StaffCommand.class);
+        addCommand("buyback", BuyBackCommand.class);
         addCommand("uptime", UptimeCommand.class);
         addCommand("gacha", GachaCommand.class);
         addCommand("dispose", DisposeCommand.class);
@@ -345,6 +346,7 @@ private void registerLv6Commands(){
         addCommand("shutdown", 6, ShutdownCommand.class);
         addCommand("clearquestcache", 6, ClearQuestCacheCommand.class);
         addCommand("clearquest", 6, ClearQuestCommand.class);
+        addCommand("supplyratecoupon", 6, SupplyRateCouponCommand.class);
         addCommand("spawnallpnpcs", 6, SpawnAllPNpcsCommand.class);
         addCommand("eraseallpnpcs", 6, EraseAllPNpcsCommand.class);
         addCommand("addchannel", 6, ServerAddChannelCommand.class);
diff --git a/src/client/command/commands/gm0/BuyBackCommand.java b/src/client/command/commands/gm0/BuyBackCommand.java
index 85ec0e9e0..8c6c9784b 100644
--- a/src/client/command/commands/gm0/BuyBackCommand.java
+++ b/src/client/command/commands/gm0/BuyBackCommand.java
@@ -30,6 +30,15 @@
 public class BuyBackCommand extends Command {
     @Override
     public void execute(MapleClient c, String[] params) {
-        BuybackProcessor.processBuyback(c);
+        if (params.length < 1) {
+            c.getPlayer().yellowMessage("Syntax: @buyback <info|now>");
+            return;
+        }
+        
+        if (params[0].contentEquals("now")) {
+            BuybackProcessor.processBuyback(c);
+        } else {
+            c.getPlayer().showBuybackInfo();
+        }
     }
 }
diff --git a/src/client/command/commands/gm0/StatDexCommand.java b/src/client/command/commands/gm0/StatDexCommand.java
index 3b14dc0b3..76b974f9e 100644
--- a/src/client/command/commands/gm0/StatDexCommand.java
+++ b/src/client/command/commands/gm0/StatDexCommand.java
@@ -39,7 +39,7 @@ public void execute(MapleClient c, String[] params) {
         int remainingAp = player.getRemainingAp();
 
         int amount = (params.length > 0) ? Math.min(Integer.parseInt(params[0]), remainingAp) : Math.min(remainingAp, ServerConstants.MAX_AP - player.getDex());
-        if (!player.assignDex(amount)) {
+        if (!player.assignDex(Math.max(amount, 0))) {
             player.dropMessage("Please make sure your AP is not over " + ServerConstants.MAX_AP + " and you have enough to distribute.");
         }
     }
diff --git a/src/client/command/commands/gm0/StatIntCommand.java b/src/client/command/commands/gm0/StatIntCommand.java
index 21a347d8f..02ab5b6f7 100644
--- a/src/client/command/commands/gm0/StatIntCommand.java
+++ b/src/client/command/commands/gm0/StatIntCommand.java
@@ -39,7 +39,7 @@ public void execute(MapleClient c, String[] params) {
         int remainingAp = player.getRemainingAp();
 
         int amount = (params.length > 0) ? Math.min(Integer.parseInt(params[0]), remainingAp) : Math.min(remainingAp, ServerConstants.MAX_AP - player.getInt());
-        if (!player.assignInt(amount)) {
+        if (!player.assignInt(Math.max(amount, 0))) {
             player.dropMessage("Please make sure your AP is not over " + ServerConstants.MAX_AP + " and you have enough to distribute.");
         }
     }
diff --git a/src/client/command/commands/gm0/StatLukCommand.java b/src/client/command/commands/gm0/StatLukCommand.java
index 03a41e034..f2a97c8bb 100644
--- a/src/client/command/commands/gm0/StatLukCommand.java
+++ b/src/client/command/commands/gm0/StatLukCommand.java
@@ -39,7 +39,7 @@ public void execute(MapleClient c, String[] params) {
         int remainingAp = player.getRemainingAp();
 
         int amount = (params.length > 0) ? Math.min(Integer.parseInt(params[0]), remainingAp) : Math.min(remainingAp, ServerConstants.MAX_AP - player.getLuk());
-        if (!player.assignLuk(amount)) {
+        if (!player.assignLuk(Math.max(amount, 0))) {
             player.dropMessage("Please make sure your AP is not over " + ServerConstants.MAX_AP + " and you have enough to distribute.");
         }
     }
diff --git a/src/client/command/commands/gm0/StatStrCommand.java b/src/client/command/commands/gm0/StatStrCommand.java
index ce288f27f..46bac383a 100644
--- a/src/client/command/commands/gm0/StatStrCommand.java
+++ b/src/client/command/commands/gm0/StatStrCommand.java
@@ -39,7 +39,7 @@ public void execute(MapleClient c, String[] params) {
         int remainingAp = player.getRemainingAp();
         int amount = (params.length > 0) ? Math.min(Integer.parseInt(params[0]), remainingAp) : Math.min(remainingAp, ServerConstants.MAX_AP - player.getStr());
         
-        if (!player.assignStr(amount)) {
+        if (!player.assignStr(Math.max(amount, 0))) {
             player.dropMessage("Please make sure your AP is not over " + ServerConstants.MAX_AP + " and you have enough to distribute.");
         }
     }
diff --git a/src/client/command/commands/gm1/WhoDropsCommand.java b/src/client/command/commands/gm1/WhoDropsCommand.java
index ff130495d..9d4a42800 100644
--- a/src/client/command/commands/gm1/WhoDropsCommand.java
+++ b/src/client/command/commands/gm1/WhoDropsCommand.java
@@ -49,40 +49,49 @@ public void execute(MapleClient c, String[] params) {
             player.dropMessage(5, "Please do @whodrops <item name>");
             return;
         }
-        String searchString = joinStringFrom(params, 0);
-        String output = "";
-        Iterator<Pair<Integer, String>> listIterator = MapleItemInformationProvider.getInstance().getItemDataByName(searchString).iterator();
-        if(listIterator.hasNext()) {
-            int count = 1;
-            while(listIterator.hasNext() && count <= 3) {
-                Pair<Integer, String> data = listIterator.next();
-                output += "#b" + data.getRight() + "#k is dropped by:\r\n";
-                try {
-                    Connection con = DatabaseConnection.getConnection();
-                    PreparedStatement ps = con.prepareStatement("SELECT dropperid FROM drop_data WHERE itemid = ? LIMIT 50");
-                    ps.setInt(1, data.getLeft());
-                    ResultSet rs = ps.executeQuery();
-                    while(rs.next()) {
-                        String resultName = MapleMonsterInformationProvider.getMobNameFromID(rs.getInt("dropperid"));
-                        if (resultName != null) {
-                            output += resultName + ", ";
+        
+        if (c.tryacquireClient()) {
+            try {
+                String searchString = joinStringFrom(params, 0);
+                String output = "";
+                Iterator<Pair<Integer, String>> listIterator = MapleItemInformationProvider.getInstance().getItemDataByName(searchString).iterator();
+                if(listIterator.hasNext()) {
+                    int count = 1;
+                    while(listIterator.hasNext() && count <= 3) {
+                        Pair<Integer, String> data = listIterator.next();
+                        output += "#b" + data.getRight() + "#k is dropped by:\r\n";
+                        try {
+                            Connection con = DatabaseConnection.getConnection();
+                            PreparedStatement ps = con.prepareStatement("SELECT dropperid FROM drop_data WHERE itemid = ? LIMIT 50");
+                            ps.setInt(1, data.getLeft());
+                            ResultSet rs = ps.executeQuery();
+                            while(rs.next()) {
+                                String resultName = MapleMonsterInformationProvider.getMobNameFromID(rs.getInt("dropperid"));
+                                if (resultName != null) {
+                                    output += resultName + ", ";
+                                }
+                            }
+                            rs.close();
+                            ps.close();
+                            con.close();
+                        } catch (Exception e) {
+                            player.dropMessage(6, "There was a problem retrieving the required data. Please try again.");
+                            e.printStackTrace();
+                            return;
                         }
+                        output += "\r\n\r\n";
+                        count++;
                     }
-                    rs.close();
-                    ps.close();
-                    con.close();
-                } catch (Exception e) {
-                    player.dropMessage(6, "There was a problem retrieving the required data. Please try again.");
-                    e.printStackTrace();
+                } else {
+                    player.dropMessage(5, "The item you searched for doesn't exist.");
                     return;
                 }
-                output += "\r\n\r\n";
-                count++;
+                c.announce(MaplePacketCreator.getNPCTalk(9010000, (byte) 0, output, "00 00", (byte) 0));
+            } finally {
+                c.releaseClient();
             }
         } else {
-            player.dropMessage(5, "The item you searched for doesn't exist.");
-            return;
+            player.dropMessage(5, "Please wait a while for your request to be processed.");
         }
-        c.announce(MaplePacketCreator.getNPCTalk(9010000, (byte) 0, output, "00 00", (byte) 0));
     }
 }
diff --git a/src/client/command/commands/gm2/ItemDropCommand.java b/src/client/command/commands/gm2/ItemDropCommand.java
index ac7552217..892a0cda7 100644
--- a/src/client/command/commands/gm2/ItemDropCommand.java
+++ b/src/client/command/commands/gm2/ItemDropCommand.java
@@ -92,7 +92,6 @@ public void execute(MapleClient c, String[] params) {
                 return;        
             }
         }
-
         
         Item toDrop;
         if (ItemConstants.getInventoryType(itemId) == MapleInventoryType.EQUIP) {
diff --git a/src/client/command/commands/gm2/SearchCommand.java b/src/client/command/commands/gm2/SearchCommand.java
index 4fa3d31e3..6873c8b4a 100644
--- a/src/client/command/commands/gm2/SearchCommand.java
+++ b/src/client/command/commands/gm2/SearchCommand.java
@@ -37,8 +37,19 @@
 import java.io.File;
 
 public class SearchCommand extends Command {
+    private static MapleData npcStringData;
+    private static MapleData mobStringData;
+    private static MapleData skillStringData;
+    private static MapleData mapStringData;
+    
     {
         setDescription("");
+        
+        MapleDataProvider dataProvider = MapleDataProviderFactory.getDataProvider(new File("wz/String.wz"));
+        npcStringData = dataProvider.getData("Npc.img");
+        mobStringData = dataProvider.getData("Mob.img");
+        skillStringData = dataProvider.getData("Skill.img");
+        mapStringData = dataProvider.getData("Map.img");
     }
 
     @Override
@@ -53,26 +64,43 @@ public void execute(MapleClient c, String[] params) {
         String search = joinStringFrom(params,1);
         long start = System.currentTimeMillis();//for the lulz
         MapleData data = null;
-        MapleDataProvider dataProvider = MapleDataProviderFactory.getDataProvider(new File("wz/String.wz"));
         if (!params[0].equalsIgnoreCase("ITEM")) {
+            boolean mapSearch = false;
+            
             if (params[0].equalsIgnoreCase("NPC")) {
-                data = dataProvider.getData("Npc.img");
+                data = npcStringData;
             } else if (params[0].equalsIgnoreCase("MOB") || params[0].equalsIgnoreCase("MONSTER")) {
-                data = dataProvider.getData("Mob.img");
+                data = mobStringData;
             } else if (params[0].equalsIgnoreCase("SKILL")) {
-                data = dataProvider.getData("Skill.img");
-                                /*} else if (sub[1].equalsIgnoreCase("MAP")) {
-                                        TODO
-                                */
+                data = skillStringData;
+            } else if (params[0].equalsIgnoreCase("MAP")) {
+                data = mapStringData;
+                mapSearch = true;
             } else {
-                sb.append("#bInvalid search.\r\nSyntax: '!search [type] [name]', where [type] is NPC, ITEM, MOB, or SKILL.");
+                sb.append("#bInvalid search.\r\nSyntax: '!search [type] [name]', where [type] is MAP, NPC, ITEM, MOB, or SKILL.");
             }
             if (data != null) {
                 String name;
-                for (MapleData searchData : data.getChildren()) {
-                    name = MapleDataTool.getString(searchData.getChildByPath("name"), "NO-NAME");
-                    if (name.toLowerCase().contains(search.toLowerCase())) {
-                        sb.append("#b").append(Integer.parseInt(searchData.getName())).append("#k - #r").append(name).append("\r\n");
+                
+                if (!mapSearch) {
+                    for (MapleData searchData : data.getChildren()) {
+                        name = MapleDataTool.getString(searchData.getChildByPath("name"), "NO-NAME");
+                        if (name.toLowerCase().contains(search.toLowerCase())) {
+                            sb.append("#b").append(Integer.parseInt(searchData.getName())).append("#k - #r").append(name).append("\r\n");
+                        }
+                    }
+                } else {
+                    String mapName, streetName;
+                    
+                    for (MapleData searchDataDir : data.getChildren()) {
+                        for (MapleData searchData : searchDataDir.getChildren()) {
+                            mapName = MapleDataTool.getString(searchData.getChildByPath("mapName"), "NO-NAME");
+                            streetName = MapleDataTool.getString(searchData.getChildByPath("streetName"), "NO-NAME");
+                            
+                            if (mapName.toLowerCase().contains(search.toLowerCase()) || streetName.toLowerCase().contains(search.toLowerCase())) {
+                                sb.append("#b").append(Integer.parseInt(searchData.getName())).append("#k - #r").append(streetName).append(" - ").append(mapName).append("\r\n");
+                            }
+                        }
                     }
                 }
             }
diff --git a/src/client/command/commands/gm6/FredCommand.java b/src/client/command/commands/gm6/SupplyRateCouponCommand.java
similarity index 68%
rename from src/client/command/commands/gm6/FredCommand.java
rename to src/client/command/commands/gm6/SupplyRateCouponCommand.java
index 8e6722fac..17a4defba 100644
--- a/src/client/command/commands/gm6/FredCommand.java
+++ b/src/client/command/commands/gm6/SupplyRateCouponCommand.java
@@ -17,25 +17,27 @@
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
-
-/*
-   @Author: Arthur L - Refactored command content into modules
-*/
 package client.command.commands.gm6;
 
-import client.command.Command;
-import client.MapleClient;
 import client.MapleCharacter;
-import tools.MaplePacketCreator;
+import client.MapleClient;
+import client.command.Command;
+import constants.ServerConstants;
 
-public class FredCommand extends Command {
+public class SupplyRateCouponCommand extends Command {
     {
         setDescription("");
     }
 
     @Override
     public void execute(MapleClient c, String[] params) {
-        c.announce(MaplePacketCreator.fredrickMessage(Byte.valueOf(params[0])));
-
+        MapleCharacter player = c.getPlayer();
+        if (params.length < 1) {
+            player.dropMessage(5, "Syntax: !supplyratecoupon <yes|no>");
+            return;
+        }
+        
+        ServerConstants.USE_SUPPLY_RATE_COUPONS = params[0].compareToIgnoreCase("no") != 0;
+        player.dropMessage(5, "Rate coupons are now " + (ServerConstants.USE_SUPPLY_RATE_COUPONS ? "enabled" : "disabled") + " for purchase at the Cash Shop.");
     }
 }
diff --git a/src/client/inventory/Item.java b/src/client/inventory/Item.java
index ad0ca26ca..c9b8691dd 100644
--- a/src/client/inventory/Item.java
+++ b/src/client/inventory/Item.java
@@ -26,10 +26,12 @@
 import java.util.LinkedList;
 import java.util.List;
 import java.util.concurrent.atomic.AtomicInteger;
+import client.inventory.manipulator.MapleKarmaManipulator;
+import server.MapleItemInformationProvider;
 
 public class Item implements Comparable<Item> {
 
-    private static AtomicInteger runningCashId = new AtomicInteger(0);
+    private static AtomicInteger runningCashId = new AtomicInteger(777000000);  // pets & rings shares cashid values
     
     private int id, cashId, sn;
     private short position;
@@ -83,7 +85,7 @@ public int getItemId() {
 
     public int getCashId() {
         if (cashId == 0) {
-            cashId = runningCashId.incrementAndGet();
+            cashId = runningCashId.getAndIncrement();
         }
         return cashId;
     }
@@ -177,4 +179,8 @@ public void setGiftFrom(String giftFrom) {
     public MaplePet getPet() {
         return pet;
     }
+    
+    public boolean isUntradeable() {
+        return ((this.getFlag() & ItemConstants.UNTRADEABLE) == ItemConstants.UNTRADEABLE) || (MapleItemInformationProvider.getInstance().isDropRestricted(this.getItemId()) && !MapleKarmaManipulator.hasKarmaFlag(this));
+    }
 }
diff --git a/src/client/inventory/MaplePet.java b/src/client/inventory/MaplePet.java
index 4d6dbd142..8f320e556 100644
--- a/src/client/inventory/MaplePet.java
+++ b/src/client/inventory/MaplePet.java
@@ -21,7 +21,6 @@
 */
 package client.inventory;
 
-import com.mysql.jdbc.Statement;
 import constants.ExpTable;
 import java.awt.Point;
 import java.sql.PreparedStatement;
@@ -34,6 +33,7 @@
 import server.movement.LifeMovement;
 import server.movement.LifeMovementFragment;
 import client.MapleCharacter;
+import client.inventory.manipulator.MapleCashidGenerator;
 import java.sql.Connection;
 import tools.MaplePacketCreator;
 import tools.Pair;
@@ -90,6 +90,8 @@ public void deleteFromDb() {
             ps.executeUpdate();
             ps.close();
             con.close();
+            
+            MapleCashidGenerator.freeCashId(this.getUniqueId());
         } catch (SQLException ex) {
             ex.printStackTrace();
         }
@@ -116,15 +118,11 @@ public void saveToDb() {
     public static int createPet(int itemid) {
         try {
             Connection con = DatabaseConnection.getConnection();
-            PreparedStatement ps = con.prepareStatement("INSERT INTO pets (name, level, closeness, fullness, summoned) VALUES (?, 1, 0, 100, 0)", Statement.RETURN_GENERATED_KEYS);
-            ps.setString(1, MapleItemInformationProvider.getInstance().getName(itemid));
+            PreparedStatement ps = con.prepareStatement("INSERT INTO pets (petid, name, level, closeness, fullness, summoned) VALUES (?, ?, 1, 0, 100, 0)");
+            int ret = MapleCashidGenerator.generateCashId();
+            ps.setInt(1, ret);
+            ps.setString(2, MapleItemInformationProvider.getInstance().getName(itemid));
             ps.executeUpdate();
-            ResultSet rs = ps.getGeneratedKeys();
-            int ret = -1;
-            if (rs.next()) {
-                ret = rs.getInt(1);
-            }
-            rs.close();
             ps.close();
             con.close();
             return ret;
@@ -137,18 +135,14 @@ public static int createPet(int itemid) {
     public static int createPet(int itemid, byte level, int closeness, int fullness) {
         try {
             Connection con = DatabaseConnection.getConnection();
-            PreparedStatement ps = con.prepareStatement("INSERT INTO pets (name, level, closeness, fullness, summoned) VALUES (?, ?, ?, ?, 0)", Statement.RETURN_GENERATED_KEYS);
-            ps.setString(1, MapleItemInformationProvider.getInstance().getName(itemid));
-            ps.setByte(2, level);
-            ps.setInt(3, closeness);
-            ps.setInt(4, fullness);
+            PreparedStatement ps = con.prepareStatement("INSERT INTO pets (petid, name, level, closeness, fullness, summoned) VALUES (?, ?, ?, ?, ?, 0)");
+            int ret = MapleCashidGenerator.generateCashId();
+            ps.setInt(1, ret);
+            ps.setString(2, MapleItemInformationProvider.getInstance().getName(itemid));
+            ps.setByte(3, level);
+            ps.setInt(4, closeness);
+            ps.setInt(5, fullness);
             ps.executeUpdate();
-            ResultSet rs = ps.getGeneratedKeys();
-            int ret = -1;
-            if (rs.next()) {
-                ret = rs.getInt(1);
-            }
-            rs.close();
             ps.close();
             con.close();
             return ret;
diff --git a/src/client/inventory/manipulator/MapleCashidGenerator.java b/src/client/inventory/manipulator/MapleCashidGenerator.java
new file mode 100644
index 000000000..cba7bf1e1
--- /dev/null
+++ b/src/client/inventory/manipulator/MapleCashidGenerator.java
@@ -0,0 +1,104 @@
+/*
+    This file is part of the HeavenMS MapleStory Server
+    Copyleft (L) 2016 - 2018 RonanLana
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package client.inventory.manipulator;
+
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.util.HashSet;
+import java.util.Set;
+import tools.DatabaseConnection;
+
+/**
+ *
+ * @author RonanLana
+ */
+public class MapleCashidGenerator {
+    
+    private final static Set<Integer> existentCashids = new HashSet<>(10000);
+    private static Integer runningCashid = 0;
+    
+    private static void loadExistentCashIdsFromQuery(Connection con, String query) throws SQLException {
+        PreparedStatement ps = con.prepareStatement(query);
+        ResultSet rs = ps.executeQuery();
+        
+        while (rs.next()) {
+            existentCashids.add(rs.getInt(1));
+        }
+        
+        rs.close();
+        ps.close();
+    }
+    
+    public static synchronized void loadExistentCashIdsFromDb() {
+        Connection con = null;
+        try {
+            con = DatabaseConnection.getConnection();
+            
+            loadExistentCashIdsFromQuery(con, "SELECT id FROM rings");
+            loadExistentCashIdsFromQuery(con, "SELECT petid FROM pets");
+            
+            con.close();
+        } catch (SQLException ex) {
+            ex.printStackTrace();
+        } finally {
+            try {
+                if (con != null && !con.isClosed()) {
+                    con.close();
+                }
+            } catch (SQLException e) {
+                e.printStackTrace();
+            }
+        }
+        
+        runningCashid = 0;
+        do {
+            runningCashid++;    // hopefully the id will never surpass the allotted amount for pets/rings?
+        } while (existentCashids.contains(runningCashid));
+    }
+    
+    private static void getNextAvailableCashId() {
+        runningCashid++;
+        if (runningCashid >= 777000000) {
+            existentCashids.clear();
+            loadExistentCashIdsFromDb();
+        }
+    }
+    
+    public static synchronized int generateCashId() {
+        while (true) {
+            if (!existentCashids.contains(runningCashid)) {
+                int ret = runningCashid;
+                getNextAvailableCashId();
+                
+                // existentCashids.add(ret)... no need to do this since the wrap over already refetches already used cashids from the DB
+                return ret;
+            }
+            
+            getNextAvailableCashId();
+        }
+    }
+    
+    public static synchronized void freeCashId(int cashId) {
+        existentCashids.remove(cashId);
+    }
+    
+}
diff --git a/src/client/inventory/manipulator/MapleInventoryManipulator.java b/src/client/inventory/manipulator/MapleInventoryManipulator.java
index e85f4d804..e26f36824 100644
--- a/src/client/inventory/manipulator/MapleInventoryManipulator.java
+++ b/src/client/inventory/manipulator/MapleInventoryManipulator.java
@@ -520,16 +520,18 @@ public static void equip(MapleClient c, short src, short dst) {
         
         //1112413, 1112414, 1112405 (Lilin's Ring)
         source = (Equip) eqpInv.getItem(src);
-        Equip target = (Equip) eqpdInv.getItem(dst);
         eqpInv.removeSlot(src);
-        if (target != null) {
-            eqpdInv.lockInventory();
-            try {
+        
+        Equip target;
+        eqpdInv.lockInventory();
+        try {
+            target = (Equip) eqpdInv.getItem(dst);
+            if (target != null) {
                 chr.unequippedItem(target);
                 eqpdInv.removeSlot(dst);
-            } finally {
-                eqpdInv.unlockInventory();
             }
+        } finally {
+            eqpdInv.unlockInventory();
         }
 
         final List<ModifyInventory> mods = new ArrayList<>();
@@ -705,7 +707,7 @@ public static void drop(MapleClient c, MapleInventoryType type, short src, short
     }
 
     private static boolean isDroppedItemRestricted(Item it) {
-        return ServerConstants.USE_ERASE_UNTRADEABLE_DROP && ((it.getFlag() & ItemConstants.UNTRADEABLE) == ItemConstants.UNTRADEABLE);
+        return ServerConstants.USE_ERASE_UNTRADEABLE_DROP && it.isUntradeable();
     }
     
     public static boolean isSandboxItem(Item it) {
diff --git a/src/client/processor/AssignSPProcessor.java b/src/client/processor/AssignSPProcessor.java
index 5d263bfe4..979f1439b 100644
--- a/src/client/processor/AssignSPProcessor.java
+++ b/src/client/processor/AssignSPProcessor.java
@@ -43,7 +43,7 @@ public static void SPAssignAction(MapleClient c, int skillid) {
         c.lockClient();
         try {
             if (skillid == Aran.HIDDEN_FULL_DOUBLE || skillid == Aran.HIDDEN_FULL_TRIPLE || skillid == Aran.HIDDEN_OVER_DOUBLE || skillid == Aran.HIDDEN_OVER_TRIPLE) {
-                c.getSession().write(MaplePacketCreator.enableActions());
+                c.announce(MaplePacketCreator.enableActions());
                 return;
             }
 
diff --git a/src/client/processor/BuybackProcessor.java b/src/client/processor/BuybackProcessor.java
index e4f6f5f23..82cb5300d 100644
--- a/src/client/processor/BuybackProcessor.java
+++ b/src/client/processor/BuybackProcessor.java
@@ -21,16 +21,13 @@
 
 import client.MapleClient;
 import client.MapleCharacter;
-import client.MapleStat;
 import java.awt.Point;
-import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 import server.maps.MapleMap;
 import server.movement.AbsoluteLifeMovement;
 import server.movement.LifeMovementFragment;
 import tools.MaplePacketCreator;
-import tools.Pair;
 
 /**
  *
diff --git a/src/client/processor/DueyProcessor.java b/src/client/processor/DueyProcessor.java
index b6ffb987e..d24b91cf6 100644
--- a/src/client/processor/DueyProcessor.java
+++ b/src/client/processor/DueyProcessor.java
@@ -345,167 +345,171 @@ public static void addItemToDB(Item item, int quantity, int mesos, String sName,
     }
     
     public static void dueySendItem(MapleClient c, byte inventId, short itemPos, short amount, int mesos, String recipient) {
-        c.lockClient();
-        try {
-            final int fee = 5000;
-            final long sendMesos = (long) mesos + fee;
-            if (mesos < 0 || sendMesos > Integer.MAX_VALUE || (amount < 1 && mesos == 0)) {
-                AutobanFactory.PACKET_EDIT.alert(c.getPlayer(), c.getPlayer().getName() + " tried to packet edit with duey.");
-                FilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + " tried to use duey with mesos " + mesos + " and amount " + amount + "\r\n");           	
-                c.disconnect(true, false);
-                return;
-            }
-            
-            int finalcost = mesos + fee;
-            if (c.getPlayer().getMeso() >= finalcost) {
-                int accid = getAccIdFromCNAME(recipient, true);
-                if (accid != -1) {
-                    if (accid == c.getAccID()) {
-                        c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_SAMEACC_ERROR.getCode()));
+        if (c.tryacquireClient()) {
+            try {
+                final int fee = 5000;
+                final long sendMesos = (long) mesos + fee;
+                if (mesos < 0 || sendMesos > Integer.MAX_VALUE || (amount < 1 && mesos == 0)) {
+                    AutobanFactory.PACKET_EDIT.alert(c.getPlayer(), c.getPlayer().getName() + " tried to packet edit with duey.");
+                    FilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + " tried to use duey with mesos " + mesos + " and amount " + amount + "\r\n");           	
+                    c.disconnect(true, false);
+                    return;
+                }
+
+                int finalcost = mesos + fee;
+                if (c.getPlayer().getMeso() >= finalcost) {
+                    int accid = getAccIdFromCNAME(recipient, true);
+                    if (accid != -1) {
+                        if (accid == c.getAccID()) {
+                            c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_SAMEACC_ERROR.getCode()));
+                            return;
+                        }
+                    } else {
+                        c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_NAME_DOES_NOT_EXIST.getCode()));
                         return;
                     }
                 } else {
-                    c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_NAME_DOES_NOT_EXIST.getCode()));
+                    c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_NOT_ENOUGH_MESOS.getCode()));
                     return;
                 }
-            } else {
-                c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_NOT_ENOUGH_MESOS.getCode()));
-                return;
-            }
 
-            MapleClient rClient = null;
-            int channel = c.getWorldServer().find(recipient);
-            if (channel > -1) {
-                Channel rcserv = c.getWorldServer().getChannel(channel);
-                if(rcserv != null) {
-                    MapleCharacter rChr = rcserv.getPlayerStorage().getCharacterByName(recipient);
-                    if(rChr != null) {
-                        rClient = rChr.getClient();
+                MapleClient rClient = null;
+                int channel = c.getWorldServer().find(recipient);
+                if (channel > -1) {
+                    Channel rcserv = c.getWorldServer().getChannel(channel);
+                    if(rcserv != null) {
+                        MapleCharacter rChr = rcserv.getPlayerStorage().getCharacterByName(recipient);
+                        if(rChr != null) {
+                            rClient = rChr.getClient();
+                        }
                     }
                 }
-            }
-            
-            if (inventId > 0) {
-                MapleInventoryType inv = MapleInventoryType.getByType(inventId);
-                Item item = c.getPlayer().getInventory(inv).getItem(itemPos);
-                if (item != null && c.getPlayer().getItemQuantity(item.getItemId(), false) >= amount) {
-                    c.getPlayer().gainMeso(-finalcost, false);
-                    c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_SUCCESSFULLY_SENT.getCode()));
 
-                    if (ItemConstants.isRechargeable(item.getItemId())) {
-                        MapleInventoryManipulator.removeFromSlot(c, inv, itemPos, item.getQuantity(), true);
+                if (inventId > 0) {
+                    MapleInventoryType inv = MapleInventoryType.getByType(inventId);
+                    Item item = c.getPlayer().getInventory(inv).getItem(itemPos);
+                    if (item != null && c.getPlayer().getItemQuantity(item.getItemId(), false) >= amount) {
+                        c.getPlayer().gainMeso(-finalcost, false);
+                        c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_SUCCESSFULLY_SENT.getCode()));
+
+                        if (ItemConstants.isRechargeable(item.getItemId())) {
+                            MapleInventoryManipulator.removeFromSlot(c, inv, itemPos, item.getQuantity(), true);
+                        } else {
+                            MapleInventoryManipulator.removeFromSlot(c, inv, itemPos, amount, true, false);
+                        }
+
+                        MapleKarmaManipulator.toggleKarmaFlagToUntradeable(item);
+                        addItemToDB(item, amount, mesos - getFee(mesos), c.getPlayer().getName(), getAccIdFromCNAME(recipient, false));
                     } else {
-                        MapleInventoryManipulator.removeFromSlot(c, inv, itemPos, amount, true, false);
+                        if (item != null) {
+                            c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_INCORRECT_REQUEST.getCode()));
+                        }
+                        return;
                     }
-
-                    MapleKarmaManipulator.toggleKarmaFlagToUntradeable(item);
-                    addItemToDB(item, amount, mesos - getFee(mesos), c.getPlayer().getName(), getAccIdFromCNAME(recipient, false));
                 } else {
-                    if (item != null) {
-                        c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_INCORRECT_REQUEST.getCode()));
-                    }
-                    return;
-                }
-            } else {
-                c.getPlayer().gainMeso(-finalcost, false);
-                c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_SUCCESSFULLY_SENT.getCode()));    
+                    c.getPlayer().gainMeso(-finalcost, false);
+                    c.announce(MaplePacketCreator.sendDueyMSG(DueyProcessor.Actions.TOCLIENT_SEND_SUCCESSFULLY_SENT.getCode()));    
 
-                addMesoToDB(mesos - getFee(mesos), c.getPlayer().getName(), getAccIdFromCNAME(recipient, false));
-            }
+                    addMesoToDB(mesos - getFee(mesos), c.getPlayer().getName(), getAccIdFromCNAME(recipient, false));
+                }
 
-            if (rClient != null && rClient.isLoggedIn() && !rClient.getPlayer().isAwayFromWorld()) {
-                showDueyNotification(rClient, rClient.getPlayer());
+                if (rClient != null && rClient.isLoggedIn() && !rClient.getPlayer().isAwayFromWorld()) {
+                    showDueyNotification(rClient, rClient.getPlayer());
+                }
+            } finally {
+                c.releaseClient();
             }
-        } finally {
-            c.unlockClient();
         }
     }
     
     public static void dueyRemovePackage(MapleClient c, int packageid) {
-        c.lockClient();
-        try {
-            removeItemFromDB(packageid);
-            c.announce(MaplePacketCreator.removeItemFromDuey(true, packageid));
-        } finally {
-            c.unlockClient();
+        if (c.tryacquireClient()) {
+            try {
+                removeItemFromDB(packageid);
+                c.announce(MaplePacketCreator.removeItemFromDuey(true, packageid));
+            } finally {
+                c.releaseClient();
+            }
         }
     }
     
     public static void dueyClaimPackage(MapleClient c, int packageid) {
-        c.lockClient();
-        try {
-            List<DueyPackages> packages = new LinkedList<>();
-            DueyPackages dp = null;
-            Connection con = null;
+        if (c.tryacquireClient()) {
             try {
-                con = DatabaseConnection.getConnection();
-                DueyPackages dueypack;
-                try (PreparedStatement ps = con.prepareStatement("SELECT * FROM dueypackages LEFT JOIN dueyitems USING (PackageId) WHERE PackageId = ?")) {
-                    ps.setInt(1, packageid);
-                    try (ResultSet rs = ps.executeQuery()) {
-                        dueypack = null;
-                        if (rs.next()) {
-                            dueypack = getItemByPID(rs);
-                            dueypack.setSender(rs.getString("SenderName"));
-                            dueypack.setMesos(rs.getInt("Mesos"));
-                            dueypack.setSentTime(rs.getString("TimeStamp"));
+                List<DueyPackages> packages = new LinkedList<>();
+                DueyPackages dp = null;
+                Connection con = null;
+                try {
+                    con = DatabaseConnection.getConnection();
+                    DueyPackages dueypack;
+                    try (PreparedStatement ps = con.prepareStatement("SELECT * FROM dueypackages LEFT JOIN dueyitems USING (PackageId) WHERE PackageId = ?")) {
+                        ps.setInt(1, packageid);
+                        try (ResultSet rs = ps.executeQuery()) {
+                            dueypack = null;
+                            if (rs.next()) {
+                                dueypack = getItemByPID(rs);
+                                dueypack.setSender(rs.getString("SenderName"));
+                                dueypack.setMesos(rs.getInt("Mesos"));
+                                dueypack.setSentTime(rs.getString("TimeStamp"));
 
-                            packages.add(dueypack);
+                                packages.add(dueypack);
+                            }
                         }
                     }
-                }
-                dp = dueypack;
-                if(dp == null) {
-                    c.announce(MaplePacketCreator.sendDueyMSG(Actions.TOCLIENT_RECV_UNKNOWN_ERROR.getCode()));
-                    FilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + " tried to receive package from duey with id " + packageid + "\r\n");
-                    return;
-                }
+                    dp = dueypack;
+                    if(dp == null) {
+                        c.announce(MaplePacketCreator.sendDueyMSG(Actions.TOCLIENT_RECV_UNKNOWN_ERROR.getCode()));
+                        FilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + " tried to receive package from duey with id " + packageid + "\r\n");
+                        return;
+                    }
 
-                if (dp.getItem() != null) {
-                    if (!MapleInventoryManipulator.checkSpace(c, dp.getItem().getItemId(), dp.getItem().getQuantity(), dp.getItem().getOwner())) {
-                        int itemid = dp.getItem().getItemId();
-                        if(MapleItemInformationProvider.getInstance().isPickupRestricted(itemid) && c.getPlayer().getInventory(ItemConstants.getInventoryType(itemid)).findById(itemid) != null) {
-                            c.announce(MaplePacketCreator.sendDueyMSG(Actions.TOCLIENT_RECV_RECEIVER_WITH_UNIQUE.getCode()));
+                    if (dp.getItem() != null) {
+                        if (!MapleInventoryManipulator.checkSpace(c, dp.getItem().getItemId(), dp.getItem().getQuantity(), dp.getItem().getOwner())) {
+                            int itemid = dp.getItem().getItemId();
+                            if(MapleItemInformationProvider.getInstance().isPickupRestricted(itemid) && c.getPlayer().getInventory(ItemConstants.getInventoryType(itemid)).findById(itemid) != null) {
+                                c.announce(MaplePacketCreator.sendDueyMSG(Actions.TOCLIENT_RECV_RECEIVER_WITH_UNIQUE.getCode()));
+                            } else {
+                                c.announce(MaplePacketCreator.sendDueyMSG(Actions.TOCLIENT_RECV_NO_FREE_SLOTS.getCode()));
+                            }
+
+                            return;
                         } else {
-                            c.announce(MaplePacketCreator.sendDueyMSG(Actions.TOCLIENT_RECV_NO_FREE_SLOTS.getCode()));
+                            MapleInventoryManipulator.addFromDrop(c, dp.getItem(), false);
                         }
+                    }
 
-                        return;
+                    long gainmesos;
+                    long totalmesos = (long) dp.getMesos() + c.getPlayer().getMeso();
+
+                    if (totalmesos < 0 || dp.getMesos() < 0) {
+                        gainmesos = 0;
                     } else {
-                        MapleInventoryManipulator.addFromDrop(c, dp.getItem(), false);
+                        totalmesos = Math.min(totalmesos, Integer.MAX_VALUE);
+                        gainmesos = totalmesos - c.getPlayer().getMeso();
                     }
-                }
 
-                long gainmesos;
-                long totalmesos = (long) dp.getMesos() + c.getPlayer().getMeso();
-
-                if (totalmesos < 0 || dp.getMesos() < 0) {
-                    gainmesos = 0;
-                } else {
-                    totalmesos = Math.min(totalmesos, Integer.MAX_VALUE);
-                    gainmesos = totalmesos - c.getPlayer().getMeso();
-                }
-                
-                c.getPlayer().gainMeso((int)gainmesos, false);
+                    c.getPlayer().gainMeso((int)gainmesos, false);
 
-                removeItemFromDB(packageid);
-                c.announce(MaplePacketCreator.removeItemFromDuey(false, packageid));
+                    removeItemFromDB(packageid);
+                    c.announce(MaplePacketCreator.removeItemFromDuey(false, packageid));
 
-                con.close();
-            } catch (SQLException e) {
-                e.printStackTrace();
+                    con.close();
+                } catch (SQLException e) {
+                    e.printStackTrace();
+                }
+            } finally {
+                c.releaseClient();
             }
-        } finally {
-            c.unlockClient();
         }
     }
     
     public static void dueySendTalk(MapleClient c) {
-        c.lockClient();
-        try {
-            c.announce(MaplePacketCreator.sendDuey((byte) 8, loadItems(c.getPlayer())));
-        } finally {
-            c.unlockClient();
+        if (c.tryacquireClient()) {
+            try {
+                c.announce(MaplePacketCreator.sendDuey((byte) 8, loadItems(c.getPlayer())));
+            } finally {
+                c.releaseClient();
+            }
         }
     }
 }
diff --git a/src/client/processor/FredrickProcessor.java b/src/client/processor/FredrickProcessor.java
index 0944b39f6..780a19bab 100644
--- a/src/client/processor/FredrickProcessor.java
+++ b/src/client/processor/FredrickProcessor.java
@@ -70,42 +70,43 @@ private static boolean deleteFredrickItems(int cid) {
     }
     
     public static void fredrickRetrieveItems(MapleClient c) {     // thanks Gustav for pointing out the dupe on Fredrick handling
-        c.lockClient();
-        try {
-            MapleCharacter chr = c.getPlayer();
-            
-            List<Pair<Item, MapleInventoryType>> items;
+        if (c.tryacquireClient()) {
             try {
-                items = ItemFactory.MERCHANT.loadItems(chr.getId(), false);
-                if (!canRetrieveFromFredrick(chr, items)) {
-                    chr.announce(MaplePacketCreator.fredrickMessage((byte) 0x21));
-                    return;
-                }
+                MapleCharacter chr = c.getPlayer();
+
+                List<Pair<Item, MapleInventoryType>> items;
+                try {
+                    items = ItemFactory.MERCHANT.loadItems(chr.getId(), false);
+                    if (!canRetrieveFromFredrick(chr, items)) {
+                        chr.announce(MaplePacketCreator.fredrickMessage((byte) 0x21));
+                        return;
+                    }
 
-                chr.withdrawMerchantMesos();
+                    chr.withdrawMerchantMesos();
 
-                if (deleteFredrickItems(chr.getId())) {
-                    MapleHiredMerchant merchant = chr.getHiredMerchant();
+                    if (deleteFredrickItems(chr.getId())) {
+                        MapleHiredMerchant merchant = chr.getHiredMerchant();
 
-                    if(merchant != null)
-                        merchant.clearItems();
+                        if(merchant != null)
+                            merchant.clearItems();
 
-                    for (Pair<Item, MapleInventoryType> it : items) {
-                        Item item = it.getLeft();
-                        MapleInventoryManipulator.addFromDrop(chr.getClient(), item, false);
-                        String itemName = MapleItemInformationProvider.getInstance().getName(item.getItemId());
-                        FilePrinter.print(FilePrinter.FREDRICK + chr.getName() + ".txt", chr.getName() + " gained " + item.getQuantity() + " " + itemName + " (" + item.getItemId() + ")\r\n");
-                    }
+                        for (Pair<Item, MapleInventoryType> it : items) {
+                            Item item = it.getLeft();
+                            MapleInventoryManipulator.addFromDrop(chr.getClient(), item, false);
+                            String itemName = MapleItemInformationProvider.getInstance().getName(item.getItemId());
+                            FilePrinter.print(FilePrinter.FREDRICK + chr.getName() + ".txt", chr.getName() + " gained " + item.getQuantity() + " " + itemName + " (" + item.getItemId() + ")\r\n");
+                        }
 
-                    chr.announce(MaplePacketCreator.fredrickMessage((byte) 0x1E));
-                } else {
-                    chr.message("An unknown error has occured.");
+                        chr.announce(MaplePacketCreator.fredrickMessage((byte) 0x1E));
+                    } else {
+                        chr.message("An unknown error has occured.");
+                    }
+                } catch (SQLException ex) {
+                    ex.printStackTrace();
                 }
-            } catch (SQLException ex) {
-                ex.printStackTrace();
+            } finally {
+                c.releaseClient();
             }
-        } finally {
-            c.unlockClient();
         }
     }
 }
diff --git a/src/client/processor/MakerProcessor.java b/src/client/processor/MakerProcessor.java
index 50b9325b5..44ad0e74d 100644
--- a/src/client/processor/MakerProcessor.java
+++ b/src/client/processor/MakerProcessor.java
@@ -26,7 +26,6 @@
 import constants.ItemConstants;
 import constants.ServerConstants;
 import client.inventory.manipulator.MapleInventoryManipulator;
-import constants.EquipType;
 import constants.GameConstants;
 import java.util.LinkedHashMap;
 import java.util.LinkedList;
@@ -47,168 +46,169 @@
     private static MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();
 
     public static void makerAction(SeekableLittleEndianAccessor slea, MapleClient c) {
-        c.lockClient();
-        try {
-            int type = slea.readInt();
-            int toCreate = slea.readInt();
-            int toDisassemble = -1, pos = -1;
-            boolean makerSucceeded = true;
-
-            MakerItemFactory.MakerItemCreateEntry recipe;
-            Map<Integer, Short> reagentids = new LinkedHashMap<>();
-            int stimulantid = -1;
-
-            if(type == 3) {    // building monster crystal
-                int fromLeftover = toCreate;
-                toCreate = ii.getMakerCrystalFromLeftover(toCreate);
-                if(toCreate == -1) {
-                    c.announce(MaplePacketCreator.serverNotice(1, ii.getName(toCreate) + " is unavailable for Monster Crystal conversion."));
-                    return;
-                }
+        if (c.tryacquireClient()) {
+            try {
+                int type = slea.readInt();
+                int toCreate = slea.readInt();
+                int toDisassemble = -1, pos = -1;
+                boolean makerSucceeded = true;
+
+                MakerItemFactory.MakerItemCreateEntry recipe;
+                Map<Integer, Short> reagentids = new LinkedHashMap<>();
+                int stimulantid = -1;
+
+                if(type == 3) {    // building monster crystal
+                    int fromLeftover = toCreate;
+                    toCreate = ii.getMakerCrystalFromLeftover(toCreate);
+                    if(toCreate == -1) {
+                        c.announce(MaplePacketCreator.serverNotice(1, ii.getName(toCreate) + " is unavailable for Monster Crystal conversion."));
+                        return;
+                    }
 
-                recipe = MakerItemFactory.generateLeftoverCrystalEntry(fromLeftover);
-            } else if(type == 4) {  // disassembling
-                slea.readInt(); // 1... probably inventory type
-                pos = slea.readInt();
+                    recipe = MakerItemFactory.generateLeftoverCrystalEntry(fromLeftover);
+                } else if(type == 4) {  // disassembling
+                    slea.readInt(); // 1... probably inventory type
+                    pos = slea.readInt();
 
-                Item it = c.getPlayer().getInventory(MapleInventoryType.EQUIP).getItem((short) pos);
-                if(it != null && it.getItemId() == toCreate) {
-                    Pair<Integer, Integer> p;
+                    Item it = c.getPlayer().getInventory(MapleInventoryType.EQUIP).getItem((short) pos);
+                    if(it != null && it.getItemId() == toCreate) {
+                        Pair<Integer, Integer> p;
 
-                    if((p = generateDisassemblyInfo(toCreate)) != null) {
-                        recipe = MakerItemFactory.generateDisassemblyCrystalEntry(p.getLeft(), p.getRight());
-                        toDisassemble = toCreate;
-                        toCreate = ii.getMakerCrystalFromEquip(toCreate);
+                        if((p = generateDisassemblyInfo(toCreate)) != null) {
+                            recipe = MakerItemFactory.generateDisassemblyCrystalEntry(p.getLeft(), p.getRight());
+                            toDisassemble = toCreate;
+                            toCreate = ii.getMakerCrystalFromEquip(toCreate);
+                        } else {
+                            c.announce(MaplePacketCreator.serverNotice(1, ii.getName(toCreate) + " is unavailable for Monster Crystal disassembly."));
+                            return;
+                        }
                     } else {
-                        c.announce(MaplePacketCreator.serverNotice(1, ii.getName(toCreate) + " is unavailable for Monster Crystal disassembly."));
+                        c.announce(MaplePacketCreator.serverNotice(1, "An unknown error occurred when trying to apply that item for disassembly."));
                         return;
                     }
                 } else {
-                    c.announce(MaplePacketCreator.serverNotice(1, "An unknown error occurred when trying to apply that item for disassembly."));
-                    return;
-                }
-            } else {
-                if(ItemConstants.isEquipment(toCreate)) {   // only equips uses stimulant and reagents
-                    if(slea.readByte() != 0) {  // stimulant
-                        stimulantid = ii.getMakerStimulant(toCreate);
-                        if(!c.getAbstractPlayerInteraction().haveItem(stimulantid)) {
-                            stimulantid = -1;
+                    if(ItemConstants.isEquipment(toCreate)) {   // only equips uses stimulant and reagents
+                        if(slea.readByte() != 0) {  // stimulant
+                            stimulantid = ii.getMakerStimulant(toCreate);
+                            if(!c.getAbstractPlayerInteraction().haveItem(stimulantid)) {
+                                stimulantid = -1;
+                            }
                         }
-                    }
 
-                    int reagents = Math.min(slea.readInt(), getMakerReagentSlots(toCreate));
-                    for(int i = 0; i < reagents; i++) {  // crystals
-                        int reagentid = slea.readInt();
-                        if(ItemConstants.isMakerReagent(reagentid)) {
-                            Short rs = reagentids.get(reagentid);
-                            if(rs == null) {
-                                reagentids.put(reagentid, (short) 1);
-                            } else {
-                                reagentids.put(reagentid, (short) (rs + 1));
+                        int reagents = Math.min(slea.readInt(), getMakerReagentSlots(toCreate));
+                        for(int i = 0; i < reagents; i++) {  // crystals
+                            int reagentid = slea.readInt();
+                            if(ItemConstants.isMakerReagent(reagentid)) {
+                                Short rs = reagentids.get(reagentid);
+                                if(rs == null) {
+                                    reagentids.put(reagentid, (short) 1);
+                                } else {
+                                    reagentids.put(reagentid, (short) (rs + 1));
+                                }
                             }
                         }
-                    }
 
-                    List<Pair<Integer, Short>> toUpdate = new LinkedList<>();
-                    for(Map.Entry<Integer, Short> r : reagentids.entrySet()) {
-                        int qty = c.getAbstractPlayerInteraction().getItemQuantity(r.getKey());
+                        List<Pair<Integer, Short>> toUpdate = new LinkedList<>();
+                        for(Map.Entry<Integer, Short> r : reagentids.entrySet()) {
+                            int qty = c.getAbstractPlayerInteraction().getItemQuantity(r.getKey());
 
-                        if(qty < r.getValue()) {
-                            toUpdate.add(new Pair<>(r.getKey(), (short) qty));
+                            if(qty < r.getValue()) {
+                                toUpdate.add(new Pair<>(r.getKey(), (short) qty));
+                            }
                         }
-                    }
 
-                    // remove those not present on player inventory
-                    if(!toUpdate.isEmpty()) {
-                        for(Pair<Integer, Short> rp : toUpdate) {
-                            if(rp.getRight() > 0) {
-                                reagentids.put(rp.getLeft(), rp.getRight());
-                            } else {
-                                reagentids.remove(rp.getLeft());
+                        // remove those not present on player inventory
+                        if(!toUpdate.isEmpty()) {
+                            for(Pair<Integer, Short> rp : toUpdate) {
+                                if(rp.getRight() > 0) {
+                                    reagentids.put(rp.getLeft(), rp.getRight());
+                                } else {
+                                    reagentids.remove(rp.getLeft());
+                                }
                             }
                         }
-                    }
 
-                    if(!reagentids.isEmpty()) {
-                        if(!removeOddMakerReagents(toCreate, reagentids)) {
-                            c.announce(MaplePacketCreator.serverNotice(1, "You can only use WATK and MATK Strengthening Gems on weapon items."));
-                            return;
+                        if(!reagentids.isEmpty()) {
+                            if(!removeOddMakerReagents(toCreate, reagentids)) {
+                                c.announce(MaplePacketCreator.serverNotice(1, "You can only use WATK and MATK Strengthening Gems on weapon items."));
+                                return;
+                            }
                         }
                     }
-                }
 
-                recipe = MakerItemFactory.getItemCreateEntry(toCreate, stimulantid, reagentids);
-            }
+                    recipe = MakerItemFactory.getItemCreateEntry(toCreate, stimulantid, reagentids);
+                }
 
-            short createStatus = getCreateStatus(c, recipe);
+                short createStatus = getCreateStatus(c, recipe);
 
-            switch(createStatus) {
-                case -1:// non-available for Maker itemid has been tried to forge
-                    FilePrinter.printError(FilePrinter.EXPLOITS, "Player " + c.getPlayer().getName() + " tried to craft itemid " + toCreate + " using the Maker skill.");
-                    c.announce(MaplePacketCreator.serverNotice(1, "The requested item could not be crafted on this operation."));
-                    break;
+                switch(createStatus) {
+                    case -1:// non-available for Maker itemid has been tried to forge
+                        FilePrinter.printError(FilePrinter.EXPLOITS, "Player " + c.getPlayer().getName() + " tried to craft itemid " + toCreate + " using the Maker skill.");
+                        c.announce(MaplePacketCreator.serverNotice(1, "The requested item could not be crafted on this operation."));
+                        break;
 
-                case 1: // no items
-                    c.announce(MaplePacketCreator.serverNotice(1, "You don't have all required items in your inventory to make " + recipe.getRewardAmount() + " " + ii.getName(toCreate) + "."));
-                    break;
+                    case 1: // no items
+                        c.announce(MaplePacketCreator.serverNotice(1, "You don't have all required items in your inventory to make " + recipe.getRewardAmount() + " " + ii.getName(toCreate) + "."));
+                        break;
 
-                case 2: // no meso
-                    c.announce(MaplePacketCreator.serverNotice(1, "You don't have enough mesos (" + GameConstants.numberWithCommas(recipe.getCost()) + ") to complete this operation."));
-                    break;
+                    case 2: // no meso
+                        c.announce(MaplePacketCreator.serverNotice(1, "You don't have enough mesos (" + GameConstants.numberWithCommas(recipe.getCost()) + ") to complete this operation."));
+                        break;
 
-                case 3: // no req level
-                    c.announce(MaplePacketCreator.serverNotice(1, "You don't have enough level to complete this operation."));
-                    break;
+                    case 3: // no req level
+                        c.announce(MaplePacketCreator.serverNotice(1, "You don't have enough level to complete this operation."));
+                        break;
 
-                case 4: // no req skill level
-                    c.announce(MaplePacketCreator.serverNotice(1, "You don't have enough Maker level to complete this operation."));
-                    break;
+                    case 4: // no req skill level
+                        c.announce(MaplePacketCreator.serverNotice(1, "You don't have enough Maker level to complete this operation."));
+                        break;
 
-                default:
-                    if (MapleInventoryManipulator.checkSpace(c, toCreate, (short) recipe.getRewardAmount(), "")) {
-                        for (Pair<Integer, Integer> p : recipe.getReqItems()) {
-                            c.getAbstractPlayerInteraction().gainItem(p.getLeft(), (short) -p.getRight());
-                        }
+                    default:
+                        if (MapleInventoryManipulator.checkSpace(c, toCreate, (short) recipe.getRewardAmount(), "")) {
+                            for (Pair<Integer, Integer> p : recipe.getReqItems()) {
+                                c.getAbstractPlayerInteraction().gainItem(p.getLeft(), (short) -p.getRight());
+                            }
 
-                        if(toDisassemble != -1) {
-                            MapleInventoryManipulator.removeFromSlot(c, MapleInventoryType.EQUIP, (short) pos, (short) 1, false);
-                            c.announce(MaplePacketCreator.getShowItemGain(toDisassemble, (short) -1, true));
-                        }
+                            if(toDisassemble != -1) {
+                                MapleInventoryManipulator.removeFromSlot(c, MapleInventoryType.EQUIP, (short) pos, (short) 1, false);
+                                c.announce(MaplePacketCreator.getShowItemGain(toDisassemble, (short) -1, true));
+                            }
 
-                        int cost = recipe.getCost();
-                        if(stimulantid == -1 && reagentids.isEmpty()) {
-                            if(cost > 0) c.getPlayer().gainMeso(-cost);
+                            int cost = recipe.getCost();
+                            if(stimulantid == -1 && reagentids.isEmpty()) {
+                                if(cost > 0) c.getPlayer().gainMeso(-cost);
 
-                            c.getPlayer().setCS(true);
-                            c.getAbstractPlayerInteraction().gainItem(toCreate, (short) recipe.getRewardAmount());
-                            c.getPlayer().setCS(false);
-                        } else {
-                            if(stimulantid != -1) c.getAbstractPlayerInteraction().gainItem(stimulantid, (short) -1);
-                            if(!reagentids.isEmpty()) {
-                                for(Map.Entry<Integer, Short> r : reagentids.entrySet()) {
-                                    c.getAbstractPlayerInteraction().gainItem(r.getKey(), (short) (-1 * r.getValue()));
+                                c.getPlayer().setCS(true);
+                                c.getAbstractPlayerInteraction().gainItem(toCreate, (short) recipe.getRewardAmount());
+                                c.getPlayer().setCS(false);
+                            } else {
+                                if(stimulantid != -1) c.getAbstractPlayerInteraction().gainItem(stimulantid, (short) -1);
+                                if(!reagentids.isEmpty()) {
+                                    for(Map.Entry<Integer, Short> r : reagentids.entrySet()) {
+                                        c.getAbstractPlayerInteraction().gainItem(r.getKey(), (short) (-1 * r.getValue()));
+                                    }
                                 }
-                            }
 
-                            if(cost > 0) c.getPlayer().gainMeso(-cost);
-                            makerSucceeded = addBoostedMakerItem(c, toCreate, stimulantid, reagentids);
-                        }
+                                if(cost > 0) c.getPlayer().gainMeso(-cost);
+                                makerSucceeded = addBoostedMakerItem(c, toCreate, stimulantid, reagentids);
+                            }
 
-                        if(makerSucceeded) c.announce(MaplePacketCreator.serverNotice(1, "You have successfully created " + recipe.getRewardAmount() + " " + ii.getName(toCreate) + "."));
-                        else c.getPlayer().dropMessage(5, "The Maker skill lights up, but the skill winds up as if nothing happened.");
+                            if(makerSucceeded) c.announce(MaplePacketCreator.serverNotice(1, "You have successfully created " + recipe.getRewardAmount() + " " + ii.getName(toCreate) + "."));
+                            else c.getPlayer().dropMessage(5, "The Maker skill lights up, but the skill winds up as if nothing happened.");
 
-                        c.announce(MaplePacketCreator.showMakerEffect(makerSucceeded));
-                        c.getPlayer().getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showForeignMakerEffect(c.getPlayer().getId(), makerSucceeded), false);
+                            c.announce(MaplePacketCreator.showMakerEffect(makerSucceeded));
+                            c.getPlayer().getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showForeignMakerEffect(c.getPlayer().getId(), makerSucceeded), false);
 
-                        if(toCreate == 4260003 && c.getPlayer().getQuestStatus(6033) == 1) {
-                            c.getAbstractPlayerInteraction().setQuestProgress(6033, 1);
+                            if(toCreate == 4260003 && c.getPlayer().getQuestStatus(6033) == 1) {
+                                c.getAbstractPlayerInteraction().setQuestProgress(6033, 1);
+                            }
+                        } else {
+                            c.announce(MaplePacketCreator.serverNotice(1, "Your inventory is full."));
                         }
-                    } else {
-                        c.announce(MaplePacketCreator.serverNotice(1, "Your inventory is full."));
-                    }
+                }
+            } finally {
+                c.releaseClient();
             }
-        } finally {
-            c.unlockClient();
         }
     }
         
diff --git a/src/client/processor/SpawnPetProcessor.java b/src/client/processor/SpawnPetProcessor.java
index c45067106..997af5ace 100644
--- a/src/client/processor/SpawnPetProcessor.java
+++ b/src/client/processor/SpawnPetProcessor.java
@@ -40,60 +40,61 @@
     private static MapleDataProvider dataRoot = MapleDataProviderFactory.getDataProvider(new File(System.getProperty("wzpath") + "/Item.wz"));
     
     public static void processSpawnPet(MapleClient c, byte slot, boolean lead) {
-        c.lockClient();
-        try {
-            MapleCharacter chr = c.getPlayer();
-            MaplePet pet = chr.getInventory(MapleInventoryType.CASH).getItem(slot).getPet();
-            if (pet == null) return;
+        if (c.tryacquireClient()) {
+            try {
+                MapleCharacter chr = c.getPlayer();
+                MaplePet pet = chr.getInventory(MapleInventoryType.CASH).getItem(slot).getPet();
+                if (pet == null) return;
 
-            int petid = pet.getItemId();
-            if (petid == 5000028 || petid == 5000047) //Handles Dragon AND Robos
-            {
-                if (chr.haveItem(petid + 1)) {
-                    chr.dropMessage(5, "You can't hatch your " + (petid == 5000028 ? "Dragon egg" : "Robo egg") + " if you already have a Baby " + (petid == 5000028 ? "Dragon." : "Robo."));
-                    c.announce(MaplePacketCreator.enableActions());
-                    return;
-                } else {
-                    int evolveid = MapleDataTool.getInt("info/evol1", dataRoot.getData("Pet/" + petid + ".img"));
-                    int petId = MaplePet.createPet(evolveid);
-                    if (petId == -1) {
+                int petid = pet.getItemId();
+                if (petid == 5000028 || petid == 5000047) //Handles Dragon AND Robos
+                {
+                    if (chr.haveItem(petid + 1)) {
+                        chr.dropMessage(5, "You can't hatch your " + (petid == 5000028 ? "Dragon egg" : "Robo egg") + " if you already have a Baby " + (petid == 5000028 ? "Dragon." : "Robo."));
+                        c.announce(MaplePacketCreator.enableActions());
                         return;
-                    }
-                    long expiration = chr.getInventory(MapleInventoryType.CASH).getItem(slot).getExpiration();
-                    MapleInventoryManipulator.removeById(c, MapleInventoryType.CASH, petid, (short) 1, false, false);
-                    MapleInventoryManipulator.addById(c, evolveid, (short) 1, null, petId, expiration);
-                    pet.deleteFromDb();
+                    } else {
+                        int evolveid = MapleDataTool.getInt("info/evol1", dataRoot.getData("Pet/" + petid + ".img"));
+                        int petId = MaplePet.createPet(evolveid);
+                        if (petId == -1) {
+                            return;
+                        }
+                        long expiration = chr.getInventory(MapleInventoryType.CASH).getItem(slot).getExpiration();
+                        MapleInventoryManipulator.removeById(c, MapleInventoryType.CASH, petid, (short) 1, false, false);
+                        MapleInventoryManipulator.addById(c, evolveid, (short) 1, null, petId, expiration);
+                        pet.deleteFromDb();
 
-                    c.announce(MaplePacketCreator.enableActions());
-                    return;
-                }
-            }
-            if (chr.getPetIndex(pet) != -1) {
-                chr.unequipPet(pet, true);
-            } else {
-                if (chr.getSkillLevel(SkillFactory.getSkill(8)) == 0 && chr.getPet(0) != null) {
-                    chr.unequipPet(chr.getPet(0), false);
-                }
-                if (lead) {
-                    chr.shiftPetsRight();
+                        c.announce(MaplePacketCreator.enableActions());
+                        return;
+                    }
                 }
-                Point pos = chr.getPosition();
-                pos.y -= 12;
-                pet.setPos(pos);
-                pet.setFh(chr.getMap().getFootholds().findBelow(pet.getPos()).getId());
-                pet.setStance(0);
-                pet.setSummoned(true);
-                pet.saveToDb();
-                chr.addPet(pet);
-                chr.getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showPet(c.getPlayer(), pet, false, false), true);
-                c.announce(MaplePacketCreator.petStatUpdate(c.getPlayer()));
-                c.announce(MaplePacketCreator.enableActions());
+                if (chr.getPetIndex(pet) != -1) {
+                    chr.unequipPet(pet, true);
+                } else {
+                    if (chr.getSkillLevel(SkillFactory.getSkill(8)) == 0 && chr.getPet(0) != null) {
+                        chr.unequipPet(chr.getPet(0), false);
+                    }
+                    if (lead) {
+                        chr.shiftPetsRight();
+                    }
+                    Point pos = chr.getPosition();
+                    pos.y -= 12;
+                    pet.setPos(pos);
+                    pet.setFh(chr.getMap().getFootholds().findBelow(pet.getPos()).getId());
+                    pet.setStance(0);
+                    pet.setSummoned(true);
+                    pet.saveToDb();
+                    chr.addPet(pet);
+                    chr.getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showPet(c.getPlayer(), pet, false, false), true);
+                    c.announce(MaplePacketCreator.petStatUpdate(c.getPlayer()));
+                    c.announce(MaplePacketCreator.enableActions());
 
-                chr.commitExcludedItems();
-                chr.getClient().getWorldServer().registerPetHunger(chr, chr.getPetIndex(pet));
+                    chr.commitExcludedItems();
+                    chr.getClient().getWorldServer().registerPetHunger(chr, chr.getPetIndex(pet));
+                }
+            } finally {
+                c.releaseClient();
             }
-        } finally {
-            c.unlockClient();
         }
     }
 }
diff --git a/src/client/processor/StorageProcessor.java b/src/client/processor/StorageProcessor.java
index c722a47c6..386006d2f 100644
--- a/src/client/processor/StorageProcessor.java
+++ b/src/client/processor/StorageProcessor.java
@@ -54,123 +54,124 @@ public static void storageAction(SeekableLittleEndianAccessor slea, MapleClient
                         return;
                 }
                 
-                c.lockClient();
-                try {
-                        if (mode == 4) { // take out
-                                byte type = slea.readByte();
-                                byte slot = slea.readByte();
-                                if (slot < 0 || slot > storage.getSlots()) { // removal starts at zero
-                                        AutobanFactory.PACKET_EDIT.alert(c.getPlayer(), c.getPlayer().getName() + " tried to packet edit with storage.");
-                                        FilePrinter.print(FilePrinter.EXPLOITS + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + " tried to work with storage slot " + slot + "\r\n");
-                                        c.disconnect(true, false);
-                                        return;
-                                }
-                                slot = storage.getSlot(MapleInventoryType.getByType(type), slot);
-                                Item item = storage.getItem(slot);
-                                if (item != null) {
-                                        if (MapleItemInformationProvider.getInstance().isPickupRestricted(item.getItemId()) && chr.haveItemWithId(item.getItemId(), true)) {
-                                                c.announce(MaplePacketCreator.getStorageError((byte) 0x0C));
+                if (c.tryacquireClient()) {
+                        try {
+                                if (mode == 4) { // take out
+                                        byte type = slea.readByte();
+                                        byte slot = slea.readByte();
+                                        if (slot < 0 || slot > storage.getSlots()) { // removal starts at zero
+                                                AutobanFactory.PACKET_EDIT.alert(c.getPlayer(), c.getPlayer().getName() + " tried to packet edit with storage.");
+                                                FilePrinter.print(FilePrinter.EXPLOITS + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + " tried to work with storage slot " + slot + "\r\n");
+                                                c.disconnect(true, false);
                                                 return;
                                         }
-                                        
-                                        int takeoutFee = storage.getTakeOutFee();
-                                        if (chr.getMeso() < takeoutFee) {
-                                                c.announce(MaplePacketCreator.getStorageError((byte) 0x0B));
+                                        slot = storage.getSlot(MapleInventoryType.getByType(type), slot);
+                                        Item item = storage.getItem(slot);
+                                        if (item != null) {
+                                                if (MapleItemInformationProvider.getInstance().isPickupRestricted(item.getItemId()) && chr.haveItemWithId(item.getItemId(), true)) {
+                                                        c.announce(MaplePacketCreator.getStorageError((byte) 0x0C));
+                                                        return;
+                                                }
+
+                                                int takeoutFee = storage.getTakeOutFee();
+                                                if (chr.getMeso() < takeoutFee) {
+                                                        c.announce(MaplePacketCreator.getStorageError((byte) 0x0B));
+                                                        return;
+                                                } else {
+                                                        chr.gainMeso(-takeoutFee, false);
+                                                }
+
+                                                if (MapleInventoryManipulator.checkSpace(c, item.getItemId(), item.getQuantity(), item.getOwner())) {                
+                                                        item = storage.takeOut(slot);//actually the same but idc
+                                                        String itemName = MapleItemInformationProvider.getInstance().getName(item.getItemId());
+                                                        FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + ".txt", c.getPlayer().getName() + " took out " + item.getQuantity() + " " + itemName + " (" + item.getItemId() + ")\r\n");
+                                                        chr.setUsedStorage();
+                                                        MapleKarmaManipulator.toggleKarmaFlagToUntradeable(item);
+                                                        MapleInventoryManipulator.addFromDrop(c, item, false);
+                                                        storage.sendTakenOut(c, item.getInventoryType());
+                                                } else {
+                                                        c.announce(MaplePacketCreator.getStorageError((byte) 0x0A));
+                                                }
+                                        }
+                                } else if (mode == 5) { // store
+                                        short slot = slea.readShort();
+                                        int itemId = slea.readInt();
+                                        short quantity = slea.readShort();
+                                        MapleInventoryType slotType = ItemConstants.getInventoryType(itemId);
+                                        MapleInventory Inv = chr.getInventory(slotType);
+                                        if (slot < 1 || slot > Inv.getSlotLimit()) { //player inv starts at one
+                                                AutobanFactory.PACKET_EDIT.alert(c.getPlayer(), c.getPlayer().getName() + " tried to packet edit with storage.");
+                                                FilePrinter.print(FilePrinter.EXPLOITS + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + " tried to store item at slot " + slot + "\r\n");
+                                                c.disconnect(true, false);
                                                 return;
-                                        } else {
-                                                chr.gainMeso(-takeoutFee, false);
                                         }
-                                        
-                                        if (MapleInventoryManipulator.checkSpace(c, item.getItemId(), item.getQuantity(), item.getOwner())) {                
-                                                item = storage.takeOut(slot);//actually the same but idc
-                                                String itemName = MapleItemInformationProvider.getInstance().getName(item.getItemId());
-                                                FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + ".txt", c.getPlayer().getName() + " took out " + item.getQuantity() + " " + itemName + " (" + item.getItemId() + ")\r\n");
-                                                chr.setUsedStorage();
-                                                MapleKarmaManipulator.toggleKarmaFlagToUntradeable(item);
-                                                MapleInventoryManipulator.addFromDrop(c, item, false);
-                                                storage.sendTakenOut(c, item.getInventoryType());
+                                        if (quantity < 1 || chr.getItemQuantity(itemId, false) < quantity) {
+                                                c.announce(MaplePacketCreator.enableActions());
+                                                return;
+                                        }
+                                        if (storage.isFull()) {
+                                                c.announce(MaplePacketCreator.getStorageError((byte) 0x11));
+                                                return;
+                                        }
+
+                                        int storeFee = storage.getStoreFee();
+                                        if (chr.getMeso() < storeFee) {
+                                                c.announce(MaplePacketCreator.getStorageError((byte) 0x0B));
                                         } else {
-                                                c.announce(MaplePacketCreator.getStorageError((byte) 0x0A));
+                                                MapleInventoryType invType = ItemConstants.getInventoryType(itemId);
+                                                Item item = chr.getInventory(invType).getItem(slot).copy();
+                                                if (item != null && item.getItemId() == itemId && (item.getQuantity() >= quantity || ItemConstants.isRechargeable(itemId))) {
+                                                        if (ItemConstants.isRechargeable(itemId)) {
+                                                                quantity = item.getQuantity();
+                                                        }
+
+                                                        chr.gainMeso(-storeFee, false, true, false);
+                                                        MapleKarmaManipulator.toggleKarmaFlagToUntradeable(item);
+                                                        MapleInventoryManipulator.removeFromSlot(c, invType, slot, quantity, false);
+                                                        item.setQuantity(quantity);
+                                                        storage.store(item);
+                                                        storage.sendStored(c, ItemConstants.getInventoryType(itemId));
+                                                        String itemName = MapleItemInformationProvider.getInstance().getName(item.getItemId());
+                                                        FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + ".txt", c.getPlayer().getName() + " stored " + item.getQuantity() + " " + itemName + " (" + item.getItemId() + ")\r\n");
+                                                        chr.setUsedStorage();
+                                                }
                                         }
-                                }
-                        } else if (mode == 5) { // store
-                                short slot = slea.readShort();
-                                int itemId = slea.readInt();
-                                short quantity = slea.readShort();
-                                MapleInventoryType slotType = ItemConstants.getInventoryType(itemId);
-                                MapleInventory Inv = chr.getInventory(slotType);
-                                if (slot < 1 || slot > Inv.getSlotLimit()) { //player inv starts at one
-                                        AutobanFactory.PACKET_EDIT.alert(c.getPlayer(), c.getPlayer().getName() + " tried to packet edit with storage.");
-                                        FilePrinter.print(FilePrinter.EXPLOITS + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + " tried to store item at slot " + slot + "\r\n");
-                                        c.disconnect(true, false);
-                                        return;
-                                }
-                                if (quantity < 1 || chr.getItemQuantity(itemId, false) < quantity) {
+                                } else if (mode == 6) { // arrange items
+                                        if(ServerConstants.USE_STORAGE_ITEM_SORT) storage.arrangeItems(c);
                                         c.announce(MaplePacketCreator.enableActions());
-                                        return;
-                                }
-                                if (storage.isFull()) {
-                                        c.announce(MaplePacketCreator.getStorageError((byte) 0x11));
-                                        return;
-                                }
-                                
-                                int storeFee = storage.getStoreFee();
-                                if (chr.getMeso() < storeFee) {
-                                        c.announce(MaplePacketCreator.getStorageError((byte) 0x0B));
-                                } else {
-                                        MapleInventoryType invType = ItemConstants.getInventoryType(itemId);
-                                        Item item = chr.getInventory(invType).getItem(slot).copy();
-                                        if (item != null && item.getItemId() == itemId && (item.getQuantity() >= quantity || ItemConstants.isRechargeable(itemId))) {
-                                                if (ItemConstants.isRechargeable(itemId)) {
-                                                        quantity = item.getQuantity();
+                                } else if (mode == 7) { // meso
+                                        int meso = slea.readInt();
+                                        int storageMesos = storage.getMeso();
+                                        int playerMesos = chr.getMeso();
+                                        if ((meso > 0 && storageMesos >= meso) || (meso < 0 && playerMesos >= -meso)) {
+                                                if (meso < 0 && (storageMesos - meso) < 0) {
+                                                        meso = Integer.MIN_VALUE + storageMesos;
+                                                        if (meso < playerMesos) {
+                                                                c.announce(MaplePacketCreator.enableActions());
+                                                                return;
+                                                        }
+                                                } else if (meso > 0 && (playerMesos + meso) < 0) {
+                                                        meso = Integer.MAX_VALUE - playerMesos;
+                                                        if (meso > storageMesos) {
+                                                                c.announce(MaplePacketCreator.enableActions());
+                                                                return;
+                                                        }
                                                 }
-                                                
-                                                chr.gainMeso(-storeFee, false, true, false);
-                                                MapleKarmaManipulator.toggleKarmaFlagToUntradeable(item);
-                                                MapleInventoryManipulator.removeFromSlot(c, invType, slot, quantity, false);
-                                                item.setQuantity(quantity);
-                                                storage.store(item);
-                                                storage.sendStored(c, ItemConstants.getInventoryType(itemId));
-                                                String itemName = MapleItemInformationProvider.getInstance().getName(item.getItemId());
-                                                FilePrinter.print(FilePrinter.STORAGE + c.getAccountName() + ".txt", c.getPlayer().getName() + " stored " + item.getQuantity() + " " + itemName + " (" + item.getItemId() + ")\r\n");
+                                                storage.setMeso(storageMesos - meso);
+                                                chr.gainMeso(meso, false, true, false);
+                                                FilePrinter.print(FilePrinter.STORAGE + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + (meso > 0 ? " took out " : " stored ") + Math.abs(meso) + " mesos\r\n");
                                                 chr.setUsedStorage();
+                                        } else {
+                                                c.announce(MaplePacketCreator.enableActions());
+                                                return;
                                         }
+                                        storage.sendMeso(c);
+                                } else if (mode == 8) {// close
+                                        storage.close();
                                 }
-                        } else if (mode == 6) { // arrange items
-                                if(ServerConstants.USE_STORAGE_ITEM_SORT) storage.arrangeItems(c);
-                                c.announce(MaplePacketCreator.enableActions());
-                        } else if (mode == 7) { // meso
-                                int meso = slea.readInt();
-                                int storageMesos = storage.getMeso();
-                                int playerMesos = chr.getMeso();
-                                if ((meso > 0 && storageMesos >= meso) || (meso < 0 && playerMesos >= -meso)) {
-                                        if (meso < 0 && (storageMesos - meso) < 0) {
-                                                meso = -2147483648 + storageMesos;
-                                                if (meso < playerMesos) {
-                                                        c.announce(MaplePacketCreator.enableActions());
-                                                        return;
-                                                }
-                                        } else if (meso > 0 && (playerMesos + meso) < 0) {
-                                                meso = 2147483647 - playerMesos;
-                                                if (meso > storageMesos) {
-                                                        c.announce(MaplePacketCreator.enableActions());
-                                                        return;
-                                                }
-                                        }
-                                        storage.setMeso(storageMesos - meso);
-                                        chr.gainMeso(meso, false, true, false);
-                                        FilePrinter.print(FilePrinter.STORAGE + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + (meso > 0 ? " took out " : " stored ") + Math.abs(meso) + " mesos\r\n");
-                                        chr.setUsedStorage();
-                                } else {
-                                        c.announce(MaplePacketCreator.enableActions());
-                                        return;
-                                }
-                                storage.sendMeso(c);
-                        } else if (mode == 8) {// close
-                                storage.close();
+                        } finally {
+                                c.releaseClient();
                         }
-                } finally {
-                        c.unlockClient();
                 }
         }
 }
diff --git a/src/constants/ServerConstants.java b/src/constants/ServerConstants.java
index 03c69079c..0d445deb3 100644
--- a/src/constants/ServerConstants.java
+++ b/src/constants/ServerConstants.java
@@ -54,6 +54,7 @@
     public static final boolean USE_DEBUG = false;                  //Will enable some text prints on the client, oriented for debugging purposes.
     public static final boolean USE_DEBUG_SHOW_INFO_EQPEXP = false; //Prints on the cmd all equip exp gain info.
     public static       boolean USE_DEBUG_SHOW_RCVD_PACKET = false; //Prints on the cmd all received packet ids.
+    public static       boolean USE_SUPPLY_RATE_COUPONS = true;     //Allows rate coupons to be sold through the Cash Shop.
     
     public static final boolean USE_MAXRANGE = true;                //Will send and receive packets from all events on a map, rather than those of only view range.
     public static final boolean USE_MAXRANGE_ECHO_OF_HERO = true;
@@ -104,6 +105,7 @@
     
     //Cash Shop Configuration
     public static final boolean USE_JOINT_CASHSHOP_INVENTORY = true;//Enables usage of a same cash shop inventory for explorers, cygnus and legends. Items from exclusive cash shop inventories won't show up on the shared inventory, though.
+    public static final boolean USE_CLEAR_OUTDATED_COUPONS = true;  //Enables deletion of older code coupon registry from the DB, freeing so-long irrelevant data.
     
     //Maker Configuration
     public static final boolean USE_MAKER_PERMISSIVE_ATKUP = true;  //Allows players to use attack-based strengthening gems on non-weapon items.
@@ -148,7 +150,8 @@
     //Map Monitor Configuration
     public static final int ITEM_EXPIRE_CHECK = 10 * 1000;      //Interval between item expiring tasks on maps, which checks and makes disappear expired items.
     public static final int ITEM_LIMIT_ON_MAP = 200;            //Max number of items allowed on a map.
-    public static final int MAP_VISITED_SIZE = 5;               //Max length for last mapids visited by a player. This is used to recover and update drops on these maps accordingly with player actions.    
+    public static final int MAP_VISITED_SIZE = 5;               //Max length for last mapids visited by a player. This is used to recover and update drops on these maps accordingly with player actions.
+    public static final int MAP_DAMAGE_OVERTIME_INTERVAL = 5000;//Interval in seconds between map environment damage (e.g. El Nath and Aqua Road surrondings).
     
     //Channel Mob Disease Monitor Configuration
     public static final int MOB_STATUS_MONITOR_PROC = 200;     //Frequency in milliseconds between each proc on the mob disease monitor schedule.
@@ -172,7 +175,7 @@
     
     //Other Skills Configuration
     public static final boolean USE_FAST_REUSE_HERO_WILL = true;//Greatly reduce cooldown on Hero's Will.
-    public static final boolean USE_ANTI_IMMUNITY_CRASH = true; //Crash skills additionally removes the mob's invincibility buffs.
+    public static final boolean USE_ANTI_IMMUNITY_CRASH = true; //Crash skills additionally removes the mob's invincibility buffs. Suggestion thanks to Celestial.
     public static final boolean USE_UNDISPEL_HOLY_SHIELD = true;//Holy shield buff also prevents players from suffering dispel from mobs.
     
     //Character Configuration
@@ -200,6 +203,7 @@
     //Equipment Configuration
     public static final boolean USE_EQUIPMNT_LVLUP_SLOTS = true;//Equips can upgrade slots at level up.
     public static final boolean USE_EQUIPMNT_LVLUP_POWER = true;//Enable more powerful stat upgrades at equip level up.
+    public static final boolean USE_EQUIPMNT_LVLUP_CASH = true; //Enable equip leveling up on cash equipments as well.
     public static final boolean USE_SPIKES_AVOID_BANISH = true; //Shoes equipped with spikes prevents mobs from banishing wearer.
     public static final int MAX_EQUIPMNT_LVLUP_STAT_UP = 10000; //Max stat upgrade an equipment can have on a levelup.
     public static final int MAX_EQUIPMNT_STAT = 32767;          //Max stat on an equipment by leveling up.
diff --git a/src/constants/skills/SuperGM.java b/src/constants/skills/SuperGM.java
index 17e7ccb77..e6f9dbee3 100644
--- a/src/constants/skills/SuperGM.java
+++ b/src/constants/skills/SuperGM.java
@@ -33,6 +33,5 @@
     public static final int HIDE = 9101004;
     public static final int RESURRECTION = 9101005;
     public static final int SUPER_DRAGON_ROAR = 9001001;
-    public static final int TELEPORT = 9101007;
     public static final int HYPER_BODY = 9101008;
 }
\ No newline at end of file
diff --git a/src/net/server/Server.java b/src/net/server/Server.java
index 58a16a864..42b3561d3 100644
--- a/src/net/server/Server.java
+++ b/src/net/server/Server.java
@@ -80,6 +80,7 @@
 import client.SkillFactory;
 import client.inventory.Item;
 import client.inventory.ItemFactory;
+import client.inventory.manipulator.MapleCashidGenerator;
 import client.newyear.NewYearCardRecord;
 import constants.ItemConstants;
 import constants.GameConstants;
@@ -90,7 +91,6 @@
 import server.quest.MapleQuest;
 import tools.AutoJCE;
 import tools.DatabaseConnection;
-import tools.FilePrinter;
 import tools.Pair;
 
 public class Server {
@@ -518,6 +518,34 @@ private static long getTimeLeftForNextHour() {
         return couponRates;
     }
     
+    public static void cleanNxcodeCoupons(Connection con) throws SQLException {
+        if (!ServerConstants.USE_CLEAR_OUTDATED_COUPONS) return;
+        
+        long timeClear = System.currentTimeMillis() - 14 * 24 * 60 * 60 * 1000;
+        
+        PreparedStatement ps = con.prepareStatement("SELECT * FROM nxcode WHERE expiration <= ?");
+        ps.setLong(1, timeClear);
+        ResultSet rs = ps.executeQuery();
+
+        if (!rs.isLast()) {
+            PreparedStatement ps2 = con.prepareStatement("DELETE FROM nxcode_items WHERE codeid = ?");
+            while (rs.next()) {
+                ps2.setInt(1, rs.getInt("id"));
+                ps2.addBatch();
+            }
+            ps2.executeBatch();
+            ps2.close();
+            
+            ps2 = con.prepareStatement("DELETE FROM nxcode WHERE expiration <= ?");
+            ps2.setLong(1, timeClear);
+            ps2.executeUpdate();
+            ps2.close();
+        }
+        
+        rs.close();
+        ps.close();
+    }
+    
     private void loadCouponRates(Connection c) throws SQLException {
         PreparedStatement ps = c.prepareStatement("SELECT couponid, rate FROM nxcoupons");
         ResultSet rs = ps.executeQuery();
@@ -818,6 +846,7 @@ public void init() {
             ps.executeUpdate();
             ps.close();
             
+            cleanNxcodeCoupons(c);
             loadCouponRates(c);
             updateActiveCoupons();
             
@@ -825,6 +854,9 @@ public void init() {
         } catch (SQLException sqle) {
             sqle.printStackTrace();
         }
+        
+        MapleCashidGenerator.loadExistentCashIdsFromDb();
+        
         IoBuffer.setUseDirectBuffer(false);
         IoBuffer.setAllocator(new SimpleBufferAllocator());
         acceptor = new NioSocketAcceptor();
@@ -893,17 +925,6 @@ public void init() {
         online = true;
     }
 
-    public void shutdown() {
-    	try {
-	        TimerManager.getInstance().stop();
-	        acceptor.unbind();
-    	} catch (NullPointerException e) {
-    		FilePrinter.printError(FilePrinter.EXCEPTION_CAUGHT, e);
-    	}
-        System.out.println("Server offline.");
-        System.exit(0);// BOEIEND :D
-    }
-
     public static void main(String args[]) {
         System.setProperty("wzpath", "wz");
         Security.setProperty("crypto.policy", "unlimited");
diff --git a/src/net/server/channel/Channel.java b/src/net/server/channel/Channel.java
index 5285ec293..02f08c9a6 100644
--- a/src/net/server/channel/Channel.java
+++ b/src/net/server/channel/Channel.java
@@ -198,6 +198,7 @@ public final void shutdown() {
             System.out.println("Shutting down Channel " + channel + " on World " + world);
             
             closeAllMerchants();
+            disconnectAwayPlayers();
             players.disconnectAll();
             
             if(respawnTask != null) {
@@ -314,6 +315,10 @@ public int getWorld() {
         return world;
     }
     
+    public World getWorldServer() {
+        return Server.getInstance().getWorld(world);
+    }
+    
     public void addPlayer(MapleCharacter chr) {
         players.addPlayer(chr);
         chr.announce(MaplePacketCreator.serverMessage(serverMessage));
@@ -393,6 +398,16 @@ public void removePlayerAway(int chrId) {
     public boolean canUninstall() {
         return players.getSize() == 0 && playersAway.isEmpty();
     }
+    
+    private void disconnectAwayPlayers() {
+        World wserv = getWorldServer();
+        for (Integer cid : playersAway) {
+            MapleCharacter chr = wserv.getPlayerStorage().getCharacterById(cid);
+            if (chr != null && chr.isLoggedin()) {
+                chr.getClient().disconnect(true, false);
+            }
+        }
+    }
         
     public class respawnMaps implements Runnable {
 
@@ -465,7 +480,7 @@ public boolean finishedShutdown() {
     public void setServerMessage(String message) {
         this.serverMessage = message;
         broadcastPacket(MaplePacketCreator.serverMessage(message));
-        Server.getInstance().getWorld(world).resetDisabledServerMessages();
+        getWorldServer().resetDisabledServerMessages();
     }
     
     private static String [] getEvents(){
@@ -692,7 +707,7 @@ public void removeMiniDungeon(int dungeonid) {
             lock.unlock();
         }
         
-        World wserv = Server.getInstance().getWorld(world);
+        World wserv = getWorldServer();
         
         Pair<Integer, Integer> coupleId = wserv.getMarriageQueuedCouple(ret);
         Pair<Boolean, Set<Integer>> typeGuests = wserv.removeMarriageQueued(ret);
@@ -704,7 +719,7 @@ public void removeMiniDungeon(int dungeonid) {
     }
     
     public boolean isWeddingReserved(Integer weddingId) {
-        World wserv = Server.getInstance().getWorld(world);
+        World wserv = getWorldServer();
         
         lock.lock();
         try {
@@ -746,7 +761,7 @@ public int getWeddingReservationStatus(Integer weddingId, boolean cathedral) {
     public int pushWeddingReservation(Integer weddingId, boolean cathedral, boolean premium, Integer groomId, Integer brideId) {
         if(weddingId == null || isWeddingReserved(weddingId)) return -1;
         
-        World wserv = Server.getInstance().getWorld(world);
+        World wserv = getWorldServer();
         wserv.putMarriageQueued(weddingId, cathedral, premium, groomId, brideId);
         
         lock.lock();
@@ -935,7 +950,7 @@ public String getWeddingReservationTimeLeft(Integer weddingId) {
     public Pair<Integer, Integer> getWeddingCoupleForGuest(int guestId, boolean cathedral) {
         lock.lock();
         try {
-            return (isOngoingWeddingGuest(cathedral, guestId)) ? Server.getInstance().getWorld(world).getRelationshipCouple(getOngoingWedding(cathedral)) : null;
+            return (isOngoingWeddingGuest(cathedral, guestId)) ? getWorldServer().getRelationshipCouple(getOngoingWedding(cathedral)) : null;
         } finally {
             lock.unlock();
         }
@@ -1038,7 +1053,7 @@ public void unregisterFaceExpression(int mapid, MapleCharacter chr) {
     
     public void debugMarriageStatus() {
         System.out.println(" ----- WORLD DATA -----");
-        Server.getInstance().getWorld(world).debugMarriageStatus();
+        getWorldServer().debugMarriageStatus();
         
         System.out.println(" ----- CH. " + channel + " -----");
         System.out.println(" ----- CATHEDRAL -----");
diff --git a/src/net/server/channel/handlers/CancelChairHandler.java b/src/net/server/channel/handlers/CancelChairHandler.java
index e226841e1..0b6693be5 100644
--- a/src/net/server/channel/handlers/CancelChairHandler.java
+++ b/src/net/server/channel/handlers/CancelChairHandler.java
@@ -24,7 +24,6 @@
 import client.MapleClient;
 import client.MapleCharacter;
 import net.AbstractMaplePacketHandler;
-import tools.MaplePacketCreator;
 import tools.data.input.SeekableLittleEndianAccessor;
 
 public final class CancelChairHandler extends AbstractMaplePacketHandler {
@@ -35,21 +34,6 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
         MapleCharacter mc = c.getPlayer();
         if(!mc.isLoggedinWorld()) return;
         
-        if (id == -1) { // Cancel Chair
-            mc.setChair(0);
-            if(mc.unregisterChairBuff()) {
-                c.getPlayer().getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.cancelForeignChairSkillEffect(mc.getId()), false);
-            }
-            
-            c.announce(MaplePacketCreator.cancelChair(-1));
-            c.getPlayer().getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showChair(c.getPlayer().getId(), 0), false);
-        } else { // Use In-Map Chair
-            mc.setChair(id);
-            if(mc.registerChairBuff()) {
-                c.getPlayer().getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.giveForeignChairSkillEffect(mc.getId()), false);
-            }
-            
-            c.announce(MaplePacketCreator.cancelChair(id));
-        }
+        mc.sitChair(id == -1 ? 0 : id);
     }
 }
diff --git a/src/net/server/channel/handlers/CashOperationHandler.java b/src/net/server/channel/handlers/CashOperationHandler.java
index a44097c85..2e2659266 100644
--- a/src/net/server/channel/handlers/CashOperationHandler.java
+++ b/src/net/server/channel/handlers/CashOperationHandler.java
@@ -38,8 +38,10 @@
 import server.CashShop.CashItem;
 import server.CashShop.CashItemFactory;
 import client.inventory.manipulator.MapleInventoryManipulator;
+import constants.ServerConstants;
 import tools.FilePrinter;
 import tools.MaplePacketCreator;
+import tools.Pair;
 import tools.data.input.SeekableLittleEndianAccessor;
 
 public final class CashOperationHandler extends AbstractMaplePacketHandler {
@@ -62,18 +64,20 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
             CashItem cItem = CashItemFactory.getItem(snCS);
             if (!canBuy(cItem, cs.getCash(useNX))) {
                 FilePrinter.printError(FilePrinter.ITEM, "Denied to sell cash item with SN " + cItem.getSN());
-                c.announce(MaplePacketCreator.enableActions());
-                return;
-            }
-            
-            if(ItemConstants.isCashStore(cItem.getItemId()) && chr.getLevel() < 16) {
-                c.announce(MaplePacketCreator.enableActions());
+                c.enableCSActions();
                 return;
             }
             
             if (action == 0x03) { // Item
-                if(ItemConstants.isMapleLife(cItem.getItemId()) && chr.getLevel() < 30) {
-                    c.announce(MaplePacketCreator.enableActions());
+                if (ItemConstants.isCashStore(cItem.getItemId()) && chr.getLevel() < 16) {
+                    c.enableCSActions();
+                    return;
+                } else if (ItemConstants.isRateCoupon(cItem.getItemId()) && !ServerConstants.USE_SUPPLY_RATE_COUPONS) {
+                    chr.dropMessage(1, "Rate coupons are currently unavailable to purchase.");
+                    c.enableCSActions();
+                    return;
+                } else if (ItemConstants.isMapleLife(cItem.getItemId()) && chr.getLevel() < 30) {
+                    c.enableCSActions();
                     return;
                 }
                 
@@ -95,20 +99,17 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
             Map<String, String> recipient = MapleCharacter.getCharacterFromDatabase(slea.readMapleAsciiString());
             String message = slea.readMapleAsciiString();
             if (!canBuy(cItem, cs.getCash(4)) || message.length() < 1 || message.length() > 73) {
-                c.announce(MaplePacketCreator.enableActions());
+                c.enableCSActions();
                 return;
             }
             if (!checkBirthday(c, birthday)) {
                 c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC4));
-                c.announce(MaplePacketCreator.enableActions());
                 return;
             } else if (recipient == null) {
                 c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xA9));
-                c.announce(MaplePacketCreator.enableActions());
                 return;
             } else if (recipient.get("accountid").equals(String.valueOf(c.getAccID()))) {
                 c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xA8));
-                c.announce(MaplePacketCreator.enableActions());
                 return;
             }
             cs.gift(Integer.parseInt(recipient.get("id")), chr.getName(), message, cItem.getSN());
@@ -139,7 +140,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
             if (mode == 0) {
                 byte type = slea.readByte();
                 if (cs.getCash(cash) < 4000) {
-                    c.announce(MaplePacketCreator.enableActions());
+                    c.enableCSActions();
                     return;
                 }
                 if (chr.gainSlots(type, 4, false)) {
@@ -151,7 +152,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 CashItem cItem = CashItemFactory.getItem(slea.readInt());
                 int type = (cItem.getItemId() - 9110000) / 1000;
                 if (!canBuy(cItem, cs.getCash(cash))) {
-                    c.announce(MaplePacketCreator.enableActions());
+                    c.enableCSActions();
                     return;
                 }
                 if (chr.gainSlots(type, 8, false)) {
@@ -166,7 +167,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
             byte mode = slea.readByte();
             if (mode == 0) {
                 if (cs.getCash(cash) < 4000) {
-                    c.announce(MaplePacketCreator.enableActions());
+                    c.enableCSActions();
                     return;
                 }
                 if (chr.getStorage().gainSlots(4)) {
@@ -181,7 +182,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 CashItem cItem = CashItemFactory.getItem(slea.readInt());
 
                 if (!canBuy(cItem, cs.getCash(cash))) {
-                    c.announce(MaplePacketCreator.enableActions());
+                    c.enableCSActions();
                     return;
                 }
                 if (chr.getStorage().gainSlots(8)) {
@@ -196,7 +197,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
             CashItem cItem = CashItemFactory.getItem(slea.readInt());
 
             if (!canBuy(cItem, cs.getCash(cash))) {
-                c.announce(MaplePacketCreator.enableActions());
+                c.enableCSActions();
                 return;
             }
 
@@ -206,13 +207,13 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 c.announce(MaplePacketCreator.showCash(chr));
             } else {
                 chr.dropMessage(1, "You have already used up all 12 extra character slots.");
-                c.announce(MaplePacketCreator.enableActions());
+                c.enableCSActions();
                 return;
             }
         } else if (action == 0x0D) { // Take from Cash Inventory
             Item item = cs.findByCashId(slea.readInt());
             if (item == null) {
-                c.announce(MaplePacketCreator.enableActions());
+                c.enableCSActions();
                 return;
             }
             if (chr.getInventory(item.getInventoryType()).addItem(item) != -1) {
@@ -240,11 +241,11 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
             MapleInventory mi = chr.getInventory(MapleInventoryType.getByType(invType));
             Item item = mi.findByCashId(cashId);
             if (item == null) {
-                c.announce(MaplePacketCreator.enableActions());
+                c.enableCSActions();
                 return;
             } else if(c.getPlayer().getPetIndex(item.getPetId()) > -1) {
                 chr.getClient().announce(MaplePacketCreator.serverNotice(1, "You cannot put the pet you currently equip into the Cash Shop inventory."));
-                c.announce(MaplePacketCreator.enableActions());
+                c.enableCSActions();
                 return;
             }
             cs.addToInventory(item);
@@ -265,19 +266,19 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 	
                   /*  if (partner.getGender() == chr.getGender()) {
                         chr.dropMessage("You and your partner are the same gender, please buy a friendship ring.");
-                        c.announce(MaplePacketCreator.enableActions());
+                        c.enableCSActions();
                         return;
                     }*/ //Gotta let them faggots marry too, hence why this is commented out <3 
                 	
                     if(itemRing.toItem() instanceof Equip) {
                         Equip eqp = (Equip) itemRing.toItem();
-                        int ringid = MapleRing.createRing(itemRing.getItemId(), chr, partner);
-                        eqp.setRingId(ringid);
+                        Pair<Integer, Integer> rings = MapleRing.createRing(itemRing.getItemId(), chr, partner);
+                        eqp.setRingId(rings.getLeft());
                         cs.addToInventory(eqp);
                         c.announce(MaplePacketCreator.showBoughtCashItem(eqp, c.getAccID()));
-                        cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), (ringid + 1));
+                        cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), rings.getRight());
                         cs.gainCash(toCharge, itemRing, chr.getWorld());
-                        chr.addCrushRing(MapleRing.loadFromDb(ringid));
+                        chr.addCrushRing(MapleRing.loadFromDb(rings.getLeft()));
                         try {
                             chr.sendNote(partner.getName(), text, (byte) 1);
                         } catch (SQLException ex) {
@@ -288,17 +289,33 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 }
             } else {
                 c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC4));
-                c.announce(MaplePacketCreator.enableActions());
             }
                 
             c.announce(MaplePacketCreator.showCash(c.getPlayer()));
-        } else if (action == 0x20) { // everything is 1 meso...
-            int itemId = CashItemFactory.getItem(slea.readInt()).getItemId();
+        } else if (action == 0x20) {
+            int serialNumber = slea.readInt();  // thanks GabrielSin for detecting a potential exploit with 1 meso cash items.
+            if (serialNumber / 10000000 != 8) {
+                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC0));
+                return;
+            }
+            
+            CashItem item = CashItemFactory.getItem(serialNumber);
+            if (item == null || !item.isOnSale()) {
+                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC0));
+                return;
+            }
+            
+            int itemId = item.getItemId();
+            int itemPrice = item.getPrice();
+            if (itemPrice <= 0) {
+                c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC0));
+                return;
+            }
             
-            if (chr.getMeso() > 0) {
+            if (chr.getMeso() >= itemPrice) {
                 if (chr.canHold(itemId)) {
-                    chr.gainMeso(-1, false);
-                    MapleInventoryManipulator.addById(c, itemId, (short) 1);
+                    chr.gainMeso(-itemPrice, false);
+                    MapleInventoryManipulator.addById(c, itemId, (short) 1, "", -1);
                     c.announce(MaplePacketCreator.showBoughtQuestItem(itemId));
                 }
             }
@@ -321,13 +338,13 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                     // Need to check to make sure its actually an equip and the right SN...
                     if(itemRing.toItem() instanceof Equip) {
                         Equip eqp = (Equip) itemRing.toItem();
-                        int ringid = MapleRing.createRing(itemRing.getItemId(), chr, partner);
-                        eqp.setRingId(ringid);
+                        Pair<Integer, Integer> rings = MapleRing.createRing(itemRing.getItemId(), chr, partner);
+                        eqp.setRingId(rings.getLeft());
                         cs.addToInventory(eqp);
                         c.announce(MaplePacketCreator.showBoughtCashItem(eqp, c.getAccID()));
-                        cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), (ringid + 1));
+                        cs.gift(partner.getId(), chr.getName(), text, eqp.getSN(), rings.getRight());
                         cs.gainCash(payment, -itemRing.getPrice());
-                        chr.addFriendshipRing(MapleRing.loadFromDb(ringid));
+                        chr.addFriendshipRing(MapleRing.loadFromDb(rings.getLeft()));
                         try {
                             chr.sendNote(partner.getName(), text, (byte) 1);
                         } catch (SQLException ex) {
@@ -338,7 +355,6 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 }
             } else {
                 c.announce(MaplePacketCreator.showCashShopMessage((byte) 0xC4));
-                c.announce(MaplePacketCreator.enableActions());
             }
                 
             c.announce(MaplePacketCreator.showCash(c.getPlayer()));
diff --git a/src/net/server/channel/handlers/CloseRangeDamageHandler.java b/src/net/server/channel/handlers/CloseRangeDamageHandler.java
index d2e46275c..00dc153da 100644
--- a/src/net/server/channel/handlers/CloseRangeDamageHandler.java
+++ b/src/net/server/channel/handlers/CloseRangeDamageHandler.java
@@ -50,7 +50,7 @@
     @Override
     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
         MapleCharacter chr = c.getPlayer();
-        chr.setPetLootCd(currentServerTime());
+        //chr.setPetLootCd(currentServerTime());
         
         /*long timeElapsed = currentServerTime() - chr.getAutobanManager().getLastSpam(8);
         if(timeElapsed < 300) {
diff --git a/src/net/server/channel/handlers/CouponCodeHandler.java b/src/net/server/channel/handlers/CouponCodeHandler.java
index 30f275708..f9c9ae03e 100644
--- a/src/net/server/channel/handlers/CouponCodeHandler.java
+++ b/src/net/server/channel/handlers/CouponCodeHandler.java
@@ -4,6 +4,8 @@
 		       Matthias Butz <matze@odinms.de>
 		       Jan Christian Meyer <vimes@odinms.de>
 
+    Copyleft (L) 2016 - 2018 RonanLana (HeavenMS)
+
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU Affero General Public License as
     published by the Free Software Foundation version 3 as published by
@@ -21,107 +23,228 @@
 */
 package net.server.channel.handlers;
 
-import java.sql.SQLException;
 import client.MapleClient;
+import client.MapleCharacter;
+import client.inventory.Item;
+import client.inventory.manipulator.MapleInventoryManipulator;
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.util.HashMap;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
 import net.AbstractMaplePacketHandler;
-import client.inventory.manipulator.MapleInventoryManipulator;
+import net.server.Server;
+import server.CashShop;
+import server.MapleItemInformationProvider;
 import tools.DatabaseConnection;
+import tools.FilePrinter;
 import tools.MaplePacketCreator;
+import tools.Pair;
 import tools.data.input.SeekableLittleEndianAccessor;
 
 /**
  *
  * @author Penguins (Acrylic)
+ * @author Ronan (HeavenMS)
  */
 public final class CouponCodeHandler extends AbstractMaplePacketHandler {
-    public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
-        slea.skip(2);
-        String code = slea.readMapleAsciiString();
-        boolean validcode = false;
-        int type = -1;
-        int item = -1;
-        validcode = getNXCodeValid(code.toUpperCase(), validcode);
-        if (validcode) {
-            type = getNXCode(code, "type");
-            item = getNXCode(code, "item");
-            if (type != 5) {
-                try {
-                    Connection con = DatabaseConnection.getConnection();
-                    PreparedStatement ps = con.prepareStatement("UPDATE nxcode SET `valid` = 0 WHERE code = " + code);
-                    ps.executeUpdate();
-                    ps.close();
-                    ps = con.prepareStatement("UPDATE nxcode SET `user` = ? WHERE code = ?");
-                    ps.setString(1, c.getPlayer().getName());
-                    ps.setString(2, code);
-                    ps.executeUpdate();
-                    ps.close();
-                    con.close();
-                } catch (SQLException e) {
-                    e.printStackTrace();
+    
+    private static List<Pair<Integer, Pair<Integer, Integer>>> getNXCodeItems(MapleCharacter chr, Connection con, int codeid) throws SQLException {
+        Map<Integer, Integer> couponItems = new HashMap<>();
+        Map<Integer, Integer> couponPoints = new HashMap<>(5);
+        
+        PreparedStatement ps = con.prepareStatement("SELECT * FROM nxcode_items WHERE codeid = ?");
+        ps.setInt(1, codeid);
+
+        ResultSet rs = ps.executeQuery();
+        while (rs.next()) {
+            int type = rs.getInt("type"), item = rs.getInt("item");
+            
+            if (type < 5) {
+                Integer i = couponPoints.get(type);
+                if (i != null) {
+                    couponPoints.put(type, i + item);
+                } else {
+                    couponPoints.put(type, item);
+                }
+            } else {
+                int quantity = rs.getInt("quantity");
+                
+                Integer i = couponItems.get(item);
+                if (i != null) {
+                    couponItems.put(item, i + quantity);
+                } else {
+                    couponItems.put(item, quantity);
                 }
             }
-            switch (type) {
-                case 0:
-                case 1:
-                case 2:
-                    c.getPlayer().getCashShop().gainCash(type, item);
-                    break;
-                case 3:
-                    c.getPlayer().getCashShop().gainCash(0, item);
-                    c.getPlayer().getCashShop().gainCash(2, (item / 5000));
-                    break;
-                case 4:
-                    MapleInventoryManipulator.addById(c, item, (short) 1, null, -1, -1);
-                    c.announce(MaplePacketCreator.showCouponRedeemedItem(item));
-                    break;
-                case 5:
-                    c.getPlayer().getCashShop().gainCash(0, item);
-                    break;
+        }
+        
+        rs.close();
+        ps.close();
+        
+        List<Pair<Integer, Pair<Integer, Integer>>> ret = new LinkedList<>();
+        if (!couponItems.isEmpty()) {
+            for (Entry<Integer, Integer> e : couponItems.entrySet()) {
+                int item = e.getKey(), qty = e.getValue();
+                
+                if (MapleItemInformationProvider.getInstance().getName(item) == null) {
+                    item = 4000000;
+                    qty = 1;
+                    
+                    FilePrinter.printError(FilePrinter.UNHANDLED_EVENT, "Error trying to redeem itemid " + item + " from codeid " + codeid + ".");
+                }
+                
+                if (!chr.canHold(item, qty)) {
+                    return null;
+                }
+                
+                ret.add(new Pair<>(5, new Pair<>(item, qty)));
             }
-            c.announce(MaplePacketCreator.showCash(c.getPlayer()));
-        } else {
-            //c.announce(MaplePacketCreator.wrongCouponCode());
         }
-        c.announce(MaplePacketCreator.enableCSUse());
+        
+        if (!couponPoints.isEmpty()) {
+            for (Entry<Integer, Integer> e : couponPoints.entrySet()) {
+                ret.add(new Pair<>(e.getKey(), new Pair<>(e.getValue(), 777)));
+            }
+        }
+        
+        return ret;
     }
-
-    private int getNXCode(String code, String type) {
-        int item = -1;
+    
+    private static Pair<Integer, List<Pair<Integer, Pair<Integer, Integer>>>> getNXCodeResult(MapleCharacter chr, String code) {
+        MapleClient c = chr.getClient();
+        List<Pair<Integer, Pair<Integer, Integer>>> ret = new LinkedList<>();
         try {
+            if (!c.attemptCsCoupon()) {
+                return new Pair<>(-5, null);
+            }
+            
             Connection con = DatabaseConnection.getConnection();
-            PreparedStatement ps = con.prepareStatement("SELECT `" + type + "` FROM nxcode WHERE code = ?");
+            PreparedStatement ps = con.prepareStatement("SELECT * FROM nxcode WHERE code = ?");
             ps.setString(1, code);
+            
             ResultSet rs = ps.executeQuery();
-            while (rs.next()) {
-                item = rs.getInt(type);
+            if (!rs.next()) {
+                return new Pair<>(-1, null);
+            }
+            
+            if (rs.getString("retriever") != null) {
+                return new Pair<>(-2, null);
+            }
+            
+            if (rs.getLong("expiration") < Server.getInstance().getCurrentTime()) {
+                return new Pair<>(-3, null);
             }
+            
+            int codeid = rs.getInt("id");
             rs.close();
+            ps.close();
+            
+            ret = getNXCodeItems(chr, con, codeid);
+            if (ret == null) {
+                return new Pair<>(-4, null);
+            }
+            
+            ps = con.prepareStatement("UPDATE nxcode SET retriever = ? WHERE code = ?");
+            ps.setString(1, chr.getName());
+            ps.setString(2, code);
+            ps.executeUpdate();
+            
             ps.close();
             con.close();
         } catch (SQLException ex) {
             ex.printStackTrace();
         }
-        return item;
+        
+        c.resetCsCoupon();
+        return new Pair<>(0, ret);
     }
+    
+    private static int parseCouponResult(int res) {
+        switch (res) {
+            case -1:
+                return 0xB0;
+                
+            case -2:
+                return 0xB3;
+            
+            case -3:
+                return 0xB2;
+            
+            case -4:
+                return 0xBB;
+                
+            default:
+                return 0xB1;
+        }
+    }
+    
+    @Override
+    public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
+        slea.skip(2);
+        String code = slea.readMapleAsciiString();
+        
+        if (c.tryacquireClient()) {
+            try {
+                Pair<Integer, List<Pair<Integer, Pair<Integer, Integer>>>> codeRes = getNXCodeResult(c.getPlayer(), code.toUpperCase());
+                int type = codeRes.getLeft();
+                if (type < 0) {
+                    c.announce(MaplePacketCreator.showCashShopMessage((byte) parseCouponResult(type)));
+                } else {
+                    List<Item> couponPackage = new LinkedList<>();
 
-    private boolean getNXCodeValid(String code, boolean validcode) {
-        try {
-            Connection con = DatabaseConnection.getConnection();
-            PreparedStatement ps = con.prepareStatement("SELECT `valid` FROM nxcode WHERE code = ?");
-            ps.setString(1, code);
-            ResultSet rs = ps.executeQuery();
-            while (rs.next()) {
-                validcode = rs.getInt("valid") != 0;
+                    for (Pair<Integer, Pair<Integer, Integer>> p : codeRes.getRight()) {
+                        type = p.getLeft();
+                        int item = p.getRight().getLeft();
+
+                        CashShop cs = c.getPlayer().getCashShop();
+                        switch (type) {
+                            case 0:
+                            case 4:
+                                cs.gainCash(1, item);   //nxCredit
+                                break;
+                            case 1:
+                                cs.gainCash(2, item);   //maplePoint
+                                break;
+                            case 2:
+                                cs.gainCash(4, item);   //nxPrepaid
+                                break;
+                            case 3:
+                                cs.gainCash(1, item);
+                                cs.gainCash(4, (item / 5000));
+                                break;
+
+                            default:
+                                short qty = p.getRight().getRight().shortValue();
+                                if (MapleItemInformationProvider.getInstance().isCash(item)) {
+                                    Item it = CashShop.generateCouponItem(item, qty);
+
+                                    cs.addToInventory(it);
+                                    couponPackage.add(it);
+                                } else {
+                                    MapleInventoryManipulator.addById(c, item, qty, "", -1);
+                                }
+
+                                //c.announce(MaplePacketCreator.showCouponRedeemedItem(item));
+                                break;
+                        }
+                    }
+
+                    if (!couponPackage.isEmpty()) {
+                        c.announce(MaplePacketCreator.showBoughtCashPackage(couponPackage, c.getAccID()));
+                    } else {
+                        c.announce(MaplePacketCreator.showBoughtQuestItem(0));
+                    }
+
+                    c.enableCSActions();
+                }
+            } finally {
+                c.releaseClient();
             }
-            rs.close();
-            ps.close();
-            con.close();
-        } catch (SQLException ex) {
-            ex.printStackTrace();
         }
-        return validcode;
     }
 }
diff --git a/src/net/server/channel/handlers/EnterMTSHandler.java b/src/net/server/channel/handlers/EnterMTSHandler.java
index 057b81052..116530e22 100644
--- a/src/net/server/channel/handlers/EnterMTSHandler.java
+++ b/src/net/server/channel/handlers/EnterMTSHandler.java
@@ -111,7 +111,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 ex.printStackTrace();
             }
             chr.getCashShop().open(true);// xD
-            c.announce(MaplePacketCreator.enableCSUse());
+            c.enableCSActions();
             c.announce(MaplePacketCreator.MTSWantedListingOver(0, 0));
             c.announce(MaplePacketCreator.showMTSCash(c.getPlayer()));
             List<MTSItemInfo> items = new ArrayList<>();
diff --git a/src/net/server/channel/handlers/FaceExpressionHandler.java b/src/net/server/channel/handlers/FaceExpressionHandler.java
index ed65bd715..dd6d0cb57 100644
--- a/src/net/server/channel/handlers/FaceExpressionHandler.java
+++ b/src/net/server/channel/handlers/FaceExpressionHandler.java
@@ -40,13 +40,13 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
             }
         }
         
-        if(c.trylockClient()) {
+        if(c.tryacquireClient()) {
             try {   // expecting players never intends to wear the emote 0 (default face, that changes back after 5sec timeout)
                 if (emote != 0 && chr.isLoggedinWorld()) {
                     chr.changeFaceExpression(emote);
                 }
             } finally {
-                c.unlockClient();
+                c.releaseClient();
             }
         }
     }
diff --git a/src/net/server/channel/handlers/ItemRewardHandler.java b/src/net/server/channel/handlers/ItemRewardHandler.java
index 1b9b8e687..a4da7b00d 100644
--- a/src/net/server/channel/handlers/ItemRewardHandler.java
+++ b/src/net/server/channel/handlers/ItemRewardHandler.java
@@ -60,7 +60,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                     }
                     MapleInventoryManipulator.addFromDrop(c, item, false);
                 } else {
-                    MapleInventoryManipulator.addById(c, reward.itemid, reward.quantity);
+                    MapleInventoryManipulator.addById(c, reward.itemid, reward.quantity, "", -1);
                 }
                 MapleInventoryManipulator.removeById(c, MapleInventoryType.USE, itemId, 1, false, false);
                 if (reward.worldmsg != null) {
diff --git a/src/net/server/channel/handlers/MTSHandler.java b/src/net/server/channel/handlers/MTSHandler.java
index 39ae1ab8b..054e6f726 100644
--- a/src/net/server/channel/handlers/MTSHandler.java
+++ b/src/net/server/channel/handlers/MTSHandler.java
@@ -214,7 +214,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                     c.getPlayer().gainMeso(-5000, false);
                     c.announce(MaplePacketCreator.MTSConfirmSell());
                     c.announce(getMTS(1, 0, 0));
-                    c.announce(MaplePacketCreator.enableCSUse());
+                    c.enableCSActions();
                     c.announce(MaplePacketCreator.transferInventory(getTransfer(c.getPlayer().getId())));
                     c.announce(MaplePacketCreator.notYetSoldInv(getNotYetSold(c.getPlayer().getId())));
                 }
@@ -240,7 +240,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 }
                 c.getPlayer().changeTab(tab);
                 c.getPlayer().changeType(type);
-                c.announce(MaplePacketCreator.enableCSUse());
+                c.enableCSActions();
                 c.announce(MaplePacketCreator.transferInventory(getTransfer(c.getPlayer().getId())));
                 c.announce(MaplePacketCreator.notYetSoldInv(getNotYetSold(c.getPlayer().getId())));
             } else if (op == 6) { //search
@@ -253,7 +253,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 c.getPlayer().changeTab(tab);
                 c.getPlayer().changeType(type);
                 c.getPlayer().changeCI(ci);
-                c.announce(MaplePacketCreator.enableCSUse());
+                c.enableCSActions();
                 c.announce(MaplePacketCreator.enableActions());
                 c.announce(getMTSSearch(tab, type, ci, search, c.getPlayer().getCurrentPage()));
                 c.announce(MaplePacketCreator.showMTSCash(c.getPlayer()));
@@ -277,7 +277,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 } catch (SQLException e) {
                     e.printStackTrace();
                 }
-                c.announce(MaplePacketCreator.enableCSUse());
+                c.enableCSActions();
                 c.announce(getMTS(c.getPlayer().getCurrentTab(), c.getPlayer().getCurrentType(), c.getPlayer().getCurrentPage()));
                 c.announce(MaplePacketCreator.notYetSoldInv(getNotYetSold(c.getPlayer().getId())));
                 c.announce(MaplePacketCreator.transferInventory(getTransfer(c.getPlayer().getId())));
@@ -331,7 +331,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                             pse.executeUpdate();
                         }
                         MapleInventoryManipulator.addFromDrop(c, i, false);
-                        c.announce(MaplePacketCreator.enableCSUse());
+                        c.enableCSActions();
                         c.announce(getCart(c.getPlayer().getId()));
                         c.announce(getMTS(c.getPlayer().getCurrentTab(), c.getPlayer().getCurrentType(), c.getPlayer().getCurrentPage()));
                         c.announce(MaplePacketCreator.MTSConfirmTransfer(i.getQuantity(), i.getPosition()));
@@ -374,7 +374,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                     e.printStackTrace();
                 }
                 c.announce(getMTS(c.getPlayer().getCurrentTab(), c.getPlayer().getCurrentType(), c.getPlayer().getCurrentPage()));
-                c.announce(MaplePacketCreator.enableCSUse());
+                c.enableCSActions();
                 c.announce(MaplePacketCreator.enableActions());
                 c.announce(MaplePacketCreator.transferInventory(getTransfer(c.getPlayer().getId())));
                 c.announce(MaplePacketCreator.notYetSoldInv(getNotYetSold(c.getPlayer().getId())));
@@ -393,7 +393,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                     e.printStackTrace();
                 }
                 c.announce(getCart(c.getPlayer().getId()));
-                c.announce(MaplePacketCreator.enableCSUse());
+                c.enableCSActions();
                 c.announce(MaplePacketCreator.transferInventory(getTransfer(c.getPlayer().getId())));
                 c.announce(MaplePacketCreator.notYetSoldInv(getNotYetSold(c.getPlayer().getId())));
             } else if (op == 12) { //put item up for auction
@@ -445,7 +445,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                             pse.executeUpdate();
                             pse.close();
                             c.getPlayer().getCashShop().gainCash(4, -price);
-                            c.announce(MaplePacketCreator.enableCSUse());
+                            c.enableCSActions();
                             c.announce(getMTS(c.getPlayer().getCurrentTab(), c.getPlayer().getCurrentType(), c.getPlayer().getCurrentPage()));
                             c.announce(MaplePacketCreator.MTSConfirmBuy());
                             c.announce(MaplePacketCreator.showMTSCash(c.getPlayer()));
@@ -507,7 +507,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                             pse.close();
                             c.getPlayer().getCashShop().gainCash(4, -price);
                             c.announce(getCart(c.getPlayer().getId()));
-                            c.announce(MaplePacketCreator.enableCSUse());
+                            c.enableCSActions();
                             c.announce(MaplePacketCreator.MTSConfirmBuy());
                             c.announce(MaplePacketCreator.showMTSCash(c.getPlayer()));
                             c.announce(MaplePacketCreator.transferInventory(getTransfer(c.getPlayer().getId())));
diff --git a/src/net/server/channel/handlers/MagicDamageHandler.java b/src/net/server/channel/handlers/MagicDamageHandler.java
index f7df49881..b2288be8a 100644
--- a/src/net/server/channel/handlers/MagicDamageHandler.java
+++ b/src/net/server/channel/handlers/MagicDamageHandler.java
@@ -39,7 +39,7 @@
 	@Override
 	public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
 		MapleCharacter chr = c.getPlayer();
-                chr.setPetLootCd(currentServerTime());
+                //chr.setPetLootCd(currentServerTime());
 
 		/*long timeElapsed = currentServerTime() - chr.getAutobanManager().getLastSpam(8);
 		if(timeElapsed < 300) {
diff --git a/src/net/server/channel/handlers/PetFoodHandler.java b/src/net/server/channel/handlers/PetFoodHandler.java
index 3996114d2..5a1e997e3 100644
--- a/src/net/server/channel/handlers/PetFoodHandler.java
+++ b/src/net/server/channel/handlers/PetFoodHandler.java
@@ -23,6 +23,7 @@
 
 import client.MapleCharacter;
 import client.MapleClient;
+import client.inventory.MapleInventory;
 import client.inventory.MapleInventoryType;
 import client.inventory.MaplePet;
 import client.autoban.AutobanManager;
@@ -65,18 +66,25 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
         
         short pos = slea.readShort();
         int itemId = slea.readInt();
-        Item use = chr.getInventory(MapleInventoryType.USE).getItem(pos);
-        if (use == null || (itemId / 10000) != 212 || use.getItemId() != itemId) {
-            return;
-        }
         
-        c.lockClient();
-        try {
-            pet.gainClosenessFullness(chr, (pet.getFullness() <= 75) ? 1 : 0, 30, 1);   // 25+ "emptyness" to get +1 closeness
-        } finally {
-            c.unlockClient();
+        if (c.tryacquireClient()) {
+            try {
+                MapleInventory useInv = chr.getInventory(MapleInventoryType.USE);
+                useInv.lockInventory();
+                try {
+                    Item use = useInv.getItem(pos);
+                    if (use == null || (itemId / 10000) != 212 || use.getItemId() != itemId || use.getQuantity() < 1) {
+                        return;
+                    }
+
+                    pet.gainClosenessFullness(chr, (pet.getFullness() <= 75) ? 1 : 0, 30, 1);   // 25+ "emptyness" to get +1 closeness
+                    MapleInventoryManipulator.removeFromSlot(c, MapleInventoryType.USE, pos, (short) 1, false);
+                } finally {
+                    useInv.unlockInventory();
+                }
+            } finally {
+                c.releaseClient();
+            }
         }
-        
-        MapleInventoryManipulator.removeFromSlot(c, MapleInventoryType.USE, pos, (short) 1, false);
     }
 }
diff --git a/src/net/server/channel/handlers/PlayerInteractionHandler.java b/src/net/server/channel/handlers/PlayerInteractionHandler.java
index 375ce9ad8..ae3261451 100644
--- a/src/net/server/channel/handlers/PlayerInteractionHandler.java
+++ b/src/net/server/channel/handlers/PlayerInteractionHandler.java
@@ -49,6 +49,7 @@
 /**
  *
  * @author Matze
+ * @author Ronan (concurrency safety & reviewed minigames)
  */
 public final class PlayerInteractionHandler extends AbstractMaplePacketHandler {
     public enum Action {
@@ -109,7 +110,7 @@ public byte getCode() {
         }
     }
 
-    private static int estabilishMiniroomStatus(MapleCharacter chr, boolean isMinigame) {
+    private static int establishMiniroomStatus(MapleCharacter chr, boolean isMinigame) {
         if (isMinigame && FieldLimit.CANNOTMINIGAME.check(chr.getMap().getFieldLimit())) {
             return 11;
         }
@@ -127,510 +128,564 @@ private static int estabilishMiniroomStatus(MapleCharacter chr, boolean isMiniga
     
     @Override
     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
-        byte mode = slea.readByte();
-        final MapleCharacter chr = c.getPlayer();
+        if (!c.tryacquireClient()) {    // thanks GabrielSin for pointing dupes within player interactions
+            c.announce(MaplePacketCreator.enableActions());
+            return;
+        }
         
-        if (mode == Action.CREATE.getCode()) {
-            if(!chr.isAlive()) {    // thanks GabrielSin for pointing this
-                chr.getClient().announce(MaplePacketCreator.getMiniRoomError(4));
-                return;
-            }
-            
-            byte createType = slea.readByte();
-            if (createType == 3) {// trade
-                MapleTrade.startTrade(chr);
-            } else if (createType == 1) { // omok mini game
-                int status = estabilishMiniroomStatus(chr, true);
-                if (status > 0) {
-                    chr.getClient().announce(MaplePacketCreator.getMiniRoomError(status));
-                    return;
-                }
-                
-                String desc = slea.readMapleAsciiString();
-                int type = slea.readByte();
-                String pw = slea.available() > 1 ? slea.readMapleAsciiString() : "";
-                
-                MapleMiniGame game = new MapleMiniGame(chr, desc, pw);
-                chr.setMiniGame(game);
-                game.setPieceType(type);
-                game.setGameType(MiniGameType.OMOK);
-                chr.getMap().addMapObject(game);
-                chr.getMap().broadcastMessage(MaplePacketCreator.addOmokBox(chr, 1, 0));
-                game.sendOmok(c, type);
-            } else if (createType == 2) { // matchcard
-                int status = estabilishMiniroomStatus(chr, true);
-                if (status > 0) {
-                    chr.getClient().announce(MaplePacketCreator.getMiniRoomError(status));
-                    return;
-                }
-                
-                String desc = slea.readMapleAsciiString();
-                int type = slea.readByte();
-                String pw = slea.available() > 1 ? slea.readMapleAsciiString() : "";
-                
-                MapleMiniGame game = new MapleMiniGame(chr, desc, pw);
-                game.setPieceType(type);
-                if (type == 0) {
-                    game.setMatchesToWin(6);
-                } else if (type == 1) {
-                    game.setMatchesToWin(10);
-                } else if (type == 2) {
-                    game.setMatchesToWin(15);
-                }
-                game.setGameType(MiniGameType.MATCH_CARD);
-                chr.setMiniGame(game);
-                chr.getMap().addMapObject(game);
-                chr.getMap().broadcastMessage(MaplePacketCreator.addMatchCardBox(chr, 1, 0));
-                game.sendMatchCard(c, type);
-            } else if (createType == 4 || createType == 5) { // shop
-                if(!GameConstants.isFreeMarketRoom(chr.getMapId())) {
-                    chr.getClient().announce(MaplePacketCreator.getMiniRoomError(15));
+        try {
+            byte mode = slea.readByte();
+            final MapleCharacter chr = c.getPlayer();
+
+            if (mode == Action.CREATE.getCode()) {
+                if(!chr.isAlive()) {    // thanks GabrielSin for pointing this
+                    chr.getClient().announce(MaplePacketCreator.getMiniRoomError(4));
                     return;
                 }
-                
-                int status = estabilishMiniroomStatus(chr, false);
-                if (status > 0) {
-                    chr.getClient().announce(MaplePacketCreator.getMiniRoomError(status));
-                    return;
+
+                byte createType = slea.readByte();
+                if (createType == 3) {// trade
+                    MapleTrade.startTrade(chr);
+                } else if (createType == 1) { // omok mini game
+                    int status = establishMiniroomStatus(chr, true);
+                    if (status > 0) {
+                        chr.getClient().announce(MaplePacketCreator.getMiniRoomError(status));
+                        return;
+                    }
+
+                    String desc = slea.readMapleAsciiString();
+                    String pw;
+
+                    if (slea.readByte() != 0) {
+                        pw = slea.readMapleAsciiString();
+                    } else {
+                        pw = "";
+                    }
+
+                    int type = slea.readByte();
+                    if (type > 11) {
+                        type = 11;
+                    } else if (type < 0) {
+                        type = 0;
+                    }
+                    if (!chr.haveItem(4080000 + type)) {
+                        chr.getClient().announce(MaplePacketCreator.getMiniRoomError(6));
+                        return;
+                    }
+
+                    MapleMiniGame game = new MapleMiniGame(chr, desc, pw);
+                    chr.setMiniGame(game);
+                    game.setPieceType(type);
+                    game.setGameType(MiniGameType.OMOK);
+                    chr.getMap().addMapObject(game);
+                    chr.getMap().broadcastMessage(MaplePacketCreator.addOmokBox(chr, 1, 0));
+                    game.sendOmok(c, type);
+                } else if (createType == 2) { // matchcard
+                    int status = establishMiniroomStatus(chr, true);
+                    if (status > 0) {
+                        chr.getClient().announce(MaplePacketCreator.getMiniRoomError(status));
+                        return;
+                    }
+
+                    String desc = slea.readMapleAsciiString();
+                    String pw;
+
+                    if (slea.readByte() != 0) {
+                        pw = slea.readMapleAsciiString();
+                    } else {
+                        pw = "";
+                    }
+
+                    int type = slea.readByte();
+                    if (type > 2) {
+                        type = 2;
+                    } else if (type < 0) {
+                        type = 0;
+                    }
+                    if (!chr.haveItem(4080100)) {
+                        chr.getClient().announce(MaplePacketCreator.getMiniRoomError(6));
+                        return;
+                    }
+
+                    MapleMiniGame game = new MapleMiniGame(chr, desc, pw);
+                    game.setPieceType(type);
+                    if (type == 0) {
+                        game.setMatchesToWin(6);
+                    } else if (type == 1) {
+                        game.setMatchesToWin(10);
+                    } else if (type == 2) {
+                        game.setMatchesToWin(15);
+                    }
+                    game.setGameType(MiniGameType.MATCH_CARD);
+                    chr.setMiniGame(game);
+                    chr.getMap().addMapObject(game);
+                    chr.getMap().broadcastMessage(MaplePacketCreator.addMatchCardBox(chr, 1, 0));
+                    game.sendMatchCard(c, type);
+                } else if (createType == 4 || createType == 5) { // shop
+                    if(!GameConstants.isFreeMarketRoom(chr.getMapId())) {
+                        chr.getClient().announce(MaplePacketCreator.getMiniRoomError(15));
+                        return;
+                    }
+
+                    int status = establishMiniroomStatus(chr, false);
+                    if (status > 0) {
+                        chr.getClient().announce(MaplePacketCreator.getMiniRoomError(status));
+                        return;
+                    }
+
+                    String desc = slea.readMapleAsciiString();
+                    slea.skip(3);
+                    int itemId = slea.readInt();
+                    if (chr.getInventory(MapleInventoryType.CASH).countById(itemId) < 1) {
+                        chr.getClient().announce(MaplePacketCreator.getMiniRoomError(6));
+                        return;
+                    }
+
+                    if (ItemConstants.isPlayerShop(itemId)) {
+                        MaplePlayerShop shop = new MaplePlayerShop(chr, desc, itemId);
+                        chr.setPlayerShop(shop);
+                        chr.getMap().addMapObject(shop);
+                        shop.sendShop(c);
+                        c.getWorldServer().registerPlayerShop(shop);
+                        //c.announce(MaplePacketCreator.getPlayerShopRemoveVisitor(1));
+                    } else if (ItemConstants.isHiredMerchant(itemId)) {
+                        MapleHiredMerchant merchant = new MapleHiredMerchant(chr, desc, itemId);
+                        chr.setHiredMerchant(merchant);
+                        c.getWorldServer().registerHiredMerchant(merchant);
+                        chr.getClient().getChannelServer().addHiredMerchant(chr.getId(), merchant);
+                        chr.announce(MaplePacketCreator.getHiredMerchant(chr, merchant, true));
+                    }
                 }
-                
-                String desc = slea.readMapleAsciiString();
-                slea.skip(3);
-                int itemId = slea.readInt();
-                if (chr.getInventory(MapleInventoryType.CASH).countById(itemId) < 1) {
-                    chr.getClient().announce(MaplePacketCreator.getMiniRoomError(6));
+            } else if (mode == Action.INVITE.getCode()) {
+                int otherPlayer = slea.readInt();
+                if (chr.getId() == chr.getMap().getCharacterById(otherPlayer).getId()) {
                     return;
                 }
-                
-                if (ItemConstants.isPlayerShop(itemId)) {
-                    MaplePlayerShop shop = new MaplePlayerShop(chr, desc, itemId);
-                    chr.setPlayerShop(shop);
-                    chr.getMap().addMapObject(shop);
-                    shop.sendShop(c);
-                    c.getWorldServer().registerPlayerShop(shop);
-                    //c.announce(MaplePacketCreator.getPlayerShopRemoveVisitor(1));
-                } else if (ItemConstants.isHiredMerchant(itemId)) {
-                    MapleHiredMerchant merchant = new MapleHiredMerchant(chr, desc, itemId);
-                    chr.setHiredMerchant(merchant);
-                    c.getWorldServer().registerHiredMerchant(merchant);
-                    chr.getClient().getChannelServer().addHiredMerchant(chr.getId(), merchant);
-                    chr.announce(MaplePacketCreator.getHiredMerchant(chr, merchant, true));
-                }
-            }
-        } else if (mode == Action.INVITE.getCode()) {
-            int otherPlayer = slea.readInt();
-            if (chr.getId() == chr.getMap().getCharacterById(otherPlayer).getId()) {
-            	return;
-            }
-            MapleTrade.inviteTrade(chr, chr.getMap().getCharacterById(otherPlayer));
-        } else if (mode == Action.DECLINE.getCode()) {
-            MapleTrade.declineTrade(chr);
-        } else if (mode == Action.VISIT.getCode()) {
-            if (chr.getTrade() != null && chr.getTrade().getPartner() != null) {
-            	if (!chr.getTrade().isFullTrade() && !chr.getTrade().getPartner().isFullTrade()) {
-            		MapleTrade.visitTrade(chr, chr.getTrade().getPartner().getChr());
-            	} else {
-            		chr.getClient().announce(MaplePacketCreator.getMiniRoomError(2));
-            		return;
-            	}
-            } else {
-                if (isTradeOpen(chr)) return;
-                
-                int oid = slea.readInt();
-                MapleMapObject ob = chr.getMap().getMapObject(oid);
-                if (ob instanceof MaplePlayerShop) {
-                    MaplePlayerShop shop = (MaplePlayerShop) ob;
-                    shop.visitShop(chr);
-                } else if (ob instanceof MapleMiniGame) {
-                    slea.skip(1);
-                    String pw = slea.available() > 1 ? slea.readMapleAsciiString() : "";
-                    
-                    MapleMiniGame game = (MapleMiniGame) ob;
-                    if(game.checkPassword(pw)) {
-                        if (game.hasFreeSlot() && !game.isVisitor(chr)) {
-                            game.addVisitor(chr);
-                            chr.setMiniGame(game);
-                            switch (game.getGameType()) {
-                                case OMOK:
-                                    game.sendOmok(c, game.getPieceType());
-                                    break;
-                                case MATCH_CARD:
-                                    game.sendMatchCard(c, game.getPieceType());
-                                    break;
+                MapleTrade.inviteTrade(chr, chr.getMap().getCharacterById(otherPlayer));
+            } else if (mode == Action.DECLINE.getCode()) {
+                MapleTrade.declineTrade(chr);
+            } else if (mode == Action.VISIT.getCode()) {
+                if (chr.getTrade() != null && chr.getTrade().getPartner() != null) {
+                    if (!chr.getTrade().isFullTrade() && !chr.getTrade().getPartner().isFullTrade()) {
+                            MapleTrade.visitTrade(chr, chr.getTrade().getPartner().getChr());
+                    } else {
+                            chr.getClient().announce(MaplePacketCreator.getMiniRoomError(2));
+                            return;
+                    }
+                } else {
+                    if (isTradeOpen(chr)) return;
+
+                    int oid = slea.readInt();
+                    MapleMapObject ob = chr.getMap().getMapObject(oid);
+                    if (ob instanceof MaplePlayerShop) {
+                        MaplePlayerShop shop = (MaplePlayerShop) ob;
+                        shop.visitShop(chr);
+                    } else if (ob instanceof MapleMiniGame) {
+                        slea.skip(1);
+                        String pw = slea.available() > 1 ? slea.readMapleAsciiString() : "";
+
+                        MapleMiniGame game = (MapleMiniGame) ob;
+                        if(game.checkPassword(pw)) {
+                            if (game.hasFreeSlot() && !game.isVisitor(chr)) {
+                                game.addVisitor(chr);
+                                chr.setMiniGame(game);
+                                switch (game.getGameType()) {
+                                    case OMOK:
+                                        game.sendOmok(c, game.getPieceType());
+                                        break;
+                                    case MATCH_CARD:
+                                        game.sendMatchCard(c, game.getPieceType());
+                                        break;
+                                }
+                            } else {
+                                chr.getClient().announce(MaplePacketCreator.getMiniRoomError(2));
                             }
                         } else {
-                            chr.getClient().announce(MaplePacketCreator.getMiniRoomError(2));
+                            chr.getClient().announce(MaplePacketCreator.getMiniRoomError(22));
                         }
-                    } else {
-                        chr.getClient().announce(MaplePacketCreator.getMiniRoomError(22));
+                    } else if (ob instanceof MapleHiredMerchant && chr.getHiredMerchant() == null) {
+                        MapleHiredMerchant merchant = (MapleHiredMerchant) ob;
+                        merchant.visitShop(chr);
                     }
-                } else if (ob instanceof MapleHiredMerchant && chr.getHiredMerchant() == null) {
-                    MapleHiredMerchant merchant = (MapleHiredMerchant) ob;
-                    merchant.visitShop(chr);
                 }
-            }
-        } else if (mode == Action.CHAT.getCode()) { // chat lol
-            MapleHiredMerchant merchant = chr.getHiredMerchant();
-            if (chr.getTrade() != null) {
-                chr.getTrade().chat(slea.readMapleAsciiString());
-            } else if (chr.getPlayerShop() != null) { //mini game
+            } else if (mode == Action.CHAT.getCode()) { // chat lol
+                MapleHiredMerchant merchant = chr.getHiredMerchant();
+                if (chr.getTrade() != null) {
+                    chr.getTrade().chat(slea.readMapleAsciiString());
+                } else if (chr.getPlayerShop() != null) { //mini game
+                    MaplePlayerShop shop = chr.getPlayerShop();
+                    if (shop != null) {
+                        shop.chat(c, slea.readMapleAsciiString());
+                    }
+                } else if (chr.getMiniGame() != null) {
+                    MapleMiniGame game = chr.getMiniGame();
+                    if (game != null) {
+                        game.chat(c, slea.readMapleAsciiString());
+                    }
+                } else if (merchant != null) {
+                    merchant.sendMessage(chr, slea.readMapleAsciiString());
+                }
+            } else if (mode == Action.EXIT.getCode()) {
+                if (chr.getTrade() != null) {
+                    MapleTrade.cancelTrade(chr);
+                } else {
+                    chr.closePlayerShop();
+                    chr.closeMiniGame();
+                    chr.closeHiredMerchant(true);
+                }
+            } else if (mode == Action.OPEN.getCode()) {
+                if (isTradeOpen(chr)) return;
+
                 MaplePlayerShop shop = chr.getPlayerShop();
-                if (shop != null) {
-                    shop.chat(c, slea.readMapleAsciiString());
+                MapleHiredMerchant merchant = chr.getHiredMerchant();
+                if (shop != null && shop.isOwner(chr)) {
+                    slea.readByte();//01
+
+                    if(ServerConstants.USE_ERASE_PERMIT_ON_OPENSHOP) {
+                        try {
+                            MapleInventoryManipulator.removeById(c, MapleInventoryType.CASH, shop.getItemId(), 1, true, false);
+                        } catch(RuntimeException re) {} // fella does not have a player shop permit...
+                    }
+
+                    chr.getMap().broadcastMessage(MaplePacketCreator.updatePlayerShopBox(shop));
+                    shop.setOpen(true);
+                } else if (merchant != null && merchant.isOwner(chr)) {
+                    chr.setHasMerchant(true);
+                    merchant.setOpen(true);
+                    chr.getMap().addMapObject(merchant);
+                    chr.setHiredMerchant(null);
+                    chr.getMap().broadcastMessage(MaplePacketCreator.spawnHiredMerchantBox(merchant));
+                    slea.readByte();
                 }
-            } else if (chr.getMiniGame() != null) {
+            } else if (mode == Action.READY.getCode()) {
+                MapleMiniGame game = chr.getMiniGame();
+                game.broadcast(MaplePacketCreator.getMiniGameReady(game));
+            } else if (mode == Action.UN_READY.getCode()) {
                 MapleMiniGame game = chr.getMiniGame();
-                if (game != null) {
-                    game.chat(c, slea.readMapleAsciiString());
+                game.broadcast(MaplePacketCreator.getMiniGameUnReady(game));
+            } else if (mode == Action.START.getCode()) {
+                MapleMiniGame game = chr.getMiniGame();
+                if (game.getGameType().equals(MiniGameType.OMOK)) {
+                    game.minigameMatchStarted();
+                    game.broadcast(MaplePacketCreator.getMiniGameStart(game, game.getLoser()));
+                    chr.getMap().broadcastMessage(MaplePacketCreator.addOmokBox(game.getOwner(), 2, 1));
+                } else if (game.getGameType().equals(MiniGameType.MATCH_CARD)) {
+                    game.minigameMatchStarted();
+                    game.shuffleList();
+                    game.broadcast(MaplePacketCreator.getMatchCardStart(game, game.getLoser()));
+                    chr.getMap().broadcastMessage(MaplePacketCreator.addMatchCardBox(game.getOwner(), 2, 1));
                 }
-            } else if (merchant != null) {
-                merchant.sendMessage(chr, slea.readMapleAsciiString());
-            }
-        } else if (mode == Action.EXIT.getCode()) {
-            if (chr.getTrade() != null) {
-                MapleTrade.cancelTrade(chr);
-            } else {
-                chr.closePlayerShop();
-                chr.closeMiniGame();
-                chr.closeHiredMerchant(true);
-            }
-        } else if (mode == Action.OPEN.getCode()) {
-            if (isTradeOpen(chr)) return;
-            
-            MaplePlayerShop shop = chr.getPlayerShop();
-            MapleHiredMerchant merchant = chr.getHiredMerchant();
-            if (shop != null && shop.isOwner(chr)) {
-                slea.readByte();//01
-                
-                if(ServerConstants.USE_ERASE_PERMIT_ON_OPENSHOP) {
-                    try {
-                        MapleInventoryManipulator.removeById(c, MapleInventoryType.CASH, shop.getItemId(), 1, true, false);
-                    } catch(RuntimeException re) {} // fella does not have a player shop permit...
-                }
-                
-                chr.getMap().broadcastMessage(MaplePacketCreator.updatePlayerShopBox(shop));
-                shop.setOpen(true);
-            } else if (merchant != null && merchant.isOwner(chr)) {
-                chr.setHasMerchant(true);
-                merchant.setOpen(true);
-                chr.getMap().addMapObject(merchant);
-                chr.setHiredMerchant(null);
-                chr.getMap().broadcastMessage(MaplePacketCreator.spawnHiredMerchantBox(merchant));
-                slea.readByte();
-            }
-        } else if (mode == Action.READY.getCode()) {
-            MapleMiniGame game = chr.getMiniGame();
-            game.broadcast(MaplePacketCreator.getMiniGameReady(game));
-        } else if (mode == Action.UN_READY.getCode()) {
-            MapleMiniGame game = chr.getMiniGame();
-            game.broadcast(MaplePacketCreator.getMiniGameUnReady(game));
-        } else if (mode == Action.START.getCode()) {
-            MapleMiniGame game = chr.getMiniGame();
-            if (game.getGameType().equals("omok")) {
-                game.broadcast(MaplePacketCreator.getMiniGameStart(game, game.getLoser()));
-                chr.getMap().broadcastMessage(MaplePacketCreator.addOmokBox(game.getOwner(), 2, 1));
-            }
-            if (game.getGameType().equals("matchcard")) {
-                game.shuffleList();
-                game.broadcast(MaplePacketCreator.getMatchCardStart(game, game.getLoser()));
-                chr.getMap().broadcastMessage(MaplePacketCreator.addMatchCardBox(game.getOwner(), 2, 1));
-            }
-        } else if (mode == Action.GIVE_UP.getCode()) {
-            MapleMiniGame game = chr.getMiniGame();
-            if (game.getGameType().equals("omok")) {
-                if (game.isOwner(chr)) {
-                    game.broadcast(MaplePacketCreator.getMiniGameOwnerForfeit(game));
-                } else {
-                    game.broadcast(MaplePacketCreator.getMiniGameVisitorForfeit(game));
+            } else if (mode == Action.GIVE_UP.getCode()) {
+                MapleMiniGame game = chr.getMiniGame();
+                if (game.getGameType().equals(MiniGameType.OMOK)) {
+                    if (game.isOwner(chr)) {
+                        game.minigameMatchVisitorWins(true);
+                    } else {
+                        game.minigameMatchOwnerWins(true);
+                    }
+                } else if (game.getGameType().equals(MiniGameType.MATCH_CARD)) {
+                    if (game.isOwner(chr)) {
+                        game.minigameMatchVisitorWins(true);
+                    } else {
+                        game.minigameMatchOwnerWins(true);
+                    }
                 }
-            }
-            if (game.getGameType().equals("matchcard")) {
-                if (game.isOwner(chr)) {
-                    game.broadcast(MaplePacketCreator.getMatchCardVisitorWin(game));
-                } else {
-                    game.broadcast(MaplePacketCreator.getMatchCardOwnerWin(game));
+            } else if (mode == Action.REQUEST_TIE.getCode()) {
+                MapleMiniGame game = chr.getMiniGame();
+                if (!game.isTieDenied(chr)) {
+                    if (game.isOwner(chr)) {
+                        game.broadcastToVisitor(MaplePacketCreator.getMiniGameRequestTie(game));
+                    } else {
+                        game.broadcastToOwner(MaplePacketCreator.getMiniGameRequestTie(game));
+                    }
                 }
-            }
-        } else if (mode == Action.REQUEST_TIE.getCode()) {
-            MapleMiniGame game = chr.getMiniGame();
-            if (game.isOwner(chr)) {
-                game.broadcastToVisitor(MaplePacketCreator.getMiniGameRequestTie(game));
-            } else {
-                game.getOwner().getClient().announce(MaplePacketCreator.getMiniGameRequestTie(game));
-            }
-        } else if (mode == Action.ANSWER_TIE.getCode()) {
-            MapleMiniGame game = chr.getMiniGame();
-            slea.readByte();
-            if (game.getGameType().equals("omok")) {
-                game.broadcast(MaplePacketCreator.getMiniGameTie(game));
-            }
-            if (game.getGameType().equals("matchcard")) {
-                game.broadcast(MaplePacketCreator.getMatchCardTie(game));
-            }
-        } else if (mode == Action.SKIP.getCode()) {
-            MapleMiniGame game = chr.getMiniGame();
-            if (game.isOwner(chr)) {
-                game.broadcast(MaplePacketCreator.getMiniGameSkipOwner(game));
-            } else {
-                game.broadcast(MaplePacketCreator.getMiniGameSkipVisitor(game));
-            }
-        } else if (mode == Action.MOVE_OMOK.getCode()) {
-            int x = slea.readInt(); // x point
-            int y = slea.readInt(); // y point
-            int type = slea.readByte(); // piece ( 1 or 2; Owner has one piece, visitor has another, it switches every game.)
-            chr.getMiniGame().setPiece(x, y, type, chr);
-        } else if (mode == Action.SELECT_CARD.getCode()) {
-            int turn = slea.readByte(); // 1st turn = 1; 2nd turn = 0
-            int slot = slea.readByte(); // slot
-            MapleMiniGame game = chr.getMiniGame();
-            int firstslot = game.getFirstSlot();
-            if (turn == 1) {
-                game.setFirstSlot(slot);
-                if (game.isOwner(chr)) {
-                    game.broadcastToVisitor(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, turn));
+            } else if (mode == Action.ANSWER_TIE.getCode()) {
+                MapleMiniGame game = chr.getMiniGame();
+                if (slea.readByte() != 0) {
+                    game.minigameMatchDraw();
                 } else {
-                    game.getOwner().getClient().announce(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, turn));
+                    game.denyTie(chr);
+
+                    if (game.isOwner(chr)) {
+                        game.broadcastToVisitor(MaplePacketCreator.getMiniGameDenyTie(game));
+                    } else {
+                        game.broadcastToOwner(MaplePacketCreator.getMiniGameDenyTie(game));
+                    }
                 }
-            } else if ((game.getCardId(firstslot + 1)) == (game.getCardId(slot + 1))) {
+            } else if (mode == Action.SKIP.getCode()) {
+                MapleMiniGame game = chr.getMiniGame();
                 if (game.isOwner(chr)) {
-                    game.broadcast(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, 2));
-                    game.setOwnerPoints();
+                    game.broadcast(MaplePacketCreator.getMiniGameSkipOwner(game));
                 } else {
-                    game.broadcast(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, 3));
-                    game.setVisitorPoints();
+                    game.broadcast(MaplePacketCreator.getMiniGameSkipVisitor(game));
                 }
-            } else if (game.isOwner(chr)) {
-                game.broadcast(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, 0));
-            } else {
-                game.broadcast(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, 1));
-            }
-        } else if (mode == Action.SET_MESO.getCode()) {
-            chr.getTrade().setMeso(slea.readInt());
-        } else if (mode == Action.SET_ITEMS.getCode()) {
-            MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();
-            MapleInventoryType ivType = MapleInventoryType.getByType(slea.readByte());
-            Item item = chr.getInventory(ivType).getItem(slea.readShort());
-            short quantity = slea.readShort();
-            byte targetSlot = slea.readByte();
-            if (quantity < 1 || quantity > item.getQuantity()) {
-                c.announce(MaplePacketCreator.serverNotice(1, "You don't have enough quantity of the item."));
-                c.announce(MaplePacketCreator.enableActions());
-                return;            	
-            }
-            if (chr.getTrade() != null) {
-                if ((quantity <= item.getQuantity() && quantity >= 0) || ItemConstants.isRechargeable(item.getItemId())) {
-                    if (ii.isDropRestricted(item.getItemId())) { // ensure that undroppable items do not make it to the trade window
-                        if (!MapleKarmaManipulator.hasKarmaFlag(item)) {
-                            c.announce(MaplePacketCreator.serverNotice(1, "That item is untradeable."));
-                            c.announce(MaplePacketCreator.enableActions());
-                            return;
-                        }
+            } else if (mode == Action.MOVE_OMOK.getCode()) {
+                int x = slea.readInt(); // x point
+                int y = slea.readInt(); // y point
+                int type = slea.readByte(); // piece ( 1 or 2; Owner has one piece, visitor has another, it switches every game.)
+                chr.getMiniGame().setPiece(x, y, type, chr);
+            } else if (mode == Action.SELECT_CARD.getCode()) {
+                int turn = slea.readByte(); // 1st turn = 1; 2nd turn = 0
+                int slot = slea.readByte(); // slot
+                MapleMiniGame game = chr.getMiniGame();
+                int firstslot = game.getFirstSlot();
+                if (turn == 1) {
+                    game.setFirstSlot(slot);
+                    if (game.isOwner(chr)) {
+                        game.broadcastToVisitor(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, turn));
+                    } else {
+                        game.getOwner().getClient().announce(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, turn));
                     }
-                    Item tradeItem = item.copy();
-                    if (ItemConstants.isRechargeable(item.getItemId())) {
-                        tradeItem.setQuantity(item.getQuantity());
-                        MapleInventoryManipulator.removeFromSlot(c, ivType, item.getPosition(), item.getQuantity(), true);
+                } else if ((game.getCardId(firstslot)) == (game.getCardId(slot))) {
+                    if (game.isOwner(chr)) {
+                        game.broadcast(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, 2));
+                        game.setOwnerPoints();
                     } else {
-                        tradeItem.setQuantity(quantity);
-                        MapleInventoryManipulator.removeFromSlot(c, ivType, item.getPosition(), quantity, true);
+                        game.broadcast(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, 3));
+                        game.setVisitorPoints();
                     }
-                    tradeItem.setPosition(targetSlot);
-                    chr.getTrade().addItem(tradeItem);
+                } else if (game.isOwner(chr)) {
+                    game.broadcast(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, 0));
+                } else {
+                    game.broadcast(MaplePacketCreator.getMatchCardSelect(game, turn, slot, firstslot, 1));
                 }
-            }
-        } else if (mode == Action.CONFIRM.getCode()) {
-            MapleTrade.completeTrade(chr);
-        } else if (mode == Action.ADD_ITEM.getCode() || mode == Action.PUT_ITEM.getCode()) {
-            if (isTradeOpen(chr)) return;
-            
-            MapleInventoryType ivType = MapleInventoryType.getByType(slea.readByte());
-            short slot = slea.readShort();
-            short bundles = slea.readShort();
-            Item ivItem = chr.getInventory(ivType).getItem(slot);
-            
-            if (ivItem == null || ivItem.getFlag() == ItemConstants.UNTRADEABLE) {
-                c.announce(MaplePacketCreator.serverNotice(1, "Could not perform shop operation with that item."));
-                c.announce(MaplePacketCreator.enableActions());
-                return;
-            }
-            
-            short perBundle = slea.readShort();
-            
-            if (ItemConstants.isRechargeable(ivItem.getItemId())) {
-                perBundle = 1;
-                bundles = 1;
-            } else if (chr.getItemQuantity(ivItem.getItemId(), false) < perBundle * bundles) {
-                c.announce(MaplePacketCreator.serverNotice(1, "Could not perform shop operation with that item."));
-                c.announce(MaplePacketCreator.enableActions());
-                return;
-            }
-            
-            int price = slea.readInt();
-            if (perBundle <= 0 || perBundle * bundles > 2000 || bundles <= 0 || price <= 0 || price > Integer.MAX_VALUE) {
-            	AutobanFactory.PACKET_EDIT.alert(chr, chr.getName() + " tried to packet edit with hired merchants.");
-            	FilePrinter.printError(FilePrinter.EXPLOITS + chr.getName() + ".txt", chr.getName() + " might of possibly packet edited Hired Merchants\nperBundle: " + perBundle + "\nperBundle * bundles (This multiplied cannot be greater than 2000): " + perBundle * bundles + "\nbundles: " + bundles + "\nprice: " + price);
-                return;
-            }
-            
-            if(ServerConstants.USE_ENFORCE_UNMERCHABLE_CASH && MapleItemInformationProvider.getInstance().isCash(ivItem.getItemId())) {
-                c.announce(MaplePacketCreator.serverNotice(1, "Cash items are not allowed to be sold on the Player Store."));
-                return;
-            }
-            
-            if (ServerConstants.USE_ENFORCE_UNMERCHABLE_PET && ItemConstants.isPet(ivItem.getItemId())) {
-                c.announce(MaplePacketCreator.serverNotice(1, "Pets are not allowed to be sold on the Player Store."));
-                return;
-            }
-            
-            Item sellItem = ivItem.copy();
-            if(!ItemConstants.isRechargeable(ivItem.getItemId())) {
-                sellItem.setQuantity(perBundle);
-            }
-            
-            MaplePlayerShopItem shopItem = new MaplePlayerShopItem(sellItem, bundles, price);
-            MaplePlayerShop shop = chr.getPlayerShop();
-            MapleHiredMerchant merchant = chr.getHiredMerchant();
-            if (shop != null && shop.isOwner(chr)) {
-                if (shop.isOpen()) {
-                    c.announce(MaplePacketCreator.serverNotice(1, "You can't sell it anymore."));
+            } else if (mode == Action.SET_MESO.getCode()) {
+                chr.getTrade().setMeso(slea.readInt());
+            } else if (mode == Action.SET_ITEMS.getCode()) {
+                MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();
+                MapleInventoryType ivType = MapleInventoryType.getByType(slea.readByte());
+                Item item = chr.getInventory(ivType).getItem(slea.readShort());
+                short quantity = slea.readShort();
+                byte targetSlot = slea.readByte();
+
+                if (item == null) {
+                    c.announce(MaplePacketCreator.serverNotice(1, "Invalid item description."));
+                    c.announce(MaplePacketCreator.enableActions());
                     return;
                 }
-                
-                shop.addItem(shopItem);
-                c.announce(MaplePacketCreator.getPlayerShopItemUpdate(shop));
-            } else if (merchant != null && merchant.isOwner(chr)) {
-                if (merchant.isOpen()) {
-                    c.announce(MaplePacketCreator.serverNotice(1, "You can't sell it anymore."));
+
+                if (quantity < 1 || quantity > item.getQuantity()) {
+                    c.announce(MaplePacketCreator.serverNotice(1, "You don't have enough quantity of the item."));
+                    c.announce(MaplePacketCreator.enableActions());
                     return;
                 }
-                
-                merchant.addItem(shopItem);
-                c.announce(MaplePacketCreator.updateHiredMerchant(merchant, chr));
-            }
-            if (ItemConstants.isRechargeable(ivItem.getItemId())) {
-                MapleInventoryManipulator.removeFromSlot(c, ivType, slot, ivItem.getQuantity(), true);
-            } else {
-                MapleInventoryManipulator.removeFromSlot(c, ivType, slot, (short) (bundles * perBundle), true);
-            }
-        } else if (mode == Action.REMOVE_ITEM.getCode()) {
-            if (isTradeOpen(chr)) return;
-            
-            MaplePlayerShop shop = chr.getPlayerShop();
-            if (shop != null && shop.isOwner(chr)) {
-                if (shop.isOpen()) {
-                    c.announce(MaplePacketCreator.serverNotice(1, "You can't take it with the store open."));
+                if (chr.getTrade() != null) {
+                    if ((quantity <= item.getQuantity() && quantity >= 0) || ItemConstants.isRechargeable(item.getItemId())) {
+                        if (ii.isDropRestricted(item.getItemId())) { // ensure that undroppable items do not make it to the trade window
+                            if (!MapleKarmaManipulator.hasKarmaFlag(item)) {
+                                c.announce(MaplePacketCreator.serverNotice(1, "That item is untradeable."));
+                                c.announce(MaplePacketCreator.enableActions());
+                                return;
+                            }
+                        }
+                        Item tradeItem = item.copy();
+                        if (ItemConstants.isRechargeable(item.getItemId())) {
+                            tradeItem.setQuantity(item.getQuantity());
+                            MapleInventoryManipulator.removeFromSlot(c, ivType, item.getPosition(), item.getQuantity(), true);
+                        } else {
+                            tradeItem.setQuantity(quantity);
+                            MapleInventoryManipulator.removeFromSlot(c, ivType, item.getPosition(), quantity, true);
+                        }
+                        tradeItem.setPosition(targetSlot);
+                        chr.getTrade().addItem(tradeItem);
+                    }
+                }
+            } else if (mode == Action.CONFIRM.getCode()) {
+                MapleTrade.completeTrade(chr);
+            } else if (mode == Action.ADD_ITEM.getCode() || mode == Action.PUT_ITEM.getCode()) {
+                if (isTradeOpen(chr)) return;
+
+                MapleInventoryType ivType = MapleInventoryType.getByType(slea.readByte());
+                short slot = slea.readShort();
+                short bundles = slea.readShort();
+                Item ivItem = chr.getInventory(ivType).getItem(slot);
+
+                if (ivItem == null || ivItem.isUntradeable()) {
+                    c.announce(MaplePacketCreator.serverNotice(1, "Could not perform shop operation with that item."));
+                    c.announce(MaplePacketCreator.enableActions());
                     return;
                 }
-                
-                int slot = slea.readShort();
-                if (slot >= shop.getItems().size() || slot < 0) {
-                    AutobanFactory.PACKET_EDIT.alert(chr, chr.getName() + " tried to packet edit with a player shop.");
-                    FilePrinter.printError(FilePrinter.EXPLOITS + chr.getName() + ".txt", chr.getName() + " tried to remove item at slot " + slot + "\r\n");
-                    c.disconnect(true, false);
+
+                short perBundle = slea.readShort();
+
+                if (ItemConstants.isRechargeable(ivItem.getItemId())) {
+                    perBundle = 1;
+                    bundles = 1;
+                } else if (chr.getItemQuantity(ivItem.getItemId(), false) < perBundle * bundles) {
+                    c.announce(MaplePacketCreator.serverNotice(1, "Could not perform shop operation with that item."));
+                    c.announce(MaplePacketCreator.enableActions());
                     return;
                 }
-                
-                shop.takeItemBack(slot, chr);
-            }
-        } else if (mode == Action.MERCHANT_MESO.getCode()) {
-            MapleHiredMerchant merchant = chr.getHiredMerchant();
-            if (merchant == null) return;
-            
-            merchant.withdrawMesos(chr);
-        } else if (mode == Action.MERCHANT_ORGANIZE.getCode()) {
-            MapleHiredMerchant merchant = chr.getHiredMerchant();
-            if (merchant == null || !merchant.isOwner(chr)) return;
-            
-            merchant.withdrawMesos(chr);
-            merchant.clearInexistentItems();
-            
-            if (merchant.getItems().isEmpty()) {
-                merchant.closeOwnerMerchant(chr);
-                return;
-            }
-            c.announce(MaplePacketCreator.updateHiredMerchant(merchant, chr));
-
-        } else if (mode == Action.BUY.getCode() || mode == Action.MERCHANT_BUY.getCode()) {
-            if (isTradeOpen(chr)) return;
-            
-            int itemid = slea.readByte();
-            short quantity = slea.readShort();
-            if (quantity < 1) {
-                AutobanFactory.PACKET_EDIT.alert(chr, chr.getName() + " tried to packet edit with a hired merchant and or player shop.");
-            	FilePrinter.printError(FilePrinter.EXPLOITS + chr.getName() + ".txt", chr.getName() + " tried to buy item " + itemid + " with quantity " + quantity + "\r\n");
-            	c.disconnect(true, false);
-            	return;
-            }
-            MaplePlayerShop shop = chr.getPlayerShop();
-            MapleHiredMerchant merchant = chr.getHiredMerchant();
-            if (shop != null && shop.isVisitor(chr)) {
-                shop.buy(c, itemid, quantity);
-                shop.broadcast(MaplePacketCreator.getPlayerShopItemUpdate(shop));
-            } else if (merchant != null && !merchant.isOwner(chr)) {
-                merchant.buy(c, itemid, quantity);
-                merchant.broadcastToVisitorsThreadsafe(MaplePacketCreator.updateHiredMerchant(merchant, chr));
-            }
-        } else if (mode == Action.TAKE_ITEM_BACK.getCode()) {
-            if (isTradeOpen(chr)) return;
-            
-            MapleHiredMerchant merchant = chr.getHiredMerchant();
-            if (merchant != null && merchant.isOwner(chr)) {
-                if (merchant.isOpen()) {
-                    c.announce(MaplePacketCreator.serverNotice(1, "You can't take it with the store open."));
+
+                int price = slea.readInt();
+                if (perBundle <= 0 || perBundle * bundles > 2000 || bundles <= 0 || price <= 0 || price > Integer.MAX_VALUE) {
+                    AutobanFactory.PACKET_EDIT.alert(chr, chr.getName() + " tried to packet edit with hired merchants.");
+                    FilePrinter.printError(FilePrinter.EXPLOITS + chr.getName() + ".txt", chr.getName() + " might of possibly packet edited Hired Merchants\nperBundle: " + perBundle + "\nperBundle * bundles (This multiplied cannot be greater than 2000): " + perBundle * bundles + "\nbundles: " + bundles + "\nprice: " + price);
+                    return;
+                }
+
+                if(ServerConstants.USE_ENFORCE_UNMERCHABLE_CASH && MapleItemInformationProvider.getInstance().isCash(ivItem.getItemId())) {
+                    c.announce(MaplePacketCreator.serverNotice(1, "Cash items are not allowed to be sold on the Player Store."));
+                    return;
+                }
+
+                if (ServerConstants.USE_ENFORCE_UNMERCHABLE_PET && ItemConstants.isPet(ivItem.getItemId())) {
+                    c.announce(MaplePacketCreator.serverNotice(1, "Pets are not allowed to be sold on the Player Store."));
+                    return;
+                }
+
+                Item sellItem = ivItem.copy();
+                if(!ItemConstants.isRechargeable(ivItem.getItemId())) {
+                    sellItem.setQuantity(perBundle);
+                }
+
+                MaplePlayerShopItem shopItem = new MaplePlayerShopItem(sellItem, bundles, price);
+                MaplePlayerShop shop = chr.getPlayerShop();
+                MapleHiredMerchant merchant = chr.getHiredMerchant();
+                if (shop != null && shop.isOwner(chr)) {
+                    if (shop.isOpen()) {
+                        c.announce(MaplePacketCreator.serverNotice(1, "You can't sell it anymore."));
+                        return;
+                    }
+
+                    shop.addItem(shopItem);
+                    c.announce(MaplePacketCreator.getPlayerShopItemUpdate(shop));
+                } else if (merchant != null && merchant.isOwner(chr)) {
+                    if (merchant.isOpen()) {
+                        c.announce(MaplePacketCreator.serverNotice(1, "You can't sell it anymore."));
+                        return;
+                    }
+
+                    merchant.addItem(shopItem);
+                    c.announce(MaplePacketCreator.updateHiredMerchant(merchant, chr));
+                }
+                if (ItemConstants.isRechargeable(ivItem.getItemId())) {
+                    MapleInventoryManipulator.removeFromSlot(c, ivType, slot, ivItem.getQuantity(), true);
+                } else {
+                    MapleInventoryManipulator.removeFromSlot(c, ivType, slot, (short) (bundles * perBundle), true);
+                }
+            } else if (mode == Action.REMOVE_ITEM.getCode()) {
+                if (isTradeOpen(chr)) return;
+
+                MaplePlayerShop shop = chr.getPlayerShop();
+                if (shop != null && shop.isOwner(chr)) {
+                    if (shop.isOpen()) {
+                        c.announce(MaplePacketCreator.serverNotice(1, "You can't take it with the store open."));
+                        return;
+                    }
+
+                    int slot = slea.readShort();
+                    if (slot >= shop.getItems().size() || slot < 0) {
+                        AutobanFactory.PACKET_EDIT.alert(chr, chr.getName() + " tried to packet edit with a player shop.");
+                        FilePrinter.printError(FilePrinter.EXPLOITS + chr.getName() + ".txt", chr.getName() + " tried to remove item at slot " + slot + "\r\n");
+                        c.disconnect(true, false);
+                        return;
+                    }
+
+                    shop.takeItemBack(slot, chr);
+                }
+            } else if (mode == Action.MERCHANT_MESO.getCode()) {
+                MapleHiredMerchant merchant = chr.getHiredMerchant();
+                if (merchant == null) return;
+
+                merchant.withdrawMesos(chr);
+            } else if (mode == Action.MERCHANT_ORGANIZE.getCode()) {
+                MapleHiredMerchant merchant = chr.getHiredMerchant();
+                if (merchant == null || !merchant.isOwner(chr)) return;
+
+                merchant.withdrawMesos(chr);
+                merchant.clearInexistentItems();
+
+                if (merchant.getItems().isEmpty()) {
+                    merchant.closeOwnerMerchant(chr);
                     return;
                 }
-                
-                int slot = slea.readShort();
-                if (slot >= merchant.getItems().size() || slot < 0) {
-                    AutobanFactory.PACKET_EDIT.alert(chr, chr.getName() + " tried to packet edit with a hired merchant.");
-                    FilePrinter.printError(FilePrinter.EXPLOITS + chr.getName() + ".txt", chr.getName() + " tried to remove item at slot " + slot + "\r\n");
+                c.announce(MaplePacketCreator.updateHiredMerchant(merchant, chr));
+
+            } else if (mode == Action.BUY.getCode() || mode == Action.MERCHANT_BUY.getCode()) {
+                if (isTradeOpen(chr)) return;
+
+                int itemid = slea.readByte();
+                short quantity = slea.readShort();
+                if (quantity < 1) {
+                    AutobanFactory.PACKET_EDIT.alert(chr, chr.getName() + " tried to packet edit with a hired merchant and or player shop.");
+                    FilePrinter.printError(FilePrinter.EXPLOITS + chr.getName() + ".txt", chr.getName() + " tried to buy item " + itemid + " with quantity " + quantity + "\r\n");
                     c.disconnect(true, false);
                     return;
                 }
-                
-                merchant.takeItemBack(slot, chr);
-            }
-        } else if (mode == Action.CLOSE_MERCHANT.getCode()) {
-            if (isTradeOpen(chr)) return;
-            
-            MapleHiredMerchant merchant = chr.getHiredMerchant();
-            if (merchant != null) {
-                merchant.closeOwnerMerchant(chr);
-            }
-        } else if (mode == Action.MAINTENANCE_OFF.getCode()) {
-            if (isTradeOpen(chr)) return;
-            
-            MapleHiredMerchant merchant = chr.getHiredMerchant();
-            if(merchant != null) {
-                if (merchant.getItems().isEmpty() && merchant.isOwner(chr)) {
-                    merchant.closeShop(c, false);
-                    chr.setHasMerchant(false);
-                }
-                if (merchant.isOwner(chr)) {
-                    merchant.clearMessages();
-                    merchant.setOpen(true);
+                MaplePlayerShop shop = chr.getPlayerShop();
+                MapleHiredMerchant merchant = chr.getHiredMerchant();
+                if (shop != null && shop.isVisitor(chr)) {
+                    shop.buy(c, itemid, quantity);
+                    shop.broadcast(MaplePacketCreator.getPlayerShopItemUpdate(shop));
+                } else if (merchant != null && !merchant.isOwner(chr)) {
+                    merchant.buy(c, itemid, quantity);
+                    merchant.broadcastToVisitorsThreadsafe(MaplePacketCreator.updateHiredMerchant(merchant, chr));
                 }
-            }
-            
-            chr.setHiredMerchant(null);
-            c.announce(MaplePacketCreator.enableActions());
-        } else if (mode == Action.BAN_PLAYER.getCode()) {
-            slea.skip(1);
-            
-            MaplePlayerShop shop = chr.getPlayerShop();
-            if (shop != null && shop.isOwner(chr)) {
-                shop.banPlayer(slea.readMapleAsciiString());
-            }
-        } else if (mode == Action.EXPEL.getCode()) {
-            MapleMiniGame miniGame = chr.getMiniGame();
-            if(miniGame != null && miniGame.isOwner(chr)) {
-                MapleCharacter visitor = miniGame.getVisitor();
-                
-                if(visitor != null) {
-                    visitor.closeMiniGame();
-                    visitor.announce(MaplePacketCreator.getMiniGameClose(5));
+            } else if (mode == Action.TAKE_ITEM_BACK.getCode()) {
+                if (isTradeOpen(chr)) return;
+
+                MapleHiredMerchant merchant = chr.getHiredMerchant();
+                if (merchant != null && merchant.isOwner(chr)) {
+                    if (merchant.isOpen()) {
+                        c.announce(MaplePacketCreator.serverNotice(1, "You can't take it with the store open."));
+                        return;
+                    }
+
+                    int slot = slea.readShort();
+                    if (slot >= merchant.getItems().size() || slot < 0) {
+                        AutobanFactory.PACKET_EDIT.alert(chr, chr.getName() + " tried to packet edit with a hired merchant.");
+                        FilePrinter.printError(FilePrinter.EXPLOITS + chr.getName() + ".txt", chr.getName() + " tried to remove item at slot " + slot + "\r\n");
+                        c.disconnect(true, false);
+                        return;
+                    }
+
+                    merchant.takeItemBack(slot, chr);
+                }
+            } else if (mode == Action.CLOSE_MERCHANT.getCode()) {
+                if (isTradeOpen(chr)) return;
+
+                MapleHiredMerchant merchant = chr.getHiredMerchant();
+                if (merchant != null) {
+                    merchant.closeOwnerMerchant(chr);
+                }
+            } else if (mode == Action.MAINTENANCE_OFF.getCode()) {
+                if (isTradeOpen(chr)) return;
+
+                MapleHiredMerchant merchant = chr.getHiredMerchant();
+                if(merchant != null) {
+                    if (merchant.getItems().isEmpty() && merchant.isOwner(chr)) {
+                        merchant.closeShop(c, false);
+                        chr.setHasMerchant(false);
+                    }
+                    if (merchant.isOwner(chr)) {
+                        merchant.clearMessages();
+                        merchant.setOpen(true);
+                    }
+                }
+
+                chr.setHiredMerchant(null);
+                c.announce(MaplePacketCreator.enableActions());
+            } else if (mode == Action.BAN_PLAYER.getCode()) {
+                slea.skip(1);
+
+                MaplePlayerShop shop = chr.getPlayerShop();
+                if (shop != null && shop.isOwner(chr)) {
+                    shop.banPlayer(slea.readMapleAsciiString());
+                }
+            } else if (mode == Action.EXPEL.getCode()) {
+                MapleMiniGame miniGame = chr.getMiniGame();
+                if(miniGame != null && miniGame.isOwner(chr)) {
+                    MapleCharacter visitor = miniGame.getVisitor();
+
+                    if(visitor != null) {
+                        visitor.closeMiniGame();
+                        visitor.announce(MaplePacketCreator.getMiniGameClose(5));
+                    }
                 }
             }
+        } finally {
+            c.releaseClient();
         }
     }
     
diff --git a/src/net/server/channel/handlers/RangedAttackHandler.java b/src/net/server/channel/handlers/RangedAttackHandler.java
index 8bd367bc5..7d89da5de 100644
--- a/src/net/server/channel/handlers/RangedAttackHandler.java
+++ b/src/net/server/channel/handlers/RangedAttackHandler.java
@@ -51,8 +51,8 @@
     @Override
     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
         MapleCharacter chr = c.getPlayer();
-        chr.setPetLootCd(currentServerTime());
-		
+        //chr.setPetLootCd(currentServerTime());
+        
         /*long timeElapsed = currentServerTime() - chr.getAutobanManager().getLastSpam(8);
         if(timeElapsed < 300) {
             AutobanFactory.FAST_ATTACK.alert(chr, "Time: " + timeElapsed);
diff --git a/src/net/server/channel/handlers/RingActionHandler.java b/src/net/server/channel/handlers/RingActionHandler.java
index e1d383dac..aa1cf4828 100644
--- a/src/net/server/channel/handlers/RingActionHandler.java
+++ b/src/net/server/channel/handlers/RingActionHandler.java
@@ -273,20 +273,20 @@ public static void breakMarriageRing(MapleCharacter chr, final int wItemId) {
     }
     
     public static void giveMarriageRings(MapleCharacter player, MapleCharacter partner, int marriageRingId) {
-        int ringid = MapleRing.createRing(marriageRingId, player, partner);
+        Pair<Integer, Integer> rings = MapleRing.createRing(marriageRingId, player, partner);
         MapleItemInformationProvider ii = MapleItemInformationProvider.getInstance();
 
         Item ringObj = ii.getEquipById(marriageRingId);
         Equip ringEqp = (Equip) ringObj;
-        ringEqp.setRingId(ringid);
-        player.addMarriageRing(MapleRing.loadFromDb(ringid));
+        ringEqp.setRingId(rings.getLeft());
+        player.addMarriageRing(MapleRing.loadFromDb(rings.getLeft()));
         MapleInventoryManipulator.addFromDrop(player.getClient(), ringEqp, false, -1);
         player.broadcastMarriageMessage();
 
         ringObj = ii.getEquipById(marriageRingId);
         ringEqp = (Equip) ringObj;
-        ringEqp.setRingId(ringid + 1);
-        partner.addMarriageRing(MapleRing.loadFromDb(ringid + 1));
+        ringEqp.setRingId(rings.getRight());
+        partner.addMarriageRing(MapleRing.loadFromDb(rings.getRight()));
         MapleInventoryManipulator.addFromDrop(partner.getClient(), ringEqp, false, -1);
         partner.broadcastMarriageMessage();
     }
@@ -513,6 +513,6 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 break;
         }
         
-        c.getSession().write(MaplePacketCreator.enableActions());
+        c.announce(MaplePacketCreator.enableActions());
     }
 }
diff --git a/src/net/server/channel/handlers/TouchingCashShopHandler.java b/src/net/server/channel/handlers/TouchingCashShopHandler.java
index 900a7a58f..be241138b 100644
--- a/src/net/server/channel/handlers/TouchingCashShopHandler.java
+++ b/src/net/server/channel/handlers/TouchingCashShopHandler.java
@@ -28,9 +28,10 @@
 
 /**
  *
- * @author Acrylic (Terry Han)
+ * @author Terry Han (Acrylic)
  */
 public final class TouchingCashShopHandler extends AbstractMaplePacketHandler {
+    @Override
     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
         c.announce(MaplePacketCreator.showCash(c.getPlayer()));
     }
diff --git a/src/net/server/channel/handlers/UseCashItemHandler.java b/src/net/server/channel/handlers/UseCashItemHandler.java
index 18aeed457..c678d48b1 100644
--- a/src/net/server/channel/handlers/UseCashItemHandler.java
+++ b/src/net/server/channel/handlers/UseCashItemHandler.java
@@ -276,7 +276,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                         if (item == null) //hack
                         {
                             return;
-                        } else if (((item.getFlag() & ItemConstants.UNTRADEABLE) == ItemConstants.UNTRADEABLE) || (ii.isDropRestricted(item.getItemId()) && !MapleKarmaManipulator.hasKarmaFlag(item))) {
+                        } else if (item.isUntradeable()) {
                             player.dropMessage(1, "You cannot trade this item.");
                             c.announce(MaplePacketCreator.enableActions());
                             return;
@@ -299,7 +299,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                     break;
             }
             remove(c, itemId);
-        } else if (itemType == 508) {   // graduation banner, thanks to tmskdl12
+        } else if (itemType == 508) {   // graduation banner, thanks to tmskdl12. Also, thanks ratency for first pointing lack of Kite handling
             MapleKite kite = new MapleKite(player, slea.readMapleAsciiString(), itemId);
             
             if (!GameConstants.isFreeMarketRoom(player.getMapId())) {
@@ -517,7 +517,7 @@ public void run() {
             
             Equip toScroll = (Equip) eitem;
             if (toScroll.getUpgradeSlots() < 1) {
-                c.getSession().write(MaplePacketCreator.getInventoryFull());
+                c.announce(MaplePacketCreator.getInventoryFull());
                 return;
             }
             
@@ -527,10 +527,10 @@ public void run() {
             player.toggleBlockCashShop();
             
             final int curlevel = toScroll.getLevel();
-            c.getSession().write(MaplePacketCreator.sendVegaScroll(0x40));
+            c.announce(MaplePacketCreator.sendVegaScroll(0x40));
             
             final Equip scrolled = (Equip) ii.scrollEquipWithId(toScroll, uitem.getItemId(), false, itemId, player.isGM());
-            c.getSession().write(MaplePacketCreator.sendVegaScroll(scrolled.getLevel() > curlevel ? 0x41 : 0x43));
+            c.announce(MaplePacketCreator.sendVegaScroll(scrolled.getLevel() > curlevel ? 0x41 : 0x43));
             //opcodes 0x42, 0x44: "this item cannot be used"; 0x39, 0x45: crashes
             
             MapleInventoryManipulator.removeFromSlot(c, MapleInventoryType.USE, uSlot, (short) 1, false);
@@ -555,7 +555,7 @@ public void run() {
                         player.equipChanged();
                     }
 
-                    client.getSession().write(MaplePacketCreator.enableActions());
+                    client.announce(MaplePacketCreator.enableActions());
             	}
             }, 1000 * 3);
         } else {
diff --git a/src/net/server/channel/handlers/UseChairHandler.java b/src/net/server/channel/handlers/UseChairHandler.java
index d224c3208..2b3989d3e 100644
--- a/src/net/server/channel/handlers/UseChairHandler.java
+++ b/src/net/server/channel/handlers/UseChairHandler.java
@@ -24,7 +24,6 @@
 import client.MapleClient;
 import client.inventory.MapleInventoryType;
 import net.AbstractMaplePacketHandler;
-import tools.MaplePacketCreator;
 import tools.data.input.SeekableLittleEndianAccessor;
 
 public final class UseChairHandler extends AbstractMaplePacketHandler {
@@ -34,8 +33,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
         if (c.getPlayer().getInventory(MapleInventoryType.SETUP).findById(itemId) == null) {
             return;
         }
-        c.getPlayer().setChair(itemId);
-        c.getPlayer().getMap().broadcastMessage(c.getPlayer(), MaplePacketCreator.showChair(c.getPlayer().getId(), itemId), false);
-        c.announce(MaplePacketCreator.enableActions());
+        
+        c.getPlayer().sitChair(itemId);
     }
 }
diff --git a/src/net/server/channel/handlers/UseMountFoodHandler.java b/src/net/server/channel/handlers/UseMountFoodHandler.java
index bf9c32043..c586c8def 100644
--- a/src/net/server/channel/handlers/UseMountFoodHandler.java
+++ b/src/net/server/channel/handlers/UseMountFoodHandler.java
@@ -25,6 +25,7 @@
 import client.MapleCharacter;
 import client.MapleMount;
 import client.inventory.Item;
+import client.inventory.MapleInventory;
 import client.inventory.MapleInventoryType;
 import constants.ExpTable;
 import net.AbstractMaplePacketHandler;
@@ -45,29 +46,37 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
         
         MapleCharacter chr = c.getPlayer();
         MapleMount mount = chr.getMount();
-        Item item = chr.getInventory(MapleInventoryType.USE).getItem(pos);
-        if (item != null && item.getItemId() == itemid && mount != null) {
-            c.lockClient();
+        MapleInventory useInv = chr.getInventory(MapleInventoryType.USE);
+        
+        if (c.tryacquireClient()) {
             try {
-                int curTiredness = mount.getTiredness();
-                int healedTiredness = Math.min(curTiredness, 30);
-                
-                float healedFactor = (float) healedTiredness / 30;
-                mount.setTiredness(curTiredness - healedTiredness);
-                
-                if (healedFactor > 0.0f) {
-                    mount.setExp(mount.getExp() + (int) Math.ceil(healedFactor * (2 * mount.getLevel() + 6)));
-                    int level = mount.getLevel();
-                    boolean levelup = mount.getExp() >= ExpTable.getMountExpNeededForLevel(level) && level < 31;
-                    if (levelup) {
-                        mount.setLevel(level + 1);
+                useInv.lockInventory();
+                try {
+                    Item item = useInv.getItem(pos);
+                    if (item != null && item.getItemId() == itemid && mount != null) {
+                        int curTiredness = mount.getTiredness();
+                        int healedTiredness = Math.min(curTiredness, 30);
+
+                        float healedFactor = (float) healedTiredness / 30;
+                        mount.setTiredness(curTiredness - healedTiredness);
+
+                        if (healedFactor > 0.0f) {
+                            mount.setExp(mount.getExp() + (int) Math.ceil(healedFactor * (2 * mount.getLevel() + 6)));
+                            int level = mount.getLevel();
+                            boolean levelup = mount.getExp() >= ExpTable.getMountExpNeededForLevel(level) && level < 31;
+                            if (levelup) {
+                                mount.setLevel(level + 1);
+                            }
+                            chr.getMap().broadcastMessage(MaplePacketCreator.updateMount(chr.getId(), mount, levelup));
+                        }
+
+                        MapleInventoryManipulator.removeById(c, MapleInventoryType.USE, itemid, 1, true, false);
                     }
-                    chr.getMap().broadcastMessage(MaplePacketCreator.updateMount(chr.getId(), mount, levelup));
+                } finally {
+                    useInv.unlockInventory();
                 }
-                
-                MapleInventoryManipulator.removeById(c, MapleInventoryType.USE, itemid, 1, true, false);
             } finally {
-                c.unlockClient();
+                c.releaseClient();
             }
         }
     }
diff --git a/src/net/server/channel/handlers/WhisperHandler.java b/src/net/server/channel/handlers/WhisperHandler.java
index 90449fab7..02ded2263 100644
--- a/src/net/server/channel/handlers/WhisperHandler.java
+++ b/src/net/server/channel/handlers/WhisperHandler.java
@@ -49,9 +49,9 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
             String recipient = slea.readMapleAsciiString();
             String text = slea.readMapleAsciiString();
             MapleCharacter player = c.getChannelServer().getPlayerStorage().getCharacterByName(recipient);
-			if(c.getPlayer().getAutobanManager().getLastSpam(7) + 200 > currentServerTime()) {
-				return;
-			}
+            if (c.getPlayer().getAutobanManager().getLastSpam(7) + 200 > currentServerTime()) {
+                return;
+            }
             if (text.length() > Byte.MAX_VALUE && !player.isGM()) {
             	AutobanFactory.PACKET_EDIT.alert(c.getPlayer(), c.getPlayer().getName() + " tried to packet edit with whispers.");
             	FilePrinter.printError(FilePrinter.EXPLOITS + c.getPlayer().getName() + ".txt", c.getPlayer().getName() + " tried to send text with length of " + text.length() + "\r\n");
@@ -92,7 +92,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 } else {
                     c.announce(MaplePacketCreator.getFindReply(victim.getName(), victim.getMap().getId(), 1));
                 }
-            } else if (c.getPlayer().gmLevel() > 1) { // not found
+            } else if (c.getPlayer().isGM()) { // not found
                 try {
                     Connection con = DatabaseConnection.getConnection();
                     PreparedStatement ps = con.prepareStatement("SELECT gm FROM characters WHERE name = ?");
diff --git a/src/net/server/handlers/login/LoginPasswordHandler.java b/src/net/server/handlers/login/LoginPasswordHandler.java
index 1feada78e..a3963ee68 100644
--- a/src/net/server/handlers/login/LoginPasswordHandler.java
+++ b/src/net/server/handlers/login/LoginPasswordHandler.java
@@ -37,6 +37,9 @@
 import client.MapleClient;
 import java.sql.ResultSet;
 import java.sql.Statement;
+import java.io.UnsupportedEncodingException;
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
 
 public final class LoginPasswordHandler implements MaplePacketHandler {
 
@@ -45,6 +48,11 @@ public boolean validateState(MapleClient c) {
         return !c.isLoggedIn();
     }
 
+    private static String hashpwSHA512(String pwd) throws NoSuchAlgorithmException, UnsupportedEncodingException {
+        MessageDigest digester = MessageDigest.getInstance("SHA-512");
+        digester.update(pwd.getBytes("UTF-8"), 0, pwd.length());
+        return HexTool.toString(digester.digest()).replace(" ", "").toLowerCase();
+    }
 
     @Override
     public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c) {
@@ -65,7 +73,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 con = DatabaseConnection.getConnection();
                 ps = con.prepareStatement("INSERT INTO accounts (name, password, birthday, tempban) VALUES (?, ?, ?, ?);", Statement.RETURN_GENERATED_KEYS); //Jayd: Added birthday, tempban
                 ps.setString(1, login);
-                ps.setString(2, BCrypt.hashpw(pwd, BCrypt.gensalt(12)));
+                ps.setString(2, ServerConstants.BCRYPT_MIGRATION ? BCrypt.hashpw(pwd, BCrypt.gensalt(12)) : hashpwSHA512(pwd));
                 ps.setString(3, "2018-06-20"); //Jayd's idea: was added to solve the MySQL 5.7 strict checking (birthday)
                 ps.setString(4, "2018-06-20"); //Jayd's idea: was added to solve the MySQL 5.7 strict checking (tempban)
                 ps.executeUpdate();
@@ -74,7 +82,7 @@ public final void handlePacket(SeekableLittleEndianAccessor slea, MapleClient c)
                 rs.next();
                 c.setAccID(rs.getInt(1));
                 rs.close();
-            } catch (SQLException e) {
+            } catch (SQLException | NoSuchAlgorithmException | UnsupportedEncodingException e) {
                 e.printStackTrace();
             } finally {
                 disposeSql(con, ps);
diff --git a/src/scripting/AbstractPlayerInteraction.java b/src/scripting/AbstractPlayerInteraction.java
index 919c447d7..e63efc7df 100644
--- a/src/scripting/AbstractPlayerInteraction.java
+++ b/src/scripting/AbstractPlayerInteraction.java
@@ -682,8 +682,8 @@ public boolean isPartyLeader() {
         public boolean isEventLeader() {
 		return getEventInstance() != null && getPlayer().getId() == getEventInstance().getLeaderId();
 	}
-
-	public void givePartyItems(int id, short quantity, List<MapleCharacter> party) {
+        
+        public void givePartyItems(int id, short quantity, List<MapleCharacter> party) {
 		for (MapleCharacter chr : party) {
 			MapleClient cl = chr.getClient();
 			if (quantity >= 0) {
@@ -695,7 +695,6 @@ public void givePartyItems(int id, short quantity, List<MapleCharacter> party) {
 		}
 	}
 
-
 	public void removeHPQItems() {
 		int[] items = {4001095, 4001096, 4001097, 4001098, 4001099, 4001100, 4001101};
 		for (int i = 0; i < items.length; i ++) {
diff --git a/src/scripting/event/EventInstanceManager.java b/src/scripting/event/EventInstanceManager.java
index 5592d99d3..d1e599ea5 100644
--- a/src/scripting/event/EventInstanceManager.java
+++ b/src/scripting/event/EventInstanceManager.java
@@ -345,7 +345,7 @@ public void run() {
         
         private void dismissEventTimer() {
                 for(MapleCharacter chr: getPlayers()) {
-                        chr.getClient().getSession().write(MaplePacketCreator.removeClock());
+                        chr.getClient().announce(MaplePacketCreator.removeClock());
                 }
                 
                 event_schedule = null;
diff --git a/src/server/CashShop.java b/src/server/CashShop.java
index d32991dc0..faa7df8be 100644
--- a/src/server/CashShop.java
+++ b/src/server/CashShop.java
@@ -582,4 +582,9 @@ public synchronized Item openCashShopSurprise() {
             return null;
         }
     }
+    
+    public static Item generateCouponItem(int itemId, short quantity) {
+        CashItem it = new CashItem(77777777, itemId, 7777, ItemConstants.isPet(itemId) ? 30 : 0, quantity, true);
+        return it.toItem();
+    }
 }
diff --git a/src/server/MapleItemInformationProvider.java b/src/server/MapleItemInformationProvider.java
index 6c2929ccb..241872282 100644
--- a/src/server/MapleItemInformationProvider.java
+++ b/src/server/MapleItemInformationProvider.java
@@ -373,6 +373,7 @@ private MapleData getItemData(int itemId) {
     private static short getExtraSlotMaxFromPlayer(MapleClient c, int itemId) {
         short ret = 0;
         
+        // thanks GMChuck for detecting player sensitive data being cached into getSlotMax
         if (ItemConstants.isThrowingStar(itemId)) {
             if(c.getPlayer().getJob().isA(MapleJob.NIGHTWALKER1)) {
                 ret += c.getPlayer().getSkillLevel(SkillFactory.getSkill(NightWalker.CLAW_MASTERY)) * 10;
@@ -658,11 +659,11 @@ public static boolean rollSuccessChance(double prop) {
     }
     
     private static short getMaximumShortMaxIfOverflow(int value1, int value2) {
-        return (short)Math.min(Short.MAX_VALUE, Math.max(value1, value2));
+        return (short) Math.min(Short.MAX_VALUE, Math.max(value1, value2));
     }
     
     private static short getShortMaxIfOverflow(int value) {
-        return (short)Math.min(Short.MAX_VALUE, value);
+        return (short) Math.min(Short.MAX_VALUE, value);
     }
     
     private static short chscrollRandomizedStat(int range) {
diff --git a/src/server/MapleShop.java b/src/server/MapleShop.java
index 18dab7152..3364e36ee 100644
--- a/src/server/MapleShop.java
+++ b/src/server/MapleShop.java
@@ -94,12 +94,12 @@ public void buy(MapleClient c, short slot, int itemId, short quantity) {
             if (c.getPlayer().getMeso() >= amount) {
                 if (MapleInventoryManipulator.checkSpace(c, itemId, quantity, "")) {
                     if (!ItemConstants.isRechargeable(itemId)) { //Pets can't be bought from shops
-                        MapleInventoryManipulator.addById(c, itemId, quantity);          
+                        MapleInventoryManipulator.addById(c, itemId, quantity, "", -1);          
                         c.getPlayer().gainMeso(-amount, false);
                     } else {
                         short slotMax = ii.getSlotMax(c, item.getItemId());
                         quantity = slotMax;
-                        MapleInventoryManipulator.addById(c, itemId, quantity);
+                        MapleInventoryManipulator.addById(c, itemId, quantity, "", -1);
                         c.getPlayer().gainMeso(-item.getPrice(), false);
                     }
                     c.announce(MaplePacketCreator.shopTransaction((byte) 0));
@@ -115,12 +115,12 @@ public void buy(MapleClient c, short slot, int itemId, short quantity) {
             if (c.getPlayer().getInventory(MapleInventoryType.ETC).countById(4310000) >= amount) {
                 if (MapleInventoryManipulator.checkSpace(c, itemId, quantity, "")) {
                     if (!ItemConstants.isRechargeable(itemId)) {
-                        MapleInventoryManipulator.addById(c, itemId, quantity);
+                        MapleInventoryManipulator.addById(c, itemId, quantity, "", -1);
                         MapleInventoryManipulator.removeById(c, MapleInventoryType.ETC, 4310000, amount, false, false);
                     } else {
                         short slotMax = ii.getSlotMax(c, item.getItemId());
                         quantity = slotMax;
-                        MapleInventoryManipulator.addById(c, itemId, quantity);
+                        MapleInventoryManipulator.addById(c, itemId, quantity, "", -1);
                         MapleInventoryManipulator.removeById(c, MapleInventoryType.ETC, 4310000, amount, false, false);
                     }
                     c.announce(MaplePacketCreator.shopTransaction((byte) 0));
@@ -138,9 +138,9 @@ public void buy(MapleClient c, short slot, int itemId, short quantity) {
                 if (MapleInventoryManipulator.checkSpace(c, itemId, quantity, "")) {
                     if (ItemConstants.isPet(itemId)) {
                         int petid = MaplePet.createPet(itemId);
-                        MapleInventoryManipulator.addById(c, itemId, quantity, null, petid, -1);
+                        MapleInventoryManipulator.addById(c, itemId, quantity, "", petid, -1);
                     } else {
-                        MapleInventoryManipulator.addById(c, itemId, quantity);
+                        MapleInventoryManipulator.addById(c, itemId, quantity, "", -1, -1);
                     }
                     c.getPlayer().gainMeso(diff, false);
                 } else {
diff --git a/src/server/maps/MapleHiredMerchant.java b/src/server/maps/MapleHiredMerchant.java
index 1626ba0d5..13d611305 100644
--- a/src/server/maps/MapleHiredMerchant.java
+++ b/src/server/maps/MapleHiredMerchant.java
@@ -376,7 +376,7 @@ public void closeShop(MapleClient c, boolean timeout) {
                         if (mpsi.getItem().getInventoryType().equals(MapleInventoryType.EQUIP)) {
                             MapleInventoryManipulator.addFromDrop(c, mpsi.getItem(), false);
                         } else {
-                            MapleInventoryManipulator.addById(c, mpsi.getItem().getItemId(), (short) (mpsi.getBundles() * mpsi.getItem().getQuantity()), null, -1, mpsi.getItem().getFlag(), mpsi.getItem().getExpiration());
+                            MapleInventoryManipulator.addById(c, mpsi.getItem().getItemId(), (short) (mpsi.getBundles() * mpsi.getItem().getQuantity()), mpsi.getItem().getOwner(), -1, mpsi.getItem().getFlag(), mpsi.getItem().getExpiration());
                         }
                     }
                 }
diff --git a/src/server/maps/MapleKite.java b/src/server/maps/MapleKite.java
index 5f210522d..0ee937d62 100644
--- a/src/server/maps/MapleKite.java
+++ b/src/server/maps/MapleKite.java
@@ -43,12 +43,12 @@ public void setPosition(Point position) {
 
     @Override
     public void sendDestroyData(MapleClient client) {
-        client.getSession().write(makeDestroyData());
+        client.announce(makeDestroyData());
     }
 
     @Override
     public void sendSpawnData(MapleClient client) {
-        client.getSession().write(makeSpawnData());
+        client.announce(makeSpawnData());
     }
 
     public final byte[] makeSpawnData() {
diff --git a/src/server/maps/MapleMap.java b/src/server/maps/MapleMap.java
index 66f1bc867..04162be5d 100644
--- a/src/server/maps/MapleMap.java
+++ b/src/server/maps/MapleMap.java
@@ -3882,7 +3882,7 @@ public boolean isHorntailDefeated() {   // all parts of dead horntail can be fou
     
     public void spawnHorntailOnGroundBelow(final Point targetPoint) {   // ayy lmao
         MapleMonster htIntro = MapleLifeFactory.getMonster(8810026);
-        spawnMonsterOnGroundBelow(htIntro, targetPoint);
+        spawnMonsterOnGroundBelow(htIntro, targetPoint);    // htintro spawn animation converting into horntail detected thanks to Arnah
         
         final MapleMonster ht = MapleLifeFactory.getMonster(8810018);
         ht.setParentMobOid(htIntro.getObjectId());
diff --git a/src/server/maps/MapleMapFactory.java b/src/server/maps/MapleMapFactory.java
index 9702f58cc..d959a3686 100644
--- a/src/server/maps/MapleMapFactory.java
+++ b/src/server/maps/MapleMapFactory.java
@@ -427,21 +427,14 @@ public void setWorld(int world) {
     public Map<Integer, MapleMap> getMaps() {
         mapsRLock.lock();
         try {
-            return Collections.unmodifiableMap(maps);
+            return new HashMap<>(maps);
         } finally {
             mapsRLock.unlock();
         }
     }
     
     public void dispose() {
-        Collection<MapleMap> mapValues;
-        
-        mapsRLock.lock();
-        try {
-            mapValues = maps.values();
-        } finally {
-            mapsRLock.unlock();
-        }
+        Collection<MapleMap> mapValues = getMaps().values();
         
         for(MapleMap map: mapValues) {
             map.dispose();
diff --git a/src/server/maps/MapleMiniGame.java b/src/server/maps/MapleMiniGame.java
index 507cac4a5..499b76bf4 100644
--- a/src/server/maps/MapleMiniGame.java
+++ b/src/server/maps/MapleMiniGame.java
@@ -23,6 +23,7 @@
 
 import client.MapleCharacter;
 import client.MapleClient;
+import net.server.Server;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
@@ -31,23 +32,25 @@
 /**
  *
  * @author Matze
- * @author Ronan (refactored String GameType to enum MiniGameType)
+ * @author Ronan (HeavenMS)
  */
 public class MapleMiniGame extends AbstractMapleMapObject {
     private MapleCharacter owner;
     private MapleCharacter visitor;
     private String password;
     private MiniGameType GameType = MiniGameType.UNDEFINED;
+    private int piecetype;
+    private int inprogress = 0;
     private int[] piece = new int[250];
     private List<Integer> list4x3 = new ArrayList<>();
     private List<Integer> list5x4 = new ArrayList<>();
     private List<Integer> list6x5 = new ArrayList<>();
     private String description;
     private int loser = 1;
-    private int piecetype;
     private int firstslot = 0;
-    private int visitorpoints = 0;
-    private int ownerpoints = 0;
+    private int visitorpoints = 0, visitorscore = 0, visitorforfeits = 0, lastvisitor = -1;
+    private int ownerpoints = 0, ownerscore = 0, ownerforfeits = 0;
+    private long nextavailabletie = 0;
     private int matchestowin = 0;
 
     public static enum MiniGameType {
@@ -91,12 +94,21 @@ public boolean isOwner(MapleCharacter c) {
     
     public void addVisitor(MapleCharacter challenger) {
         visitor = challenger;
+        if (lastvisitor != challenger.getId()) {
+            ownerscore = 0;
+            ownerforfeits = 0;
+            
+            visitorscore = 0;
+            visitorforfeits = 0;
+            lastvisitor = challenger.getId();
+        }
+        
         MapleCharacter owner = this.getOwner();
         if (GameType == MiniGameType.OMOK) {
-            owner.announce(MaplePacketCreator.getMiniGameNewVisitor(challenger, 1));
+            owner.announce(MaplePacketCreator.getMiniGameNewVisitor(this, challenger, 1));
             owner.getMap().broadcastMessage(MaplePacketCreator.addOmokBox(owner, 2, 0));
         } else if (GameType == MiniGameType.MATCH_CARD) {
-            owner.announce(MaplePacketCreator.getMatchCardNewVisitor(challenger, 1));
+            owner.announce(MaplePacketCreator.getMatchCardNewVisitor(this, challenger, 1));
             owner.getMap().broadcastMessage(MaplePacketCreator.addMatchCardBox(owner, 2, 0));
         }
     }
@@ -117,6 +129,13 @@ public boolean isVisitor(MapleCharacter challenger) {
         return visitor == challenger;
     }
 
+    public void broadcastToOwner(final byte[] packet) {
+        MapleClient c = owner.getClient();
+        if (c != null && c.getSession() != null) {
+            c.announce(packet);
+        }
+    }
+    
     public void broadcastToVisitor(final byte[] packet) {
         if (visitor != null) {
             visitor.getClient().announce(packet);
@@ -131,15 +150,83 @@ public int getFirstSlot() {
         return firstslot;
     }
 
+    private void updateMiniGameBox() {
+        this.getOwner().getMap().broadcastMessage(MaplePacketCreator.addOmokBox(owner, visitor != null ? 2 : 1, inprogress));
+    }
+    
+    private void minigameMatchFinished() {
+        inprogress = 0;
+        updateMiniGameBox();
+    }
+    
+    public void minigameMatchStarted() {
+        inprogress = 1;
+    }
+    
+    public boolean isMatchInProgress() {
+        return inprogress != 0;
+    }
+    
+    public void denyTie(MapleCharacter chr) {
+        if (this.isOwner(chr)) {
+            inprogress |= (1 << 1);
+        } else {
+            inprogress |= (1 << 2);
+        }
+    }
+    
+    public boolean isTieDenied(MapleCharacter chr) {
+        if (this.isOwner(chr)) {
+            return ((inprogress >> 1) % 2) == 1;
+        } else {
+            return ((inprogress >> 2) % 2) == 1;
+        }
+    }
+    
+    public void minigameMatchOwnerWins(boolean forfeit) {
+        owner.setMiniGamePoints(visitor, 1, this.isOmok());
+        if (visitorforfeits < 4 || !forfeit) ownerscore += 50;
+        visitorscore += (15 * (forfeit ? -1 : 1));
+        if (forfeit) visitorforfeits++;
+        
+        this.broadcast(MaplePacketCreator.getMiniGameOwnerWin(this, forfeit));
+        minigameMatchFinished();
+    }
+    
+    public void minigameMatchVisitorWins(boolean forfeit) {
+        owner.setMiniGamePoints(visitor, 2, this.isOmok());
+        if (ownerforfeits < 4 || !forfeit) visitorscore += 50;
+        ownerscore += (15 * (forfeit ? -1 : 1));
+        if (forfeit) ownerforfeits++;
+        
+        this.broadcast(MaplePacketCreator.getMiniGameVisitorWin(this, forfeit));
+        minigameMatchFinished();
+    }
+    
+    public void minigameMatchDraw() {
+        owner.setMiniGamePoints(visitor, 3, this.isOmok());
+        
+        long timeNow = Server.getInstance().getCurrentTime();
+        if (nextavailabletie <= timeNow) {
+            visitorscore += 10;
+            ownerscore += 10;
+            
+            nextavailabletie = timeNow + 5 * 60 * 1000;
+        }
+        
+        this.broadcast(MaplePacketCreator.getMiniGameTie(this));
+        minigameMatchFinished();
+    }
+    
     public void setOwnerPoints() {
         ownerpoints++;
         if (ownerpoints + visitorpoints == matchestowin) {
             if (ownerpoints == visitorpoints) {
-                this.broadcast(MaplePacketCreator.getMatchCardTie(this));
+                minigameMatchDraw();
             } else if (ownerpoints > visitorpoints) {
-                this.broadcast(MaplePacketCreator.getMatchCardOwnerWin(this));
+                minigameMatchOwnerWins(false);
             } else {
-                this.broadcast(MaplePacketCreator.getMatchCardVisitorWin(this));
+                minigameMatchVisitorWins(false);
             }
             ownerpoints = 0;
             visitorpoints = 0;
@@ -150,11 +237,11 @@ public void setVisitorPoints() {
         visitorpoints++;
         if (ownerpoints + visitorpoints == matchestowin) {
             if (ownerpoints > visitorpoints) {
-                this.broadcast(MaplePacketCreator.getMiniGameOwnerWin(this));
+                minigameMatchOwnerWins(false);
             } else if (visitorpoints > ownerpoints) {
-                this.broadcast(MaplePacketCreator.getMiniGameVisitorWin(this));
+                minigameMatchVisitorWins(false);
             } else {
-                this.broadcast(MaplePacketCreator.getMiniGameTie(this));
+                minigameMatchDraw();
             }
             ownerpoints = 0;
             visitorpoints = 0;
@@ -198,6 +285,10 @@ public void setGameType(MiniGameType game) {
     public MiniGameType getGameType() {
         return GameType;
     }
+    
+    public boolean isOmok() {
+        return GameType.equals(MiniGameType.OMOK);
+    }
 
     public void shuffleList() {
         if (matchestowin == 6) {
@@ -212,11 +303,11 @@ public void shuffleList() {
     public int getCardId(int slot) {
         int cardid;
         if (matchestowin == 6) {
-            cardid = list4x3.get(slot - 1);
+            cardid = list4x3.get(slot);
         } else if (matchestowin == 10) {
-            cardid = list5x4.get(slot - 1);
+            cardid = list5x4.get(slot);
         } else {
-            cardid = list6x5.get(slot - 1);
+            cardid = list6x5.get(slot);
         }
         return cardid;
     }
@@ -234,10 +325,7 @@ public int getLoser() {
     }
 
     public void broadcast(final byte[] packet) {
-        MapleClient c = owner.getClient();
-        if (c != null && c.getSession() != null) {
-            c.announce(packet);
-        }
+        broadcastToOwner(packet);
         broadcastToVisitor(packet);
     }
 
@@ -270,10 +358,10 @@ public void setPiece(int move1, int move2, int type, MapleCharacter chr) {
                 for (int x = 0; x < 11; x++) {
                     if (searchCombo(x, y, type)) {
                         if (this.isOwner(chr)) {
-                            this.broadcast(MaplePacketCreator.getMiniGameOwnerWin(this));
+                            this.minigameMatchOwnerWins(false);
                             this.setLoser(0);
                         } else {
-                            this.broadcast(MaplePacketCreator.getMiniGameVisitorWin(this));
+                            this.minigameMatchVisitorWins(false);
                             this.setLoser(1);
                         }
                         for (int y2 = 0; y2 < 15; y2++) {
@@ -289,10 +377,10 @@ public void setPiece(int move1, int move2, int type, MapleCharacter chr) {
                 for (int x = 4; x < 15; x++) {
                     if (searchCombo2(x, y, type)) {
                         if (this.isOwner(chr)) {
-                            this.broadcast(MaplePacketCreator.getMiniGameOwnerWin(this));
+                            this.minigameMatchOwnerWins(false);
                             this.setLoser(0);
                         } else {
-                            this.broadcast(MaplePacketCreator.getMiniGameVisitorWin(this));
+                            this.minigameMatchVisitorWins(false);
                             this.setLoser(1);
                         }
                         for (int y2 = 0; y2 < 15; y2++) {
@@ -351,14 +439,20 @@ private boolean searchCombo2(int x, int y, int type) {
     public String getDescription() {
         return description;
     }
+    
+    public int getOwnerScore() {
+        return ownerscore;
+    }
+    
+    public int getVisitorScore() {
+        return visitorscore;
+    }
 
     @Override
-    public void sendDestroyData(MapleClient client) {
-    }
+    public void sendDestroyData(MapleClient client) {}
 
     @Override
-    public void sendSpawnData(MapleClient client) {
-    }
+    public void sendSpawnData(MapleClient client) {}
 
     @Override
     public MapleMapObjectType getType() {
diff --git a/src/server/quest/MapleQuest.java b/src/server/quest/MapleQuest.java
index 6a99916b9..cf4ad35e0 100644
--- a/src/server/quest/MapleQuest.java
+++ b/src/server/quest/MapleQuest.java
@@ -354,7 +354,7 @@ public boolean forceComplete(MapleCharacter c, int npc) {
         newStatus.setCompletionTime(System.currentTimeMillis());
         c.updateQuest(newStatus);
         
-        c.getClient().getSession().write(MaplePacketCreator.showSpecialEffect(9)); // Quest completion
+        c.announce(MaplePacketCreator.showSpecialEffect(9)); // Quest completion
         c.getMap().broadcastMessage(c, MaplePacketCreator.showForeignEffect(c.getId(), 9), false); //use 9 instead of 12 for both
         return true;
     }
diff --git a/src/server/quest/actions/ItemAction.java b/src/server/quest/actions/ItemAction.java
index b5b949d09..1491515a9 100644
--- a/src/server/quest/actions/ItemAction.java
+++ b/src/server/quest/actions/ItemAction.java
@@ -149,7 +149,7 @@ public void run(MapleCharacter chr, Integer extSelection) {
                 }
                 
                 for(Pair<Integer, Integer> iPair: giveItem) {
-                        MapleInventoryManipulator.addById(chr.getClient(), iPair.getLeft(), (short) iPair.getRight().shortValue());
+                        MapleInventoryManipulator.addById(chr.getClient(), iPair.getLeft(), (short) iPair.getRight().shortValue(), "", -1);
                         chr.announce(MaplePacketCreator.getShowItemGain(iPair.getLeft(), (short) iPair.getRight().shortValue(), true));
                 }
 	}
diff --git a/src/tools/MaplePacketCreator.java b/src/tools/MaplePacketCreator.java
index c8d1a8fd0..efd05534e 100644
--- a/src/tools/MaplePacketCreator.java
+++ b/src/tools/MaplePacketCreator.java
@@ -1996,9 +1996,9 @@ private static void encodeParentlessMobSpawnEffect(MaplePacketLittleEndianWriter
                         MapleMiniGame miniGame = chr.getMiniGame();
                         if (miniGame != null && miniGame.isOwner(chr)) {
                                 if (miniGame.hasFreeSlot()) {
-                                        spawnAnnounceBox(mplew, miniGame, 0, 1, 0);
+                                        addAnnounceBox(mplew, miniGame, 1, 0);
                                 } else {
-                                        spawnAnnounceBox(mplew, miniGame, 0, 2, 1);
+                                        addAnnounceBox(mplew, miniGame, 2, miniGame.isMatchInProgress() ? 1 : 0);
                                 }
                         } else {
                                 mplew.write(0);
@@ -2170,23 +2170,12 @@ private static void addAnnounceBox(final MaplePacketLittleEndianWriter mplew, Ma
                 mplew.write(0);
         }
 
-        private static void addAnnounceBox(final MaplePacketLittleEndianWriter mplew, MapleMiniGame game, int type, int ammount, int joinable) {
-                mplew.write(game.getGameType().getValue());
-                mplew.writeInt(game.getObjectId()); // gameid/shopid
-                mplew.writeMapleAsciiString(game.getDescription()); // desc
-                mplew.writeMapleAsciiString(game.getPassword());
-                mplew.write(type);
-                mplew.write(ammount);
-                mplew.write(2);
-                mplew.write(joinable);
-        }
-        
-        private static void spawnAnnounceBox(final MaplePacketLittleEndianWriter mplew, MapleMiniGame game, int type, int ammount, int joinable) {
+        private static void addAnnounceBox(final MaplePacketLittleEndianWriter mplew, MapleMiniGame game, int ammount, int joinable) {
                 mplew.write(game.getGameType().getValue());
                 mplew.writeInt(game.getObjectId()); // gameid/shopid
                 mplew.writeMapleAsciiString(game.getDescription()); // desc
                 mplew.writeBool(!game.getPassword().isEmpty());    // password here, thanks GabrielSin!
-                mplew.write(type);
+                mplew.write(game.getPieceType());
                 mplew.write(ammount);
                 mplew.write(2);         //player capacity
                 mplew.write(joinable);
@@ -5016,7 +5005,7 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 mplew.writeInt(minigame.getOwner().getMiniGamePoints(MiniGameResult.WIN, true));
                 mplew.writeInt(minigame.getOwner().getMiniGamePoints(MiniGameResult.TIE, true));
                 mplew.writeInt(minigame.getOwner().getMiniGamePoints(MiniGameResult.LOSS, true));
-                mplew.writeInt(2000);
+                mplew.writeInt(minigame.getOwnerScore());
                 if (minigame.getVisitor() != null) {
                         MapleCharacter visitor = minigame.getVisitor();
                         mplew.write(1);
@@ -5024,7 +5013,7 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                         mplew.writeInt(visitor.getMiniGamePoints(MiniGameResult.WIN, true));
                         mplew.writeInt(visitor.getMiniGamePoints(MiniGameResult.TIE, true));
                         mplew.writeInt(visitor.getMiniGamePoints(MiniGameResult.LOSS, true));
-                        mplew.writeInt(2000);
+                        mplew.writeInt(minigame.getVisitorScore());
                 }
                 mplew.write(0xFF);
                 mplew.writeMapleAsciiString(minigame.getDescription());
@@ -5115,7 +5104,7 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 return mplew.getPacket();
         }
 
-        public static byte[] getMiniGameNewVisitor(MapleCharacter c, int slot) {
+        public static byte[] getMiniGameNewVisitor(MapleMiniGame minigame, MapleCharacter c, int slot) {
                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
                 mplew.writeShort(SendOpcode.PLAYER_INTERACTION.getValue());
                 mplew.write(PlayerInteractionHandler.Action.VISIT.getCode());
@@ -5126,7 +5115,7 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 mplew.writeInt(c.getMiniGamePoints(MiniGameResult.WIN, true));
                 mplew.writeInt(c.getMiniGamePoints(MiniGameResult.TIE, true));
                 mplew.writeInt(c.getMiniGamePoints(MiniGameResult.LOSS, true));
-                mplew.writeInt(2000);
+                mplew.writeInt(minigame.getVisitorScore());
                 return mplew.getPacket();
         }
 
@@ -5138,50 +5127,64 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 return mplew.getPacket();
         }
 
-        private static byte[] getMiniGameResult(MapleMiniGame game, int win, int lose, int tie, int result, int forfeit, boolean omok) {
+        private static byte[] getMiniGameResult(MapleMiniGame game, int tie, int result, int forfeit) {
                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
                 mplew.writeShort(SendOpcode.PLAYER_INTERACTION.getValue());
                 mplew.write(PlayerInteractionHandler.Action.GET_RESULT.getCode());
+                
+                int matchResultType;
                 if (tie == 0 && forfeit != 1) {
+                        matchResultType = 0;
+                } else if (tie != 0) {
+                        matchResultType = 1;
+                } else {
+                        matchResultType = 2;
+                }
+                
+                mplew.write(matchResultType);
+                mplew.writeBool(result == 2); // host/visitor wins
+                
+                boolean omok = game.isOmok();
+                if (matchResultType == 1) {
                         mplew.write(0);
-                } else if (tie == 1) {
-                        mplew.write(1);
-                } else if (forfeit == 1) {
-                        mplew.write(2);
+                        mplew.writeShort(0);
+                        mplew.writeInt(game.getOwner().getMiniGamePoints(MiniGameResult.WIN, omok)); // wins
+                        mplew.writeInt(game.getOwner().getMiniGamePoints(MiniGameResult.TIE, omok)); // ties
+                        mplew.writeInt(game.getOwner().getMiniGamePoints(MiniGameResult.LOSS, omok)); // losses
+                        mplew.writeInt(game.getOwnerScore()); // points
+
+                        mplew.writeInt(0); // unknown
+                        mplew.writeInt(game.getVisitor().getMiniGamePoints(MiniGameResult.WIN, omok)); // wins
+                        mplew.writeInt(game.getVisitor().getMiniGamePoints(MiniGameResult.TIE, omok)); // ties
+                        mplew.writeInt(game.getVisitor().getMiniGamePoints(MiniGameResult.LOSS, omok)); // losses
+                        mplew.writeInt(game.getVisitorScore()); // points
+                        mplew.write(0);
+                } else {
+                        mplew.writeInt(0);
+                        mplew.writeInt(game.getOwner().getMiniGamePoints(MiniGameResult.WIN, omok)); // wins
+                        mplew.writeInt(game.getOwner().getMiniGamePoints(MiniGameResult.TIE, omok)); // ties
+                        mplew.writeInt(game.getOwner().getMiniGamePoints(MiniGameResult.LOSS, omok)); // losses
+                        mplew.writeInt(game.getOwnerScore()); // points
+                        mplew.writeInt(0);
+                        mplew.writeInt(game.getVisitor().getMiniGamePoints(MiniGameResult.WIN, omok)); // wins
+                        mplew.writeInt(game.getVisitor().getMiniGamePoints(MiniGameResult.TIE, omok)); // ties
+                        mplew.writeInt(game.getVisitor().getMiniGamePoints(MiniGameResult.LOSS, omok)); // losses
+                        mplew.writeInt(game.getVisitorScore()); // points
                 }
-                mplew.write(0); // owner
-                mplew.writeInt(1); // unknown
-                mplew.writeInt(game.getOwner().getMiniGamePoints(MiniGameResult.WIN, omok) + win); // wins
-                mplew.writeInt(game.getOwner().getMiniGamePoints(MiniGameResult.TIE, omok) + tie); // ties
-                mplew.writeInt(game.getOwner().getMiniGamePoints(MiniGameResult.LOSS, omok) + lose); // losses
-                mplew.writeInt(2000); // points
-                mplew.writeInt(1); // start of visitor; unknown
-                mplew.writeInt(game.getVisitor().getMiniGamePoints(MiniGameResult.WIN, omok) + lose); // wins
-                mplew.writeInt(game.getVisitor().getMiniGamePoints(MiniGameResult.TIE, omok) + tie); // ties
-                mplew.writeInt(game.getVisitor().getMiniGamePoints(MiniGameResult.LOSS, omok) + win); // losses
-                mplew.writeInt(2000); // points
-                game.getOwner().setMiniGamePoints(game.getVisitor(), result, omok);
+                
                 return mplew.getPacket();
         }
 
-        public static byte[] getMiniGameOwnerWin(MapleMiniGame game) {
-                return getMiniGameResult(game, 0, 1, 0, 1, 0, true);
+        public static byte[] getMiniGameOwnerWin(MapleMiniGame game, boolean forfeit) {
+                return getMiniGameResult(game, 0, 1, forfeit ? 1 : 0);
         }
 
-        public static byte[] getMiniGameVisitorWin(MapleMiniGame game) {
-                return getMiniGameResult(game, 1, 0, 0, 2, 0, true);
+        public static byte[] getMiniGameVisitorWin(MapleMiniGame game, boolean forfeit) {
+                return getMiniGameResult(game, 0, 2, forfeit ? 1 : 0);
         }
 
         public static byte[] getMiniGameTie(MapleMiniGame game) {
-                return getMiniGameResult(game, 0, 0, 1, 3, 0, true);
-        }
-
-        public static byte[] getMiniGameOwnerForfeit(MapleMiniGame game) {
-                return getMiniGameResult(game, 0, 1, 0, 2, 1, true);
-        }
-
-        public static byte[] getMiniGameVisitorForfeit(MapleMiniGame game) {
-                return getMiniGameResult(game, 1, 0, 0, 1, 1, true);
+                return getMiniGameResult(game, 1, 3, 0);
         }
 
         public static byte[] getMiniGameClose(int type) {
@@ -5215,7 +5218,9 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 mplew.writeInt(minigame.getOwner().getMiniGamePoints(MiniGameResult.WIN, false));
                 mplew.writeInt(minigame.getOwner().getMiniGamePoints(MiniGameResult.TIE, false));
                 mplew.writeInt(minigame.getOwner().getMiniGamePoints(MiniGameResult.LOSS, false));
-                mplew.writeInt(2000);
+                
+                //set vs
+                mplew.writeInt(minigame.getOwnerScore());
                 if (minigame.getVisitor() != null) {
                         MapleCharacter visitor = minigame.getVisitor();
                         mplew.write(1);
@@ -5223,7 +5228,7 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                         mplew.writeInt(visitor.getMiniGamePoints(MiniGameResult.WIN, false));
                         mplew.writeInt(visitor.getMiniGamePoints(MiniGameResult.TIE, false));
                         mplew.writeInt(visitor.getMiniGamePoints(MiniGameResult.LOSS, false));
-                        mplew.writeInt(2000);
+                        mplew.writeInt(minigame.getVisitorScore());
                 }
                 mplew.write(0xFF);
                 mplew.writeMapleAsciiString(minigame.getDescription());
@@ -5237,20 +5242,24 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 mplew.writeShort(SendOpcode.PLAYER_INTERACTION.getValue());
                 mplew.write(PlayerInteractionHandler.Action.START.getCode());
                 mplew.write(loser);
-                mplew.write(0x0C);
-                int last = 13;
+                
+                int last;
                 if (game.getMatchesToWin() > 10) {
-                        last = 31;
+                        last = 30;
                 } else if (game.getMatchesToWin() > 6) {
-                        last = 21;
+                        last = 20;
+                } else {
+                        last = 12;
                 }
-                for (int i = 1; i < last; i++) {
+                
+                mplew.write(last);
+                for (int i = 0; i < last; i++) {
                         mplew.writeInt(game.getCardId(i));
                 }
                 return mplew.getPacket();
         }
 
-        public static byte[] getMatchCardNewVisitor(MapleCharacter c, int slot) {
+        public static byte[] getMatchCardNewVisitor(MapleMiniGame minigame, MapleCharacter c, int slot) {
                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
                 mplew.writeShort(SendOpcode.PLAYER_INTERACTION.getValue());
                 mplew.write(PlayerInteractionHandler.Action.VISIT.getCode());
@@ -5261,7 +5270,7 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 mplew.writeInt(c.getMiniGamePoints(MiniGameResult.WIN, false));
                 mplew.writeInt(c.getMiniGamePoints(MiniGameResult.TIE, false));
                 mplew.writeInt(c.getMiniGamePoints(MiniGameResult.LOSS, false));
-                mplew.writeInt(2000);
+                mplew.writeInt(minigame.getVisitorScore());
                 return mplew.getPacket();
         }
 
@@ -5280,18 +5289,6 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 return mplew.getPacket();
         }
 
-        public static byte[] getMatchCardOwnerWin(MapleMiniGame game) {
-                return getMiniGameResult(game, 1, 0, 0, 1, 0, false);
-        }
-
-        public static byte[] getMatchCardVisitorWin(MapleMiniGame game) {
-                return getMiniGameResult(game, 0, 1, 0, 2, 0, false);
-        }
-
-        public static byte[] getMatchCardTie(MapleMiniGame game) {
-                return getMiniGameResult(game, 0, 0, 1, 3, 0, false);
-        }
-
         public static byte[] fredrickMessage(byte operation) {
                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
                 mplew.writeShort(SendOpcode.FREDRICK_MESSAGE.getValue());
@@ -5343,7 +5340,7 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
                 mplew.writeShort(SendOpcode.UPDATE_CHAR_BOX.getValue());
                 mplew.writeInt(c.getId());
-                addAnnounceBox(mplew, c.getMiniGame(), 0, ammount, type);
+                addAnnounceBox(mplew, c.getMiniGame(), ammount, type);
                 return mplew.getPacket();
         }
         
@@ -5351,7 +5348,7 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
                 mplew.writeShort(SendOpcode.UPDATE_CHAR_BOX.getValue());
                 mplew.writeInt(c.getId());
-                addAnnounceBox(mplew, c.getMiniGame(), 0, ammount, type);
+                addAnnounceBox(mplew, c.getMiniGame(), ammount, type);
                 return mplew.getPacket();
         }
         
@@ -6005,7 +6002,7 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 mplew.write(new byte[]{-1, -1, -1, 0});
                 return mplew.getPacket();
         }
-
+        
         public static byte[] showCouponRedeemedItem(int itemid) {
                 final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
                 mplew.writeShort(SendOpcode.CASHSHOP_OPERATION.getValue());
@@ -6030,11 +6027,8 @@ private static void addPetInfo(final MaplePacketLittleEndianWriter mplew, MapleP
                 return mplew.getPacket();
         }
 
-        public static byte[] enableCSUse() {
-                final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
-                mplew.write(0x12);
-                mplew.skip(6);
-                return mplew.getPacket();
+        public static byte[] enableCSUse(MapleCharacter mc) {
+                return showCash(mc);
         }
 
         /**
diff --git a/tools/MapleCodeCouponGenerator/build.xml b/tools/MapleCodeCouponGenerator/build.xml
new file mode 100644
index 000000000..785195515
--- /dev/null
+++ b/tools/MapleCodeCouponGenerator/build.xml
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- You may freely edit this file. See commented blocks below for -->
+<!-- some examples of how to customize the build. -->
+<!-- (If you delete it and reopen the project it will be recreated.) -->
+<!-- By default, only the Clean and Build commands use this build script. -->
+<!-- Commands such as Run, Debug, and Test only use this build script if -->
+<!-- the Compile on Save feature is turned off for the project. -->
+<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
+<!-- in the project's Project Properties dialog box.-->
+<project name="MapleCodeCouponGenerator" default="default" basedir=".">
+    <description>Builds, tests, and runs the project MapleCodeCouponGenerator.</description>
+    <import file="nbproject/build-impl.xml"/>
+    <!--
+
+    There exist several targets which are by default empty and which can be 
+    used for execution of your tasks. These targets are usually executed 
+    before and after some main targets. They are: 
+
+      -pre-init:                 called before initialization of project properties
+      -post-init:                called after initialization of project properties
+      -pre-compile:              called before javac compilation
+      -post-compile:             called after javac compilation
+      -pre-compile-single:       called before javac compilation of single file
+      -post-compile-single:      called after javac compilation of single file
+      -pre-compile-test:         called before javac compilation of JUnit tests
+      -post-compile-test:        called after javac compilation of JUnit tests
+      -pre-compile-test-single:  called before javac compilation of single JUnit test
+      -post-compile-test-single: called after javac compilation of single JUunit test
+      -pre-jar:                  called before JAR building
+      -post-jar:                 called after JAR building
+      -post-clean:               called after cleaning build products
+
+    (Targets beginning with '-' are not intended to be called on their own.)
+
+    Example of inserting an obfuscator after compilation could look like this:
+
+        <target name="-post-compile">
+            <obfuscate>
+                <fileset dir="${build.classes.dir}"/>
+            </obfuscate>
+        </target>
+
+    For list of available properties check the imported 
+    nbproject/build-impl.xml file. 
+
+
+    Another way to customize the build is by overriding existing main targets.
+    The targets of interest are: 
+
+      -init-macrodef-javac:     defines macro for javac compilation
+      -init-macrodef-junit:     defines macro for junit execution
+      -init-macrodef-debug:     defines macro for class debugging
+      -init-macrodef-java:      defines macro for class execution
+      -do-jar:                  JAR building
+      run:                      execution of project 
+      -javadoc-build:           Javadoc generation
+      test-report:              JUnit report generation
+
+    An example of overriding the target for project execution could look like this:
+
+        <target name="run" depends="MapleCodeCouponGenerator-impl.jar">
+            <exec dir="bin" executable="launcher.exe">
+                <arg file="${dist.jar}"/>
+            </exec>
+        </target>
+
+    Notice that the overridden target depends on the jar target and not only on 
+    the compile target as the regular run target does. Again, for a list of available 
+    properties which you can use, check the target you are overriding in the
+    nbproject/build-impl.xml file. 
+
+    -->
+</project>
diff --git a/tools/MapleCodeCouponGenerator/lib/CouponCodes.img.xml b/tools/MapleCodeCouponGenerator/lib/CouponCodes.img.xml
new file mode 100644
index 000000000..9fccae135
--- /dev/null
+++ b/tools/MapleCodeCouponGenerator/lib/CouponCodes.img.xml
@@ -0,0 +1,39 @@
+﻿<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
+<imgdir name="CouponCodes.img">
+  <imgdir name="0">
+    <short name="active" value="0"/>
+    <int name="quantity" value="100"/>
+    <int name="duration" value="1848"/>
+    <int name="maplePoint" value="7777">
+    <int name="nxCredit" value="1000">
+    <int name="nxPrepaid" value="100">
+    <imgdir name="items">
+      <imgdir name="0">
+        <int name="id" value="4000001">
+        <int name="count" value="100">
+      </imgdir>
+      <imgdir name="1">
+        <int name="id" value="2030100">
+        <int name="count" value="12">
+      </imgdir>
+    </imgdir>
+  </imgdir>
+  <imgdir name="1">
+    <short name="active" value="1"/>
+    <int name="quantity" value="100"/>
+    <int name="duration" value="960"/>
+    <int name="maplePoint" value="5000">
+    <int name="nxCredit" value="14">
+    <int name="nxPrepaid" value="77">
+    <imgdir name="items">
+      <imgdir name="0">
+        <int name="id" value="1302000">
+        <int name="count" value="1">
+      </imgdir>
+      <imgdir name="1">
+        <int name="id" value="5000001">
+        <int name="count" value="20">
+      </imgdir>
+    </imgdir>
+  </imgdir>
+</imgdir>
diff --git a/tools/MapleCodeCouponGenerator/lib/mysql-connector-java-bin.jar b/tools/MapleCodeCouponGenerator/lib/mysql-connector-java-bin.jar
new file mode 100644
index 000000000..0539039f7
Binary files /dev/null and b/tools/MapleCodeCouponGenerator/lib/mysql-connector-java-bin.jar differ
diff --git a/tools/MapleCodeCouponGenerator/manifest.mf b/tools/MapleCodeCouponGenerator/manifest.mf
new file mode 100644
index 000000000..328e8e5bc
--- /dev/null
+++ b/tools/MapleCodeCouponGenerator/manifest.mf
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+X-COMMENT: Main-Class will be added automatically by build
+
diff --git a/tools/MapleCodeCouponGenerator/src/maplecodecoupongenerator/MapleCodeCouponGenerator.java b/tools/MapleCodeCouponGenerator/src/maplecodecoupongenerator/MapleCodeCouponGenerator.java
new file mode 100644
index 000000000..0a6302969
--- /dev/null
+++ b/tools/MapleCodeCouponGenerator/src/maplecodecoupongenerator/MapleCodeCouponGenerator.java
@@ -0,0 +1,398 @@
+/*
+    This file is part of the HeavenMS MapleStory Server
+    Copyleft (L) 2016 - 2018 RonanLana
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package maplecodecoupongenerator;
+
+import java.io.BufferedReader;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.util.ArrayList;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+/**
+ *
+ * @author RonanLana
+ 
+ This application parses the coupon descriptor XML file and automatically generates
+ code entries on the DB reflecting the descriptions found. Parse time relies on the
+ sum of coupon codes created and amount of current codes on DB.
+ 
+ Estimated parse time: 2 minutes (for 100 code entries)
+ */
+public class MapleCodeCouponGenerator {
+    static String host = "jdbc:mysql://localhost:3306/heavenms";
+    static String driver = "com.mysql.jdbc.Driver";
+    static String username = "root";
+    static String password = "";
+    
+    static Connection con = null;
+    static InputStreamReader fileReader = null;
+    static BufferedReader bufferedReader = null;
+    
+    static String fileName = "lib/CouponCodes.img.xml";
+    static long currentTime;
+    
+    static int initialStringLength = 250;
+    
+    static String name;
+    static boolean active;
+    static int quantity, duration;
+    static int maplePoint, nxCredit, nxPrepaid;
+    
+    static List<Pair<Integer, Integer>> itemList = new ArrayList<>();
+    static Pair<Integer, Integer> item;
+    
+    
+    static List<CodeCouponDescriptor> activeCoupons = new ArrayList<>();
+    static List<Integer> generatedKeys;
+    static Set<String> usedCodes = new HashSet<>();
+    
+    static byte status;
+    
+    private static void resetCouponPackage() {
+        name = null;
+        active = false;
+        quantity = 1;
+        duration = 7;
+        maplePoint = 0;
+        nxCredit = 0;
+        nxPrepaid = 0;
+        itemList.clear();
+    }
+    
+    private static String getName(String token) {
+        int i, j;
+        char[] dest;
+        String d;
+        
+        i = token.lastIndexOf("name");
+        i = token.indexOf("\"", i) + 1; //lower bound of the string
+        j = token.indexOf("\"", i);     //upper bound
+
+        dest = new char[initialStringLength];
+        try {
+            token.getChars(i, j, dest, 0);
+        } catch (StringIndexOutOfBoundsException e) {
+            // do nothing
+            return "";
+        } catch (Exception e) {
+            System.out.println("error in: " + token + "");
+            e.printStackTrace();
+            try {
+                Thread.sleep(100000000);
+            } catch (Exception ex) {}
+        }
+        
+
+        d = new String(dest);
+        return(d.trim());
+    }
+    
+    private static String getValue(String token) {
+        int i, j;
+        char[] dest;
+        String d;
+
+        i = token.lastIndexOf("value");
+        i = token.indexOf("\"", i) + 1; //lower bound of the string
+        j = token.indexOf("\"", i);     //upper bound
+
+        dest = new char[initialStringLength];
+        token.getChars(i, j, dest, 0);
+
+        d = new String(dest);
+        return(d.trim());
+    }
+    
+    private static void forwardCursor(int st) {
+        String line = null;
+
+        try {
+            while(status >= st && (line = bufferedReader.readLine()) != null) {
+                simpleToken(line);
+            }
+        }
+        catch(Exception e) {
+            e.printStackTrace();
+        }
+    }
+    
+    private static void simpleToken(String token) {
+        if(token.contains("/imgdir")) {
+            status -= 1;
+        }
+        else if(token.contains("imgdir")) {
+            status += 1;
+        }
+    }
+    
+    private static void translateToken(String token) {
+        if(token.contains("/imgdir")) {
+            status -= 1;
+            
+            if (status == 1) {
+                if (active) {
+                    activeCoupons.add(new CodeCouponDescriptor(name, quantity, duration, maplePoint, nxCredit, nxPrepaid, itemList));
+                }
+                
+                resetCouponPackage();
+            } else if (status == 3) {
+                itemList.add(item);
+            }
+        }
+        else if(token.contains("imgdir")) {
+            status += 1;
+            
+            if (status == 4) {
+                item = new Pair<>(-1, -1);
+            } else if (status == 2) {
+                String d = getName(token);
+                
+                System.out.println("  Reading coupon '" + d + "'");
+                name = d;
+            }
+        }
+        else {
+            String d = getName(token);
+            
+            if (status == 2) {
+                switch (d) {
+                    case "active":
+                        if (Integer.valueOf(getValue(token)) == 0) {
+                            forwardCursor(status);
+                            resetCouponPackage();
+                        } else {
+                            active = true;
+                        }
+                        break;
+
+                    case "quantity":
+                        quantity = Integer.valueOf(getValue(token));
+                        break;
+                    case "duration":
+                        duration = Integer.valueOf(getValue(token));
+                        break;
+                    case "maplePoint":
+                        maplePoint = Integer.valueOf(getValue(token));
+                        break;
+                    case "nxCredit":
+                        nxCredit = Integer.valueOf(getValue(token));
+                        break;
+                    case "nxPrepaid":
+                        nxPrepaid = Integer.valueOf(getValue(token));
+                        break;
+                }
+            } else if (status == 4) {
+                switch (d) {
+                    case "count":
+                        item.right = Integer.valueOf(getValue(token));
+                        break;
+                    case "id":
+                        item.left = Integer.valueOf(getValue(token));
+                        break;
+                }
+            }
+        }
+    }
+    
+    private static class CodeCouponDescriptor {
+        protected String name;
+        protected int quantity, duration;
+        protected int nxCredit, maplePoint, nxPrepaid;
+        protected List<Pair<Integer, Integer>> itemList;
+        
+        protected CodeCouponDescriptor(String name, int quantity, int duration, int maplePoint, int nxCredit, int nxPrepaid, List<Pair<Integer, Integer>> itemList) {
+            this.name = name;
+            this.quantity = quantity;
+            this.duration = duration;
+            this.maplePoint = maplePoint;
+            this.nxCredit = nxCredit;
+            this.nxPrepaid = nxPrepaid;
+            
+            this.itemList = new ArrayList<>(itemList);
+        }
+    }
+    
+    private static String randomizeCouponCode() {
+        StringBuilder rnd = new StringBuilder(Long.toHexString(Double.doubleToLongBits(Math.random())));
+        rnd.setCharAt(5, '-');
+        rnd.insert(11, '-');
+        return rnd.toString();
+    }
+    
+    private static String generateCouponCode() {
+        String newCode;
+        do {
+            newCode = randomizeCouponCode();
+        } while (usedCodes.contains(newCode));
+        
+        usedCodes.add(newCode);
+        return newCode;
+    }
+    
+    private static List<Integer> getGeneratedKeys(PreparedStatement ps) throws SQLException {
+        if (generatedKeys == null) {
+            generatedKeys = new ArrayList<>();
+            
+            ResultSet rs = ps.getGeneratedKeys();
+            while (rs.next()) {
+                generatedKeys.add(rs.getInt(1));
+            }
+            rs.close();
+        }
+        
+        return generatedKeys;
+    }
+    
+    private static void commitCodeCouponDescription(CodeCouponDescriptor recipe) throws SQLException {
+        if (recipe.quantity < 1) return;
+        
+        System.out.println("  Generating coupon '" + recipe.name + "'");
+        generatedKeys = null;
+        
+        PreparedStatement ps = con.prepareStatement("INSERT IGNORE INTO `nxcode` (`code`, `expiration`) VALUES (?, ?)", Statement.RETURN_GENERATED_KEYS);
+        ps.setLong(2, currentTime + (recipe.duration * 60 * 60 * 1000));
+        
+        for(int i = 0; i < recipe.quantity; i++) {
+            ps.setString(1, generateCouponCode());
+            ps.addBatch();
+        }
+        ps.executeBatch();
+        
+        PreparedStatement ps2 = con.prepareStatement("INSERT IGNORE INTO `nxcode_items` (`codeid`, `type`, `item`, `quantity`) VALUES (?, ?, ?, ?)");
+        if (!recipe.itemList.isEmpty()) {
+            ps2.setInt(2, 5);
+            List<Integer> keys = getGeneratedKeys(ps);
+            
+            for (Pair<Integer, Integer> p : recipe.itemList) {
+                ps2.setInt(3, p.getLeft());
+                ps2.setInt(4, p.getRight());
+                
+                for (Integer codeid : keys) {
+                    ps2.setInt(1, codeid);
+                    ps2.addBatch();
+                }
+            }
+        }
+        
+        ps2.setInt(4, 0);
+        if (recipe.nxCredit > 0) {
+            ps2.setInt(2, 0);
+            ps2.setInt(3, recipe.nxCredit);
+            List<Integer> keys = getGeneratedKeys(ps);
+            
+            for(Integer codeid : keys) {
+                ps2.setInt(1, codeid);
+                ps2.addBatch();
+            }
+        }
+        
+        if (recipe.maplePoint > 0) {
+            ps2.setInt(2, 1);
+            ps2.setInt(3, recipe.maplePoint);
+            List<Integer> keys = getGeneratedKeys(ps);
+            
+            for(Integer codeid : keys) {
+                ps2.setInt(1, codeid);
+                ps2.addBatch();
+            }
+        }
+        
+        if (recipe.nxPrepaid > 0) {
+            ps2.setInt(2, 2);
+            ps2.setInt(3, recipe.nxPrepaid);
+            List<Integer> keys = getGeneratedKeys(ps);
+            
+            for(Integer codeid : keys) {
+                ps2.setInt(1, codeid);
+                ps2.addBatch();
+            }
+        }
+        
+        ps2.executeBatch();
+        ps2.close();
+        ps.close();
+    }
+    
+    private static void loadUsedCouponCodes() throws SQLException {
+        PreparedStatement ps = con.prepareStatement("SELECT code FROM nxcode", Statement.RETURN_GENERATED_KEYS);
+        ResultSet rs = ps.executeQuery();
+        while (rs.next()) {
+            usedCodes.add(rs.getString("code"));
+        }
+        rs.close();
+        ps.close();
+    }
+    
+    private static void generateCodeCoupons(String fileName) throws IOException {
+        fileReader = new InputStreamReader(new FileInputStream(fileName), "UTF-8");
+        bufferedReader = new BufferedReader(fileReader);
+        
+        resetCouponPackage();
+        status = 0;
+        
+        System.out.println("Reading XML coupon information...");
+        String line;
+        while((line = bufferedReader.readLine()) != null) {
+            translateToken(line);
+        }
+
+        bufferedReader.close();
+        fileReader.close();
+        System.out.println();
+        
+        try {
+            Class.forName(driver).newInstance();
+            con = DriverManager.getConnection(host, username, password);
+            
+            System.out.println("Loading DB coupon codes...");
+            loadUsedCouponCodes();
+            System.out.println();
+            
+            System.out.println("Saving generated coupons...");
+            currentTime = System.currentTimeMillis();
+            for (CodeCouponDescriptor ccd : activeCoupons) {
+                commitCodeCouponDescription(ccd);
+            }
+            System.out.println();
+            
+            con.close();
+            System.out.println("Done.");
+        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException e) {
+            e.printStackTrace();
+        }
+    }
+    
+    public static void main(String[] args) {
+        try {
+            generateCodeCoupons(fileName);
+        } catch(IOException ex) {
+            System.out.println("Error reading file '" + fileName + "'");
+        }
+    }
+}
diff --git a/tools/MapleCodeCouponGenerator/src/maplecodecoupongenerator/Pair.java b/tools/MapleCodeCouponGenerator/src/maplecodecoupongenerator/Pair.java
new file mode 100644
index 000000000..3a8abd3b1
--- /dev/null
+++ b/tools/MapleCodeCouponGenerator/src/maplecodecoupongenerator/Pair.java
@@ -0,0 +1,121 @@
+/*
+This file is part of the OdinMS Maple Story Server
+Copyright (C) 2008 ~ 2010 Patrick Huy <patrick.huy@frz.cc> 
+Matthias Butz <matze@odinms.de>
+Jan Christian Meyer <vimes@odinms.de>
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU Affero General Public License version 3
+as published by the Free Software Foundation. You may not use, modify
+or distribute this program under any other version of the
+GNU Affero General Public License.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU Affero General Public License for more details.
+
+You should have received a copy of the GNU Affero General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+package maplecodecoupongenerator;
+
+/**
+ * Represents a pair of values.
+ * 
+ * @author Frz
+ * @since Revision 333
+ * @version 1.0
+ * 
+ * @param <E> The type of the left value.
+ * @param <F> The type of the right value.
+ */
+public class Pair<E, F> {
+
+    public E left;
+    public F right;
+
+    /**
+     * Class constructor - pairs two objects together.
+     *
+     * @param left The left object.
+     * @param right The right object.
+     */
+    public Pair(E left, F right) {
+        this.left = left;
+        this.right = right;
+    }
+
+    /**
+     * Gets the left value.
+     *
+     * @return The left value.
+     */
+    public E getLeft() {
+        return left;
+    }
+
+    /**
+     * Gets the right value.
+     *
+     * @return The right value.
+     */
+    public F getRight() {
+        return right;
+    }
+
+    /**
+     * Turns the pair into a string.
+     *
+     * @return Each value of the pair as a string joined by a colon.
+     */
+    @Override
+    public String toString() {
+        return left.toString() + ":" + right.toString();
+    }
+
+    /**
+     * Gets the hash code of this pair.
+     */
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int result = 1;
+        result = prime * result + ((left == null) ? 0 : left.hashCode());
+        result = prime * result + ((right == null) ? 0 : right.hashCode());
+        return result;
+    }
+
+    /**
+     * Checks to see if two pairs are equal.
+     */
+    @SuppressWarnings("unchecked")
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        final Pair other = (Pair) obj;
+        if (left == null) {
+            if (other.left != null) {
+                return false;
+            }
+        } else if (!left.equals(other.left)) {
+            return false;
+        }
+        if (right == null) {
+            if (other.right != null) {
+                return false;
+            }
+        } else if (!right.equals(other.right)) {
+            return false;
+        }
+        return true;
+    }
+}
\ No newline at end of file
diff --git a/tools/MapleDojoUpdater/src/mapledojoupdate/MapleDojoUpdate.java b/tools/MapleDojoUpdater/src/mapledojoupdate/MapleDojoUpdate.java
index 2cb8da336..ab1d05132 100644
--- a/tools/MapleDojoUpdater/src/mapledojoupdate/MapleDojoUpdate.java
+++ b/tools/MapleDojoUpdater/src/mapledojoupdate/MapleDojoUpdate.java
@@ -204,9 +204,6 @@ private static void parseDirectoryDojoData(String curPath) {
         }
     }
     
-    /**
-     * @param args the command line arguments
-     */
     public static void main(String[] args) {
         parseDirectoryDojoData("");
     }
diff --git a/tools/MapleEquipmentOmnileveler/src/mapleequipmentomnileveler/MapleEquipmentOmnileveler.java b/tools/MapleEquipmentOmnileveler/src/mapleequipmentomnileveler/MapleEquipmentOmnileveler.java
index 81e660236..7241bb5e5 100644
--- a/tools/MapleEquipmentOmnileveler/src/mapleequipmentomnileveler/MapleEquipmentOmnileveler.java
+++ b/tools/MapleEquipmentOmnileveler/src/mapleequipmentomnileveler/MapleEquipmentOmnileveler.java
@@ -485,9 +485,6 @@ private static void parseDirectoryEquipData(String curPath) {
         }
     }
     
-    /**
-     * @param args the command line arguments
-     */
     public static void main(String[] args) {
         parseDirectoryEquipData("");
     }
diff --git a/tools/MapleMobBookUpdate/nbproject/project.properties b/tools/MapleMobBookUpdate/nbproject/project.properties
index 261b9554c..e3c4fff9e 100644
--- a/tools/MapleMobBookUpdate/nbproject/project.properties
+++ b/tools/MapleMobBookUpdate/nbproject/project.properties
@@ -29,12 +29,10 @@ dist.jar=${dist.dir}/MapleMobBookUpdate.jar
 dist.javadoc.dir=${dist.dir}/javadoc
 endorsed.classpath=
 excludes=
-file.reference.MobBookUpdate-lib=lib
-file.reference.mysql-connector-java-bin.jar=lib/mysql-connector-java-bin.jar
+file.reference.mysql-connector-java-bin.jar=lib\\mysql-connector-java-bin.jar
 includes=**
 jar.compress=false
 javac.classpath=\
-    ${file.reference.MobBookUpdate-lib}:\
     ${file.reference.mysql-connector-java-bin.jar}
 # Space-separated list of extra javac options
 javac.compilerargs=
@@ -68,8 +66,7 @@ mkdist.disabled=false
 platform.active=default_platform
 run.classpath=\
     ${javac.classpath}:\
-    ${build.classes.dir}:\
-    ${file.reference.mysql-connector-java-bin.jar}
+    ${build.classes.dir}
 # Space-separated list of JVM arguments used when running the project.
 # You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
 # To set system properties for unit tests define test-sys-prop.name=value:
diff --git a/tools/MapleQuestItemCountFetcher/lib/commons-io-2.6.jar b/tools/MapleQuestItemCountFetcher/lib/commons-io-2.6.jar
new file mode 100644
index 000000000..00556b119
Binary files /dev/null and b/tools/MapleQuestItemCountFetcher/lib/commons-io-2.6.jar differ
diff --git a/tools/MapleQuestItemCountFetcher/nbproject/project.properties b/tools/MapleQuestItemCountFetcher/nbproject/project.properties
index f2ee825b4..f4bf11fcf 100644
--- a/tools/MapleQuestItemCountFetcher/nbproject/project.properties
+++ b/tools/MapleQuestItemCountFetcher/nbproject/project.properties
@@ -30,11 +30,9 @@ dist.javadoc.dir=${dist.dir}/javadoc
 endorsed.classpath=
 excludes=
 file.reference.commons-io-2.6.jar=lib/commons-io-2.6.jar
-file.reference.mysql-connector-java-bin.jar=../../cores/mysql-connector-java-bin.jar
 includes=**
 jar.compress=false
 javac.classpath=\
-    ${file.reference.mysql-connector-java-bin.jar}:\
     ${file.reference.commons-io-2.6.jar}
 # Space-separated list of extra javac options
 javac.compilerargs=
diff --git a/tools/MapleQuestItemCountFetcher/src/maplequestitemcountfetcher/MapleQuestItemCountFetcher.java b/tools/MapleQuestItemCountFetcher/src/maplequestitemcountfetcher/MapleQuestItemCountFetcher.java
index 9e4795f27..0b135b562 100644
--- a/tools/MapleQuestItemCountFetcher/src/maplequestitemcountfetcher/MapleQuestItemCountFetcher.java
+++ b/tools/MapleQuestItemCountFetcher/src/maplequestitemcountfetcher/MapleQuestItemCountFetcher.java
@@ -25,7 +25,6 @@
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.PrintWriter;
-import java.sql.Connection;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.LinkedHashMap;
@@ -47,10 +46,8 @@
 public class MapleQuestItemCountFetcher {
     static String actName = "../../wz/Quest.wz/Act.img.xml";
     static String checkName = "../../wz/Quest.wz/Check.img.xml";
-    static String directoryName = "../..";
     static String newFile = "lib/QuestReport.txt";
-
-    static Connection con = null;
+    
     static PrintWriter printWriter = null;
     static InputStreamReader fileReader = null;
     static BufferedReader bufferedReader = null;
diff --git a/tools/SpiderDropFetcher/build.xml b/tools/SpiderDropFetcher/build.xml
new file mode 100644
index 000000000..69ac12219
--- /dev/null
+++ b/tools/SpiderDropFetcher/build.xml
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- You may freely edit this file. See commented blocks below for -->
+<!-- some examples of how to customize the build. -->
+<!-- (If you delete it and reopen the project it will be recreated.) -->
+<!-- By default, only the Clean and Build commands use this build script. -->
+<!-- Commands such as Run, Debug, and Test only use this build script if -->
+<!-- the Compile on Save feature is turned off for the project. -->
+<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
+<!-- in the project's Project Properties dialog box.-->
+<project name="SpiderDropFetcher" default="default" basedir=".">
+    <description>Builds, tests, and runs the project SpiderDropFetcher.</description>
+    <import file="nbproject/build-impl.xml"/>
+    <!--
+
+    There exist several targets which are by default empty and which can be 
+    used for execution of your tasks. These targets are usually executed 
+    before and after some main targets. They are: 
+
+      -pre-init:                 called before initialization of project properties
+      -post-init:                called after initialization of project properties
+      -pre-compile:              called before javac compilation
+      -post-compile:             called after javac compilation
+      -pre-compile-single:       called before javac compilation of single file
+      -post-compile-single:      called after javac compilation of single file
+      -pre-compile-test:         called before javac compilation of JUnit tests
+      -post-compile-test:        called after javac compilation of JUnit tests
+      -pre-compile-test-single:  called before javac compilation of single JUnit test
+      -post-compile-test-single: called after javac compilation of single JUunit test
+      -pre-jar:                  called before JAR building
+      -post-jar:                 called after JAR building
+      -post-clean:               called after cleaning build products
+
+    (Targets beginning with '-' are not intended to be called on their own.)
+
+    Example of inserting an obfuscator after compilation could look like this:
+
+        <target name="-post-compile">
+            <obfuscate>
+                <fileset dir="${build.classes.dir}"/>
+            </obfuscate>
+        </target>
+
+    For list of available properties check the imported 
+    nbproject/build-impl.xml file. 
+
+
+    Another way to customize the build is by overriding existing main targets.
+    The targets of interest are: 
+
+      -init-macrodef-javac:     defines macro for javac compilation
+      -init-macrodef-junit:     defines macro for junit execution
+      -init-macrodef-debug:     defines macro for class debugging
+      -init-macrodef-java:      defines macro for class execution
+      -do-jar:                  JAR building
+      run:                      execution of project 
+      -javadoc-build:           Javadoc generation
+      test-report:              JUnit report generation
+
+    An example of overriding the target for project execution could look like this:
+
+        <target name="run" depends="SpiderDropFetcher-impl.jar">
+            <exec dir="bin" executable="launcher.exe">
+                <arg file="${dist.jar}"/>
+            </exec>
+        </target>
+
+    Notice that the overridden target depends on the jar target and not only on 
+    the compile target as the regular run target does. Again, for a list of available 
+    properties which you can use, check the target you are overriding in the
+    nbproject/build-impl.xml file. 
+
+    -->
+</project>
diff --git a/tools/SpiderDropFetcher/manifest.mf b/tools/SpiderDropFetcher/manifest.mf
new file mode 100644
index 000000000..328e8e5bc
--- /dev/null
+++ b/tools/SpiderDropFetcher/manifest.mf
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+X-COMMENT: Main-Class will be added automatically by build
+
diff --git a/tools/SpiderDropFetcher/src/client/inventory/MapleInventoryType.java b/tools/SpiderDropFetcher/src/client/inventory/MapleInventoryType.java
new file mode 100644
index 000000000..778262f46
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/client/inventory/MapleInventoryType.java
@@ -0,0 +1,73 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package client.inventory;
+
+/**
+ * @author Matze
+ */
+public enum MapleInventoryType {
+    UNDEFINED(0),
+    EQUIP(1),
+    USE(2),
+    SETUP(3),
+    ETC(4),
+    CASH(5),
+    CANHOLD(6),   //Proof-guard for inserting after removal checks
+    EQUIPPED(-1); //Seems nexon screwed something when removing an item T_T
+    final byte type;
+
+    private MapleInventoryType(int type) {
+        this.type = (byte) type;
+    }
+
+    public byte getType() {
+        return type;
+    }
+
+    public short getBitfieldEncoding() {
+        return (short) (2 << type);
+    }
+
+    public static MapleInventoryType getByType(byte type) {
+        for (MapleInventoryType l : MapleInventoryType.values()) {
+            if (l.getType() == type) {
+                return l;
+            }
+        }
+        return null;
+    }
+
+    public static MapleInventoryType getByWZName(String name) {
+        if (name.equals("Install")) {
+            return SETUP;
+        } else if (name.equals("Consume")) {
+            return USE;
+        } else if (name.equals("Etc")) {
+            return ETC;
+        } else if (name.equals("Cash")) {
+            return CASH;
+        } else if (name.equals("Pet")) {
+            return CASH;
+        }
+        return UNDEFINED;
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/constants/CharsetConstants.java b/tools/SpiderDropFetcher/src/constants/CharsetConstants.java
new file mode 100644
index 000000000..a9a3cd697
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/constants/CharsetConstants.java
@@ -0,0 +1,48 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+ 
+package constants;
+ 
+/*
+ * Courtesy of GabrielSin (gabrielsin@playellin.net)
+ * Ellin
+ * MapleStory Server
+ * CharsetConstants
+ */
+ 
+public class CharsetConstants {
+   
+    public static MapleLanguageType MAPLE_TYPE = MapleLanguageType.LANGUAGE_PT_BR;
+   
+    public enum MapleLanguageType {
+        LANGUAGE_PT_BR(1, "ISO-8859-1"),
+        LANGUAGE_US(2, "US-ASCII");
+        final byte type;
+        final String ascii;
+ 
+        private MapleLanguageType(int type, String ascii) {
+            this.type = (byte) type;
+            this.ascii = ascii;
+        }
+ 
+        public String getAscii() {
+            return ascii;
+        }
+ 
+        public byte getType() {
+            return type;
+        }
+ 
+        public static MapleLanguageType getByType(byte type) {
+            for (MapleLanguageType l : MapleLanguageType.values()) {
+                if (l.getType() == type) {
+                    return l;
+                }
+            }
+            return LANGUAGE_PT_BR;
+        }
+    }
+}
\ No newline at end of file
diff --git a/tools/SpiderDropFetcher/src/constants/ItemConstants.java b/tools/SpiderDropFetcher/src/constants/ItemConstants.java
new file mode 100644
index 000000000..860c392f3
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/constants/ItemConstants.java
@@ -0,0 +1,234 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package constants;
+
+import client.inventory.MapleInventoryType;
+import java.util.HashSet;
+import java.util.Set;
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ *
+ * @author Jay Estrella
+ * @author Ronan
+ */
+public final class ItemConstants {
+    protected static Map<Integer, MapleInventoryType> inventoryTypeCache = new HashMap<>();
+    
+    public final static int LOCK = 0x01;
+    public final static int SPIKES = 0x02;
+    public final static int KARMA_USE = 0x02;
+    public final static int COLD = 0x04;
+    public final static int UNTRADEABLE = 0x08;
+    public final static int KARMA_EQP = 0x10;
+    public final static int KARMA_UNTRADEABLE = 0x20;   // let 0x20 until it's proven something uses this
+    public final static int SANDBOX = 0x40;             // let 0x40 until it's proven something uses this
+    public final static int PET_COME = 0x80;
+    public final static int ACCOUNT_SHARING = 0x100;
+
+    public final static boolean EXPIRING_ITEMS = true;
+    public final static Set<Integer> permanentItemids = new HashSet<>();
+
+    static {
+        int[] pi = {5000060, 5000100, 5000101, 5000102};    // i ain't going to open one gigantic itemid cache just for 4 perma itemids, no way!
+        for(int i : pi) {
+            permanentItemids.add(i);
+        }
+    }
+    
+    public static int getFlagByInt(int type) {
+        if (type == 128) {
+            return PET_COME;
+        } else if (type == 256) {
+            return ACCOUNT_SHARING;
+        }
+        return 0;
+    }
+
+    public static boolean isThrowingStar(int itemId) {
+        return itemId / 10000 == 207;
+    }
+
+    public static boolean isBullet(int itemId) {
+        return itemId / 10000 == 233;
+    }
+    
+    public static boolean isPotion(int itemId) {
+        return itemId / 1000 == 2000;
+    }
+    
+    public static boolean isFood(int itemId) {
+        int useType = itemId / 1000;
+        return useType == 2022 || useType == 2010 || useType == 2020;
+    }
+    
+    public static boolean isConsumable(int itemId) {
+        return isPotion(itemId) || isFood(itemId);
+    }
+
+    public static boolean isRechargeable(int itemId) {
+        return isThrowingStar(itemId) || isBullet(itemId);
+    }
+
+    public static boolean isArrowForCrossBow(int itemId) {
+        return itemId / 1000 == 2061;
+    }
+
+    public static boolean isArrowForBow(int itemId) {
+        return itemId / 1000 == 2060;
+    }
+    
+    public static boolean isArrow(int itemId) {
+        return isArrowForBow(itemId) || isArrowForCrossBow(itemId);
+    }
+
+    public static boolean isPet(int itemId) {
+        return itemId / 1000 == 5000;
+    }
+    
+    public static boolean isExpirablePet(int itemId) {
+        return itemId == 5000054;
+    }
+    
+    public static boolean isPermanentItem(int itemId) {
+        return permanentItemids.contains(itemId);
+    }
+    
+    public static boolean isNewYearCardEtc(int itemId) { 
+        return itemId / 10000 == 430;
+    } 
+     
+    public static boolean isNewYearCardUse(int itemId) { 
+        return itemId / 10000 == 216;
+    }
+    
+    public static boolean isAccessory(int itemId) {
+        return itemId >= 1110000 && itemId < 1140000;
+    }
+    
+    public static boolean isTaming(int itemId) {
+        int itemType = itemId / 1000;
+        return itemType == 1902 || itemType == 1912;
+    }
+    
+    public static boolean isTownScroll(int itemId) {
+        return itemId >= 2030000 && itemId < 2030100;
+    }
+    
+    public static boolean isAntibanishScroll(int itemId) {
+        return itemId == 2030100;
+    }
+    
+    public static boolean isCleanSlate(int scrollId) {
+        return scrollId > 2048999 && scrollId < 2049004;
+    }
+    
+    public static boolean isFlagModifier(int scrollId, byte flag) {
+        if(scrollId == 2041058 && ((flag & ItemConstants.COLD) == ItemConstants.COLD)) return true;
+        if(scrollId == 2040727 && ((flag & ItemConstants.SPIKES) == ItemConstants.SPIKES)) return true;
+        return false;
+    }
+    
+    public static boolean isChaosScroll(int scrollId) {
+    	return scrollId >= 2049100 && scrollId <= 2049103;
+    }
+    
+    public static boolean isRateCoupon(int itemId) {
+        int itemType = itemId / 1000;
+        return itemType == 5211 || itemType == 5360;
+    }
+    
+    public static boolean isExpCoupon(int couponId) {
+        return couponId / 1000 == 5211;
+    }
+    
+    public static boolean isPartyItem(int itemId) {
+        return itemId >= 2022430 && itemId <= 2022433;
+    }
+    
+    public static boolean isPartyAllcure(int itemId) {
+        return itemId == 2022433;
+    }
+    
+    public static boolean isHiredMerchant(int itemId) {
+        return itemId / 10000 == 503;
+    }
+    
+    public static boolean isPlayerShop(int itemId) {
+        return itemId / 10000 == 514;
+    }
+    
+    public static MapleInventoryType getInventoryType(final int itemId) {
+        if (inventoryTypeCache.containsKey(itemId)) {
+            return inventoryTypeCache.get(itemId);
+        }
+        
+        MapleInventoryType ret = MapleInventoryType.UNDEFINED;
+        
+	final byte type = (byte) (itemId / 1000000);
+	if (type >= 1 && type <= 5) {
+	    ret = MapleInventoryType.getByType(type);
+	}
+        
+        inventoryTypeCache.put(itemId, ret);
+        return ret;
+    }
+    
+    public static boolean isMakerReagent(int itemId) {
+        return itemId / 10000 == 425;
+    }
+    
+    public static boolean isOverall(int itemId) {
+        return itemId / 10000 == 105;
+    }
+    
+    public static boolean isCashStore(int itemId) {
+        int itemType = itemId / 10000;
+        return itemType == 503 || itemType == 514;
+    }
+    
+    public static boolean isMapleLife(int itemId) {
+        int itemType = itemId / 10000;
+        return itemType == 543 && itemId != 5430000;
+    }
+
+    public static boolean isWeapon(int itemId) {
+        return itemId >= 1302000 && itemId < 1492024;
+    }
+    
+    public static boolean isEquipment(int itemId) {
+        return itemId < 2000000 && itemId != 0;
+    }
+
+    public static boolean isMedal(int itemId) {
+        return itemId >= 1140000 && itemId < 1143000;
+    }
+    
+    public static boolean isWeddingRing(int itemId) {
+        return itemId >= 1112803 && itemId <= 1112809;
+    }
+    
+    public static boolean isWeddingToken(int itemId) {
+        return itemId >= 4031357 && itemId <= 4031364;
+    }
+}
diff --git a/src/tools/dropspider/DataTool.java b/tools/SpiderDropFetcher/src/dropspider/DataTool.java
similarity index 99%
rename from src/tools/dropspider/DataTool.java
rename to tools/SpiderDropFetcher/src/dropspider/DataTool.java
index b412da3c6..cb71379b8 100644
--- a/src/tools/dropspider/DataTool.java
+++ b/tools/SpiderDropFetcher/src/dropspider/DataTool.java
@@ -2,7 +2,7 @@
  * To change this template, choose Tools | Templates
  * and open the template in the editor.
  */
-package tools.dropspider;
+package dropspider;
 
 import java.io.File;
 import java.util.ArrayList;
diff --git a/src/tools/dropspider/DropEntry.java b/tools/SpiderDropFetcher/src/dropspider/DropEntry.java
similarity index 99%
rename from src/tools/dropspider/DropEntry.java
rename to tools/SpiderDropFetcher/src/dropspider/DropEntry.java
index 63caf8f9f..9dc5457d8 100644
--- a/src/tools/dropspider/DropEntry.java
+++ b/tools/SpiderDropFetcher/src/dropspider/DropEntry.java
@@ -2,7 +2,7 @@
  * To change this template, choose Tools | Templates
  * and open the template in the editor.
  */
-package tools.dropspider;
+package dropspider;
 
 import client.inventory.MapleInventoryType;
 import constants.ItemConstants;
diff --git a/src/tools/dropspider/Errors.java b/tools/SpiderDropFetcher/src/dropspider/Errors.java
similarity index 93%
rename from src/tools/dropspider/Errors.java
rename to tools/SpiderDropFetcher/src/dropspider/Errors.java
index 887607791..a54b8543a 100644
--- a/src/tools/dropspider/Errors.java
+++ b/tools/SpiderDropFetcher/src/dropspider/Errors.java
@@ -1,4 +1,4 @@
-package tools.dropspider;
+package dropspider;
 
 import java.util.LinkedList;
 
diff --git a/src/tools/dropspider/Main.java b/tools/SpiderDropFetcher/src/dropspider/Main.java
similarity index 99%
rename from src/tools/dropspider/Main.java
rename to tools/SpiderDropFetcher/src/dropspider/Main.java
index 3b28fd60d..1d0ae2dfa 100644
--- a/src/tools/dropspider/Main.java
+++ b/tools/SpiderDropFetcher/src/dropspider/Main.java
@@ -2,7 +2,7 @@
  * To change this template, choose Tools | Templates
  * and open the template in the editor.
  */
-package tools.dropspider;
+package dropspider;
 
 import java.io.BufferedWriter;
 import java.io.File;
@@ -37,7 +37,7 @@
     private static String[] additionalPagesBB = {"101-120,", "121-140", "141-160", "161-180", "181-200"};
 
     public static void main(String[] args) {
-        System.setProperty("wzpath", "wz");
+        System.setProperty("wzpath", "../../wz");
         
         //DataTool.setHardcodedMobNames();
         //parsePage("https://bbb.hidden-street.net/monster/nibelung-3");
diff --git a/tools/SpiderDropFetcher/src/provider/MapleCanvas.java b/tools/SpiderDropFetcher/src/provider/MapleCanvas.java
new file mode 100644
index 000000000..10ab68219
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/MapleCanvas.java
@@ -0,0 +1,30 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider;
+
+import java.awt.image.BufferedImage;
+
+public interface MapleCanvas {
+    int getHeight();
+    int getWidth();
+    BufferedImage getImage();
+}
diff --git a/tools/SpiderDropFetcher/src/provider/MapleData.java b/tools/SpiderDropFetcher/src/provider/MapleData.java
new file mode 100644
index 000000000..4d90a9380
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/MapleData.java
@@ -0,0 +1,34 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider;
+
+import java.util.List;
+import provider.wz.MapleDataType;
+
+public interface MapleData extends MapleDataEntity, Iterable<MapleData> {
+    @Override
+    public String getName();
+    public MapleDataType getType();
+    public List<MapleData> getChildren();
+    public MapleData getChildByPath(String path);
+    public Object getData();
+}
diff --git a/tools/SpiderDropFetcher/src/provider/MapleDataDirectoryEntry.java b/tools/SpiderDropFetcher/src/provider/MapleDataDirectoryEntry.java
new file mode 100644
index 000000000..cb043e0c9
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/MapleDataDirectoryEntry.java
@@ -0,0 +1,34 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider;
+
+import java.util.List;
+
+/**
+ *
+ * @author Matze
+ */
+public interface MapleDataDirectoryEntry extends MapleDataEntry {
+    public List<MapleDataDirectoryEntry> getSubdirectories();
+    public List<MapleDataFileEntry> getFiles();
+    public MapleDataEntry getEntry(String name);
+}
diff --git a/tools/SpiderDropFetcher/src/provider/MapleDataEntity.java b/tools/SpiderDropFetcher/src/provider/MapleDataEntity.java
new file mode 100644
index 000000000..03ff77649
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/MapleDataEntity.java
@@ -0,0 +1,31 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider;
+
+/**
+ *
+ * @author Matze
+ */
+public interface MapleDataEntity {
+    public String getName();
+    public MapleDataEntity getParent();
+}
diff --git a/tools/SpiderDropFetcher/src/provider/MapleDataEntry.java b/tools/SpiderDropFetcher/src/provider/MapleDataEntry.java
new file mode 100644
index 000000000..62db6d0ab
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/MapleDataEntry.java
@@ -0,0 +1,33 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider;
+
+/**
+ *
+ * @author Matze
+ */
+public interface MapleDataEntry extends MapleDataEntity {
+    public String getName();
+    public int getSize();
+    public int getChecksum();
+    public int getOffset();
+}
diff --git a/tools/SpiderDropFetcher/src/provider/MapleDataFileEntry.java b/tools/SpiderDropFetcher/src/provider/MapleDataFileEntry.java
new file mode 100644
index 000000000..902130a61
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/MapleDataFileEntry.java
@@ -0,0 +1,30 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider;
+
+/**
+ *
+ * @author Matze
+ */
+public interface MapleDataFileEntry extends MapleDataEntry {
+    public void setOffset(int offset);
+}
diff --git a/tools/SpiderDropFetcher/src/provider/MapleDataProvider.java b/tools/SpiderDropFetcher/src/provider/MapleDataProvider.java
new file mode 100644
index 000000000..5237b7ac3
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/MapleDataProvider.java
@@ -0,0 +1,27 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider;
+
+public interface MapleDataProvider {
+    MapleData getData(String path);
+    MapleDataDirectoryEntry getRoot();
+}
diff --git a/tools/SpiderDropFetcher/src/provider/MapleDataProviderFactory.java b/tools/SpiderDropFetcher/src/provider/MapleDataProviderFactory.java
new file mode 100644
index 000000000..14753d440
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/MapleDataProviderFactory.java
@@ -0,0 +1,55 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider;
+
+import java.io.File;
+import java.io.IOException;
+import provider.wz.WZFile;
+import provider.wz.XMLWZFile;
+
+public class MapleDataProviderFactory {
+    private final static String wzPath = System.getProperty("wzpath");
+
+    private static MapleDataProvider getWZ(File in, boolean provideImages) {
+        if (in.getName().toLowerCase().endsWith("wz") && !in.isDirectory()) {
+            try {
+                return new WZFile(in, provideImages);
+            } catch (IOException e) {
+                throw new RuntimeException("Loading WZ File failed", e);
+            }
+        } else {
+            return new XMLWZFile(in);
+        }
+    }
+
+    public static MapleDataProvider getDataProvider(File in) {
+        return getWZ(in, false);
+    }
+
+    public static MapleDataProvider getImageProvidingDataProvider(File in) {
+        return getWZ(in, true);
+    }
+
+    public static File fileInWZPath(String filename) {
+        return new File(wzPath, filename);
+    }
+}
\ No newline at end of file
diff --git a/tools/SpiderDropFetcher/src/provider/MapleDataTool.java b/tools/SpiderDropFetcher/src/provider/MapleDataTool.java
new file mode 100644
index 000000000..25f4c7f81
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/MapleDataTool.java
@@ -0,0 +1,145 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider;
+
+import java.awt.Point;
+import java.awt.image.BufferedImage;
+import provider.wz.MapleDataType;
+
+public class MapleDataTool {
+    public static String getString(MapleData data) {
+        return ((String) data.getData());
+    }
+
+    public static String getString(MapleData data, String def) {
+        if (data == null || data.getData() == null) {
+            return def;
+        } else {
+            return ((String) data.getData());
+        }
+    }
+
+    public static String getString(String path, MapleData data) {
+        return getString(data.getChildByPath(path));
+    }
+
+    public static String getString(String path, MapleData data, String def) {
+        return getString(data.getChildByPath(path), def);
+    }
+
+    public static double getDouble(MapleData data) {
+        return ((Double) data.getData()).doubleValue();
+    }
+
+    public static float getFloat(MapleData data) {
+        return ((Float) data.getData()).floatValue();
+    }
+
+    public static int getInt(MapleData data) {
+        if (data == null || data.getData() == null) {
+            return 0;// DEF?
+        }
+        return ((Integer) data.getData()).intValue();
+    }
+
+    public static int getInt(String path, MapleData data) {
+        return getInt(data.getChildByPath(path));
+    }
+
+    public static int getIntConvert(MapleData data) {
+        if (data.getType() == MapleDataType.STRING) {
+            return Integer.parseInt(getString(data));
+        } else {
+            return getInt(data);
+        }
+    }
+
+    public static int getIntConvert(String path, MapleData data) {
+        MapleData d = data.getChildByPath(path);
+        if (d.getType() == MapleDataType.STRING) {
+            return Integer.parseInt(getString(d));
+        } else {
+            return getInt(d);
+        }
+    }
+
+    public static int getInt(MapleData data, int def) {
+        if (data == null || data.getData() == null) {
+            return  def;
+        } else if (data.getType() == MapleDataType.STRING) {
+            return Integer.parseInt(getString(data));
+        } else {
+            return ((Integer) data.getData()).intValue();
+        }
+    }
+
+    public static int getInt(String path, MapleData data, int def) {
+        return getInt(data.getChildByPath(path), def);
+    }
+
+    public static int getIntConvert(String path, MapleData data, int def) {
+        MapleData d = data.getChildByPath(path);
+        if (d == null) {
+            return def;
+        }
+        if (d.getType() == MapleDataType.STRING) {
+            try {
+                return Integer.parseInt(getString(d));
+            } catch (NumberFormatException nfe) {
+                nfe.printStackTrace();
+                return def;
+            }
+        } else {
+            return getInt(d, def);
+        }
+    }
+
+    public static BufferedImage getImage(MapleData data) {
+        return ((MapleCanvas) data.getData()).getImage();
+    }
+
+    public static Point getPoint(MapleData data) {
+        return ((Point) data.getData());
+    }
+
+    public static Point getPoint(String path, MapleData data) {
+        return getPoint(data.getChildByPath(path));
+    }
+
+    public static Point getPoint(String path, MapleData data, Point def) {
+        final MapleData pointData = data.getChildByPath(path);
+        if (pointData == null) {
+            return def;
+        }
+        return getPoint(pointData);
+    }
+
+    public static String getFullDataPath(MapleData data) {
+        String path = "";
+        MapleDataEntity myData = data;
+        while (myData != null) {
+            path = myData.getName() + "/" + path;
+            myData = myData.getParent();
+        }
+        return path.substring(0, path.length() - 1);
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/FileStoredPngMapleCanvas.java b/tools/SpiderDropFetcher/src/provider/wz/FileStoredPngMapleCanvas.java
new file mode 100644
index 000000000..21736c2c1
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/FileStoredPngMapleCanvas.java
@@ -0,0 +1,70 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.IOException;
+import javax.imageio.ImageIO;
+import provider.MapleCanvas;
+
+public class FileStoredPngMapleCanvas implements MapleCanvas {
+    private File file;
+    private int width;
+    private int height;
+    private BufferedImage image;
+
+    public FileStoredPngMapleCanvas(int width, int height, File fileIn) {
+        this.width = width;
+        this.height = height;
+        this.file = fileIn;
+    }
+
+    @Override
+    public int getHeight() {
+        return height;
+    }
+
+    @Override
+    public int getWidth() {
+        return width;
+    }
+
+    @Override
+    public BufferedImage getImage() {
+        loadImageIfNecessary();
+        return image;
+    }
+
+    private void loadImageIfNecessary() {
+        if (image == null) {
+            try {
+                image = ImageIO.read(file);
+                // replace the dimensions loaded from the wz by the REAL dimensions from the image - should be equal tho
+                width = image.getWidth();
+                height = image.getHeight();
+            } catch (IOException e) {
+                throw new RuntimeException(e);
+            }
+        }
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/ImgMapleSound.java b/tools/SpiderDropFetcher/src/provider/wz/ImgMapleSound.java
new file mode 100644
index 000000000..8add2ccb3
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/ImgMapleSound.java
@@ -0,0 +1,39 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+public class ImgMapleSound {
+    private int dataLength, offset;
+
+    public ImgMapleSound(int dataLength, int offset) {
+        this.dataLength = dataLength;
+        this.offset = offset;
+    }
+
+    public int getDataLength() {
+        return dataLength;
+    }
+
+    public int getOffset() {
+        return offset;
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/ListWZFile.java b/tools/SpiderDropFetcher/src/provider/wz/ListWZFile.java
new file mode 100644
index 000000000..1672a08c5
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/ListWZFile.java
@@ -0,0 +1,86 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+import java.io.BufferedInputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.List;
+import provider.MapleDataProviderFactory;
+import tools.data.input.GenericLittleEndianAccessor;
+import tools.data.input.InputStreamByteStream;
+import tools.data.input.LittleEndianAccessor;
+
+public class ListWZFile {
+    private LittleEndianAccessor lea;
+    private List<String> entries = new ArrayList<String>();
+    private static Collection<String> modernImgs = new HashSet<String>();
+
+    public static byte[] xorBytes(byte[] a, byte[] b) {
+        byte[] wusched = new byte[a.length];
+        for (int i = 0; i < a.length; i++) {
+            wusched[i] = (byte) (a[i] ^ b[i]);
+        }
+        return wusched;
+    }
+
+    public ListWZFile(File listwz) throws FileNotFoundException {
+        lea = new GenericLittleEndianAccessor(new InputStreamByteStream(new BufferedInputStream(new FileInputStream(listwz))));
+        while (lea.available() > 0) {
+            int l = lea.readInt() * 2;
+            byte[] chunk = new byte[l];
+            for (int i = 0; i < chunk.length; i++) {
+                chunk[i] = lea.readByte();
+            }
+            lea.readChar();
+            final String value = String.valueOf(WZTool.readListString(chunk));
+            entries.add(value);
+        }
+        entries = Collections.unmodifiableList(entries);
+    }
+
+    public List<String> getEntries() {
+        return entries;
+    }
+
+    public static void init() {
+        final String listWz = System.getProperty("listwz");
+        if (listWz != null) {
+            ListWZFile listwz;
+            try {
+                listwz = new ListWZFile(MapleDataProviderFactory.fileInWZPath("List.wz"));
+                modernImgs = new HashSet<String>(listwz.getEntries());
+            } catch (FileNotFoundException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+    public static boolean isModernImgFile(String path) {
+        return modernImgs.contains(path);
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/MapleDataType.java b/tools/SpiderDropFetcher/src/provider/wz/MapleDataType.java
new file mode 100644
index 000000000..e074d57d1
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/MapleDataType.java
@@ -0,0 +1,26 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+public enum MapleDataType {
+    NONE, IMG_0x00, SHORT, INT, FLOAT, DOUBLE, STRING, EXTENDED, PROPERTY, CANVAS, VECTOR, CONVEX, SOUND, UOL, UNKNOWN_TYPE, UNKNOWN_EXTENDED_TYPE;
+}
\ No newline at end of file
diff --git a/tools/SpiderDropFetcher/src/provider/wz/PNGMapleCanvas.java b/tools/SpiderDropFetcher/src/provider/wz/PNGMapleCanvas.java
new file mode 100644
index 000000000..97c230380
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/PNGMapleCanvas.java
@@ -0,0 +1,151 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+import java.awt.Point;
+import java.awt.image.BufferedImage;
+import java.awt.image.DataBuffer;
+import java.awt.image.DataBufferByte;
+import java.awt.image.PixelInterleavedSampleModel;
+import java.awt.image.Raster;
+import java.awt.image.SampleModel;
+import java.awt.image.WritableRaster;
+import java.util.zip.DataFormatException;
+import java.util.zip.Inflater;
+import provider.MapleCanvas;
+
+public class PNGMapleCanvas implements MapleCanvas {
+    private static final int[] ZAHLEN = new int[]{2, 1, 0, 3};
+    private int height;
+    private int width;
+    private int dataLength;
+    private int format;
+    private byte[] data;
+
+    public PNGMapleCanvas(int width, int height, int dataLength, int format, byte[] data) {
+        super();
+        this.height = height;
+        this.width = width;
+        this.dataLength = dataLength;
+        this.format = format;
+        this.data = data;
+    }
+
+    public int getHeight() {
+        return height;
+    }
+
+    public int getWidth() {
+        return width;
+    }
+
+    public int getFormat() {
+        return format;
+    }
+
+    private byte[] getData() {
+        return data;
+    }
+
+    @Override
+    public BufferedImage getImage() {
+        int sizeUncompressed = 0;
+        int size8888 = 0;
+        int maxWriteBuf = 2;
+        int maxHeight = 3;
+        byte[] writeBuf = new byte[maxWriteBuf];
+        @SuppressWarnings ("unused")
+        byte[] rowPointers = new byte[maxHeight];
+        switch (getFormat()) {
+            case 1:
+            case 513:
+                sizeUncompressed = getHeight() * getWidth() * 4;
+                break;
+            case 2:
+                sizeUncompressed = getHeight() * getWidth() * 8;
+                break;
+            case 517:
+                sizeUncompressed = getHeight() * getWidth() / 128;
+                break;
+        }
+        size8888 = getHeight() * getWidth() * 8;
+        if (size8888 > maxWriteBuf) {
+            maxWriteBuf = size8888;
+            writeBuf = new byte[maxWriteBuf];
+        }
+        if (getHeight() > maxHeight) {
+            maxHeight = getHeight();
+            rowPointers = new byte[maxHeight];
+        }
+        Inflater dec = new Inflater();
+        dec.setInput(getData(), 0, dataLength);
+        int declen = 0;
+        byte[] uc = new byte[sizeUncompressed];
+        try {
+            declen = dec.inflate(uc);
+        } catch (DataFormatException ex) {
+            throw new RuntimeException("zlib fucks", ex);
+        }
+        dec.end();
+        if (getFormat() == 1) {
+            for (int i = 0; i < sizeUncompressed; i++) {
+                byte low = (byte) (uc[i] & 0x0F);
+                byte high = (byte) (uc[i] & 0xF0);
+                writeBuf[(i << 1)] = (byte) (((low << 4) | low) & 0xFF);
+                writeBuf[(i << 1) + 1] = (byte) (high | ((high >>> 4) & 0xF));
+            }
+        } else if (getFormat() == 2) {
+            writeBuf = uc;
+        } else if (getFormat() == 513) {
+            for (int i = 0; i < declen; i += 2) {
+                byte bBits = (byte) ((uc[i] & 0x1F) << 3);
+                byte gBits = (byte) (((uc[i + 1] & 0x07) << 5) | ((uc[i] & 0xE0) >> 3));
+                byte rBits = (byte) (uc[i + 1] & 0xF8);
+                writeBuf[(i << 1)] = (byte) (bBits | (bBits >> 5));
+                writeBuf[(i << 1) + 1] = (byte) (gBits | (gBits >> 6));
+                writeBuf[(i << 1) + 2] = (byte) (rBits | (rBits >> 5));
+                writeBuf[(i << 1) + 3] = (byte) 0xFF;
+            }
+        } else if (getFormat() == 517) {
+            byte b = 0x00;
+            int pixelIndex = 0;
+            for (int i = 0; i < declen; i++) {
+                for (int j = 0; j < 8; j++) {
+                    b = (byte) (((uc[i] & (0x01 << (7 - j))) >> (7 - j)) * 255);
+                    for (int k = 0; k < 16; k++) {
+                        pixelIndex = (i << 9) + (j << 6) + k * 2;
+                        writeBuf[pixelIndex] = b;
+                        writeBuf[pixelIndex + 1] = b;
+                        writeBuf[pixelIndex + 2] = b;
+                        writeBuf[pixelIndex + 3] = (byte) 0xFF;
+                    }
+                }
+            }
+        }
+        DataBufferByte imgData = new DataBufferByte(writeBuf, sizeUncompressed);
+        SampleModel sm = new PixelInterleavedSampleModel(DataBuffer.TYPE_BYTE, getWidth(), getHeight(), 4, getWidth() * 4, ZAHLEN);
+        WritableRaster imgRaster = Raster.createWritableRaster(sm, imgData, new Point(0, 0));
+        BufferedImage aa = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_ARGB);
+        aa.setData(imgRaster);
+        return aa;
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/WZDirectoryEntry.java b/tools/SpiderDropFetcher/src/provider/wz/WZDirectoryEntry.java
new file mode 100644
index 000000000..d24b8cb2b
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/WZDirectoryEntry.java
@@ -0,0 +1,68 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import provider.MapleDataDirectoryEntry;
+import provider.MapleDataEntity;
+import provider.MapleDataEntry;
+import provider.MapleDataFileEntry;
+
+public class WZDirectoryEntry extends WZEntry implements MapleDataDirectoryEntry {
+    private List<MapleDataDirectoryEntry> subdirs = new ArrayList<MapleDataDirectoryEntry>();
+    private List<MapleDataFileEntry> files = new ArrayList<MapleDataFileEntry>();
+    private Map<String, MapleDataEntry> entries = new HashMap<String, MapleDataEntry>();
+
+    public WZDirectoryEntry(String name, int size, int checksum, MapleDataEntity parent) {
+        super(name, size, checksum, parent);
+    }
+
+    public WZDirectoryEntry() {
+        super(null, 0, 0, null);
+    }
+
+    public void addDirectory(MapleDataDirectoryEntry dir) {
+        subdirs.add(dir);
+        entries.put(dir.getName(), dir);
+    }
+
+    public void addFile(MapleDataFileEntry fileEntry) {
+        files.add(fileEntry);
+        entries.put(fileEntry.getName(), fileEntry);
+    }
+
+    public List<MapleDataDirectoryEntry> getSubdirectories() {
+        return Collections.unmodifiableList(subdirs);
+    }
+
+    public List<MapleDataFileEntry> getFiles() {
+        return Collections.unmodifiableList(files);
+    }
+
+    public MapleDataEntry getEntry(String name) {
+        return entries.get(name);
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/WZEntry.java b/tools/SpiderDropFetcher/src/provider/wz/WZEntry.java
new file mode 100644
index 000000000..1e921b208
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/WZEntry.java
@@ -0,0 +1,61 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+import provider.MapleDataEntity;
+import provider.MapleDataEntry;
+
+public class WZEntry implements MapleDataEntry {
+    private String name;
+    private int size;
+    private int checksum;
+    private int offset;
+    private MapleDataEntity parent;
+
+    public WZEntry(String name, int size, int checksum, MapleDataEntity parent) {
+        super();
+        this.name = name;
+        this.size = size;
+        this.checksum = checksum;
+        this.parent = parent;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public int getSize() {
+        return size;
+    }
+
+    public int getChecksum() {
+        return checksum;
+    }
+
+    public int getOffset() {
+        return offset;
+    }
+
+    public MapleDataEntity getParent() {
+        return parent;
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/WZFile.java b/tools/SpiderDropFetcher/src/provider/wz/WZFile.java
new file mode 100644
index 000000000..c6c0abf53
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/WZFile.java
@@ -0,0 +1,154 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+import java.io.BufferedInputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.RandomAccessFile;
+import provider.MapleData;
+import provider.MapleDataDirectoryEntry;
+import provider.MapleDataFileEntry;
+import provider.MapleDataProvider;
+import tools.data.input.GenericLittleEndianAccessor;
+import tools.data.input.GenericSeekableLittleEndianAccessor;
+import tools.data.input.InputStreamByteStream;
+import tools.data.input.LittleEndianAccessor;
+import tools.data.input.RandomAccessByteStream;
+import tools.data.input.SeekableLittleEndianAccessor;
+
+public class WZFile implements MapleDataProvider {
+    static {
+        ListWZFile.init();
+    }
+    private File wzfile;
+    private LittleEndianAccessor lea;
+    private SeekableLittleEndianAccessor slea;
+    private int headerSize;
+    private WZDirectoryEntry root;
+    private boolean provideImages;
+    private int cOffset;
+
+    public WZFile(File wzfile, boolean provideImages) throws IOException {
+        this.wzfile = wzfile;
+        lea = new GenericLittleEndianAccessor(new InputStreamByteStream(new BufferedInputStream(new FileInputStream(wzfile))));
+        RandomAccessFile raf = new RandomAccessFile(wzfile, "r");
+        slea = new GenericSeekableLittleEndianAccessor(new RandomAccessByteStream(raf));
+        root = new WZDirectoryEntry(wzfile.getName(), 0, 0, null);
+        this.provideImages = provideImages;
+        load();
+    }
+
+    private void load() throws IOException {
+        lea.readAsciiString(4);
+        lea.readInt();
+        lea.readInt();
+        headerSize = lea.readInt();
+        lea.readNullTerminatedAsciiString();
+        lea.readShort();
+        parseDirectory(root);
+        cOffset = (int) lea.getBytesRead();
+        getOffsets(root);
+    }
+
+    private void getOffsets(MapleDataDirectoryEntry dir) {
+        for (MapleDataFileEntry file : dir.getFiles()) {
+            file.setOffset(cOffset);
+            cOffset += file.getSize();
+        }
+        for (MapleDataDirectoryEntry sdir : dir.getSubdirectories()) {
+            getOffsets(sdir);
+        }
+    }
+
+    private void parseDirectory(WZDirectoryEntry dir) {
+        int entries = WZTool.readValue(lea);
+        for (int i = 0; i < entries; i++) {
+            byte marker = lea.readByte();
+            String name = null;
+            int size, checksum;
+            switch (marker) {
+                case 0x02:
+                    name = WZTool.readDecodedStringAtOffsetAndReset(slea, lea.readInt() + this.headerSize + 1);
+                    size = WZTool.readValue(lea);
+                    checksum = WZTool.readValue(lea);
+                    lea.readInt(); //dummy int
+                    dir.addFile(new WZFileEntry(name, size, checksum, dir));
+                    break;
+                case 0x03:
+                case 0x04:
+                    name = WZTool.readDecodedString(lea);
+                    size = WZTool.readValue(lea);
+                    checksum = WZTool.readValue(lea);
+                    lea.readInt(); //dummy int
+                    if (marker == 3) {
+                        dir.addDirectory(new WZDirectoryEntry(name, size, checksum, dir));
+                    } else {
+                        dir.addFile(new WZFileEntry(name, size, checksum, dir));
+                    }
+                    break;
+                default:
+            }
+        }
+        for (MapleDataDirectoryEntry idir : dir.getSubdirectories()) {
+            parseDirectory((WZDirectoryEntry) idir);
+        }
+    }
+
+    public WZIMGFile getImgFile(String path) throws IOException {
+        String segments[] = path.split("/");
+        WZDirectoryEntry dir = root;
+        for (int x = 0; x < segments.length - 1; x++) {
+            dir = (WZDirectoryEntry) dir.getEntry(segments[x]);
+            if (dir == null) {
+                return null;
+            }
+        }
+        WZFileEntry entry = (WZFileEntry) dir.getEntry(segments[segments.length - 1]);
+        if (entry == null) {
+            return null;
+        }
+        String fullPath = wzfile.getName().substring(0, wzfile.getName().length() - 3).toLowerCase() + "/" + path;
+        return new WZIMGFile(this.wzfile, entry, provideImages, ListWZFile.isModernImgFile(fullPath));
+    }
+
+    @Override
+    public synchronized MapleData getData(String path) {
+        try {
+            WZIMGFile imgFile = getImgFile(path);
+            if (imgFile == null) {
+                return null;
+            }
+            MapleData ret = imgFile.getRoot();
+            return ret;
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    @Override
+    public MapleDataDirectoryEntry getRoot() {
+        return root;
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/WZFileEntry.java b/tools/SpiderDropFetcher/src/provider/wz/WZFileEntry.java
new file mode 100644
index 000000000..792371d9c
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/WZFileEntry.java
@@ -0,0 +1,42 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+import provider.MapleDataEntity;
+import provider.MapleDataFileEntry;
+
+public class WZFileEntry extends WZEntry implements MapleDataFileEntry {
+    private int offset;
+
+    public WZFileEntry(String name, int size, int checksum, MapleDataEntity parent) {
+        super(name, size, checksum, parent);
+    }
+
+    @Override
+    public int getOffset() {
+        return offset;
+    }
+
+    public void setOffset(int offset) {
+        this.offset = offset;
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/WZIMGEntry.java b/tools/SpiderDropFetcher/src/provider/wz/WZIMGEntry.java
new file mode 100644
index 000000000..385d78518
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/WZIMGEntry.java
@@ -0,0 +1,118 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.List;
+import provider.MapleData;
+import provider.MapleDataEntity;
+
+public class WZIMGEntry implements MapleData {
+    private String name;
+    private MapleDataType type;
+    private List<MapleData> children = new ArrayList<MapleData>(10);
+    private Object data;
+    private MapleDataEntity parent;
+
+    public WZIMGEntry(MapleDataEntity parent) {
+        this.parent = parent;
+    }
+
+    @Override
+    public String getName() {
+        return name;
+    }
+
+    @Override
+    public MapleDataType getType() {
+        return type;
+    }
+
+    @Override
+    public List<MapleData> getChildren() {
+        return Collections.unmodifiableList(children);
+    }
+
+    @Override
+    public MapleData getChildByPath(String path) {
+        String segments[] = path.split("/");
+        if (segments[0].equals("..")) {
+            return ((MapleData) getParent()).getChildByPath(path.substring(path.indexOf("/") + 1));
+        }
+        MapleData ret = this;
+        for (int x = 0; x < segments.length; x++) {
+            boolean foundChild = false;
+            for (MapleData child : ret.getChildren()) {
+                if (child.getName().equals(segments[x])) {
+                    ret = child;
+                    foundChild = true;
+                    break;
+                }
+            }
+            if (!foundChild) {
+                return null;
+            }
+        }
+        return ret;
+    }
+
+    @Override
+    public Object getData() {
+        return data;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public void setType(MapleDataType type) {
+        this.type = type;
+    }
+
+    public void setData(Object data) {
+        this.data = data;
+    }
+
+    public void addChild(WZIMGEntry entry) {
+        children.add(entry);
+    }
+
+    @Override
+    public Iterator<MapleData> iterator() {
+        return getChildren().iterator();
+    }
+
+    @Override
+    public String toString() {
+        return getName() + ":" + getData();
+    }
+
+    public MapleDataEntity getParent() {
+        return parent;
+    }
+
+    public void finish() {
+        ((ArrayList<MapleData>) children).trimToSize();
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/WZIMGFile.java b/tools/SpiderDropFetcher/src/provider/wz/WZIMGFile.java
new file mode 100644
index 000000000..bec06c78b
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/WZIMGFile.java
@@ -0,0 +1,227 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+import java.awt.Point;
+import java.io.DataOutputStream;
+import java.io.File;
+import java.io.IOException;
+import java.io.OutputStream;
+import java.io.RandomAccessFile;
+import tools.data.input.GenericSeekableLittleEndianAccessor;
+import tools.data.input.RandomAccessByteStream;
+import tools.data.input.SeekableLittleEndianAccessor;
+
+public class WZIMGFile {
+    private WZFileEntry file;
+    private WZIMGEntry root;
+    private boolean provideImages;
+    @SuppressWarnings ("unused")
+    private boolean modernImg;
+
+    public WZIMGFile(File wzfile, WZFileEntry file, boolean provideImages, boolean modernImg) throws IOException {
+        RandomAccessFile raf = new RandomAccessFile(wzfile, "r");
+        SeekableLittleEndianAccessor slea = new GenericSeekableLittleEndianAccessor(new RandomAccessByteStream(raf));
+        slea.seek(file.getOffset());
+        this.file = file;
+        this.provideImages = provideImages;
+        root = new WZIMGEntry(file.getParent());
+        root.setName(file.getName());
+        root.setType(MapleDataType.EXTENDED);
+        this.modernImg = modernImg;
+        parseExtended(root, slea, 0);
+        root.finish();
+        raf.close();
+    }
+
+    protected void dumpImg(OutputStream out, SeekableLittleEndianAccessor slea) throws IOException {
+        DataOutputStream os = new DataOutputStream(out);
+        long oldPos = slea.getPosition();
+        slea.seek(file.getOffset());
+        for (int x = 0; x < file.getSize(); x++) {
+            os.write(slea.readByte());
+        }
+        slea.seek(oldPos);
+    }
+
+    public WZIMGEntry getRoot() {
+        return root;
+    }
+
+    private void parse(WZIMGEntry entry, SeekableLittleEndianAccessor slea) {
+        byte marker = slea.readByte();
+        switch (marker) {
+            case 0: {
+                String name = WZTool.readDecodedString(slea);
+                entry.setName(name);
+                break;
+            }
+            case 1: {
+                String name = WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt());
+                entry.setName(name);
+                break;
+            }
+            default:
+                System.out.println("Unknown Image identifier: " + marker + " at offset " + (slea.getPosition() - file.getOffset()));
+        }
+        marker = slea.readByte();
+        switch (marker) {
+            case 0:
+                entry.setType(MapleDataType.IMG_0x00);
+                break;
+            case 2:
+            case 11: //??? no idea, since 0.49
+                entry.setType(MapleDataType.SHORT);
+                entry.setData(Short.valueOf(slea.readShort()));
+                break;
+            case 3:
+                entry.setType(MapleDataType.INT);
+                entry.setData(Integer.valueOf(WZTool.readValue(slea)));
+                break;
+            case 4:
+                entry.setType(MapleDataType.FLOAT);
+                entry.setData(Float.valueOf(WZTool.readFloatValue(slea)));
+                break;
+            case 5:
+                entry.setType(MapleDataType.DOUBLE);
+                entry.setData(Double.valueOf(slea.readDouble()));
+                break;
+            case 8:
+                entry.setType(MapleDataType.STRING);
+                byte iMarker = slea.readByte();
+                if (iMarker == 0) {
+                    entry.setData(WZTool.readDecodedString(slea));
+                } else if (iMarker == 1) {
+                    entry.setData(WZTool.readDecodedStringAtOffsetAndReset(slea, slea.readInt() + file.getOffset()));
+                } else {
+                    System.out.println("Unknown String type " + iMarker);
+                }
+                break;
+            case 9:
+                entry.setType(MapleDataType.EXTENDED);
+                long endOfExtendedBlock = slea.readInt();
+                endOfExtendedBlock += slea.getPosition();
+                parseExtended(entry, slea, endOfExtendedBlock);
+                break;
+            default:
+                System.out.println("Unknown Image type " + marker);
+        }
+    }
+
+    private void parseExtended(WZIMGEntry entry, SeekableLittleEndianAccessor slea, long endOfExtendedBlock) {
+        byte marker = slea.readByte();
+        String type;
+        switch (marker) {
+            case 0x73:
+                type = WZTool.readDecodedString(slea);
+                break;
+            case 0x1B:
+                type = WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt());
+                break;
+            default:
+                throw new RuntimeException("Unknown extended image identifier: " + marker + " at offset " +
+                        (slea.getPosition() - file.getOffset()));
+        }
+        if (type.equals("Property")) {
+            entry.setType(MapleDataType.PROPERTY);
+            slea.readByte();
+            slea.readByte();
+            int children = WZTool.readValue(slea);
+            for (int i = 0; i < children; i++) {
+                WZIMGEntry cEntry = new WZIMGEntry(entry);
+                parse(cEntry, slea);
+                cEntry.finish();
+                entry.addChild(cEntry);
+            }
+        } else if (type.equals("Canvas")) {
+            entry.setType(MapleDataType.CANVAS);
+            slea.readByte();
+            marker = slea.readByte();
+            if (marker == 0) {
+                // do nothing
+            } else if (marker == 1) {
+                slea.readByte();
+                slea.readByte();
+                int children = WZTool.readValue(slea);
+                for (int i = 0; i < children; i++) {
+                    WZIMGEntry child = new WZIMGEntry(entry);
+                    parse(child, slea);
+                    child.finish();
+                    entry.addChild(child);
+                }
+            } else {
+                System.out.println("Canvas marker != 1 (" + marker + ")");
+            }
+            int width = WZTool.readValue(slea);
+            int height = WZTool.readValue(slea);
+            int format = WZTool.readValue(slea);
+            int format2 = slea.readByte();
+            slea.readInt();
+            int dataLength = slea.readInt() - 1;
+            slea.readByte();
+            if (provideImages) {
+                byte[] pngdata = slea.read(dataLength);
+                entry.setData(new PNGMapleCanvas(width, height, dataLength, format + format2, pngdata));
+            } else {
+                entry.setData(new PNGMapleCanvas(width, height, dataLength, format + format2, null));
+                slea.skip(dataLength);
+            }
+        } else if (type.equals("Shape2D#Vector2D")) {
+            entry.setType(MapleDataType.VECTOR);
+            int x = WZTool.readValue(slea);
+            int y = WZTool.readValue(slea);
+            entry.setData(new Point(x, y));
+        } else if (type.equals("Shape2D#Convex2D")) {
+            int children = WZTool.readValue(slea);
+            for (int i = 0; i < children; i++) {
+                WZIMGEntry cEntry = new WZIMGEntry(entry);
+                parseExtended(cEntry, slea, 0);
+                cEntry.finish();
+                entry.addChild(cEntry);
+            }
+        } else if (type.equals("Sound_DX8")) {
+            entry.setType(MapleDataType.SOUND);
+            slea.readByte();
+            int dataLength = WZTool.readValue(slea);
+            WZTool.readValue(slea); // no clue what this is
+            int offset = (int) slea.getPosition();
+            entry.setData(new ImgMapleSound(dataLength, offset - file.getOffset()));
+            slea.seek(endOfExtendedBlock);
+        } else if (type.equals("UOL")) {
+            entry.setType(MapleDataType.UOL);
+            slea.readByte();
+            byte uolmarker = slea.readByte();
+            switch (uolmarker) {
+                case 0:
+                    entry.setData(WZTool.readDecodedString(slea));
+                    break;
+                case 1:
+                    entry.setData(WZTool.readDecodedStringAtOffsetAndReset(slea, file.getOffset() + slea.readInt()));
+                    break;
+                default:
+                    System.out.println("Unknown UOL marker: " + uolmarker + " " + entry.getName());
+            }
+        } else {
+            throw new RuntimeException("Unhandled extended type: " + type);
+        }
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/WZTool.java b/tools/SpiderDropFetcher/src/provider/wz/WZTool.java
new file mode 100644
index 000000000..85e1c8d90
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/WZTool.java
@@ -0,0 +1,187 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+import java.security.InvalidKeyException;
+import java.security.NoSuchAlgorithmException;
+import javax.crypto.BadPaddingException;
+import javax.crypto.Cipher;
+import javax.crypto.IllegalBlockSizeException;
+import javax.crypto.NoSuchPaddingException;
+import javax.crypto.spec.SecretKeySpec;
+import tools.data.input.LittleEndianAccessor;
+import tools.data.input.SeekableLittleEndianAccessor;
+
+/*
+ * Ported Code, see WZFile.java for more info
+ */
+public class WZTool {
+    private static byte[] encKey;
+
+    static {
+        byte[] iv = new byte[]{(byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,
+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,
+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,
+            (byte) 0x4d, (byte) 0x23, (byte) 0xc7, (byte) 0x2b,};
+        byte[] key = new byte[]{(byte) 0x13, 0x00, 0x00, 0x00,
+            (byte) 0x08, 0x00, 0x00, 0x00,
+            (byte) 0x06, 0x00, 0x00, 0x00,
+            (byte) 0xB4, 0x00, 0x00, 0x00,
+            (byte) 0x1B, 0x00, 0x00, 0x00,
+            (byte) 0x0F, 0x00, 0x00, 0x00,
+            (byte) 0x33, 0x00, 0x00, 0x00,
+            (byte) 0x52, 0x00, 0x00, 0x00
+        };
+        Cipher cipher = null;
+        SecretKeySpec skeySpec = new SecretKeySpec(key, "AES");
+        try {
+            cipher = Cipher.getInstance("AES");
+        } catch (NoSuchAlgorithmException e) {
+            e.printStackTrace();
+        } catch (NoSuchPaddingException e) {
+            e.printStackTrace();
+        }
+        try {
+            cipher.init(Cipher.ENCRYPT_MODE, skeySpec);
+        } catch (InvalidKeyException e) {
+            e.printStackTrace();
+        }
+        encKey = new byte[0xFFFF];
+        for (int i = 0; i < (0xFFFF / 16); i++) {
+            try {
+                iv = cipher.doFinal(iv);
+            } catch (IllegalBlockSizeException e) {
+                e.printStackTrace();
+            } catch (BadPaddingException e) {
+                e.printStackTrace();
+            }
+            System.arraycopy(iv, 0, encKey, (i * 16), 16);
+        }
+        try {
+            iv = cipher.doFinal(iv);
+        } catch (IllegalBlockSizeException e) {
+            e.printStackTrace();
+        } catch (BadPaddingException e) {
+            e.printStackTrace();
+        }
+        System.arraycopy(iv, 0, encKey, 65520, 15);
+    }
+
+    public static byte[] readListString(byte[] str) {
+        for (int i = 0; i < str.length; i++) {
+            str[i] = (byte) (str[i] ^ encKey[i]);
+        }
+        return str;
+    }
+
+    public static String readDecodedString(LittleEndianAccessor llea) {
+        int strLength;
+        byte b = llea.readByte();
+        if (b == 0x00) {
+            return "";
+        }
+        if (b >= 0) {
+            if (b == 0x7F) {
+                strLength = llea.readInt();
+            } else {
+                strLength = (int) b;
+            }
+            if (strLength < 0) {
+                return "";
+            }
+            byte str[] = new byte[strLength * 2];
+            for (int i = 0; i < strLength * 2; i++) {
+                str[i] = llea.readByte();
+            }
+            return DecryptUnicodeStr(str);
+        } else {
+            if (b == -128) {
+                strLength = llea.readInt();
+            } else {
+                strLength = -b;
+            }
+            if (strLength < 0) {
+                return "";
+            }
+            byte str[] = new byte[strLength];
+            for (int i = 0; i < strLength; i++) {
+                str[i] = llea.readByte();
+            }
+            return DecryptAsciiStr(str);
+        }
+    }
+
+    public static String DecryptAsciiStr(byte[] str) {
+        byte xorByte = (byte) 0xAA;
+        for (int i = 0; i < str.length; i++) {
+            str[i] = (byte) (str[i] ^ xorByte ^ encKey[i]);
+            xorByte++;
+        }
+        return new String(str);
+    }
+
+    public static String DecryptUnicodeStr(byte[] str) {
+        int xorByte = 0xAAAA;
+        char[] charRet = new char[str.length / 2];
+        for (int i = 0; i < str.length; i++) {
+            str[i] = (byte) (str[i] ^ encKey[i]);
+        }
+        for (int i = 0; i < (str.length / 2); i++) {
+            char toXor = (char) ((str[i] << 8) | str[i + 1]);
+            charRet[i] = (char) (toXor ^ xorByte);
+            xorByte++;
+        }
+        return String.valueOf(charRet);
+    }
+
+    public static String readDecodedStringAtOffset(SeekableLittleEndianAccessor slea, int offset) {
+        slea.seek(offset);
+        return readDecodedString(slea);
+    }
+
+    public static String readDecodedStringAtOffsetAndReset(SeekableLittleEndianAccessor slea, int offset) {
+        long pos = 0;
+        pos = slea.getPosition();
+        slea.seek(offset);
+        String ret = readDecodedString(slea);
+        slea.seek(pos);
+        return ret;
+    }
+
+    public static int readValue(LittleEndianAccessor lea) {
+        byte b = lea.readByte();
+        if (b == -128) {
+            return lea.readInt();
+        } else {
+            return ((int) b);
+        }
+    }
+
+    public static float readFloatValue(LittleEndianAccessor lea) {
+        byte b = lea.readByte();
+        if (b == -128) {
+            return lea.readFloat();
+        } else {
+            return 0;
+        }
+    }
+}
\ No newline at end of file
diff --git a/tools/SpiderDropFetcher/src/provider/wz/XMLDomMapleData.java b/tools/SpiderDropFetcher/src/provider/wz/XMLDomMapleData.java
new file mode 100644
index 000000000..f8756a869
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/XMLDomMapleData.java
@@ -0,0 +1,225 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+package provider.wz;
+
+import java.awt.Point;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.text.NumberFormat;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Locale;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.parsers.ParserConfigurationException;
+import provider.MapleData;
+import provider.MapleDataEntity;
+import org.w3c.dom.Document;
+import org.w3c.dom.NamedNodeMap;
+import org.w3c.dom.Node;
+import org.w3c.dom.NodeList;
+import org.xml.sax.SAXException;
+
+public class XMLDomMapleData implements MapleData {
+	private Node node;
+	private File imageDataDir;
+        private final static NumberFormat nfParser = NumberFormat.getInstance(Locale.FRANCE);
+
+	public XMLDomMapleData(FileInputStream fis, File imageDataDir) {
+		try {
+			DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
+			DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
+			Document document = documentBuilder.parse(fis);
+			this.node = document.getFirstChild();
+		} catch (ParserConfigurationException e) {
+			throw new RuntimeException(e);
+		} catch (SAXException e) {
+			throw new RuntimeException(e);
+		} catch (IOException e) {
+			throw new RuntimeException(e);
+		}
+		this.imageDataDir = imageDataDir;
+	}
+
+	private XMLDomMapleData(Node node) {
+		this.node = node;
+	}
+
+	@Override
+	public synchronized MapleData getChildByPath(String path) {  // the whole XML reading system seems susceptible to give nulls on strenuous read scenarios
+		String segments[] = path.split("/");
+		if (segments[0].equals("..")) {
+			return ((MapleData) getParent()).getChildByPath(path.substring(path.indexOf("/") + 1));
+		}
+
+                Node myNode;
+                myNode = node;
+                for (String s : segments) {
+                        NodeList childNodes = myNode.getChildNodes();
+                        boolean foundChild = false;
+                        for (int i = 0; i < childNodes.getLength(); i++) {
+                                Node childNode = childNodes.item(i);
+                                if (childNode.getNodeType() == Node.ELEMENT_NODE && childNode.getAttributes().getNamedItem("name").getNodeValue().equals(s)) {
+                                        myNode = childNode;
+                                        foundChild = true;
+                                        break;
+                                }
+                        }
+                        if (!foundChild) {
+                                return null;
+                        }
+                }
+                
+		XMLDomMapleData ret = new XMLDomMapleData(myNode);
+		ret.imageDataDir = new File(imageDataDir, getName() + "/" + path).getParentFile();
+		return ret;
+	}
+
+	@Override
+	public synchronized List<MapleData> getChildren() {
+		List<MapleData> ret = new ArrayList<>();
+                
+                NodeList childNodes = node.getChildNodes();
+                for (int i = 0; i < childNodes.getLength(); i++) {
+                        Node childNode = childNodes.item(i);
+                        if (childNode.getNodeType() == Node.ELEMENT_NODE) {
+                                XMLDomMapleData child = new XMLDomMapleData(childNode);
+                                child.imageDataDir = new File(imageDataDir, getName());
+                                ret.add(child);
+                        }
+                }
+                
+		return ret;
+	}
+
+        public synchronized static Number parseNumber(String value) {
+            try {
+                return nfParser.parse(value);
+            } catch(Exception e) {
+                e.printStackTrace();
+                return 0.0f;
+            }
+        }
+        
+	@Override
+	public synchronized Object getData() {
+                NamedNodeMap attributes = node.getAttributes();
+                MapleDataType type = getType();
+                switch (type) {
+                        case DOUBLE:
+                        case FLOAT:
+                        case INT:
+                        case SHORT: {
+                                String value = attributes.getNamedItem("value").getNodeValue();
+                                Number nval = parseNumber(value);
+
+                                switch (type) {
+                                        case DOUBLE:
+                                                return nval.doubleValue();
+                                        case FLOAT:
+                                                return nval.floatValue();
+                                        case INT:
+                                                return nval.intValue();
+                                        case SHORT:
+                                                return nval.shortValue();
+                                        default:
+                                                return null;
+                                }
+                        }
+                        case STRING:
+                        case UOL: {
+                                String value = attributes.getNamedItem("value").getNodeValue();
+                                return value;
+                        }
+                        case VECTOR: {
+                                String x = attributes.getNamedItem("x").getNodeValue();
+                                String y = attributes.getNamedItem("y").getNodeValue();
+                                return new Point(Integer.parseInt(x), Integer.parseInt(y));
+                        }
+                        case CANVAS: {
+                                String width = attributes.getNamedItem("width").getNodeValue();
+                                String height = attributes.getNamedItem("height").getNodeValue();
+                                return new FileStoredPngMapleCanvas(Integer.parseInt(width), Integer.parseInt(height), new File(
+                                                imageDataDir, getName() + ".png"));
+                        }
+                        default:
+                                return null;
+                }
+	}
+
+	@Override
+	public synchronized MapleDataType getType() {
+                String nodeName = node.getNodeName();
+                
+                switch (nodeName) {
+                    case "imgdir":
+                        return MapleDataType.PROPERTY;
+                    case "canvas":
+                        return MapleDataType.CANVAS;
+                    case "convex":
+                        return MapleDataType.CONVEX;
+                    case "sound":
+                        return MapleDataType.SOUND;
+                    case "uol":
+                        return MapleDataType.UOL;
+                    case "double":
+                        return MapleDataType.DOUBLE;
+                    case "float":
+                        return MapleDataType.FLOAT;
+                    case "int":
+                        return MapleDataType.INT;
+                    case "short":
+                        return MapleDataType.SHORT;
+                    case "string":
+                        return MapleDataType.STRING;
+                    case "vector":
+                        return MapleDataType.VECTOR;
+                    case "null":
+                        return MapleDataType.IMG_0x00;
+                }
+		return null;
+	}
+
+	@Override
+	public synchronized MapleDataEntity getParent() {
+                Node parentNode;
+                parentNode = node.getParentNode();
+                if (parentNode.getNodeType() == Node.DOCUMENT_NODE) {
+                        return null;
+                }
+		XMLDomMapleData parentData = new XMLDomMapleData(parentNode);
+		parentData.imageDataDir = imageDataDir.getParentFile();
+		return parentData;
+	}
+
+	@Override
+	public synchronized String getName() {
+                return node.getAttributes().getNamedItem("name").getNodeValue();
+	}
+
+	@Override
+	public synchronized Iterator<MapleData> iterator() {
+		return getChildren().iterator();
+	}
+}
diff --git a/tools/SpiderDropFetcher/src/provider/wz/XMLWZFile.java b/tools/SpiderDropFetcher/src/provider/wz/XMLWZFile.java
new file mode 100644
index 000000000..2a7694fdc
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/provider/wz/XMLWZFile.java
@@ -0,0 +1,85 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package provider.wz;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import provider.MapleData;
+import provider.MapleDataDirectoryEntry;
+import provider.MapleDataProvider;
+
+public class XMLWZFile implements MapleDataProvider {
+    private File root;
+    private WZDirectoryEntry rootForNavigation;
+
+    public XMLWZFile(File fileIn) {
+        root = fileIn;
+        rootForNavigation = new WZDirectoryEntry(fileIn.getName(), 0, 0, null);
+        fillMapleDataEntitys(root, rootForNavigation);
+    }
+
+    private void fillMapleDataEntitys(File lroot, WZDirectoryEntry wzdir) {
+        for (File file : lroot.listFiles()) {
+            String fileName = file.getName();
+            if (file.isDirectory() && !fileName.endsWith(".img")) {
+                WZDirectoryEntry newDir = new WZDirectoryEntry(fileName, 0, 0, wzdir);
+                wzdir.addDirectory(newDir);
+                fillMapleDataEntitys(file, newDir);
+            } else if (fileName.endsWith(".xml")) {
+                wzdir.addFile(new WZFileEntry(fileName.substring(0, fileName.length() - 4), 0, 0, wzdir));
+            }
+        }
+    }
+
+    @Override
+    public MapleData getData(String path) {
+        File dataFile = new File(root, path + ".xml");
+        File imageDataDir = new File(root, path);
+        if (!dataFile.exists()) {
+            return null;//bitches
+        }
+        FileInputStream fis;
+        try {
+            fis = new FileInputStream(dataFile);
+        } catch (FileNotFoundException e) {
+            throw new RuntimeException("Datafile " + path + " does not exist in " + root.getAbsolutePath());
+        }
+        final XMLDomMapleData domMapleData;
+        try {
+            domMapleData = new XMLDomMapleData(fis, imageDataDir.getParentFile());
+        } finally {
+            try {
+                fis.close();
+            } catch (IOException e) {
+                throw new RuntimeException(e);
+            }
+        }
+        return domMapleData;
+    }
+
+    @Override
+    public MapleDataDirectoryEntry getRoot() {
+        return rootForNavigation;
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/server/MapleItemInformationProvider.java b/tools/SpiderDropFetcher/src/server/MapleItemInformationProvider.java
new file mode 100644
index 000000000..b21584161
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/server/MapleItemInformationProvider.java
@@ -0,0 +1,147 @@
+/*
+ This file is part of the OdinMS Maple Story Server
+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+ Matthias Butz <matze@odinms.de>
+ Jan Christian Meyer <vimes@odinms.de>
+
+ This program is free software: you can redistribute it and/or modify
+ it under the terms of the GNU Affero General Public License as
+ published by the Free Software Foundation version 3 as published by
+ the Free Software Foundation. You may not use, modify or distribute
+ this program under any other version of the GNU Affero General Public
+ License.
+
+ This program is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU Affero General Public License for more details.
+
+ You should have received a copy of the GNU Affero General Public License
+ along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+package server;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import provider.MapleData;
+import provider.MapleDataProvider;
+import provider.MapleDataProviderFactory;
+import provider.MapleDataTool;
+import tools.Pair;
+
+/**
+ *
+ * @author Matze
+ *
+ */
+public class MapleItemInformationProvider {
+    private final static MapleItemInformationProvider instance = new MapleItemInformationProvider();
+    
+    public static MapleItemInformationProvider getInstance() {
+        return instance;
+    }
+    
+    protected MapleDataProvider itemData;
+    protected MapleDataProvider equipData;
+    protected MapleDataProvider stringData;
+    protected MapleDataProvider etcData;
+    protected MapleData cashStringData;
+    protected MapleData consumeStringData;
+    protected MapleData eqpStringData;
+    protected MapleData etcStringData;
+    protected MapleData insStringData;
+    protected MapleData petStringData;
+    protected Map<Integer, Boolean> isQuestItemCache = new HashMap<>();
+    protected Map<Integer, Boolean> isPartyQuestItemCache = new HashMap<>();
+    protected List<Pair<Integer, String>> itemNameCache = new ArrayList<>();
+
+    private MapleItemInformationProvider() {
+        itemData = MapleDataProviderFactory.getDataProvider(new File(System.getProperty("wzpath") + "/Item.wz"));
+        equipData = MapleDataProviderFactory.getDataProvider(new File(System.getProperty("wzpath") + "/Character.wz"));
+        stringData = MapleDataProviderFactory.getDataProvider(new File(System.getProperty("wzpath") + "/String.wz"));
+        etcData = MapleDataProviderFactory.getDataProvider(new File(System.getProperty("wzpath") + "/Etc.wz"));
+        cashStringData = stringData.getData("Cash.img");
+        consumeStringData = stringData.getData("Consume.img");
+        eqpStringData = stringData.getData("Eqp.img");
+        etcStringData = stringData.getData("Etc.img");
+        insStringData = stringData.getData("Ins.img");
+        petStringData = stringData.getData("Pet.img");
+        
+        isQuestItemCache.put(0, false);
+        isPartyQuestItemCache.put(0, false);
+    }
+
+//    public MapleInventoryType getInventoryType(int itemId) {
+//        if (inventoryTypeCache.containsKey(itemId)) {
+//            return inventoryTypeCache.get(itemId);
+//        }
+//        MapleInventoryType ret;
+//        String idStr = "0" + String.valueOf(itemId);
+//        MapleDataDirectoryEntry root = itemData.getRoot();
+//        for (MapleDataDirectoryEntry topDir : root.getSubdirectories()) {
+//            for (MapleDataFileEntry iFile : topDir.getFiles()) {
+//                if (iFile.getName().equals(idStr.substring(0, 4) + ".img")) {
+//                    ret = MapleInventoryType.getByWZName(topDir.getName());
+//                    inventoryTypeCache.put(itemId, ret);
+//                    return ret;
+//                } else if (iFile.getName().equals(idStr.substring(1) + ".img")) {
+//                    ret = MapleInventoryType.getByWZName(topDir.getName());
+//                    inventoryTypeCache.put(itemId, ret);
+//                    return ret;
+//                }
+//            }
+//        }
+//        root = equipData.getRoot();
+//        for (MapleDataDirectoryEntry topDir : root.getSubdirectories()) {
+//            for (MapleDataFileEntry iFile : topDir.getFiles()) {
+//                if (iFile.getName().equals(idStr + ".img")) {
+//                    ret = MapleInventoryType.EQUIP;
+//                    inventoryTypeCache.put(itemId, ret);
+//                    return ret;
+//                }
+//            }
+//        }
+//        ret = MapleInventoryType.UNDEFINED;
+//        inventoryTypeCache.put(itemId, ret);
+//        return ret;
+//    }
+
+    public List<Pair<Integer, String>> getAllItems() {
+        if (!itemNameCache.isEmpty()) {
+            return itemNameCache;
+        }
+        List<Pair<Integer, String>> itemPairs = new ArrayList<>();
+        MapleData itemsData;
+        itemsData = stringData.getData("Cash.img");
+        for (MapleData itemFolder : itemsData.getChildren()) {
+            itemPairs.add(new Pair<>(Integer.parseInt(itemFolder.getName()), MapleDataTool.getString("name", itemFolder, "NO-NAME")));
+        }
+        itemsData = stringData.getData("Consume.img");
+        for (MapleData itemFolder : itemsData.getChildren()) {
+            itemPairs.add(new Pair<>(Integer.parseInt(itemFolder.getName()), MapleDataTool.getString("name", itemFolder, "NO-NAME")));
+        }
+        itemsData = stringData.getData("Eqp.img").getChildByPath("Eqp");
+        for (MapleData eqpType : itemsData.getChildren()) {
+            for (MapleData itemFolder : eqpType.getChildren()) {
+                itemPairs.add(new Pair<>(Integer.parseInt(itemFolder.getName()), MapleDataTool.getString("name", itemFolder, "NO-NAME")));
+            }
+        }
+        itemsData = stringData.getData("Etc.img").getChildByPath("Etc");
+        for (MapleData itemFolder : itemsData.getChildren()) {
+            itemPairs.add(new Pair<>(Integer.parseInt(itemFolder.getName()), MapleDataTool.getString("name", itemFolder, "NO-NAME")));
+        }
+        itemsData = stringData.getData("Ins.img");
+        for (MapleData itemFolder : itemsData.getChildren()) {
+            itemPairs.add(new Pair<>(Integer.parseInt(itemFolder.getName()), MapleDataTool.getString("name", itemFolder, "NO-NAME")));
+        }
+        itemsData = stringData.getData("Pet.img");
+        for (MapleData itemFolder : itemsData.getChildren()) {
+            itemPairs.add(new Pair<>(Integer.parseInt(itemFolder.getName()), MapleDataTool.getString("name", itemFolder, "NO-NAME")));
+        }
+        return itemPairs;
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/tools/HexTool.java b/tools/SpiderDropFetcher/src/tools/HexTool.java
new file mode 100644
index 000000000..428baf311
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/HexTool.java
@@ -0,0 +1,87 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools;
+
+import java.io.ByteArrayOutputStream;
+
+public class HexTool {
+    private static final char[] HEX = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
+
+    private static String toString(byte byteValue) {
+        int tmp = byteValue << 8;
+        char[] retstr = new char[]{HEX[(tmp >> 12) & 0x0F], HEX[(tmp >> 8) & 0x0F]};
+        return String.valueOf(retstr);
+    }
+
+    public static String toString(byte[] bytes) {
+        StringBuilder hexed = new StringBuilder();
+        for (int i = 0; i < bytes.length; i++) {
+            hexed.append(toString(bytes[i]));
+            hexed.append(' ');
+        }
+        return hexed.substring(0, hexed.length() - 1);
+    }
+    
+    public static String toCompressedString(byte[] bytes) {
+        StringBuilder hexed = new StringBuilder();
+        for (int i = 0; i < bytes.length; i++) {
+            hexed.append(toString(bytes[i]));
+        }
+        return hexed.substring(0, hexed.length());
+    }
+
+    public static byte[] getByteArrayFromHexString(String hex) {
+        ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        int nexti = 0;
+        int nextb = 0;
+        boolean highoc = true;
+        outer:
+        for (;;) {
+            int number = -1;
+            while (number == -1) {
+                if (nexti == hex.length()) {
+                    break outer;
+                }
+                char chr = hex.charAt(nexti);
+                if (chr >= '0' && chr <= '9') {
+                    number = chr - '0';
+                } else if (chr >= 'a' && chr <= 'f') {
+                    number = chr - 'a' + 10;
+                } else if (chr >= 'A' && chr <= 'F') {
+                    number = chr - 'A' + 10;
+                } else {
+                    number = -1;
+                }
+                nexti++;
+            }
+            if (highoc) {
+                nextb = number << 4;
+                highoc = false;
+            } else {
+                nextb |= number;
+                highoc = true;
+                baos.write(nextb);
+            }
+        }
+        return baos.toByteArray();
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/tools/Pair.java b/tools/SpiderDropFetcher/src/tools/Pair.java
new file mode 100644
index 000000000..2a9864ae5
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/Pair.java
@@ -0,0 +1,123 @@
+package tools;
+
+/*
+This file is part of the OdinMS Maple Story Server
+Copyright (C) 2008 ~ 2010 Patrick Huy <patrick.huy@frz.cc> 
+Matthias Butz <matze@odinms.de>
+Jan Christian Meyer <vimes@odinms.de>
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU Affero General Public License version 3
+as published by the Free Software Foundation. You may not use, modify
+or distribute this program under any other version of the
+GNU Affero General Public License.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU Affero General Public License for more details.
+
+You should have received a copy of the GNU Affero General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+
+/**
+ * Represents a pair of values.
+ * 
+ * @author Frz
+ * @since Revision 333
+ * @version 1.0
+ * 
+ * @param <E> The type of the left value.
+ * @param <F> The type of the right value.
+ */
+public class Pair<E, F> {
+
+    public E left;
+    public F right;
+
+    /**
+     * Class constructor - pairs two objects together.
+     *
+     * @param left The left object.
+     * @param right The right object.
+     */
+    public Pair(E left, F right) {
+        this.left = left;
+        this.right = right;
+    }
+
+    /**
+     * Gets the left value.
+     *
+     * @return The left value.
+     */
+    public E getLeft() {
+        return left;
+    }
+
+    /**
+     * Gets the right value.
+     *
+     * @return The right value.
+     */
+    public F getRight() {
+        return right;
+    }
+
+    /**
+     * Turns the pair into a string.
+     *
+     * @return Each value of the pair as a string joined by a colon.
+     */
+    @Override
+    public String toString() {
+        return left.toString() + ":" + right.toString();
+    }
+
+    /**
+     * Gets the hash code of this pair.
+     */
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int result = 1;
+        result = prime * result + ((left == null) ? 0 : left.hashCode());
+        result = prime * result + ((right == null) ? 0 : right.hashCode());
+        return result;
+    }
+
+    /**
+     * Checks to see if two pairs are equal.
+     */
+    @SuppressWarnings("unchecked")
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        final Pair other = (Pair) obj;
+        if (left == null) {
+            if (other.left != null) {
+                return false;
+            }
+        } else if (!left.equals(other.left)) {
+            return false;
+        }
+        if (right == null) {
+            if (other.right != null) {
+                return false;
+            }
+        } else if (!right.equals(other.right)) {
+            return false;
+        }
+        return true;
+    }
+}
\ No newline at end of file
diff --git a/tools/SpiderDropFetcher/src/tools/data/input/ByteArrayByteStream.java b/tools/SpiderDropFetcher/src/tools/data/input/ByteArrayByteStream.java
new file mode 100644
index 000000000..eac7de21e
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/input/ByteArrayByteStream.java
@@ -0,0 +1,72 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.input;
+
+import java.io.IOException;
+import tools.HexTool;
+
+public class ByteArrayByteStream implements SeekableInputStreamBytestream {
+    private int pos = 0;
+    private long bytesRead = 0;
+    private byte[] arr;
+
+    public ByteArrayByteStream(byte[] arr) {
+        this.arr = arr;
+    }
+
+    @Override
+    public long getPosition() {
+        return pos;
+    }
+
+    @Override
+    public void seek(long offset) throws IOException {
+        pos = (int) offset;
+    }
+
+    @Override
+    public long getBytesRead() {
+        return bytesRead;
+    }
+
+    @Override
+    public int readByte() {
+        bytesRead++;
+        return ((int) arr[pos++]) & 0xFF;
+    }
+
+    @Override
+    public String toString() {
+        String nows = "kevintjuh93 pwns";//I lol'd
+        if (arr.length - pos > 0) {
+            byte[] now = new byte[arr.length - pos];
+            System.arraycopy(arr, pos, now, 0, arr.length - pos);
+            nows = HexTool.toString(now);
+        }
+        return "All: " + HexTool.toString(arr) + "\nNow: " + nows;
+    }
+  
+    @Override
+    public long available() {
+        return arr.length - pos;
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/input/ByteInputStream.java b/tools/SpiderDropFetcher/src/tools/data/input/ByteInputStream.java
new file mode 100644
index 000000000..107f71843
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/input/ByteInputStream.java
@@ -0,0 +1,35 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.input;
+
+/**
+ * Represents an abstract stream of bytes.
+ * 
+ * @author Frz
+ * @version 1.0
+ * @since Revision 323
+ */
+public interface ByteInputStream {
+    int readByte();
+    long getBytesRead();
+    long available();
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/input/GenericLittleEndianAccessor.java b/tools/SpiderDropFetcher/src/tools/data/input/GenericLittleEndianAccessor.java
new file mode 100644
index 000000000..d08a9b837
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/input/GenericLittleEndianAccessor.java
@@ -0,0 +1,239 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.input;
+
+import java.awt.Point;
+import java.io.ByteArrayOutputStream;
+
+/**
+ * Provides a generic interface to a Little Endian stream of bytes.
+ *
+ * @version 1.0
+ * @author Frz
+ * @since Revision 323
+ */
+public class GenericLittleEndianAccessor implements LittleEndianAccessor {
+    private ByteInputStream bs;
+
+    /**
+     * Class constructor - Wraps the accessor around a stream of bytes.
+     *
+     * @param bs The byte stream to wrap the accessor around.
+     */
+    public GenericLittleEndianAccessor(ByteInputStream bs) {
+        this.bs = bs;
+    }
+
+    /**
+     * Read a single byte from the stream.
+     *
+     * @return The byte read.
+     * @see tools.data.input.ByteInputStream#readByte
+     */
+    @Override
+    public byte readByte() {
+        return (byte) bs.readByte();
+    }
+
+    /**
+     * Reads an integer from the stream.
+     *
+     * @return The integer read.
+     */
+    @Override
+    public int readInt() {
+        return bs.readByte() + (bs.readByte() << 8) + (bs.readByte() << 16) + (bs.readByte() << 24);
+    }
+
+    /**
+     * Reads a short integer from the stream.
+     *
+     * @return The short read.
+     */
+    @Override
+    public short readShort() {
+        return (short) (bs.readByte() + (bs.readByte() << 8));
+    }
+
+    /**
+     * Reads a single character from the stream.
+     *
+     * @return The character read.
+     */
+    @Override
+    public char readChar() {
+        return (char) readShort();
+    }
+
+    /**
+     * Reads a long integer from the stream.
+     *
+     * @return The long integer read.
+     */
+    @Override
+    public long readLong() {
+        long byte1 = bs.readByte();
+        long byte2 = bs.readByte();
+        long byte3 = bs.readByte();
+        long byte4 = bs.readByte();
+        long byte5 = bs.readByte();
+        long byte6 = bs.readByte();
+        long byte7 = bs.readByte();
+        long byte8 = bs.readByte();
+        return (byte8 << 56) + (byte7 << 48) + (byte6 << 40) + (byte5 << 32) + (byte4 << 24) + (byte3 << 16) + (byte2 << 8) + byte1;
+    }
+
+    /**
+     * Reads a floating point integer from the stream.
+     *
+     * @return The float-type integer read.
+     */
+    @Override
+    public float readFloat() {
+        return Float.intBitsToFloat(readInt());
+    }
+
+    /**
+     * Reads a double-precision integer from the stream.
+     *
+     * @return The double-type integer read.
+     */
+    @Override
+    public double readDouble() {
+        return Double.longBitsToDouble(readLong());
+    }
+
+    /**
+     * Reads an ASCII string from the stream with length <code>n</code>.
+     *
+     * @param n Number of characters to read.
+     * @return The string read.
+     */
+    public final String readAsciiString(int n) {
+        char ret[] = new char[n];
+        for (int x = 0; x < n; x++) {
+            ret[x] = (char) readByte();
+        }
+        return String.valueOf(ret);
+    }
+
+    /**
+     * Reads a null-terminated string from the stream.
+     *
+     * @return The string read.
+     */
+    public final String readNullTerminatedAsciiString() {
+        ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        byte b;
+        while (true) {
+            b = readByte();
+            if (b == 0) {
+                break;
+            }
+            baos.write(b);
+        }
+        byte[] buf = baos.toByteArray();
+        char[] chrBuf = new char[buf.length];
+        for (int x = 0; x < buf.length; x++) {
+            chrBuf[x] = (char) buf[x];
+        }
+        return String.valueOf(chrBuf);
+    }
+
+    /**
+     * Gets the number of bytes read from the stream so far.
+     *
+     * @return A long integer representing the number of bytes read.
+     * @see tools.data.input.ByteInputStream#getBytesRead()
+     */
+    public long getBytesRead() {
+        return bs.getBytesRead();
+    }
+
+    /**
+     * Reads a MapleStory convention lengthed ASCII string.
+     * This consists of a short integer telling the length of the string,
+     * then the string itself.
+     *
+     * @return The string read.
+     */
+    @Override
+    public String readMapleAsciiString() {
+        return readAsciiString(readShort());
+    }
+
+    /**
+     * Reads <code>num</code> bytes off the stream.
+     *
+     * @param num The number of bytes to read.
+     * @return An array of bytes with the length of <code>num</code>
+     */
+    @Override
+    public byte[] read(int num) {
+        byte[] ret = new byte[num];
+        for (int x = 0; x < num; x++) {
+            ret[x] = readByte();
+        }
+        return ret;
+    }
+
+    /**
+     * Reads a MapleStory Position information.
+     * This consists of 2 short integer.
+     *
+     * @return The Position read.
+     */
+    @Override
+    public final Point readPos() {
+	final int x = readShort();
+	final int y = readShort();
+	return new Point(x, y);
+    }
+
+    /**
+     * Skips the current position of the stream <code>num</code> bytes ahead.
+     *
+     * @param num Number of bytes to skip.
+     */
+    @Override
+    public void skip(int num) {
+        for (int x = 0; x < num; x++) {
+            readByte();
+        }
+    }
+
+    /**
+     * @see tools.data.input.ByteInputStream#available
+     */
+    @Override
+    public long available() {
+        return bs.available();
+    }
+
+    /**
+     * @see java.lang.Object#toString
+     */
+    @Override
+    public String toString() {
+        return bs.toString();
+    }
+}
\ No newline at end of file
diff --git a/tools/SpiderDropFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java b/tools/SpiderDropFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java
new file mode 100644
index 000000000..fdd147d79
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/input/GenericSeekableLittleEndianAccessor.java
@@ -0,0 +1,91 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.input;
+
+import java.io.IOException;
+
+/**
+ * Provides an abstract accessor to a generic Little Endian byte stream. This
+ * accessor is seekable.
+ * 
+ * @author Frz
+ * @version 1.0
+ * @since Revision 323
+ * @see tools.data.input.GenericLittleEndianAccessor
+ */
+public class GenericSeekableLittleEndianAccessor extends GenericLittleEndianAccessor implements SeekableLittleEndianAccessor {
+    private SeekableInputStreamBytestream bs;
+
+    /**
+     * Class constructor
+     * Provide a seekable input stream to wrap this object around.
+     *
+     * @param bs The byte stream to wrap this around.
+     */
+    public GenericSeekableLittleEndianAccessor(SeekableInputStreamBytestream bs) {
+        super(bs);
+        this.bs = bs;
+    }
+
+    /**
+     * Seek the pointer to <code>offset</code>
+     *
+     * @param offset The offset to seek to.
+     * @see tools.data.input.SeekableInputStreamBytestream#seek
+     */
+    @Override
+    public void seek(long offset) {
+        try {
+            bs.seek(offset);
+        } catch (IOException e) {
+            e.printStackTrace();
+            System.out.println("Seek failed " + e);
+        }
+    }
+
+    /**
+     * Get the current position of the pointer.
+     *
+     * @return The current position of the pointer as a long integer.
+     * @see tools.data.input.SeekableInputStreamBytestream#getPosition
+     */
+    @Override
+    public long getPosition() {
+        try {
+            return bs.getPosition();
+        } catch (IOException e) {
+            e.printStackTrace();
+            System.out.println("getPosition failed" + e);
+            return -1;
+        }
+    }
+
+    /**
+     * Skip <code>num</code> number of bytes in the stream.
+     *
+     * @param num The number of bytes to skip.
+     */
+    @Override
+    public void skip(int num) {
+        seek(getPosition() + num);
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/input/InputStreamByteStream.java b/tools/SpiderDropFetcher/src/tools/data/input/InputStreamByteStream.java
new file mode 100644
index 000000000..70aef3489
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/input/InputStreamByteStream.java
@@ -0,0 +1,93 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.input;
+
+import java.io.IOException;
+import java.io.InputStream;
+
+/**
+ * Provides an abstract wrapper to a stream of bytes.
+ * 
+ * @author Frz
+ * @version 1.0
+ * @since Revision 323
+ */
+public class InputStreamByteStream implements ByteInputStream {
+    private InputStream is;
+    private long read = 0;
+
+    /**
+     * Class constructor.
+     * Provide an input stream to wrap this around.
+     *
+     * @param is The input stream to wrap this object around.
+     */
+    public InputStreamByteStream(InputStream is) {
+        this.is = is;
+    }
+
+    /**
+     * Reads the next byte from the stream.
+     *
+     * @return Then next byte in the stream.
+     */
+    @Override
+    public int readByte() {
+        int temp;
+        try {
+            temp = is.read();
+            if (temp == -1) {
+                throw new RuntimeException("EOF");
+            }
+            read++;
+            return temp;
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+    }
+
+    /**
+     * Gets the number of bytes read from the stream.
+     *
+     * @return The number of bytes read as a long integer.
+     */
+    @Override
+    public long getBytesRead() {
+        return read;
+    }
+
+    /**
+     * Returns the number of bytes left in the stream.
+     *
+     * @return The number of bytes available for reading as a long integer.
+     */
+    @Override
+    public long available() {
+        try {
+            return is.available();
+        } catch (IOException e) {
+            e.printStackTrace();
+            System.out.println("ERROR" + e);
+            return 0;
+        }
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/input/LittleEndianAccessor.java b/tools/SpiderDropFetcher/src/tools/data/input/LittleEndianAccessor.java
new file mode 100644
index 000000000..f991dbf53
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/input/LittleEndianAccessor.java
@@ -0,0 +1,45 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.input;
+
+import java.awt.Point;
+
+/**
+ * @author Frz
+ */
+public interface LittleEndianAccessor {
+    byte readByte();
+    char readChar();
+    short readShort();
+    int readInt();
+    Point readPos();
+    long readLong();
+    void skip(int num);
+    byte[] read(int num);
+    float readFloat();
+    double readDouble();
+    String readAsciiString(int n);
+    String readNullTerminatedAsciiString();
+    String readMapleAsciiString();
+    long getBytesRead();
+    long available();
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/input/RandomAccessByteStream.java b/tools/SpiderDropFetcher/src/tools/data/input/RandomAccessByteStream.java
new file mode 100644
index 000000000..c0004be17
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/input/RandomAccessByteStream.java
@@ -0,0 +1,84 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.input;
+
+import java.io.IOException;
+import java.io.RandomAccessFile;
+
+/**
+ * Provides an abstract layer to a byte stream. This layer can be accessed
+ * randomly.
+ * 
+ * @author Frz
+ * @version 1.0
+ * @since Revision 323
+ */
+public class RandomAccessByteStream implements SeekableInputStreamBytestream {
+    private RandomAccessFile raf;
+    private long read = 0;
+
+    public RandomAccessByteStream(RandomAccessFile raf) {
+        super();
+        this.raf = raf;
+    }
+
+    @Override
+    public int readByte() {
+        int temp;
+        try {
+            temp = raf.read();
+            if (temp == -1) {
+                throw new RuntimeException("EOF");
+            }
+            read++;
+            return temp;
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+    }
+
+    @Override
+    public void seek(long offset) throws IOException {
+        raf.seek(offset);
+    }
+
+    @Override
+    public long getPosition() throws IOException {
+        return raf.getFilePointer();
+    }
+
+    @Override
+    public long getBytesRead() {
+        return read;
+    }
+
+    @Override
+    public long available() {
+        try {
+            return raf.length() - raf.getFilePointer();
+        } catch (IOException e) {
+            e.printStackTrace();
+            System.out.println("ERROR " + e);
+            return 0;
+        }
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/input/SeekableInputStreamBytestream.java b/tools/SpiderDropFetcher/src/tools/data/input/SeekableInputStreamBytestream.java
new file mode 100644
index 000000000..f4922dc87
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/input/SeekableInputStreamBytestream.java
@@ -0,0 +1,51 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.input;
+
+import java.io.IOException;
+
+/**
+ * Provides an abstract interface to a stream of bytes. This stream can be
+ * seeked.
+ * 
+ * @author Frz
+ * @version 1.0
+ * @since 299
+ */
+public interface SeekableInputStreamBytestream extends ByteInputStream {
+    /**
+     * Seeks the stream by the specified offset.
+     *
+     * @param offset
+     *            Number of bytes to seek.
+     * @throws IOException
+     */
+    void seek(long offset) throws IOException;
+
+    /**
+     * Gets the current position of the stream.
+     *
+     * @return The stream position as a long integer.
+     * @throws IOException
+     */
+    long getPosition() throws IOException;
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java b/tools/SpiderDropFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java
new file mode 100644
index 000000000..16b2317f7
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/input/SeekableLittleEndianAccessor.java
@@ -0,0 +1,27 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.input;
+
+public interface SeekableLittleEndianAccessor extends LittleEndianAccessor {
+    void seek(long offset);
+    long getPosition();
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/output/BAOSByteOutputStream.java b/tools/SpiderDropFetcher/src/tools/data/output/BAOSByteOutputStream.java
new file mode 100644
index 000000000..80cbc9301
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/output/BAOSByteOutputStream.java
@@ -0,0 +1,56 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.output;
+
+import java.io.ByteArrayOutputStream;
+
+/**
+ * Uses a byte array to output a stream of bytes.
+ * 
+ * @author Frz
+ * @version 1.0
+ * @since Revision 352
+ */
+class BAOSByteOutputStream implements ByteOutputStream {
+    private ByteArrayOutputStream baos;
+
+    /**
+     * Class constructor - Wraps the stream around a Java BAOS.
+     *
+     * @param baos <code>The ByteArrayOutputStream</code> to wrap this around.
+     */
+    BAOSByteOutputStream(ByteArrayOutputStream baos) {
+        super();
+        this.baos = baos;
+    }
+
+    /**
+     * Writes a byte to the stream.
+     *
+     * @param b The byte to write to the stream.
+     * @see tools.data.output.ByteOutputStream#writeByte(byte)
+     */
+    @Override
+    public void writeByte(byte b) {
+        baos.write(b);
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/output/ByteOutputStream.java b/tools/SpiderDropFetcher/src/tools/data/output/ByteOutputStream.java
new file mode 100644
index 000000000..0df7ca775
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/output/ByteOutputStream.java
@@ -0,0 +1,38 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.output;
+
+/**
+ * Provides an interface to an output stream of bytes.
+ * 
+ * @author Frz
+ * @since Revision 323
+ * @version 1.0
+ */
+interface ByteOutputStream {
+    /**
+     * Writes a byte to the stream.
+     *
+     * @param b The byte to write.
+     */
+    void writeByte(byte b);
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/output/GenericLittleEndianWriter.java b/tools/SpiderDropFetcher/src/tools/data/output/GenericLittleEndianWriter.java
new file mode 100644
index 000000000..91779e4d5
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/output/GenericLittleEndianWriter.java
@@ -0,0 +1,184 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.output;
+
+import java.awt.Point;
+import java.nio.charset.Charset;
+import constants.CharsetConstants.MapleLanguageType;
+
+/**
+ * Provides a generic writer of a little-endian sequence of bytes.
+ * 
+ * @author Frz
+ * @version 1.0
+ * @since Revision 323
+ */
+public class GenericLittleEndianWriter implements LittleEndianWriter {
+    private static Charset ASCII = Charset.forName(MapleLanguageType.LANGUAGE_US.getAscii());
+    private ByteOutputStream bos;
+
+    /**
+     * Class constructor - Protected to prevent instantiation with no arguments.
+     */
+    protected GenericLittleEndianWriter() {
+        // Blah!
+    }
+
+    /**
+     * Sets the byte-output stream for this instance of the object.
+     *
+     * @param bos The new output stream to set.
+     */
+    void setByteOutputStream(ByteOutputStream bos) {
+        this.bos = bos;
+    }
+
+    /**
+     * Write an array of bytes to the stream.
+     *
+     * @param b The bytes to write.
+     */
+    @Override
+    public void write(byte[] b) {
+        for (int x = 0; x < b.length; x++) {
+            bos.writeByte(b[x]);
+        }
+    }
+
+    /**
+     * Write a byte to the stream.
+     *
+     * @param b The byte to write.
+     */
+    @Override
+    public void write(byte b) {
+        bos.writeByte(b);
+    }
+
+    /**
+     * Write a byte in integer form to the stream.
+     *
+     * @param b The byte as an <code>Integer</code> to write.
+     */
+    @Override
+    public void write(int b) {
+        bos.writeByte((byte) b);
+    }
+
+    @Override
+    public void skip(int b) {
+        write(new byte[b]);
+    }
+
+    /**
+     * Write a short integer to the stream.
+     *
+     * @param i The short integer to write.
+     */
+    @Override
+    public void writeShort(int i) {
+        bos.writeByte((byte) (i & 0xFF));
+        bos.writeByte((byte) ((i >>> 8) & 0xFF));
+    }
+    
+    /**
+     * Writes an integer to the stream.
+     *
+     * @param i The integer to write.
+     */
+    @Override
+    public void writeInt(int i) {
+        bos.writeByte((byte) (i & 0xFF));
+        bos.writeByte((byte) ((i >>> 8) & 0xFF));
+        bos.writeByte((byte) ((i >>> 16) & 0xFF));
+        bos.writeByte((byte) ((i >>> 24) & 0xFF));
+    }
+
+    /**
+     * Writes an ASCII string the the stream.
+     *
+     * @param s The ASCII string to write.
+     */
+    @Override
+    public void writeAsciiString(String s) {
+        write(s.getBytes(ASCII));
+    }
+
+    /**
+     * Writes a maple-convention ASCII string to the stream.
+     *
+     * @param s The ASCII string to use maple-convention to write.
+     */
+    @Override
+    public void writeMapleAsciiString(String s) {
+        writeShort((short) s.length());
+        writeAsciiString(s);
+    }
+
+    /**
+     * Writes a null-terminated ASCII string to the stream.
+     *
+     * @param s The ASCII string to write.
+     */
+    @Override
+    public void writeNullTerminatedAsciiString(String s) {
+        writeAsciiString(s);
+        write(0);
+    }
+
+    /**
+     * Write a long integer to the stream.
+     * @param l The long integer to write.
+     */
+    @Override
+    public void writeLong(long l) {
+        bos.writeByte((byte) (l & 0xFF));
+        bos.writeByte((byte) ((l >>> 8) & 0xFF));
+        bos.writeByte((byte) ((l >>> 16) & 0xFF));
+        bos.writeByte((byte) ((l >>> 24) & 0xFF));
+        bos.writeByte((byte) ((l >>> 32) & 0xFF));
+        bos.writeByte((byte) ((l >>> 40) & 0xFF));
+        bos.writeByte((byte) ((l >>> 48) & 0xFF));
+        bos.writeByte((byte) ((l >>> 56) & 0xFF));
+    }
+
+    /**
+     * Writes a 2D 4 byte position information
+     *
+     * @param s The Point position to write.
+     */
+    @Override
+    public void writePos(Point s) {
+        writeShort(s.x);
+        writeShort(s.y);
+    }
+
+    /**
+     * Writes a boolean true ? 1 : 0
+     *
+     * @param b The boolean to write.
+     */
+    @Override
+    public void writeBool(final boolean b) {
+        write(b ? 1 : 0);
+    }
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/output/LittleEndianWriter.java b/tools/SpiderDropFetcher/src/tools/data/output/LittleEndianWriter.java
new file mode 100644
index 000000000..f17bd7c72
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/output/LittleEndianWriter.java
@@ -0,0 +1,114 @@
+/*
+ This file is part of the OdinMS Maple Story Server
+ Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+ Matthias Butz <matze@odinms.de>
+ Jan Christian Meyer <vimes@odinms.de>
+
+ This program is free software: you can redistribute it and/or modify
+ it under the terms of the GNU Affero General Public License as
+ published by the Free Software Foundation version 3 as published by
+ the Free Software Foundation. You may not use, modify or distribute
+ this program under any other version of the GNU Affero General Public
+ License.
+
+ This program is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU Affero General Public License for more details.
+
+ You should have received a copy of the GNU Affero General Public License
+ along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+package tools.data.output;
+
+import java.awt.Point;
+
+/**
+ * Provides an interface to a writer class that writes a little-endian sequence
+ * of bytes.
+ *
+ * @author Frz
+ * @version 1.0
+ * @since Revision 323
+ */
+public interface LittleEndianWriter {
+
+    /**
+     * Write an array of bytes to the sequence.
+     *
+     * @param b The bytes to write.
+     */
+    public void write(byte b[]);
+
+    /**
+     * Write a byte to the sequence.
+     *
+     * @param b The byte to write.
+     */
+    public void write(byte b);
+
+    /**
+     * Write a byte in integer form to the sequence.
+     *
+     * @param b The byte as an <code>Integer</code> to write.
+     */
+    public void write(int b);
+
+    public void skip(int b);
+
+    /**
+     * Writes an integer to the sequence.
+     *
+     * @param i The integer to write.
+     */
+    public void writeInt(int i);
+
+    /**
+     * Write a short integer to the sequence.
+     *
+     * @param s The short integer to write.
+     */
+    public void writeShort(int s);
+
+    /**
+     * Write a long integer to the sequence.
+     *
+     * @param l The long integer to write.
+     */
+    public void writeLong(long l);
+
+    /**
+     * Writes an ASCII string the the sequence.
+     *
+     * @param s The ASCII string to write.
+     */
+    void writeAsciiString(String s);
+
+    /**
+     * Writes a null-terminated ASCII string to the sequence.
+     *
+     * @param s The ASCII string to write.
+     */
+    void writeNullTerminatedAsciiString(String s);
+
+    /**
+     * Writes a maple-convention ASCII string to the sequence.
+     *
+     * @param s The ASCII string to use maple-convention to write.
+     */
+    void writeMapleAsciiString(String s);
+
+    /**
+     * Writes a 2D 4 byte position information
+     *
+     * @param s The Point position to write.
+     */
+    void writePos(Point s);
+
+    /**
+     * Writes a boolean true ? 1 : 0
+     *
+     * @param b The boolean to write.
+     */
+    void writeBool(final boolean b);
+}
diff --git a/tools/SpiderDropFetcher/src/tools/data/output/MaplePacketLittleEndianWriter.java b/tools/SpiderDropFetcher/src/tools/data/output/MaplePacketLittleEndianWriter.java
new file mode 100644
index 000000000..b02365ec6
--- /dev/null
+++ b/tools/SpiderDropFetcher/src/tools/data/output/MaplePacketLittleEndianWriter.java
@@ -0,0 +1,73 @@
+/*
+	This file is part of the OdinMS Maple Story Server
+    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
+		       Matthias Butz <matze@odinms.de>
+		       Jan Christian Meyer <vimes@odinms.de>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Affero General Public License as
+    published by the Free Software Foundation version 3 as published by
+    the Free Software Foundation. You may not use, modify or distribute
+    this program under any other version of the GNU Affero General Public
+    License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Affero General Public License for more details.
+
+    You should have received a copy of the GNU Affero General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+package tools.data.output;
+
+import java.io.ByteArrayOutputStream;
+import tools.HexTool;
+
+/**
+ * Writes a maplestory-packet little-endian stream of bytes.
+ * 
+ * @author Frz
+ * @version 1.0
+ * @since Revision 352
+ */
+public class MaplePacketLittleEndianWriter extends GenericLittleEndianWriter {
+    private ByteArrayOutputStream baos;
+
+    /**
+     * Constructor - initializes this stream with a default size.
+     */
+    public MaplePacketLittleEndianWriter() {
+        this(32);
+    }
+
+    /**
+     * Constructor - initializes this stream with size <code>size</code>.
+     *
+     * @param size The size of the underlying stream.
+     */
+    public MaplePacketLittleEndianWriter(int size) {
+        this.baos = new ByteArrayOutputStream(size);
+        setByteOutputStream(new BAOSByteOutputStream(baos));
+    }
+
+    /**
+     * Gets a <code>MaplePacket</code> instance representing this
+     * sequence of bytes.
+     *
+     * @return A <code>MaplePacket</code> with the bytes in this stream.
+     */
+    public byte[] getPacket() {
+        return baos.toByteArray();
+    }
+
+    /**
+     * Changes this packet into a human-readable hexadecimal stream of bytes.
+     *
+     * @return This packet as hex digits.
+     */
+    @Override
+    public String toString() {
+        return HexTool.toString(baos.toByteArray());
+    }
+}
diff --git a/wz/Item.wz/Etc/0403.img.xml b/wz/Item.wz/Etc/0403.img.xml
index 124dfea55..26e792d2b 100644
--- a/wz/Item.wz/Etc/0403.img.xml
+++ b/wz/Item.wz/Etc/0403.img.xml
@@ -9757,7 +9757,6 @@
       </canvas>
       <int name="price" value="1"/>
       <int name="tradeBlock" value="1"/>
-      <int name="slotMax" value="1"/>
       <int name="notSale" value="1"/>
     </imgdir>
   </imgdir>
@@ -10642,6 +10641,7 @@
       </canvas>
       <int name="price" value="1"/>
       <string name="tradeBlock" value="1"/>
+      <int name="notSale" value="1"/>
     </imgdir>
   </imgdir>
   <imgdir name="04032014">
diff --git a/wz/Map.wz/Map/Map1/105100100.img.xml b/wz/Map.wz/Map/Map1/105100100.img.xml
index c5d776793..2d66854a7 100644
--- a/wz/Map.wz/Map/Map1/105100100.img.xml
+++ b/wz/Map.wz/Map/Map1/105100100.img.xml
@@ -2435,7 +2435,7 @@
       <int name="y" value="-458"/>
       <int name="tm" value="999999999"/>
       <string name="tn" value=""/>
-      <string name="script" value="OutPerrion_2"/>
+      <string name="script" value="outPerrion_2"/>
       <int name="hideTooltip" value="0"/>
       <int name="onlyOnce" value="1"/>
       <int name="delay" value="0"/>
@@ -2447,7 +2447,7 @@
       <int name="y" value="-462"/>
       <int name="tm" value="999999999"/>
       <string name="tn" value=""/>
-      <string name="script" value="OutPerrion_2"/>
+      <string name="script" value="outPerrion_2"/>
       <int name="hideTooltip" value="0"/>
       <int name="onlyOnce" value="1"/>
       <int name="delay" value="0"/>
@@ -2465,13 +2465,13 @@
       <int name="delay" value="0"/>
     </imgdir>
     <imgdir name="6">
-      <string name="pn" value="OutPerrion"/>
+      <string name="pn" value="outPerrion"/>
       <int name="pt" value="7"/>
       <int name="x" value="-691"/>
       <int name="y" value="246"/>
       <int name="tm" value="999999999"/>
       <string name="tn" value=""/>
-      <string name="script" value="OutPerrion_1"/>
+      <string name="script" value="outPerrion_1"/>
       <int name="hideTooltip" value="0"/>
       <int name="onlyOnce" value="0"/>
       <int name="delay" value="0"/>
diff --git a/wz/Map.wz/Map/Map1/130000000.img.xml b/wz/Map.wz/Map/Map1/130000000.img.xml
index 448208c85..8a93ebf9f 100644
--- a/wz/Map.wz/Map/Map1/130000000.img.xml
+++ b/wz/Map.wz/Map/Map1/130000000.img.xml
@@ -1,2910 +1,2706 @@
 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
 <imgdir name="130000000.img">
   <imgdir name="info">
-    <int name="version" value="10"/>
+    <string name="bgm" value="Bgm18/QueensGarden"/>
     <int name="cloud" value="0"/>
-    <int name="town" value="1"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="130000000"/>
     <int name="forcedReturn" value="130000000"/>
-    <float name="mobRate" value="1.0"/>
-    <string name="bgm" value="Bgm18/QueensGarden"/>
-    <string name="mapMark" value="Ereb"/>
-    <int name="fly" value="0"/>
     <int name="hideMinimap" value="0"/>
+    <string name="mapMark" value="Ereb"/>
+    <float name="mobRate" value="1.0"/>
+    <int name="returnMap" value="130000000"/>
+    <int name="town" value="1"/>
+    <int name="version" value="10"/>
     <int name="fieldLimit" value="0"/>
-    <int name="VRTop" value="-690"/>
-    <int name="VRLeft" value="-1799"/>
-    <int name="VRBottom" value="265"/>
-    <int name="VRRight" value="1169"/>
     <string name="onFirstUserEnter" value=""/>
     <string name="onUserEnter" value="startEreb"/>
+    <int name="fly" value="0"/>
+    <int name="VRLeft" value="-1799"/>
+    <int name="VRRight" value="1169"/>
+    <int name="VRTop" value="-690"/>
+    <int name="VRBottom" value="265"/>
   </imgdir>
-  <imgdir name="back">
-    <imgdir name="0">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="0"/>
-      <int name="f" value="0"/>
-      <int name="x" value="0"/>
-      <int name="y" value="0"/>
-      <int name="rx" value="0"/>
-      <int name="ry" value="0"/>
-      <int name="type" value="3"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="1">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="1"/>
-      <int name="f" value="0"/>
-      <int name="x" value="97"/>
-      <int name="y" value="-453"/>
-      <int name="rx" value="0"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="2">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="2"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-268"/>
-      <int name="y" value="-478"/>
-      <int name="rx" value="-3"/>
-      <int name="ry" value="-50"/>
-      <int name="type" value="4"/>
-      <int name="cx" value="1200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="3">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="3"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-386"/>
-      <int name="y" value="-495"/>
-      <int name="rx" value="-5"/>
-      <int name="ry" value="-50"/>
-      <int name="type" value="4"/>
-      <int name="cx" value="1200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="4">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="4"/>
-      <int name="f" value="0"/>
-      <int name="x" value="250"/>
-      <int name="y" value="-404"/>
-      <int name="rx" value="-3"/>
-      <int name="ry" value="-50"/>
-      <int name="type" value="4"/>
-      <int name="cx" value="1200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="5">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="5"/>
-      <int name="f" value="0"/>
-      <int name="x" value="370"/>
-      <int name="y" value="-354"/>
-      <int name="rx" value="-4"/>
-      <int name="ry" value="-50"/>
-      <int name="type" value="4"/>
-      <int name="cx" value="1200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="6">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="6"/>
-      <int name="f" value="0"/>
-      <int name="x" value="23"/>
-      <int name="y" value="-348"/>
-      <int name="rx" value="-4"/>
-      <int name="ry" value="-50"/>
-      <int name="type" value="4"/>
-      <int name="cx" value="1200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="7">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="7"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-367"/>
-      <int name="y" value="-390"/>
-      <int name="rx" value="-3"/>
-      <int name="ry" value="-50"/>
-      <int name="type" value="4"/>
-      <int name="cx" value="1200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+  <imgdir name="miniMap">
+    <canvas name="canvas" width="191" height="78">
+    </canvas>
+    <int name="width" value="3068"/>
+    <int name="height" value="1257"/>
+    <int name="centerX" value="1848"/>
+    <int name="centerY" value="877"/>
+    <int name="mag" value="4"/>
+  </imgdir>
+  <imgdir name="0">
+    <imgdir name="info">
     </imgdir>
-    <imgdir name="8">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="8"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-278"/>
-      <int name="y" value="-347"/>
-      <int name="rx" value="-2"/>
-      <int name="ry" value="-50"/>
-      <int name="type" value="4"/>
-      <int name="cx" value="1200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+    <imgdir name="obj">
     </imgdir>
-    <imgdir name="9">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="9"/>
-      <int name="f" value="0"/>
-      <int name="x" value="143"/>
-      <int name="y" value="-312"/>
-      <int name="rx" value="-20"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+    <imgdir name="tile">
     </imgdir>
-    <imgdir name="10">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="10"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-1193"/>
-      <int name="y" value="-233"/>
-      <int name="rx" value="-30"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+  </imgdir>
+  <imgdir name="1">
+    <imgdir name="info">
     </imgdir>
-    <imgdir name="11">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="11"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-393"/>
-      <int name="y" value="-128"/>
-      <int name="rx" value="-30"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+    <imgdir name="obj">
     </imgdir>
-    <imgdir name="12">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="12"/>
-      <int name="f" value="0"/>
-      <int name="x" value="407"/>
-      <int name="y" value="-120"/>
-      <int name="rx" value="-30"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+    <imgdir name="tile">
     </imgdir>
-    <imgdir name="13">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="13"/>
-      <int name="f" value="0"/>
-      <int name="x" value="1207"/>
-      <int name="y" value="-128"/>
-      <int name="rx" value="-30"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="14">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="14"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-1149"/>
-      <int name="y" value="-66"/>
-      <int name="rx" value="-50"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="16">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="16"/>
-      <int name="f" value="0"/>
-      <int name="x" value="451"/>
-      <int name="y" value="-58"/>
-      <int name="rx" value="-50"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="17">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="17"/>
-      <int name="f" value="0"/>
-      <int name="x" value="1251"/>
-      <int name="y" value="-45"/>
-      <int name="rx" value="-50"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="15">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="15"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-349"/>
-      <int name="y" value="-76"/>
-      <int name="rx" value="-50"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="18">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="6"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-326"/>
-      <int name="y" value="-216"/>
-      <int name="rx" value="-50"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="20">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="6"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-2146"/>
-      <int name="y" value="-213"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="21">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="6"/>
-      <int name="f" value="0"/>
-      <int name="x" value="1048"/>
-      <int name="y" value="-196"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="22">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="18"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-1185"/>
-      <int name="y" value="-168"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="3200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="23">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="19"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-385"/>
-      <int name="y" value="-168"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="3200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="24">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="20"/>
-      <int name="f" value="0"/>
-      <int name="x" value="415"/>
-      <int name="y" value="-175"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="3200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="25">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="21"/>
-      <int name="f" value="0"/>
-      <int name="x" value="1215"/>
-      <int name="y" value="-168"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="3200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="26">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="0"/>
-      <int name="f" value="0"/>
-      <int name="x" value="173"/>
-      <int name="y" value="-161"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-30"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="3200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="27">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="1"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-144"/>
-      <int name="y" value="-228"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-30"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="3200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="28">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="2"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-762"/>
-      <int name="y" value="-298"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-30"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="3200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="19">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="6"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-1145"/>
-      <int name="y" value="-221"/>
-      <int name="rx" value="-50"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="29">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="3"/>
-      <int name="f" value="0"/>
-      <int name="x" value="656"/>
-      <int name="y" value="-245"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-30"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="3200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="30">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="4"/>
-      <int name="f" value="0"/>
-      <int name="x" value="279"/>
-      <int name="y" value="-273"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-30"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="3200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="31">
-      <string name="bS" value="ereb"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="5"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-1083"/>
-      <int name="y" value="-274"/>
-      <int name="rx" value="-60"/>
-      <int name="ry" value="-30"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="3200"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-  </imgdir>
-  <imgdir name="life">
-    <imgdir name="0">
-      <string name="type" value="n"/>
-      <string name="id" value="1101000"/>
-      <int name="x" value="509"/>
-      <int name="y" value="83"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="6"/>
-      <int name="cy" value="88"/>
-      <int name="rx0" value="459"/>
-      <int name="rx1" value="559"/>
-    </imgdir>
-    <imgdir name="1">
-      <string name="type" value="n"/>
-      <string name="id" value="1101002"/>
-      <int name="x" value="-15"/>
-      <int name="y" value="81"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="1"/>
-      <int name="cy" value="88"/>
-      <int name="rx0" value="-65"/>
-      <int name="rx1" value="35"/>
-    </imgdir>
-    <imgdir name="2">
-      <string name="type" value="n"/>
-      <string name="id" value="1101003"/>
-      <int name="x" value="-1045"/>
-      <int name="y" value="-115"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="44"/>
-      <int name="cy" value="-111"/>
-      <int name="rx0" value="-1095"/>
-      <int name="rx1" value="-995"/>
-    </imgdir>
-    <imgdir name="3">
-      <string name="type" value="n"/>
-      <string name="id" value="1101004"/>
-      <int name="x" value="-993"/>
-      <int name="y" value="78"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="28"/>
-      <int name="cy" value="88"/>
-      <int name="rx0" value="-1043"/>
-      <int name="rx1" value="-943"/>
-    </imgdir>
-    <imgdir name="4">
-      <string name="type" value="n"/>
-      <string name="id" value="1101005"/>
-      <int name="x" value="-1300"/>
-      <int name="y" value="81"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="1"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="15"/>
-      <int name="cy" value="88"/>
-      <int name="rx0" value="-1350"/>
-      <int name="rx1" value="-1250"/>
-    </imgdir>
-    <imgdir name="5">
-      <string name="type" value="n"/>
-      <string name="id" value="1101006"/>
-      <int name="x" value="-1486"/>
-      <int name="y" value="-190"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="1"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="100"/>
-      <int name="cy" value="-185"/>
-      <int name="rx0" value="-1536"/>
-      <int name="rx1" value="-1436"/>
-    </imgdir>
-    <imgdir name="6">
-      <string name="type" value="n"/>
-      <string name="id" value="1101007"/>
-      <int name="x" value="-1105"/>
-      <int name="y" value="21"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="55"/>
-      <int name="cy" value="25"/>
-      <int name="rx0" value="-1155"/>
-      <int name="rx1" value="-1055"/>
-    </imgdir>
-    <imgdir name="7">
-      <string name="type" value="n"/>
-      <string name="id" value="1101001"/>
-      <int name="x" value="384"/>
-      <int name="y" value="84"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="8"/>
-      <int name="cy" value="88"/>
-      <int name="rx0" value="334"/>
-      <int name="rx1" value="434"/>
-    </imgdir>
-  </imgdir>
-  <imgdir name="reactor">
-  </imgdir>
-  <imgdir name="0">
-    <imgdir name="info">
-    </imgdir>
-    <imgdir name="tile">
-    </imgdir>
-    <imgdir name="obj">
-    </imgdir>
-  </imgdir>
-  <imgdir name="1">
-    <imgdir name="info">
-    </imgdir>
-    <imgdir name="tile">
+  </imgdir>
+  <imgdir name="2">
+    <imgdir name="info">
     </imgdir>
     <imgdir name="obj">
-    </imgdir>
-  </imgdir>
-  <imgdir name="2">
-    <imgdir name="info">
-    </imgdir>
-    <imgdir name="tile">
-    </imgdir>
-    <imgdir name="obj">
-      <imgdir name="1">
+      <imgdir name="0">
+        <int name="x" value="372"/>
+        <int name="y" value="-260"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="1"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="nature"/>
         <string name="l2" value="1"/>
-        <int name="x" value="372"/>
-        <int name="y" value="-260"/>
-        <int name="z" value="9"/>
+        <int name="r" value="0"/>
         <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="1">
+        <int name="x" value="742"/>
+        <int name="y" value="-277"/>
+        <int name="z" value="9"/>
         <int name="zM" value="1"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="nature"/>
+        <string name="l2" value="2"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
       <imgdir name="2">
+        <int name="x" value="769"/>
+        <int name="y" value="-190"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="1"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="nature"/>
+        <string name="l2" value="4"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="3">
+        <int name="x" value="-1457"/>
+        <int name="y" value="-113"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="2"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="nature"/>
+        <string name="l2" value="10"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="4">
+        <int name="x" value="-896"/>
+        <int name="y" value="-228"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="3"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="nature"/>
+        <string name="l2" value="7"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="5">
+        <int name="x" value="-1202"/>
+        <int name="y" value="-273"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="2"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="nature"/>
         <string name="l2" value="2"/>
-        <int name="x" value="742"/>
-        <int name="y" value="-277"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="6">
+        <int name="x" value="-743"/>
+        <int name="y" value="62"/>
+        <int name="z" value="8"/>
+        <int name="zM" value="3"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="nature"/>
+        <string name="l2" value="17"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="7">
+        <int name="x" value="-338"/>
+        <int name="y" value="54"/>
+        <int name="z" value="6"/>
+        <int name="zM" value="4"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="nature"/>
+        <string name="l2" value="22"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="8">
+        <int name="x" value="-869"/>
+        <int name="y" value="56"/>
         <int name="z" value="9"/>
+        <int name="zM" value="3"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="nature"/>
+        <string name="l2" value="12"/>
+        <int name="r" value="0"/>
         <int name="f" value="0"/>
-        <int name="zM" value="1"/>
+      </imgdir>
+      <imgdir name="9">
+        <int name="x" value="-1324"/>
+        <int name="y" value="56"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="2"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="nature"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="10">
+        <int name="x" value="-952"/>
+        <int name="y" value="24"/>
+        <int name="z" value="8"/>
+        <int name="zM" value="2"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="nature"/>
+        <string name="l2" value="18"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="11">
+        <int name="x" value="-1026"/>
+        <int name="y" value="45"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="2"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="nature"/>
+        <string name="l2" value="16"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="12">
+        <int name="x" value="-957"/>
+        <int name="y" value="63"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="2"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="nature"/>
+        <string name="l2" value="24"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="13">
+        <int name="x" value="-215"/>
+        <int name="y" value="62"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="4"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="16"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="14">
+        <int name="x" value="-208"/>
+        <int name="y" value="-51"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="4"/>
+        <string name="oS" value="acc11"/>
+        <string name="l0" value="erebTW"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="17"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="3">
+      <imgdir name="15">
+        <int name="x" value="-363"/>
+        <int name="y" value="57"/>
+        <int name="z" value="8"/>
+        <int name="zM" value="4"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
-        <string name="l1" value="nature"/>
-        <string name="l2" value="4"/>
-        <int name="x" value="769"/>
-        <int name="y" value="-190"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="1"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="15"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="6">
+      <imgdir name="16">
+        <int name="x" value="-459"/>
+        <int name="y" value="57"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="5"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
-        <string name="l1" value="nature"/>
-        <string name="l2" value="10"/>
-        <int name="x" value="-1457"/>
-        <int name="y" value="-113"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="2"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="14"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="5">
+      <imgdir name="17">
+        <int name="x" value="-555"/>
+        <int name="y" value="57"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="7"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
-        <string name="l1" value="nature"/>
-        <string name="l2" value="7"/>
-        <int name="x" value="-896"/>
-        <int name="y" value="-228"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="3"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="13"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="7">
+      <imgdir name="18">
+        <int name="x" value="-86"/>
+        <int name="y" value="-277"/>
+        <int name="z" value="10"/>
+        <int name="zM" value="1"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="nature"/>
         <string name="l2" value="2"/>
-        <int name="x" value="-1202"/>
-        <int name="y" value="-273"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="2"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="8">
+      <imgdir name="19">
+        <int name="x" value="53"/>
+        <int name="y" value="57"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="1"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
-        <string name="l1" value="nature"/>
-        <string name="l2" value="17"/>
-        <int name="x" value="-743"/>
-        <int name="y" value="62"/>
-        <int name="z" value="8"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="3"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="15"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="13">
+      <imgdir name="20">
+        <int name="x" value="-12"/>
+        <int name="y" value="57"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="6"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
-        <string name="l1" value="nature"/>
-        <string name="l2" value="22"/>
-        <int name="x" value="-338"/>
-        <int name="y" value="54"/>
-        <int name="z" value="6"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="4"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="13"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="4">
+      <imgdir name="21">
+        <int name="x" value="-299"/>
+        <int name="y" value="57"/>
+        <int name="z" value="8"/>
+        <int name="zM" value="1"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
-        <string name="l1" value="nature"/>
-        <string name="l2" value="12"/>
-        <int name="x" value="-869"/>
-        <int name="y" value="56"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="3"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="13"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="3">
+    <imgdir name="info">
+      <string name="tS" value="fallenLeaves"/>
+    </imgdir>
+    <imgdir name="obj">
       <imgdir name="0">
+        <int name="x" value="-1107"/>
+        <int name="y" value="-13"/>
+        <int name="z" value="8"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
-        <string name="l1" value="nature"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="-1324"/>
-        <int name="y" value="56"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="2"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="6"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="12">
+      <imgdir name="1">
+        <int name="x" value="-1113"/>
+        <int name="y" value="-149"/>
+        <int name="z" value="7"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
-        <string name="l1" value="nature"/>
-        <string name="l2" value="18"/>
-        <int name="x" value="-952"/>
-        <int name="y" value="24"/>
-        <int name="z" value="8"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="2"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="5"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="11">
+      <imgdir name="2">
+        <int name="x" value="495"/>
+        <int name="y" value="-167"/>
+        <int name="z" value="0"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
-        <string name="l1" value="nature"/>
-        <string name="l2" value="16"/>
-        <int name="x" value="-1026"/>
-        <int name="y" value="45"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="2"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="0"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="10">
+      <imgdir name="3">
+        <int name="x" value="584"/>
+        <int name="y" value="-103"/>
+        <int name="z" value="8"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
-        <string name="l1" value="nature"/>
-        <string name="l2" value="24"/>
-        <int name="x" value="-957"/>
-        <int name="y" value="63"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="2"/>
+        <string name="l1" value="holybird"/>
+        <string name="l2" value="1"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="14">
+      <imgdir name="4">
+        <int name="x" value="502"/>
+        <int name="y" value="91"/>
+        <int name="z" value="10"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="holybird"/>
-        <string name="l2" value="16"/>
-        <int name="x" value="-215"/>
-        <int name="y" value="62"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="4"/>
+        <string name="l2" value="3"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="15">
+      <imgdir name="5">
+        <int name="x" value="502"/>
+        <int name="y" value="94"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="holybird"/>
-        <string name="l2" value="17"/>
-        <int name="x" value="-208"/>
-        <int name="y" value="-51"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="4"/>
+        <string name="l2" value="2"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="16">
+      <imgdir name="6">
+        <int name="x" value="495"/>
+        <int name="y" value="-167"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="holybird"/>
-        <string name="l2" value="15"/>
-        <int name="x" value="-363"/>
-        <int name="y" value="57"/>
-        <int name="z" value="8"/>
+        <string name="l2" value="4"/>
+        <int name="r" value="0"/>
         <int name="f" value="0"/>
-        <int name="zM" value="4"/>
+      </imgdir>
+      <imgdir name="7">
+        <int name="x" value="-687"/>
+        <int name="y" value="-97"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="10"/>
+        <string name="oS" value="guide"/>
+        <string name="l0" value="milepost"/>
+        <string name="l1" value="ereb"/>
+        <string name="l2" value="0"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="8">
+        <int name="x" value="-687"/>
+        <int name="y" value="24"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="8"/>
+        <string name="oS" value="guide"/>
+        <string name="l0" value="milepost"/>
+        <string name="l1" value="ereb"/>
+        <string name="l2" value="1"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="9">
+        <int name="x" value="-687"/>
+        <int name="y" value="66"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="guide"/>
+        <string name="l0" value="milepost"/>
+        <string name="l1" value="ereb"/>
+        <string name="l2" value="2"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="17">
+      <imgdir name="10">
+        <int name="x" value="985"/>
+        <int name="y" value="-298"/>
+        <int name="z" value="11"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="holybird"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="-459"/>
-        <int name="y" value="57"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="5"/>
+        <string name="l2" value="11"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="18">
+      <imgdir name="11">
+        <int name="x" value="985"/>
+        <int name="y" value="-298"/>
+        <int name="z" value="11"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="holybird"/>
-        <string name="l2" value="13"/>
-        <int name="x" value="-555"/>
-        <int name="y" value="57"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="7"/>
+        <string name="l2" value="10"/>
         <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="19">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="nature"/>
-        <string name="l2" value="2"/>
-        <int name="x" value="-86"/>
-        <int name="y" value="-277"/>
-        <int name="z" value="10"/>
         <int name="f" value="0"/>
-        <int name="zM" value="1"/>
-        <int name="r" value="0"/>
       </imgdir>
-      <imgdir name="20">
+      <imgdir name="12">
+        <int name="x" value="-1395"/>
+        <int name="y" value="-317"/>
+        <int name="z" value="4"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="holybird"/>
-        <string name="l2" value="15"/>
-        <int name="x" value="53"/>
-        <int name="y" value="57"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="1"/>
+        <string name="l2" value="9"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="9">
+      <imgdir name="13">
+        <int name="x" value="-1395"/>
+        <int name="y" value="-316"/>
+        <int name="z" value="4"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="holybird"/>
-        <string name="l2" value="13"/>
-        <int name="x" value="-12"/>
-        <int name="y" value="57"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="6"/>
+        <string name="l2" value="8"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
-      <imgdir name="21">
+      <imgdir name="14">
+        <int name="x" value="-1103"/>
+        <int name="y" value="14"/>
+        <int name="z" value="6"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="holybird"/>
-        <string name="l2" value="13"/>
-        <int name="x" value="-299"/>
-        <int name="y" value="57"/>
-        <int name="z" value="8"/>
+        <string name="l2" value="12"/>
+        <int name="r" value="0"/>
         <int name="f" value="0"/>
-        <int name="zM" value="1"/>
+      </imgdir>
+      <imgdir name="15">
+        <int name="x" value="-678"/>
+        <int name="y" value="-25"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="9"/>
+        <string name="oS" value="guide"/>
+        <string name="l0" value="milepost"/>
+        <string name="l1" value="ereb"/>
+        <string name="l2" value="4"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
     </imgdir>
-  </imgdir>
-  <imgdir name="3">
-    <imgdir name="info">
-      <string name="tS" value="fallenLeaves"/>
-      <int name="tSMag" value="1"/>
-    </imgdir>
     <imgdir name="tile">
-      <imgdir name="6">
-        <int name="x" value="-90"/>
+      <imgdir name="0">
+        <int name="x" value="0"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="1">
         <int name="x" value="-90"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="2">
+        <int name="x" value="90"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="11">
+      <imgdir name="3">
         <int name="x" value="0"/>
-        <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="4">
+        <int name="x" value="-180"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="0">
-        <int name="x" value="0"/>
+      <imgdir name="5">
+        <int name="x" value="90"/>
+        <int name="y" value="300"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="6">
+        <int name="x" value="-90"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="7">
         <int name="x" value="-90"/>
         <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="3">
-        <int name="x" value="0"/>
+      <imgdir name="8">
+        <int name="x" value="-180"/>
         <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="17">
-        <int name="x" value="0"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
       <imgdir name="9">
         <int name="x" value="0"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
+      </imgdir>
+      <imgdir name="10">
+        <int name="x" value="90"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="14">
-        <int name="x" value="-90"/>
+      <imgdir name="11">
+        <int name="x" value="0"/>
+        <int name="y" value="120"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="12">
+        <int name="x" value="-270"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="16">
-        <int name="x" value="-90"/>
+      <imgdir name="13">
+        <int name="x" value="180"/>
         <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="5">
-        <int name="x" value="90"/>
-        <int name="y" value="300"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="2">
-        <int name="x" value="90"/>
-        <int name="y" value="120"/>
+      <imgdir name="14">
+        <int name="x" value="-90"/>
+        <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="10">
-        <int name="x" value="90"/>
-        <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="15">
         <int name="x" value="90"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
+      </imgdir>
+      <imgdir name="16">
+        <int name="x" value="-90"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="22">
-        <int name="x" value="90"/>
+      <imgdir name="17">
+        <int name="x" value="0"/>
+        <int name="y" value="300"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="18">
+        <int name="x" value="-360"/>
         <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="13">
-        <int name="x" value="180"/>
+      <imgdir name="19">
+        <int name="x" value="-270"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="20">
+        <int name="x" value="180"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
       <imgdir name="21">
         <int name="x" value="180"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="24">
-        <int name="x" value="180"/>
-        <int name="y" value="240"/>
+      <imgdir name="22">
+        <int name="x" value="90"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="20">
-        <int name="x" value="180"/>
+      <imgdir name="23">
+        <int name="x" value="270"/>
         <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="29">
+      <imgdir name="24">
         <int name="x" value="180"/>
-        <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
-      <imgdir name="28">
-        <int name="x" value="270"/>
+      <imgdir name="25">
+        <int name="x" value="540"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="26">
+        <int name="x" value="270"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="27">
         <int name="x" value="270"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="4"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="23">
+      <imgdir name="28">
         <int name="x" value="270"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="26">
-        <int name="x" value="270"/>
+      <imgdir name="29">
+        <int name="x" value="180"/>
+        <int name="y" value="120"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="30">
+        <int name="x" value="360"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
       <imgdir name="31">
         <int name="x" value="270"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="43">
-        <int name="x" value="360"/>
+      <imgdir name="32">
+        <int name="x" value="540"/>
         <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="33">
         <int name="x" value="450"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="34">
+        <int name="x" value="450"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="35">
         <int name="x" value="360"/>
         <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="36">
+        <int name="x" value="360"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="37">
         <int name="x" value="450"/>
         <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="30">
-        <int name="x" value="360"/>
+      <imgdir name="38">
+        <int name="x" value="540"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="39">
         <int name="x" value="450"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
+      </imgdir>
+      <imgdir name="40">
+        <int name="x" value="450"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="36">
-        <int name="x" value="360"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
+      <imgdir name="41">
+        <int name="x" value="630"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="42">
         <int name="x" value="360"/>
         <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="34">
-        <int name="x" value="450"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="40">
-        <int name="x" value="450"/>
-        <int name="y" value="240"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="32">
-        <int name="x" value="540"/>
+      <imgdir name="43">
+        <int name="x" value="360"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="38">
-        <int name="x" value="540"/>
-        <int name="y" value="120"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="58">
-        <int name="x" value="540"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
+      <imgdir name="44">
+        <int name="x" value="630"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
       <imgdir name="45">
         <int name="x" value="540"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="25">
-        <int name="x" value="540"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="46">
         <int name="x" value="630"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="44">
-        <int name="x" value="630"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="41">
-        <int name="x" value="630"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="59">
-        <int name="x" value="630"/>
-        <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="56">
-        <int name="x" value="630"/>
-        <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="47">
         <int name="x" value="720"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="4"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="48">
         <int name="x" value="720"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="60">
-        <int name="x" value="720"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
+      <imgdir name="49">
+        <int name="x" value="810"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="57">
-        <int name="x" value="720"/>
-        <int name="y" value="120"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="62">
-        <int name="x" value="720"/>
-        <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="50">
         <int name="x" value="810"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="51">
+        <int name="x" value="900"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="49">
-        <int name="x" value="810"/>
+      <imgdir name="52">
+        <int name="x" value="-1350"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="53">
+        <int name="x" value="900"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="63">
-        <int name="x" value="810"/>
+      <imgdir name="54">
+        <int name="x" value="-1170"/>
         <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="55">
         <int name="x" value="810"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="65">
-        <int name="x" value="810"/>
+      <imgdir name="56">
+        <int name="x" value="630"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="51">
-        <int name="x" value="900"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
+      <imgdir name="57">
+        <int name="x" value="720"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="66">
-        <int name="x" value="900"/>
+      <imgdir name="58">
+        <int name="x" value="540"/>
         <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="59">
+        <int name="x" value="630"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="53">
-        <int name="x" value="900"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
+      <imgdir name="60">
+        <int name="x" value="720"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
       <imgdir name="61">
         <int name="x" value="900"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="68">
-        <int name="x" value="900"/>
+      <imgdir name="62">
+        <int name="x" value="720"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="63">
+        <int name="x" value="810"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="86">
-        <int name="x" value="-180"/>
+      <imgdir name="64">
+        <int name="x" value="-1260"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="92">
-        <int name="x" value="-180"/>
+      <imgdir name="65">
+        <int name="x" value="810"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="87">
-        <int name="x" value="-270"/>
-        <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
+      <imgdir name="66">
+        <int name="x" value="900"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="85">
-        <int name="x" value="-360"/>
-        <int name="y" value="120"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="93">
-        <int name="x" value="-180"/>
+      <imgdir name="67">
+        <int name="x" value="-1530"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="68">
+        <int name="x" value="900"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="19">
-        <int name="x" value="-270"/>
+      <imgdir name="69">
+        <int name="x" value="-1440"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="8">
-        <int name="x" value="-180"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
+      <imgdir name="70">
+        <int name="x" value="-1530"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="88">
-        <int name="x" value="-270"/>
-        <int name="y" value="180"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="4">
-        <int name="x" value="-180"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="94">
-        <int name="x" value="-360"/>
+      <imgdir name="71">
+        <int name="x" value="-1350"/>
         <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="12">
-        <int name="x" value="-270"/>
-        <int name="y" value="240"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
+        <int name="no" value="3"/>
+      </imgdir>
+      <imgdir name="72">
+        <int name="x" value="-1620"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="90">
-        <int name="x" value="-270"/>
+      <imgdir name="73">
+        <int name="x" value="-1440"/>
         <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="18">
-        <int name="x" value="-360"/>
+      <imgdir name="74">
+        <int name="x" value="-1350"/>
         <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="89">
-        <int name="x" value="-360"/>
-        <int name="y" value="240"/>
+      <imgdir name="75">
+        <int name="x" value="-1620"/>
+        <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="98">
-        <int name="x" value="-360"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
+      <imgdir name="76">
+        <int name="x" value="-1170"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="107">
-        <int name="x" value="-630"/>
+      <imgdir name="77">
+        <int name="x" value="-1530"/>
         <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="109">
-        <int name="x" value="-630"/>
-        <int name="y" value="240"/>
+      <imgdir name="78">
+        <int name="x" value="-1620"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="111">
-        <int name="x" value="-540"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
+      <imgdir name="79">
+        <int name="x" value="-1440"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="102">
-        <int name="x" value="-540"/>
+      <imgdir name="80">
+        <int name="x" value="-1440"/>
         <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="100">
-        <int name="x" value="-540"/>
+      <imgdir name="81">
+        <int name="x" value="-1350"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="101">
-        <int name="x" value="-450"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
+      <imgdir name="82">
+        <int name="x" value="-1440"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="105">
-        <int name="x" value="-450"/>
-        <int name="y" value="120"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="91">
-        <int name="x" value="-450"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
+      <imgdir name="83">
+        <int name="x" value="-1620"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
-      <imgdir name="104">
-        <int name="x" value="-450"/>
-        <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
+      <imgdir name="84">
+        <int name="x" value="-1530"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="112">
-        <int name="x" value="-540"/>
+      <imgdir name="85">
+        <int name="x" value="-360"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="114">
-        <int name="x" value="-540"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
+        <string name="u" value="bsc"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="86">
+        <int name="x" value="-180"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="99">
-        <int name="x" value="-630"/>
+      <imgdir name="87">
+        <int name="x" value="-270"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="88">
+        <int name="x" value="-270"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="97">
-        <int name="x" value="-450"/>
+      <imgdir name="89">
+        <int name="x" value="-360"/>
         <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="96">
-        <int name="x" value="-630"/>
+      <imgdir name="90">
+        <int name="x" value="-270"/>
         <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="95">
-        <int name="x" value="-630"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="122">
-        <int name="x" value="-900"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
+      <imgdir name="91">
+        <int name="x" value="-450"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="129">
-        <int name="x" value="-720"/>
+      <imgdir name="92">
+        <int name="x" value="-180"/>
         <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="119">
-        <int name="x" value="-810"/>
+      <imgdir name="93">
+        <int name="x" value="-180"/>
         <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="124">
-        <int name="x" value="-900"/>
+      <imgdir name="94">
+        <int name="x" value="-360"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="127">
-        <int name="x" value="-810"/>
-        <int name="y" value="120"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="128">
-        <int name="x" value="-900"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
+      <imgdir name="95">
+        <int name="x" value="-630"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="125">
-        <int name="x" value="-810"/>
+      <imgdir name="96">
+        <int name="x" value="-630"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="110">
-        <int name="x" value="-900"/>
+      <imgdir name="97">
+        <int name="x" value="-450"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="118">
-        <int name="x" value="-720"/>
+      <imgdir name="98">
+        <int name="x" value="-360"/>
         <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="113">
-        <int name="x" value="-810"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
+        <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="117">
-        <int name="x" value="-900"/>
+      <imgdir name="99">
+        <int name="x" value="-630"/>
         <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="120">
-        <int name="x" value="-720"/>
-        <int name="y" value="240"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="106">
-        <int name="x" value="-720"/>
+      <imgdir name="100">
+        <int name="x" value="-540"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="108">
-        <int name="x" value="-810"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="101">
+        <int name="x" value="-450"/>
+        <int name="y" value="300"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="102">
+        <int name="x" value="-540"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="103">
         <int name="x" value="-720"/>
         <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="139">
-        <int name="x" value="-1170"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="144">
-        <int name="x" value="-990"/>
+      <imgdir name="104">
+        <int name="x" value="-450"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="143">
-        <int name="x" value="-1080"/>
+      <imgdir name="105">
+        <int name="x" value="-450"/>
         <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="141">
-        <int name="x" value="-1170"/>
+      <imgdir name="106">
+        <int name="x" value="-720"/>
         <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="116">
-        <int name="x" value="-990"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="126">
-        <int name="x" value="-990"/>
+      <imgdir name="107">
+        <int name="x" value="-630"/>
         <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="123">
-        <int name="x" value="-990"/>
-        <int name="y" value="120"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="121">
-        <int name="x" value="-990"/>
+      <imgdir name="108">
+        <int name="x" value="-810"/>
         <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="142">
-        <int name="x" value="-1080"/>
-        <int name="y" value="120"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="137">
-        <int name="x" value="-1080"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
+      <imgdir name="109">
+        <int name="x" value="-630"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="135">
-        <int name="x" value="-1080"/>
+      <imgdir name="110">
+        <int name="x" value="-900"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
+      </imgdir>
+      <imgdir name="111">
+        <int name="x" value="-540"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="140">
-        <int name="x" value="-1170"/>
+      <imgdir name="112">
+        <int name="x" value="-540"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="134">
-        <int name="x" value="-1080"/>
+      <imgdir name="113">
+        <int name="x" value="-810"/>
         <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="114">
+        <int name="x" value="-540"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="115">
         <int name="x" value="-1260"/>
         <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="133">
-        <int name="x" value="-1260"/>
+      <imgdir name="116">
+        <int name="x" value="-990"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="132">
-        <int name="x" value="-1260"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
+      <imgdir name="117">
+        <int name="x" value="-900"/>
+        <int name="y" value="120"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="118">
+        <int name="x" value="-720"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="138">
-        <int name="x" value="-1260"/>
-        <int name="y" value="120"/>
+      <imgdir name="119">
+        <int name="x" value="-810"/>
+        <int name="y" value="300"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="120">
+        <int name="x" value="-720"/>
+        <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="121">
+        <int name="x" value="-990"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="131">
-        <int name="x" value="-1350"/>
+      <imgdir name="122">
+        <int name="x" value="-900"/>
         <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="130">
-        <int name="x" value="-1530"/>
+      <imgdir name="123">
+        <int name="x" value="-990"/>
         <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="80">
-        <int name="x" value="-1440"/>
-        <int name="y" value="180"/>
+      <imgdir name="124">
+        <int name="x" value="-900"/>
+        <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="125">
+        <int name="x" value="-810"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="83">
-        <int name="x" value="-1620"/>
-        <int name="y" value="240"/>
+      <imgdir name="126">
+        <int name="x" value="-990"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="81">
-        <int name="x" value="-1350"/>
+      <imgdir name="127">
+        <int name="x" value="-810"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="82">
-        <int name="x" value="-1440"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+      <imgdir name="128">
+        <int name="x" value="-900"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="136">
-        <int name="x" value="-1620"/>
+      <imgdir name="129">
+        <int name="x" value="-720"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="75">
-        <int name="x" value="-1620"/>
-        <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="70">
+      <imgdir name="130">
         <int name="x" value="-1530"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="77">
-        <int name="x" value="-1530"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="78">
-        <int name="x" value="-1620"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
+      <imgdir name="131">
+        <int name="x" value="-1350"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="84">
-        <int name="x" value="-1530"/>
+      <imgdir name="132">
+        <int name="x" value="-1260"/>
         <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="72">
-        <int name="x" value="-1620"/>
+      <imgdir name="133">
+        <int name="x" value="-1260"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="74">
-        <int name="x" value="-1350"/>
+      <imgdir name="134">
+        <int name="x" value="-1080"/>
         <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="52">
-        <int name="x" value="-1350"/>
+      <imgdir name="135">
+        <int name="x" value="-1080"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
+        <int name="no" value="5"/>
+      </imgdir>
+      <imgdir name="136">
+        <int name="x" value="-1620"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="69">
-        <int name="x" value="-1440"/>
+      <imgdir name="137">
+        <int name="x" value="-1080"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="73">
-        <int name="x" value="-1440"/>
+      <imgdir name="138">
+        <int name="x" value="-1260"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="67">
-        <int name="x" value="-1530"/>
+      <imgdir name="139">
+        <int name="x" value="-1170"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="76">
+      <imgdir name="140">
         <int name="x" value="-1170"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="64">
-        <int name="x" value="-1260"/>
+      <imgdir name="141">
+        <int name="x" value="-1170"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="71">
-        <int name="x" value="-1350"/>
+      <imgdir name="142">
+        <int name="x" value="-1080"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="54">
-        <int name="x" value="-1170"/>
-        <int name="y" value="180"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="79">
-        <int name="x" value="-1440"/>
+      <imgdir name="143">
+        <int name="x" value="-1080"/>
         <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="149">
-        <int name="x" value="-1800"/>
+      <imgdir name="144">
+        <int name="x" value="-990"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="145">
+        <int name="x" value="-1800"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="148">
+      <imgdir name="146">
         <int name="x" value="-1710"/>
-        <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
       <imgdir name="147">
         <int name="x" value="-1710"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="150">
-        <int name="x" value="-1800"/>
+      <imgdir name="148">
+        <int name="x" value="-1710"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="153">
-        <int name="x" value="-1800"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="154">
+      <imgdir name="149">
         <int name="x" value="-1800"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="145">
+      <imgdir name="150">
         <int name="x" value="-1800"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
-      <imgdir name="146">
+      <imgdir name="151">
         <int name="x" value="-1710"/>
-        <int name="y" value="180"/>
+        <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="152">
         <int name="x" value="-1710"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="151">
-        <int name="x" value="-1710"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
+      <imgdir name="153">
+        <int name="x" value="-1800"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="159">
-        <int name="x" value="1080"/>
-        <int name="y" value="120"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
+      <imgdir name="154">
+        <int name="x" value="-1800"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
       <imgdir name="155">
         <int name="x" value="990"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="156">
         <int name="x" value="990"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="163">
-        <int name="x" value="990"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
+      <imgdir name="157">
+        <int name="x" value="1080"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="162">
-        <int name="x" value="990"/>
+      <imgdir name="158">
+        <int name="x" value="1080"/>
         <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="164">
+      <imgdir name="159">
         <int name="x" value="1080"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="160">
         <int name="x" value="1080"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="157">
-        <int name="x" value="1080"/>
+      <imgdir name="161">
+        <int name="x" value="990"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="158">
-        <int name="x" value="1080"/>
+      <imgdir name="162">
+        <int name="x" value="990"/>
         <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="161">
+      <imgdir name="163">
         <int name="x" value="990"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="164">
+        <int name="x" value="1080"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
     </imgdir>
+  </imgdir>
+  <imgdir name="4">
+    <imgdir name="info">
+    </imgdir>
     <imgdir name="obj">
       <imgdir name="0">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="6"/>
-        <int name="x" value="-1107"/>
-        <int name="y" value="-13"/>
-        <int name="z" value="8"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="1">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="5"/>
-        <int name="x" value="-1113"/>
-        <int name="y" value="-149"/>
-        <int name="z" value="7"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="2">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="0"/>
-        <int name="x" value="495"/>
-        <int name="y" value="-167"/>
-        <int name="z" value="0"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="3">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="1"/>
-        <int name="x" value="584"/>
-        <int name="y" value="-103"/>
-        <int name="z" value="8"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="4">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="3"/>
-        <int name="x" value="502"/>
-        <int name="y" value="91"/>
-        <int name="z" value="10"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="5">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="2"/>
-        <int name="x" value="502"/>
-        <int name="y" value="94"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="6">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="4"/>
-        <int name="x" value="495"/>
-        <int name="y" value="-167"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="7">
-        <string name="oS" value="guide"/>
-        <string name="l0" value="milepost"/>
-        <string name="l1" value="ereb"/>
-        <string name="l2" value="0"/>
-        <int name="x" value="-687"/>
-        <int name="y" value="-97"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="10"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="8">
-        <string name="oS" value="guide"/>
-        <string name="l0" value="milepost"/>
-        <string name="l1" value="ereb"/>
-        <string name="l2" value="1"/>
-        <int name="x" value="-687"/>
-        <int name="y" value="24"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="8"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="9">
-        <string name="oS" value="guide"/>
-        <string name="l0" value="milepost"/>
-        <string name="l1" value="ereb"/>
-        <string name="l2" value="2"/>
-        <int name="x" value="-687"/>
-        <int name="y" value="66"/>
+        <int name="x" value="-1108"/>
+        <int name="y" value="-123"/>
         <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="10">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="11"/>
-        <int name="x" value="985"/>
-        <int name="y" value="-298"/>
-        <int name="z" value="11"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="11">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="10"/>
-        <int name="x" value="985"/>
-        <int name="y" value="-298"/>
-        <int name="z" value="11"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="12">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="9"/>
-        <int name="x" value="-1395"/>
-        <int name="y" value="-317"/>
-        <int name="z" value="4"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="13">
+        <int name="zM" value="11"/>
         <string name="oS" value="acc11"/>
         <string name="l0" value="erebTW"/>
         <string name="l1" value="holybird"/>
-        <string name="l2" value="8"/>
-        <int name="x" value="-1395"/>
-        <int name="y" value="-316"/>
-        <int name="z" value="4"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
+        <string name="l2" value="7"/>
         <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="15">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="12"/>
-        <int name="x" value="-1103"/>
-        <int name="y" value="14"/>
-        <int name="z" value="6"/>
         <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
       </imgdir>
-      <imgdir name="14">
-        <string name="oS" value="guide"/>
-        <string name="l0" value="milepost"/>
-        <string name="l1" value="ereb"/>
-        <string name="l2" value="4"/>
-        <int name="x" value="-678"/>
-        <int name="y" value="-25"/>
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="5">
+    <imgdir name="info">
+    </imgdir>
+    <imgdir name="obj">
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="6">
+    <imgdir name="info">
+    </imgdir>
+    <imgdir name="obj">
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="7">
+    <imgdir name="info">
+    </imgdir>
+    <imgdir name="obj">
+      <imgdir name="0">
+        <int name="x" value="677"/>
+        <int name="y" value="-704"/>
         <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="9"/>
+        <int name="zM" value="12"/>
+        <string name="oS" value="acc6"/>
+        <string name="l0" value="folkvillige"/>
+        <string name="l1" value="moon4"/>
+        <string name="l2" value="16"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
     </imgdir>
-  </imgdir>
-  <imgdir name="4">
-    <imgdir name="info">
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="ladderRope">
+  </imgdir>
+  <imgdir name="portal">
+    <imgdir name="0">
+      <int name="x" value="228"/>
+      <int name="y" value="-67"/>
+      <int name="pt" value="0"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="sp"/>
+    </imgdir>
+    <imgdir name="1">
+      <int name="x" value="-1644"/>
+      <int name="y" value="86"/>
+      <int name="pt" value="7"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="west00"/>
+      <string name="script" value="rankRoom"/>
+      <int name="horizontalImpact" value="0"/>
+    </imgdir>
+    <imgdir name="2">
+      <int name="x" value="983"/>
+      <int name="y" value="87"/>
+      <int name="pt" value="2"/>
+      <int name="tm" value="130030006"/>
+      <string name="tn" value="west00"/>
+      <string name="pn" value="east00"/>
+    </imgdir>
+    <imgdir name="3">
+      <int name="x" value="-178"/>
+      <int name="y" value="76"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+    </imgdir>
+    <imgdir name="4">
+      <int name="x" value="-278"/>
+      <int name="y" value="80"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+    </imgdir>
+    <imgdir name="5">
+      <int name="x" value="730"/>
+      <int name="y" value="86"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+    </imgdir>
+    <imgdir name="6">
+      <int name="x" value="-772"/>
+      <int name="y" value="81"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+    </imgdir>
+    <imgdir name="7">
+      <int name="x" value="-485"/>
+      <int name="y" value="75"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+    </imgdir>
+    <imgdir name="8">
+      <int name="x" value="-383"/>
+      <int name="y" value="79"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+    </imgdir>
+  </imgdir>
+  <imgdir name="reactor">
+  </imgdir>
+  <imgdir name="ToolTip">
+    <imgdir name="0">
+      <int name="x1" value="-721"/>
+      <int name="x2" value="-649"/>
+      <int name="y1" value="-42"/>
+      <int name="y2" value="-13"/>
+    </imgdir>
+    <imgdir name="0char">
+      <int name="x1" value="-759"/>
+      <int name="x2" value="-608"/>
+      <int name="y1" value="-158"/>
+      <int name="y2" value="91"/>
+    </imgdir>
+  </imgdir>
+  <imgdir name="back">
+    <imgdir name="0">
+      <int name="x" value="0"/>
+      <int name="y" value="0"/>
+      <int name="rx" value="0"/>
+      <int name="ry" value="0"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="3"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="0"/>
+    </imgdir>
+    <imgdir name="1">
+      <int name="x" value="97"/>
+      <int name="y" value="-453"/>
+      <int name="rx" value="0"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="1"/>
+    </imgdir>
+    <imgdir name="2">
+      <int name="x" value="-268"/>
+      <int name="y" value="-478"/>
+      <int name="rx" value="-3"/>
+      <int name="ry" value="-50"/>
+      <int name="cx" value="1200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="4"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="2"/>
+    </imgdir>
+    <imgdir name="3">
+      <int name="x" value="-386"/>
+      <int name="y" value="-495"/>
+      <int name="rx" value="-5"/>
+      <int name="ry" value="-50"/>
+      <int name="cx" value="1200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="4"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="3"/>
+    </imgdir>
+    <imgdir name="4">
+      <int name="x" value="250"/>
+      <int name="y" value="-404"/>
+      <int name="rx" value="-3"/>
+      <int name="ry" value="-50"/>
+      <int name="cx" value="1200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="4"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="4"/>
+    </imgdir>
+    <imgdir name="5">
+      <int name="x" value="370"/>
+      <int name="y" value="-354"/>
+      <int name="rx" value="-4"/>
+      <int name="ry" value="-50"/>
+      <int name="cx" value="1200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="4"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="5"/>
+    </imgdir>
+    <imgdir name="6">
+      <int name="x" value="23"/>
+      <int name="y" value="-348"/>
+      <int name="rx" value="-4"/>
+      <int name="ry" value="-50"/>
+      <int name="cx" value="1200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="4"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="6"/>
+    </imgdir>
+    <imgdir name="7">
+      <int name="x" value="-367"/>
+      <int name="y" value="-390"/>
+      <int name="rx" value="-3"/>
+      <int name="ry" value="-50"/>
+      <int name="cx" value="1200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="4"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="7"/>
+    </imgdir>
+    <imgdir name="8">
+      <int name="x" value="-278"/>
+      <int name="y" value="-347"/>
+      <int name="rx" value="-2"/>
+      <int name="ry" value="-50"/>
+      <int name="cx" value="1200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="4"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="8"/>
+    </imgdir>
+    <imgdir name="9">
+      <int name="x" value="143"/>
+      <int name="y" value="-312"/>
+      <int name="rx" value="-20"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="9"/>
     </imgdir>
-    <imgdir name="tile">
+    <imgdir name="10">
+      <int name="x" value="-1193"/>
+      <int name="y" value="-233"/>
+      <int name="rx" value="-30"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="10"/>
     </imgdir>
-    <imgdir name="obj">
-      <imgdir name="0">
-        <string name="oS" value="acc11"/>
-        <string name="l0" value="erebTW"/>
-        <string name="l1" value="holybird"/>
-        <string name="l2" value="7"/>
-        <int name="x" value="-1108"/>
-        <int name="y" value="-123"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="11"/>
-        <int name="r" value="0"/>
-      </imgdir>
+    <imgdir name="11">
+      <int name="x" value="-393"/>
+      <int name="y" value="-128"/>
+      <int name="rx" value="-30"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="11"/>
     </imgdir>
-  </imgdir>
-  <imgdir name="5">
-    <imgdir name="info">
+    <imgdir name="12">
+      <int name="x" value="407"/>
+      <int name="y" value="-120"/>
+      <int name="rx" value="-30"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="12"/>
     </imgdir>
-    <imgdir name="tile">
+    <imgdir name="13">
+      <int name="x" value="1207"/>
+      <int name="y" value="-128"/>
+      <int name="rx" value="-30"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="13"/>
     </imgdir>
-    <imgdir name="obj">
+    <imgdir name="14">
+      <int name="x" value="-1149"/>
+      <int name="y" value="-66"/>
+      <int name="rx" value="-50"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="14"/>
     </imgdir>
-  </imgdir>
-  <imgdir name="6">
-    <imgdir name="info">
+    <imgdir name="15">
+      <int name="x" value="-349"/>
+      <int name="y" value="-76"/>
+      <int name="rx" value="-50"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="15"/>
+    </imgdir>
+    <imgdir name="16">
+      <int name="x" value="451"/>
+      <int name="y" value="-58"/>
+      <int name="rx" value="-50"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="16"/>
+    </imgdir>
+    <imgdir name="17">
+      <int name="x" value="1251"/>
+      <int name="y" value="-45"/>
+      <int name="rx" value="-50"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="17"/>
+    </imgdir>
+    <imgdir name="18">
+      <int name="x" value="-326"/>
+      <int name="y" value="-216"/>
+      <int name="rx" value="-50"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="6"/>
+    </imgdir>
+    <imgdir name="19">
+      <int name="x" value="-1145"/>
+      <int name="y" value="-221"/>
+      <int name="rx" value="-50"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="6"/>
+    </imgdir>
+    <imgdir name="20">
+      <int name="x" value="-2146"/>
+      <int name="y" value="-213"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="6"/>
+    </imgdir>
+    <imgdir name="21">
+      <int name="x" value="1048"/>
+      <int name="y" value="-196"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="6"/>
+    </imgdir>
+    <imgdir name="22">
+      <int name="x" value="-1185"/>
+      <int name="y" value="-168"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="3200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="18"/>
+    </imgdir>
+    <imgdir name="23">
+      <int name="x" value="-385"/>
+      <int name="y" value="-168"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="3200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="19"/>
+    </imgdir>
+    <imgdir name="24">
+      <int name="x" value="415"/>
+      <int name="y" value="-175"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="3200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="20"/>
     </imgdir>
-    <imgdir name="tile">
+    <imgdir name="25">
+      <int name="x" value="1215"/>
+      <int name="y" value="-168"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="3200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="21"/>
     </imgdir>
-    <imgdir name="obj">
+    <imgdir name="26">
+      <int name="x" value="173"/>
+      <int name="y" value="-161"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-30"/>
+      <int name="cx" value="3200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="0"/>
     </imgdir>
-  </imgdir>
-  <imgdir name="7">
-    <imgdir name="info">
+    <imgdir name="27">
+      <int name="x" value="-144"/>
+      <int name="y" value="-228"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-30"/>
+      <int name="cx" value="3200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="1"/>
     </imgdir>
-    <imgdir name="tile">
+    <imgdir name="28">
+      <int name="x" value="-762"/>
+      <int name="y" value="-298"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-30"/>
+      <int name="cx" value="3200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="2"/>
     </imgdir>
-    <imgdir name="obj">
-      <imgdir name="0">
-        <string name="oS" value="acc6"/>
-        <string name="l0" value="folkvillige"/>
-        <string name="l1" value="moon4"/>
-        <string name="l2" value="16"/>
-        <int name="x" value="677"/>
-        <int name="y" value="-704"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="12"/>
-        <int name="r" value="0"/>
-      </imgdir>
+    <imgdir name="29">
+      <int name="x" value="656"/>
+      <int name="y" value="-245"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-30"/>
+      <int name="cx" value="3200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="3"/>
     </imgdir>
-  </imgdir>
-  <imgdir name="ToolTip">
-    <imgdir name="0">
-      <int name="x1" value="-721"/>
-      <int name="y1" value="-42"/>
-      <int name="x2" value="-649"/>
-      <int name="y2" value="-13"/>
+    <imgdir name="30">
+      <int name="x" value="279"/>
+      <int name="y" value="-273"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-30"/>
+      <int name="cx" value="3200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="4"/>
     </imgdir>
-    <imgdir name="0char">
-      <int name="x1" value="-759"/>
-      <int name="y1" value="-158"/>
-      <int name="x2" value="-608"/>
-      <int name="y2" value="91"/>
+    <imgdir name="31">
+      <int name="x" value="-1083"/>
+      <int name="y" value="-274"/>
+      <int name="rx" value="-60"/>
+      <int name="ry" value="-30"/>
+      <int name="cx" value="3200"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="ereb"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="5"/>
     </imgdir>
   </imgdir>
   <imgdir name="foothold">
     <imgdir name="3">
       <imgdir name="0">
         <imgdir name="1">
-          <int name="x1" value="-90"/>
+          <int name="x1" value="-1800"/>
           <int name="y1" value="88"/>
-          <int name="x2" value="0"/>
+          <int name="x2" value="-1710"/>
           <int name="y2" value="88"/>
-          <int name="prev" value="17"/>
-          <int name="next" value="3"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="2"/>
         </imgdir>
         <imgdir name="2">
-          <int name="x1" value="90"/>
+          <int name="x1" value="-1710"/>
           <int name="y1" value="88"/>
-          <int name="x2" value="180"/>
+          <int name="x2" value="-1620"/>
           <int name="y2" value="88"/>
-          <int name="prev" value="3"/>
-          <int name="next" value="4"/>
+          <int name="prev" value="1"/>
+          <int name="next" value="3"/>
         </imgdir>
         <imgdir name="3">
-          <int name="x1" value="0"/>
+          <int name="x1" value="-1620"/>
           <int name="y1" value="88"/>
-          <int name="x2" value="90"/>
+          <int name="x2" value="-1530"/>
           <int name="y2" value="88"/>
-          <int name="prev" value="1"/>
-          <int name="next" value="2"/>
+          <int name="prev" value="2"/>
+          <int name="next" value="4"/>
         </imgdir>
         <imgdir name="4">
-          <int name="x1" value="180"/>
+          <int name="x1" value="-1530"/>
           <int name="y1" value="88"/>
-          <int name="x2" value="270"/>
+          <int name="x2" value="-1440"/>
           <int name="y2" value="88"/>
-          <int name="prev" value="2"/>
-          <int name="next" value="5"/>
+          <int name="prev" value="3"/>
+          <int name="next" value="6"/>
         </imgdir>
         <imgdir name="5">
-          <int name="x1" value="270"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="360"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="4"/>
-          <int name="next" value="8"/>
+          <int name="x1" value="-1509"/>
+          <int name="y1" value="-185"/>
+          <int name="x2" value="-1461"/>
+          <int name="y2" value="-187"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="0"/>
         </imgdir>
         <imgdir name="6">
-          <int name="x1" value="450"/>
+          <int name="x1" value="-1440"/>
           <int name="y1" value="88"/>
-          <int name="x2" value="540"/>
+          <int name="x2" value="-1350"/>
           <int name="y2" value="88"/>
-          <int name="prev" value="8"/>
-          <int name="next" value="7"/>
+          <int name="prev" value="4"/>
+          <int name="next" value="10"/>
         </imgdir>
         <imgdir name="7">
-          <int name="x1" value="540"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="630"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="6"/>
-          <int name="next" value="9"/>
+          <int name="x1" value="-1409"/>
+          <int name="y1" value="-75"/>
+          <int name="x2" value="-1390"/>
+          <int name="y2" value="-84"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="8"/>
         </imgdir>
         <imgdir name="8">
-          <int name="x1" value="360"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="450"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="5"/>
-          <int name="next" value="6"/>
+          <int name="x1" value="-1390"/>
+          <int name="y1" value="-84"/>
+          <int name="x2" value="-1360"/>
+          <int name="y2" value="-92"/>
+          <int name="prev" value="7"/>
+          <int name="next" value="9"/>
         </imgdir>
         <imgdir name="9">
-          <int name="x1" value="630"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="720"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="7"/>
-          <int name="next" value="10"/>
+          <int name="x1" value="-1360"/>
+          <int name="y1" value="-92"/>
+          <int name="x2" value="-1328"/>
+          <int name="y2" value="-98"/>
+          <int name="prev" value="8"/>
+          <int name="next" value="11"/>
         </imgdir>
         <imgdir name="10">
-          <int name="x1" value="720"/>
+          <int name="x1" value="-1350"/>
           <int name="y1" value="88"/>
-          <int name="x2" value="810"/>
+          <int name="x2" value="-1260"/>
           <int name="y2" value="88"/>
-          <int name="prev" value="9"/>
-          <int name="next" value="12"/>
+          <int name="prev" value="6"/>
+          <int name="next" value="14"/>
         </imgdir>
         <imgdir name="11">
-          <int name="x1" value="-1260"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-1170"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="15"/>
-          <int name="next" value="27"/>
+          <int name="x1" value="-1328"/>
+          <int name="y1" value="-98"/>
+          <int name="x2" value="-1301"/>
+          <int name="y2" value="-103"/>
+          <int name="prev" value="9"/>
+          <int name="next" value="12"/>
         </imgdir>
         <imgdir name="12">
-          <int name="x1" value="810"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="900"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="10"/>
+          <int name="x1" value="-1301"/>
+          <int name="y1" value="-103"/>
+          <int name="x2" value="-1266"/>
+          <int name="y2" value="-107"/>
+          <int name="prev" value="11"/>
           <int name="next" value="13"/>
         </imgdir>
         <imgdir name="13">
-          <int name="x1" value="900"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="990"/>
-          <int name="y2" value="88"/>
+          <int name="x1" value="-1266"/>
+          <int name="y1" value="-107"/>
+          <int name="x2" value="-1226"/>
+          <int name="y2" value="-110"/>
           <int name="prev" value="12"/>
-          <int name="next" value="32"/>
+          <int name="next" value="15"/>
         </imgdir>
         <imgdir name="14">
-          <int name="x1" value="-1440"/>
+          <int name="x1" value="-1260"/>
           <int name="y1" value="88"/>
-          <int name="x2" value="-1350"/>
+          <int name="x2" value="-1170"/>
           <int name="y2" value="88"/>
-          <int name="prev" value="25"/>
-          <int name="next" value="15"/>
+          <int name="prev" value="10"/>
+          <int name="next" value="24"/>
         </imgdir>
         <imgdir name="15">
-          <int name="x1" value="-1350"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-1260"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="14"/>
-          <int name="next" value="11"/>
+          <int name="x1" value="-1226"/>
+          <int name="y1" value="-110"/>
+          <int name="x2" value="-1203"/>
+          <int name="y2" value="-110"/>
+          <int name="prev" value="13"/>
+          <int name="next" value="21"/>
         </imgdir>
         <imgdir name="16">
-          <int name="x1" value="-270"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-180"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="18"/>
-          <int name="next" value="17"/>
+          <int name="x1" value="-1217"/>
+          <int name="y1" value="-34"/>
+          <int name="x2" value="-1119"/>
+          <int name="y2" value="-34"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="0"/>
         </imgdir>
         <imgdir name="17">
-          <int name="x1" value="-180"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-90"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="16"/>
-          <int name="next" value="1"/>
+          <int name="x1" value="-1216"/>
+          <int name="y1" value="-7"/>
+          <int name="x2" value="-1110"/>
+          <int name="y2" value="-7"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="0"/>
         </imgdir>
         <imgdir name="18">
-          <int name="x1" value="-360"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-270"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="21"/>
-          <int name="next" value="16"/>
+          <int name="x1" value="-1214"/>
+          <int name="y1" value="-59"/>
+          <int name="x2" value="-1127"/>
+          <int name="y2" value="-59"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="0"/>
         </imgdir>
         <imgdir name="19">
-          <int name="x1" value="-630"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-540"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="24"/>
-          <int name="next" value="20"/>
+          <int name="x1" value="-1209"/>
+          <int name="y1" value="-83"/>
+          <int name="x2" value="-1127"/>
+          <int name="y2" value="-83"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="0"/>
         </imgdir>
         <imgdir name="20">
-          <int name="x1" value="-540"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-450"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="19"/>
-          <int name="next" value="21"/>
+          <int name="x1" value="-1205"/>
+          <int name="y1" value="25"/>
+          <int name="x2" value="-1092"/>
+          <int name="y2" value="25"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="0"/>
         </imgdir>
         <imgdir name="21">
-          <int name="x1" value="-450"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-360"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="20"/>
-          <int name="next" value="18"/>
+          <int name="x1" value="-1203"/>
+          <int name="y1" value="-110"/>
+          <int name="x2" value="-1199"/>
+          <int name="y2" value="-108"/>
+          <int name="prev" value="15"/>
+          <int name="next" value="23"/>
         </imgdir>
         <imgdir name="22">
-          <int name="x1" value="-900"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-810"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="29"/>
-          <int name="next" value="23"/>
+          <int name="x1" value="-1203"/>
+          <int name="y1" value="56"/>
+          <int name="x2" value="-1068"/>
+          <int name="y2" value="56"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="0"/>
         </imgdir>
         <imgdir name="23">
-          <int name="x1" value="-810"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-720"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="22"/>
-          <int name="next" value="24"/>
+          <int name="x1" value="-1199"/>
+          <int name="y1" value="-108"/>
+          <int name="x2" value="-1129"/>
+          <int name="y2" value="-110"/>
+          <int name="prev" value="21"/>
+          <int name="next" value="25"/>
         </imgdir>
         <imgdir name="24">
-          <int name="x1" value="-720"/>
+          <int name="x1" value="-1170"/>
           <int name="y1" value="88"/>
-          <int name="x2" value="-630"/>
+          <int name="x2" value="-1080"/>
           <int name="y2" value="88"/>
-          <int name="prev" value="23"/>
-          <int name="next" value="19"/>
+          <int name="prev" value="14"/>
+          <int name="next" value="27"/>
         </imgdir>
         <imgdir name="25">
-          <int name="x1" value="-1530"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-1440"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="26"/>
-          <int name="next" value="14"/>
+          <int name="x1" value="-1129"/>
+          <int name="y1" value="-110"/>
+          <int name="x2" value="-1113"/>
+          <int name="y2" value="-113"/>
+          <int name="prev" value="23"/>
+          <int name="next" value="26"/>
         </imgdir>
         <imgdir name="26">
-          <int name="x1" value="-1620"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-1530"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="30"/>
-          <int name="next" value="25"/>
-        </imgdir>
-        <imgdir name="27">
-          <int name="x1" value="-1170"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-1080"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="11"/>
+          <int name="x1" value="-1113"/>
+          <int name="y1" value="-113"/>
+          <int name="x2" value="-1004"/>
+          <int name="y2" value="-109"/>
+          <int name="prev" value="25"/>
           <int name="next" value="28"/>
         </imgdir>
-        <imgdir name="28">
+        <imgdir name="27">
           <int name="x1" value="-1080"/>
           <int name="y1" value="88"/>
           <int name="x2" value="-990"/>
           <int name="y2" value="88"/>
-          <int name="prev" value="27"/>
+          <int name="prev" value="24"/>
           <int name="next" value="29"/>
         </imgdir>
+        <imgdir name="28">
+          <int name="x1" value="-1004"/>
+          <int name="y1" value="-109"/>
+          <int name="x2" value="-927"/>
+          <int name="y2" value="-104"/>
+          <int name="prev" value="26"/>
+          <int name="next" value="30"/>
+        </imgdir>
         <imgdir name="29">
           <int name="x1" value="-990"/>
           <int name="y1" value="88"/>
           <int name="x2" value="-900"/>
           <int name="y2" value="88"/>
-          <int name="prev" value="28"/>
-          <int name="next" value="22"/>
+          <int name="prev" value="27"/>
+          <int name="next" value="31"/>
         </imgdir>
         <imgdir name="30">
-          <int name="x1" value="-1710"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="-1620"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="31"/>
-          <int name="next" value="26"/>
+          <int name="x1" value="-927"/>
+          <int name="y1" value="-104"/>
+          <int name="x2" value="-894"/>
+          <int name="y2" value="-99"/>
+          <int name="prev" value="28"/>
+          <int name="next" value="32"/>
         </imgdir>
         <imgdir name="31">
-          <int name="x1" value="-1800"/>
+          <int name="x1" value="-900"/>
           <int name="y1" value="88"/>
-          <int name="x2" value="-1710"/>
+          <int name="x2" value="-810"/>
           <int name="y2" value="88"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="30"/>
+          <int name="prev" value="29"/>
+          <int name="next" value="36"/>
         </imgdir>
         <imgdir name="32">
-          <int name="x1" value="990"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="1080"/>
-          <int name="y2" value="88"/>
-          <int name="prev" value="13"/>
+          <int name="x1" value="-894"/>
+          <int name="y1" value="-99"/>
+          <int name="x2" value="-860"/>
+          <int name="y2" value="-92"/>
+          <int name="prev" value="30"/>
           <int name="next" value="33"/>
         </imgdir>
         <imgdir name="33">
-          <int name="x1" value="1080"/>
-          <int name="y1" value="88"/>
-          <int name="x2" value="1170"/>
-          <int name="y2" value="88"/>
+          <int name="x1" value="-860"/>
+          <int name="y1" value="-92"/>
+          <int name="x2" value="-831"/>
+          <int name="y2" value="-85"/>
           <int name="prev" value="32"/>
-          <int name="next" value="0"/>
+          <int name="next" value="34"/>
         </imgdir>
         <imgdir name="34">
-          <int name="x1" value="-1409"/>
-          <int name="y1" value="-75"/>
-          <int name="x2" value="-1390"/>
-          <int name="y2" value="-84"/>
-          <int name="prev" value="0"/>
+          <int name="x1" value="-831"/>
+          <int name="y1" value="-85"/>
+          <int name="x2" value="-812"/>
+          <int name="y2" value="-78"/>
+          <int name="prev" value="33"/>
           <int name="next" value="35"/>
         </imgdir>
         <imgdir name="35">
-          <int name="x1" value="-1390"/>
-          <int name="y1" value="-84"/>
-          <int name="x2" value="-1360"/>
-          <int name="y2" value="-92"/>
+          <int name="x1" value="-812"/>
+          <int name="y1" value="-78"/>
+          <int name="x2" value="-804"/>
+          <int name="y2" value="-72"/>
           <int name="prev" value="34"/>
-          <int name="next" value="36"/>
+          <int name="next" value="0"/>
         </imgdir>
         <imgdir name="36">
-          <int name="x1" value="-1360"/>
-          <int name="y1" value="-92"/>
-          <int name="x2" value="-1328"/>
-          <int name="y2" value="-98"/>
-          <int name="prev" value="35"/>
+          <int name="x1" value="-810"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="-720"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="31"/>
           <int name="next" value="37"/>
         </imgdir>
         <imgdir name="37">
-          <int name="x1" value="-1328"/>
-          <int name="y1" value="-98"/>
-          <int name="x2" value="-1301"/>
-          <int name="y2" value="-103"/>
+          <int name="x1" value="-720"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="-630"/>
+          <int name="y2" value="88"/>
           <int name="prev" value="36"/>
           <int name="next" value="38"/>
         </imgdir>
         <imgdir name="38">
-          <int name="x1" value="-1301"/>
-          <int name="y1" value="-103"/>
-          <int name="x2" value="-1266"/>
-          <int name="y2" value="-107"/>
+          <int name="x1" value="-630"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="-540"/>
+          <int name="y2" value="88"/>
           <int name="prev" value="37"/>
           <int name="next" value="39"/>
         </imgdir>
         <imgdir name="39">
-          <int name="x1" value="-1266"/>
-          <int name="y1" value="-107"/>
-          <int name="x2" value="-1226"/>
-          <int name="y2" value="-110"/>
+          <int name="x1" value="-540"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="-450"/>
+          <int name="y2" value="88"/>
           <int name="prev" value="38"/>
           <int name="next" value="40"/>
         </imgdir>
         <imgdir name="40">
-          <int name="x1" value="-1226"/>
-          <int name="y1" value="-110"/>
-          <int name="x2" value="-1203"/>
-          <int name="y2" value="-110"/>
+          <int name="x1" value="-450"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="-360"/>
+          <int name="y2" value="88"/>
           <int name="prev" value="39"/>
           <int name="next" value="41"/>
         </imgdir>
         <imgdir name="41">
-          <int name="x1" value="-1203"/>
-          <int name="y1" value="-110"/>
-          <int name="x2" value="-1199"/>
-          <int name="y2" value="-108"/>
+          <int name="x1" value="-360"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="-270"/>
+          <int name="y2" value="88"/>
           <int name="prev" value="40"/>
           <int name="next" value="42"/>
         </imgdir>
         <imgdir name="42">
-          <int name="x1" value="-1199"/>
-          <int name="y1" value="-108"/>
-          <int name="x2" value="-1129"/>
-          <int name="y2" value="-110"/>
+          <int name="x1" value="-270"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="-180"/>
+          <int name="y2" value="88"/>
           <int name="prev" value="41"/>
           <int name="next" value="43"/>
         </imgdir>
         <imgdir name="43">
-          <int name="x1" value="-1129"/>
-          <int name="y1" value="-110"/>
-          <int name="x2" value="-1113"/>
-          <int name="y2" value="-113"/>
+          <int name="x1" value="-180"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="-90"/>
+          <int name="y2" value="88"/>
           <int name="prev" value="42"/>
           <int name="next" value="44"/>
         </imgdir>
         <imgdir name="44">
-          <int name="x1" value="-1113"/>
-          <int name="y1" value="-113"/>
-          <int name="x2" value="-1004"/>
-          <int name="y2" value="-109"/>
+          <int name="x1" value="-90"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="0"/>
+          <int name="y2" value="88"/>
           <int name="prev" value="43"/>
           <int name="next" value="45"/>
         </imgdir>
         <imgdir name="45">
-          <int name="x1" value="-1004"/>
-          <int name="y1" value="-109"/>
-          <int name="x2" value="-927"/>
-          <int name="y2" value="-104"/>
+          <int name="x1" value="0"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="90"/>
+          <int name="y2" value="88"/>
           <int name="prev" value="44"/>
           <int name="next" value="46"/>
         </imgdir>
         <imgdir name="46">
-          <int name="x1" value="-927"/>
-          <int name="y1" value="-104"/>
-          <int name="x2" value="-894"/>
-          <int name="y2" value="-99"/>
+          <int name="x1" value="90"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="180"/>
+          <int name="y2" value="88"/>
           <int name="prev" value="45"/>
-          <int name="next" value="47"/>
-        </imgdir>
-        <imgdir name="47">
-          <int name="x1" value="-894"/>
-          <int name="y1" value="-99"/>
-          <int name="x2" value="-860"/>
-          <int name="y2" value="-92"/>
-          <int name="prev" value="46"/>
           <int name="next" value="48"/>
         </imgdir>
-        <imgdir name="48">
-          <int name="x1" value="-860"/>
-          <int name="y1" value="-92"/>
-          <int name="x2" value="-831"/>
-          <int name="y2" value="-85"/>
-          <int name="prev" value="47"/>
-          <int name="next" value="49"/>
-        </imgdir>
-        <imgdir name="49">
-          <int name="x1" value="-831"/>
-          <int name="y1" value="-85"/>
-          <int name="x2" value="-812"/>
-          <int name="y2" value="-78"/>
-          <int name="prev" value="48"/>
-          <int name="next" value="50"/>
-        </imgdir>
-        <imgdir name="50">
-          <int name="x1" value="-812"/>
-          <int name="y1" value="-78"/>
-          <int name="x2" value="-804"/>
-          <int name="y2" value="-72"/>
-          <int name="prev" value="49"/>
-          <int name="next" value="0"/>
-        </imgdir>
-        <imgdir name="51">
-          <int name="x1" value="-1209"/>
-          <int name="y1" value="-83"/>
-          <int name="x2" value="-1127"/>
-          <int name="y2" value="-83"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="0"/>
-        </imgdir>
-        <imgdir name="52">
-          <int name="x1" value="-1214"/>
-          <int name="y1" value="-59"/>
-          <int name="x2" value="-1127"/>
-          <int name="y2" value="-59"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="0"/>
-        </imgdir>
-        <imgdir name="53">
-          <int name="x1" value="-1217"/>
-          <int name="y1" value="-34"/>
-          <int name="x2" value="-1119"/>
-          <int name="y2" value="-34"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="0"/>
-        </imgdir>
-        <imgdir name="54">
-          <int name="x1" value="-1216"/>
-          <int name="y1" value="-7"/>
-          <int name="x2" value="-1110"/>
-          <int name="y2" value="-7"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="0"/>
-        </imgdir>
-        <imgdir name="55">
-          <int name="x1" value="-1205"/>
-          <int name="y1" value="25"/>
-          <int name="x2" value="-1092"/>
-          <int name="y2" value="25"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="0"/>
-        </imgdir>
-        <imgdir name="56">
-          <int name="x1" value="-1203"/>
-          <int name="y1" value="56"/>
-          <int name="x2" value="-1068"/>
-          <int name="y2" value="56"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="0"/>
-        </imgdir>
-        <imgdir name="57">
+        <imgdir name="47">
           <int name="x1" value="177"/>
           <int name="y1" value="-290"/>
           <int name="x2" value="205"/>
           <int name="y2" value="-307"/>
           <int name="prev" value="0"/>
-          <int name="next" value="58"/>
+          <int name="next" value="51"/>
         </imgdir>
-        <imgdir name="58">
-          <int name="x1" value="205"/>
-          <int name="y1" value="-307"/>
-          <int name="x2" value="242"/>
-          <int name="y2" value="-327"/>
-          <int name="prev" value="57"/>
+        <imgdir name="48">
+          <int name="x1" value="180"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="270"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="46"/>
           <int name="next" value="59"/>
         </imgdir>
-        <imgdir name="59">
-          <int name="x1" value="242"/>
-          <int name="y1" value="-327"/>
-          <int name="x2" value="278"/>
-          <int name="y2" value="-343"/>
-          <int name="prev" value="58"/>
-          <int name="next" value="60"/>
-        </imgdir>
-        <imgdir name="60">
-          <int name="x1" value="278"/>
-          <int name="y1" value="-343"/>
-          <int name="x2" value="320"/>
-          <int name="y2" value="-356"/>
-          <int name="prev" value="59"/>
-          <int name="next" value="61"/>
-        </imgdir>
-        <imgdir name="61">
-          <int name="x1" value="320"/>
-          <int name="y1" value="-356"/>
-          <int name="x2" value="353"/>
-          <int name="y2" value="-364"/>
-          <int name="prev" value="60"/>
-          <int name="next" value="62"/>
-        </imgdir>
-        <imgdir name="62">
-          <int name="x1" value="353"/>
-          <int name="y1" value="-364"/>
-          <int name="x2" value="391"/>
-          <int name="y2" value="-371"/>
-          <int name="prev" value="61"/>
-          <int name="next" value="63"/>
-        </imgdir>
-        <imgdir name="63">
-          <int name="x1" value="391"/>
-          <int name="y1" value="-371"/>
-          <int name="x2" value="423"/>
-          <int name="y2" value="-376"/>
-          <int name="prev" value="62"/>
-          <int name="next" value="64"/>
-        </imgdir>
-        <imgdir name="64">
-          <int name="x1" value="423"/>
-          <int name="y1" value="-376"/>
-          <int name="x2" value="455"/>
-          <int name="y2" value="-378"/>
-          <int name="prev" value="63"/>
-          <int name="next" value="0"/>
-        </imgdir>
-        <imgdir name="65">
+        <imgdir name="49">
           <int name="x1" value="183"/>
           <int name="y1" value="-299"/>
           <int name="x2" value="210"/>
           <int name="y2" value="-325"/>
           <int name="prev" value="0"/>
-          <int name="next" value="66"/>
-        </imgdir>
-        <imgdir name="66">
-          <int name="x1" value="210"/>
-          <int name="y1" value="-325"/>
-          <int name="x2" value="236"/>
-          <int name="y2" value="-344"/>
-          <int name="prev" value="65"/>
-          <int name="next" value="67"/>
-        </imgdir>
-        <imgdir name="67">
-          <int name="x1" value="236"/>
-          <int name="y1" value="-344"/>
-          <int name="x2" value="259"/>
-          <int name="y2" value="-359"/>
-          <int name="prev" value="66"/>
-          <int name="next" value="68"/>
-        </imgdir>
-        <imgdir name="68">
-          <int name="x1" value="259"/>
-          <int name="y1" value="-359"/>
-          <int name="x2" value="295"/>
-          <int name="y2" value="-378"/>
-          <int name="prev" value="67"/>
-          <int name="next" value="69"/>
-        </imgdir>
-        <imgdir name="69">
-          <int name="x1" value="295"/>
-          <int name="y1" value="-378"/>
-          <int name="x2" value="331"/>
-          <int name="y2" value="-392"/>
-          <int name="prev" value="68"/>
-          <int name="next" value="70"/>
-        </imgdir>
-        <imgdir name="70">
-          <int name="x1" value="331"/>
-          <int name="y1" value="-392"/>
-          <int name="x2" value="369"/>
-          <int name="y2" value="-403"/>
-          <int name="prev" value="69"/>
-          <int name="next" value="71"/>
-        </imgdir>
-        <imgdir name="71">
-          <int name="x1" value="369"/>
-          <int name="y1" value="-403"/>
-          <int name="x2" value="416"/>
-          <int name="y2" value="-414"/>
-          <int name="prev" value="70"/>
-          <int name="next" value="72"/>
-        </imgdir>
-        <imgdir name="72">
-          <int name="x1" value="416"/>
-          <int name="y1" value="-414"/>
-          <int name="x2" value="456"/>
-          <int name="y2" value="-418"/>
-          <int name="prev" value="71"/>
-          <int name="next" value="0"/>
+          <int name="next" value="52"/>
         </imgdir>
-        <imgdir name="73">
+        <imgdir name="50">
           <int name="x1" value="195"/>
           <int name="y1" value="23"/>
           <int name="x2" value="234"/>
@@ -2912,7 +2708,23 @@
           <int name="prev" value="0"/>
           <int name="next" value="0"/>
         </imgdir>
-        <imgdir name="74">
+        <imgdir name="51">
+          <int name="x1" value="205"/>
+          <int name="y1" value="-307"/>
+          <int name="x2" value="242"/>
+          <int name="y2" value="-327"/>
+          <int name="prev" value="47"/>
+          <int name="next" value="56"/>
+        </imgdir>
+        <imgdir name="52">
+          <int name="x1" value="210"/>
+          <int name="y1" value="-325"/>
+          <int name="x2" value="236"/>
+          <int name="y2" value="-344"/>
+          <int name="prev" value="49"/>
+          <int name="next" value="55"/>
+        </imgdir>
+        <imgdir name="53">
           <int name="x1" value="226"/>
           <int name="y1" value="-9"/>
           <int name="x2" value="265"/>
@@ -2920,15 +2732,31 @@
           <int name="prev" value="0"/>
           <int name="next" value="0"/>
         </imgdir>
-        <imgdir name="75">
-          <int name="x1" value="287"/>
-          <int name="y1" value="-35"/>
-          <int name="x2" value="326"/>
-          <int name="y2" value="-41"/>
+        <imgdir name="54">
+          <int name="x1" value="233"/>
+          <int name="y1" value="-59"/>
+          <int name="x2" value="272"/>
+          <int name="y2" value="-65"/>
           <int name="prev" value="0"/>
           <int name="next" value="0"/>
         </imgdir>
-        <imgdir name="76">
+        <imgdir name="55">
+          <int name="x1" value="236"/>
+          <int name="y1" value="-344"/>
+          <int name="x2" value="259"/>
+          <int name="y2" value="-359"/>
+          <int name="prev" value="52"/>
+          <int name="next" value="58"/>
+        </imgdir>
+        <imgdir name="56">
+          <int name="x1" value="242"/>
+          <int name="y1" value="-327"/>
+          <int name="x2" value="278"/>
+          <int name="y2" value="-343"/>
+          <int name="prev" value="51"/>
+          <int name="next" value="60"/>
+        </imgdir>
+        <imgdir name="57">
           <int name="x1" value="250"/>
           <int name="y1" value="36"/>
           <int name="x2" value="289"/>
@@ -2936,15 +2764,63 @@
           <int name="prev" value="0"/>
           <int name="next" value="0"/>
         </imgdir>
-        <imgdir name="77">
-          <int name="x1" value="351"/>
-          <int name="y1" value="-23"/>
-          <int name="x2" value="390"/>
-          <int name="y2" value="-29"/>
+        <imgdir name="58">
+          <int name="x1" value="259"/>
+          <int name="y1" value="-359"/>
+          <int name="x2" value="295"/>
+          <int name="y2" value="-378"/>
+          <int name="prev" value="55"/>
+          <int name="next" value="62"/>
+        </imgdir>
+        <imgdir name="59">
+          <int name="x1" value="270"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="360"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="48"/>
+          <int name="next" value="68"/>
+        </imgdir>
+        <imgdir name="60">
+          <int name="x1" value="278"/>
+          <int name="y1" value="-343"/>
+          <int name="x2" value="320"/>
+          <int name="y2" value="-356"/>
+          <int name="prev" value="56"/>
+          <int name="next" value="63"/>
+        </imgdir>
+        <imgdir name="61">
+          <int name="x1" value="287"/>
+          <int name="y1" value="-35"/>
+          <int name="x2" value="326"/>
+          <int name="y2" value="-41"/>
           <int name="prev" value="0"/>
           <int name="next" value="0"/>
         </imgdir>
-        <imgdir name="78">
+        <imgdir name="62">
+          <int name="x1" value="295"/>
+          <int name="y1" value="-378"/>
+          <int name="x2" value="331"/>
+          <int name="y2" value="-392"/>
+          <int name="prev" value="58"/>
+          <int name="next" value="64"/>
+        </imgdir>
+        <imgdir name="63">
+          <int name="x1" value="320"/>
+          <int name="y1" value="-356"/>
+          <int name="x2" value="353"/>
+          <int name="y2" value="-364"/>
+          <int name="prev" value="60"/>
+          <int name="next" value="67"/>
+        </imgdir>
+        <imgdir name="64">
+          <int name="x1" value="331"/>
+          <int name="y1" value="-392"/>
+          <int name="x2" value="369"/>
+          <int name="y2" value="-403"/>
+          <int name="prev" value="62"/>
+          <int name="next" value="69"/>
+        </imgdir>
+        <imgdir name="65">
           <int name="x1" value="349"/>
           <int name="y1" value="-68"/>
           <int name="x2" value="388"/>
@@ -2952,187 +2828,291 @@
           <int name="prev" value="0"/>
           <int name="next" value="0"/>
         </imgdir>
-        <imgdir name="79">
-          <int name="x1" value="233"/>
-          <int name="y1" value="-59"/>
-          <int name="x2" value="272"/>
-          <int name="y2" value="-65"/>
+        <imgdir name="66">
+          <int name="x1" value="351"/>
+          <int name="y1" value="-23"/>
+          <int name="x2" value="390"/>
+          <int name="y2" value="-29"/>
           <int name="prev" value="0"/>
           <int name="next" value="0"/>
         </imgdir>
-        <imgdir name="80">
-          <int name="x1" value="452"/>
-          <int name="y1" value="-378"/>
-          <int name="x2" value="541"/>
-          <int name="y2" value="-379"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="81"/>
-        </imgdir>
-        <imgdir name="81">
-          <int name="x1" value="541"/>
-          <int name="y1" value="-379"/>
-          <int name="x2" value="601"/>
-          <int name="y2" value="-373"/>
-          <int name="prev" value="80"/>
-          <int name="next" value="82"/>
+        <imgdir name="67">
+          <int name="x1" value="353"/>
+          <int name="y1" value="-364"/>
+          <int name="x2" value="391"/>
+          <int name="y2" value="-371"/>
+          <int name="prev" value="63"/>
+          <int name="next" value="70"/>
         </imgdir>
-        <imgdir name="82">
-          <int name="x1" value="601"/>
-          <int name="y1" value="-373"/>
-          <int name="x2" value="659"/>
-          <int name="y2" value="-362"/>
-          <int name="prev" value="81"/>
-          <int name="next" value="83"/>
+        <imgdir name="68">
+          <int name="x1" value="360"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="450"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="59"/>
+          <int name="next" value="74"/>
         </imgdir>
-        <imgdir name="83">
-          <int name="x1" value="659"/>
-          <int name="y1" value="-362"/>
-          <int name="x2" value="702"/>
-          <int name="y2" value="-342"/>
-          <int name="prev" value="82"/>
-          <int name="next" value="84"/>
+        <imgdir name="69">
+          <int name="x1" value="369"/>
+          <int name="y1" value="-403"/>
+          <int name="x2" value="416"/>
+          <int name="y2" value="-414"/>
+          <int name="prev" value="64"/>
+          <int name="next" value="71"/>
         </imgdir>
-        <imgdir name="84">
-          <int name="x1" value="702"/>
-          <int name="y1" value="-342"/>
-          <int name="x2" value="756"/>
-          <int name="y2" value="-306"/>
-          <int name="prev" value="83"/>
-          <int name="next" value="85"/>
+        <imgdir name="70">
+          <int name="x1" value="391"/>
+          <int name="y1" value="-371"/>
+          <int name="x2" value="423"/>
+          <int name="y2" value="-376"/>
+          <int name="prev" value="67"/>
+          <int name="next" value="72"/>
         </imgdir>
-        <imgdir name="85">
-          <int name="x1" value="756"/>
-          <int name="y1" value="-306"/>
-          <int name="x2" value="825"/>
-          <int name="y2" value="-238"/>
-          <int name="prev" value="84"/>
-          <int name="next" value="86"/>
+        <imgdir name="71">
+          <int name="x1" value="416"/>
+          <int name="y1" value="-414"/>
+          <int name="x2" value="456"/>
+          <int name="y2" value="-418"/>
+          <int name="prev" value="69"/>
+          <int name="next" value="0"/>
         </imgdir>
-        <imgdir name="86">
-          <int name="x1" value="825"/>
-          <int name="y1" value="-238"/>
-          <int name="x2" value="854"/>
-          <int name="y2" value="-220"/>
-          <int name="prev" value="85"/>
+        <imgdir name="72">
+          <int name="x1" value="423"/>
+          <int name="y1" value="-376"/>
+          <int name="x2" value="455"/>
+          <int name="y2" value="-378"/>
+          <int name="prev" value="70"/>
           <int name="next" value="0"/>
         </imgdir>
-        <imgdir name="87">
+        <imgdir name="73">
           <int name="x1" value="443"/>
           <int name="y1" value="-418"/>
           <int name="x2" value="514"/>
           <int name="y2" value="-419"/>
           <int name="prev" value="0"/>
-          <int name="next" value="88"/>
+          <int name="next" value="76"/>
         </imgdir>
-        <imgdir name="88">
+        <imgdir name="74">
+          <int name="x1" value="450"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="540"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="68"/>
+          <int name="next" value="77"/>
+        </imgdir>
+        <imgdir name="75">
+          <int name="x1" value="452"/>
+          <int name="y1" value="-378"/>
+          <int name="x2" value="541"/>
+          <int name="y2" value="-379"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="78"/>
+        </imgdir>
+        <imgdir name="76">
           <int name="x1" value="514"/>
           <int name="y1" value="-419"/>
           <int name="x2" value="556"/>
           <int name="y2" value="-416"/>
-          <int name="prev" value="87"/>
-          <int name="next" value="89"/>
+          <int name="prev" value="73"/>
+          <int name="next" value="79"/>
         </imgdir>
-        <imgdir name="89">
+        <imgdir name="77">
+          <int name="x1" value="540"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="630"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="74"/>
+          <int name="next" value="83"/>
+        </imgdir>
+        <imgdir name="78">
+          <int name="x1" value="541"/>
+          <int name="y1" value="-379"/>
+          <int name="x2" value="601"/>
+          <int name="y2" value="-373"/>
+          <int name="prev" value="75"/>
+          <int name="next" value="82"/>
+        </imgdir>
+        <imgdir name="79">
           <int name="x1" value="556"/>
           <int name="y1" value="-416"/>
           <int name="x2" value="585"/>
           <int name="y2" value="-413"/>
-          <int name="prev" value="88"/>
-          <int name="next" value="90"/>
+          <int name="prev" value="76"/>
+          <int name="next" value="80"/>
         </imgdir>
-        <imgdir name="90">
+        <imgdir name="80">
           <int name="x1" value="585"/>
           <int name="y1" value="-413"/>
           <int name="x2" value="631"/>
           <int name="y2" value="-403"/>
-          <int name="prev" value="89"/>
-          <int name="next" value="91"/>
+          <int name="prev" value="79"/>
+          <int name="next" value="84"/>
         </imgdir>
-        <imgdir name="91">
+        <imgdir name="81">
+          <int name="x1" value="595"/>
+          <int name="y1" value="-226"/>
+          <int name="x2" value="641"/>
+          <int name="y2" value="-226"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="0"/>
+        </imgdir>
+        <imgdir name="82">
+          <int name="x1" value="601"/>
+          <int name="y1" value="-373"/>
+          <int name="x2" value="659"/>
+          <int name="y2" value="-362"/>
+          <int name="prev" value="78"/>
+          <int name="next" value="87"/>
+        </imgdir>
+        <imgdir name="83">
+          <int name="x1" value="630"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="720"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="77"/>
+          <int name="next" value="90"/>
+        </imgdir>
+        <imgdir name="84">
           <int name="x1" value="631"/>
           <int name="y1" value="-403"/>
           <int name="x2" value="673"/>
           <int name="y2" value="-390"/>
-          <int name="prev" value="90"/>
-          <int name="next" value="92"/>
+          <int name="prev" value="80"/>
+          <int name="next" value="88"/>
+        </imgdir>
+        <imgdir name="85">
+          <int name="x1" value="631"/>
+          <int name="y1" value="-138"/>
+          <int name="x2" value="686"/>
+          <int name="y2" value="-138"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="0"/>
         </imgdir>
-        <imgdir name="92">
+        <imgdir name="87">
+          <int name="x1" value="659"/>
+          <int name="y1" value="-362"/>
+          <int name="x2" value="702"/>
+          <int name="y2" value="-342"/>
+          <int name="prev" value="82"/>
+          <int name="next" value="89"/>
+        </imgdir>
+        <imgdir name="88">
           <int name="x1" value="673"/>
           <int name="y1" value="-390"/>
           <int name="x2" value="722"/>
           <int name="y2" value="-374"/>
-          <int name="prev" value="91"/>
-          <int name="next" value="93"/>
+          <int name="prev" value="84"/>
+          <int name="next" value="91"/>
         </imgdir>
-        <imgdir name="93">
+        <imgdir name="89">
+          <int name="x1" value="702"/>
+          <int name="y1" value="-342"/>
+          <int name="x2" value="756"/>
+          <int name="y2" value="-306"/>
+          <int name="prev" value="87"/>
+          <int name="next" value="92"/>
+        </imgdir>
+        <imgdir name="90">
+          <int name="x1" value="720"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="810"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="83"/>
+          <int name="next" value="96"/>
+        </imgdir>
+        <imgdir name="91">
           <int name="x1" value="722"/>
           <int name="y1" value="-374"/>
           <int name="x2" value="784"/>
           <int name="y2" value="-342"/>
-          <int name="prev" value="92"/>
-          <int name="next" value="94"/>
+          <int name="prev" value="88"/>
+          <int name="next" value="95"/>
+        </imgdir>
+        <imgdir name="92">
+          <int name="x1" value="756"/>
+          <int name="y1" value="-306"/>
+          <int name="x2" value="825"/>
+          <int name="y2" value="-238"/>
+          <int name="prev" value="89"/>
+          <int name="next" value="97"/>
+        </imgdir>
+        <imgdir name="93">
+          <int name="x1" value="756"/>
+          <int name="y1" value="-201"/>
+          <int name="x2" value="801"/>
+          <int name="y2" value="-201"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="0"/>
         </imgdir>
         <imgdir name="94">
+          <int name="x1" value="760"/>
+          <int name="y1" value="-120"/>
+          <int name="x2" value="840"/>
+          <int name="y2" value="-120"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="0"/>
+        </imgdir>
+        <imgdir name="95">
           <int name="x1" value="784"/>
           <int name="y1" value="-342"/>
           <int name="x2" value="868"/>
           <int name="y2" value="-281"/>
-          <int name="prev" value="93"/>
-          <int name="next" value="95"/>
-        </imgdir>
-        <imgdir name="95">
-          <int name="x1" value="868"/>
-          <int name="y1" value="-281"/>
-          <int name="x2" value="887"/>
-          <int name="y2" value="-273"/>
-          <int name="prev" value="94"/>
-          <int name="next" value="0"/>
+          <int name="prev" value="91"/>
+          <int name="next" value="98"/>
         </imgdir>
         <imgdir name="96">
-          <int name="x1" value="631"/>
-          <int name="y1" value="-138"/>
-          <int name="x2" value="686"/>
-          <int name="y2" value="-138"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="0"/>
+          <int name="x1" value="810"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="900"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="90"/>
+          <int name="next" value="99"/>
         </imgdir>
         <imgdir name="97">
-          <int name="x1" value="595"/>
-          <int name="y1" value="-226"/>
-          <int name="x2" value="641"/>
-          <int name="y2" value="-226"/>
-          <int name="prev" value="0"/>
+          <int name="x1" value="825"/>
+          <int name="y1" value="-238"/>
+          <int name="x2" value="854"/>
+          <int name="y2" value="-220"/>
+          <int name="prev" value="92"/>
           <int name="next" value="0"/>
         </imgdir>
         <imgdir name="98">
-          <int name="x1" value="760"/>
-          <int name="y1" value="-120"/>
-          <int name="x2" value="840"/>
-          <int name="y2" value="-120"/>
-          <int name="prev" value="0"/>
+          <int name="x1" value="868"/>
+          <int name="y1" value="-281"/>
+          <int name="x2" value="887"/>
+          <int name="y2" value="-273"/>
+          <int name="prev" value="95"/>
           <int name="next" value="0"/>
         </imgdir>
         <imgdir name="99">
-          <int name="x1" value="756"/>
-          <int name="y1" value="-201"/>
-          <int name="x2" value="801"/>
-          <int name="y2" value="-201"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="0"/>
+          <int name="x1" value="900"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="990"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="96"/>
+          <int name="next" value="100"/>
         </imgdir>
         <imgdir name="100">
-          <int name="x1" value="-1509"/>
-          <int name="y1" value="-185"/>
-          <int name="x2" value="-1461"/>
-          <int name="y2" value="-187"/>
-          <int name="prev" value="0"/>
+          <int name="x1" value="990"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="1080"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="99"/>
+          <int name="next" value="101"/>
+        </imgdir>
+        <imgdir name="101">
+          <int name="x1" value="1080"/>
+          <int name="y1" value="88"/>
+          <int name="x2" value="1170"/>
+          <int name="y2" value="88"/>
+          <int name="prev" value="100"/>
           <int name="next" value="0"/>
         </imgdir>
       </imgdir>
     </imgdir>
     <imgdir name="7">
       <imgdir name="12">
-        <imgdir name="101">
+        <imgdir name="86">
           <int name="x1" value="637"/>
           <int name="y1" value="-704"/>
           <int name="x2" value="717"/>
@@ -3143,83 +3123,102 @@
       </imgdir>
     </imgdir>
   </imgdir>
-  <imgdir name="ladderRope">
-  </imgdir>
-  <imgdir name="miniMap">
-    <canvas name="canvas" width="191" height="78">
-    </canvas>
-    <int name="width" value="3068"/>
-    <int name="height" value="1257"/>
-    <int name="centerX" value="1848"/>
-    <int name="centerY" value="877"/>
-    <int name="mag" value="4"/>
-  </imgdir>
-  <imgdir name="portal">
+  <imgdir name="life">
     <imgdir name="0">
-      <string name="pn" value="sp"/>
-      <int name="pt" value="0"/>
-      <int name="x" value="228"/>
-      <int name="y" value="-67"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
+      <string name="id" value="1101000"/>
+      <int name="x" value="509"/>
+      <int name="y" value="83"/>
+      <int name="cy" value="88"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="459"/>
+      <int name="rx1" value="559"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="74"/>
     </imgdir>
     <imgdir name="1">
-      <string name="pn" value="west00"/>
-      <int name="pt" value="7"/>
-      <int name="x" value="-1644"/>
-      <int name="y" value="86"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
-      <int name="horizontalImpact" value="0"/>
-      <string name="script" value="rankRoom"/>
+      <string name="id" value="1101002"/>
+      <int name="x" value="-15"/>
+      <int name="y" value="81"/>
+      <int name="cy" value="88"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="-65"/>
+      <int name="rx1" value="35"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="44"/>
     </imgdir>
     <imgdir name="2">
-      <string name="pn" value="east00"/>
-      <int name="pt" value="2"/>
-      <int name="x" value="983"/>
-      <int name="y" value="87"/>
-      <int name="tm" value="130030006"/>
-      <string name="tn" value="west00"/>
+      <string name="id" value="1101003"/>
+      <int name="x" value="-1045"/>
+      <int name="y" value="-115"/>
+      <int name="cy" value="-111"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="-1095"/>
+      <int name="rx1" value="-995"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="26"/>
     </imgdir>
     <imgdir name="3">
-      <string name="pn" value="tp"/>
-      <int name="pt" value="6"/>
-      <int name="x" value="-178"/>
-      <int name="y" value="76"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
+      <string name="id" value="1101004"/>
+      <int name="x" value="-993"/>
+      <int name="y" value="78"/>
+      <int name="cy" value="88"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="-1043"/>
+      <int name="rx1" value="-943"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="27"/>
     </imgdir>
     <imgdir name="4">
-      <string name="pn" value="tp"/>
-      <int name="pt" value="6"/>
-      <int name="x" value="-278"/>
-      <int name="y" value="80"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
+      <string name="id" value="1101005"/>
+      <int name="x" value="-1300"/>
+      <int name="y" value="81"/>
+      <int name="cy" value="88"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="-1356"/>
+      <int name="rx1" value="-1256"/>
+      <int name="f" value="1"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="10"/>
     </imgdir>
     <imgdir name="5">
-      <string name="pn" value="tp"/>
-      <int name="pt" value="6"/>
-      <int name="x" value="730"/>
-      <int name="y" value="86"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
+      <string name="id" value="1101006"/>
+      <int name="x" value="-1486"/>
+      <int name="y" value="-193"/>
+      <int name="cy" value="-188"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="-1554"/>
+      <int name="rx1" value="-1454"/>
+      <int name="f" value="1"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="5"/>
     </imgdir>
     <imgdir name="6">
-      <string name="pn" value="tp"/>
-      <int name="pt" value="6"/>
-      <int name="x" value="-772"/>
-      <int name="y" value="81"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
+      <string name="id" value="1101007"/>
+      <int name="x" value="-1105"/>
+      <int name="y" value="21"/>
+      <int name="cy" value="25"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="-1155"/>
+      <int name="rx1" value="-1055"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="20"/>
     </imgdir>
     <imgdir name="7">
-      <string name="pn" value="tp"/>
-      <int name="pt" value="6"/>
-      <int name="x" value="-485"/>
-      <int name="y" value="75"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
+      <string name="id" value="1101001"/>
+      <int name="x" value="384"/>
+      <int name="y" value="84"/>
+      <int name="cy" value="88"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="334"/>
+      <int name="rx1" value="434"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="68"/>
     </imgdir>
   </imgdir>
 </imgdir>
diff --git a/wz/Map.wz/Map/Map2/209000000.img.xml b/wz/Map.wz/Map/Map2/209000000.img.xml
index e4472f2a7..ac9dbd2b2 100644
--- a/wz/Map.wz/Map/Map2/209000000.img.xml
+++ b/wz/Map.wz/Map/Map2/209000000.img.xml
@@ -2106,6 +2106,66 @@
       <string name="tn" value="chimney00"/>
       <string name="pn" value="chimney00_2"/>
     </imgdir>
+    <imgdir name="19">
+      <int name="x" value="2735"/>
+      <int name="y" value="147"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
+    <imgdir name="20">
+      <int name="x" value="3000"/>
+      <int name="y" value="-80"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
+    <imgdir name="21">
+      <int name="x" value="1951"/>
+      <int name="y" value="148"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
+    <imgdir name="22">
+      <int name="x" value="1592"/>
+      <int name="y" value="145"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
+    <imgdir name="23">
+      <int name="x" value="636"/>
+      <int name="y" value="146"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
+    <imgdir name="24">
+      <int name="x" value="-489"/>
+      <int name="y" value="-28"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
   </imgdir>
   <imgdir name="reactor">
     <imgdir name="0">
@@ -3615,8 +3675,8 @@
       <int name="y" value="150"/>
       <int name="cy" value="153"/>
       <int name="mobTime" value="0"/>
-      <int name="rx0" value="2488"/>
-      <int name="rx1" value="2588"/>
+      <int name="rx0" value="2487"/>
+      <int name="rx1" value="2587"/>
       <int name="f" value="1"/>
       <string name="type" value="n"/>
       <int name="fh" value="131"/>
diff --git a/wz/Map.wz/Map/Map6/610020006.img.xml b/wz/Map.wz/Map/Map6/610020006.img.xml
index 15db62a09..3865c89ae 100644
--- a/wz/Map.wz/Map/Map6/610020006.img.xml
+++ b/wz/Map.wz/Map/Map6/610020006.img.xml
@@ -5,7 +5,7 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="682000000"/>
+    <int name="returnMap" value="610030000"/>
     <int name="forcedReturn" value="999999999"/>
     <float name="mobRate" value="0.8"/>
     <string name="bgm" value="BgmGL/CrimsonwoodKeep"/>
diff --git a/wz/Map.wz/Map/Map6/610030000.img.xml b/wz/Map.wz/Map/Map6/610030000.img.xml
index 607545b8d..e93c4763a 100644
--- a/wz/Map.wz/Map/Map6/610030000.img.xml
+++ b/wz/Map.wz/Map/Map6/610030000.img.xml
@@ -1,1387 +1,1414 @@
 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
 <imgdir name="610030000.img">
   <imgdir name="info">
-    <int name="version" value="10"/>
+    <string name="bgm" value="BgmGL/Courtyard"/>
     <int name="cloud" value="0"/>
-    <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="682000000"/>
     <int name="forcedReturn" value="999999999"/>
-    <float name="mobRate" value="0.8"/>
-    <string name="bgm" value="BgmGL/Courtyard"/>
-    <string name="mapMark" value="Crimsonwood"/>
     <int name="hideMinimap" value="0"/>
+    <string name="mapMark" value="Crimsonwood"/>
+    <float name="mobRate" value="0.8"/>
+    <int name="returnMap" value="610030000"/>
+    <int name="town" value="1"/>
+    <int name="version" value="10"/>
     <int name="fieldLimit" value="0"/>
-    <int name="fly" value="0"/>
     <string name="onFirstUserEnter" value=""/>
     <string name="onUserEnter" value=""/>
-    <int name="VRTop" value="-721"/>
+    <int name="fly" value="0"/>
     <int name="VRLeft" value="-1108"/>
-    <int name="VRBottom" value="270"/>
     <int name="VRRight" value="1345"/>
+    <int name="VRTop" value="-721"/>
+    <int name="VRBottom" value="270"/>
   </imgdir>
-  <imgdir name="back">
-    <imgdir name="0">
-      <string name="bS" value="masteriaGL"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="0"/>
-      <int name="f" value="0"/>
-      <int name="x" value="0"/>
-      <int name="y" value="0"/>
-      <int name="rx" value="0"/>
-      <int name="ry" value="0"/>
-      <int name="type" value="3"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="1">
-      <string name="bS" value="masteriaGL"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="1"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-1"/>
-      <int name="y" value="-15"/>
-      <int name="rx" value="-5"/>
-      <int name="ry" value="-5"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="2">
-      <string name="bS" value="masteriaGL"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="2"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-101"/>
-      <int name="y" value="-268"/>
-      <int name="rx" value="-8"/>
-      <int name="ry" value="-4"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="3">
-      <string name="bS" value="masteriaGL"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="3"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-46"/>
-      <int name="y" value="-137"/>
-      <int name="rx" value="-10"/>
-      <int name="ry" value="-6"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="4">
-      <string name="bS" value="masteriaGL"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="4"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-16"/>
-      <int name="y" value="-188"/>
-      <int name="rx" value="-13"/>
-      <int name="ry" value="-8"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="5">
-      <string name="bS" value="masteriaGL"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="5"/>
-      <int name="f" value="0"/>
-      <int name="x" value="16"/>
-      <int name="y" value="-265"/>
-      <int name="rx" value="-15"/>
-      <int name="ry" value="-9"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="6">
-      <string name="bS" value="masteriaGL"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="6"/>
-      <int name="f" value="0"/>
-      <int name="x" value="121"/>
-      <int name="y" value="-363"/>
-      <int name="rx" value="-20"/>
-      <int name="ry" value="-10"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="7">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="107"/>
-      <int name="f" value="0"/>
-      <int name="x" value="144"/>
-      <int name="y" value="-65"/>
-      <int name="rx" value="-50"/>
-      <int name="ry" value="-50"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-  </imgdir>
-  <imgdir name="life">
-    <imgdir name="0">
-      <string name="type" value="n"/>
-      <string name="id" value="9201107"/>
-      <int name="x" value="-715"/>
-      <int name="y" value="165"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="19"/>
-      <int name="cy" value="171"/>
-      <int name="rx0" value="-765"/>
-      <int name="rx1" value="-665"/>
-    </imgdir>
-    <imgdir name="1">
-      <string name="type" value="n"/>
-      <string name="id" value="9201108"/>
-      <int name="x" value="-179"/>
-      <int name="y" value="159"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="25"/>
-      <int name="cy" value="171"/>
-      <int name="rx0" value="-229"/>
-      <int name="rx1" value="-129"/>
-    </imgdir>
-    <imgdir name="2">
-      <string name="type" value="n"/>
-      <string name="id" value="9201109"/>
-      <int name="x" value="-460"/>
-      <int name="y" value="161"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="21"/>
-      <int name="cy" value="171"/>
-      <int name="rx0" value="-510"/>
-      <int name="rx1" value="-410"/>
-    </imgdir>
-    <imgdir name="3">
-      <string name="type" value="n"/>
-      <string name="id" value="9201110"/>
-      <int name="x" value="96"/>
-      <int name="y" value="165"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="24"/>
-      <int name="cy" value="171"/>
-      <int name="rx0" value="46"/>
-      <int name="rx1" value="146"/>
-    </imgdir>
-    <imgdir name="4">
-      <string name="type" value="n"/>
-      <string name="id" value="9201111"/>
-      <int name="x" value="364"/>
-      <int name="y" value="166"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="29"/>
-      <int name="cy" value="171"/>
-      <int name="rx0" value="314"/>
-      <int name="rx1" value="414"/>
-    </imgdir>
-  </imgdir>
-  <imgdir name="reactor">
+  <imgdir name="miniMap">
+    <canvas name="canvas" width="160" height="42">
+    </canvas>
+    <int name="width" value="2564"/>
+    <int name="height" value="675"/>
+    <int name="centerX" value="1166"/>
+    <int name="centerY" value="221"/>
+    <int name="mag" value="4"/>
   </imgdir>
   <imgdir name="0">
     <imgdir name="info">
     </imgdir>
-    <imgdir name="tile">
-    </imgdir>
     <imgdir name="obj">
     </imgdir>
-  </imgdir>
-  <imgdir name="1">
-    <imgdir name="info">
-    </imgdir>
     <imgdir name="tile">
     </imgdir>
-    <imgdir name="obj">
-    </imgdir>
   </imgdir>
-  <imgdir name="2">
+  <imgdir name="1">
     <imgdir name="info">
-    </imgdir>
-    <imgdir name="tile">
+      <string name="tS" value="masteriaGL3"/>
     </imgdir>
     <imgdir name="obj">
     </imgdir>
-  </imgdir>
-  <imgdir name="3">
-    <imgdir name="info">
-      <string name="tS" value="masteriaGL3"/>
-      <int name="tSMag" value="1"/>
-    </imgdir>
     <imgdir name="tile">
       <imgdir name="0">
         <int name="x" value="540"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="edU"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
       <imgdir name="1">
-        <int name="x" value="540"/>
+        <int name="x" value="-1080"/>
         <int name="y" value="180"/>
-        <string name="u" value="edD"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="edU"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="3">
-        <int name="x" value="630"/>
+      <imgdir name="2">
+        <int name="x" value="-1080"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="edD"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="12">
-        <int name="x" value="810"/>
-        <int name="y" value="60"/>
-        <string name="u" value="slLU"/>
+      <imgdir name="3">
+        <int name="x" value="540"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="edD"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="8">
-        <int name="x" value="720"/>
+      <imgdir name="4">
+        <int name="x" value="630"/>
         <int name="y" value="120"/>
-        <string name="u" value="slLU"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="5">
+        <int name="x" value="-1080"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="4">
+      <imgdir name="6">
         <int name="x" value="630"/>
         <int name="y" value="180"/>
-        <string name="u" value="slLU"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="edD"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="19">
-        <int name="x" value="900"/>
-        <int name="y" value="-60"/>
+      <imgdir name="7">
+        <int name="x" value="-1080"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="14">
-        <int name="x" value="900"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="17">
-        <int name="x" value="990"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="bsc"/>
+      <imgdir name="8">
+        <int name="x" value="-990"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="21">
-        <int name="x" value="1080"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="23">
-        <int name="x" value="1170"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="25">
-        <int name="x" value="1260"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="24">
-        <int name="x" value="1260"/>
-        <int name="y" value="0"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="10">
-        <int name="x" value="810"/>
-        <int name="y" value="0"/>
-        <string name="u" value="bsc"/>
+      <imgdir name="9">
+        <int name="x" value="630"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="slLU"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="16">
-        <int name="x" value="900"/>
-        <int name="y" value="0"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="15">
-        <int name="x" value="1170"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="enH0"/>
+      <imgdir name="10">
+        <int name="x" value="630"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="18">
-        <int name="x" value="990"/>
-        <int name="y" value="0"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="20">
-        <int name="x" value="1080"/>
-        <int name="y" value="0"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="5"/>
+      <imgdir name="11">
+        <int name="x" value="-990"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="22">
-        <int name="x" value="1170"/>
-        <int name="y" value="0"/>
-        <string name="u" value="bsc"/>
+      <imgdir name="12">
+        <int name="x" value="-810"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="29">
-        <int name="x" value="1260"/>
-        <int name="y" value="60"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
-        <int name="zM" value="5"/>
       </imgdir>
       <imgdir name="13">
-        <int name="x" value="810"/>
-        <int name="y" value="60"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="6">
         <int name="x" value="990"/>
         <int name="y" value="60"/>
+        <int name="zM" value="7"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="5">
-        <int name="x" value="630"/>
+      <imgdir name="14">
+        <int name="x" value="-810"/>
         <int name="y" value="180"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="2">
-        <int name="x" value="630"/>
-        <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="9">
-        <int name="x" value="720"/>
-        <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="7">
+      <imgdir name="15">
         <int name="x" value="1170"/>
         <int name="y" value="60"/>
+        <int name="zM" value="7"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="45">
+      <imgdir name="16">
         <int name="x" value="720"/>
-        <int name="y" value="180"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="11">
-        <int name="x" value="810"/>
-        <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="28">
-        <int name="x" value="990"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="42">
-        <int name="x" value="900"/>
-        <int name="y" value="0"/>
+        <int name="zM" value="7"/>
         <string name="u" value="slLU"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="43">
-        <int name="x" value="990"/>
+      <imgdir name="17">
+        <int name="x" value="-900"/>
         <int name="y" value="180"/>
-        <string name="u" value="enH1"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="44">
-        <int name="x" value="1080"/>
+      <imgdir name="18">
+        <int name="x" value="720"/>
         <int name="y" value="120"/>
+        <int name="zM" value="7"/>
         <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="40">
-        <int name="x" value="1260"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="5"/>
+      <imgdir name="19">
+        <int name="x" value="-900"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="41">
-        <int name="x" value="1080"/>
+      <imgdir name="20">
+        <int name="x" value="-360"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="34">
-        <int name="x" value="1170"/>
-        <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="38">
-        <int name="x" value="1080"/>
-        <int name="y" value="60"/>
+      <imgdir name="21">
+        <int name="x" value="810"/>
+        <int name="y" value="0"/>
+        <int name="zM" value="7"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="39">
-        <int name="x" value="1170"/>
+      <imgdir name="22">
+        <int name="x" value="-360"/>
         <int name="y" value="180"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="31">
-        <int name="x" value="1260"/>
-        <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="5"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="32">
-        <int name="x" value="900"/>
+      <imgdir name="23">
+        <int name="x" value="810"/>
         <int name="y" value="120"/>
+        <int name="zM" value="7"/>
         <string name="u" value="bsc"/>
         <int name="no" value="4"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="37">
-        <int name="x" value="1260"/>
+      <imgdir name="24">
+        <int name="x" value="810"/>
+        <int name="y" value="60"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="slLU"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="25">
+        <int name="x" value="-720"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="27">
-        <int name="x" value="1080"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="5"/>
       </imgdir>
       <imgdir name="26">
-        <int name="x" value="720"/>
-        <int name="y" value="60"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="36">
-        <int name="x" value="900"/>
+        <int name="x" value="-720"/>
         <int name="y" value="180"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-      <imgdir name="30">
-        <int name="x" value="990"/>
-        <int name="y" value="-60"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="35">
+      <imgdir name="27">
         <int name="x" value="810"/>
+        <int name="y" value="60"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
+      </imgdir>
+      <imgdir name="28">
+        <int name="x" value="-630"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="5"/>
       </imgdir>
-      <imgdir name="33">
+      <imgdir name="29">
         <int name="x" value="900"/>
-        <int name="y" value="60"/>
+        <int name="y" value="-60"/>
+        <int name="zM" value="7"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="5"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="obj">
-    </imgdir>
-  </imgdir>
-  <imgdir name="4">
-    <imgdir name="info">
-    </imgdir>
-    <imgdir name="tile">
-    </imgdir>
-    <imgdir name="obj">
-    </imgdir>
-  </imgdir>
-  <imgdir name="5">
-    <imgdir name="info">
-      <string name="tS" value="masteriaGL3"/>
-      <int name="tSMag" value="1"/>
-    </imgdir>
-    <imgdir name="tile">
-      <imgdir name="0">
-        <int name="x" value="-1080"/>
-        <int name="y" value="180"/>
-        <string name="u" value="edU"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="1">
-        <int name="x" value="-1080"/>
+      <imgdir name="30">
+        <int name="x" value="-630"/>
         <int name="y" value="180"/>
-        <string name="u" value="edD"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="8">
-        <int name="x" value="-900"/>
-        <int name="y" value="180"/>
+      <imgdir name="31">
+        <int name="x" value="1170"/>
+        <int name="y" value="-60"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="9">
-        <int name="x" value="-900"/>
-        <int name="y" value="180"/>
-        <string name="u" value="enH1"/>
+      <imgdir name="32">
+        <int name="x" value="900"/>
+        <int name="y" value="0"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="4">
-        <int name="x" value="-990"/>
+      <imgdir name="33">
+        <int name="x" value="-540"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
-      </imgdir>
-      <imgdir name="5">
-        <int name="x" value="-990"/>
-        <int name="y" value="180"/>
-        <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
-      </imgdir>
-      <imgdir name="2">
-        <int name="x" value="-1080"/>
-        <int name="y" value="180"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="3">
-        <int name="x" value="-1080"/>
+      <imgdir name="34">
+        <int name="x" value="-540"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="18">
+      <imgdir name="35">
+        <int name="x" value="990"/>
+        <int name="y" value="-60"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="36">
         <int name="x" value="-450"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="19">
+      <imgdir name="37">
+        <int name="x" value="990"/>
+        <int name="y" value="0"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
+      </imgdir>
+      <imgdir name="38">
+        <int name="x" value="900"/>
+        <int name="y" value="-60"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="39">
         <int name="x" value="-450"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="16">
-        <int name="x" value="-540"/>
+      <imgdir name="40">
+        <int name="x" value="-270"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="41">
+        <int name="x" value="1080"/>
+        <int name="y" value="0"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="42">
+        <int name="x" value="1080"/>
+        <int name="y" value="-60"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="17">
-        <int name="x" value="-540"/>
+      <imgdir name="43">
+        <int name="x" value="-270"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="14">
-        <int name="x" value="-630"/>
+      <imgdir name="44">
+        <int name="x" value="1170"/>
+        <int name="y" value="0"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="45">
+        <int name="x" value="90"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="15">
-        <int name="x" value="-630"/>
+      <imgdir name="46">
+        <int name="x" value="1170"/>
+        <int name="y" value="-60"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="47">
+        <int name="x" value="90"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="12">
-        <int name="x" value="-720"/>
+      <imgdir name="48">
+        <int name="x" value="-180"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="13">
-        <int name="x" value="-720"/>
+      <imgdir name="49">
+        <int name="x" value="1260"/>
+        <int name="y" value="0"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
+      </imgdir>
+      <imgdir name="50">
+        <int name="x" value="-180"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="6">
-        <int name="x" value="-810"/>
+      <imgdir name="51">
+        <int name="x" value="1260"/>
+        <int name="y" value="-60"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
+      </imgdir>
+      <imgdir name="52">
+        <int name="x" value="-90"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="7">
-        <int name="x" value="-810"/>
+      <imgdir name="53">
+        <int name="x" value="720"/>
+        <int name="y" value="60"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
+      </imgdir>
+      <imgdir name="54">
+        <int name="x" value="-90"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
-      </imgdir>
-      <imgdir name="10">
-        <int name="x" value="-360"/>
-        <int name="y" value="180"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="11">
-        <int name="x" value="-360"/>
-        <int name="y" value="180"/>
+      <imgdir name="55">
+        <int name="x" value="1080"/>
+        <int name="y" value="-60"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="28">
+      <imgdir name="56">
         <int name="x" value="0"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="29">
+      <imgdir name="57">
+        <int name="x" value="990"/>
+        <int name="y" value="120"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="58">
+        <int name="x" value="1260"/>
+        <int name="y" value="60"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
+      </imgdir>
+      <imgdir name="59">
         <int name="x" value="0"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="26">
-        <int name="x" value="-90"/>
+      <imgdir name="60">
+        <int name="x" value="180"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="27">
-        <int name="x" value="-90"/>
-        <int name="y" value="180"/>
+      <imgdir name="61">
+        <int name="x" value="990"/>
+        <int name="y" value="-60"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="24">
-        <int name="x" value="-180"/>
-        <int name="y" value="180"/>
-        <string name="u" value="enH1"/>
+      <imgdir name="62">
+        <int name="x" value="1260"/>
+        <int name="y" value="120"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="25">
-        <int name="x" value="-180"/>
+      <imgdir name="63">
+        <int name="x" value="180"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="20">
-        <int name="x" value="-270"/>
+      <imgdir name="64">
+        <int name="x" value="360"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="21">
-        <int name="x" value="-270"/>
+      <imgdir name="65">
+        <int name="x" value="900"/>
+        <int name="y" value="120"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
+      </imgdir>
+      <imgdir name="66">
+        <int name="x" value="900"/>
+        <int name="y" value="60"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="67">
+        <int name="x" value="360"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="22">
-        <int name="x" value="90"/>
+      <imgdir name="68">
+        <int name="x" value="1170"/>
+        <int name="y" value="120"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="69">
+        <int name="x" value="270"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="23">
-        <int name="x" value="90"/>
+      <imgdir name="70">
+        <int name="x" value="810"/>
         <int name="y" value="180"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="4"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="40">
-        <int name="x" value="540"/>
+      <imgdir name="71">
+        <int name="x" value="270"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="4"/>
-      </imgdir>
-      <imgdir name="41">
-        <int name="x" value="540"/>
-        <int name="y" value="180"/>
-        <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="34">
-        <int name="x" value="270"/>
+      <imgdir name="72">
+        <int name="x" value="900"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="35">
-        <int name="x" value="270"/>
+      <imgdir name="73">
+        <int name="x" value="450"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="30">
-        <int name="x" value="180"/>
+      <imgdir name="74">
+        <int name="x" value="1260"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="31">
-        <int name="x" value="180"/>
+      <imgdir name="75">
+        <int name="x" value="450"/>
         <int name="y" value="180"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="4"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="32">
-        <int name="x" value="360"/>
+      <imgdir name="76">
+        <int name="x" value="630"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="33">
-        <int name="x" value="360"/>
+      <imgdir name="77">
+        <int name="x" value="1080"/>
+        <int name="y" value="60"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="78">
+        <int name="x" value="1170"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="79">
+        <int name="x" value="630"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="36">
-        <int name="x" value="450"/>
-        <int name="y" value="180"/>
+      <imgdir name="80">
+        <int name="x" value="1260"/>
+        <int name="y" value="-60"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="37">
-        <int name="x" value="450"/>
+      <imgdir name="81">
+        <int name="x" value="540"/>
         <int name="y" value="180"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="50">
-        <int name="x" value="990"/>
+      <imgdir name="82">
+        <int name="x" value="1080"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="51">
-        <int name="x" value="990"/>
+      <imgdir name="83">
+        <int name="x" value="540"/>
         <int name="y" value="180"/>
-        <string name="u" value="enH0"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="44">
-        <int name="x" value="720"/>
+      <imgdir name="84">
+        <int name="x" value="900"/>
+        <int name="y" value="0"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="slLU"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="85">
+        <int name="x" value="810"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="45">
-        <int name="x" value="720"/>
+      <imgdir name="86">
+        <int name="x" value="810"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="87">
+        <int name="x" value="990"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="38">
-        <int name="x" value="630"/>
+      <imgdir name="88">
+        <int name="x" value="720"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="39">
-        <int name="x" value="630"/>
+      <imgdir name="89">
+        <int name="x" value="1080"/>
+        <int name="y" value="120"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="90">
+        <int name="x" value="720"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="42">
-        <int name="x" value="810"/>
+      <imgdir name="91">
+        <int name="x" value="720"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
-      </imgdir>
-      <imgdir name="43">
-        <int name="x" value="810"/>
-        <int name="y" value="180"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="4"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="46">
+      <imgdir name="92">
         <int name="x" value="900"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="47">
+      <imgdir name="93">
         <int name="x" value="900"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="48">
+      <imgdir name="94">
         <int name="x" value="1080"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="49">
+      <imgdir name="95">
         <int name="x" value="1080"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="52">
+      <imgdir name="96">
+        <int name="x" value="990"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="97">
+        <int name="x" value="990"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="7"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="98">
         <int name="x" value="1170"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="53">
+      <imgdir name="99">
         <int name="x" value="1170"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="54">
+      <imgdir name="100">
         <int name="x" value="1260"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="4"/>
       </imgdir>
-      <imgdir name="55">
+      <imgdir name="101">
         <int name="x" value="1260"/>
         <int name="y" value="180"/>
+        <int name="zM" value="7"/>
         <string name="u" value="enH0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="4"/>
       </imgdir>
     </imgdir>
+  </imgdir>
+  <imgdir name="2">
+    <imgdir name="info">
+    </imgdir>
     <imgdir name="obj">
       <imgdir name="0">
+        <int name="x" value="1143"/>
+        <int name="y" value="51"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="8"/>
         <string name="oS" value="masteriaGL2"/>
         <string name="l0" value="crimsonwoodKeep"/>
         <string name="l1" value="wall"/>
-        <string name="l2" value="10"/>
+        <string name="l2" value="11"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="1">
         <int name="x" value="747"/>
         <int name="y" value="111"/>
         <int name="z" value="9"/>
+        <int name="zM" value="8"/>
+        <string name="oS" value="masteriaGL2"/>
+        <string name="l0" value="crimsonwoodKeep"/>
+        <string name="l1" value="wall"/>
+        <string name="l2" value="10"/>
+        <int name="r" value="0"/>
         <int name="f" value="0"/>
-        <int name="zM" value="0"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="3">
+    <imgdir name="info">
+    </imgdir>
+    <imgdir name="obj">
+      <imgdir name="0">
+        <int name="x" value="1041"/>
+        <int name="y" value="284"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="5"/>
+        <string name="oS" value="masteriaGL2"/>
+        <string name="l0" value="crimsonwoodKeep"/>
+        <string name="l1" value="tile"/>
+        <string name="l2" value="5"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
       <imgdir name="1">
+        <int name="x" value="424"/>
+        <int name="y" value="284"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="5"/>
         <string name="oS" value="masteriaGL2"/>
         <string name="l0" value="crimsonwoodKeep"/>
-        <string name="l1" value="wall"/>
-        <string name="l2" value="11"/>
-        <int name="x" value="1143"/>
-        <int name="y" value="51"/>
+        <string name="l1" value="tile"/>
+        <string name="l2" value="5"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="2">
+        <int name="x" value="-193"/>
+        <int name="y" value="283"/>
         <int name="z" value="9"/>
+        <int name="zM" value="5"/>
+        <string name="oS" value="masteriaGL2"/>
+        <string name="l0" value="crimsonwoodKeep"/>
+        <string name="l1" value="tile"/>
+        <string name="l2" value="5"/>
+        <int name="r" value="0"/>
         <int name="f" value="0"/>
-        <int name="zM" value="0"/>
+      </imgdir>
+      <imgdir name="3">
+        <int name="x" value="-810"/>
+        <int name="y" value="284"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="5"/>
+        <string name="oS" value="masteriaGL2"/>
+        <string name="l0" value="crimsonwoodKeep"/>
+        <string name="l1" value="tile"/>
+        <string name="l2" value="5"/>
         <int name="r" value="0"/>
+        <int name="f" value="0"/>
       </imgdir>
     </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="4">
+    <imgdir name="info">
+    </imgdir>
+    <imgdir name="obj">
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="5">
+    <imgdir name="info">
+    </imgdir>
+    <imgdir name="obj">
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
   </imgdir>
   <imgdir name="6">
     <imgdir name="info">
     </imgdir>
+    <imgdir name="obj">
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="7">
+    <imgdir name="info">
+    </imgdir>
+    <imgdir name="obj">
+    </imgdir>
     <imgdir name="tile">
     </imgdir>
-    <imgdir name="obj">
-      <imgdir name="0">
-        <string name="oS" value="masteriaGL2"/>
-        <string name="l0" value="crimsonwoodKeep"/>
-        <string name="l1" value="tile"/>
-        <string name="l2" value="5"/>
-        <int name="x" value="-810"/>
-        <int name="y" value="284"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="1">
-        <string name="oS" value="masteriaGL2"/>
-        <string name="l0" value="crimsonwoodKeep"/>
-        <string name="l1" value="tile"/>
-        <string name="l2" value="5"/>
-        <int name="x" value="-193"/>
-        <int name="y" value="284"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="1"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="2">
-        <string name="oS" value="masteriaGL2"/>
-        <string name="l0" value="crimsonwoodKeep"/>
-        <string name="l1" value="tile"/>
-        <string name="l2" value="5"/>
-        <int name="x" value="424"/>
-        <int name="y" value="284"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="2"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="3">
-        <string name="oS" value="masteriaGL2"/>
-        <string name="l0" value="crimsonwoodKeep"/>
-        <string name="l1" value="tile"/>
-        <string name="l2" value="5"/>
-        <int name="x" value="1041"/>
-        <int name="y" value="284"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="3"/>
-        <int name="r" value="0"/>
-      </imgdir>
+  </imgdir>
+  <imgdir name="ladderRope">
+  </imgdir>
+  <imgdir name="portal">
+    <imgdir name="0">
+      <int name="x" value="7"/>
+      <int name="y" value="116"/>
+      <int name="pt" value="0"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="sp"/>
+    </imgdir>
+    <imgdir name="1">
+      <int name="x" value="-1007"/>
+      <int name="y" value="169"/>
+      <int name="pt" value="2"/>
+      <int name="tm" value="610020006"/>
+      <string name="tn" value="in00"/>
+      <string name="pn" value="out00"/>
+    </imgdir>
+    <imgdir name="2">
+      <int name="x" value="1190"/>
+      <int name="y" value="-70"/>
+      <int name="pt" value="2"/>
+      <int name="tm" value="610030010"/>
+      <string name="tn" value="out00"/>
+      <string name="pn" value="in00"/>
+    </imgdir>
+    <imgdir name="3">
+      <int name="x" value="-585"/>
+      <int name="y" value="166"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
+    <imgdir name="4">
+      <int name="x" value="-859"/>
+      <int name="y" value="166"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
+    <imgdir name="5">
+      <int name="x" value="-311"/>
+      <int name="y" value="166"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
+    <imgdir name="6">
+      <int name="x" value="-40"/>
+      <int name="y" value="166"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
+    <imgdir name="7">
+      <int name="x" value="226"/>
+      <int name="y" value="166"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
+    <imgdir name="8">
+      <int name="x" value="493"/>
+      <int name="y" value="167"/>
+      <int name="pt" value="6"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="tp"/>
+      <int name="hideTooltip" value="0"/>
+      <int name="onlyOnce" value="0"/>
+    </imgdir>
+  </imgdir>
+  <imgdir name="reactor">
+  </imgdir>
+  <imgdir name="back">
+    <imgdir name="0">
+      <int name="x" value="0"/>
+      <int name="y" value="0"/>
+      <int name="rx" value="0"/>
+      <int name="ry" value="0"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="3"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="0"/>
+    </imgdir>
+    <imgdir name="1">
+      <int name="x" value="-1"/>
+      <int name="y" value="-15"/>
+      <int name="rx" value="-5"/>
+      <int name="ry" value="-5"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="1"/>
+    </imgdir>
+    <imgdir name="2">
+      <int name="x" value="-101"/>
+      <int name="y" value="-268"/>
+      <int name="rx" value="-8"/>
+      <int name="ry" value="-4"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="2"/>
+    </imgdir>
+    <imgdir name="3">
+      <int name="x" value="-46"/>
+      <int name="y" value="-137"/>
+      <int name="rx" value="-10"/>
+      <int name="ry" value="-6"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="3"/>
+    </imgdir>
+    <imgdir name="4">
+      <int name="x" value="-16"/>
+      <int name="y" value="-188"/>
+      <int name="rx" value="-13"/>
+      <int name="ry" value="-8"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="4"/>
     </imgdir>
-  </imgdir>
-  <imgdir name="7">
-    <imgdir name="info">
+    <imgdir name="5">
+      <int name="x" value="16"/>
+      <int name="y" value="-265"/>
+      <int name="rx" value="-15"/>
+      <int name="ry" value="-9"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="5"/>
     </imgdir>
-    <imgdir name="tile">
+    <imgdir name="6">
+      <int name="x" value="121"/>
+      <int name="y" value="-363"/>
+      <int name="rx" value="-20"/>
+      <int name="ry" value="-10"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="6"/>
     </imgdir>
-    <imgdir name="obj">
+    <imgdir name="7">
+      <int name="x" value="144"/>
+      <int name="y" value="-65"/>
+      <int name="rx" value="-50"/>
+      <int name="ry" value="-50"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="107"/>
     </imgdir>
   </imgdir>
   <imgdir name="foothold">
-    <imgdir name="3">
-      <imgdir name="5">
-        <imgdir name="1">
+    <imgdir name="1">
+      <imgdir name="7">
+        <imgdir name="21">
           <int name="x1" value="513"/>
-          <int name="y1" value="180"/>
-          <int name="x2" value="513"/>
+          <int name="y1" value="171"/>
+          <int name="x2" value="540"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="2"/>
+          <int name="prev" value="22"/>
+          <int name="next" value="23"/>
         </imgdir>
-        <imgdir name="2">
+        <imgdir name="22">
           <int name="x1" value="513"/>
-          <int name="y1" value="171"/>
-          <int name="x2" value="540"/>
+          <int name="y1" value="180"/>
+          <int name="x2" value="513"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="1"/>
-          <int name="next" value="3"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="21"/>
         </imgdir>
-        <imgdir name="3">
+        <imgdir name="23">
           <int name="x1" value="540"/>
           <int name="y1" value="171"/>
           <int name="x2" value="630"/>
           <int name="y2" value="111"/>
-          <int name="prev" value="2"/>
-          <int name="next" value="4"/>
+          <int name="prev" value="21"/>
+          <int name="next" value="25"/>
         </imgdir>
-        <imgdir name="4">
+        <imgdir name="25">
           <int name="x1" value="630"/>
           <int name="y1" value="111"/>
           <int name="x2" value="720"/>
           <int name="y2" value="51"/>
-          <int name="prev" value="3"/>
-          <int name="next" value="5"/>
+          <int name="prev" value="23"/>
+          <int name="next" value="27"/>
         </imgdir>
-        <imgdir name="5">
+        <imgdir name="27">
           <int name="x1" value="720"/>
           <int name="y1" value="51"/>
           <int name="x2" value="810"/>
           <int name="y2" value="-9"/>
-          <int name="prev" value="4"/>
-          <int name="next" value="11"/>
+          <int name="prev" value="25"/>
+          <int name="next" value="29"/>
         </imgdir>
-        <imgdir name="6">
-          <int name="x1" value="1170"/>
-          <int name="y1" value="-69"/>
-          <int name="x2" value="1260"/>
+        <imgdir name="29">
+          <int name="x1" value="810"/>
+          <int name="y1" value="-9"/>
+          <int name="x2" value="900"/>
           <int name="y2" value="-69"/>
-          <int name="prev" value="8"/>
-          <int name="next" value="10"/>
+          <int name="prev" value="27"/>
+          <int name="next" value="31"/>
         </imgdir>
-        <imgdir name="7">
+        <imgdir name="31">
           <int name="x1" value="900"/>
           <int name="y1" value="-69"/>
           <int name="x2" value="990"/>
           <int name="y2" value="-69"/>
-          <int name="prev" value="11"/>
-          <int name="next" value="9"/>
+          <int name="prev" value="29"/>
+          <int name="next" value="33"/>
         </imgdir>
-        <imgdir name="8">
+        <imgdir name="33">
+          <int name="x1" value="990"/>
+          <int name="y1" value="-69"/>
+          <int name="x2" value="1080"/>
+          <int name="y2" value="-69"/>
+          <int name="prev" value="31"/>
+          <int name="next" value="35"/>
+        </imgdir>
+        <imgdir name="35">
           <int name="x1" value="1080"/>
           <int name="y1" value="-69"/>
           <int name="x2" value="1170"/>
           <int name="y2" value="-69"/>
-          <int name="prev" value="9"/>
-          <int name="next" value="6"/>
+          <int name="prev" value="33"/>
+          <int name="next" value="37"/>
         </imgdir>
-        <imgdir name="9">
-          <int name="x1" value="990"/>
+        <imgdir name="37">
+          <int name="x1" value="1170"/>
           <int name="y1" value="-69"/>
-          <int name="x2" value="1080"/>
+          <int name="x2" value="1260"/>
           <int name="y2" value="-69"/>
-          <int name="prev" value="7"/>
-          <int name="next" value="8"/>
+          <int name="prev" value="35"/>
+          <int name="next" value="39"/>
         </imgdir>
-        <imgdir name="10">
+        <imgdir name="39">
           <int name="x1" value="1260"/>
           <int name="y1" value="-69"/>
           <int name="x2" value="1350"/>
           <int name="y2" value="-69"/>
-          <int name="prev" value="6"/>
+          <int name="prev" value="37"/>
           <int name="next" value="0"/>
         </imgdir>
-        <imgdir name="11">
-          <int name="x1" value="810"/>
-          <int name="y1" value="-9"/>
-          <int name="x2" value="900"/>
-          <int name="y2" value="-69"/>
-          <int name="prev" value="5"/>
-          <int name="next" value="7"/>
-        </imgdir>
       </imgdir>
     </imgdir>
     <imgdir name="5">
       <imgdir name="4">
-        <imgdir name="12">
+        <imgdir name="1">
           <int name="x1" value="-1107"/>
-          <int name="y1" value="180"/>
-          <int name="x2" value="-1107"/>
+          <int name="y1" value="171"/>
+          <int name="x2" value="-1053"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="13"/>
+          <int name="prev" value="2"/>
+          <int name="next" value="3"/>
         </imgdir>
-        <imgdir name="13">
+        <imgdir name="2">
           <int name="x1" value="-1107"/>
-          <int name="y1" value="171"/>
-          <int name="x2" value="-1053"/>
+          <int name="y1" value="180"/>
+          <int name="x2" value="-1107"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="12"/>
-          <int name="next" value="14"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="1"/>
         </imgdir>
-        <imgdir name="14">
+        <imgdir name="3">
           <int name="x1" value="-1053"/>
           <int name="y1" value="171"/>
           <int name="x2" value="-990"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="13"/>
-          <int name="next" value="15"/>
+          <int name="prev" value="1"/>
+          <int name="next" value="4"/>
         </imgdir>
-        <imgdir name="15">
+        <imgdir name="4">
           <int name="x1" value="-990"/>
           <int name="y1" value="171"/>
           <int name="x2" value="-900"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="14"/>
-          <int name="next" value="17"/>
-        </imgdir>
-        <imgdir name="16">
-          <int name="x1" value="-810"/>
-          <int name="y1" value="171"/>
-          <int name="x2" value="-720"/>
-          <int name="y2" value="171"/>
-          <int name="prev" value="17"/>
-          <int name="next" value="19"/>
+          <int name="prev" value="3"/>
+          <int name="next" value="5"/>
         </imgdir>
-        <imgdir name="17">
+        <imgdir name="5">
           <int name="x1" value="-900"/>
           <int name="y1" value="171"/>
           <int name="x2" value="-810"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="15"/>
-          <int name="next" value="16"/>
+          <int name="prev" value="4"/>
+          <int name="next" value="6"/>
         </imgdir>
-        <imgdir name="18">
-          <int name="x1" value="-360"/>
+        <imgdir name="6">
+          <int name="x1" value="-810"/>
           <int name="y1" value="171"/>
-          <int name="x2" value="-270"/>
+          <int name="x2" value="-720"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="22"/>
-          <int name="next" value="23"/>
+          <int name="prev" value="5"/>
+          <int name="next" value="7"/>
         </imgdir>
-        <imgdir name="19">
+        <imgdir name="7">
           <int name="x1" value="-720"/>
           <int name="y1" value="171"/>
           <int name="x2" value="-630"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="16"/>
-          <int name="next" value="20"/>
+          <int name="prev" value="6"/>
+          <int name="next" value="8"/>
         </imgdir>
-        <imgdir name="20">
+        <imgdir name="8">
           <int name="x1" value="-630"/>
           <int name="y1" value="171"/>
           <int name="x2" value="-540"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="19"/>
-          <int name="next" value="21"/>
+          <int name="prev" value="7"/>
+          <int name="next" value="9"/>
         </imgdir>
-        <imgdir name="21">
+        <imgdir name="9">
           <int name="x1" value="-540"/>
           <int name="y1" value="171"/>
           <int name="x2" value="-450"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="20"/>
-          <int name="next" value="22"/>
+          <int name="prev" value="8"/>
+          <int name="next" value="10"/>
         </imgdir>
-        <imgdir name="22">
+        <imgdir name="10">
           <int name="x1" value="-450"/>
           <int name="y1" value="171"/>
           <int name="x2" value="-360"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="21"/>
-          <int name="next" value="18"/>
+          <int name="prev" value="9"/>
+          <int name="next" value="11"/>
         </imgdir>
-        <imgdir name="23">
-          <int name="x1" value="-270"/>
+        <imgdir name="11">
+          <int name="x1" value="-360"/>
           <int name="y1" value="171"/>
-          <int name="x2" value="-180"/>
+          <int name="x2" value="-270"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="18"/>
-          <int name="next" value="25"/>
+          <int name="prev" value="10"/>
+          <int name="next" value="12"/>
         </imgdir>
-        <imgdir name="24">
-          <int name="x1" value="90"/>
+        <imgdir name="12">
+          <int name="x1" value="-270"/>
           <int name="y1" value="171"/>
-          <int name="x2" value="180"/>
+          <int name="x2" value="-180"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="27"/>
-          <int name="next" value="28"/>
+          <int name="prev" value="11"/>
+          <int name="next" value="13"/>
         </imgdir>
-        <imgdir name="25">
+        <imgdir name="13">
           <int name="x1" value="-180"/>
           <int name="y1" value="171"/>
           <int name="x2" value="-90"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="23"/>
-          <int name="next" value="26"/>
+          <int name="prev" value="12"/>
+          <int name="next" value="14"/>
         </imgdir>
-        <imgdir name="26">
+        <imgdir name="14">
           <int name="x1" value="-90"/>
           <int name="y1" value="171"/>
           <int name="x2" value="0"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="25"/>
-          <int name="next" value="27"/>
+          <int name="prev" value="13"/>
+          <int name="next" value="15"/>
         </imgdir>
-        <imgdir name="27">
+        <imgdir name="15">
           <int name="x1" value="0"/>
           <int name="y1" value="171"/>
           <int name="x2" value="90"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="26"/>
-          <int name="next" value="24"/>
+          <int name="prev" value="14"/>
+          <int name="next" value="16"/>
         </imgdir>
-        <imgdir name="28">
-          <int name="x1" value="180"/>
+        <imgdir name="16">
+          <int name="x1" value="90"/>
           <int name="y1" value="171"/>
-          <int name="x2" value="270"/>
+          <int name="x2" value="180"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="24"/>
-          <int name="next" value="30"/>
+          <int name="prev" value="15"/>
+          <int name="next" value="17"/>
         </imgdir>
-        <imgdir name="29">
-          <int name="x1" value="360"/>
+        <imgdir name="17">
+          <int name="x1" value="180"/>
           <int name="y1" value="171"/>
-          <int name="x2" value="450"/>
+          <int name="x2" value="270"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="30"/>
-          <int name="next" value="31"/>
+          <int name="prev" value="16"/>
+          <int name="next" value="18"/>
         </imgdir>
-        <imgdir name="30">
+        <imgdir name="18">
           <int name="x1" value="270"/>
           <int name="y1" value="171"/>
           <int name="x2" value="360"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="28"/>
-          <int name="next" value="29"/>
+          <int name="prev" value="17"/>
+          <int name="next" value="19"/>
         </imgdir>
-        <imgdir name="31">
+        <imgdir name="19">
+          <int name="x1" value="360"/>
+          <int name="y1" value="171"/>
+          <int name="x2" value="450"/>
+          <int name="y2" value="171"/>
+          <int name="prev" value="18"/>
+          <int name="next" value="20"/>
+        </imgdir>
+        <imgdir name="20">
           <int name="x1" value="450"/>
           <int name="y1" value="171"/>
           <int name="x2" value="540"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="29"/>
-          <int name="next" value="33"/>
+          <int name="prev" value="19"/>
+          <int name="next" value="24"/>
         </imgdir>
-        <imgdir name="32">
+        <imgdir name="24">
+          <int name="x1" value="540"/>
+          <int name="y1" value="171"/>
+          <int name="x2" value="630"/>
+          <int name="y2" value="171"/>
+          <int name="prev" value="20"/>
+          <int name="next" value="26"/>
+        </imgdir>
+        <imgdir name="26">
           <int name="x1" value="630"/>
           <int name="y1" value="171"/>
           <int name="x2" value="720"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="33"/>
-          <int name="next" value="35"/>
+          <int name="prev" value="24"/>
+          <int name="next" value="28"/>
         </imgdir>
-        <imgdir name="33">
-          <int name="x1" value="540"/>
+        <imgdir name="28">
+          <int name="x1" value="720"/>
           <int name="y1" value="171"/>
-          <int name="x2" value="630"/>
+          <int name="x2" value="810"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="31"/>
-          <int name="next" value="32"/>
+          <int name="prev" value="26"/>
+          <int name="next" value="30"/>
         </imgdir>
-        <imgdir name="34">
+        <imgdir name="30">
           <int name="x1" value="810"/>
           <int name="y1" value="171"/>
           <int name="x2" value="900"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="35"/>
-          <int name="next" value="36"/>
+          <int name="prev" value="28"/>
+          <int name="next" value="32"/>
         </imgdir>
-        <imgdir name="35">
-          <int name="x1" value="720"/>
+        <imgdir name="32">
+          <int name="x1" value="900"/>
           <int name="y1" value="171"/>
-          <int name="x2" value="810"/>
+          <int name="x2" value="990"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="32"/>
+          <int name="prev" value="30"/>
           <int name="next" value="34"/>
         </imgdir>
-        <imgdir name="36">
-          <int name="x1" value="900"/>
+        <imgdir name="34">
+          <int name="x1" value="990"/>
           <int name="y1" value="171"/>
-          <int name="x2" value="990"/>
+          <int name="x2" value="1080"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="34"/>
-          <int name="next" value="38"/>
+          <int name="prev" value="32"/>
+          <int name="next" value="36"/>
         </imgdir>
-        <imgdir name="37">
+        <imgdir name="36">
           <int name="x1" value="1080"/>
           <int name="y1" value="171"/>
           <int name="x2" value="1170"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="38"/>
-          <int name="next" value="39"/>
+          <int name="prev" value="34"/>
+          <int name="next" value="38"/>
         </imgdir>
         <imgdir name="38">
-          <int name="x1" value="990"/>
-          <int name="y1" value="171"/>
-          <int name="x2" value="1080"/>
-          <int name="y2" value="171"/>
-          <int name="prev" value="36"/>
-          <int name="next" value="37"/>
-        </imgdir>
-        <imgdir name="39">
           <int name="x1" value="1170"/>
           <int name="y1" value="171"/>
           <int name="x2" value="1260"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="37"/>
+          <int name="prev" value="36"/>
           <int name="next" value="40"/>
         </imgdir>
         <imgdir name="40">
@@ -1389,47 +1416,72 @@
           <int name="y1" value="171"/>
           <int name="x2" value="1350"/>
           <int name="y2" value="171"/>
-          <int name="prev" value="39"/>
+          <int name="prev" value="38"/>
           <int name="next" value="0"/>
         </imgdir>
       </imgdir>
     </imgdir>
   </imgdir>
-  <imgdir name="ladderRope">
-  </imgdir>
-  <imgdir name="miniMap">
-    <canvas name="canvas" width="160" height="42">
-    </canvas>
-    <int name="width" value="2564"/>
-    <int name="height" value="675"/>
-    <int name="centerX" value="1166"/>
-    <int name="centerY" value="221"/>
-    <int name="mag" value="4"/>
-  </imgdir>
-  <imgdir name="portal">
+  <imgdir name="life">
     <imgdir name="0">
-      <string name="pn" value="sp"/>
-      <int name="pt" value="0"/>
-      <int name="x" value="7"/>
-      <int name="y" value="116"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
+      <string name="id" value="9201107"/>
+      <int name="x" value="-715"/>
+      <int name="y" value="165"/>
+      <int name="cy" value="171"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="-765"/>
+      <int name="rx1" value="-665"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="7"/>
     </imgdir>
     <imgdir name="1">
-      <string name="pn" value="out00"/>
-      <int name="pt" value="2"/>
-      <int name="x" value="-1007"/>
-      <int name="y" value="169"/>
-      <int name="tm" value="610020006"/>
-      <string name="tn" value="in00"/>
+      <string name="id" value="9201108"/>
+      <int name="x" value="-179"/>
+      <int name="y" value="159"/>
+      <int name="cy" value="171"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="-229"/>
+      <int name="rx1" value="-129"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="13"/>
     </imgdir>
     <imgdir name="2">
-      <string name="pn" value="in00"/>
-      <int name="pt" value="2"/>
-      <int name="x" value="1190"/>
-      <int name="y" value="-70"/>
-      <int name="tm" value="610030010"/>
-      <string name="tn" value="out00"/>
+      <string name="id" value="9201109"/>
+      <int name="x" value="-460"/>
+      <int name="y" value="161"/>
+      <int name="cy" value="171"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="-510"/>
+      <int name="rx1" value="-410"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="9"/>
+    </imgdir>
+    <imgdir name="3">
+      <string name="id" value="9201110"/>
+      <int name="x" value="96"/>
+      <int name="y" value="165"/>
+      <int name="cy" value="171"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="46"/>
+      <int name="rx1" value="146"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="16"/>
+    </imgdir>
+    <imgdir name="4">
+      <string name="id" value="9201111"/>
+      <int name="x" value="364"/>
+      <int name="y" value="166"/>
+      <int name="cy" value="171"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="314"/>
+      <int name="rx1" value="414"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="19"/>
     </imgdir>
   </imgdir>
 </imgdir>
diff --git a/wz/Map.wz/Map/Map6/610030010.img.xml b/wz/Map.wz/Map/Map6/610030010.img.xml
index 52a6afd55..99fbe7428 100644
--- a/wz/Map.wz/Map/Map6/610030010.img.xml
+++ b/wz/Map.wz/Map/Map6/610030010.img.xml
@@ -4,11 +4,11 @@
     <string name="bgm" value="BgmGL/CrimsonwoodKeepInterior"/>
     <int name="cloud" value="0"/>
     <int name="swim" value="0"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="999999999"/>
     <int name="hideMinimap" value="0"/>
     <string name="mapMark" value="Crimsonwood"/>
     <float name="mobRate" value="0.4999999"/>
-    <int name="returnMap" value="610030010"/>
+    <int name="returnMap" value="610030000"/>
     <int name="town" value="0"/>
     <int name="version" value="10"/>
     <int name="fieldLimit" value="0"/>
diff --git a/wz/Map.wz/Map/Map6/610030011.img.xml b/wz/Map.wz/Map/Map6/610030011.img.xml
index 6a3f27f08..4470da8f4 100644
--- a/wz/Map.wz/Map/Map6/610030011.img.xml
+++ b/wz/Map.wz/Map/Map6/610030011.img.xml
@@ -5,8 +5,8 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="returnMap" value="610030000"/>
+    <int name="forcedReturn" value="999999999"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/CrimsonwoodKeepInterior"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030012.img.xml b/wz/Map.wz/Map/Map6/610030012.img.xml
index a725f54c9..1249dd6ef 100644
--- a/wz/Map.wz/Map/Map6/610030012.img.xml
+++ b/wz/Map.wz/Map/Map6/610030012.img.xml
@@ -5,8 +5,8 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="returnMap" value="610030000"/>
+    <int name="forcedReturn" value="999999999"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/CrimsonwoodKeepInterior"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030013.img.xml b/wz/Map.wz/Map/Map6/610030013.img.xml
index 10782768e..42166d059 100644
--- a/wz/Map.wz/Map/Map6/610030013.img.xml
+++ b/wz/Map.wz/Map/Map6/610030013.img.xml
@@ -5,8 +5,8 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="returnMap" value="610030000"/>
+    <int name="forcedReturn" value="999999999"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/CrimsonwoodKeepInterior"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030014.img.xml b/wz/Map.wz/Map/Map6/610030014.img.xml
index 084ed1258..1d4e26bd5 100644
--- a/wz/Map.wz/Map/Map6/610030014.img.xml
+++ b/wz/Map.wz/Map/Map6/610030014.img.xml
@@ -5,8 +5,8 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="returnMap" value="610030000"/>
+    <int name="forcedReturn" value="999999999"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/CrimsonwoodKeepInterior"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030015.img.xml b/wz/Map.wz/Map/Map6/610030015.img.xml
index 2482ed8e9..ce5b20798 100644
--- a/wz/Map.wz/Map/Map6/610030015.img.xml
+++ b/wz/Map.wz/Map/Map6/610030015.img.xml
@@ -5,8 +5,8 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="returnMap" value="610030000"/>
+    <int name="forcedReturn" value="999999999"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/CrimsonwoodKeepInterior"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030020.img.xml b/wz/Map.wz/Map/Map6/610030020.img.xml
index 40f525ddd..1f3e8c802 100644
--- a/wz/Map.wz/Map/Map6/610030020.img.xml
+++ b/wz/Map.wz/Map/Map6/610030020.img.xml
@@ -5,8 +5,8 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="returnMap" value="610030000"/>
+    <int name="forcedReturn" value="999999999"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/CrimsonwoodKeepInterior"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030100.img.xml b/wz/Map.wz/Map/Map6/610030100.img.xml
index 7e22d4f67..e6d514383 100644
--- a/wz/Map.wz/Map/Map6/610030100.img.xml
+++ b/wz/Map.wz/Map/Map6/610030100.img.xml
@@ -1,4402 +1,4388 @@
 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
 <imgdir name="610030100.img">
   <imgdir name="info">
-    <int name="version" value="10"/>
+    <string name="bgm" value="BgmGL/CrimsonwoodKeepInterior"/>
     <int name="cloud" value="0"/>
-    <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
-    <float name="mobRate" value="1.0"/>
-    <string name="bgm" value="BgmGL/CrimsonwoodKeepInterior"/>
-    <string name="mapMark" value="Crimsonwood"/>
-    <int name="fly" value="0"/>
+    <int name="forcedReturn" value="610030020"/>
     <int name="hideMinimap" value="0"/>
+    <string name="mapMark" value="Crimsonwood"/>
+    <float name="mobRate" value="1.0"/>
+    <int name="returnMap" value="610030010"/>
+    <int name="town" value="0"/>
+    <int name="version" value="10"/>
     <int name="fieldLimit" value="9208"/>
     <string name="onFirstUserEnter" value=""/>
     <string name="onUserEnter" value=""/>
+    <int name="fly" value="0"/>
     <int name="fieldType" value="1014"/>
   </imgdir>
-  <imgdir name="back">
-    <imgdir name="0">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="31"/>
-      <int name="f" value="0"/>
-      <int name="x" value="24"/>
-      <int name="y" value="-297"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="3"/>
-      <int name="cx" value="800"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+  <imgdir name="miniMap">
+    <canvas name="canvas" width="207" height="65">
+    </canvas>
+    <int name="width" value="3315"/>
+    <int name="height" value="1049"/>
+    <int name="centerX" value="1434"/>
+    <int name="centerY" value="480"/>
+    <int name="mag" value="4"/>
+  </imgdir>
+  <imgdir name="0">
+    <imgdir name="info">
     </imgdir>
-    <imgdir name="1">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="36"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-175"/>
-      <int name="y" value="-248"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="3"/>
-      <int name="cx" value="800"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+    <imgdir name="obj">
+      <imgdir name="0">
+        <int name="x" value="-523"/>
+        <int name="y" value="106"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="20"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="1">
+        <int name="x" value="33"/>
+        <int name="y" value="103"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="21"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="2">
+        <int name="x" value="477"/>
+        <int name="y" value="48"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="28"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="3">
+        <int name="x" value="454"/>
+        <int name="y" value="193"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="22"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="4">
+        <int name="x" value="511"/>
+        <int name="y" value="155"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="23"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
     </imgdir>
-    <imgdir name="2">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="35"/>
-      <int name="f" value="0"/>
-      <int name="x" value="425"/>
-      <int name="y" value="-249"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="3"/>
-      <int name="cx" value="800"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+    <imgdir name="tile">
     </imgdir>
-    <imgdir name="3">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="34"/>
-      <int name="f" value="0"/>
-      <int name="x" value="224"/>
-      <int name="y" value="-200"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="3"/>
-      <int name="cx" value="800"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+  </imgdir>
+  <imgdir name="1">
+    <imgdir name="info">
     </imgdir>
-    <imgdir name="4">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="38"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-1"/>
-      <int name="y" value="91"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="800"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+    <imgdir name="obj">
     </imgdir>
-    <imgdir name="5">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="39"/>
-      <int name="f" value="0"/>
-      <int name="x" value="199"/>
-      <int name="y" value="92"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="800"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+    <imgdir name="tile">
     </imgdir>
-    <imgdir name="6">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="40"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-201"/>
-      <int name="y" value="91"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="800"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+  </imgdir>
+  <imgdir name="2">
+    <imgdir name="info">
     </imgdir>
-    <imgdir name="7">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="41"/>
-      <int name="f" value="0"/>
-      <int name="x" value="399"/>
-      <int name="y" value="92"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="800"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+    <imgdir name="obj">
     </imgdir>
-    <imgdir name="8">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="99"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-601"/>
-      <int name="y" value="236"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
+    <imgdir name="tile">
     </imgdir>
-    <imgdir name="10">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="99"/>
-      <int name="f" value="0"/>
-      <int name="x" value="57"/>
-      <int name="y" value="239"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="11">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="99"/>
-      <int name="f" value="0"/>
-      <int name="x" value="359"/>
-      <int name="y" value="239"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="12">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="99"/>
-      <int name="f" value="0"/>
-      <int name="x" value="819"/>
-      <int name="y" value="239"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="13">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="99"/>
-      <int name="f" value="0"/>
-      <int name="x" value="1056"/>
-      <int name="y" value="240"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="15">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="45"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-1307"/>
-      <int name="y" value="-128"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="16">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="65"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-1144"/>
-      <int name="y" value="-129"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="17">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="47"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-787"/>
-      <int name="y" value="-128"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="18">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="67"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-593"/>
-      <int name="y" value="-128"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="19">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="58"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-794"/>
-      <int name="y" value="18"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="20">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="55"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-795"/>
-      <int name="y" value="111"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="21">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="51"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-795"/>
-      <int name="y" value="173"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="22">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="50"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-800"/>
-      <int name="y" value="224"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="23">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="54"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-795"/>
-      <int name="y" value="297"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="24">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="62"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-796"/>
-      <int name="y" value="317"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="25">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="55"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-335"/>
-      <int name="y" value="-13"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="26">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="54"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-334"/>
-      <int name="y" value="49"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="27">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="53"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-335"/>
-      <int name="y" value="111"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="28">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="52"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-335"/>
-      <int name="y" value="172"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="29">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="58"/>
-      <int name="f" value="0"/>
-      <int name="x" value="665"/>
-      <int name="y" value="265"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="30">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="63"/>
-      <int name="f" value="0"/>
-      <int name="x" value="665"/>
-      <int name="y" value="316"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="31">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="69"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-153"/>
-      <int name="y" value="-15"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="32">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="70"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-153"/>
-      <int name="y" value="48"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="33">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="71"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-153"/>
-      <int name="y" value="110"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="34">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="72"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-153"/>
-      <int name="y" value="173"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="35">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="73"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-153"/>
-      <int name="y" value="235"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="36">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="74"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-153"/>
-      <int name="y" value="298"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="9">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="99"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-180"/>
-      <int name="y" value="237"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="37">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="82"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-152"/>
-      <int name="y" value="317"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="38">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="77"/>
-      <int name="f" value="0"/>
-      <int name="x" value="398"/>
-      <int name="y" value="18"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="39">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="74"/>
-      <int name="f" value="0"/>
-      <int name="x" value="398"/>
-      <int name="y" value="112"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="40">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="73"/>
-      <int name="f" value="0"/>
-      <int name="x" value="398"/>
-      <int name="y" value="175"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="41">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="77"/>
-      <int name="f" value="0"/>
-      <int name="x" value="398"/>
-      <int name="y" value="270"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="42">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="1"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="81"/>
-      <int name="f" value="0"/>
-      <int name="x" value="399"/>
-      <int name="y" value="317"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="1"/>
-      <int name="cx" value="1000"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="43">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="2"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-849"/>
-      <int name="y" value="104"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="44">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="2"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-393"/>
-      <int name="y" value="100"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="45">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="2"/>
-      <int name="f" value="0"/>
-      <int name="x" value="148"/>
-      <int name="y" value="102"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="46">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="2"/>
-      <int name="f" value="0"/>
-      <int name="x" value="611"/>
-      <int name="y" value="99"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="47">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="1"/>
-      <int name="no" value="2"/>
-      <int name="f" value="0"/>
-      <int name="x" value="1152"/>
-      <int name="y" value="103"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="48">
-      <string name="bS" value="masteriaGL2"/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="95"/>
-      <int name="f" value="0"/>
-      <int name="x" value="1507"/>
-      <int name="y" value="-7"/>
-      <int name="rx" value="-100"/>
-      <int name="ry" value="-100"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-    <imgdir name="14">
-      <string name="bS" value=""/>
-      <int name="front" value="0"/>
-      <int name="ani" value="0"/>
-      <int name="no" value="0"/>
-      <int name="f" value="0"/>
-      <int name="x" value="-738"/>
-      <int name="y" value="29"/>
-      <int name="rx" value="0"/>
-      <int name="ry" value="0"/>
-      <int name="type" value="0"/>
-      <int name="cx" value="0"/>
-      <int name="cy" value="0"/>
-      <int name="a" value="255"/>
-    </imgdir>
-  </imgdir>
-  <imgdir name="life">
-    <imgdir name="0">
-      <string name="type" value="n"/>
-      <string name="id" value="9201112"/>
-      <int name="x" value="-486"/>
-      <int name="y" value="329"/>
-      <int name="mobTime" value="0"/>
-      <int name="f" value="0"/>
-      <int name="hide" value="0"/>
-      <int name="fh" value="9"/>
-      <int name="cy" value="336"/>
-      <int name="rx0" value="-536"/>
-      <int name="rx1" value="-436"/>
-    </imgdir>
-  </imgdir>
-  <imgdir name="reactor">
-    <imgdir name="0">
-      <string name="id" value="6109010"/>
-      <int name="x" value="858"/>
-      <int name="y" value="-335"/>
-      <int name="reactorTime" value="-1"/>
-      <int name="f" value="0"/>
-      <string name="name" value="mob0"/>
-    </imgdir>
-  </imgdir>
-  <imgdir name="0">
-    <imgdir name="info">
-    </imgdir>
-    <imgdir name="tile">
+  </imgdir>
+  <imgdir name="3">
+    <imgdir name="info">
+      <string name="tS" value="masteriaGL2"/>
     </imgdir>
     <imgdir name="obj">
       <imgdir name="0">
+        <int name="x" value="1571"/>
+        <int name="y" value="224"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="portal"/>
+        <string name="l2" value="1"/>
+        <int name="r" value="0"/>
+        <int name="hide" value="0"/>
+        <int name="reactor" value="0"/>
+        <int name="flow" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="1">
+        <int name="x" value="-986"/>
+        <int name="y" value="224"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="portal"/>
+        <string name="l2" value="2"/>
+        <int name="r" value="0"/>
+        <int name="f" value="1"/>
+      </imgdir>
+      <imgdir name="2">
+        <int name="x" value="-1065"/>
+        <int name="y" value="37"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="3">
+        <int name="x" value="-1070"/>
+        <int name="y" value="-182"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="4">
+        <int name="x" value="-655"/>
+        <int name="y" value="-123"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="1"/>
+      </imgdir>
+      <imgdir name="5">
+        <int name="x" value="449"/>
+        <int name="y" value="-31"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="6">
+        <int name="x" value="909"/>
+        <int name="y" value="42"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="1"/>
+      </imgdir>
+      <imgdir name="7">
+        <int name="x" value="1046"/>
+        <int name="y" value="92"/>
+        <int name="z" value="8"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="8">
+        <int name="x" value="1322"/>
+        <int name="y" value="146"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="9">
+        <int name="x" value="787"/>
+        <int name="y" value="-129"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="1"/>
+      </imgdir>
+      <imgdir name="10">
+        <int name="x" value="-37"/>
+        <int name="y" value="200"/>
+        <int name="z" value="6"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="11">
+        <int name="x" value="19"/>
+        <int name="y" value="-139"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="12">
+        <int name="x" value="-111"/>
+        <int name="y" value="46"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="1"/>
+      </imgdir>
+      <imgdir name="13">
+        <int name="x" value="-247"/>
+        <int name="y" value="320"/>
+        <int name="z" value="8"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="14"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="14">
+        <int name="x" value="1058"/>
+        <int name="y" value="-7"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="hangobj"/>
+        <string name="l2" value="2"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="15">
+        <int name="x" value="1665"/>
+        <int name="y" value="-128"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="ceilingobj"/>
+        <string name="l2" value="0"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="16">
+        <int name="x" value="1107"/>
+        <int name="y" value="-218"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="ceilingobj"/>
+        <string name="l2" value="0"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="17">
+        <int name="x" value="1053"/>
+        <int name="y" value="-174"/>
+        <int name="z" value="8"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="ceilingobj"/>
+        <string name="l2" value="0"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="18">
+        <int name="x" value="945"/>
+        <int name="y" value="-70"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="ceilingobj"/>
+        <string name="l2" value="1"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="19">
+        <int name="x" value="-44"/>
+        <int name="y" value="-59"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="ceilingobj"/>
+        <string name="l2" value="1"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="20">
+        <int name="x" value="-231"/>
+        <int name="y" value="-98"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="ceilingobj"/>
+        <string name="l2" value="0"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="21">
+        <int name="x" value="-1009"/>
+        <int name="y" value="-131"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="ceilingobj"/>
+        <string name="l2" value="0"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="22">
+        <int name="x" value="-1068"/>
+        <int name="y" value="-68"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
+        <string name="oS" value="masteriaGL3"/>
+        <string name="l0" value="ckPQ"/>
+        <string name="l1" value="ceilingobj"/>
+        <string name="l2" value="1"/>
+        <int name="r" value="0"/>
+        <int name="f" value="0"/>
+      </imgdir>
+      <imgdir name="23">
+        <int name="x" value="-326"/>
+        <int name="y" value="-130"/>
+        <int name="z" value="9"/>
+        <int name="zM" value="0"/>
         <string name="oS" value="masteriaGL3"/>
         <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="20"/>
-        <int name="x" value="-523"/>
-        <int name="y" value="106"/>
-        <int name="z" value="9"/>
+        <string name="l1" value="ceilingobj"/>
+        <string name="l2" value="0"/>
+        <int name="r" value="0"/>
         <int name="f" value="0"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="tile">
+      <imgdir name="0">
+        <int name="x" value="-90"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
       <imgdir name="1">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="21"/>
-        <int name="x" value="33"/>
-        <int name="y" value="103"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+        <int name="x" value="-90"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="2">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="28"/>
-        <int name="x" value="477"/>
-        <int name="y" value="48"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+        <int name="x" value="-180"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="3">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="22"/>
-        <int name="x" value="454"/>
-        <int name="y" value="193"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+        <int name="x" value="270"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="4">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="23"/>
-        <int name="x" value="511"/>
-        <int name="y" value="155"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+        <int name="x" value="90"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-    </imgdir>
-  </imgdir>
-  <imgdir name="1">
-    <imgdir name="info">
-    </imgdir>
-    <imgdir name="tile">
-    </imgdir>
-    <imgdir name="obj">
-    </imgdir>
-  </imgdir>
-  <imgdir name="2">
-    <imgdir name="info">
-    </imgdir>
-    <imgdir name="tile">
-    </imgdir>
-    <imgdir name="obj">
-    </imgdir>
-  </imgdir>
-  <imgdir name="3">
-    <imgdir name="info">
-      <string name="tS" value="masteriaGL2"/>
-      <int name="tSMag" value="1"/>
-    </imgdir>
-    <imgdir name="tile">
-      <imgdir name="36">
-        <int name="x" value="-630"/>
+      <imgdir name="5">
+        <int name="x" value="360"/>
+        <int name="y" value="360"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
+      </imgdir>
+      <imgdir name="6">
+        <int name="x" value="90"/>
+        <int name="y" value="360"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
+      </imgdir>
+      <imgdir name="7">
+        <int name="x" value="0"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="8">
+        <int name="x" value="-360"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
+      </imgdir>
+      <imgdir name="9">
+        <int name="x" value="-180"/>
+        <int name="y" value="360"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
+      </imgdir>
+      <imgdir name="10">
+        <int name="x" value="270"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="11">
+        <int name="x" value="450"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="12">
+        <int name="x" value="180"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="13">
+        <int name="x" value="180"/>
+        <int name="y" value="360"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
+      </imgdir>
+      <imgdir name="14">
+        <int name="x" value="180"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="15">
+        <int name="x" value="360"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="16">
+        <int name="x" value="-270"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
+      </imgdir>
+      <imgdir name="17">
+        <int name="x" value="-180"/>
+        <int name="y" value="360"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="18">
+        <int name="x" value="-450"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
       <imgdir name="19">
         <int name="x" value="-540"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="20">
+        <int name="x" value="-810"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="40">
-        <int name="x" value="-540"/>
+      <imgdir name="21">
+        <int name="x" value="-1080"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="22">
+        <int name="x" value="-540"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="23">
         <int name="x" value="-450"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="39">
+      <imgdir name="24">
         <int name="x" value="-630"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="25">
+        <int name="x" value="-450"/>
+        <int name="y" value="360"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
+      </imgdir>
+      <imgdir name="26">
+        <int name="x" value="-720"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="27">
+        <int name="x" value="-1170"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
+      </imgdir>
+      <imgdir name="28">
+        <int name="x" value="-900"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
+      </imgdir>
+      <imgdir name="29">
+        <int name="x" value="-1080"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="4"/>
+      </imgdir>
+      <imgdir name="30">
+        <int name="x" value="-990"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="25">
-        <int name="x" value="-450"/>
-        <int name="y" value="360"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
+      </imgdir>
+      <imgdir name="31">
+        <int name="x" value="-1080"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="43">
-        <int name="x" value="-720"/>
+      <imgdir name="32">
+        <int name="x" value="-990"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="33">
+        <int name="x" value="-1260"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="45">
-        <int name="x" value="-810"/>
+      <imgdir name="34">
+        <int name="x" value="-360"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="42">
-        <int name="x" value="-900"/>
+      <imgdir name="35">
+        <int name="x" value="-270"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="47">
-        <int name="x" value="-1170"/>
+      <imgdir name="36">
+        <int name="x" value="-630"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="37">
         <int name="x" value="-720"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="44">
-        <int name="x" value="-810"/>
+      <imgdir name="38">
+        <int name="x" value="-1260"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
+        <int name="no" value="4"/>
+      </imgdir>
+      <imgdir name="39">
+        <int name="x" value="-630"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="21">
-        <int name="x" value="-1080"/>
+      <imgdir name="40">
+        <int name="x" value="-540"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="41">
         <int name="x" value="-900"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="48">
-        <int name="x" value="-990"/>
+      <imgdir name="42">
+        <int name="x" value="-900"/>
         <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="32">
-        <int name="x" value="-990"/>
+      <imgdir name="43">
+        <int name="x" value="-720"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="46">
-        <int name="x" value="-1170"/>
+      <imgdir name="44">
+        <int name="x" value="-810"/>
         <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="29">
-        <int name="x" value="-1080"/>
-        <int name="y" value="360"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="50">
-        <int name="x" value="-360"/>
+      <imgdir name="45">
+        <int name="x" value="-810"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="34">
-        <int name="x" value="-360"/>
+      <imgdir name="46">
+        <int name="x" value="-1170"/>
         <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="35">
-        <int name="x" value="-270"/>
+      <imgdir name="47">
+        <int name="x" value="-1170"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="51">
-        <int name="x" value="-270"/>
+      <imgdir name="48">
+        <int name="x" value="-990"/>
         <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="13">
-        <int name="x" value="180"/>
-        <int name="y" value="360"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="1">
-        <int name="x" value="-90"/>
-        <int name="y" value="360"/>
+      <imgdir name="49">
+        <int name="x" value="-1260"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="53">
-        <int name="x" value="-90"/>
+      <imgdir name="50">
+        <int name="x" value="-360"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="9">
-        <int name="x" value="-180"/>
+      <imgdir name="51">
+        <int name="x" value="-270"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="17">
-        <int name="x" value="-180"/>
-        <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="52">
         <int name="x" value="270"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="56">
-        <int name="x" value="0"/>
+      <imgdir name="53">
+        <int name="x" value="-90"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="54">
         <int name="x" value="0"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="4"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="55">
         <int name="x" value="90"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="6">
-        <int name="x" value="90"/>
-        <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="3">
-        <int name="x" value="270"/>
+      <imgdir name="56">
+        <int name="x" value="0"/>
         <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="14">
-        <int name="x" value="180"/>
-        <int name="y" value="360"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="63">
-        <int name="x" value="360"/>
+      <imgdir name="57">
+        <int name="x" value="630"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
-      <imgdir name="62">
-        <int name="x" value="450"/>
+      <imgdir name="58">
+        <int name="x" value="540"/>
+        <int name="y" value="420"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
+      </imgdir>
+      <imgdir name="59">
+        <int name="x" value="540"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
       <imgdir name="60">
         <int name="x" value="540"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="61">
         <int name="x" value="450"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="59">
-        <int name="x" value="540"/>
+      <imgdir name="62">
+        <int name="x" value="450"/>
         <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="5">
+      <imgdir name="63">
         <int name="x" value="360"/>
         <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="38">
-        <int name="x" value="-1260"/>
-        <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
+      <imgdir name="64">
+        <int name="x" value="720"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="33">
-        <int name="x" value="-1260"/>
-        <int name="y" value="300"/>
-        <string name="u" value="enV1"/>
-        <int name="no" value="0"/>
+      <imgdir name="65">
+        <int name="x" value="630"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="66">
         <int name="x" value="-1260"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="67">
         <int name="x" value="-1260"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="68">
+        <int name="x" value="-1350"/>
+        <int name="y" value="-60"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV0"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="69">
         <int name="x" value="-1350"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV0"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="70">
+        <int name="x" value="-1350"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="77">
+      <imgdir name="71">
         <int name="x" value="-1350"/>
-        <int name="y" value="300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="75">
+      <imgdir name="72">
         <int name="x" value="-1350"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
+        <int name="y" value="-60"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
       <imgdir name="73">
         <int name="x" value="-1350"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="74">
         <int name="x" value="-1350"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="75">
+        <int name="x" value="-1350"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="76">
         <int name="x" value="-1350"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV0"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="77">
+        <int name="x" value="-1350"/>
+        <int name="y" value="300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="92">
-        <int name="x" value="-1260"/>
-        <int name="y" value="-180"/>
-        <string name="u" value="enV1"/>
-        <int name="no" value="1"/>
+      <imgdir name="78">
+        <int name="x" value="-1350"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="90">
-        <int name="x" value="-1260"/>
-        <int name="y" value="-120"/>
-        <string name="u" value="enV1"/>
-        <int name="no" value="0"/>
+      <imgdir name="79">
+        <int name="x" value="-1350"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="88">
+      <imgdir name="80">
         <int name="x" value="-1260"/>
-        <int name="y" value="-60"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="81">
+        <int name="x" value="-1350"/>
+        <int name="y" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="86">
+      <imgdir name="82">
         <int name="x" value="-1260"/>
-        <int name="y" value="0"/>
+        <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="83">
+        <int name="x" value="-1350"/>
+        <int name="y" value="60"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
       <imgdir name="84">
         <int name="x" value="-1260"/>
         <int name="y" value="60"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="85">
+        <int name="x" value="-1350"/>
+        <int name="y" value="-120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="82">
+      <imgdir name="86">
         <int name="x" value="-1260"/>
-        <int name="y" value="120"/>
+        <int name="y" value="0"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="87">
+        <int name="x" value="-1350"/>
+        <int name="y" value="-120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
-      <imgdir name="80">
+      <imgdir name="88">
         <int name="x" value="-1260"/>
-        <int name="y" value="180"/>
+        <int name="y" value="-60"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="20">
-        <int name="x" value="-810"/>
-        <int name="y" value="420"/>
+      <imgdir name="89">
+        <int name="x" value="-1350"/>
+        <int name="y" value="-180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+        <int name="no" value="4"/>
+      </imgdir>
+      <imgdir name="90">
+        <int name="x" value="-1260"/>
+        <int name="y" value="-120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="99">
-        <int name="x" value="-810"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
+      <imgdir name="91">
+        <int name="x" value="-1350"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="28">
-        <int name="x" value="-900"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
+      <imgdir name="92">
+        <int name="x" value="-1260"/>
+        <int name="y" value="-180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="97">
-        <int name="x" value="-900"/>
+      <imgdir name="93">
+        <int name="x" value="-1260"/>
         <int name="y" value="480"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="30">
-        <int name="x" value="-990"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
+      <imgdir name="94">
+        <int name="x" value="-1170"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="95">
         <int name="x" value="-990"/>
         <int name="y" value="480"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="96">
         <int name="x" value="-1080"/>
         <int name="y" value="480"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="93">
-        <int name="x" value="-1260"/>
+      <imgdir name="97">
+        <int name="x" value="-900"/>
         <int name="y" value="480"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="31">
-        <int name="x" value="-1080"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="27">
-        <int name="x" value="-1170"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+      <imgdir name="98">
+        <int name="x" value="-1350"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="49">
-        <int name="x" value="-1260"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
+      <imgdir name="99">
+        <int name="x" value="-810"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="94">
-        <int name="x" value="-1170"/>
+      <imgdir name="100">
+        <int name="x" value="-720"/>
         <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="98">
-        <int name="x" value="-1350"/>
+      <imgdir name="101">
+        <int name="x" value="-360"/>
         <int name="y" value="480"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="78">
-        <int name="x" value="-1350"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="102">
         <int name="x" value="-1350"/>
         <int name="y" value="480"/>
+        <int name="zM" value="0"/>
         <string name="u" value="edD"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="70">
+      <imgdir name="103">
         <int name="x" value="-1350"/>
-        <int name="y" value="420"/>
-        <string name="u" value="enV0"/>
-        <int name="no" value="0"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
       <imgdir name="104">
         <int name="x" value="-1260"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="105">
+        <int name="x" value="-1260"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="116">
-        <int name="x" value="-1170"/>
+      <imgdir name="106">
+        <int name="x" value="-1080"/>
+        <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="107">
+        <int name="x" value="-360"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="108">
+        <int name="x" value="-810"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="105">
-        <int name="x" value="-1260"/>
+      <imgdir name="109">
+        <int name="x" value="-900"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="113">
-        <int name="x" value="-1080"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
+      <imgdir name="110">
+        <int name="x" value="-540"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="111">
         <int name="x" value="-990"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="112">
+        <int name="x" value="-810"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="109">
-        <int name="x" value="-900"/>
+      <imgdir name="113">
+        <int name="x" value="-1080"/>
         <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="71">
-        <int name="x" value="-1350"/>
-        <int name="y" value="180"/>
-        <string name="u" value="enV0"/>
+        <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="120">
-        <int name="x" value="-1350"/>
-        <int name="y" value="180"/>
+      <imgdir name="114">
+        <int name="x" value="-990"/>
+        <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="115">
+        <int name="x" value="-1080"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="117">
-        <int name="x" value="-1350"/>
-        <int name="y" value="120"/>
-        <string name="u" value="enV0"/>
-        <int name="no" value="1"/>
+      <imgdir name="116">
+        <int name="x" value="-1170"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="79">
+      <imgdir name="117">
         <int name="x" value="-1350"/>
         <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="119">
-        <int name="x" value="-1350"/>
-        <int name="y" value="60"/>
         <string name="u" value="enV0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="118">
         <int name="x" value="-1350"/>
         <int name="y" value="0"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="83">
+      <imgdir name="119">
         <int name="x" value="-1350"/>
         <int name="y" value="60"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="81">
-        <int name="x" value="-1350"/>
-        <int name="y" value="0"/>
         <string name="u" value="enV0"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="68">
+      <imgdir name="120">
         <int name="x" value="-1350"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="enV0"/>
-        <int name="no" value="0"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="89">
-        <int name="x" value="-1350"/>
-        <int name="y" value="-180"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="123">
-        <int name="x" value="-1350"/>
-        <int name="y" value="-180"/>
-        <string name="u" value="enV0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="72">
+      <imgdir name="121">
         <int name="x" value="-1350"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="85">
-        <int name="x" value="-1350"/>
-        <int name="y" value="-120"/>
         <string name="u" value="enV0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="87">
-        <int name="x" value="-1350"/>
-        <int name="y" value="-120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="103">
-        <int name="x" value="-1350"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="122">
         <int name="x" value="-1350"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="124">
+      <imgdir name="123">
         <int name="x" value="-1350"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="edU"/>
-        <int name="no" value="0"/>
+        <int name="y" value="-180"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="121">
-        <int name="x" value="-1350"/>
-        <int name="y" value="-300"/>
         <string name="u" value="enV0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="125">
+      <imgdir name="124">
         <int name="x" value="-1350"/>
         <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="edU"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="91">
+      <imgdir name="125">
         <int name="x" value="-1350"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="128">
-        <int name="x" value="-1260"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="126">
         <int name="x" value="-1260"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="127">
         <int name="x" value="-1170"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="128">
+        <int name="x" value="-1260"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="129">
         <int name="x" value="-1170"/>
         <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="115">
-        <int name="x" value="-1080"/>
-        <int name="y" value="-300"/>
         <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="106">
-        <int name="x" value="-1080"/>
+      <imgdir name="130">
+        <int name="x" value="-900"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="114">
-        <int name="x" value="-990"/>
-        <int name="y" value="-300"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="4"/>
       </imgdir>
       <imgdir name="131">
         <int name="x" value="-990"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="142">
-        <int name="x" value="-360"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="139">
-        <int name="x" value="-450"/>
-        <int name="y" value="-300"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="132">
         <int name="x" value="-900"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="130">
-        <int name="x" value="-900"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="112">
+      <imgdir name="133">
         <int name="x" value="-810"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="138">
-        <int name="x" value="-450"/>
-        <int name="y" value="-300"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="137">
-        <int name="x" value="-450"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
+      <imgdir name="134">
+        <int name="x" value="-630"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="135">
         <int name="x" value="-540"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="136">
         <int name="x" value="-540"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="145">
-        <int name="x" value="-630"/>
+      <imgdir name="137">
+        <int name="x" value="-450"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="138">
+        <int name="x" value="-450"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
+      </imgdir>
+      <imgdir name="139">
+        <int name="x" value="-450"/>
+        <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="140">
+        <int name="x" value="-270"/>
+        <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="134">
-        <int name="x" value="-630"/>
+      <imgdir name="141">
+        <int name="x" value="0"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="108">
-        <int name="x" value="-810"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
+      <imgdir name="142">
+        <int name="x" value="-360"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="133">
-        <int name="x" value="-810"/>
+      <imgdir name="143">
+        <int name="x" value="-360"/>
         <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="4"/>
       </imgdir>
       <imgdir name="144">
         <int name="x" value="-720"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="145">
+        <int name="x" value="-630"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="146">
         <int name="x" value="-720"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="110">
-        <int name="x" value="-540"/>
+      <imgdir name="147">
+        <int name="x" value="-90"/>
         <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="148">
+        <int name="x" value="-720"/>
+        <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="149">
         <int name="x" value="-630"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="148">
-        <int name="x" value="-720"/>
+      <imgdir name="150">
+        <int name="x" value="0"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="154">
-        <int name="x" value="-180"/>
+      <imgdir name="151">
+        <int name="x" value="-90"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="152">
         <int name="x" value="-270"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="107">
-        <int name="x" value="-360"/>
+      <imgdir name="153">
+        <int name="x" value="180"/>
         <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="151">
-        <int name="x" value="-90"/>
+      <imgdir name="154">
+        <int name="x" value="-180"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="143">
-        <int name="x" value="-360"/>
+      <imgdir name="155">
+        <int name="x" value="90"/>
         <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="160">
-        <int name="x" value="-180"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
+      <imgdir name="156">
+        <int name="x" value="90"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="157">
         <int name="x" value="-270"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="140">
-        <int name="x" value="-270"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="141">
+      <imgdir name="158">
         <int name="x" value="0"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
       <imgdir name="159">
         <int name="x" value="-180"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="161">
-        <int name="x" value="-90"/>
+      <imgdir name="160">
+        <int name="x" value="-180"/>
         <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="147">
+      <imgdir name="161">
         <int name="x" value="-90"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="150">
-        <int name="x" value="0"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="158">
-        <int name="x" value="0"/>
-        <int name="y" value="-300"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="166">
-        <int name="x" value="180"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="5"/>
       </imgdir>
       <imgdir name="162">
         <int name="x" value="90"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="156">
-        <int name="x" value="90"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="155">
-        <int name="x" value="90"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="163">
         <int name="x" value="180"/>
         <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="153">
-        <int name="x" value="180"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
+        <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="178">
-        <int name="x" value="630"/>
+      <imgdir name="164">
+        <int name="x" value="270"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="175">
+      <imgdir name="165">
         <int name="x" value="540"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="173">
-        <int name="x" value="450"/>
+      <imgdir name="166">
+        <int name="x" value="180"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="171">
-        <int name="x" value="360"/>
-        <int name="y" value="-300"/>
         <string name="u" value="enH0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="168">
+      <imgdir name="167">
         <int name="x" value="270"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="181">
-        <int name="x" value="360"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="167">
+      <imgdir name="168">
         <int name="x" value="270"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="180">
+      <imgdir name="169">
         <int name="x" value="630"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="164">
-        <int name="x" value="270"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="170">
         <int name="x" value="360"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="171">
+        <int name="x" value="360"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="172">
         <int name="x" value="450"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="173">
+        <int name="x" value="450"/>
+        <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="174">
+        <int name="x" value="540"/>
+        <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="175">
+        <int name="x" value="540"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="174">
-        <int name="x" value="540"/>
+      <imgdir name="176">
+        <int name="x" value="720"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="177">
+        <int name="x" value="900"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="169">
+      <imgdir name="178">
         <int name="x" value="630"/>
         <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="165">
-        <int name="x" value="540"/>
+      <imgdir name="179">
+        <int name="x" value="720"/>
+        <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="180">
+        <int name="x" value="630"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="181">
+        <int name="x" value="360"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="182">
         <int name="x" value="450"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="191">
-        <int name="x" value="990"/>
+      <imgdir name="183">
+        <int name="x" value="720"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="195">
+      <imgdir name="184">
         <int name="x" value="810"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="183">
-        <int name="x" value="720"/>
+      <imgdir name="185">
+        <int name="x" value="1170"/>
         <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="194">
-        <int name="x" value="900"/>
-        <int name="y" value="-300"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="186">
         <int name="x" value="1080"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="184">
-        <int name="x" value="810"/>
+      <imgdir name="187">
+        <int name="x" value="1170"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="196">
-        <int name="x" value="810"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
+      <imgdir name="188">
+        <int name="x" value="1080"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="179">
-        <int name="x" value="720"/>
+      <imgdir name="189">
+        <int name="x" value="1170"/>
         <int name="y" value="-240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="176">
-        <int name="x" value="720"/>
+      <imgdir name="190">
+        <int name="x" value="1080"/>
         <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="197">
+      <imgdir name="191">
         <int name="x" value="990"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="192">
         <int name="x" value="990"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="193">
         <int name="x" value="900"/>
         <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="188">
-        <int name="x" value="1080"/>
-        <int name="y" value="-300"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="190">
-        <int name="x" value="1080"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="177">
+      <imgdir name="194">
         <int name="x" value="900"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="200">
-        <int name="x" value="540"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="58">
-        <int name="x" value="540"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+      <imgdir name="195">
+        <int name="x" value="810"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="198">
-        <int name="x" value="450"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="11">
-        <int name="x" value="450"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
+      <imgdir name="196">
+        <int name="x" value="810"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="205">
-        <int name="x" value="270"/>
-        <int name="y" value="480"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="203">
-        <int name="x" value="360"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
+      <imgdir name="197">
+        <int name="x" value="990"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="201">
-        <int name="x" value="180"/>
-        <int name="y" value="480"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="10">
-        <int name="x" value="270"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="12">
-        <int name="x" value="180"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="15">
-        <int name="x" value="360"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="206">
-        <int name="x" value="90"/>
+      <imgdir name="198">
+        <int name="x" value="450"/>
         <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="204">
-        <int name="x" value="0"/>
-        <int name="y" value="480"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="4">
-        <int name="x" value="90"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="7">
-        <int name="x" value="0"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="207">
-        <int name="x" value="-90"/>
+      <imgdir name="199">
+        <int name="x" value="630"/>
         <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="210">
-        <int name="x" value="-450"/>
-        <int name="y" value="480"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="8">
-        <int name="x" value="-360"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="2">
-        <int name="x" value="-180"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="0">
-        <int name="x" value="-90"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+      <imgdir name="200">
+        <int name="x" value="540"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="16">
-        <int name="x" value="-270"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
+      <imgdir name="201">
+        <int name="x" value="180"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="202">
         <int name="x" value="-180"/>
         <int name="y" value="480"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="18">
-        <int name="x" value="-450"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+      <imgdir name="203">
+        <int name="x" value="360"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="211">
-        <int name="x" value="-270"/>
+      <imgdir name="204">
+        <int name="x" value="0"/>
         <int name="y" value="480"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="205">
+        <int name="x" value="270"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="209">
-        <int name="x" value="-540"/>
+      <imgdir name="206">
+        <int name="x" value="90"/>
         <int name="y" value="480"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="100">
-        <int name="x" value="-720"/>
+      <imgdir name="207">
+        <int name="x" value="-90"/>
         <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="26">
-        <int name="x" value="-720"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
+        <string name="u" value="enH1"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="24">
+      <imgdir name="208">
         <int name="x" value="-630"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="22">
+      <imgdir name="209">
         <int name="x" value="-540"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="208">
-        <int name="x" value="-630"/>
+      <imgdir name="210">
+        <int name="x" value="-450"/>
         <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="101">
-        <int name="x" value="-360"/>
+      <imgdir name="211">
+        <int name="x" value="-270"/>
         <int name="y" value="480"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="212">
+        <int name="x" value="720"/>
+        <int name="y" value="360"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="213">
+        <int name="x" value="720"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="214">
         <int name="x" value="630"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="199">
-        <int name="x" value="630"/>
+      <imgdir name="215">
+        <int name="x" value="990"/>
         <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="216">
         <int name="x" value="720"/>
         <int name="y" value="480"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH1"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="217">
+        <int name="x" value="810"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="57">
-        <int name="x" value="630"/>
+      <imgdir name="218">
+        <int name="x" value="810"/>
         <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="65">
-        <int name="x" value="630"/>
-        <int name="y" value="420"/>
+      <imgdir name="219">
+        <int name="x" value="990"/>
+        <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="231">
-        <int name="x" value="1170"/>
+      <imgdir name="220">
+        <int name="x" value="900"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
+        <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="221">
+        <int name="x" value="810"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="217">
+      <imgdir name="222">
         <int name="x" value="810"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="232">
-        <int name="x" value="1170"/>
+      <imgdir name="223">
+        <int name="x" value="900"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="230">
-        <int name="x" value="1170"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
+      <imgdir name="224">
+        <int name="x" value="990"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="239">
-        <int name="x" value="1080"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="235">
+      <imgdir name="225">
         <int name="x" value="900"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="238">
-        <int name="x" value="1170"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="227">
-        <int name="x" value="1080"/>
-        <int name="y" value="360"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="5"/>
       </imgdir>
       <imgdir name="226">
         <int name="x" value="1080"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="227">
+        <int name="x" value="1080"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
       <imgdir name="228">
         <int name="x" value="1080"/>
         <int name="y" value="420"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="224">
-        <int name="x" value="990"/>
+      <imgdir name="229">
+        <int name="x" value="1260"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="237">
-        <int name="x" value="990"/>
+      <imgdir name="230">
+        <int name="x" value="1170"/>
         <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="223">
-        <int name="x" value="900"/>
-        <int name="y" value="360"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="225">
-        <int name="x" value="900"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+      <imgdir name="231">
+        <int name="x" value="1170"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="221">
-        <int name="x" value="810"/>
+      <imgdir name="232">
+        <int name="x" value="1170"/>
         <int name="y" value="360"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+        <int name="no" value="3"/>
+      </imgdir>
+      <imgdir name="233">
+        <int name="x" value="1620"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="222">
-        <int name="x" value="810"/>
-        <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+      <imgdir name="234">
+        <int name="x" value="1260"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="218">
-        <int name="x" value="810"/>
-        <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
+      <imgdir name="235">
+        <int name="x" value="900"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="64">
-        <int name="x" value="720"/>
+      <imgdir name="236">
+        <int name="x" value="1260"/>
         <int name="y" value="420"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="215">
+      <imgdir name="237">
         <int name="x" value="990"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
+        <int name="y" value="420"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="213">
-        <int name="x" value="720"/>
-        <int name="y" value="360"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="220">
-        <int name="x" value="900"/>
-        <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
+      <imgdir name="238">
+        <int name="x" value="1170"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="212">
-        <int name="x" value="720"/>
-        <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
+      <imgdir name="239">
+        <int name="x" value="1080"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="219">
-        <int name="x" value="990"/>
+      <imgdir name="240">
+        <int name="x" value="1260"/>
         <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="248">
+      <imgdir name="241">
         <int name="x" value="1530"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="245">
-        <int name="x" value="1440"/>
+      <imgdir name="242">
+        <int name="x" value="1350"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="243">
         <int name="x" value="1350"/>
         <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="240">
-        <int name="x" value="1260"/>
-        <int name="y" value="360"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="255">
+      <imgdir name="244">
         <int name="x" value="1440"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="253">
-        <int name="x" value="1350"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
+      <imgdir name="245">
+        <int name="x" value="1440"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="234">
-        <int name="x" value="1260"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="252">
-        <int name="x" value="1530"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
+      <imgdir name="246">
+        <int name="x" value="1620"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
-      <imgdir name="236">
-        <int name="x" value="1260"/>
+      <imgdir name="247">
+        <int name="x" value="1710"/>
         <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
-      <imgdir name="229">
-        <int name="x" value="1260"/>
+      <imgdir name="248">
+        <int name="x" value="1530"/>
         <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
         <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="249">
+        <int name="x" value="1710"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="250">
         <int name="x" value="1350"/>
         <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="4"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="241">
-        <int name="x" value="1530"/>
-        <int name="y" value="360"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="4"/>
       </imgdir>
       <imgdir name="251">
         <int name="x" value="1530"/>
         <int name="y" value="420"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="242">
-        <int name="x" value="1350"/>
-        <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
+      <imgdir name="252">
+        <int name="x" value="1530"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="244">
-        <int name="x" value="1440"/>
-        <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
+        <string name="u" value="enH1"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="253">
+        <int name="x" value="1350"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="254">
         <int name="x" value="1440"/>
         <int name="y" value="420"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
+      </imgdir>
+      <imgdir name="255">
+        <int name="x" value="1440"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="260">
+      <imgdir name="256">
         <int name="x" value="1710"/>
-        <int name="y" value="180"/>
+        <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV0"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="257">
+        <int name="x" value="1710"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
       <imgdir name="258">
         <int name="x" value="1710"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="256">
+      <imgdir name="259">
         <int name="x" value="1710"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
+      </imgdir>
+      <imgdir name="260">
+        <int name="x" value="1710"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV0"/>
         <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="261">
+        <int name="x" value="1710"/>
+        <int name="y" value="240"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="264">
-        <int name="x" value="1620"/>
-        <int name="y" value="360"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
+      <imgdir name="262">
+        <int name="x" value="1710"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV0"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="246">
-        <int name="x" value="1620"/>
-        <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
+      <imgdir name="263">
+        <int name="x" value="1710"/>
+        <int name="y" value="180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
-      <imgdir name="233">
+      <imgdir name="264">
         <int name="x" value="1620"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
       <imgdir name="265">
         <int name="x" value="1620"/>
         <int name="y" value="420"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="267">
-        <int name="x" value="1800"/>
-        <int name="y" value="480"/>
-        <string name="u" value="edD"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="249">
-        <int name="x" value="1710"/>
-        <int name="y" value="480"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="247">
-        <int name="x" value="1710"/>
-        <int name="y" value="420"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="266">
         <int name="x" value="1800"/>
         <int name="y" value="420"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="257">
-        <int name="x" value="1710"/>
-        <int name="y" value="360"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+      <imgdir name="267">
+        <int name="x" value="1800"/>
+        <int name="y" value="480"/>
         <int name="zM" value="0"/>
+        <string name="u" value="edD"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="270">
+      <imgdir name="268">
         <int name="x" value="1800"/>
-        <int name="y" value="360"/>
+        <int name="y" value="180"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="259">
-        <int name="x" value="1710"/>
-        <int name="y" value="300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="269">
         <int name="x" value="1800"/>
         <int name="y" value="300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="261">
-        <int name="x" value="1710"/>
-        <int name="y" value="240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
+      <imgdir name="270">
+        <int name="x" value="1800"/>
+        <int name="y" value="360"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV1"/>
+        <int name="no" value="0"/>
       </imgdir>
       <imgdir name="271">
         <int name="x" value="1800"/>
         <int name="y" value="240"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="263">
+      <imgdir name="272">
         <int name="x" value="1710"/>
-        <int name="y" value="180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+        <int name="y" value="120"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="268">
-        <int name="x" value="1800"/>
-        <int name="y" value="180"/>
-        <string name="u" value="enV1"/>
+        <string name="u" value="bsc"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="273">
+        <int name="x" value="1710"/>
+        <int name="y" value="-180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV0"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="274">
         <int name="x" value="1710"/>
         <int name="y" value="60"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV0"/>
         <int name="no" value="0"/>
+      </imgdir>
+      <imgdir name="275">
+        <int name="x" value="1800"/>
+        <int name="y" value="-120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="262">
+      <imgdir name="276">
         <int name="x" value="1710"/>
-        <int name="y" value="120"/>
-        <string name="u" value="enV0"/>
-        <int name="no" value="0"/>
+        <int name="y" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV0"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="277">
         <int name="x" value="1710"/>
         <int name="y" value="60"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="5"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="278">
         <int name="x" value="1800"/>
         <int name="y" value="60"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="272">
-        <int name="x" value="1710"/>
-        <int name="y" value="120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="279">
         <int name="x" value="1800"/>
         <int name="y" value="120"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enV1"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
       </imgdir>
       <imgdir name="280">
         <int name="x" value="1710"/>
         <int name="y" value="-60"/>
-        <string name="u" value="enV0"/>
-        <int name="no" value="1"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="276">
-        <int name="x" value="1710"/>
-        <int name="y" value="0"/>
         <string name="u" value="enV0"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="283">
+      <imgdir name="281">
         <int name="x" value="1710"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="284">
-        <int name="x" value="1800"/>
-        <int name="y" value="-60"/>
-        <string name="u" value="enV1"/>
-        <int name="no" value="1"/>
+        <int name="y" value="-180"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="287">
-        <int name="x" value="1710"/>
-        <int name="y" value="0"/>
         <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="285">
-        <int name="x" value="1800"/>
-        <int name="y" value="0"/>
-        <string name="u" value="enV1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
+        <int name="no" value="5"/>
       </imgdir>
       <imgdir name="282">
         <int name="x" value="1710"/>
         <int name="y" value="-120"/>
-        <string name="u" value="enV0"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="289">
-        <int name="x" value="1710"/>
-        <int name="y" value="-120"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="3"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="275">
-        <int name="x" value="1800"/>
-        <int name="y" value="-120"/>
-        <string name="u" value="enV1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="281">
-        <int name="x" value="1710"/>
-        <int name="y" value="-180"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="286">
-        <int name="x" value="1800"/>
-        <int name="y" value="-180"/>
-        <string name="u" value="enV1"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="273">
-        <int name="x" value="1710"/>
-        <int name="y" value="-180"/>
         <string name="u" value="enV0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="305">
-        <int name="x" value="1350"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="300">
-        <int name="x" value="1440"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="298">
-        <int name="x" value="1530"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="296">
-        <int name="x" value="1620"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="306">
-        <int name="x" value="1800"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="edU"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="187">
-        <int name="x" value="1170"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="189">
-        <int name="x" value="1170"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="185">
-        <int name="x" value="1170"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
         <int name="no" value="0"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="302">
-        <int name="x" value="1260"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="303">
-        <int name="x" value="1260"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="304">
-        <int name="x" value="1260"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enH1"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="301">
-        <int name="x" value="1350"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="309">
-        <int name="x" value="1710"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="307">
-        <int name="x" value="1800"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enV1"/>
-        <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="308">
+      <imgdir name="283">
         <int name="x" value="1710"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="292">
-        <int name="x" value="1530"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
-        <int name="no" value="1"/>
+        <int name="y" value="-60"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="295">
-        <int name="x" value="1350"/>
-        <int name="y" value="-300"/>
         <string name="u" value="bsc"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="310">
-        <int name="x" value="1620"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="5"/>
+      <imgdir name="284">
+        <int name="x" value="1800"/>
+        <int name="y" value="-60"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="297">
-        <int name="x" value="1440"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
+      <imgdir name="285">
+        <int name="x" value="1800"/>
+        <int name="y" value="0"/>
         <int name="zM" value="0"/>
-      </imgdir>
-      <imgdir name="299">
-        <int name="x" value="1440"/>
-        <int name="y" value="-300"/>
-        <string name="u" value="enH0"/>
+        <string name="u" value="enV1"/>
         <int name="no" value="1"/>
-        <int name="zM" value="0"/>
       </imgdir>
-      <imgdir name="294">
-        <int name="x" value="1710"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="bsc"/>
-        <int name="no" value="0"/>
+      <imgdir name="286">
+        <int name="x" value="1800"/>
+        <int name="y" value="-180"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="290">
+      <imgdir name="287">
         <int name="x" value="1710"/>
-        <int name="y" value="-240"/>
-        <string name="u" value="enV0"/>
-        <int name="no" value="1"/>
+        <int name="y" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
       <imgdir name="288">
         <int name="x" value="1530"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="bsc"/>
         <int name="no" value="3"/>
+      </imgdir>
+      <imgdir name="289">
+        <int name="x" value="1710"/>
+        <int name="y" value="-120"/>
         <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="3"/>
       </imgdir>
-      <imgdir name="293">
-        <int name="x" value="1800"/>
+      <imgdir name="290">
+        <int name="x" value="1710"/>
         <int name="y" value="-240"/>
-        <string name="u" value="enV1"/>
-        <int name="no" value="0"/>
         <int name="zM" value="0"/>
+        <string name="u" value="enV0"/>
+        <int name="no" value="1"/>
       </imgdir>
       <imgdir name="291">
         <int name="x" value="1620"/>
         <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
         <string name="u" value="enH0"/>
         <int name="no" value="2"/>
-        <int name="zM" value="0"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="obj">
-      <imgdir name="0">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="portal"/>
-        <string name="l2" value="1"/>
-        <int name="x" value="1571"/>
-        <int name="y" value="224"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="1">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="portal"/>
-        <string name="l2" value="2"/>
-        <int name="x" value="-986"/>
-        <int name="y" value="224"/>
-        <int name="z" value="9"/>
-        <int name="f" value="1"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="7">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="-1065"/>
-        <int name="y" value="37"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="8">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="-1070"/>
-        <int name="y" value="-182"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="9">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="-655"/>
-        <int name="y" value="-123"/>
-        <int name="z" value="9"/>
-        <int name="f" value="1"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
-      </imgdir>
-      <imgdir name="10">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="449"/>
-        <int name="y" value="-31"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
-        <int name="zM" value="0"/>
-        <int name="r" value="0"/>
       </imgdir>
-      <imgdir name="11">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="909"/>
-        <int name="y" value="42"/>
-        <int name="z" value="9"/>
-        <int name="f" value="1"/>
+      <imgdir name="292">
+        <int name="x" value="1530"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="12">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="1046"/>
-        <int name="y" value="92"/>
-        <int name="z" value="8"/>
-        <int name="f" value="0"/>
+      <imgdir name="293">
+        <int name="x" value="1800"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enV1"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="13">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="1322"/>
-        <int name="y" value="146"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+      <imgdir name="294">
+        <int name="x" value="1710"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="15">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="787"/>
-        <int name="y" value="-129"/>
-        <int name="z" value="9"/>
-        <int name="f" value="1"/>
+      <imgdir name="295">
+        <int name="x" value="1350"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="16">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="-37"/>
-        <int name="y" value="200"/>
-        <int name="z" value="6"/>
-        <int name="f" value="0"/>
+      <imgdir name="296">
+        <int name="x" value="1620"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="17">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="19"/>
-        <int name="y" value="-139"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+      <imgdir name="297">
+        <int name="x" value="1440"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="18">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="-111"/>
-        <int name="y" value="46"/>
-        <int name="z" value="9"/>
-        <int name="f" value="1"/>
+      <imgdir name="298">
+        <int name="x" value="1530"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="19">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="14"/>
-        <int name="x" value="-247"/>
-        <int name="y" value="320"/>
-        <int name="z" value="8"/>
-        <int name="f" value="0"/>
+      <imgdir name="299">
+        <int name="x" value="1440"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="21">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="hangobj"/>
-        <string name="l2" value="2"/>
-        <int name="x" value="1058"/>
-        <int name="y" value="-7"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+      <imgdir name="300">
+        <int name="x" value="1440"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="5">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="ceilingobj"/>
-        <string name="l2" value="0"/>
-        <int name="x" value="1665"/>
-        <int name="y" value="-128"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+      <imgdir name="301">
+        <int name="x" value="1350"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="6">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="ceilingobj"/>
-        <string name="l2" value="0"/>
-        <int name="x" value="1107"/>
-        <int name="y" value="-218"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+      <imgdir name="302">
+        <int name="x" value="1260"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="14">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="ceilingobj"/>
-        <string name="l2" value="0"/>
-        <int name="x" value="1053"/>
-        <int name="y" value="-174"/>
-        <int name="z" value="8"/>
-        <int name="f" value="0"/>
+      <imgdir name="303">
+        <int name="x" value="1260"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="4">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="ceilingobj"/>
-        <string name="l2" value="1"/>
-        <int name="x" value="945"/>
-        <int name="y" value="-70"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+      <imgdir name="304">
+        <int name="x" value="1260"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="2">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="ceilingobj"/>
-        <string name="l2" value="1"/>
-        <int name="x" value="-44"/>
-        <int name="y" value="-59"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+      <imgdir name="305">
+        <int name="x" value="1350"/>
+        <int name="y" value="-240"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enH1"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="3">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="ceilingobj"/>
-        <string name="l2" value="0"/>
-        <int name="x" value="-231"/>
-        <int name="y" value="-98"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+      <imgdir name="306">
+        <int name="x" value="1800"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="edU"/>
+        <int name="no" value="0"/>
       </imgdir>
-      <imgdir name="23">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="ceilingobj"/>
-        <string name="l2" value="0"/>
-        <int name="x" value="-1009"/>
-        <int name="y" value="-131"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+      <imgdir name="307">
+        <int name="x" value="1800"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enV1"/>
+        <int name="no" value="1"/>
       </imgdir>
-      <imgdir name="20">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="ceilingobj"/>
-        <string name="l2" value="1"/>
-        <int name="x" value="-1068"/>
-        <int name="y" value="-68"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+      <imgdir name="308">
+        <int name="x" value="1710"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="2"/>
       </imgdir>
-      <imgdir name="22">
-        <string name="oS" value="masteriaGL3"/>
-        <string name="l0" value="ckPQ"/>
-        <string name="l1" value="ceilingobj"/>
-        <string name="l2" value="0"/>
-        <int name="x" value="-326"/>
-        <int name="y" value="-130"/>
-        <int name="z" value="9"/>
-        <int name="f" value="0"/>
+      <imgdir name="309">
+        <int name="x" value="1710"/>
+        <int name="y" value="-300"/>
         <int name="zM" value="0"/>
-        <int name="r" value="0"/>
+        <string name="u" value="enH0"/>
+        <int name="no" value="1"/>
+      </imgdir>
+      <imgdir name="310">
+        <int name="x" value="1620"/>
+        <int name="y" value="-300"/>
+        <int name="zM" value="0"/>
+        <string name="u" value="bsc"/>
+        <int name="no" value="5"/>
       </imgdir>
     </imgdir>
-  </imgdir>
-  <imgdir name="4">
-    <imgdir name="info">
+  </imgdir>
+  <imgdir name="4">
+    <imgdir name="info">
+    </imgdir>
+    <imgdir name="obj">
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="5">
+    <imgdir name="info">
+    </imgdir>
+    <imgdir name="obj">
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="6">
+    <imgdir name="info">
+    </imgdir>
+    <imgdir name="obj">
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="7">
+    <imgdir name="info">
+    </imgdir>
+    <imgdir name="obj">
+    </imgdir>
+    <imgdir name="tile">
+    </imgdir>
+  </imgdir>
+  <imgdir name="ladderRope">
+  </imgdir>
+  <imgdir name="portal">
+    <imgdir name="0">
+      <int name="x" value="-917"/>
+      <int name="y" value="318"/>
+      <int name="pt" value="0"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="sp"/>
+    </imgdir>
+    <imgdir name="1">
+      <int name="x" value="-1012"/>
+      <int name="y" value="312"/>
+      <int name="pt" value="0"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="sp"/>
+    </imgdir>
+    <imgdir name="2">
+      <int name="x" value="-780"/>
+      <int name="y" value="233"/>
+      <int name="pt" value="0"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="sp"/>
+    </imgdir>
+    <imgdir name="3">
+      <int name="x" value="-730"/>
+      <int name="y" value="316"/>
+      <int name="pt" value="0"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="sp"/>
+    </imgdir>
+    <imgdir name="4">
+      <int name="x" value="-824"/>
+      <int name="y" value="312"/>
+      <int name="pt" value="0"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="sp"/>
+    </imgdir>
+    <imgdir name="5">
+      <int name="x" value="1547"/>
+      <int name="y" value="336"/>
+      <int name="pt" value="8"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="next01"/>
+      <string name="script" value="glpqPortalDummy"/>
+    </imgdir>
+    <imgdir name="6">
+      <int name="x" value="824"/>
+      <int name="y" value="328"/>
+      <int name="pt" value="8"/>
+      <int name="tm" value="999999999"/>
+      <string name="tn" value=""/>
+      <string name="pn" value="next00"/>
+      <string name="script" value="glpqPortal0"/>
+    </imgdir>
+  </imgdir>
+  <imgdir name="reactor">
+    <imgdir name="0">
+      <int name="x" value="858"/>
+      <int name="y" value="-335"/>
+      <int name="reactorTime" value="-1"/>
+      <string name="name" value="mob0"/>
+      <string name="id" value="6109010"/>
+      <int name="f" value="0"/>
+    </imgdir>
+  </imgdir>
+  <imgdir name="back">
+    <imgdir name="0">
+      <int name="x" value="24"/>
+      <int name="y" value="-297"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="800"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="3"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="31"/>
+    </imgdir>
+    <imgdir name="1">
+      <int name="x" value="-175"/>
+      <int name="y" value="-248"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="800"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="3"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="36"/>
+    </imgdir>
+    <imgdir name="2">
+      <int name="x" value="425"/>
+      <int name="y" value="-249"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="800"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="3"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="35"/>
+    </imgdir>
+    <imgdir name="3">
+      <int name="x" value="224"/>
+      <int name="y" value="-200"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="800"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="3"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="34"/>
+    </imgdir>
+    <imgdir name="4">
+      <int name="x" value="-1"/>
+      <int name="y" value="91"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="800"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="38"/>
+    </imgdir>
+    <imgdir name="5">
+      <int name="x" value="199"/>
+      <int name="y" value="92"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="800"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="39"/>
+    </imgdir>
+    <imgdir name="6">
+      <int name="x" value="-201"/>
+      <int name="y" value="91"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="800"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="40"/>
+    </imgdir>
+    <imgdir name="7">
+      <int name="x" value="399"/>
+      <int name="y" value="92"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="800"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="41"/>
+    </imgdir>
+    <imgdir name="8">
+      <int name="x" value="-601"/>
+      <int name="y" value="236"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="99"/>
+    </imgdir>
+    <imgdir name="9">
+      <int name="x" value="-180"/>
+      <int name="y" value="237"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="99"/>
+    </imgdir>
+    <imgdir name="10">
+      <int name="x" value="57"/>
+      <int name="y" value="239"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="99"/>
+    </imgdir>
+    <imgdir name="11">
+      <int name="x" value="359"/>
+      <int name="y" value="239"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="99"/>
+    </imgdir>
+    <imgdir name="12">
+      <int name="x" value="819"/>
+      <int name="y" value="239"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="99"/>
+    </imgdir>
+    <imgdir name="13">
+      <int name="x" value="1056"/>
+      <int name="y" value="240"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="99"/>
+    </imgdir>
+    <imgdir name="14">
+      <int name="x" value="-1307"/>
+      <int name="y" value="-128"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="45"/>
+    </imgdir>
+    <imgdir name="15">
+      <int name="x" value="-787"/>
+      <int name="y" value="-128"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="47"/>
+    </imgdir>
+    <imgdir name="16">
+      <int name="x" value="-794"/>
+      <int name="y" value="18"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="58"/>
+    </imgdir>
+    <imgdir name="17">
+      <int name="x" value="-795"/>
+      <int name="y" value="111"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="55"/>
+    </imgdir>
+    <imgdir name="18">
+      <int name="x" value="-795"/>
+      <int name="y" value="173"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="51"/>
+    </imgdir>
+    <imgdir name="19">
+      <int name="x" value="-800"/>
+      <int name="y" value="224"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="50"/>
+    </imgdir>
+    <imgdir name="20">
+      <int name="x" value="-795"/>
+      <int name="y" value="297"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="54"/>
+    </imgdir>
+    <imgdir name="21">
+      <int name="x" value="-796"/>
+      <int name="y" value="317"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="62"/>
+    </imgdir>
+    <imgdir name="22">
+      <int name="x" value="-335"/>
+      <int name="y" value="-13"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="55"/>
+    </imgdir>
+    <imgdir name="23">
+      <int name="x" value="-334"/>
+      <int name="y" value="49"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="54"/>
+    </imgdir>
+    <imgdir name="24">
+      <int name="x" value="-335"/>
+      <int name="y" value="111"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="53"/>
+    </imgdir>
+    <imgdir name="25">
+      <int name="x" value="-335"/>
+      <int name="y" value="172"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="52"/>
+    </imgdir>
+    <imgdir name="26">
+      <int name="x" value="665"/>
+      <int name="y" value="265"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="58"/>
+    </imgdir>
+    <imgdir name="27">
+      <int name="x" value="665"/>
+      <int name="y" value="316"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="63"/>
+    </imgdir>
+    <imgdir name="28">
+      <int name="x" value="-849"/>
+      <int name="y" value="104"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="2"/>
+    </imgdir>
+    <imgdir name="29">
+      <int name="x" value="-393"/>
+      <int name="y" value="100"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="2"/>
+    </imgdir>
+    <imgdir name="30">
+      <int name="x" value="148"/>
+      <int name="y" value="102"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="2"/>
+    </imgdir>
+    <imgdir name="31">
+      <int name="x" value="611"/>
+      <int name="y" value="99"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="2"/>
+    </imgdir>
+    <imgdir name="32">
+      <int name="x" value="1152"/>
+      <int name="y" value="103"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="1"/>
+      <int name="no" value="2"/>
+    </imgdir>
+    <imgdir name="33">
+      <int name="x" value="1507"/>
+      <int name="y" value="-7"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="0"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="0"/>
+      <int name="front" value="0"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="95"/>
+    </imgdir>
+    <imgdir name="34">
+      <int name="x" value="-1144"/>
+      <int name="y" value="-129"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="65"/>
     </imgdir>
-    <imgdir name="tile">
+    <imgdir name="35">
+      <int name="x" value="-593"/>
+      <int name="y" value="-128"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="67"/>
     </imgdir>
-    <imgdir name="obj">
+    <imgdir name="36">
+      <int name="x" value="-153"/>
+      <int name="y" value="-15"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="69"/>
     </imgdir>
-  </imgdir>
-  <imgdir name="5">
-    <imgdir name="info">
+    <imgdir name="37">
+      <int name="x" value="-153"/>
+      <int name="y" value="48"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="70"/>
     </imgdir>
-    <imgdir name="tile">
+    <imgdir name="38">
+      <int name="x" value="-153"/>
+      <int name="y" value="110"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="71"/>
     </imgdir>
-    <imgdir name="obj">
+    <imgdir name="39">
+      <int name="x" value="-153"/>
+      <int name="y" value="173"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="72"/>
     </imgdir>
-  </imgdir>
-  <imgdir name="6">
-    <imgdir name="info">
+    <imgdir name="40">
+      <int name="x" value="-153"/>
+      <int name="y" value="235"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="73"/>
     </imgdir>
-    <imgdir name="tile">
+    <imgdir name="41">
+      <int name="x" value="-153"/>
+      <int name="y" value="298"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="74"/>
     </imgdir>
-    <imgdir name="obj">
+    <imgdir name="42">
+      <int name="x" value="-152"/>
+      <int name="y" value="317"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="82"/>
     </imgdir>
-  </imgdir>
-  <imgdir name="7">
-    <imgdir name="info">
+    <imgdir name="43">
+      <int name="x" value="398"/>
+      <int name="y" value="18"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="77"/>
     </imgdir>
-    <imgdir name="tile">
+    <imgdir name="44">
+      <int name="x" value="398"/>
+      <int name="y" value="112"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="74"/>
     </imgdir>
-    <imgdir name="obj">
+    <imgdir name="45">
+      <int name="x" value="398"/>
+      <int name="y" value="175"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="73"/>
+    </imgdir>
+    <imgdir name="46">
+      <int name="x" value="398"/>
+      <int name="y" value="270"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="77"/>
+    </imgdir>
+    <imgdir name="47">
+      <int name="x" value="399"/>
+      <int name="y" value="317"/>
+      <int name="rx" value="-100"/>
+      <int name="ry" value="-100"/>
+      <int name="cx" value="1000"/>
+      <int name="cy" value="0"/>
+      <int name="a" value="255"/>
+      <int name="type" value="1"/>
+      <int name="front" value="1"/>
+      <int name="f" value="0"/>
+      <string name="bS" value="masteriaGL2"/>
+      <int name="ani" value="0"/>
+      <int name="no" value="81"/>
     </imgdir>
   </imgdir>
   <imgdir name="foothold">
     <imgdir name="3">
       <imgdir name="0">
         <imgdir name="1">
-          <int name="x1" value="180"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="270"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="17"/>
-          <int name="next" value="15"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="-1350"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="2"/>
+          <int name="next" value="16"/>
         </imgdir>
         <imgdir name="2">
-          <int name="x1" value="-180"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-90"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="7"/>
-          <int name="next" value="16"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="-300"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="3"/>
+          <int name="next" value="1"/>
         </imgdir>
         <imgdir name="3">
-          <int name="x1" value="-1080"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-990"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="13"/>
-          <int name="next" value="5"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="-240"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="-300"/>
+          <int name="prev" value="4"/>
+          <int name="next" value="2"/>
         </imgdir>
         <imgdir name="4">
-          <int name="x1" value="-450"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-360"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="9"/>
-          <int name="next" value="14"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="-180"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="-240"/>
+          <int name="prev" value="5"/>
+          <int name="next" value="3"/>
         </imgdir>
         <imgdir name="5">
-          <int name="x1" value="-990"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-900"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="3"/>
-          <int name="next" value="10"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="-120"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="-180"/>
+          <int name="prev" value="6"/>
+          <int name="next" value="4"/>
         </imgdir>
         <imgdir name="6">
-          <int name="x1" value="-1225"/>
-          <int name="y1" value="300"/>
-          <int name="x2" value="-1225"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="23"/>
-          <int name="next" value="22"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="-60"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="-120"/>
+          <int name="prev" value="7"/>
+          <int name="next" value="5"/>
         </imgdir>
         <imgdir name="7">
-          <int name="x1" value="-270"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-180"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="14"/>
-          <int name="next" value="2"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="0"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="-60"/>
+          <int name="prev" value="8"/>
+          <int name="next" value="6"/>
         </imgdir>
         <imgdir name="8">
-          <int name="x1" value="-630"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-540"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="11"/>
-          <int name="next" value="9"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="60"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="0"/>
+          <int name="prev" value="9"/>
+          <int name="next" value="7"/>
         </imgdir>
         <imgdir name="9">
-          <int name="x1" value="-540"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-450"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="8"/>
-          <int name="next" value="4"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="120"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="60"/>
+          <int name="prev" value="10"/>
+          <int name="next" value="8"/>
         </imgdir>
         <imgdir name="10">
-          <int name="x1" value="-900"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-810"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="5"/>
-          <int name="next" value="12"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="180"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="120"/>
+          <int name="prev" value="11"/>
+          <int name="next" value="9"/>
         </imgdir>
         <imgdir name="11">
-          <int name="x1" value="-720"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-630"/>
-          <int name="y2" value="336"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="240"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="180"/>
           <int name="prev" value="12"/>
-          <int name="next" value="8"/>
+          <int name="next" value="10"/>
         </imgdir>
         <imgdir name="12">
-          <int name="x1" value="-810"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-720"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="10"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="300"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="240"/>
+          <int name="prev" value="13"/>
           <int name="next" value="11"/>
         </imgdir>
         <imgdir name="13">
-          <int name="x1" value="-1170"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-1080"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="22"/>
-          <int name="next" value="3"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="360"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="300"/>
+          <int name="prev" value="14"/>
+          <int name="next" value="12"/>
         </imgdir>
         <imgdir name="14">
-          <int name="x1" value="-360"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-270"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="4"/>
-          <int name="next" value="7"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="420"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="360"/>
+          <int name="prev" value="15"/>
+          <int name="next" value="13"/>
         </imgdir>
         <imgdir name="15">
-          <int name="x1" value="270"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="360"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="1"/>
-          <int name="next" value="21"/>
+          <int name="x1" value="-1385"/>
+          <int name="y1" value="480"/>
+          <int name="x2" value="-1385"/>
+          <int name="y2" value="420"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="14"/>
         </imgdir>
         <imgdir name="16">
-          <int name="x1" value="-90"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="0"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="2"/>
-          <int name="next" value="18"/>
+          <int name="x1" value="-1350"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="-1315"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="1"/>
+          <int name="next" value="17"/>
         </imgdir>
         <imgdir name="17">
-          <int name="x1" value="90"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="180"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="18"/>
-          <int name="next" value="1"/>
+          <int name="x1" value="-1315"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="-1260"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="16"/>
+          <int name="next" value="18"/>
         </imgdir>
         <imgdir name="18">
-          <int name="x1" value="0"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="90"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="16"/>
-          <int name="next" value="17"/>
+          <int name="x1" value="-1260"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="-1170"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="17"/>
+          <int name="next" value="30"/>
         </imgdir>
         <imgdir name="19">
-          <int name="x1" value="540"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="630"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="20"/>
-          <int name="next" value="78"/>
+          <int name="x1" value="-1225"/>
+          <int name="y1" value="-240"/>
+          <int name="x2" value="-1225"/>
+          <int name="y2" value="-180"/>
+          <int name="prev" value="0"/>
+          <int name="next" value="20"/>
         </imgdir>
         <imgdir name="20">
-          <int name="x1" value="450"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="540"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="21"/>
-          <int name="next" value="19"/>
+          <int name="x1" value="-1225"/>
+          <int name="y1" value="-180"/>
+          <int name="x2" value="-1225"/>
+          <int name="y2" value="-120"/>
+          <int name="prev" value="19"/>
+          <int name="next" value="21"/>
         </imgdir>
         <imgdir name="21">
-          <int name="x1" value="360"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="450"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="15"/>
-          <int name="next" value="20"/>
+          <int name="x1" value="-1225"/>
+          <int name="y1" value="-120"/>
+          <int name="x2" value="-1225"/>
+          <int name="y2" value="-60"/>
+          <int name="prev" value="20"/>
+          <int name="next" value="22"/>
         </imgdir>
         <imgdir name="22">
           <int name="x1" value="-1225"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="-1170"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="6"/>
-          <int name="next" value="13"/>
+          <int name="y1" value="-60"/>
+          <int name="x2" value="-1225"/>
+          <int name="y2" value="0"/>
+          <int name="prev" value="21"/>
+          <int name="next" value="23"/>
         </imgdir>
         <imgdir name="23">
           <int name="x1" value="-1225"/>
-          <int name="y1" value="240"/>
+          <int name="y1" value="0"/>
           <int name="x2" value="-1225"/>
-          <int name="y2" value="300"/>
-          <int name="prev" value="30"/>
-          <int name="next" value="6"/>
+          <int name="y2" value="60"/>
+          <int name="prev" value="22"/>
+          <int name="next" value="24"/>
         </imgdir>
         <imgdir name="24">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="0"/>
-          <int name="x2" value="-1385"/>
-          <int name="y2" value="-60"/>
-          <int name="prev" value="31"/>
-          <int name="next" value="34"/>
-        </imgdir>
-        <imgdir name="25">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="420"/>
-          <int name="x2" value="-1385"/>
-          <int name="y2" value="360"/>
-          <int name="prev" value="26"/>
-          <int name="next" value="29"/>
-        </imgdir>
-        <imgdir name="26">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="480"/>
-          <int name="x2" value="-1385"/>
-          <int name="y2" value="420"/>
-          <int name="prev" value="0"/>
+          <int name="x1" value="-1225"/>
+          <int name="y1" value="60"/>
+          <int name="x2" value="-1225"/>
+          <int name="y2" value="120"/>
+          <int name="prev" value="23"/>
           <int name="next" value="25"/>
         </imgdir>
-        <imgdir name="27">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="240"/>
-          <int name="x2" value="-1385"/>
+        <imgdir name="25">
+          <int name="x1" value="-1225"/>
+          <int name="y1" value="120"/>
+          <int name="x2" value="-1225"/>
           <int name="y2" value="180"/>
-          <int name="prev" value="28"/>
-          <int name="next" value="43"/>
+          <int name="prev" value="24"/>
+          <int name="next" value="26"/>
         </imgdir>
-        <imgdir name="28">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="300"/>
-          <int name="x2" value="-1385"/>
+        <imgdir name="26">
+          <int name="x1" value="-1225"/>
+          <int name="y1" value="180"/>
+          <int name="x2" value="-1225"/>
           <int name="y2" value="240"/>
-          <int name="prev" value="29"/>
+          <int name="prev" value="25"/>
           <int name="next" value="27"/>
         </imgdir>
-        <imgdir name="29">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="360"/>
-          <int name="x2" value="-1385"/>
+        <imgdir name="27">
+          <int name="x1" value="-1225"/>
+          <int name="y1" value="240"/>
+          <int name="x2" value="-1225"/>
           <int name="y2" value="300"/>
-          <int name="prev" value="25"/>
+          <int name="prev" value="26"/>
           <int name="next" value="28"/>
         </imgdir>
-        <imgdir name="30">
+        <imgdir name="28">
           <int name="x1" value="-1225"/>
-          <int name="y1" value="180"/>
+          <int name="y1" value="300"/>
           <int name="x2" value="-1225"/>
-          <int name="y2" value="240"/>
-          <int name="prev" value="32"/>
-          <int name="next" value="23"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="27"/>
+          <int name="next" value="29"/>
+        </imgdir>
+        <imgdir name="29">
+          <int name="x1" value="-1225"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-1170"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="28"/>
+          <int name="next" value="31"/>
+        </imgdir>
+        <imgdir name="30">
+          <int name="x1" value="-1170"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="-1080"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="18"/>
+          <int name="next" value="32"/>
         </imgdir>
         <imgdir name="31">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="60"/>
-          <int name="x2" value="-1385"/>
-          <int name="y2" value="0"/>
-          <int name="prev" value="44"/>
-          <int name="next" value="24"/>
+          <int name="x1" value="-1170"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-1080"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="29"/>
+          <int name="next" value="33"/>
         </imgdir>
         <imgdir name="32">
-          <int name="x1" value="-1225"/>
-          <int name="y1" value="120"/>
-          <int name="x2" value="-1225"/>
-          <int name="y2" value="180"/>
-          <int name="prev" value="33"/>
-          <int name="next" value="30"/>
+          <int name="x1" value="-1080"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="-990"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="30"/>
+          <int name="next" value="34"/>
         </imgdir>
         <imgdir name="33">
-          <int name="x1" value="-1225"/>
-          <int name="y1" value="60"/>
-          <int name="x2" value="-1225"/>
-          <int name="y2" value="120"/>
-          <int name="prev" value="35"/>
-          <int name="next" value="32"/>
+          <int name="x1" value="-1080"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-990"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="31"/>
+          <int name="next" value="35"/>
         </imgdir>
         <imgdir name="34">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="-60"/>
-          <int name="x2" value="-1385"/>
-          <int name="y2" value="-120"/>
-          <int name="prev" value="24"/>
-          <int name="next" value="47"/>
+          <int name="x1" value="-990"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="-900"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="32"/>
+          <int name="next" value="36"/>
         </imgdir>
         <imgdir name="35">
-          <int name="x1" value="-1225"/>
-          <int name="y1" value="0"/>
-          <int name="x2" value="-1225"/>
-          <int name="y2" value="60"/>
-          <int name="prev" value="36"/>
-          <int name="next" value="33"/>
+          <int name="x1" value="-990"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-900"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="33"/>
+          <int name="next" value="37"/>
         </imgdir>
         <imgdir name="36">
-          <int name="x1" value="-1225"/>
-          <int name="y1" value="-60"/>
-          <int name="x2" value="-1225"/>
-          <int name="y2" value="0"/>
-          <int name="prev" value="37"/>
-          <int name="next" value="35"/>
+          <int name="x1" value="-900"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="-810"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="34"/>
+          <int name="next" value="38"/>
         </imgdir>
         <imgdir name="37">
-          <int name="x1" value="-1225"/>
-          <int name="y1" value="-120"/>
-          <int name="x2" value="-1225"/>
-          <int name="y2" value="-60"/>
-          <int name="prev" value="39"/>
-          <int name="next" value="36"/>
+          <int name="x1" value="-900"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-810"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="35"/>
+          <int name="next" value="39"/>
         </imgdir>
         <imgdir name="38">
-          <int name="x1" value="-1350"/>
+          <int name="x1" value="-810"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="-1315"/>
+          <int name="x2" value="-720"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="49"/>
-          <int name="next" value="50"/>
+          <int name="prev" value="36"/>
+          <int name="next" value="40"/>
         </imgdir>
         <imgdir name="39">
-          <int name="x1" value="-1225"/>
-          <int name="y1" value="-180"/>
-          <int name="x2" value="-1225"/>
-          <int name="y2" value="-120"/>
-          <int name="prev" value="40"/>
-          <int name="next" value="37"/>
+          <int name="x1" value="-810"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-720"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="37"/>
+          <int name="next" value="41"/>
         </imgdir>
         <imgdir name="40">
-          <int name="x1" value="-1225"/>
-          <int name="y1" value="-240"/>
-          <int name="x2" value="-1225"/>
-          <int name="y2" value="-180"/>
-          <int name="prev" value="0"/>
-          <int name="next" value="39"/>
-        </imgdir>
-        <imgdir name="41">
-          <int name="x1" value="-1080"/>
+          <int name="x1" value="-720"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="-990"/>
+          <int name="x2" value="-630"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="51"/>
-          <int name="next" value="53"/>
+          <int name="prev" value="38"/>
+          <int name="next" value="42"/>
+        </imgdir>
+        <imgdir name="41">
+          <int name="x1" value="-720"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-630"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="39"/>
+          <int name="next" value="43"/>
         </imgdir>
         <imgdir name="42">
-          <int name="x1" value="-810"/>
+          <int name="x1" value="-630"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="-720"/>
+          <int name="x2" value="-540"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="54"/>
-          <int name="next" value="60"/>
+          <int name="prev" value="40"/>
+          <int name="next" value="44"/>
         </imgdir>
         <imgdir name="43">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="180"/>
-          <int name="x2" value="-1385"/>
-          <int name="y2" value="120"/>
-          <int name="prev" value="27"/>
-          <int name="next" value="44"/>
+          <int name="x1" value="-630"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-540"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="41"/>
+          <int name="next" value="45"/>
         </imgdir>
         <imgdir name="44">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="120"/>
-          <int name="x2" value="-1385"/>
-          <int name="y2" value="60"/>
-          <int name="prev" value="43"/>
-          <int name="next" value="31"/>
+          <int name="x1" value="-540"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="-450"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="42"/>
+          <int name="next" value="46"/>
         </imgdir>
         <imgdir name="45">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="-240"/>
-          <int name="x2" value="-1385"/>
-          <int name="y2" value="-300"/>
-          <int name="prev" value="46"/>
-          <int name="next" value="48"/>
+          <int name="x1" value="-540"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-450"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="43"/>
+          <int name="next" value="47"/>
         </imgdir>
         <imgdir name="46">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="-180"/>
-          <int name="x2" value="-1385"/>
-          <int name="y2" value="-240"/>
-          <int name="prev" value="47"/>
-          <int name="next" value="45"/>
-        </imgdir>
-        <imgdir name="47">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="-120"/>
-          <int name="x2" value="-1385"/>
-          <int name="y2" value="-180"/>
-          <int name="prev" value="34"/>
-          <int name="next" value="46"/>
-        </imgdir>
-        <imgdir name="48">
-          <int name="x1" value="-1385"/>
-          <int name="y1" value="-300"/>
-          <int name="x2" value="-1385"/>
+          <int name="x1" value="-450"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="-360"/>
           <int name="y2" value="-324"/>
+          <int name="prev" value="44"/>
+          <int name="next" value="48"/>
+        </imgdir>
+        <imgdir name="47">
+          <int name="x1" value="-450"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-360"/>
+          <int name="y2" value="336"/>
           <int name="prev" value="45"/>
           <int name="next" value="49"/>
         </imgdir>
-        <imgdir name="49">
-          <int name="x1" value="-1385"/>
+        <imgdir name="48">
+          <int name="x1" value="-360"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="-1350"/>
+          <int name="x2" value="-270"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="48"/>
-          <int name="next" value="38"/>
+          <int name="prev" value="46"/>
+          <int name="next" value="50"/>
+        </imgdir>
+        <imgdir name="49">
+          <int name="x1" value="-360"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-270"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="47"/>
+          <int name="next" value="51"/>
         </imgdir>
         <imgdir name="50">
-          <int name="x1" value="-1315"/>
+          <int name="x1" value="-270"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="-1260"/>
+          <int name="x2" value="-180"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="38"/>
+          <int name="prev" value="48"/>
           <int name="next" value="52"/>
         </imgdir>
         <imgdir name="51">
-          <int name="x1" value="-1170"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="-1080"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="52"/>
-          <int name="next" value="41"/>
+          <int name="x1" value="-270"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-180"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="49"/>
+          <int name="next" value="53"/>
         </imgdir>
         <imgdir name="52">
-          <int name="x1" value="-1260"/>
+          <int name="x1" value="-180"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="-1170"/>
+          <int name="x2" value="-90"/>
           <int name="y2" value="-324"/>
           <int name="prev" value="50"/>
-          <int name="next" value="51"/>
+          <int name="next" value="54"/>
         </imgdir>
         <imgdir name="53">
-          <int name="x1" value="-990"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="-900"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="41"/>
-          <int name="next" value="54"/>
+          <int name="x1" value="-180"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="-90"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="51"/>
+          <int name="next" value="55"/>
         </imgdir>
         <imgdir name="54">
-          <int name="x1" value="-900"/>
+          <int name="x1" value="-90"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="-810"/>
+          <int name="x2" value="0"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="53"/>
-          <int name="next" value="42"/>
+          <int name="prev" value="52"/>
+          <int name="next" value="56"/>
         </imgdir>
         <imgdir name="55">
-          <int name="x1" value="-630"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="-540"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="60"/>
-          <int name="next" value="56"/>
+          <int name="x1" value="-90"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="0"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="53"/>
+          <int name="next" value="57"/>
         </imgdir>
         <imgdir name="56">
-          <int name="x1" value="-540"/>
+          <int name="x1" value="0"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="-450"/>
+          <int name="x2" value="90"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="55"/>
-          <int name="next" value="57"/>
+          <int name="prev" value="54"/>
+          <int name="next" value="58"/>
         </imgdir>
         <imgdir name="57">
-          <int name="x1" value="-450"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="-360"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="56"/>
+          <int name="x1" value="0"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="90"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="55"/>
           <int name="next" value="59"/>
         </imgdir>
         <imgdir name="58">
-          <int name="x1" value="0"/>
+          <int name="x1" value="90"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="90"/>
+          <int name="x2" value="180"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="61"/>
-          <int name="next" value="64"/>
+          <int name="prev" value="56"/>
+          <int name="next" value="60"/>
         </imgdir>
         <imgdir name="59">
-          <int name="x1" value="-360"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="-270"/>
-          <int name="y2" value="-324"/>
+          <int name="x1" value="90"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="180"/>
+          <int name="y2" value="336"/>
           <int name="prev" value="57"/>
-          <int name="next" value="62"/>
+          <int name="next" value="61"/>
         </imgdir>
         <imgdir name="60">
-          <int name="x1" value="-720"/>
+          <int name="x1" value="180"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="-630"/>
+          <int name="x2" value="270"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="42"/>
-          <int name="next" value="55"/>
+          <int name="prev" value="58"/>
+          <int name="next" value="62"/>
         </imgdir>
         <imgdir name="61">
-          <int name="x1" value="-90"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="0"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="63"/>
-          <int name="next" value="58"/>
-        </imgdir>
-        <imgdir name="62">
-          <int name="x1" value="-270"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="-180"/>
-          <int name="y2" value="-324"/>
+          <int name="x1" value="180"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="270"/>
+          <int name="y2" value="336"/>
           <int name="prev" value="59"/>
           <int name="next" value="63"/>
         </imgdir>
-        <imgdir name="63">
-          <int name="x1" value="-180"/>
+        <imgdir name="62">
+          <int name="x1" value="270"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="-90"/>
+          <int name="x2" value="360"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="62"/>
-          <int name="next" value="61"/>
+          <int name="prev" value="60"/>
+          <int name="next" value="64"/>
         </imgdir>
-        <imgdir name="64">
-          <int name="x1" value="90"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="180"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="58"/>
+        <imgdir name="63">
+          <int name="x1" value="270"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="360"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="61"/>
           <int name="next" value="65"/>
         </imgdir>
-        <imgdir name="65">
-          <int name="x1" value="180"/>
+        <imgdir name="64">
+          <int name="x1" value="360"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="270"/>
+          <int name="x2" value="450"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="64"/>
+          <int name="prev" value="62"/>
           <int name="next" value="66"/>
         </imgdir>
-        <imgdir name="66">
-          <int name="x1" value="270"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="360"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="65"/>
+        <imgdir name="65">
+          <int name="x1" value="360"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="450"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="63"/>
           <int name="next" value="67"/>
         </imgdir>
-        <imgdir name="67">
-          <int name="x1" value="360"/>
+        <imgdir name="66">
+          <int name="x1" value="450"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="450"/>
+          <int name="x2" value="540"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="66"/>
+          <int name="prev" value="64"/>
           <int name="next" value="68"/>
         </imgdir>
-        <imgdir name="68">
+        <imgdir name="67">
           <int name="x1" value="450"/>
-          <int name="y1" value="-324"/>
+          <int name="y1" value="336"/>
           <int name="x2" value="540"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="67"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="65"/>
           <int name="next" value="69"/>
         </imgdir>
-        <imgdir name="69">
+        <imgdir name="68">
           <int name="x1" value="540"/>
           <int name="y1" value="-324"/>
           <int name="x2" value="630"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="68"/>
+          <int name="prev" value="66"/>
           <int name="next" value="70"/>
         </imgdir>
+        <imgdir name="69">
+          <int name="x1" value="540"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="630"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="67"/>
+          <int name="next" value="71"/>
+        </imgdir>
         <imgdir name="70">
           <int name="x1" value="630"/>
           <int name="y1" value="-324"/>
           <int name="x2" value="720"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="69"/>
-          <int name="next" value="71"/>
-        </imgdir>
-        <imgdir name="71">
-          <int name="x1" value="720"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="810"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="70"/>
-          <int name="next" value="76"/>
-        </imgdir>
-        <imgdir name="72">
-          <int name="x1" value="1170"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="1260"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="73"/>
-          <int name="next" value="115"/>
-        </imgdir>
-        <imgdir name="73">
-          <int name="x1" value="1080"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="1170"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="74"/>
+          <int name="prev" value="68"/>
           <int name="next" value="72"/>
         </imgdir>
-        <imgdir name="74">
-          <int name="x1" value="990"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="1080"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="75"/>
+        <imgdir name="71">
+          <int name="x1" value="630"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="720"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="69"/>
           <int name="next" value="73"/>
         </imgdir>
-        <imgdir name="75">
-          <int name="x1" value="900"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="990"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="76"/>
-          <int name="next" value="74"/>
-        </imgdir>
-        <imgdir name="76">
-          <int name="x1" value="810"/>
+        <imgdir name="72">
+          <int name="x1" value="720"/>
           <int name="y1" value="-324"/>
-          <int name="x2" value="900"/>
+          <int name="x2" value="810"/>
           <int name="y2" value="-324"/>
-          <int name="prev" value="71"/>
-          <int name="next" value="75"/>
+          <int name="prev" value="70"/>
+          <int name="next" value="74"/>
         </imgdir>
-        <imgdir name="77">
+        <imgdir name="73">
           <int name="x1" value="720"/>
           <int name="y1" value="336"/>
           <int name="x2" value="810"/>
           <int name="y2" value="336"/>
-          <int name="prev" value="78"/>
-          <int name="next" value="79"/>
+          <int name="prev" value="71"/>
+          <int name="next" value="75"/>
         </imgdir>
-        <imgdir name="78">
-          <int name="x1" value="630"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="720"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="19"/>
-          <int name="next" value="77"/>
+        <imgdir name="74">
+          <int name="x1" value="810"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="900"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="72"/>
+          <int name="next" value="76"/>
         </imgdir>
-        <imgdir name="79">
+        <imgdir name="75">
           <int name="x1" value="810"/>
           <int name="y1" value="336"/>
           <int name="x2" value="900"/>
           <int name="y2" value="336"/>
-          <int name="prev" value="77"/>
-          <int name="next" value="80"/>
+          <int name="prev" value="73"/>
+          <int name="next" value="77"/>
         </imgdir>
-        <imgdir name="80">
+        <imgdir name="76">
+          <int name="x1" value="900"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="990"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="74"/>
+          <int name="next" value="78"/>
+        </imgdir>
+        <imgdir name="77">
           <int name="x1" value="900"/>
           <int name="y1" value="336"/>
           <int name="x2" value="990"/>
           <int name="y2" value="336"/>
-          <int name="prev" value="79"/>
-          <int name="next" value="81"/>
+          <int name="prev" value="75"/>
+          <int name="next" value="79"/>
         </imgdir>
-        <imgdir name="81">
+        <imgdir name="78">
+          <int name="x1" value="990"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="1080"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="76"/>
+          <int name="next" value="80"/>
+        </imgdir>
+        <imgdir name="79">
           <int name="x1" value="990"/>
           <int name="y1" value="336"/>
           <int name="x2" value="1080"/>
           <int name="y2" value="336"/>
-          <int name="prev" value="80"/>
+          <int name="prev" value="77"/>
+          <int name="next" value="81"/>
+        </imgdir>
+        <imgdir name="80">
+          <int name="x1" value="1080"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="1170"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="78"/>
           <int name="next" value="82"/>
         </imgdir>
-        <imgdir name="82">
+        <imgdir name="81">
           <int name="x1" value="1080"/>
           <int name="y1" value="336"/>
           <int name="x2" value="1170"/>
           <int name="y2" value="336"/>
-          <int name="prev" value="81"/>
+          <int name="prev" value="79"/>
           <int name="next" value="83"/>
         </imgdir>
+        <imgdir name="82">
+          <int name="x1" value="1170"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="1260"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="80"/>
+          <int name="next" value="84"/>
+        </imgdir>
         <imgdir name="83">
           <int name="x1" value="1170"/>
           <int name="y1" value="336"/>
           <int name="x2" value="1260"/>
           <int name="y2" value="336"/>
-          <int name="prev" value="82"/>
-          <int name="next" value="84"/>
+          <int name="prev" value="81"/>
+          <int name="next" value="85"/>
         </imgdir>
         <imgdir name="84">
+          <int name="x1" value="1260"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="1350"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="82"/>
+          <int name="next" value="86"/>
+        </imgdir>
+        <imgdir name="85">
           <int name="x1" value="1260"/>
           <int name="y1" value="336"/>
           <int name="x2" value="1350"/>
           <int name="y2" value="336"/>
           <int name="prev" value="83"/>
-          <int name="next" value="85"/>
+          <int name="next" value="87"/>
         </imgdir>
-        <imgdir name="85">
+        <imgdir name="86">
           <int name="x1" value="1350"/>
-          <int name="y1" value="336"/>
+          <int name="y1" value="-324"/>
           <int name="x2" value="1440"/>
-          <int name="y2" value="336"/>
+          <int name="y2" value="-324"/>
           <int name="prev" value="84"/>
-          <int name="next" value="86"/>
-        </imgdir>
-        <imgdir name="86">
-          <int name="x1" value="1440"/>
-          <int name="y1" value="336"/>
-          <int name="x2" value="1530"/>
-          <int name="y2" value="336"/>
-          <int name="prev" value="85"/>
-          <int name="next" value="87"/>
+          <int name="next" value="88"/>
         </imgdir>
         <imgdir name="87">
-          <int name="x1" value="1530"/>
+          <int name="x1" value="1350"/>
           <int name="y1" value="336"/>
-          <int name="x2" value="1620"/>
+          <int name="x2" value="1440"/>
           <int name="y2" value="336"/>
-          <int name="prev" value="86"/>
-          <int name="next" value="91"/>
+          <int name="prev" value="85"/>
+          <int name="next" value="89"/>
         </imgdir>
         <imgdir name="88">
-          <int name="x1" value="1675"/>
-          <int name="y1" value="300"/>
-          <int name="x2" value="1675"/>
-          <int name="y2" value="240"/>
-          <int name="prev" value="92"/>
-          <int name="next" value="89"/>
+          <int name="x1" value="1440"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="1530"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="86"/>
+          <int name="next" value="90"/>
         </imgdir>
         <imgdir name="89">
-          <int name="x1" value="1675"/>
-          <int name="y1" value="240"/>
-          <int name="x2" value="1675"/>
-          <int name="y2" value="180"/>
-          <int name="prev" value="88"/>
-          <int name="next" value="90"/>
+          <int name="x1" value="1440"/>
+          <int name="y1" value="336"/>
+          <int name="x2" value="1530"/>
+          <int name="y2" value="336"/>
+          <int name="prev" value="87"/>
+          <int name="next" value="91"/>
         </imgdir>
         <imgdir name="90">
-          <int name="x1" value="1675"/>
-          <int name="y1" value="180"/>
-          <int name="x2" value="1675"/>
-          <int name="y2" value="120"/>
-          <int name="prev" value="89"/>
-          <int name="next" value="99"/>
+          <int name="x1" value="1530"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="1620"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="88"/>
+          <int name="next" value="92"/>
         </imgdir>
         <imgdir name="91">
-          <int name="x1" value="1620"/>
+          <int name="x1" value="1530"/>
           <int name="y1" value="336"/>
-          <int name="x2" value="1675"/>
+          <int name="x2" value="1620"/>
           <int name="y2" value="336"/>
-          <int name="prev" value="87"/>
-          <int name="next" value="92"/>
+          <int name="prev" value="89"/>
+          <int name="next" value="93"/>
         </imgdir>
         <imgdir name="92">
-          <int name="x1" value="1675"/>
+          <int name="x1" value="1620"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="1710"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="90"/>
+          <int name="next" value="104"/>
+        </imgdir>
+        <imgdir name="93">
+          <int name="x1" value="1620"/>
           <int name="y1" value="336"/>
           <int name="x2" value="1675"/>
-          <int name="y2" value="300"/>
+          <int name="y2" value="336"/>
           <int name="prev" value="91"/>
-          <int name="next" value="88"/>
-        </imgdir>
-        <imgdir name="93">
-          <int name="x1" value="1835"/>
-          <int name="y1" value="420"/>
-          <int name="x2" value="1835"/>
-          <int name="y2" value="480"/>
-          <int name="prev" value="96"/>
-          <int name="next" value="0"/>
+          <int name="next" value="103"/>
         </imgdir>
         <imgdir name="94">
-          <int name="x1" value="1835"/>
-          <int name="y1" value="180"/>
-          <int name="x2" value="1835"/>
-          <int name="y2" value="240"/>
-          <int name="prev" value="103"/>
-          <int name="next" value="97"/>
+          <int name="x1" value="1675"/>
+          <int name="y1" value="-180"/>
+          <int name="x2" value="1675"/>
+          <int name="y2" value="-240"/>
+          <int name="prev" value="95"/>
+          <int name="next" value="0"/>
         </imgdir>
         <imgdir name="95">
-          <int name="x1" value="1835"/>
-          <int name="y1" value="300"/>
-          <int name="x2" value="1835"/>
-          <int name="y2" value="360"/>
-          <int name="prev" value="97"/>
-          <int name="next" value="96"/>
+          <int name="x1" value="1675"/>
+          <int name="y1" value="-120"/>
+          <int name="x2" value="1675"/>
+          <int name="y2" value="-180"/>
+          <int name="prev" value="96"/>
+          <int name="next" value="94"/>
         </imgdir>
         <imgdir name="96">
-          <int name="x1" value="1835"/>
-          <int name="y1" value="360"/>
-          <int name="x2" value="1835"/>
-          <int name="y2" value="420"/>
-          <int name="prev" value="95"/>
-          <int name="next" value="93"/>
+          <int name="x1" value="1675"/>
+          <int name="y1" value="-60"/>
+          <int name="x2" value="1675"/>
+          <int name="y2" value="-120"/>
+          <int name="prev" value="97"/>
+          <int name="next" value="95"/>
         </imgdir>
         <imgdir name="97">
-          <int name="x1" value="1835"/>
-          <int name="y1" value="240"/>
-          <int name="x2" value="1835"/>
-          <int name="y2" value="300"/>
-          <int name="prev" value="94"/>
-          <int name="next" value="95"/>
+          <int name="x1" value="1675"/>
+          <int name="y1" value="0"/>
+          <int name="x2" value="1675"/>
+          <int name="y2" value="-60"/>
+          <int name="prev" value="98"/>
+          <int name="next" value="96"/>
         </imgdir>
         <imgdir name="98">
           <int name="x1" value="1675"/>
-          <int name="y1" value="-120"/>
+          <int name="y1" value="60"/>
           <int name="x2" value="1675"/>
-          <int name="y2" value="-180"/>
-          <int name="prev" value="105"/>
-          <int name="next" value="109"/>
+          <int name="y2" value="0"/>
+          <int name="prev" value="99"/>
+          <int name="next" value="97"/>
         </imgdir>
         <imgdir name="99">
           <int name="x1" value="1675"/>
           <int name="y1" value="120"/>
           <int name="x2" value="1675"/>
           <int name="y2" value="60"/>
-          <int name="prev" value="90"/>
-          <int name="next" value="101"/>
+          <int name="prev" value="100"/>
+          <int name="next" value="98"/>
         </imgdir>
         <imgdir name="100">
-          <int name="x1" value="1835"/>
-          <int name="y1" value="-120"/>
-          <int name="x2" value="1835"/>
-          <int name="y2" value="-60"/>
-          <int name="prev" value="108"/>
-          <int name="next" value="106"/>
+          <int name="x1" value="1675"/>
+          <int name="y1" value="180"/>
+          <int name="x2" value="1675"/>
+          <int name="y2" value="120"/>
+          <int name="prev" value="101"/>
+          <int name="next" value="99"/>
         </imgdir>
         <imgdir name="101">
           <int name="x1" value="1675"/>
-          <int name="y1" value="60"/>
+          <int name="y1" value="240"/>
           <int name="x2" value="1675"/>
-          <int name="y2" value="0"/>
-          <int name="prev" value="99"/>
-          <int name="next" value="104"/>
+          <int name="y2" value="180"/>
+          <int name="prev" value="102"/>
+          <int name="next" value="100"/>
         </imgdir>
         <imgdir name="102">
-          <int name="x1" value="1835"/>
-          <int name="y1" value="60"/>
-          <int name="x2" value="1835"/>
-          <int name="y2" value="120"/>
-          <int name="prev" value="107"/>
-          <int name="next" value="103"/>
+          <int name="x1" value="1675"/>
+          <int name="y1" value="300"/>
+          <int name="x2" value="1675"/>
+          <int name="y2" value="240"/>
+          <int name="prev" value="103"/>
+          <int name="next" value="101"/>
         </imgdir>
         <imgdir name="103">
-          <int name="x1" value="1835"/>
-          <int name="y1" value="120"/>
-          <int name="x2" value="1835"/>
-          <int name="y2" value="180"/>
-          <int name="prev" value="102"/>
-          <int name="next" value="94"/>
-        </imgdir>
-        <imgdir name="104">
           <int name="x1" value="1675"/>
-          <int name="y1" value="0"/>
+          <int name="y1" value="336"/>
           <int name="x2" value="1675"/>
-          <int name="y2" value="-60"/>
-          <int name="prev" value="101"/>
+          <int name="y2" value="300"/>
+          <int name="prev" value="93"/>
+          <int name="next" value="102"/>
+        </imgdir>
+        <imgdir name="104">
+          <int name="x1" value="1710"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="1765"/>
+          <int name="y2" value="-324"/>
+          <int name="prev" value="92"/>
           <int name="next" value="105"/>
         </imgdir>
         <imgdir name="105">
-          <int name="x1" value="1675"/>
-          <int name="y1" value="-60"/>
-          <int name="x2" value="1675"/>
-          <int name="y2" value="-120"/>
+          <int name="x1" value="1765"/>
+          <int name="y1" value="-324"/>
+          <int name="x2" value="1835"/>
+          <int name="y2" value="-324"/>
           <int name="prev" value="104"/>
-          <int name="next" value="98"/>
+          <int name="next" value="106"/>
         </imgdir>
         <imgdir name="106">
           <int name="x1" value="1835"/>
-          <int name="y1" value="-60"/>
+          <int name="y1" value="-324"/>
           <int name="x2" value="1835"/>
-          <int name="y2" value="0"/>
-          <int name="prev" value="100"/>
+          <int name="y2" value="-300"/>
+          <int name="prev" value="105"/>
           <int name="next" value="107"/>
         </imgdir>
         <imgdir name="107">
           <int name="x1" value="1835"/>
-          <int name="y1" value="0"/>
+          <int name="y1" value="-300"/>
           <int name="x2" value="1835"/>
-          <int name="y2" value="60"/>
+          <int name="y2" value="-240"/>
           <int name="prev" value="106"/>
-          <int name="next" value="102"/>
+          <int name="next" value="108"/>
         </imgdir>
         <imgdir name="108">
           <int name="x1" value="1835"/>
-          <int name="y1" value="-180"/>
+          <int name="y1" value="-240"/>
           <int name="x2" value="1835"/>
-          <int name="y2" value="-120"/>
-          <int name="prev" value="112"/>
-          <int name="next" value="100"/>
+          <int name="y2" value="-180"/>
+          <int name="prev" value="107"/>
+          <int name="next" value="109"/>
         </imgdir>
         <imgdir name="109">
-          <int name="x1" value="1675"/>
+          <int name="x1" value="1835"/>
           <int name="y1" value="-180"/>
-          <int name="x2" value="1675"/>
-          <int name="y2" value="-240"/>
-          <int name="prev" value="98"/>
-          <int name="next" value="0"/>
+          <int name="x2" value="1835"/>
+          <int name="y2" value="-120"/>
+          <int name="prev" value="108"/>
+          <int name="next" value="110"/>
         </imgdir>
         <imgdir name="110">
-          <int name="x1" value="1620"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="1710"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="111"/>
-          <int name="next" value="119"/>
+          <int name="x1" value="1835"/>
+          <int name="y1" value="-120"/>
+          <int name="x2" value="1835"/>
+          <int name="y2" value="-60"/>
+          <int name="prev" value="109"/>
+          <int name="next" value="111"/>
         </imgdir>
         <imgdir name="111">
-          <int name="x1" value="1530"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="1620"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="113"/>
-          <int name="next" value="110"/>
+          <int name="x1" value="1835"/>
+          <int name="y1" value="-60"/>
+          <int name="x2" value="1835"/>
+          <int name="y2" value="0"/>
+          <int name="prev" value="110"/>
+          <int name="next" value="112"/>
         </imgdir>
         <imgdir name="112">
           <int name="x1" value="1835"/>
-          <int name="y1" value="-240"/>
+          <int name="y1" value="0"/>
           <int name="x2" value="1835"/>
-          <int name="y2" value="-180"/>
-          <int name="prev" value="118"/>
-          <int name="next" value="108"/>
+          <int name="y2" value="60"/>
+          <int name="prev" value="111"/>
+          <int name="next" value="113"/>
         </imgdir>
         <imgdir name="113">
-          <int name="x1" value="1440"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="1530"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="114"/>
-          <int name="next" value="111"/>
+          <int name="x1" value="1835"/>
+          <int name="y1" value="60"/>
+          <int name="x2" value="1835"/>
+          <int name="y2" value="120"/>
+          <int name="prev" value="112"/>
+          <int name="next" value="114"/>
         </imgdir>
         <imgdir name="114">
-          <int name="x1" value="1350"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="1440"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="115"/>
-          <int name="next" value="113"/>
+          <int name="x1" value="1835"/>
+          <int name="y1" value="120"/>
+          <int name="x2" value="1835"/>
+          <int name="y2" value="180"/>
+          <int name="prev" value="113"/>
+          <int name="next" value="115"/>
         </imgdir>
         <imgdir name="115">
-          <int name="x1" value="1260"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="1350"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="72"/>
-          <int name="next" value="114"/>
+          <int name="x1" value="1835"/>
+          <int name="y1" value="180"/>
+          <int name="x2" value="1835"/>
+          <int name="y2" value="240"/>
+          <int name="prev" value="114"/>
+          <int name="next" value="116"/>
         </imgdir>
         <imgdir name="116">
-          <int name="x1" value="1765"/>
-          <int name="y1" value="-324"/>
+          <int name="x1" value="1835"/>
+          <int name="y1" value="240"/>
           <int name="x2" value="1835"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="119"/>
+          <int name="y2" value="300"/>
+          <int name="prev" value="115"/>
           <int name="next" value="117"/>
         </imgdir>
         <imgdir name="117">
           <int name="x1" value="1835"/>
-          <int name="y1" value="-324"/>
+          <int name="y1" value="300"/>
           <int name="x2" value="1835"/>
-          <int name="y2" value="-300"/>
+          <int name="y2" value="360"/>
           <int name="prev" value="116"/>
           <int name="next" value="118"/>
         </imgdir>
         <imgdir name="118">
           <int name="x1" value="1835"/>
-          <int name="y1" value="-300"/>
+          <int name="y1" value="360"/>
           <int name="x2" value="1835"/>
-          <int name="y2" value="-240"/>
+          <int name="y2" value="420"/>
           <int name="prev" value="117"/>
-          <int name="next" value="112"/>
+          <int name="next" value="119"/>
         </imgdir>
         <imgdir name="119">
-          <int name="x1" value="1710"/>
-          <int name="y1" value="-324"/>
-          <int name="x2" value="1765"/>
-          <int name="y2" value="-324"/>
-          <int name="prev" value="110"/>
-          <int name="next" value="116"/>
+          <int name="x1" value="1835"/>
+          <int name="y1" value="420"/>
+          <int name="x2" value="1835"/>
+          <int name="y2" value="480"/>
+          <int name="prev" value="118"/>
+          <int name="next" value="0"/>
         </imgdir>
       </imgdir>
     </imgdir>
   </imgdir>
-  <imgdir name="ladderRope">
-  </imgdir>
-  <imgdir name="miniMap">
-    <canvas name="canvas" width="207" height="65">
-    </canvas>
-    <int name="width" value="3315"/>
-    <int name="height" value="1049"/>
-    <int name="centerX" value="1434"/>
-    <int name="centerY" value="480"/>
-    <int name="mag" value="4"/>
-  </imgdir>
-  <imgdir name="portal">
+  <imgdir name="life">
     <imgdir name="0">
-      <string name="pn" value="sp"/>
-      <int name="pt" value="0"/>
-      <int name="x" value="-917"/>
-      <int name="y" value="318"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
-    </imgdir>
-    <imgdir name="1">
-      <string name="pn" value="sp"/>
-      <int name="pt" value="0"/>
-      <int name="x" value="-1012"/>
-      <int name="y" value="312"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
-    </imgdir>
-    <imgdir name="2">
-      <string name="pn" value="sp"/>
-      <int name="pt" value="0"/>
-      <int name="x" value="-780"/>
-      <int name="y" value="233"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
-    </imgdir>
-    <imgdir name="3">
-      <string name="pn" value="sp"/>
-      <int name="pt" value="0"/>
-      <int name="x" value="-730"/>
-      <int name="y" value="316"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
-    </imgdir>
-    <imgdir name="4">
-      <string name="pn" value="sp"/>
-      <int name="pt" value="0"/>
-      <int name="x" value="-824"/>
-      <int name="y" value="312"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
-    </imgdir>
-    <imgdir name="6">
-      <string name="pn" value="next01"/>
-      <int name="pt" value="8"/>
-      <int name="x" value="1547"/>
-      <int name="y" value="336"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
-      <string name="script" value="glpqPortalDummy"/>
-    </imgdir>
-    <imgdir name="5">
-      <string name="pn" value="next00"/>
-      <int name="pt" value="8"/>
-      <int name="x" value="824"/>
-      <int name="y" value="328"/>
-      <int name="tm" value="999999999"/>
-      <string name="tn" value=""/>
-      <string name="script" value="glpqPortal0"/>
+      <string name="id" value="9201112"/>
+      <int name="x" value="-486"/>
+      <int name="y" value="329"/>
+      <int name="cy" value="336"/>
+      <int name="mobTime" value="0"/>
+      <int name="rx0" value="-536"/>
+      <int name="rx1" value="-436"/>
+      <int name="f" value="0"/>
+      <string name="type" value="n"/>
+      <int name="fh" value="45"/>
     </imgdir>
   </imgdir>
 </imgdir>
diff --git a/wz/Map.wz/Map/Map6/610030200.img.xml b/wz/Map.wz/Map/Map6/610030200.img.xml
index 773a708b1..d33448ec9 100644
--- a/wz/Map.wz/Map/Map6/610030200.img.xml
+++ b/wz/Map.wz/Map/Map6/610030200.img.xml
@@ -6,7 +6,7 @@
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
     <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/Courtyard"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030300.img.xml b/wz/Map.wz/Map/Map6/610030300.img.xml
index be47c1a5a..15fd0f5e3 100644
--- a/wz/Map.wz/Map/Map6/610030300.img.xml
+++ b/wz/Map.wz/Map/Map6/610030300.img.xml
@@ -4,7 +4,7 @@
     <string name="bgm" value="BgmGL/PartyQuestGL"/>
     <int name="cloud" value="0"/>
     <int name="swim" value="0"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <int name="hideMinimap" value="0"/>
     <string name="mapMark" value="Crimsonwood"/>
     <float name="mobRate" value="1.0"/>
diff --git a/wz/Map.wz/Map/Map6/610030400.img.xml b/wz/Map.wz/Map/Map6/610030400.img.xml
index 8dd20edb8..0a970ebd9 100644
--- a/wz/Map.wz/Map/Map6/610030400.img.xml
+++ b/wz/Map.wz/Map/Map6/610030400.img.xml
@@ -6,7 +6,7 @@
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
     <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <float name="mobRate" value="10.0"/>
     <string name="bgm" value="BgmGL/PartyQuestGL"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030500.img.xml b/wz/Map.wz/Map/Map6/610030500.img.xml
index dd9fa1629..d68f1d56d 100644
--- a/wz/Map.wz/Map/Map6/610030500.img.xml
+++ b/wz/Map.wz/Map/Map6/610030500.img.xml
@@ -5,7 +5,7 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/PartyQuestGL"/>
     <int name="fly" value="0"/>
diff --git a/wz/Map.wz/Map/Map6/610030510.img.xml b/wz/Map.wz/Map/Map6/610030510.img.xml
index c7b681131..f4b0244ca 100644
--- a/wz/Map.wz/Map/Map6/610030510.img.xml
+++ b/wz/Map.wz/Map/Map6/610030510.img.xml
@@ -4,7 +4,7 @@
     <string name="bgm" value="BgmGL/PartyQuestGL"/>
     <int name="cloud" value="0"/>
     <int name="swim" value="0"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <int name="hideMinimap" value="0"/>
     <string name="mapMark" value="Crimsonwood"/>
     <float name="mobRate" value="0.4999999"/>
diff --git a/wz/Map.wz/Map/Map6/610030520.img.xml b/wz/Map.wz/Map/Map6/610030520.img.xml
index c4fc9e7fa..353b360c9 100644
--- a/wz/Map.wz/Map/Map6/610030520.img.xml
+++ b/wz/Map.wz/Map/Map6/610030520.img.xml
@@ -6,7 +6,7 @@
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
     <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/PartyQuestGL"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030521.img.xml b/wz/Map.wz/Map/Map6/610030521.img.xml
index 08edd1735..e723f73df 100644
--- a/wz/Map.wz/Map/Map6/610030521.img.xml
+++ b/wz/Map.wz/Map/Map6/610030521.img.xml
@@ -6,7 +6,7 @@
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
     <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/PartyQuestGL"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030522.img.xml b/wz/Map.wz/Map/Map6/610030522.img.xml
index e2f832605..408ab4c9b 100644
--- a/wz/Map.wz/Map/Map6/610030522.img.xml
+++ b/wz/Map.wz/Map/Map6/610030522.img.xml
@@ -6,7 +6,7 @@
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
     <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/PartyQuestGL"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030530.img.xml b/wz/Map.wz/Map/Map6/610030530.img.xml
index 679a6b6ab..4ea1d0349 100644
--- a/wz/Map.wz/Map/Map6/610030530.img.xml
+++ b/wz/Map.wz/Map/Map6/610030530.img.xml
@@ -4,7 +4,7 @@
     <string name="bgm" value="BgmGL/PartyQuestGL"/>
     <int name="cloud" value="0"/>
     <int name="swim" value="0"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <int name="hideMinimap" value="0"/>
     <string name="mapMark" value="Crimsonwood"/>
     <float name="mobRate" value="0.6"/>
diff --git a/wz/Map.wz/Map/Map6/610030540.img.xml b/wz/Map.wz/Map/Map6/610030540.img.xml
index a49f81658..a0d06f9c4 100644
--- a/wz/Map.wz/Map/Map6/610030540.img.xml
+++ b/wz/Map.wz/Map/Map6/610030540.img.xml
@@ -6,7 +6,7 @@
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
     <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/PartyQuestGL"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030550.img.xml b/wz/Map.wz/Map/Map6/610030550.img.xml
index 9b4c2add7..9698444be 100644
--- a/wz/Map.wz/Map/Map6/610030550.img.xml
+++ b/wz/Map.wz/Map/Map6/610030550.img.xml
@@ -6,7 +6,7 @@
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
     <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <float name="mobRate" value="0.8"/>
     <string name="bgm" value="BgmGL/PartyQuestGL"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030600.img.xml b/wz/Map.wz/Map/Map6/610030600.img.xml
index 64e050593..4127a92b2 100644
--- a/wz/Map.wz/Map/Map6/610030600.img.xml
+++ b/wz/Map.wz/Map/Map6/610030600.img.xml
@@ -6,7 +6,7 @@
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
     <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <float name="mobRate" value="10.0"/>
     <string name="bgm" value="BgmGL/GrandmastersGauntlet"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/610030700.img.xml b/wz/Map.wz/Map/Map6/610030700.img.xml
index 8f150c963..3f0dc4565 100644
--- a/wz/Map.wz/Map/Map6/610030700.img.xml
+++ b/wz/Map.wz/Map/Map6/610030700.img.xml
@@ -4,7 +4,7 @@
     <string name="bgm" value="BgmGL/Courtyard"/>
     <int name="cloud" value="0"/>
     <int name="swim" value="0"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <int name="hideMinimap" value="0"/>
     <string name="mapMark" value="Crimsonwood"/>
     <float name="mobRate" value="1.0"/>
diff --git a/wz/Map.wz/Map/Map6/610030800.img.xml b/wz/Map.wz/Map/Map6/610030800.img.xml
index 0ad48e700..5a71dcf6d 100644
--- a/wz/Map.wz/Map/Map6/610030800.img.xml
+++ b/wz/Map.wz/Map/Map6/610030800.img.xml
@@ -6,7 +6,7 @@
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
     <int name="returnMap" value="610030010"/>
-    <int name="forcedReturn" value="610030010"/>
+    <int name="forcedReturn" value="610030020"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/PartyQuestGL"/>
     <string name="mapMark" value="Crimsonwood"/>
diff --git a/wz/Map.wz/Map/Map6/670000100.img.xml b/wz/Map.wz/Map/Map6/670000100.img.xml
index a9d6ba68c..42efc0a71 100644
--- a/wz/Map.wz/Map/Map6/670000100.img.xml
+++ b/wz/Map.wz/Map/Map6/670000100.img.xml
@@ -5,8 +5,8 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="670000100"/>
-    <int name="forcedReturn" value="670000100"/>
+    <int name="returnMap" value="680000000"/>
+    <int name="forcedReturn" value="999999999"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/amoria"/>
     <string name="mapMark" value="Wedding"/>
diff --git a/wz/Map.wz/Map/Map6/670000200.img.xml b/wz/Map.wz/Map/Map6/670000200.img.xml
index b02606000..0834860e3 100644
--- a/wz/Map.wz/Map/Map6/670000200.img.xml
+++ b/wz/Map.wz/Map/Map6/670000200.img.xml
@@ -5,8 +5,8 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="670000200"/>
-    <int name="forcedReturn" value="670000200"/>
+    <int name="returnMap" value="680000000"/>
+    <int name="forcedReturn" value="999999999"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/amoria"/>
     <string name="mapMark" value="Wedding"/>
diff --git a/wz/Map.wz/Map/Map6/670010000.img.xml b/wz/Map.wz/Map/Map6/670010000.img.xml
index 8604c0d97..7ff11213f 100644
--- a/wz/Map.wz/Map/Map6/670010000.img.xml
+++ b/wz/Map.wz/Map/Map6/670010000.img.xml
@@ -5,8 +5,8 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="670010000"/>
-    <int name="forcedReturn" value="670010000"/>
+    <int name="returnMap" value="680000000"/>
+    <int name="forcedReturn" value="999999999"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/amoria"/>
     <string name="mapMark" value="Wedding"/>
diff --git a/wz/Map.wz/Map/Map6/670010100.img.xml b/wz/Map.wz/Map/Map6/670010100.img.xml
index 3b4d9d637..725ecce91 100644
--- a/wz/Map.wz/Map/Map6/670010100.img.xml
+++ b/wz/Map.wz/Map/Map6/670010100.img.xml
@@ -4,11 +4,11 @@
     <string name="bgm" value="BgmGL/Amorianchallenge"/>
     <int name="cloud" value="0"/>
     <int name="swim" value="0"/>
-    <int name="forcedReturn" value="670010100"/>
+    <int name="forcedReturn" value="999999999"/>
     <int name="hideMinimap" value="0"/>
     <string name="mapMark" value="Wedding"/>
     <float name="mobRate" value="1.0"/>
-    <int name="returnMap" value="670010100"/>
+    <int name="returnMap" value="670010000"/>
     <int name="town" value="0"/>
     <int name="version" value="10"/>
     <int name="fieldLimit" value="360"/>
diff --git a/wz/Map.wz/Map/Map6/670011000.img.xml b/wz/Map.wz/Map/Map6/670011000.img.xml
index bfddee938..f69f1064b 100644
--- a/wz/Map.wz/Map/Map6/670011000.img.xml
+++ b/wz/Map.wz/Map/Map6/670011000.img.xml
@@ -5,7 +5,7 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="670011000"/>
+    <int name="returnMap" value="670010000"/>
     <int name="forcedReturn" value="670011000"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="BgmGL/Amorianchallenge"/>
diff --git a/wz/Map.wz/Map/Map6/674030100.img.xml b/wz/Map.wz/Map/Map6/674030100.img.xml
index ec9a6301a..8d9b00908 100644
--- a/wz/Map.wz/Map/Map6/674030100.img.xml
+++ b/wz/Map.wz/Map/Map6/674030100.img.xml
@@ -5,7 +5,7 @@
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
     <int name="swim" value="0"/>
-    <int name="returnMap" value="100000000"/>
+    <int name="returnMap" value="999999999"/>
     <int name="forcedReturn" value="999999999"/>
     <float name="mobRate" value="1.0"/>
     <string name="bgm" value="Bgm10/BizarreTales"/>
diff --git a/wz/Map.wz/Map/Map6/680010000.img.xml b/wz/Map.wz/Map/Map6/680010000.img.xml
index c936ce91d..1664774d2 100644
--- a/wz/Map.wz/Map/Map6/680010000.img.xml
+++ b/wz/Map.wz/Map/Map6/680010000.img.xml
@@ -4,11 +4,11 @@
     <int name="version" value="10"/>
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
-    <int name="returnMap" value="680010000"/>
+    <int name="returnMap" value="680000000"/>
     <float name="mobRate" value="1.499998"/>
     <string name="bgm" value="BgmGL/amoria"/>
     <string name="mapDesc" value=""/>
-    <int name="forcedReturn" value="680010000"/>
+    <int name="forcedReturn" value="999999999"/>
     <string name="mapMark" value="Wedding"/>
     <int name="swim" value="0"/>
     <int name="hideMinimap" value="0"/>
diff --git a/wz/Map.wz/Map/Map6/680010100.img.xml b/wz/Map.wz/Map/Map6/680010100.img.xml
index 0525e0374..44ce42405 100644
--- a/wz/Map.wz/Map/Map6/680010100.img.xml
+++ b/wz/Map.wz/Map/Map6/680010100.img.xml
@@ -4,11 +4,11 @@
     <int name="version" value="10"/>
     <int name="cloud" value="0"/>
     <int name="town" value="0"/>
-    <int name="returnMap" value="680010100"/>
+    <int name="returnMap" value="680000000"/>
     <float name="mobRate" value="1.499998"/>
     <string name="bgm" value="BgmGL/amoria"/>
     <string name="mapDesc" value=""/>
-    <int name="forcedReturn" value="680010100"/>
+    <int name="forcedReturn" value="999999999"/>
     <string name="mapMark" value="Wedding"/>
     <int name="swim" value="0"/>
     <int name="hideMinimap" value="0"/>
diff --git a/wz/Map.wz/WorldMap/WorldMap.img.xml b/wz/Map.wz/WorldMap/WorldMap.img.xml
index 76e492d83..aa9971e37 100644
--- a/wz/Map.wz/WorldMap/WorldMap.img.xml
+++ b/wz/Map.wz/WorldMap/WorldMap.img.xml
@@ -233,7 +233,7 @@
       </imgdir>
       <vector name="spot" x="-273" y="-99"/>
       <canvas name="path" width="287" height="116">
-        <vector name="origin" x="284" y="204"/>
+        <vector name="origin" x="284" y="205"/>
         <int name="z" value="2"/>
       </canvas>
     </imgdir>
@@ -580,7 +580,7 @@
         <int name="98" value="300010200"/>
       </imgdir>
       <canvas name="path" width="59" height="119">
-        <vector name="origin" x="-282" y="-199"/>
+        <vector name="origin" x="60" y="102"/>
         <int name="z" value="2"/>
       </canvas>
     </imgdir>
@@ -1025,7 +1025,7 @@
       </imgdir>
       <vector name="spot" x="-8" y="-152"/>
       <canvas name="path" width="287" height="116">
-        <vector name="origin" x="284" y="204"/>
+        <vector name="origin" x="286" y="205"/>
         <int name="z" value="2"/>
       </canvas>
     </imgdir>
@@ -1116,6 +1116,135 @@
       <vector name="spot" x="20" y="-175"/>
       <int name="type" value="3"/>
     </imgdir>
+    <imgdir name="30">
+      <imgdir name="mapNo">
+        <int name="0" value="600000000"/>
+        <int name="1" value="600000001"/>
+        <int name="10" value="600020000"/>
+        <int name="11" value="600020100"/>
+        <int name="12" value="600020200"/>
+        <int name="13" value="600020300"/>
+        <int name="14" value="600020400"/>
+        <int name="15" value="600020500"/>
+        <int name="16" value="600020600"/>
+        <int name="2" value="600010000"/>
+        <int name="3" value="600010001"/>
+        <int name="4" value="600010100"/>
+        <int name="5" value="600010200"/>
+        <int name="6" value="600010300"/>
+        <int name="7" value="600010400"/>
+        <int name="8" value="600010500"/>
+        <int name="9" value="600010600"/>
+      </imgdir>
+      <int name="type" value="3"/>
+      <vector name="spot" x="-222" y="-150"/>
+      <canvas name="path" width="72" height="88">
+        <int name="z" value="2"/>
+        <vector name="origin" x="282" y="174"/>
+      </canvas>
+    </imgdir>
+    <imgdir name="31">
+      <imgdir name="mapNo">
+        <int name="0" value="610010003"/>
+        <int name="1" value="610010001"/>
+        <int name="10" value="610010100"/>
+        <int name="11" value="610010101"/>
+        <int name="12" value="610010102"/>
+        <int name="13" value="610010103"/>
+        <int name="14" value="610010104"/>
+        <int name="15" value="610010200"/>
+        <int name="16" value="610010201"/>
+        <int name="17" value="610010202"/>
+        <int name="18" value="610020000"/>
+        <int name="19" value="610020001"/>
+        <int name="2" value="610010002"/>
+        <int name="20" value="610020002"/>
+        <int name="21" value="610020003"/>
+        <int name="22" value="610020004"/>
+        <int name="23" value="610020005"/>
+        <int name="24" value="610020010"/>
+        <int name="25" value="610020011"/>
+        <int name="26" value="610020012"/>
+        <int name="27" value="610020013"/>
+        <int name="28" value="610020014"/>
+        <int name="29" value="610020015"/>
+        <int name="3" value="610010000"/>
+        <int name="4" value="610010004"/>
+        <int name="5" value="610010005"/>
+        <int name="6" value="610010010"/>
+        <int name="7" value="610010011"/>
+        <int name="8" value="610010012"/>
+        <int name="9" value="610010013"/>
+      </imgdir>
+      <int name="type" value="3"/>
+      <vector name="spot" x="-233" y="-156"/>
+    </imgdir>
+    <imgdir name="32">
+      <imgdir name="mapNo">
+        <int name="0" value="610020006"/>
+        <int name="1" value="610030000"/>
+        <int name="2" value="610030010"/>
+        <int name="3" value="610030011"/>
+        <int name="4" value="610030012"/>
+        <int name="5" value="610030013"/>
+        <int name="6" value="610030014"/>
+        <int name="7" value="610030015"/>
+        <int name="8" value="610030020"/>
+      </imgdir>
+      <int name="type" value="3"/>
+      <vector name="spot" x="-243" y="-158"/>
+    </imgdir>
+    <imgdir name="33">
+      <imgdir name="mapNo">
+        <int name="0" value="682000000"/>
+        <int name="1" value="682000001"/>
+        <int name="10" value="682000306"/>
+        <int name="11" value="682000400"/>
+        <int name="12" value="682000401"/>
+        <int name="13" value="682000402"/>
+        <int name="14" value="682000403"/>
+        <int name="15" value="682000404"/>
+        <int name="16" value="682000405"/>
+        <int name="17" value="682000406"/>
+        <int name="18" value="682000500"/>
+        <int name="19" value="682000501"/>
+        <int name="2" value="682000100"/>
+        <int name="20" value="682000502"/>
+        <int name="21" value="682000503"/>
+        <int name="22" value="682000504"/>
+        <int name="23" value="682000505"/>
+        <int name="24" value="682000506"/>
+        <int name="25" value="682000600"/>
+        <int name="26" value="682000601"/>
+        <int name="27" value="682000602"/>
+        <int name="28" value="682000603"/>
+        <int name="29" value="682000604"/>
+        <int name="3" value="682000200"/>
+        <int name="30" value="682000605"/>
+        <int name="31" value="682000606"/>
+        <int name="32" value="682000700"/>
+        <int name="33" value="682000800"/>
+        <int name="34" value="682000900"/>
+        <int name="35" value="682010000"/>
+        <int name="36" value="682010100"/>
+        <int name="37" value="682010001"/>
+        <int name="38" value="682010101"/>
+        <int name="39" value="682010002"/>
+        <int name="4" value="682000300"/>
+        <int name="40" value="682010102"/>
+        <int name="41" value="682010200"/>
+        <int name="42" value="682010201"/>
+        <int name="43" value="682010202"/>
+        <int name="44" value="682010203"/>
+        <int name="5" value="682000301"/>
+        <int name="6" value="682000302"/>
+        <int name="7" value="682000303"/>
+        <int name="8" value="682000304"/>
+        <int name="9" value="682000305"/>
+      </imgdir>
+      <int name="type" value="3"/>
+      <vector name="spot" x="-220" y="-161"/>
+    </imgdir>
   </imgdir>
   <imgdir name="MapLink">
     <imgdir name="0">
@@ -1239,5 +1368,15 @@
       </imgdir>
       <string name="toolTip" value="WorldTour"/>
     </imgdir>
+    <imgdir name="12">
+      <imgdir name="link">
+        <string name="linkMap" value="WorldMap142"/>
+        <canvas name="linkImg" width="44" height="26">
+          <int name="z" value="1"/>
+          <vector name="origin" x="252" y="165"/>
+        </canvas>
+      </imgdir>
+      <string name="toolTip" value="Masteria"/>
+    </imgdir>
   </imgdir>
 </imgdir>
diff --git a/wz/Map.wz/WorldMap/WorldMap141.img.xml b/wz/Map.wz/WorldMap/WorldMap141.img.xml
index d416beff8..be79b84f9 100644
--- a/wz/Map.wz/WorldMap/WorldMap141.img.xml
+++ b/wz/Map.wz/WorldMap/WorldMap141.img.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
 <imgdir name="WorldMap141.img">
   <imgdir name="info">
-    <string name="parentMap" value="WorldMap"/>
+    <string name="parentMap" value="WorldMap142"/>
   </imgdir>
   <imgdir name="BaseImg">
     <canvas name="0" width="640" height="470">
@@ -11,210 +11,101 @@
   </imgdir>
   <imgdir name="MapList">
     <imgdir name="0">
-      <vector name="spot" x="-215" y="-144"/>
+      <vector name="spot" x="-120" y="32"/>
       <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="610020006"/>
+        <int name="0" value="682000305"/>
+        <int name="1" value="682000405"/>
+        <int name="2" value="682000505"/>
+        <int name="3" value="682000605"/>
       </imgdir>
     </imgdir>
     <imgdir name="1">
-      <vector name="spot" x="-247" y="-106"/>
-      <int name="type" value="1"/>
+      <vector name="spot" x="-118" y="111"/>
+      <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="610020005"/>
+        <int name="0" value="682000304"/>
+        <int name="1" value="682000404"/>
+        <int name="2" value="682000504"/>
+        <int name="3" value="682000604"/>
       </imgdir>
     </imgdir>
     <imgdir name="2">
-      <vector name="spot" x="-261" y="-79"/>
-      <int name="type" value="1"/>
+      <vector name="spot" x="-69" y="-41"/>
+      <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="610020003"/>
+        <int name="0" value="682000900"/>
       </imgdir>
     </imgdir>
     <imgdir name="3">
-      <vector name="spot" x="-208" y="-95"/>
-      <int name="type" value="1"/>
+      <vector name="spot" x="-107" y="167"/>
+      <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="610020004"/>
+        <int name="0" value="682000306"/>
+        <int name="1" value="682000406"/>
+        <int name="2" value="682000506"/>
+        <int name="3" value="682000606"/>
       </imgdir>
     </imgdir>
     <imgdir name="4">
-      <vector name="spot" x="-219" y="-70"/>
-      <int name="type" value="1"/>
+      <vector name="spot" x="2" y="169"/>
+      <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="610020002"/>
+        <int name="0" value="682000100"/>
       </imgdir>
     </imgdir>
     <imgdir name="5">
-      <vector name="spot" x="-162" y="-42"/>
-      <int name="type" value="1"/>
+      <vector name="spot" x="3" y="114"/>
+      <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="610020001"/>
+        <int name="0" value="682000300"/>
+        <int name="1" value="682000400"/>
+        <int name="2" value="682000500"/>
+        <int name="3" value="682000600"/>
       </imgdir>
     </imgdir>
     <imgdir name="6">
-      <vector name="spot" x="-197" y="-18"/>
-      <int name="type" value="1"/>
+      <vector name="spot" x="5" y="45"/>
+      <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="610020000"/>
+        <int name="0" value="682000800"/>
       </imgdir>
     </imgdir>
     <imgdir name="7">
-      <vector name="spot" x="-125" y="-2"/>
-      <int name="type" value="1"/>
+      <vector name="spot" x="55" y="-27"/>
+      <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="610010005"/>
+        <int name="0" value="682000200"/>
       </imgdir>
     </imgdir>
     <imgdir name="8">
-      <vector name="spot" x="-176" y="39"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="610010004"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="9">
-      <vector name="spot" x="-88" y="21"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="610010002"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="10">
-      <vector name="spot" x="-57" y="-19"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="610010200"/>
-        <int name="1" value="610010201"/>
-        <int name="2" value="610010202"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="11">
-      <vector name="spot" x="9" y="-27"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="610010001"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="12">
-      <vector name="spot" x="-37" y="49"/>
+      <vector name="spot" x="151" y="28"/>
       <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000000"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="13">
-      <vector name="spot" x="50" y="25"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="610010000"/>
+        <int name="0" value="682000301"/>
+        <int name="1" value="682000401"/>
+        <int name="2" value="682000501"/>
+        <int name="3" value="682000601"/>
       </imgdir>
     </imgdir>
-    <imgdir name="14">
-      <vector name="spot" x="83" y="105"/>
+    <imgdir name="9">
+      <vector name="spot" x="145" y="115"/>
       <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="600020000"/>
-        <int name="1" value="600020100"/>
-        <int name="2" value="600020200"/>
-        <int name="3" value="600020300"/>
-        <int name="4" value="600020400"/>
-        <int name="5" value="600020500"/>
-        <int name="6" value="600020600"/>
+        <int name="0" value="682000303"/>
+        <int name="1" value="682000403"/>
+        <int name="2" value="682000503"/>
+        <int name="3" value="682000603"/>
       </imgdir>
     </imgdir>
-    <imgdir name="15">
-      <vector name="spot" x="161" y="137"/>
+    <imgdir name="10">
+      <vector name="spot" x="120" y="171"/>
       <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="600010001"/>
-        <int name="1" value="600010002"/>
-        <int name="2" value="600000000"/>
-        <int name="3" value="600000001"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="16">
-      <vector name="spot" x="238" y="30"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600010100"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="17">
-      <vector name="spot" x="287" y="2"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600010300"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="18">
-      <vector name="spot" x="206" y="-15"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600010200"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="19">
-      <vector name="spot" x="189" y="-57"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600010400"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="20">
-      <vector name="spot" x="233" y="-94"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600010500"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="21">
-      <vector name="spot" x="187" y="-129"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600010600"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="22">
-      <vector name="spot" x="-97" y="116"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600020100"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="23">
-      <vector name="spot" x="-137" y="116"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600020300"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="24">
-      <vector name="spot" x="-137" y="146"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600020200"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="25">
-      <vector name="spot" x="-176" y="146"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600020600"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="26">
-      <vector name="spot" x="-137" y="177"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600020400"/>
-      </imgdir>
-    </imgdir>
-    <imgdir name="27">
-      <vector name="spot" x="-176" y="177"/>
-      <int name="type" value="1"/>
-      <imgdir name="mapNo">
-        <int name="0" value="600020500"/>
+        <int name="0" value="682000302"/>
+        <int name="1" value="682000402"/>
+        <int name="2" value="682000502"/>
+        <int name="3" value="682000602"/>
       </imgdir>
     </imgdir>
   </imgdir>
diff --git a/wz/Map.wz/WorldMap/WorldMap142.img.xml b/wz/Map.wz/WorldMap/WorldMap142.img.xml
index fd34972aa..357f16d8c 100644
--- a/wz/Map.wz/WorldMap/WorldMap142.img.xml
+++ b/wz/Map.wz/WorldMap/WorldMap142.img.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
 <imgdir name="WorldMap142.img">
   <imgdir name="info">
-    <string name="parentMap" value="WorldMap141"/>
+    <string name="parentMap" value="WorldMap"/>
   </imgdir>
   <imgdir name="BaseImg">
     <canvas name="0" width="640" height="470">
@@ -11,101 +11,261 @@
   </imgdir>
   <imgdir name="MapList">
     <imgdir name="0">
-      <vector name="spot" x="-120" y="32"/>
+      <vector name="spot" x="-215" y="-144"/>
       <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000305"/>
-        <int name="1" value="682000405"/>
-        <int name="2" value="682000505"/>
-        <int name="3" value="682000605"/>
+        <int name="0" value="610020006"/>
+        <int name="1" value="610030010"/>
+        <int name="2" value="610030011"/>
+        <int name="3" value="610030012"/>
+        <int name="4" value="610030013"/>
+        <int name="5" value="610030014"/>
+        <int name="6" value="610030015"/>
+        <int name="7" value="610030020"/>
+        <int name="8" value="610030000"/>
       </imgdir>
     </imgdir>
     <imgdir name="1">
-      <vector name="spot" x="-118" y="111"/>
-      <int name="type" value="0"/>
+      <vector name="spot" x="-247" y="-106"/>
+      <int name="type" value="1"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000304"/>
-        <int name="1" value="682000404"/>
-        <int name="2" value="682000504"/>
-        <int name="3" value="682000604"/>
+        <int name="0" value="610020005"/>
       </imgdir>
     </imgdir>
     <imgdir name="2">
-      <vector name="spot" x="-69" y="-41"/>
-      <int name="type" value="0"/>
+      <vector name="spot" x="-261" y="-79"/>
+      <int name="type" value="1"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000900"/>
+        <int name="0" value="610020003"/>
       </imgdir>
     </imgdir>
     <imgdir name="3">
-      <vector name="spot" x="-107" y="167"/>
-      <int name="type" value="0"/>
+      <vector name="spot" x="-208" y="-95"/>
+      <int name="type" value="1"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000306"/>
-        <int name="1" value="682000406"/>
-        <int name="2" value="682000506"/>
-        <int name="3" value="682000606"/>
+        <int name="0" value="610020004"/>
       </imgdir>
     </imgdir>
     <imgdir name="4">
-      <vector name="spot" x="2" y="169"/>
-      <int name="type" value="0"/>
+      <vector name="spot" x="-219" y="-70"/>
+      <int name="type" value="1"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000100"/>
+        <int name="0" value="610020002"/>
       </imgdir>
     </imgdir>
     <imgdir name="5">
-      <vector name="spot" x="3" y="114"/>
-      <int name="type" value="0"/>
+      <vector name="spot" x="-162" y="-42"/>
+      <int name="type" value="1"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000300"/>
-        <int name="1" value="682000400"/>
-        <int name="2" value="682000500"/>
-        <int name="3" value="682000600"/>
+        <int name="0" value="610020001"/>
       </imgdir>
     </imgdir>
     <imgdir name="6">
-      <vector name="spot" x="5" y="45"/>
-      <int name="type" value="0"/>
+      <vector name="spot" x="-197" y="-18"/>
+      <int name="type" value="1"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000800"/>
+        <int name="0" value="610020000"/>
       </imgdir>
     </imgdir>
     <imgdir name="7">
-      <vector name="spot" x="55" y="-27"/>
-      <int name="type" value="0"/>
+      <vector name="spot" x="-125" y="-2"/>
+      <int name="type" value="1"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000200"/>
+        <int name="0" value="610010005"/>
       </imgdir>
     </imgdir>
     <imgdir name="8">
-      <vector name="spot" x="151" y="28"/>
-      <int name="type" value="0"/>
+      <vector name="spot" x="-176" y="39"/>
+      <int name="type" value="1"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000301"/>
-        <int name="1" value="682000401"/>
-        <int name="2" value="682000501"/>
-        <int name="3" value="682000601"/>
+        <int name="0" value="610010004"/>
       </imgdir>
     </imgdir>
     <imgdir name="9">
-      <vector name="spot" x="145" y="115"/>
-      <int name="type" value="0"/>
+      <vector name="spot" x="-88" y="21"/>
+      <int name="type" value="1"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000303"/>
-        <int name="1" value="682000403"/>
-        <int name="2" value="682000503"/>
-        <int name="3" value="682000603"/>
+        <int name="0" value="610010002"/>
       </imgdir>
     </imgdir>
     <imgdir name="10">
-      <vector name="spot" x="120" y="171"/>
+      <vector name="spot" x="-57" y="-19"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="610010200"/>
+        <int name="1" value="610010201"/>
+        <int name="2" value="610010202"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="11">
+      <vector name="spot" x="9" y="-27"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="610010001"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="12">
+      <vector name="spot" x="-37" y="49"/>
       <int name="type" value="0"/>
       <imgdir name="mapNo">
-        <int name="0" value="682000302"/>
-        <int name="1" value="682000402"/>
-        <int name="2" value="682000502"/>
-        <int name="3" value="682000602"/>
+        <int name="0" value="682000000"/>
+        <int name="1" value="682000200"/>
+        <int name="10" value="682000401"/>
+        <int name="11" value="682000402"/>
+        <int name="12" value="682000403"/>
+        <int name="13" value="682000404"/>
+        <int name="14" value="682000405"/>
+        <int name="15" value="682000406"/>
+        <int name="16" value="682000500"/>
+        <int name="17" value="682000501"/>
+        <int name="18" value="682000502"/>
+        <int name="19" value="682000503"/>
+        <int name="2" value="682000300"/>
+        <int name="20" value="682000504"/>
+        <int name="21" value="682000505"/>
+        <int name="22" value="682000506"/>
+        <int name="23" value="682000600"/>
+        <int name="24" value="682000601"/>
+        <int name="25" value="682000602"/>
+        <int name="26" value="682000603"/>
+        <int name="27" value="682000604"/>
+        <int name="28" value="682000605"/>
+        <int name="29" value="682000606"/>
+        <int name="3" value="682000301"/>
+        <int name="30" value="682000700"/>
+        <int name="31" value="682000800"/>
+        <int name="32" value="682000900"/>
+        <int name="33" value="682010000"/>
+        <int name="34" value="682010100"/>
+        <int name="35" value="682010001"/>
+        <int name="36" value="682010101"/>
+        <int name="37" value="682010002"/>
+        <int name="38" value="682010102"/>
+        <int name="39" value="682010200"/>
+        <int name="4" value="682000302"/>
+        <int name="40" value="682010201"/>
+        <int name="41" value="682010202"/>
+        <int name="42" value="682010203"/>
+        <int name="43" value="682000100"/>
+        <int name="5" value="682000303"/>
+        <int name="6" value="682000304"/>
+        <int name="7" value="682000305"/>
+        <int name="8" value="682000306"/>
+        <int name="9" value="682000400"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="13">
+      <vector name="spot" x="50" y="25"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="610010000"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="14">
+      <vector name="spot" x="83" y="105"/>
+      <int name="type" value="0"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600020000"/>
+        <int name="1" value="600020100"/>
+        <int name="2" value="600020200"/>
+        <int name="3" value="600020300"/>
+        <int name="4" value="600020400"/>
+        <int name="5" value="600020500"/>
+        <int name="6" value="600020600"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="15">
+      <vector name="spot" x="161" y="137"/>
+      <int name="type" value="0"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600010001"/>
+        <int name="1" value="600010002"/>
+        <int name="2" value="600000000"/>
+        <int name="3" value="600000001"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="16">
+      <vector name="spot" x="238" y="30"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600010100"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="17">
+      <vector name="spot" x="287" y="2"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600010300"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="18">
+      <vector name="spot" x="206" y="-15"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600010200"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="19">
+      <vector name="spot" x="189" y="-57"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600010400"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="20">
+      <vector name="spot" x="233" y="-94"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600010500"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="21">
+      <vector name="spot" x="187" y="-129"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600010600"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="22">
+      <vector name="spot" x="-97" y="116"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600020100"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="23">
+      <vector name="spot" x="-137" y="116"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600020300"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="24">
+      <vector name="spot" x="-137" y="146"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600020200"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="25">
+      <vector name="spot" x="-176" y="146"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600020600"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="26">
+      <vector name="spot" x="-137" y="177"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600020400"/>
+      </imgdir>
+    </imgdir>
+    <imgdir name="27">
+      <vector name="spot" x="-176" y="177"/>
+      <int name="type" value="1"/>
+      <imgdir name="mapNo">
+        <int name="0" value="600020500"/>
       </imgdir>
     </imgdir>
   </imgdir>
diff --git a/wz/Quest.wz/QuestInfo.img.xml b/wz/Quest.wz/QuestInfo.img.xml
index 36ddcfb6d..2fd7e02fe 100644
--- a/wz/Quest.wz/QuestInfo.img.xml
+++ b/wz/Quest.wz/QuestInfo.img.xml
@@ -4393,8 +4393,8 @@ You can now begin the &quot;Manji&apos;s Request&quot; quest.
     <string name="name" value="Searching for Fossils"/>
     <string name="parent" value="Winston&apos;s Fossil Dig-up"/>
     <int name="order" value="1"/>
-    <string name="0" value="I heard that #p1022006# the archeologist is searching for something in the Rocky Mountains on the East side of Perion..."/>
-    <string name="1" value="#b#p1022006##k the archeologist who I ran into on the rocky mountains on the east side of Perion said he lost the fossils he collected near Perion. He asked me to bring back #b100 #t4031146##k and #b100 #t4031147##k which #b#o1110100##k and #b#o1130100##k took. How can he lose something so important like that? He is careless than he looks...\n\n#t4031146# #c4031146#/100\n#t4031147# #c4031147#/100"/>
+    <string name="0" value="I heard that #p1022006# the archaeologist is searching for something in the Rocky Mountains on the East side of Perion..."/>
+    <string name="1" value="#b#p1022006##k the archaeologist who I ran into on the rocky mountains on the east side of Perion said he lost the fossils he collected near Perion. He asked me to bring back #b100 #t4031146##k and #b100 #t4031147##k which #b#o1110100##k and #b#o1130100##k took. How can he lose something so important like that? He is careless than he looks...\n\n#t4031146# #c4031146#/100\n#t4031147# #c4031147#/100"/>
     <string name="2" value="I found the fossil which #b#p1022006##k lost."/>
     <int name="area" value="30"/>
   </imgdir>
@@ -4402,8 +4402,8 @@ You can now begin the &quot;Manji&apos;s Request&quot; quest.
     <string name="name" value="Delivering a Box of Fossil"/>
     <string name="parent" value="Winston&apos;s Fossil Dig-up"/>
     <int name="order" value="2"/>
-    <string name="1" value="#b#p1022006# the Archeologist#k said that it is not safe to put the valuable fossils in the tent. He asked me to take the fossil and deliver it to #bDr. #p1032104##k in Ellinia. He also wrote a letter of introduction for me to show him. "/>
-    <string name="2" value="#b#p1022006# the Archeologist#k in Perion said that it is not safe to put the valuable fossils in his tent. He asked me to deliver it to #bDr. #p1032104##k in Ellinia. Dr. Betty said it is going to be really busy from now. He asked me to stop by again and give him a hand afterwards. Fossils huh...? Should I give it a try?"/>
+    <string name="1" value="#b#p1022006# the Archaeologist#k said that it is not safe to put the valuable fossils in the tent. He asked me to take the fossil and deliver it to #bDr. #p1032104##k in Ellinia. He also wrote a letter of introduction for me to show him. "/>
+    <string name="2" value="#b#p1022006# the Archaeologist#k in Perion said that it is not safe to put the valuable fossils in his tent. He asked me to deliver it to #bDr. #p1032104##k in Ellinia. Dr. Betty said it is going to be really busy from now. He asked me to stop by again and give him a hand afterwards. Fossils huh...? Should I give it a try?"/>
     <int name="area" value="30"/>
   </imgdir>
   <imgdir name="2067">
@@ -5419,7 +5419,7 @@ You can now begin the &quot;Manji&apos;s Request&quot; quest.
     <string name="name" value="Truth of the Rumor"/>
     <string name="parent" value="The Old Tree"/>
     <int name="order" value="1"/>
-    <string name="0" value="The archeologist, Doctor #p1022006#, currently does research at a camping site in #m102000000#. He recently called me about a strange rumor he heard. "/>
+    <string name="0" value="The archaeologist, Doctor #p1022006#, currently does research at a camping site in #m102000000#. He recently called me about a strange rumor he heard. "/>
     <string name="1" value="During the excavation, Doctor #p1022006# said he heard a rumor about a very old tree living in #m102000000#. However, he had no clue on what kind of tree it was, or where exactly it was located. That&apos;s why he&apos;s asked me to visit #b#m102000000# village to collect information on this particular tree.#k\n\n#y2148# #b (#u2148#)#k\n#y2149# #b(#u2149#)#k\n#y2150# #b(#u2150#)#k\n#y2151# #b(#u2151#)#k\n#y2152# #b(#u2152#)#k"/>
     <string name="2" value="Told Doctor #p1022006# what the villagers of #m102000000# talked about. Could #o3220000# mentioned by #p1020000# be the same tree Doctor #p1022006# is looking for?"/>
     <int name="area" value="30"/>
@@ -11097,7 +11097,7 @@ Can proceed to the &quot;A Request from Corporal Easy&quot; quest.
     <string name="name" value="The Descendent of the Author of the Book of Ancient"/>
     <string name="parent" value="In Search of the Book of Ancient"/>
     <string name="0" value="I should go see Alcaster of El Nath right now..."/>
-    <string name="1" value="I met #bAlcaster#k, the archeologist, at El Nath. He said he had heard about the #bBook of Ancient#k, which tells about the Great World War, happened hundreds years ago. Interesting... The only living descendant of the author of the &quot;Book of Ancient&quot;  #bHella#k who lives in Orbis. I better go to find her right now~"/>
+    <string name="1" value="I met #bAlcaster#k, the archaeologist, at El Nath. He said he had heard about the #bBook of Ancient#k, which tells about the Great World War, happened hundreds years ago. Interesting... The only living descendant of the author of the &quot;Book of Ancient&quot;  #bHella#k who lives in Orbis. I better go to find her right now~"/>
     <null name="2"/>
     <int name="order" value="1"/>
     <int name="area" value="33"/>
@@ -16897,7 +16897,7 @@ Able to proceed to &apos;Merry-go-round in Kampung&apos; as next quest.
     <string name="name" value="Bruce&apos;s Research"/>
     <string name="0" value="Bruce, the monster researcher, might know something. Maybe he can tell me how old Bob actually is. If I get to know how old he is, wouldn&apos;t that be a discovery of something remarkable?"/>
     <string name="1" value="He does seem to know something about his age but he looks spooked. I shouldn&apos;t hesitate to ask him what is wrong!"/>
-    <string name="2" value="Wow... Bruce told me that Bob&apos;s age is incalculable. This is getting serious, isn&apos;t it. A snail that even professional monster researcher can&apos;t tell the age. Maybe he was right about asking me to go see Winston. Maybe an archeologist knows more about the history and the age issue than Bruce."/>
+    <string name="2" value="Wow... Bruce told me that Bob&apos;s age is incalculable. This is getting serious, isn&apos;t it. A snail that even professional monster researcher can&apos;t tell the age. Maybe he was right about asking me to go see Winston. Maybe an archaeologist knows more about the history and the age issue than Bruce."/>
     <int name="area" value="30"/>
   </imgdir>
   <imgdir name="4937">
@@ -23717,7 +23717,7 @@ Able to proceed to &apos;Merry-go-round in Kampung&apos; as next quest.
     <string name="parent" value="Snow Silk and the Mysterious Fabric "/>
     <int name="order" value="1"/>
     <string name="0" value="Cassandra, maple world&apos;s informant, is said to have obtained some new information hot off the press.  I&apos;m curious what it is. "/>
-    <string name="1" value="Cassandra told me about the Snow Silk.  But for some reason she wouldn&apos;t explain in detail and kept telling me to just go see the archeologist, #bWinston#k..."/>
+    <string name="1" value="Cassandra told me about the Snow Silk.  But for some reason she wouldn&apos;t explain in detail and kept telling me to just go see the archaeologist, #bWinston#k..."/>
     <string name="2" value="Maple world&apos;s informant, Cassandra, notified me of her latest information, the Snow Silk.  I went to go see Winston, the archaeologist who is looking for this Snow Silk."/>
     <int name="area" value="50"/>
   </imgdir>
diff --git a/wz/Quest.wz/Say.img.xml b/wz/Quest.wz/Say.img.xml
index f2407b85e..ec6f82b9e 100644
--- a/wz/Quest.wz/Say.img.xml
+++ b/wz/Quest.wz/Say.img.xml
@@ -7659,7 +7659,7 @@
       </imgdir>
     </imgdir>
     <imgdir name="0">
-      <string name="0" value="Hello, there, nice to meet you. I&apos;m #b#p1022006##k the archeologist, and I&apos;m looking for fossils of the prehistoric life."/>
+      <string name="0" value="Hello, there, nice to meet you. I&apos;m #b#p1022006##k the archaeologist, and I&apos;m looking for fossils of the prehistoric life."/>
       <string name="1" value="Perion may now be a land of dry, rocky mountains, but it used to be a fertile land full of tall trees and lots of creatures, much like Ellinia. Can you believe that? I&apos;m looking for evidences from that era. If you are not busy and all, can you help me out?"/>
       <imgdir name="yes">
         <string name="0" value="Thank you. I ran into something odd yesterday. I went to Perion for some food, and when I came back, I found my tent raided by the monsters. They took my fossils and ran away."/>
@@ -33571,7 +33571,7 @@
     </imgdir>
     <imgdir name="1">
       <string name="0" value="Great work, kid! Ready to hear about the treasure? \n\n#L0##bOk, what else have you discovered?#k#l"/>
-      <string name="1" value="Well, it&apos;s a pretty long list. I always liked history, even when I was a kid. All my other subjects were ok, but I always got straight A&apos;s in History-probably because my dad would kick my butt if I didn&apos;t. That what happens when you grow up with an archeologist for a father. \n\n#L0##bWhat about your family?#k#l"/>
+      <string name="1" value="Well, it&apos;s a pretty long list. I always liked history, even when I was a kid. All my other subjects were ok, but I always got straight A&apos;s in History-probably because my dad would kick my butt if I didn&apos;t. That what happens when you grow up with an archaeologist for a father. \n\n#L0##bWhat about your family?#k#l"/>
       <string name="2" value="You must mean my brother, Jack Barricade. We&apos;ve agreed to something that I&apos;ll tell you about a bit later, but essentially, he&apos;s looking for something in Aqua Road, and I&apos;m searching here. \n\n#L0##bOk, you still haven&apos;t told me what was the first thing you discovered?#k#l"/>
       <string name="3" value="Oh, sorry. It happens sometimes. After college, my brother and I concluded that the only way to live forever was to find the Fountain of Youth. It took 3 years, but we finally found it! \n\n#L0##bNO WAY!#k#l"/>
       <string name="4" value="WAY! \n\n#L0##bThat&apos;s awesome!#k#l"/>
@@ -34352,7 +34352,7 @@
     </imgdir>
     <imgdir name="1">
       <string name="0" value="This is interesting. It might appear to be just another snail shell to you but if you look it up close, the growth rings on this shell are very densely constructed making it practically impossible for human eyes to count them.\r\n\r\n#L0##bWell, I wouldn&apos;t be surprised. He is the Legendary Bob Snale who lived with the history of Maplestory.#k#l"/>
-      <string name="1" value="I wouldn&apos;t know much of a history of this world. But this is a very unique find. I bet Winston the archeologist might know more than I do for this case."/>
+      <string name="1" value="I wouldn&apos;t know much of a history of this world. But this is a very unique find. I bet Winston the archaeologist might know more than I do for this case."/>
       <imgdir name="yes">
         <string name="0" value="Winston is somewhere around Perion researching for the fossils. You might want to check with him about this snail shell. I have to tell you before you go there. Watch out. Winston loves attraction and fame. I&apos;ve heard that from time to time he stole the research of others to take the glory in the past. I hope he is not too interested in the scholastic value of Bob&apos;s snail shell..."/>
       </imgdir>
diff --git a/wz/Skill.wz/910.img.xml b/wz/Skill.wz/910.img.xml
index 2d97ee757..3fa76afcf 100644
--- a/wz/Skill.wz/910.img.xml
+++ b/wz/Skill.wz/910.img.xml
@@ -634,142 +634,6 @@
         <int name="z" value="-1"/>
       </imgdir>
     </imgdir>
-    <imgdir name="9101006">
-      <canvas name="icon" width="32" height="32">
-        <vector name="origin" x="0" y="32"/>
-        <int name="z" value="0"/>
-      </canvas>
-      <canvas name="iconMouseOver" width="32" height="32">
-        <vector name="origin" x="0" y="32"/>
-        <int name="z" value="0"/>
-      </canvas>
-      <canvas name="iconDisabled" width="32" height="32">
-        <vector name="origin" x="0" y="32"/>
-        <int name="z" value="0"/>
-      </canvas>
-      <imgdir name="action">
-        <string name="0" value="alert3"/>
-      </imgdir>
-      <imgdir name="level">
-        <imgdir name="1">
-          <string name="hs" value="h1"/>
-          <vector name="lt" x="-400" y="-350"/>
-          <vector name="rb" x="400" y="250"/>
-          <int name="mobCount" value="15"/>
-          <int name="damage" value="1000"/>
-        </imgdir>
-      </imgdir>
-      <imgdir name="effect">
-        <canvas name="0" width="178" height="181">
-          <vector name="origin" x="89" y="136"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="1" width="167" height="167">
-          <vector name="origin" x="83" y="130"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="2" width="218" height="216">
-          <vector name="origin" x="109" y="154"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="3" width="212" height="210">
-          <vector name="origin" x="105" y="152"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="4" width="202" height="206">
-          <vector name="origin" x="99" y="151"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="5" width="200" height="200">
-          <vector name="origin" x="100" y="147"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="6" width="203" height="235">
-          <vector name="origin" x="101" y="131"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="7" width="211" height="215">
-          <vector name="origin" x="105" y="131"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="8" width="217" height="187">
-          <vector name="origin" x="108" y="131"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="9" width="219" height="182">
-          <vector name="origin" x="109" y="143"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="10" width="215" height="170">
-          <vector name="origin" x="107" y="131"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="11" width="215" height="182">
-          <vector name="origin" x="107" y="138"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="12" width="215" height="206">
-          <vector name="origin" x="107" y="151"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="13" width="220" height="220">
-          <vector name="origin" x="110" y="156"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="14" width="241" height="252">
-          <vector name="origin" x="120" y="172"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="15" width="209" height="190">
-          <vector name="origin" x="104" y="140"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="16" width="201" height="204">
-          <vector name="origin" x="100" y="147"/>
-          <int name="delay" value="80"/>
-        </canvas>
-        <canvas name="17" width="216" height="221">
-          <vector name="origin" x="108" y="155"/>
-          <int name="delay" value="80"/>
-        </canvas>
-      </imgdir>
-      <imgdir name="hit">
-        <imgdir name="0">
-          <canvas name="0" width="62" height="64">
-            <vector name="origin" x="31" y="32"/>
-            <int name="delay" value="120"/>
-          </canvas>
-          <canvas name="1" width="94" height="94">
-            <vector name="origin" x="46" y="46"/>
-            <int name="delay" value="120"/>
-          </canvas>
-          <canvas name="2" width="104" height="105">
-            <vector name="origin" x="53" y="52"/>
-            <int name="delay" value="120"/>
-          </canvas>
-        </imgdir>
-      </imgdir>
-    </imgdir>
-    <imgdir name="9101007">
-      <canvas name="icon" width="32" height="32">
-        <vector name="origin" x="0" y="32"/>
-        <int name="z" value="0"/>
-      </canvas>
-      <canvas name="iconMouseOver" width="32" height="32">
-        <vector name="origin" x="0" y="32"/>
-        <int name="z" value="0"/>
-      </canvas>
-      <canvas name="iconDisabled" width="32" height="32">
-        <vector name="origin" x="0" y="32"/>
-        <int name="z" value="0"/>
-      </canvas>
-      <imgdir name="level">
-        <imgdir name="1">
-          <string name="hs" value="h1"/>
-          <int name="range" value="150"/>
-        </imgdir>
-      </imgdir>
-    </imgdir>
     <imgdir name="9101008">
       <canvas name="icon" width="32" height="32">
         <vector name="origin" x="0" y="32"/>
diff --git a/wz/String.wz/Consume.img.xml b/wz/String.wz/Consume.img.xml
index b4615334d..070f3b902 100644
--- a/wz/String.wz/Consume.img.xml
+++ b/wz/String.wz/Consume.img.xml
@@ -3604,19 +3604,19 @@
     <string name="desc" value="Improves jump on pet equip.\nSuccess rate:10%, jump+3. The success rate of this scroll can be enhanced by Vega&apos;s Spell."/>
   </imgdir>
   <imgdir name="2048006">
-    <string name="name" value="Scroll for Speed for Pet Equip."/>
+    <string name="name" value="Scroll for Pet Equip. for Speed"/>
     <string name="desc" value="Improves speed on Pet Equip. nSuccess rate:65%, speed+2"/>
   </imgdir>
   <imgdir name="2048007">
-    <string name="name" value="Scroll for Speed for Pet Equip."/>
+    <string name="name" value="Scroll for Pet Equip. for Speed"/>
     <string name="desc" value="Improves speed on Pet Equip. nSuccess rate:15%, speed+3"/>
   </imgdir>
   <imgdir name="2048008">
-    <string name="name" value="Scroll for jump for Pet Equip."/>
+    <string name="name" value="Scroll for Pet Equip. for Jump"/>
     <string name="desc" value="Improves jump on Pet equip. nSuccess rate:65%, jump+2"/>
   </imgdir>
   <imgdir name="2048009">
-    <string name="name" value="Scroll for jump for Pet Equip."/>
+    <string name="name" value="Scroll for Pet Equip. for Jump"/>
     <string name="desc" value="Improves jump on Pet equip. nSuccess rate:15%, jump+3"/>
   </imgdir>
   <imgdir name="2048010">
diff --git a/wz/String.wz/Eqp.img.xml b/wz/String.wz/Eqp.img.xml
index e5dd35ff9..72038930e 100644
--- a/wz/String.wz/Eqp.img.xml
+++ b/wz/String.wz/Eqp.img.xml
@@ -1218,12 +1218,12 @@
         <string name="name" value="Wind Bell Earrings"/>
       </imgdir>
       <imgdir name="1022088">
-        <string name="name" value="Archeologist Glasses"/>
-        <string name="desc" value="A pair of Archeologist Glasses received for participating in the Artifact Hunt."/>
+        <string name="name" value="Archaeologist Glasses"/>
+        <string name="desc" value="A pair of Archaeologist Glasses received for participating in the Artifact Hunt."/>
       </imgdir>
       <imgdir name="1022089">
-        <string name="name" value="Archeologist Glasses"/>
-        <string name="desc" value="A pair of Archeologist Glasses received for finishing Top 10 in the Artifact Hunt."/>
+        <string name="name" value="Archaeologist Glasses"/>
+        <string name="desc" value="A pair of Archaeologist Glasses received for finishing Top 10 in the Artifact Hunt."/>
       </imgdir>
       <imgdir name="1132005">
         <string name="name" value="White Cookie Belt"/>
@@ -1523,8 +1523,8 @@
         <string name="name" value="Alphabet Glasses"/>
       </imgdir>
       <imgdir name="1022103">
-        <string name="name" value="Archeologist Glasses"/>
-        <string name="desc" value="A pair of Archeologist Glasses received for participating in the Artifact Hunt."/>
+        <string name="name" value="Archaeologist Glasses"/>
+        <string name="desc" value="A pair of Archaeologist Glasses received for participating in the Artifact Hunt."/>
       </imgdir>
       <imgdir name="1022104">
         <string name="name" value="3D Glasses"/>
@@ -4162,12 +4162,12 @@
         <string name="name" value="Pink Bean Hat "/>
       </imgdir>
       <imgdir name="1002980">
-        <string name="name" value="Archeologist Hat"/>
-        <string name="desc" value="An archeologist hat received for participating in the Artifact Hunt."/>
+        <string name="name" value="Archaeologist Hat"/>
+        <string name="desc" value="An archaeologist hat received for participating in the Artifact Hunt."/>
       </imgdir>
       <imgdir name="1002981">
-        <string name="name" value="Archeologist Hat"/>
-        <string name="desc" value="An archeologist hat received for finishing Top 10 in the Artifact Hunt."/>
+        <string name="name" value="Archaeologist Hat"/>
+        <string name="desc" value="An archaeologist hat received for finishing Top 10 in the Artifact Hunt."/>
       </imgdir>
       <imgdir name="1003023">
         <string name="name" value="Targar Hat(INT)"/>
@@ -4340,8 +4340,8 @@
         <string name="name" value="Mini Crown"/>
       </imgdir>
       <imgdir name="1003073">
-        <string name="name" value="Archeologist Hat"/>
-        <string name="desc" value="An archeologist hat received for participating in the Artifact Hunt."/>
+        <string name="name" value="Archaeologist Hat"/>
+        <string name="desc" value="An archaeologist hat received for participating in the Artifact Hunt."/>
       </imgdir>
     </imgdir>
     <imgdir name="Cape">
diff --git a/wz/String.wz/Etc.img.xml b/wz/String.wz/Etc.img.xml
index 62b174a73..7b2c617dd 100644
--- a/wz/String.wz/Etc.img.xml
+++ b/wz/String.wz/Etc.img.xml
@@ -3150,7 +3150,7 @@
     </imgdir>
     <imgdir name="4031148">
       <string name="name" value="Winston&apos;s Recommendation"/>
-      <string name="desc" value="A letter of recommendation from Winston the Archeologist. Need to deliver this to Dr. Betty of Ellinia."/>
+      <string name="desc" value="A letter of recommendation from Winston the Archaeologist. Need to deliver this to Dr. Betty of Ellinia."/>
     </imgdir>
     <imgdir name="4031149">
       <string name="name" value="Fossil Box"/>
diff --git a/wz/String.wz/Npc.img.xml b/wz/String.wz/Npc.img.xml
index 6f6161452..d8a393883 100644
--- a/wz/String.wz/Npc.img.xml
+++ b/wz/String.wz/Npc.img.xml
@@ -374,7 +374,7 @@
     <string name="s0" value="The fossils contain important information from the past."/>
     <string name="s1" value="Do you think I can ... recover all that data that I&apos;ve lost?"/>
     <string name="n0" value="Look around the cliff and you may be able to find the fossils."/>
-    <string name="d0" value="I&apos;m Winston the archeologist."/>
+    <string name="d0" value="I&apos;m Winston the archaeologist."/>
     <string name="d1" value="You&apos;re the one that helped me out the other day. Unfortunately I&apos;m really busy right this minute. I&apos;ll talk to you later."/>
   </imgdir>
   <imgdir name="1022007">
diff --git a/wz/String.wz/Skill.img.xml b/wz/String.wz/Skill.img.xml
index 54f08f016..eba9f463a 100644
--- a/wz/String.wz/Skill.img.xml
+++ b/wz/String.wz/Skill.img.xml
@@ -4757,66 +4757,56 @@
   </imgdir>
   <imgdir name="9001000">
     <string name="name" value="Haste (Normal)"/>
-    <string name="desc" value="[Master Level : 1]\n Haste"/>
+    <string name="desc" value="[Master Level : 1]\n GM Haste"/>
     <string name="h1" value="Moving Speed + 40, Jump + 20 for 30 Minutes (Only for self)"/>
   </imgdir>
   <imgdir name="9001001">
     <string name="name" value="Super Dragon Roar"/>
-    <string name="desc" value="[Master Level : 1]\n Super Dragon Roar"/>
+    <string name="desc" value="[Master Level : 1]\n GM Super Dragon Roar"/>
     <string name="h1" value="Damage 1000%, Full Screen Attack"/>
   </imgdir>
   <imgdir name="9001002">
     <string name="name" value="Teleport"/>
-    <string name="desc" value="[Master Level : 1]\n Teleport"/>
-    <string name="h1" value="Teleport "/>
+    <string name="desc" value="[Master Level : 1]\n GM Teleport"/>
+    <string name="h1" value="Teleport yourself."/>
   </imgdir>
   <imgdir name="910">
     <string name="bookName" value="Admin. Skill Book (Super)"/>
   </imgdir>
   <imgdir name="9101000">
     <string name="name" value="Heal + Dispel"/>
-    <string name="desc" value="[Master Level : 1]\nHeal + Dispel"/>
-    <string name="h1" value="Heal + Dispel"/>
+    <string name="desc" value="[Master Level : 1]\n GM Heal + Dispel"/>
+    <string name="h1" value="Heal and Dispel nearby players."/>
   </imgdir>
   <imgdir name="9101001">
     <string name="name" value="Haste (Super)"/>
-    <string name="desc" value="[Master Level : 1]\n Haste"/>
+    <string name="desc" value="[Master Level : 1]\n GM Haste"/>
     <string name="h1" value="Moving Speed + 40, Jump + 20 for 30 Minutes"/>
   </imgdir>
   <imgdir name="9101002">
     <string name="name" value="Holy Symbol"/>
-    <string name="desc" value="[Master Level : 1]\n Holy Symbol"/>
+    <string name="desc" value="[Master Level : 1]\n GM Holy Symbol"/>
     <string name="h1" value="EXP 150% for 30 Minutes"/>
   </imgdir>
   <imgdir name="9101003">
     <string name="name" value="Bless"/>
-    <string name="desc" value="[Master Level : 1]\n Bless"/>
+    <string name="desc" value="[Master Level : 1]\n GM Bless"/>
     <string name="h1" value="Attack &amp; Magic Attack + 20, Others + 100 for 30 Minutes"/>
   </imgdir>
   <imgdir name="9101004">
     <string name="name" value="Hide"/>
-    <string name="desc" value="[Master Level : 1]\n Hide"/>
-    <string name="h1" value="Hide"/>
+    <string name="desc" value="[Master Level : 1]\n GM Hide"/>
+    <string name="h1" value="Hide yourself."/>
   </imgdir>
   <imgdir name="9101005">
     <string name="name" value="Resurrection"/>
-    <string name="desc" value="[Master Level : 1]\n Resurrection"/>
-    <string name="h1" value="Ressurect"/>
-  </imgdir>
-  <imgdir name="9101006">
-    <string name="name" value="Super Dragon Roar"/>
-    <string name="desc" value="[Master Level : 1]\n Super Dragon Roar"/>
-    <string name="h1" value="Damage 1000%, Full Screen Attack"/>
-  </imgdir>
-  <imgdir name="9101007">
-    <string name="name" value="Teleport"/>
-    <string name="desc" value="[Master Level : 1]\n Teleport"/>
-    <string name="h1" value="Teleport "/>
+    <string name="desc" value="[Master Level : 1]\n GM Resurrection"/>
+    <string name="h1" value="Ressurect nearby players."/>
   </imgdir>
   <imgdir name="9101008">
     <string name="name" value="Hyper Body"/>
-    <string name="desc" value="[Master Level : 1]\nIncrease the Max HP and Max MP for 15 mins."/>
-    <string name="h1" value="Max HP, Max MP 60% increase."/>
+    <string name="desc" value="[Master Level : 1]\n GM Hyper Body"/>
+    <string name="h1" value="Max HP, Max MP 60% increase on players nearby for 15 mins."/>
   </imgdir>
   <imgdir name="0001005">
     <string name="name" value="Echo of Hero"/>
@@ -11675,28 +11665,28 @@
   </imgdir>
   <imgdir name="9001003">
     <string name="name" value="Bless"/>
-    <string name="desc" value="[Master Level:1]\nIncreases all abilities of those around you for 15 minutes."/>
+    <string name="desc" value="[Master Level:1]\n GM Bless"/>
     <string name="h1" value="Attack and Magic Ability +20, and other abilities +100 for 30 minutes."/>
   </imgdir>
   <imgdir name="9001004">
     <string name="name" value="Hide"/>
-    <string name="desc" value="[Master Level : 1]\n Hide"/>
-    <string name="h1" value="Hide"/>
+    <string name="desc" value="[Master Level : 1]\n GM Hide"/>
+    <string name="h1" value="Hide yourself."/>
   </imgdir>
   <imgdir name="9001005">
     <string name="name" value="Resurrection"/>
-    <string name="desc" value="[Master Level : 1]\n Resurrection"/>
-    <string name="h1" value="Ressurect"/>
+    <string name="desc" value="[Master Level : 1]\n GM Resurrection"/>
+    <string name="h1" value="Ressurect nearby players."/>
   </imgdir>
   <imgdir name="9001006">
     <string name="name" value="Super Dragon Roar"/>
-    <string name="desc" value="[Master Level : 1]\n Super Dragon Roar"/>
+    <string name="desc" value="[Master Level : 1]\n GM Super Dragon Roar"/>
     <string name="h1" value="Damage 1000%, Full Screen Attack"/>
   </imgdir>
   <imgdir name="9001007">
     <string name="name" value="Teleport"/>
-    <string name="desc" value="[Master Level : 1]\n Teleport"/>
-    <string name="h1" value="Teleport "/>
+    <string name="desc" value="[Master Level : 1]\n GM Teleport"/>
+    <string name="h1" value="Teleport yourself."/>
   </imgdir>
   <imgdir name="9001009">
     <string name="name" value="ADMIN_ANTIMACRO"/>
@@ -11705,8 +11695,8 @@
   </imgdir>
   <imgdir name="9001008">
     <string name="name" value="Hyper Body"/>
-    <string name="desc" value="[Master Level:1]\nMax HP, Max MP increases for 15 minutes."/>
-    <string name="h1" value="Max HP, Max MP 60% increase."/>
+    <string name="desc" value="[Master Level:1]\n GM Hyper Body"/>
+    <string name="h1" value="Max HP, Max MP 60% increase on players nearby for 15 minutes."/>
   </imgdir>
   <imgdir name="10001014">
     <string name="name" value="Spaceship"/>
